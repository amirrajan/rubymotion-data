<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='SCNMatrix4' type='{SCNMatrix4=&quot;m11&quot;f&quot;m12&quot;f&quot;m13&quot;f&quot;m14&quot;f&quot;m21&quot;f&quot;m22&quot;f&quot;m23&quot;f&quot;m24&quot;f&quot;m31&quot;f&quot;m32&quot;f&quot;m33&quot;f&quot;m34&quot;f&quot;m41&quot;f&quot;m42&quot;f&quot;m43&quot;f&quot;m44&quot;f}'>
<field declared_type='float' name='m11' type='f'/>
<field declared_type='float' name='m12' type='f'/>
<field declared_type='float' name='m13' type='f'/>
<field declared_type='float' name='m14' type='f'/>
<field declared_type='float' name='m21' type='f'/>
<field declared_type='float' name='m22' type='f'/>
<field declared_type='float' name='m23' type='f'/>
<field declared_type='float' name='m24' type='f'/>
<field declared_type='float' name='m31' type='f'/>
<field declared_type='float' name='m32' type='f'/>
<field declared_type='float' name='m33' type='f'/>
<field declared_type='float' name='m34' type='f'/>
<field declared_type='float' name='m41' type='f'/>
<field declared_type='float' name='m42' type='f'/>
<field declared_type='float' name='m43' type='f'/>
<field declared_type='float' name='m44' type='f'/>
</struct>
<struct name='SCNQuaternion' type='{SCNVector4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
<field declared_type='float' name='w' type='f'/>
</struct>
<struct name='SCNVector3' type='{SCNVector3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
</struct>
<struct name='SCNVector4' type='{SCNVector4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
<field declared_type='float' name='w' type='f'/>
</struct>
<struct name='vector_float2' type='{_vector_float2=&quot;x&quot;f&quot;y&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
</struct>
<struct name='vector_float3' type='{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
</struct>
<struct name='vector_float4' type='{_vector_float4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
<field declared_type='float' name='w' type='f'/>
</struct>
<struct name='vector_int2' type='{_vector_int2=&quot;x&quot;i&quot;y&quot;i}'>
<field declared_type='int' name='x' type='i'/>
<field declared_type='int' name='y' type='i'/>
</struct>
<struct name='vector_int4' type='{_vector_int4=&quot;x&quot;i&quot;y&quot;i&quot;z&quot;i&quot;w&quot;i}'>
<field declared_type='int' name='x' type='i'/>
<field declared_type='int' name='y' type='i'/>
<field declared_type='int' name='z' type='i'/>
<field declared_type='int' name='w' type='i'/>
</struct>
<struct name='vector_uint2' type='{_vector_uint2=&quot;x&quot;I&quot;y&quot;I}'>
<field declared_type='unsigned int' name='x' type='I'/>
<field declared_type='unsigned int' name='y' type='I'/>
</struct>
<struct name='vector_uint3' type='{_vector_uint3=&quot;x&quot;I&quot;y&quot;I&quot;z&quot;I}'>
<field declared_type='unsigned int' name='x' type='I'/>
<field declared_type='unsigned int' name='y' type='I'/>
<field declared_type='unsigned int' name='z' type='I'/>
</struct>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNConsistencyElementIDErrorKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNConsistencyElementTypeErrorKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNConsistencyLineNumberErrorKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNDetailedErrorsKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNErrorDomain' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticBoneIndices' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticBoneWeights' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticColor' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticEdgeCrease' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticNormal' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticTangent' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticTexcoord' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticVertex' type='@'/>
<constant const='true' declared_type='SCNGeometrySourceSemantic _Nonnull' name='SCNGeometrySourceSemanticVertexCrease' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestBackFaceCullingKey' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestBoundingBoxOnlyKey' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestClipToZRangeKey' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestFirstFoundOnlyKey' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestIgnoreChildNodesKey' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestIgnoreHiddenNodesKey' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestOptionCategoryBitMask' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestOptionSearchMode' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestRootNodeKey' type='@'/>
<constant const='true' declared_type='SCNHitTestOption _Nonnull' name='SCNHitTestSortResultsKey' type='@'/>
<constant const='true' declared_type='SCNLightType _Nonnull' name='SCNLightTypeAmbient' type='@'/>
<constant const='true' declared_type='SCNLightType _Nonnull' name='SCNLightTypeDirectional' type='@'/>
<constant const='true' declared_type='SCNLightType _Nonnull' name='SCNLightTypeIES' type='@'/>
<constant const='true' declared_type='SCNLightType _Nonnull' name='SCNLightTypeOmni' type='@'/>
<constant const='true' declared_type='SCNLightType _Nonnull' name='SCNLightTypeProbe' type='@'/>
<constant const='true' declared_type='SCNLightType _Nonnull' name='SCNLightTypeSpot' type='@'/>
<constant const='true' declared_type='SCNLightingModel _Nonnull' name='SCNLightingModelBlinn' type='@'/>
<constant const='true' declared_type='SCNLightingModel _Nonnull' name='SCNLightingModelConstant' type='@'/>
<constant const='true' declared_type='SCNLightingModel _Nonnull' name='SCNLightingModelLambert' type='@'/>
<constant const='true' declared_type='SCNLightingModel _Nonnull' name='SCNLightingModelPhong' type='@'/>
<constant const='true' declared_type='SCNLightingModel _Nonnull' name='SCNLightingModelPhysicallyBased' type='@'/>
<constant const='true' declared_type='SCNMatrix4' name='SCNMatrix4Identity' type='{SCNMatrix4=ffffffffffffffff}'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNModelTransform' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNModelViewProjectionTransform' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNModelViewTransform' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNNormalTransform' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyAngle' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyAngularVelocity' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyBounce' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyCharge' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyColor' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyContactNormal' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyContactPoint' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyFrame' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyFrameRate' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyFriction' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyLife' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyOpacity' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyPosition' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyRotationAxis' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertySize' type='@'/>
<constant const='true' declared_type='SCNParticleProperty _Nonnull' name='SCNParticlePropertyVelocity' type='@'/>
<constant const='true' declared_type='SCNPhysicsShapeOption _Nonnull' name='SCNPhysicsShapeKeepAsCompoundKey' type='@'/>
<constant const='true' declared_type='SCNPhysicsShapeOption _Nonnull' name='SCNPhysicsShapeOptionCollisionMargin' type='@'/>
<constant const='true' declared_type='SCNPhysicsShapeOption _Nonnull' name='SCNPhysicsShapeScaleKey' type='@'/>
<constant const='true' declared_type='SCNPhysicsShapeType _Nonnull' name='SCNPhysicsShapeTypeBoundingBox' type='@'/>
<constant const='true' declared_type='SCNPhysicsShapeType _Nonnull' name='SCNPhysicsShapeTypeConcavePolyhedron' type='@'/>
<constant const='true' declared_type='SCNPhysicsShapeType _Nonnull' name='SCNPhysicsShapeTypeConvexHull' type='@'/>
<constant const='true' declared_type='SCNPhysicsShapeOption _Nonnull' name='SCNPhysicsShapeTypeKey' type='@'/>
<constant const='true' declared_type='SCNPhysicsTestOption _Nonnull' name='SCNPhysicsTestBackfaceCullingKey' type='@'/>
<constant const='true' declared_type='SCNPhysicsTestOption _Nonnull' name='SCNPhysicsTestCollisionBitMaskKey' type='@'/>
<constant const='true' declared_type='SCNPhysicsTestSearchMode _Nonnull' name='SCNPhysicsTestSearchModeAll' type='@'/>
<constant const='true' declared_type='SCNPhysicsTestSearchMode _Nonnull' name='SCNPhysicsTestSearchModeAny' type='@'/>
<constant const='true' declared_type='SCNPhysicsTestSearchMode _Nonnull' name='SCNPhysicsTestSearchModeClosest' type='@'/>
<constant const='true' declared_type='SCNPhysicsTestOption _Nonnull' name='SCNPhysicsTestSearchModeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNProjectionTransform' type='@'/>
<constant const='true' declared_type='SCNSceneAttribute _Nonnull' name='SCNSceneEndTimeAttributeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneExportDestinationURL' type='@'/>
<constant const='true' declared_type='SCNSceneAttribute _Nonnull' name='SCNSceneFrameRateAttributeKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceAnimationImportPolicy _Nonnull' name='SCNSceneSourceAnimationImportPolicyDoNotPlay' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceAnimationImportPolicyKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceAnimationImportPolicy _Nonnull' name='SCNSceneSourceAnimationImportPolicyPlay' type='@'/>
<constant const='true' declared_type='SCNSceneSourceAnimationImportPolicy _Nonnull' name='SCNSceneSourceAnimationImportPolicyPlayRepeatedly' type='@'/>
<constant const='true' declared_type='SCNSceneSourceAnimationImportPolicy _Nonnull' name='SCNSceneSourceAnimationImportPolicyPlayUsingSceneTimeBase' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetAuthorKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetAuthoringToolKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetContributorsKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetCreatedDateKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceAssetDirectoryURLsKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetModifiedDateKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetUnitKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetUnitMeterKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetUnitNameKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNSceneSourceAssetUpAxisKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceCheckConsistencyKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceConvertToYUpKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceConvertUnitsToMetersKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceCreateNormalsIfAbsentKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceFlattenSceneKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceLoadingOptionPreserveOriginalTopology' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceOverrideAssetURLsKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceStrictConformanceKey' type='@'/>
<constant const='true' declared_type='SCNSceneSourceLoadingOption _Nonnull' name='SCNSceneSourceUseSafeModeKey' type='@'/>
<constant const='true' declared_type='SCNSceneAttribute _Nonnull' name='SCNSceneStartTimeAttributeKey' type='@'/>
<constant const='true' declared_type='SCNSceneAttribute _Nonnull' name='SCNSceneUpAxisAttributeKey' type='@'/>
<constant const='true' declared_type='SCNShaderModifierEntryPoint _Nonnull' name='SCNShaderModifierEntryPointFragment' type='@'/>
<constant const='true' declared_type='SCNShaderModifierEntryPoint _Nonnull' name='SCNShaderModifierEntryPointGeometry' type='@'/>
<constant const='true' declared_type='SCNShaderModifierEntryPoint _Nonnull' name='SCNShaderModifierEntryPointLightingModel' type='@'/>
<constant const='true' declared_type='SCNShaderModifierEntryPoint _Nonnull' name='SCNShaderModifierEntryPointSurface' type='@'/>
<constant const='true' declared_type='SCNVector3' name='SCNVector3Zero' type='{SCNVector3=fff}'/>
<constant const='true' declared_type='SCNVector4' name='SCNVector4Zero' type='{SCNVector4=ffff}'/>
<constant const='true' declared_type='NSString * _Nonnull' name='SCNViewTransform' type='@'/>
<enum name='SCNActionTimingModeEaseIn' value='1'/>
<enum name='SCNActionTimingModeEaseInEaseOut' value='3'/>
<enum name='SCNActionTimingModeEaseOut' value='2'/>
<enum name='SCNActionTimingModeLinear' value='0'/>
<enum name='SCNAntialiasingModeMultisampling2X' value='1'/>
<enum name='SCNAntialiasingModeMultisampling4X' value='2'/>
<enum name='SCNAntialiasingModeNone' value='0'/>
<enum name='SCNBillboardAxisAll' value='7'/>
<enum name='SCNBillboardAxisX' value='1'/>
<enum name='SCNBillboardAxisY' value='2'/>
<enum name='SCNBillboardAxisZ' value='4'/>
<enum name='SCNBlendModeAdd' value='1'/>
<enum name='SCNBlendModeAlpha' value='0'/>
<enum name='SCNBlendModeMax' value='6'/>
<enum name='SCNBlendModeMultiply' value='3'/>
<enum name='SCNBlendModeReplace' value='5'/>
<enum name='SCNBlendModeScreen' value='4'/>
<enum name='SCNBlendModeSubtract' value='2'/>
<enum name='SCNBufferFrequencyPerFrame' value='0'/>
<enum name='SCNBufferFrequencyPerNode' value='1'/>
<enum name='SCNBufferFrequencyPerShadable' value='2'/>
<enum name='SCNCameraProjectionDirectionHorizontal' value='1'/>
<enum name='SCNCameraProjectionDirectionVertical' value='0'/>
<enum name='SCNChamferModeBack' value='2'/>
<enum name='SCNChamferModeBoth' value='0'/>
<enum name='SCNChamferModeFront' value='1'/>
<enum name='SCNColorMaskAll' value='15'/>
<enum name='SCNColorMaskAlpha' value='1'/>
<enum name='SCNColorMaskBlue' value='2'/>
<enum name='SCNColorMaskGreen' value='4'/>
<enum name='SCNColorMaskNone' value='0'/>
<enum name='SCNColorMaskRed' value='8'/>
<enum name='SCNConsistencyInvalidArgumentError' value='1002'/>
<enum name='SCNConsistencyInvalidCountError' value='1001'/>
<enum name='SCNConsistencyInvalidURIError' value='1000'/>
<enum name='SCNConsistencyMissingAttributeError' value='1004'/>
<enum name='SCNConsistencyMissingElementError' value='1003'/>
<enum name='SCNConsistencyXMLSchemaValidationError' value='1005'/>
<enum name='SCNCullBack' value='0'/>
<enum name='SCNCullFront' value='1'/>
<enum name='SCNCullModeBack' value='0'/>
<enum name='SCNCullModeFront' value='1'/>
<enum name='SCNDebugOptionNone' value='0'/>
<enum name='SCNDebugOptionRenderAsWireframe' value='64'/>
<enum name='SCNDebugOptionShowBoundingBoxes' value='2'/>
<enum name='SCNDebugOptionShowCameras' value='1024'/>
<enum name='SCNDebugOptionShowConstraints' value='512'/>
<enum name='SCNDebugOptionShowCreases' value='256'/>
<enum name='SCNDebugOptionShowLightExtents' value='8'/>
<enum name='SCNDebugOptionShowLightInfluences' value='4'/>
<enum name='SCNDebugOptionShowPhysicsFields' value='16'/>
<enum name='SCNDebugOptionShowPhysicsShapes' value='1'/>
<enum name='SCNDebugOptionShowSkeletons' value='128'/>
<enum name='SCNDebugOptionShowWireframe' value='32'/>
<enum name='SCNFillModeFill' value='0'/>
<enum name='SCNFillModeLines' value='1'/>
<enum name='SCNFilterModeLinear' value='2'/>
<enum name='SCNFilterModeNearest' value='1'/>
<enum name='SCNFilterModeNone' value='0'/>
<enum name='SCNGeometryPrimitiveTypeLine' value='2'/>
<enum name='SCNGeometryPrimitiveTypePoint' value='3'/>
<enum name='SCNGeometryPrimitiveTypePolygon' value='4'/>
<enum name='SCNGeometryPrimitiveTypeTriangleStrip' value='1'/>
<enum name='SCNGeometryPrimitiveTypeTriangles' value='0'/>
<enum name='SCNHitTestSearchModeAll' value='1'/>
<enum name='SCNHitTestSearchModeAny' value='2'/>
<enum name='SCNHitTestSearchModeClosest' value='0'/>
<enum name='SCNInteractionModeFly' value='0'/>
<enum name='SCNInteractionModeOrbitAngleMapping' value='2'/>
<enum name='SCNInteractionModeOrbitArcball' value='4'/>
<enum name='SCNInteractionModeOrbitCenteredArcball' value='3'/>
<enum name='SCNInteractionModeOrbitTurntable' value='1'/>
<enum name='SCNInteractionModePan' value='5'/>
<enum name='SCNInteractionModeTruck' value='6'/>
<enum name='SCNMorpherCalculationModeAdditive' value='1'/>
<enum name='SCNMorpherCalculationModeNormalized' value='0'/>
<enum name='SCNMovabilityHintFixed' value='0'/>
<enum name='SCNMovabilityHintMovable' value='1'/>
<enum name='SCNNodeFocusBehaviorFocusable' value='2'/>
<enum name='SCNNodeFocusBehaviorNone' value='0'/>
<enum name='SCNNodeFocusBehaviorOccluding' value='1'/>
<enum name='SCNParticleBirthDirectionConstant' value='0'/>
<enum name='SCNParticleBirthDirectionRandom' value='2'/>
<enum name='SCNParticleBirthDirectionSurfaceNormal' value='1'/>
<enum name='SCNParticleBirthLocationSurface' value='0'/>
<enum name='SCNParticleBirthLocationVertex' value='2'/>
<enum name='SCNParticleBirthLocationVolume' value='1'/>
<enum name='SCNParticleBlendModeAdditive' value='0'/>
<enum name='SCNParticleBlendModeAlpha' value='4'/>
<enum name='SCNParticleBlendModeMultiply' value='2'/>
<enum name='SCNParticleBlendModeReplace' value='5'/>
<enum name='SCNParticleBlendModeScreen' value='3'/>
<enum name='SCNParticleBlendModeSubtract' value='1'/>
<enum name='SCNParticleEventBirth' value='0'/>
<enum name='SCNParticleEventCollision' value='2'/>
<enum name='SCNParticleEventDeath' value='1'/>
<enum name='SCNParticleImageSequenceAnimationModeAutoReverse' value='2'/>
<enum name='SCNParticleImageSequenceAnimationModeClamp' value='1'/>
<enum name='SCNParticleImageSequenceAnimationModeRepeat' value='0'/>
<enum name='SCNParticleInputModeOverDistance' value='1'/>
<enum name='SCNParticleInputModeOverLife' value='0'/>
<enum name='SCNParticleInputModeOverOtherProperty' value='2'/>
<enum name='SCNParticleModifierStagePostCollision' value='3'/>
<enum name='SCNParticleModifierStagePostDynamics' value='1'/>
<enum name='SCNParticleModifierStagePreCollision' value='2'/>
<enum name='SCNParticleModifierStagePreDynamics' value='0'/>
<enum name='SCNParticleOrientationModeBillboardScreenAligned' value='0'/>
<enum name='SCNParticleOrientationModeBillboardViewAligned' value='1'/>
<enum name='SCNParticleOrientationModeBillboardYAligned' value='3'/>
<enum name='SCNParticleOrientationModeFree' value='2'/>
<enum name='SCNParticleSortingModeDistance' value='2'/>
<enum name='SCNParticleSortingModeNone' value='0'/>
<enum name='SCNParticleSortingModeOldestFirst' value='3'/>
<enum name='SCNParticleSortingModeProjectedDepth' value='1'/>
<enum name='SCNParticleSortingModeYoungestFirst' value='4'/>
<enum name='SCNPhysicsBodyTypeDynamic' value='1'/>
<enum name='SCNPhysicsBodyTypeKinematic' value='2'/>
<enum name='SCNPhysicsBodyTypeStatic' value='0'/>
<enum name='SCNPhysicsCollisionCategoryAll' value='4294967295'/>
<enum name='SCNPhysicsCollisionCategoryDefault' value='1'/>
<enum name='SCNPhysicsCollisionCategoryStatic' value='2'/>
<enum name='SCNPhysicsFieldScopeInsideExtent' value='0'/>
<enum name='SCNPhysicsFieldScopeOutsideExtent' value='1'/>
<enum name='SCNProgramCompilationError' value='1'/>
<enum name='SCNReferenceLoadingPolicyImmediate' value='0'/>
<enum name='SCNReferenceLoadingPolicyOnDemand' value='1'/>
<enum name='SCNRenderingAPIMetal' value='0'/>
<enum name='SCNRenderingAPIOpenGLES2' value='1'/>
<enum name='SCNSceneSourceStatusComplete' value='16'/>
<enum name='SCNSceneSourceStatusError' value='-1'/>
<enum name='SCNSceneSourceStatusParsing' value='4'/>
<enum name='SCNSceneSourceStatusProcessing' value='12'/>
<enum name='SCNSceneSourceStatusValidating' value='8'/>
<enum name='SCNShadowModeDeferred' value='1'/>
<enum name='SCNShadowModeForward' value='0'/>
<enum name='SCNShadowModeModulated' value='2'/>
<enum name='SCNTransparencyModeAOne' value='0'/>
<enum name='SCNTransparencyModeDefault' value='0'/>
<enum name='SCNTransparencyModeDualLayer' value='3'/>
<enum name='SCNTransparencyModeRGBZero' value='1'/>
<enum name='SCNTransparencyModeSingleLayer' value='2'/>
<enum name='SCNWrapModeClamp' value='1'/>
<enum name='SCNWrapModeClampToBorder' value='3'/>
<enum name='SCNWrapModeMirror' value='4'/>
<enum name='SCNWrapModeRepeat' value='2'/>
<enum name='SCN_ENABLE_METAL' value='0'/>
<function name='SCNExportJavaScriptModule'>
<arg declared_type='JSContext * _Nonnull' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SCNMatrix4EqualToMatrix4'>
<arg declared_type='SCNMatrix4' name='a' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='SCNMatrix4' name='b' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function inline='true' name='SCNMatrix4FromMat4'>
<arg declared_type='simd_float4x4' name='m' type='{_simd_float4x4=[4]}'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4Invert'>
<arg declared_type='SCNMatrix4' name='m' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4IsIdentity'>
<arg declared_type='SCNMatrix4' name='m' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function name='SCNMatrix4MakeRotation'>
<arg declared_type='float' name='angle' type='f'/>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<arg declared_type='float' name='z' type='f'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function inline='true' name='SCNMatrix4MakeScale'>
<arg declared_type='float' name='sx' type='f'/>
<arg declared_type='float' name='sy' type='f'/>
<arg declared_type='float' name='sz' type='f'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function inline='true' name='SCNMatrix4MakeTranslation'>
<arg declared_type='float' name='tx' type='f'/>
<arg declared_type='float' name='ty' type='f'/>
<arg declared_type='float' name='tz' type='f'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4Mult'>
<arg declared_type='SCNMatrix4' name='a' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='SCNMatrix4' name='b' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4Rotate'>
<arg declared_type='SCNMatrix4' name='m' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='float' name='angle' type='f'/>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<arg declared_type='float' name='z' type='f'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNMatrix4Scale'>
<arg declared_type='SCNMatrix4' name='m' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='float' name='sx' type='f'/>
<arg declared_type='float' name='sy' type='f'/>
<arg declared_type='float' name='sz' type='f'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function inline='true' name='SCNMatrix4ToMat4'>
<arg declared_type='SCNMatrix4' name='m' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</function>
<function inline='true' name='SCNMatrix4Translate'>
<arg declared_type='SCNMatrix4' name='m' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='float' name='tx' type='f'/>
<arg declared_type='float' name='ty' type='f'/>
<arg declared_type='float' name='tz' type='f'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</function>
<function name='SCNVector3EqualToVector3'>
<arg declared_type='SCNVector3' name='a' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' name='b' type='{SCNVector3=fff}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function inline='true' name='SCNVector3FromFloat3'>
<arg declared_type='simd_float3' name='v' type=''/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</function>
<function inline='true' name='SCNVector3Make'>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<arg declared_type='float' name='z' type='f'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</function>
<function inline='true' name='SCNVector3ToFloat3'>
<arg declared_type='SCNVector3' name='v' type='{SCNVector3=fff}'/>
<retval declared_type='simd_float3' type=''/>
</function>
<function name='SCNVector4EqualToVector4'>
<arg declared_type='SCNVector4' name='a' type='{SCNVector4=ffff}'/>
<arg declared_type='SCNVector4' name='b' type='{SCNVector4=ffff}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function inline='true' name='SCNVector4FromFloat4'>
<arg declared_type='simd_float4' name='v' type=''/>
<retval declared_type='SCNVector4' type='{SCNVector4=ffff}'/>
</function>
<function inline='true' name='SCNVector4Make'>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<arg declared_type='float' name='z' type='f'/>
<arg declared_type='float' name='w' type='f'/>
<retval declared_type='SCNVector4' type='{SCNVector4=ffff}'/>
</function>
<function inline='true' name='SCNVector4ToFloat4'>
<arg declared_type='SCNVector4' name='v' type='{SCNVector4=ffff}'/>
<retval declared_type='simd_float4' type=''/>
</function>
<class name='NSObject'>
<method selector='actionForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SCNAction * _Nullable' type='@'/>
</method>
<method selector='actionKeys'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='addAnimation:forKey:'>
<arg declared_type='id _Nonnull' index='0' name='animation' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimationPlayer:forKey:'>
<arg declared_type='SCNAnimationPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationKeys'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='animationPlayerForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SCNAnimationPlayer * _Nullable' type='@'/>
</method>
<method selector='audioEngine'>
<retval declared_type='AVAudioEngine * _Nonnull' type='@'/>
</method>
<method selector='audioListener'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='autoenablesDefaultLighting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='avoidOccluderConstraint:didAvoidOccluder:forNode:'>
<arg declared_type='SCNAvoidOccluderConstraint * _Nonnull' index='0' name='constraint' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='occluder' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='2' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='avoidOccluderConstraint:shouldAvoidOccluder:forNode:'>
<arg declared_type='SCNAvoidOccluderConstraint * _Nonnull' index='0' name='constraint' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='occluder' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='2' name='node' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cameraInertiaDidEndForController:'>
<arg declared_type='SCNCameraController * _Nonnull' index='0' name='cameraController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cameraInertiaWillStartForController:'>
<arg declared_type='SCNCameraController * _Nonnull' index='0' name='cameraController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='context'>
<retval declared_type='void * _Nullable' type='^v'/>
</method>
<method selector='debugOptions'>
<retval declared_type='SCNDebugOptions' type='I'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='getBoundingBoxMin:max:'>
<arg declared_type='SCNVector3 * _Nullable' index='0' name='min' type='^{SCNVector3=fff}'/>
<arg declared_type='SCNVector3 * _Nullable' index='1' name='max' type='^{SCNVector3=fff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getBoundingSphereCenter:radius:'>
<arg declared_type='SCNVector3 * _Nullable' index='0' name='center' type='^{SCNVector3=fff}'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='radius' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasActions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hitTest:options:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='isAnimationForKeyPaused:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isJitteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNodeInsideFrustum:withPointOfView:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='pointOfView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loops'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nodesInsideFrustumWithPointOfView:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='pointOfView' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='overlaySKScene'>
<retval declared_type='SKScene * _Nullable' type='@'/>
</method>
<method selector='pauseAnimationForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='physicsWorld:didBeginContact:'>
<arg declared_type='SCNPhysicsWorld * _Nonnull' index='0' name='world' type='@'/>
<arg declared_type='SCNPhysicsContact * _Nonnull' index='1' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='physicsWorld:didEndContact:'>
<arg declared_type='SCNPhysicsWorld * _Nonnull' index='0' name='world' type='@'/>
<arg declared_type='SCNPhysicsContact * _Nonnull' index='1' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='physicsWorld:didUpdateContact:'>
<arg declared_type='SCNPhysicsWorld * _Nonnull' index='0' name='world' type='@'/>
<arg declared_type='SCNPhysicsContact * _Nonnull' index='1' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pointOfView'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='prepareObject:shouldAbortBlock:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='BOOL (^ _Nullable)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareObjects:withCompletionHandler:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentScene:withTransition:incomingPointOfView:completionHandler:'>
<arg declared_type='SCNScene * _Nonnull' index='0' name='scene' type='@'/>
<arg declared_type='SKTransition * _Nonnull' index='1' name='transition' type='@'/>
<arg declared_type='SCNNode * _Nullable' index='2' name='pointOfView' type='@'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='projectPoint:'>
<arg declared_type='SCNVector3' index='0' name='point' type='{SCNVector3=fff}'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='removeActionForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllAnimations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationForKey:blendOutDuration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<arg declared_type='CGFloat' index='1' name='duration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationForKey:fadeOutDuration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<arg declared_type='CGFloat' index='1' name='duration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderNode:renderer:arguments:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='SCNRenderer * _Nonnull' index='1' name='renderer' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='arguments' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didApplyAnimationsAtTime:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didApplyConstraintsAtTime:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didRenderScene:atTime:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNScene * _Nonnull' index='1' name='scene' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didSimulatePhysicsAtTime:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:updateAtTime:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:willRenderScene:atTime:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNScene * _Nonnull' index='1' name='scene' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderingAPI'>
<retval declared_type='SCNRenderingAPI' type='I'/>
</method>
<method selector='resumeAnimationForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:completionHandler:'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:forKey:'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:forKey:completionHandler:'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='key' type='@'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='2' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scene'>
<retval declared_type='SCNScene * _Nullable' type='@'/>
</method>
<method selector='sceneTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setAudioListener:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='audioListener' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoenablesDefaultLighting:'>
<arg declared_type='BOOL' index='0' name='autoenablesDefaultLighting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundingBoxMin:max:'>
<arg declared_type='SCNVector3 * _Nullable' index='0' name='min' type='^{SCNVector3=fff}'/>
<arg declared_type='SCNVector3 * _Nullable' index='1' name='max' type='^{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDebugOptions:'>
<arg declared_type='SCNDebugOptions' index='0' name='debugOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setJitteringEnabled:'>
<arg declared_type='BOOL' index='0' name='jitteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoops:'>
<arg declared_type='BOOL' index='0' name='loops' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverlaySKScene:'>
<arg declared_type='SKScene * _Nullable' index='0' name='overlaySKScene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaying:'>
<arg declared_type='BOOL' index='0' name='playing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPointOfView:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='pointOfView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScene:'>
<arg declared_type='SCNScene * _Nullable' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSceneTime:'>
<arg declared_type='NSTimeInterval' index='0' name='sceneTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShaderModifiers:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='shaderModifiers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsStatistics:'>
<arg declared_type='BOOL' index='0' name='showsStatistics' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:forAnimationKey:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTechnique:'>
<arg declared_type='SCNTechnique * _Nullable' index='0' name='technique' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderModifiers'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='showsStatistics'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='technique'>
<retval declared_type='SCNTechnique * _Nullable' type='@'/>
</method>
<method selector='unprojectPoint:'>
<arg declared_type='SCNVector3' index='0' name='point' type='{SCNVector3=fff}'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='writeBytes:length:'>
<arg declared_type='void * _Nonnull' index='0' name='bytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSValue'>
<method selector='SCNMatrix4Value'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='SCNVector3Value'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='SCNVector4Value'>
<retval declared_type='SCNVector4' type='{SCNVector4=ffff}'/>
</method>
<method class_method='true' selector='valueWithSCNMatrix4:'>
<arg declared_type='SCNMatrix4' index='0' name='v' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithSCNVector3:'>
<arg declared_type='SCNVector3' index='0' name='v' type='{SCNVector3=fff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithSCNVector4:'>
<arg declared_type='SCNVector4' index='0' name='v' type='{SCNVector4=ffff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
</class>
<class name='SCNAccelerationConstraint'>
<method class_method='true' selector='accelerationConstraint'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='damping'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='decelerationDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumLinearAcceleration'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumLinearVelocity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setDamping:'>
<arg declared_type='CGFloat' index='0' name='damping' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecelerationDistance:'>
<arg declared_type='CGFloat' index='0' name='decelerationDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumLinearAcceleration:'>
<arg declared_type='CGFloat' index='0' name='maximumLinearAcceleration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumLinearVelocity:'>
<arg declared_type='CGFloat' index='0' name='maximumLinearVelocity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNAction'>
<method class_method='true' selector='customActionWithDuration:actionBlock:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<arg declared_type='void (^ _Nonnull)(SCNNode * _Nonnull, CGFloat)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<arg declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='fadeInWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fadeOpacityBy:duration:'>
<arg declared_type='CGFloat' index='0' name='factor' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fadeOpacityTo:duration:'>
<arg declared_type='CGFloat' index='0' name='opacity' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fadeOutWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='group:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='actions' type='@'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='hide'>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='javaScriptActionWithScript:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='script' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='seconds' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveBy:duration:'>
<arg declared_type='SCNVector3' index='0' name='delta' type='{SCNVector3=fff}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveByX:y:z:duration:'>
<arg declared_type='CGFloat' index='0' name='deltaX' type='f'/>
<arg declared_type='CGFloat' index='1' name='deltaY' type='f'/>
<arg declared_type='CGFloat' index='2' name='deltaZ' type='f'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveTo:duration:'>
<arg declared_type='SCNVector3' index='0' name='location' type='{SCNVector3=fff}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='playAudioSource:waitForCompletion:'>
<arg declared_type='SCNAudioSource * _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='BOOL' index='1' name='wait' type='B'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='removeFromParentNode'>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='repeatAction:count:'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='repeatActionForever:'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method selector='reversedAction'>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rotateByAngle:aroundAxis:duration:'>
<arg declared_type='CGFloat' index='0' name='angle' type='f'/>
<arg declared_type='SCNVector3' index='1' name='axis' type='{SCNVector3=fff}'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rotateByX:y:z:duration:'>
<arg declared_type='CGFloat' index='0' name='xAngle' type='f'/>
<arg declared_type='CGFloat' index='1' name='yAngle' type='f'/>
<arg declared_type='CGFloat' index='2' name='zAngle' type='f'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rotateToAxisAngle:duration:'>
<arg declared_type='SCNVector4' index='0' name='axisAngle' type='{SCNVector4=ffff}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rotateToX:y:z:duration:'>
<arg declared_type='CGFloat' index='0' name='xAngle' type='f'/>
<arg declared_type='CGFloat' index='1' name='yAngle' type='f'/>
<arg declared_type='CGFloat' index='2' name='zAngle' type='f'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rotateToX:y:z:duration:shortestUnitArc:'>
<arg declared_type='CGFloat' index='0' name='xAngle' type='f'/>
<arg declared_type='CGFloat' index='1' name='yAngle' type='f'/>
<arg declared_type='CGFloat' index='2' name='zAngle' type='f'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<arg declared_type='BOOL' index='4' name='shortestUnitArc' type='B'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='runBlock:'>
<arg declared_type='void (^ _Nonnull)(SCNNode * _Nonnull)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='runBlock:queue:'>
<arg declared_type='void (^ _Nonnull)(SCNNode * _Nonnull)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='dispatch_queue_t _Nonnull' index='1' name='queue' type='@'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleBy:duration:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleTo:duration:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sequence:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='actions' type='@'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method selector='setDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimingFunction:'>
<arg declared_type='SCNActionTimingFunction _Nullable' function_pointer='true' index='0' name='timingFunction' type='@?'>
<arg declared_type='float' type='f'/>
<retval declared_type='float' type='f'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimingMode:'>
<arg declared_type='SCNActionTimingMode' index='0' name='timingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='timingFunction'>
<retval declared_type='SCNActionTimingFunction _Nullable' function_pointer='true' type='@?'>
<arg declared_type='float' type='f'/>
<retval declared_type='float' type='f'/>
</retval>
</method>
<method selector='timingMode'>
<retval declared_type='SCNActionTimingMode' type='i'/>
</method>
<method class_method='true' selector='unhide'>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='waitForDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='waitForDuration:withRange:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='durationRange' type='d'/>
<retval declared_type='SCNAction * _Nonnull' type='@'/>
</method>
</class>
<class name='SCNAnimation'>
<method selector='animationDidStart'>
<retval declared_type='SCNAnimationDidStartBlock _Nullable' function_pointer='true' type='@?'>
<arg declared_type='SCNAnimation * _Nonnull' type='@'/>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='animationDidStop'>
<retval declared_type='SCNAnimationDidStopBlock _Nullable' function_pointer='true' type='@?'>
<arg declared_type='SCNAnimation * _Nonnull' type='@'/>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='animationEvents'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animationNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='animationName' type='@'/>
<retval declared_type='SCNAnimation * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='animationWithContentsOfURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='animationUrl' type='@'/>
<retval declared_type='SCNAnimation * _Nonnull' type='@'/>
</method>
<method selector='autoreverses'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='blendInDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='blendOutDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='fillsBackward'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fillsForward'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAdditive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAppliedOnCompletion'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCumulative'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRemovedOnCompletion'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='repeatCount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAdditive:'>
<arg declared_type='BOOL' index='0' name='additive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationDidStart:'>
<arg declared_type='SCNAnimationDidStartBlock _Nullable' function_pointer='true' index='0' name='animationDidStart' type='@?'>
<arg declared_type='SCNAnimation * _Nonnull' type='@'/>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationDidStop:'>
<arg declared_type='SCNAnimationDidStopBlock _Nullable' function_pointer='true' index='0' name='animationDidStop' type='@?'>
<arg declared_type='SCNAnimation * _Nonnull' type='@'/>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationEvents:'>
<arg declared_type='NSArray * _Nullable' index='0' name='animationEvents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppliedOnCompletion:'>
<arg declared_type='BOOL' index='0' name='appliedOnCompletion' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoreverses:'>
<arg declared_type='BOOL' index='0' name='autoreverses' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendInDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='blendInDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendOutDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='blendOutDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCumulative:'>
<arg declared_type='BOOL' index='0' name='cumulative' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillsBackward:'>
<arg declared_type='BOOL' index='0' name='fillsBackward' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillsForward:'>
<arg declared_type='BOOL' index='0' name='fillsForward' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyPath:'>
<arg declared_type='NSString * _Nullable' index='0' name='keyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemovedOnCompletion:'>
<arg declared_type='BOOL' index='0' name='removedOnCompletion' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepeatCount:'>
<arg declared_type='CGFloat' index='0' name='repeatCount' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='startDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeOffset:'>
<arg declared_type='NSTimeInterval' index='0' name='timeOffset' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimingFunction:'>
<arg declared_type='SCNTimingFunction * _Nonnull' index='0' name='timingFunction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesSceneTimeBase:'>
<arg declared_type='BOOL' index='0' name='usesSceneTimeBase' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='timeOffset'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='timingFunction'>
<retval declared_type='SCNTimingFunction * _Nonnull' type='@'/>
</method>
<method selector='usesSceneTimeBase'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='SCNAnimationEvent'>
<method class_method='true' selector='animationEventWithKeyTime:block:'>
<arg declared_type='CGFloat' index='0' name='time' type='f'/>
<arg declared_type='SCNAnimationEventBlock _Nonnull' function_pointer='true' index='1' name='eventBlock' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SCNAnimationPlayer'>
<method selector='animation'>
<retval declared_type='SCNAnimation * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='animationPlayerWithAnimation:'>
<arg declared_type='SCNAnimation * _Nonnull' index='0' name='animation' type='@'/>
<retval declared_type='SCNAnimationPlayer * _Nonnull' type='@'/>
</method>
<method selector='blendFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='paused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='play'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendFactor:'>
<arg declared_type='CGFloat' index='0' name='blendFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaused:'>
<arg declared_type='BOOL' index='0' name='paused' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopWithBlendOutDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNAudioPlayer'>
<method selector='audioNode'>
<retval declared_type='AVAudioNode * _Nullable' type='@'/>
</method>
<method class_method='true' selector='audioPlayerWithAVAudioNode:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='audioNode' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='audioPlayerWithSource:'>
<arg declared_type='SCNAudioSource * _Nonnull' index='0' name='source' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='audioSource'>
<retval declared_type='SCNAudioSource * _Nullable' type='@'/>
</method>
<method selector='didFinishPlayback'>
<retval declared_type='void (^ _Nullable)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='initWithAVAudioNode:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='audioNode' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSource:'>
<arg declared_type='SCNAudioSource * _Nonnull' index='0' name='source' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setDidFinishPlayback:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='didFinishPlayback' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillStartPlayback:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='willStartPlayback' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='willStartPlayback'>
<retval declared_type='void (^ _Nullable)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
</class>
<class name='SCNAudioSource'>
<method class_method='true' selector='audioSourceNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isPositional'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loops'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='reverbBlend'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setLoops:'>
<arg declared_type='BOOL' index='0' name='loops' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositional:'>
<arg declared_type='BOOL' index='0' name='positional' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReverbBlend:'>
<arg declared_type='float' index='0' name='reverbBlend' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldStream:'>
<arg declared_type='BOOL' index='0' name='shouldStream' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldStream'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='SCNAvoidOccluderConstraint'>
<method class_method='true' selector='avoidOccluderConstraintWithTarget:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='target' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='bias'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='occluderCategoryBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setBias:'>
<arg declared_type='CGFloat' index='0' name='bias' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nonnull' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOccluderCategoryBitMask:'>
<arg declared_type='NSUInteger' index='0' name='occluderCategoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
</class>
<class name='SCNBillboardConstraint'>
<method class_method='true' selector='billboardConstraint'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='freeAxes'>
<retval declared_type='SCNBillboardAxis' type='I'/>
</method>
<method selector='setFreeAxes:'>
<arg declared_type='SCNBillboardAxis' index='0' name='freeAxes' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNBox'>
<method class_method='true' selector='boxWithWidth:height:length:chamferRadius:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<arg declared_type='CGFloat' index='1' name='height' type='f'/>
<arg declared_type='CGFloat' index='2' name='length' type='f'/>
<arg declared_type='CGFloat' index='3' name='chamferRadius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='chamferRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='chamferSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='lengthSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setChamferRadius:'>
<arg declared_type='CGFloat' index='0' name='chamferRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChamferSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='chamferSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='heightSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLength:'>
<arg declared_type='CGFloat' index='0' name='length' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLengthSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='lengthSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidthSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='widthSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='widthSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='SCNCamera'>
<method selector='aperture'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='apertureBladeCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='automaticallyAdjustsZRange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='averageGray'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='bloomBlurRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='bloomIntensity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='bloomThreshold'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='camera'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='colorFringeIntensity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='colorFringeStrength'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='colorGrading'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='contrast'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='exposureAdaptationBrighteningSpeedFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='exposureAdaptationDarkeningSpeedFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='exposureOffset'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='fStop'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='fieldOfView'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='focalBlurRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='focalBlurSampleCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='focalDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='focalLength'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='focalSize'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='focusDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumExposure'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumExposure'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='motionBlurIntensity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='orthographicScale'>
<retval declared_type='double' type='d'/>
</method>
<method selector='projectionDirection'>
<retval declared_type='SCNCameraProjectionDirection' type='i'/>
</method>
<method selector='projectionTransform'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='saturation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='screenSpaceAmbientOcclusionBias'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='screenSpaceAmbientOcclusionDepthThreshold'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='screenSpaceAmbientOcclusionIntensity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='screenSpaceAmbientOcclusionNormalThreshold'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='screenSpaceAmbientOcclusionRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='sensorHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAperture:'>
<arg declared_type='CGFloat' index='0' name='aperture' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setApertureBladeCount:'>
<arg declared_type='NSInteger' index='0' name='apertureBladeCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticallyAdjustsZRange:'>
<arg declared_type='BOOL' index='0' name='automaticallyAdjustsZRange' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAverageGray:'>
<arg declared_type='CGFloat' index='0' name='averageGray' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBloomBlurRadius:'>
<arg declared_type='CGFloat' index='0' name='bloomBlurRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBloomIntensity:'>
<arg declared_type='CGFloat' index='0' name='bloomIntensity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBloomThreshold:'>
<arg declared_type='CGFloat' index='0' name='bloomThreshold' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type='NSUInteger' index='0' name='categoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorFringeIntensity:'>
<arg declared_type='CGFloat' index='0' name='colorFringeIntensity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorFringeStrength:'>
<arg declared_type='CGFloat' index='0' name='colorFringeStrength' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContrast:'>
<arg declared_type='CGFloat' index='0' name='contrast' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExposureAdaptationBrighteningSpeedFactor:'>
<arg declared_type='CGFloat' index='0' name='exposureAdaptationBrighteningSpeedFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExposureAdaptationDarkeningSpeedFactor:'>
<arg declared_type='CGFloat' index='0' name='exposureAdaptationDarkeningSpeedFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExposureOffset:'>
<arg declared_type='CGFloat' index='0' name='exposureOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFStop:'>
<arg declared_type='CGFloat' index='0' name='fStop' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldOfView:'>
<arg declared_type='CGFloat' index='0' name='fieldOfView' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocalBlurRadius:'>
<arg declared_type='CGFloat' index='0' name='focalBlurRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocalBlurSampleCount:'>
<arg declared_type='NSInteger' index='0' name='focalBlurSampleCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocalDistance:'>
<arg declared_type='CGFloat' index='0' name='focalDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocalLength:'>
<arg declared_type='CGFloat' index='0' name='focalLength' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocalSize:'>
<arg declared_type='CGFloat' index='0' name='focalSize' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusDistance:'>
<arg declared_type='CGFloat' index='0' name='focusDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumExposure:'>
<arg declared_type='CGFloat' index='0' name='maximumExposure' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumExposure:'>
<arg declared_type='CGFloat' index='0' name='minimumExposure' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMotionBlurIntensity:'>
<arg declared_type='CGFloat' index='0' name='motionBlurIntensity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrthographicScale:'>
<arg declared_type='double' index='0' name='orthographicScale' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjectionDirection:'>
<arg declared_type='SCNCameraProjectionDirection' index='0' name='projectionDirection' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjectionTransform:'>
<arg declared_type='SCNMatrix4' index='0' name='projectionTransform' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaturation:'>
<arg declared_type='CGFloat' index='0' name='saturation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionBias:'>
<arg declared_type='CGFloat' index='0' name='screenSpaceAmbientOcclusionBias' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionDepthThreshold:'>
<arg declared_type='CGFloat' index='0' name='screenSpaceAmbientOcclusionDepthThreshold' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionIntensity:'>
<arg declared_type='CGFloat' index='0' name='screenSpaceAmbientOcclusionIntensity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionNormalThreshold:'>
<arg declared_type='CGFloat' index='0' name='screenSpaceAmbientOcclusionNormalThreshold' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScreenSpaceAmbientOcclusionRadius:'>
<arg declared_type='CGFloat' index='0' name='screenSpaceAmbientOcclusionRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSensorHeight:'>
<arg declared_type='CGFloat' index='0' name='sensorHeight' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesOrthographicProjection:'>
<arg declared_type='BOOL' index='0' name='usesOrthographicProjection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVignettingIntensity:'>
<arg declared_type='CGFloat' index='0' name='vignettingIntensity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVignettingPower:'>
<arg declared_type='CGFloat' index='0' name='vignettingPower' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsDepthOfField:'>
<arg declared_type='BOOL' index='0' name='wantsDepthOfField' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsExposureAdaptation:'>
<arg declared_type='BOOL' index='0' name='wantsExposureAdaptation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsHDR:'>
<arg declared_type='BOOL' index='0' name='wantsHDR' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWhitePoint:'>
<arg declared_type='CGFloat' index='0' name='whitePoint' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXFov:'>
<arg declared_type='double' index='0' name='xFov' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYFov:'>
<arg declared_type='double' index='0' name='yFov' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZFar:'>
<arg declared_type='double' index='0' name='zFar' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZNear:'>
<arg declared_type='double' index='0' name='zNear' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesOrthographicProjection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='vignettingIntensity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='vignettingPower'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='wantsDepthOfField'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsExposureAdaptation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsHDR'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='whitePoint'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='xFov'>
<retval declared_type='double' type='d'/>
</method>
<method selector='yFov'>
<retval declared_type='double' type='d'/>
</method>
<method selector='zFar'>
<retval declared_type='double' type='d'/>
</method>
<method selector='zNear'>
<retval declared_type='double' type='d'/>
</method>
</class>
<class name='SCNCameraController'>
<method selector='automaticTarget'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginInteraction:withViewport:'>
<arg declared_type='CGPoint' index='0' name='location' type='{CGPoint=ff}'/>
<arg declared_type='CGSize' index='1' name='viewport' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearRoll'>
<retval declared_type='void' type='v'/>
</method>
<method selector='continueInteraction:withViewport:sensitivity:'>
<arg declared_type='CGPoint' index='0' name='location' type='{CGPoint=ff}'/>
<arg declared_type='CGSize' index='1' name='viewport' type='{CGSize=ff}'/>
<arg declared_type='CGFloat' index='2' name='sensitivity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dollyBy:onScreenPoint:viewport:'>
<arg declared_type='float' index='0' name='delta' type='f'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}'/>
<arg declared_type='CGSize' index='2' name='viewport' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dollyToTarget:'>
<arg declared_type='float' index='0' name='delta' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endInteraction:withViewport:velocity:'>
<arg declared_type='CGPoint' index='0' name='location' type='{CGPoint=ff}'/>
<arg declared_type='CGSize' index='1' name='viewport' type='{CGSize=ff}'/>
<arg declared_type='CGPoint' index='2' name='velocity' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='frameNodes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inertiaEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inertiaFriction'>
<retval declared_type='float' type='f'/>
</method>
<method selector='interactionMode'>
<retval declared_type='SCNInteractionMode' type='i'/>
</method>
<method selector='isInertiaRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumHorizontalAngle'>
<retval declared_type='float' type='f'/>
</method>
<method selector='maximumVerticalAngle'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minimumHorizontalAngle'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minimumVerticalAngle'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pointOfView'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='rollAroundTarget:'>
<arg declared_type='float' index='0' name='delta' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rollBy:aroundScreenPoint:viewport:'>
<arg declared_type='float' index='0' name='delta' type='f'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}'/>
<arg declared_type='CGSize' index='2' name='viewport' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateByX:Y:'>
<arg declared_type='float' index='0' name='deltaX' type='f'/>
<arg declared_type='float' index='1' name='deltaY' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticTarget:'>
<arg declared_type='BOOL' index='0' name='automaticTarget' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInertiaEnabled:'>
<arg declared_type='BOOL' index='0' name='inertiaEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInertiaFriction:'>
<arg declared_type='float' index='0' name='inertiaFriction' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInteractionMode:'>
<arg declared_type='SCNInteractionMode' index='0' name='interactionMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumHorizontalAngle:'>
<arg declared_type='float' index='0' name='maximumHorizontalAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumVerticalAngle:'>
<arg declared_type='float' index='0' name='maximumVerticalAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumHorizontalAngle:'>
<arg declared_type='float' index='0' name='minimumHorizontalAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumVerticalAngle:'>
<arg declared_type='float' index='0' name='minimumVerticalAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPointOfView:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='pointOfView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='SCNVector3' index='0' name='target' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorldUp:'>
<arg declared_type='SCNVector3' index='0' name='worldUp' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopInertia'>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='translateInCameraSpaceByX:Y:Z:'>
<arg declared_type='float' index='0' name='deltaX' type='f'/>
<arg declared_type='float' index='1' name='deltaY' type='f'/>
<arg declared_type='float' index='2' name='deltaX' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='worldUp'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNCapsule'>
<method selector='capRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='capSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method class_method='true' selector='capsuleWithCapRadius:height:'>
<arg declared_type='CGFloat' index='0' name='capRadius' type='f'/>
<arg declared_type='CGFloat' index='1' name='height' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='radialSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setCapRadius:'>
<arg declared_type='CGFloat' index='0' name='capRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCapSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='capSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='heightSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='radialSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNCone'>
<method selector='bottomRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='coneWithTopRadius:bottomRadius:height:'>
<arg declared_type='CGFloat' index='0' name='topRadius' type='f'/>
<arg declared_type='CGFloat' index='1' name='bottomRadius' type='f'/>
<arg declared_type='CGFloat' index='2' name='height' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='radialSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setBottomRadius:'>
<arg declared_type='CGFloat' index='0' name='bottomRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='heightSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='radialSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopRadius:'>
<arg declared_type='CGFloat' index='0' name='topRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='topRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SCNConstraint'>
<method selector='influenceFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isIncremental'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncremental:'>
<arg declared_type='BOOL' index='0' name='incremental' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInfluenceFactor:'>
<arg declared_type='CGFloat' index='0' name='influenceFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNCylinder'>
<method class_method='true' selector='cylinderWithRadius:height:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f'/>
<arg declared_type='CGFloat' index='1' name='height' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='radialSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='heightSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='radialSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNDistanceConstraint'>
<method class_method='true' selector='distanceConstraintWithTarget:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='target' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setMaximumDistance:'>
<arg declared_type='CGFloat' index='0' name='maximumDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumDistance:'>
<arg declared_type='CGFloat' index='0' name='minimumDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
</class>
<class name='SCNFloor'>
<method class_method='true' selector='floor'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='reflectionCategoryBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='reflectionFalloffEnd'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='reflectionFalloffStart'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='reflectionResolutionScaleFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='reflectivity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setLength:'>
<arg declared_type='CGFloat' index='0' name='length' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReflectionCategoryBitMask:'>
<arg declared_type='NSUInteger' index='0' name='reflectionCategoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReflectionFalloffEnd:'>
<arg declared_type='CGFloat' index='0' name='reflectionFalloffEnd' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReflectionFalloffStart:'>
<arg declared_type='CGFloat' index='0' name='reflectionFalloffStart' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReflectionResolutionScaleFactor:'>
<arg declared_type='CGFloat' index='0' name='reflectionResolutionScaleFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReflectivity:'>
<arg declared_type='CGFloat' index='0' name='reflectivity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SCNGeometry'>
<method selector='edgeCreasesElement'>
<retval declared_type='SCNGeometryElement * _Nullable' type='@'/>
</method>
<method selector='edgeCreasesSource'>
<retval declared_type='SCNGeometrySource * _Nullable' type='@'/>
</method>
<method selector='firstMaterial'>
<retval declared_type='SCNMaterial * _Nullable' type='@'/>
</method>
<method class_method='true' selector='geometry'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='geometryElementAtIndex:'>
<arg declared_type='NSInteger' index='0' name='elementIndex' type='i'/>
<retval declared_type='SCNGeometryElement * _Nonnull' type='@'/>
</method>
<method selector='geometryElementCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='geometryElements'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='geometrySources'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='geometrySourcesForSemantic:'>
<arg declared_type='SCNGeometrySourceSemantic _Nonnull' index='0' name='semantic' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='geometryWithSources:elements:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='sources' type='@'/>
<arg declared_type='NSArray * _Nullable' index='1' name='elements' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertMaterial:atIndex:'>
<arg declared_type='SCNMaterial * _Nonnull' index='0' name='material' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='levelsOfDetail'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='materialWithName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='SCNMaterial * _Nullable' type='@'/>
</method>
<method selector='materials'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='removeMaterialAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceMaterialAtIndex:withMaterial:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I'/>
<arg declared_type='SCNMaterial * _Nonnull' index='1' name='material' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEdgeCreasesElement:'>
<arg declared_type='SCNGeometryElement * _Nullable' index='0' name='edgeCreasesElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEdgeCreasesSource:'>
<arg declared_type='SCNGeometrySource * _Nullable' index='0' name='edgeCreasesSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFirstMaterial:'>
<arg declared_type='SCNMaterial * _Nullable' index='0' name='firstMaterial' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLevelsOfDetail:'>
<arg declared_type='NSArray * _Nullable' index='0' name='levelsOfDetail' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaterials:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='materials' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubdivisionLevel:'>
<arg declared_type='NSUInteger' index='0' name='subdivisionLevel' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsAdaptiveSubdivision:'>
<arg declared_type='BOOL' index='0' name='wantsAdaptiveSubdivision' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subdivisionLevel'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='wantsAdaptiveSubdivision'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='SCNGeometryElement'>
<method selector='bytesPerIndex'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='data'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='geometryElementWithData:primitiveType:primitiveCount:bytesPerIndex:'>
<arg declared_type='NSData * _Nullable' index='0' name='data' type='@'/>
<arg declared_type='SCNGeometryPrimitiveType' index='1' name='primitiveType' type='i'/>
<arg declared_type='NSInteger' index='2' name='primitiveCount' type='i'/>
<arg declared_type='NSInteger' index='3' name='bytesPerIndex' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumPointScreenSpaceRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumPointScreenSpaceRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='pointSize'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='primitiveCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='primitiveRange'>
<retval declared_type='NSRange' type='{_NSRange=II}'/>
</method>
<method selector='primitiveType'>
<retval declared_type='SCNGeometryPrimitiveType' type='i'/>
</method>
<method selector='setMaximumPointScreenSpaceRadius:'>
<arg declared_type='CGFloat' index='0' name='maximumPointScreenSpaceRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumPointScreenSpaceRadius:'>
<arg declared_type='CGFloat' index='0' name='minimumPointScreenSpaceRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPointSize:'>
<arg declared_type='CGFloat' index='0' name='pointSize' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrimitiveRange:'>
<arg declared_type='NSRange' index='0' name='primitiveRange' type='{_NSRange=II}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNGeometrySource'>
<method selector='bytesPerComponent'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='componentsPerVector'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='data'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='dataOffset'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='dataStride'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='floatComponents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='geometrySourceWithData:semantic:vectorCount:floatComponents:componentsPerVector:bytesPerComponent:dataOffset:dataStride:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='SCNGeometrySourceSemantic _Nonnull' index='1' name='semantic' type='@'/>
<arg declared_type='NSInteger' index='2' name='vectorCount' type='i'/>
<arg declared_type='BOOL' index='3' name='floatComponents' type='B'/>
<arg declared_type='NSInteger' index='4' name='componentsPerVector' type='i'/>
<arg declared_type='NSInteger' index='5' name='bytesPerComponent' type='i'/>
<arg declared_type='NSInteger' index='6' name='offset' type='i'/>
<arg declared_type='NSInteger' index='7' name='stride' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='geometrySourceWithNormals:count:'>
<arg const='true' declared_type='SCNVector3 * _Nonnull' index='0' name='normals' type='^{SCNVector3=fff}'/>
<arg declared_type='NSInteger' index='1' name='count' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='geometrySourceWithTextureCoordinates:count:'>
<arg const='true' declared_type='CGPoint * _Nonnull' index='0' name='texcoord' type='^{CGPoint=ff}'/>
<arg declared_type='NSInteger' index='1' name='count' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='geometrySourceWithVertices:count:'>
<arg const='true' declared_type='SCNVector3 * _Nonnull' index='0' name='vertices' type='^{SCNVector3=fff}'/>
<arg declared_type='NSInteger' index='1' name='count' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='semantic'>
<retval declared_type='SCNGeometrySourceSemantic _Nonnull' type='@'/>
</method>
<method selector='vectorCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='SCNHitTestResult'>
<method selector='boneNode'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='faceIndex'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='geometryIndex'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='localCoordinates'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='localNormal'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='modelTransform'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='node'>
<retval declared_type='SCNNode * _Nonnull' type='@'/>
</method>
<method selector='textureCoordinatesWithMappingChannel:'>
<arg declared_type='NSInteger' index='0' name='channel' type='i'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='worldCoordinates'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='worldNormal'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNIKConstraint'>
<method selector='chainRootNode'>
<retval declared_type='SCNNode * _Nonnull' type='@'/>
</method>
<method selector='initWithChainRootNode:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='chainRootNode' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='inverseKinematicsConstraintWithChainRootNode:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='chainRootNode' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maxAllowedRotationAngleForJoint:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setMaxAllowedRotationAngle:forJoint:'>
<arg declared_type='CGFloat' index='0' name='angle' type='f'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetPosition:'>
<arg declared_type='SCNVector3' index='0' name='targetPosition' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetPosition'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNLevelOfDetail'>
<method selector='geometry'>
<retval declared_type='SCNGeometry * _Nullable' type='@'/>
</method>
<method class_method='true' selector='levelOfDetailWithGeometry:screenSpaceRadius:'>
<arg declared_type='SCNGeometry * _Nullable' index='0' name='geometry' type='@'/>
<arg declared_type='CGFloat' index='1' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='levelOfDetailWithGeometry:worldSpaceDistance:'>
<arg declared_type='SCNGeometry * _Nullable' index='0' name='geometry' type='@'/>
<arg declared_type='CGFloat' index='1' name='distance' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='screenSpaceRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='worldSpaceDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SCNLight'>
<method selector='IESProfileURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='attenuationEndDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='attenuationFalloffExponent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='attenuationStartDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='automaticallyAdjustsShadowProjection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='castsShadow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='color'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='forcesBackFaceCasters'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gobo'>
<retval declared_type='SCNMaterialProperty * _Nullable' type='@'/>
</method>
<method selector='intensity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='light'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumShadowDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='orthographicScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='sampleDistributedShadowMaps'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAttenuationEndDistance:'>
<arg declared_type='CGFloat' index='0' name='attenuationEndDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttenuationFalloffExponent:'>
<arg declared_type='CGFloat' index='0' name='attenuationFalloffExponent' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttenuationStartDistance:'>
<arg declared_type='CGFloat' index='0' name='attenuationStartDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticallyAdjustsShadowProjection:'>
<arg declared_type='BOOL' index='0' name='automaticallyAdjustsShadowProjection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCastsShadow:'>
<arg declared_type='BOOL' index='0' name='castsShadow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type='NSUInteger' index='0' name='categoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='id _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForcesBackFaceCasters:'>
<arg declared_type='BOOL' index='0' name='forcesBackFaceCasters' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIESProfileURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='IESProfileURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntensity:'>
<arg declared_type='CGFloat' index='0' name='intensity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumShadowDistance:'>
<arg declared_type='CGFloat' index='0' name='maximumShadowDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrthographicScale:'>
<arg declared_type='CGFloat' index='0' name='orthographicScale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleDistributedShadowMaps:'>
<arg declared_type='BOOL' index='0' name='sampleDistributedShadowMaps' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowBias:'>
<arg declared_type='CGFloat' index='0' name='shadowBias' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowCascadeCount:'>
<arg declared_type='NSUInteger' index='0' name='shadowCascadeCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowCascadeSplittingFactor:'>
<arg declared_type='CGFloat' index='0' name='shadowCascadeSplittingFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type='id _Nonnull' index='0' name='shadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowMapSize:'>
<arg declared_type='CGSize' index='0' name='shadowMapSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowMode:'>
<arg declared_type='SCNShadowMode' index='0' name='shadowMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowRadius:'>
<arg declared_type='CGFloat' index='0' name='shadowRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowSampleCount:'>
<arg declared_type='NSUInteger' index='0' name='shadowSampleCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpotInnerAngle:'>
<arg declared_type='CGFloat' index='0' name='spotInnerAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpotOuterAngle:'>
<arg declared_type='CGFloat' index='0' name='spotOuterAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTemperature:'>
<arg declared_type='CGFloat' index='0' name='temperature' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='SCNLightType _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZFar:'>
<arg declared_type='CGFloat' index='0' name='zFar' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZNear:'>
<arg declared_type='CGFloat' index='0' name='zNear' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowBias'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='shadowCascadeCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='shadowCascadeSplittingFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='shadowColor'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='shadowMapSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='shadowMode'>
<retval declared_type='SCNShadowMode' type='i'/>
</method>
<method selector='shadowRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='shadowSampleCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='sphericalHarmonicsCoefficients'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='spotInnerAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='spotOuterAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='temperature'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='type'>
<retval declared_type='SCNLightType _Nonnull' type='@'/>
</method>
<method selector='zFar'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='zNear'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SCNLookAtConstraint'>
<method selector='gimbalLockEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localFront'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method class_method='true' selector='lookAtConstraintWithTarget:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='target' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setGimbalLockEnabled:'>
<arg declared_type='BOOL' index='0' name='gimbalLockEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalFront:'>
<arg declared_type='SCNVector3' index='0' name='localFront' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetOffset:'>
<arg declared_type='SCNVector3' index='0' name='targetOffset' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorldUp:'>
<arg declared_type='SCNVector3' index='0' name='worldUp' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='targetOffset'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='worldUp'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNMaterial'>
<method selector='ambient'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='ambientOcclusion'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='SCNBlendMode' type='i'/>
</method>
<method selector='colorBufferWriteMask'>
<retval declared_type='SCNColorMask' type='i'/>
</method>
<method selector='cullMode'>
<retval declared_type='SCNCullMode' type='i'/>
</method>
<method selector='diffuse'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='displacement'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='emission'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='fillMode'>
<retval declared_type='SCNFillMode' type='I'/>
</method>
<method selector='fresnelExponent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='isDoubleSided'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLitPerPixel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lightingModelName'>
<retval declared_type='SCNLightingModel _Nonnull' type='@'/>
</method>
<method selector='locksAmbientWithDiffuse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='material'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='metalness'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='multiply'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='normal'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='readsFromDepthBuffer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reflective'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='roughness'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='selfIllumination'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='SCNBlendMode' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorBufferWriteMask:'>
<arg declared_type='SCNColorMask' index='0' name='colorBufferWriteMask' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCullMode:'>
<arg declared_type='SCNCullMode' index='0' name='cullMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleSided:'>
<arg declared_type='BOOL' index='0' name='doubleSided' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillMode:'>
<arg declared_type='SCNFillMode' index='0' name='fillMode' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFresnelExponent:'>
<arg declared_type='CGFloat' index='0' name='fresnelExponent' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLightingModelName:'>
<arg declared_type='SCNLightingModel _Nonnull' index='0' name='lightingModelName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLitPerPixel:'>
<arg declared_type='BOOL' index='0' name='litPerPixel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocksAmbientWithDiffuse:'>
<arg declared_type='BOOL' index='0' name='locksAmbientWithDiffuse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReadsFromDepthBuffer:'>
<arg declared_type='BOOL' index='0' name='readsFromDepthBuffer' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShininess:'>
<arg declared_type='CGFloat' index='0' name='shininess' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransparency:'>
<arg declared_type='CGFloat' index='0' name='transparency' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransparencyMode:'>
<arg declared_type='SCNTransparencyMode' index='0' name='transparencyMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWritesToDepthBuffer:'>
<arg declared_type='BOOL' index='0' name='writesToDepthBuffer' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shininess'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='specular'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='transparency'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='transparencyMode'>
<retval declared_type='SCNTransparencyMode' type='i'/>
</method>
<method selector='transparent'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='writesToDepthBuffer'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='SCNMaterialProperty'>
<method selector='contents'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='contentsTransform'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='intensity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='magnificationFilter'>
<retval declared_type='SCNFilterMode' type='i'/>
</method>
<method selector='mappingChannel'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method class_method='true' selector='materialPropertyWithContents:'>
<arg declared_type='id _Nonnull' index='0' name='contents' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maxAnisotropy'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minificationFilter'>
<retval declared_type='SCNFilterMode' type='i'/>
</method>
<method selector='mipFilter'>
<retval declared_type='SCNFilterMode' type='i'/>
</method>
<method selector='setContents:'>
<arg declared_type='id _Nullable' index='0' name='contents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentsTransform:'>
<arg declared_type='SCNMatrix4' index='0' name='contentsTransform' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntensity:'>
<arg declared_type='CGFloat' index='0' name='intensity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMagnificationFilter:'>
<arg declared_type='SCNFilterMode' index='0' name='magnificationFilter' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingChannel:'>
<arg declared_type='NSInteger' index='0' name='mappingChannel' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAnisotropy:'>
<arg declared_type='CGFloat' index='0' name='maxAnisotropy' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinificationFilter:'>
<arg declared_type='SCNFilterMode' index='0' name='minificationFilter' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMipFilter:'>
<arg declared_type='SCNFilterMode' index='0' name='mipFilter' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureComponents:'>
<arg declared_type='SCNColorMask' index='0' name='textureComponents' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWrapS:'>
<arg declared_type='SCNWrapMode' index='0' name='wrapS' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWrapT:'>
<arg declared_type='SCNWrapMode' index='0' name='wrapT' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureComponents'>
<retval declared_type='SCNColorMask' type='i'/>
</method>
<method selector='wrapS'>
<retval declared_type='SCNWrapMode' type='i'/>
</method>
<method selector='wrapT'>
<retval declared_type='SCNWrapMode' type='i'/>
</method>
</class>
<class name='SCNMorpher'>
<method selector='calculationMode'>
<retval declared_type='SCNMorpherCalculationMode' type='i'/>
</method>
<method selector='setCalculationMode:'>
<arg declared_type='SCNMorpherCalculationMode' index='0' name='calculationMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargets:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='targets' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnifiesNormals:'>
<arg declared_type='BOOL' index='0' name='unifiesNormals' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeight:forTargetAtIndex:'>
<arg declared_type='CGFloat' index='0' name='weight' type='f'/>
<arg declared_type='NSUInteger' index='1' name='targetIndex' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeight:forTargetNamed:'>
<arg declared_type='CGFloat' index='0' name='weight' type='f'/>
<arg declared_type='NSString * _Nonnull' index='1' name='targetName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWeights:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='weights' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targets'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='unifiesNormals'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='weightForTargetAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='targetIndex' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='weightForTargetNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='targetName' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='weights'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='SCNNode'>
<method selector='addAudioPlayer:'>
<arg declared_type='SCNAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChildNode:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='child' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addParticleSystem:'>
<arg declared_type='SCNParticleSystem * _Nonnull' index='0' name='system' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='camera'>
<retval declared_type='SCNCamera * _Nullable' type='@'/>
</method>
<method selector='castsShadow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='childNodeWithName:recursively:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='BOOL' index='1' name='recursively' type='B'/>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='childNodes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='childNodesPassingTest:'>
<arg declared_type='BOOL (^ _Nonnull)(SCNNode * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='predicate' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='clone'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='constraints'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='convertPosition:fromNode:'>
<arg declared_type='SCNVector3' index='0' name='position' type='{SCNVector3=fff}'/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='convertPosition:toNode:'>
<arg declared_type='SCNVector3' index='0' name='position' type='{SCNVector3=fff}'/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='convertTransform:fromNode:'>
<arg declared_type='SCNMatrix4' index='0' name='transform' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='convertTransform:toNode:'>
<arg declared_type='SCNMatrix4' index='0' name='transform' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='convertVector:fromNode:'>
<arg declared_type='SCNVector3' index='0' name='vector' type='{SCNVector3=fff}'/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='convertVector:toNode:'>
<arg declared_type='SCNVector3' index='0' name='vector' type='{SCNVector3=fff}'/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='enumerateChildNodesUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(SCNNode * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateHierarchyUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(SCNNode * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='eulerAngles'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='flattenedClone'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='focusBehavior'>
<retval declared_type='SCNNodeFocusBehavior' type='i'/>
</method>
<method selector='geometry'>
<retval declared_type='SCNGeometry * _Nullable' type='@'/>
</method>
<method selector='hitTestWithSegmentFromPoint:toPoint:options:'>
<arg declared_type='SCNVector3' index='0' name='pointA' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='1' name='pointB' type='{SCNVector3=fff}'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='options' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='insertChildNode:atIndex:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='child' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='light'>
<retval declared_type='SCNLight * _Nullable' type='@'/>
</method>
<method class_method='true' selector='localFront'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method class_method='true' selector='localRight'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='localRotateBy:'>
<arg declared_type='SCNQuaternion' index='0' name='rotation' type='{SCNVector4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='localTranslateBy:'>
<arg declared_type='SCNVector3' index='0' name='translation' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='localUp'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='lookAt:'>
<arg declared_type='SCNVector3' index='0' name='worldTarget' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lookAt:up:localFront:'>
<arg declared_type='SCNVector3' index='0' name='worldTarget' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='1' name='worldUp' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='2' name='localFront' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='morpher'>
<retval declared_type='SCNMorpher * _Nullable' type='@'/>
</method>
<method selector='movabilityHint'>
<retval declared_type='SCNMovabilityHint' type='i'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method class_method='true' selector='node'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='nodeWithGeometry:'>
<arg declared_type='SCNGeometry * _Nullable' index='0' name='geometry' type='@'/>
<retval declared_type='SCNNode * _Nonnull' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='orientation'>
<retval declared_type='SCNQuaternion' type='{SCNVector4=ffff}'/>
</method>
<method selector='parentNode'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='particleSystems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='physicsBody'>
<retval declared_type='SCNPhysicsBody * _Nullable' type='@'/>
</method>
<method selector='physicsField'>
<retval declared_type='SCNPhysicsField * _Nullable' type='@'/>
</method>
<method selector='pivot'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='position'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='presentationNode'>
<retval declared_type='SCNNode * _Nonnull' type='@'/>
</method>
<method selector='removeAllAudioPlayers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllParticleSystems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAudioPlayer:'>
<arg declared_type='SCNAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromParentNode'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeParticleSystem:'>
<arg declared_type='SCNParticleSystem * _Nonnull' index='0' name='system' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rendererDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='renderingOrder'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='replaceChildNode:with:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='oldChild' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='newChild' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateBy:aroundTarget:'>
<arg declared_type='SCNQuaternion' index='0' name='worldRotation' type='{SCNVector4=ffff}'/>
<arg declared_type='SCNVector3' index='1' name='worldTarget' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotation'>
<retval declared_type='SCNVector4' type='{SCNVector4=ffff}'/>
</method>
<method selector='scale'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='setCamera:'>
<arg declared_type='SCNCamera * _Nullable' index='0' name='camera' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCastsShadow:'>
<arg declared_type='BOOL' index='0' name='castsShadow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type='NSUInteger' index='0' name='categoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstraints:'>
<arg declared_type='NSArray * _Nullable' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEulerAngles:'>
<arg declared_type='SCNVector3' index='0' name='eulerAngles' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusBehavior:'>
<arg declared_type='SCNNodeFocusBehavior' index='0' name='focusBehavior' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGeometry:'>
<arg declared_type='SCNGeometry * _Nullable' index='0' name='geometry' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLight:'>
<arg declared_type='SCNLight * _Nullable' index='0' name='light' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMorpher:'>
<arg declared_type='SCNMorpher * _Nullable' index='0' name='morpher' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMovabilityHint:'>
<arg declared_type='SCNMovabilityHint' index='0' name='movabilityHint' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='CGFloat' index='0' name='opacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type='SCNQuaternion' index='0' name='orientation' type='{SCNVector4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaused:'>
<arg declared_type='BOOL' index='0' name='paused' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPhysicsBody:'>
<arg declared_type='SCNPhysicsBody * _Nullable' index='0' name='physicsBody' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPhysicsField:'>
<arg declared_type='SCNPhysicsField * _Nullable' index='0' name='physicsField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPivot:'>
<arg declared_type='SCNMatrix4' index='0' name='pivot' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type='SCNVector3' index='0' name='position' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRendererDelegate:'>
<arg declared_type='id _Nullable' index='0' name='rendererDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRenderingOrder:'>
<arg declared_type='NSInteger' index='0' name='renderingOrder' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type='SCNVector4' index='0' name='rotation' type='{SCNVector4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScale:'>
<arg declared_type='SCNVector3' index='0' name='scale' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdEulerAngles:'>
<arg declared_type='simd_float3' index='0' name='simdEulerAngles' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdOrientation:'>
<arg declared_type='simd_quatf' index='0' name='simdOrientation' type='{_simd_quatf=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdPivot:'>
<arg declared_type='simd_float4x4' index='0' name='simdPivot' type='{_simd_float4x4=[4]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdPosition:'>
<arg declared_type='simd_float3' index='0' name='simdPosition' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdRotation:'>
<arg declared_type='simd_float4' index='0' name='simdRotation' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdScale:'>
<arg declared_type='simd_float3' index='0' name='simdScale' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdTransform:'>
<arg declared_type='simd_float4x4' index='0' name='simdTransform' type='{_simd_float4x4=[4]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdWorldOrientation:'>
<arg declared_type='simd_quatf' index='0' name='simdWorldOrientation' type='{_simd_quatf=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdWorldPosition:'>
<arg declared_type='simd_float3' index='0' name='simdWorldPosition' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSimdWorldTransform:'>
<arg declared_type='simd_float4x4' index='0' name='simdWorldTransform' type='{_simd_float4x4=[4]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkinner:'>
<arg declared_type='SCNSkinner * _Nullable' index='0' name='skinner' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type='SCNMatrix4' index='0' name='transform' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorldOrientation:'>
<arg declared_type='SCNQuaternion' index='0' name='worldOrientation' type='{SCNVector4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorldPosition:'>
<arg declared_type='SCNVector3' index='0' name='worldPosition' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorldTransform:'>
<arg declared_type='SCNMatrix4' index='0' name='worldTransform' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='simdConvertPosition:fromNode:'>
<arg declared_type='simd_float3' index='0' name='position' type=''/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdConvertPosition:toNode:'>
<arg declared_type='simd_float3' index='0' name='position' type=''/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdConvertTransform:fromNode:'>
<arg declared_type='simd_float4x4' index='0' name='transform' type='{_simd_float4x4=[4]}'/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdConvertTransform:toNode:'>
<arg declared_type='simd_float4x4' index='0' name='transform' type='{_simd_float4x4=[4]}'/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdConvertVector:fromNode:'>
<arg declared_type='simd_float3' index='0' name='vector' type=''/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdConvertVector:toNode:'>
<arg declared_type='simd_float3' index='0' name='vector' type=''/>
<arg declared_type='SCNNode * _Nullable' index='1' name='node' type='@'/>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdEulerAngles'>
<retval declared_type='simd_float3' type=''/>
</method>
<method class_method='true' selector='simdLocalFront'>
<retval declared_type='simd_float3' type=''/>
</method>
<method class_method='true' selector='simdLocalRight'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdLocalRotateBy:'>
<arg declared_type='simd_quatf' index='0' name='rotation' type='{_simd_quatf=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='simdLocalTranslateBy:'>
<arg declared_type='simd_float3' index='0' name='translation' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='simdLocalUp'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdLookAt:'>
<arg declared_type='simd_float3' index='0' name='worldTarget' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='simdLookAt:up:localFront:'>
<arg declared_type='simd_float3' index='0' name='worldTarget' type=''/>
<arg declared_type='simd_float3' index='1' name='worldUp' type=''/>
<arg declared_type='simd_float3' index='2' name='localFront' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='simdOrientation'>
<retval declared_type='simd_quatf' type='{_simd_quatf=}'/>
</method>
<method selector='simdPivot'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdPosition'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdRotateBy:aroundTarget:'>
<arg declared_type='simd_quatf' index='0' name='worldRotation' type='{_simd_quatf=}'/>
<arg declared_type='simd_float3' index='1' name='worldTarget' type=''/>
<retval declared_type='void' type='v'/>
</method>
<method selector='simdRotation'>
<retval declared_type='simd_float4' type=''/>
</method>
<method selector='simdScale'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdTransform'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdWorldFront'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdWorldOrientation'>
<retval declared_type='simd_quatf' type='{_simd_quatf=}'/>
</method>
<method selector='simdWorldPosition'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdWorldRight'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='simdWorldTransform'>
<retval declared_type='simd_float4x4' type='{_simd_float4x4=[4]}'/>
</method>
<method selector='simdWorldUp'>
<retval declared_type='simd_float3' type=''/>
</method>
<method selector='skinner'>
<retval declared_type='SCNSkinner * _Nullable' type='@'/>
</method>
<method selector='transform'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='worldFront'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='worldOrientation'>
<retval declared_type='SCNQuaternion' type='{SCNVector4=ffff}'/>
</method>
<method selector='worldPosition'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='worldRight'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='worldTransform'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='worldUp'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNParticlePropertyController'>
<method selector='inputBias'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='inputMode'>
<retval declared_type='SCNParticleInputMode' type='i'/>
</method>
<method selector='inputOrigin'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='inputProperty'>
<retval declared_type='SCNParticleProperty _Nullable' type='@'/>
</method>
<method selector='inputScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setInputBias:'>
<arg declared_type='CGFloat' index='0' name='inputBias' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputMode:'>
<arg declared_type='SCNParticleInputMode' index='0' name='inputMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputOrigin:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='inputOrigin' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputProperty:'>
<arg declared_type='SCNParticleProperty _Nullable' index='0' name='inputProperty' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputScale:'>
<arg declared_type='CGFloat' index='0' name='inputScale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNParticleSystem'>
<method selector='acceleration'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='addModifierForProperties:atStage:withBlock:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='properties' type='@'/>
<arg declared_type='SCNParticleModifierStage' index='1' name='stage' type='i'/>
<arg declared_type='SCNParticleModifierBlock _Nonnull' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='void * _Nonnull * _Nonnull' type='^^v'/>
<arg declared_type='size_t * _Nonnull' type='^I'/>
<arg declared_type='NSInteger' type='i'/>
<arg declared_type='NSInteger' type='i'/>
<arg declared_type='float' type='f'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='affectedByGravity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='affectedByPhysicsFields'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='birthDirection'>
<retval declared_type='SCNParticleBirthDirection' type='i'/>
</method>
<method selector='birthLocation'>
<retval declared_type='SCNParticleBirthLocation' type='i'/>
</method>
<method selector='birthRate'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='birthRateVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='blendMode'>
<retval declared_type='SCNParticleBlendMode' type='i'/>
</method>
<method selector='colliderNodes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='dampingFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='emissionDuration'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='emissionDurationVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='emitterShape'>
<retval declared_type='SCNGeometry * _Nullable' type='@'/>
</method>
<method selector='emittingDirection'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='fresnelExponent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='handleEvent:forProperties:withBlock:'>
<arg declared_type='SCNParticleEvent' index='0' name='event' type='i'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='properties' type='@'/>
<arg declared_type='SCNParticleEventBlock _Nonnull' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='void * _Nonnull * _Nonnull' type='^^v'/>
<arg declared_type='size_t * _Nonnull' type='^I'/>
<arg declared_type='uint32_t * _Nullable' type='^I'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='idleDuration'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='idleDurationVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='imageSequenceAnimationMode'>
<retval declared_type='SCNParticleImageSequenceAnimationMode' type='i'/>
</method>
<method selector='imageSequenceColumnCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='imageSequenceFrameRate'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='imageSequenceFrameRateVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='imageSequenceInitialFrame'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='imageSequenceInitialFrameVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='imageSequenceRowCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='isBlackPassEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLightingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLocal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loops'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='orientationDirection'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='orientationMode'>
<retval declared_type='SCNParticleOrientationMode' type='i'/>
</method>
<method selector='particleAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleAngleVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleAngularVelocity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleAngularVelocityVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleBounce'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleBounceVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleCharge'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleChargeVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='particleColorVariation'>
<retval declared_type='SCNVector4' type='{SCNVector4=ffff}'/>
</method>
<method selector='particleDiesOnCollision'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='particleFriction'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleFrictionVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleImage'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='particleIntensity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleIntensityVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleLifeSpan'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleLifeSpanVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleMass'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleMassVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleSize'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleSizeVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='particleSystem'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='particleSystemNamed:inDirectory:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='directory' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='particleVelocity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleVelocityVariation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='propertyControllers'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='removeAllModifiers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeModifiersOfStage:'>
<arg declared_type='SCNParticleModifierStage' index='0' name='stage' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceleration:'>
<arg declared_type='SCNVector3' index='0' name='acceleration' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAffectedByGravity:'>
<arg declared_type='BOOL' index='0' name='affectedByGravity' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAffectedByPhysicsFields:'>
<arg declared_type='BOOL' index='0' name='affectedByPhysicsFields' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBirthDirection:'>
<arg declared_type='SCNParticleBirthDirection' index='0' name='birthDirection' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBirthLocation:'>
<arg declared_type='SCNParticleBirthLocation' index='0' name='birthLocation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBirthRate:'>
<arg declared_type='CGFloat' index='0' name='birthRate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBirthRateVariation:'>
<arg declared_type='CGFloat' index='0' name='birthRateVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlackPassEnabled:'>
<arg declared_type='BOOL' index='0' name='blackPassEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='SCNParticleBlendMode' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColliderNodes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='colliderNodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDampingFactor:'>
<arg declared_type='CGFloat' index='0' name='dampingFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmissionDuration:'>
<arg declared_type='CGFloat' index='0' name='emissionDuration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmissionDurationVariation:'>
<arg declared_type='CGFloat' index='0' name='emissionDurationVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmitterShape:'>
<arg declared_type='SCNGeometry * _Nullable' index='0' name='emitterShape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmittingDirection:'>
<arg declared_type='SCNVector3' index='0' name='emittingDirection' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFresnelExponent:'>
<arg declared_type='CGFloat' index='0' name='fresnelExponent' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdleDuration:'>
<arg declared_type='CGFloat' index='0' name='idleDuration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdleDurationVariation:'>
<arg declared_type='CGFloat' index='0' name='idleDurationVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSequenceAnimationMode:'>
<arg declared_type='SCNParticleImageSequenceAnimationMode' index='0' name='imageSequenceAnimationMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSequenceColumnCount:'>
<arg declared_type='NSUInteger' index='0' name='imageSequenceColumnCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSequenceFrameRate:'>
<arg declared_type='CGFloat' index='0' name='imageSequenceFrameRate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSequenceFrameRateVariation:'>
<arg declared_type='CGFloat' index='0' name='imageSequenceFrameRateVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSequenceInitialFrame:'>
<arg declared_type='CGFloat' index='0' name='imageSequenceInitialFrame' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSequenceInitialFrameVariation:'>
<arg declared_type='CGFloat' index='0' name='imageSequenceInitialFrameVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageSequenceRowCount:'>
<arg declared_type='NSUInteger' index='0' name='imageSequenceRowCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLightingEnabled:'>
<arg declared_type='BOOL' index='0' name='lightingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocal:'>
<arg declared_type='BOOL' index='0' name='local' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoops:'>
<arg declared_type='BOOL' index='0' name='loops' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientationDirection:'>
<arg declared_type='SCNVector3' index='0' name='orientationDirection' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientationMode:'>
<arg declared_type='SCNParticleOrientationMode' index='0' name='orientationMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAngle:'>
<arg declared_type='CGFloat' index='0' name='particleAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAngleVariation:'>
<arg declared_type='CGFloat' index='0' name='particleAngleVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAngularVelocity:'>
<arg declared_type='CGFloat' index='0' name='particleAngularVelocity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAngularVelocityVariation:'>
<arg declared_type='CGFloat' index='0' name='particleAngularVelocityVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleBounce:'>
<arg declared_type='CGFloat' index='0' name='particleBounce' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleBounceVariation:'>
<arg declared_type='CGFloat' index='0' name='particleBounceVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleCharge:'>
<arg declared_type='CGFloat' index='0' name='particleCharge' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleChargeVariation:'>
<arg declared_type='CGFloat' index='0' name='particleChargeVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='particleColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorVariation:'>
<arg declared_type='SCNVector4' index='0' name='particleColorVariation' type='{SCNVector4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleDiesOnCollision:'>
<arg declared_type='BOOL' index='0' name='particleDiesOnCollision' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleFriction:'>
<arg declared_type='CGFloat' index='0' name='particleFriction' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleFrictionVariation:'>
<arg declared_type='CGFloat' index='0' name='particleFrictionVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleImage:'>
<arg declared_type='id _Nullable' index='0' name='particleImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleIntensity:'>
<arg declared_type='CGFloat' index='0' name='particleIntensity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleIntensityVariation:'>
<arg declared_type='CGFloat' index='0' name='particleIntensityVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleLifeSpan:'>
<arg declared_type='CGFloat' index='0' name='particleLifeSpan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleLifeSpanVariation:'>
<arg declared_type='CGFloat' index='0' name='particleLifeSpanVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleMass:'>
<arg declared_type='CGFloat' index='0' name='particleMass' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleMassVariation:'>
<arg declared_type='CGFloat' index='0' name='particleMassVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleSize:'>
<arg declared_type='CGFloat' index='0' name='particleSize' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleSizeVariation:'>
<arg declared_type='CGFloat' index='0' name='particleSizeVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleVelocity:'>
<arg declared_type='CGFloat' index='0' name='particleVelocity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleVelocityVariation:'>
<arg declared_type='CGFloat' index='0' name='particleVelocityVariation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyControllers:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='propertyControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortingMode:'>
<arg declared_type='SCNParticleSortingMode' index='0' name='sortingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeedFactor:'>
<arg declared_type='CGFloat' index='0' name='speedFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpreadingAngle:'>
<arg declared_type='CGFloat' index='0' name='spreadingAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStretchFactor:'>
<arg declared_type='CGFloat' index='0' name='stretchFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSystemSpawnedOnCollision:'>
<arg declared_type='SCNParticleSystem * _Nullable' index='0' name='systemSpawnedOnCollision' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSystemSpawnedOnDying:'>
<arg declared_type='SCNParticleSystem * _Nullable' index='0' name='systemSpawnedOnDying' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSystemSpawnedOnLiving:'>
<arg declared_type='SCNParticleSystem * _Nullable' index='0' name='systemSpawnedOnLiving' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWarmupDuration:'>
<arg declared_type='CGFloat' index='0' name='warmupDuration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortingMode'>
<retval declared_type='SCNParticleSortingMode' type='i'/>
</method>
<method selector='speedFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='spreadingAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='stretchFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='systemSpawnedOnCollision'>
<retval declared_type='SCNParticleSystem * _Nullable' type='@'/>
</method>
<method selector='systemSpawnedOnDying'>
<retval declared_type='SCNParticleSystem * _Nullable' type='@'/>
</method>
<method selector='systemSpawnedOnLiving'>
<retval declared_type='SCNParticleSystem * _Nullable' type='@'/>
</method>
<method selector='warmupDuration'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SCNPhysicsBallSocketJoint'>
<method selector='anchorA'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='anchorB'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='bodyA'>
<retval declared_type='SCNPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='bodyB'>
<retval declared_type='SCNPhysicsBody * _Nullable' type='@'/>
</method>
<method class_method='true' selector='jointWithBody:anchor:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='body' type='@'/>
<arg declared_type='SCNVector3' index='1' name='anchor' type='{SCNVector3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='jointWithBodyA:anchorA:bodyB:anchorB:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SCNVector3' index='1' name='anchorA' type='{SCNVector3=fff}'/>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='2' name='bodyB' type='@'/>
<arg declared_type='SCNVector3' index='3' name='anchorB' type='{SCNVector3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAnchorA:'>
<arg declared_type='SCNVector3' index='0' name='anchorA' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorB:'>
<arg declared_type='SCNVector3' index='0' name='anchorB' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNPhysicsBody'>
<method selector='allowsResting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='angularDamping'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='angularRestingThreshold'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='angularVelocity'>
<retval declared_type='SCNVector4' type='{SCNVector4=ffff}'/>
</method>
<method selector='angularVelocityFactor'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='applyForce:atPosition:impulse:'>
<arg declared_type='SCNVector3' index='0' name='direction' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='1' name='position' type='{SCNVector3=fff}'/>
<arg declared_type='BOOL' index='2' name='impulse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyForce:impulse:'>
<arg declared_type='SCNVector3' index='0' name='direction' type='{SCNVector3=fff}'/>
<arg declared_type='BOOL' index='1' name='impulse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyTorque:impulse:'>
<arg declared_type='SCNVector4' index='0' name='torque' type='{SCNVector4=ffff}'/>
<arg declared_type='BOOL' index='1' name='impulse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bodyWithType:shape:'>
<arg declared_type='SCNPhysicsBodyType' index='0' name='type' type='i'/>
<arg declared_type='SCNPhysicsShape * _Nullable' index='1' name='shape' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='centerOfMassOffset'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='charge'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='clearAllForces'>
<retval declared_type='void' type='v'/>
</method>
<method selector='collisionBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='contactTestBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='continuousCollisionDetectionThreshold'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='damping'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='dynamicBody'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='friction'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='isAffectedByGravity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isResting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='kinematicBody'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='linearRestingThreshold'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='mass'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='momentOfInertia'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='physicsShape'>
<retval declared_type='SCNPhysicsShape * _Nullable' type='@'/>
</method>
<method selector='resetTransform'>
<retval declared_type='void' type='v'/>
</method>
<method selector='restitution'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='rollingFriction'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAffectedByGravity:'>
<arg declared_type='BOOL' index='0' name='affectedByGravity' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsResting:'>
<arg declared_type='BOOL' index='0' name='allowsResting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngularDamping:'>
<arg declared_type='CGFloat' index='0' name='angularDamping' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngularRestingThreshold:'>
<arg declared_type='CGFloat' index='0' name='angularRestingThreshold' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngularVelocity:'>
<arg declared_type='SCNVector4' index='0' name='angularVelocity' type='{SCNVector4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngularVelocityFactor:'>
<arg declared_type='SCNVector3' index='0' name='angularVelocityFactor' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type='NSUInteger' index='0' name='categoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterOfMassOffset:'>
<arg declared_type='SCNVector3' index='0' name='centerOfMassOffset' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCharge:'>
<arg declared_type='CGFloat' index='0' name='charge' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollisionBitMask:'>
<arg declared_type='NSUInteger' index='0' name='collisionBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContactTestBitMask:'>
<arg declared_type='NSUInteger' index='0' name='contactTestBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContinuousCollisionDetectionThreshold:'>
<arg declared_type='CGFloat' index='0' name='continuousCollisionDetectionThreshold' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDamping:'>
<arg declared_type='CGFloat' index='0' name='damping' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFriction:'>
<arg declared_type='CGFloat' index='0' name='friction' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLinearRestingThreshold:'>
<arg declared_type='CGFloat' index='0' name='linearRestingThreshold' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMass:'>
<arg declared_type='CGFloat' index='0' name='mass' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMomentOfInertia:'>
<arg declared_type='SCNVector3' index='0' name='momentOfInertia' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPhysicsShape:'>
<arg declared_type='SCNPhysicsShape * _Nullable' index='0' name='physicsShape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResting:'>
<arg declared_type='BOOL' index='0' name='resting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestitution:'>
<arg declared_type='CGFloat' index='0' name='restitution' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRollingFriction:'>
<arg declared_type='CGFloat' index='0' name='rollingFriction' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='SCNPhysicsBodyType' index='0' name='type' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesDefaultMomentOfInertia:'>
<arg declared_type='BOOL' index='0' name='usesDefaultMomentOfInertia' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVelocity:'>
<arg declared_type='SCNVector3' index='0' name='velocity' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVelocityFactor:'>
<arg declared_type='SCNVector3' index='0' name='velocityFactor' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='staticBody'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='type'>
<retval declared_type='SCNPhysicsBodyType' type='i'/>
</method>
<method selector='usesDefaultMomentOfInertia'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='velocity'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='velocityFactor'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
</class>
<class name='SCNPhysicsConeTwistJoint'>
<method selector='bodyA'>
<retval declared_type='SCNPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='bodyB'>
<retval declared_type='SCNPhysicsBody * _Nullable' type='@'/>
</method>
<method selector='frameA'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='frameB'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method class_method='true' selector='jointWithBody:frame:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='body' type='@'/>
<arg declared_type='SCNMatrix4' index='1' name='frame' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='jointWithBodyA:frameA:bodyB:frameB:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SCNMatrix4' index='1' name='frameA' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='2' name='bodyB' type='@'/>
<arg declared_type='SCNMatrix4' index='3' name='frameB' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumAngularLimit1'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumAngularLimit2'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumTwistAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setFrameA:'>
<arg declared_type='SCNMatrix4' index='0' name='frameA' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameB:'>
<arg declared_type='SCNMatrix4' index='0' name='frameB' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumAngularLimit1:'>
<arg declared_type='CGFloat' index='0' name='maximumAngularLimit1' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumAngularLimit2:'>
<arg declared_type='CGFloat' index='0' name='maximumAngularLimit2' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumTwistAngle:'>
<arg declared_type='CGFloat' index='0' name='maximumTwistAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNPhysicsContact'>
<method selector='collisionImpulse'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='contactNormal'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='contactPoint'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='nodeA'>
<retval declared_type='SCNNode * _Nonnull' type='@'/>
</method>
<method selector='nodeB'>
<retval declared_type='SCNNode * _Nonnull' type='@'/>
</method>
<method selector='penetrationDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='sweepTestFraction'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SCNPhysicsField'>
<method selector='categoryBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='customFieldWithEvaluationBlock:'>
<arg declared_type='SCNFieldForceEvaluator _Nonnull' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='SCNVector3' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' type='{SCNVector3=fff}'/>
<arg declared_type='float' type='f'/>
<arg declared_type='float' type='f'/>
<arg declared_type='NSTimeInterval' type='d'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</arg>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method selector='direction'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method class_method='true' selector='dragField'>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='electricField'>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method selector='falloffExponent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='halfExtent'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExclusive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='linearGravityField'>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='magneticField'>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method selector='minimumDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='noiseFieldWithSmoothness:animationSpeed:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f'/>
<arg declared_type='CGFloat' index='1' name='speed' type='f'/>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method class_method='true' selector='radialGravityField'>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method selector='scope'>
<retval declared_type='SCNPhysicsFieldScope' type='i'/>
</method>
<method selector='setActive:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type='NSUInteger' index='0' name='categoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirection:'>
<arg declared_type='SCNVector3' index='0' name='direction' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExclusive:'>
<arg declared_type='BOOL' index='0' name='exclusive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFalloffExponent:'>
<arg declared_type='CGFloat' index='0' name='falloffExponent' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHalfExtent:'>
<arg declared_type='SCNVector3' index='0' name='halfExtent' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumDistance:'>
<arg declared_type='CGFloat' index='0' name='minimumDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type='SCNVector3' index='0' name='offset' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScope:'>
<arg declared_type='SCNPhysicsFieldScope' index='0' name='scope' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrength:'>
<arg declared_type='CGFloat' index='0' name='strength' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesEllipsoidalExtent:'>
<arg declared_type='BOOL' index='0' name='usesEllipsoidalExtent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='springField'>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method selector='strength'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='turbulenceFieldWithSmoothness:animationSpeed:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f'/>
<arg declared_type='CGFloat' index='1' name='speed' type='f'/>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
<method selector='usesEllipsoidalExtent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='vortexField'>
<retval declared_type='SCNPhysicsField * _Nonnull' type='@'/>
</method>
</class>
<class name='SCNPhysicsHingeJoint'>
<method selector='anchorA'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='anchorB'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='axisA'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='axisB'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='bodyA'>
<retval declared_type='SCNPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='bodyB'>
<retval declared_type='SCNPhysicsBody * _Nullable' type='@'/>
</method>
<method class_method='true' selector='jointWithBody:axis:anchor:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='body' type='@'/>
<arg declared_type='SCNVector3' index='1' name='axis' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='2' name='anchor' type='{SCNVector3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='jointWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SCNVector3' index='1' name='axisA' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='2' name='anchorA' type='{SCNVector3=fff}'/>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='3' name='bodyB' type='@'/>
<arg declared_type='SCNVector3' index='4' name='axisB' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='5' name='anchorB' type='{SCNVector3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAnchorA:'>
<arg declared_type='SCNVector3' index='0' name='anchorA' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorB:'>
<arg declared_type='SCNVector3' index='0' name='anchorB' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisA:'>
<arg declared_type='SCNVector3' index='0' name='axisA' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisB:'>
<arg declared_type='SCNVector3' index='0' name='axisB' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNPhysicsShape'>
<method selector='options'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method class_method='true' selector='shapeWithGeometry:options:'>
<arg declared_type='SCNGeometry * _Nonnull' index='0' name='geometry' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeWithNode:options:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeWithShapes:transforms:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='shapes' type='@'/>
<arg declared_type='NSArray * _Nullable' index='1' name='transforms' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='transforms'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='SCNPhysicsSliderJoint'>
<method selector='anchorA'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='anchorB'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='axisA'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='axisB'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='bodyA'>
<retval declared_type='SCNPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='bodyB'>
<retval declared_type='SCNPhysicsBody * _Nullable' type='@'/>
</method>
<method class_method='true' selector='jointWithBody:axis:anchor:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='body' type='@'/>
<arg declared_type='SCNVector3' index='1' name='axis' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='2' name='anchor' type='{SCNVector3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='jointWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SCNVector3' index='1' name='axisA' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='2' name='anchorA' type='{SCNVector3=fff}'/>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='3' name='bodyB' type='@'/>
<arg declared_type='SCNVector3' index='4' name='axisB' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='5' name='anchorB' type='{SCNVector3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumAngularLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumLinearLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumAngularLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumLinearLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='motorMaximumForce'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='motorMaximumTorque'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='motorTargetAngularVelocity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='motorTargetLinearVelocity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAnchorA:'>
<arg declared_type='SCNVector3' index='0' name='anchorA' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorB:'>
<arg declared_type='SCNVector3' index='0' name='anchorB' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisA:'>
<arg declared_type='SCNVector3' index='0' name='axisA' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisB:'>
<arg declared_type='SCNVector3' index='0' name='axisB' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumAngularLimit:'>
<arg declared_type='CGFloat' index='0' name='maximumAngularLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumLinearLimit:'>
<arg declared_type='CGFloat' index='0' name='maximumLinearLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumAngularLimit:'>
<arg declared_type='CGFloat' index='0' name='minimumAngularLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumLinearLimit:'>
<arg declared_type='CGFloat' index='0' name='minimumLinearLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMotorMaximumForce:'>
<arg declared_type='CGFloat' index='0' name='motorMaximumForce' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMotorMaximumTorque:'>
<arg declared_type='CGFloat' index='0' name='motorMaximumTorque' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMotorTargetAngularVelocity:'>
<arg declared_type='CGFloat' index='0' name='motorTargetAngularVelocity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMotorTargetLinearVelocity:'>
<arg declared_type='CGFloat' index='0' name='motorTargetLinearVelocity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNPhysicsVehicle'>
<method selector='applyBrakingForce:forWheelAtIndex:'>
<arg declared_type='CGFloat' index='0' name='value' type='f'/>
<arg declared_type='NSInteger' index='1' name='index' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyEngineForce:forWheelAtIndex:'>
<arg declared_type='CGFloat' index='0' name='value' type='f'/>
<arg declared_type='NSInteger' index='1' name='index' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='chassisBody'>
<retval declared_type='SCNPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='setSteeringAngle:forWheelAtIndex:'>
<arg declared_type='CGFloat' index='0' name='value' type='f'/>
<arg declared_type='NSInteger' index='1' name='index' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speedInKilometersPerHour'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='vehicleWithChassisBody:wheels:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='chassisBody' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='wheels' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='wheels'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='SCNPhysicsVehicleWheel'>
<method selector='axle'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='connectionPosition'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='frictionSlip'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumSuspensionForce'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumSuspensionTravel'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='node'>
<retval declared_type='SCNNode * _Nonnull' type='@'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAxle:'>
<arg declared_type='SCNVector3' index='0' name='axle' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnectionPosition:'>
<arg declared_type='SCNVector3' index='0' name='connectionPosition' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrictionSlip:'>
<arg declared_type='CGFloat' index='0' name='frictionSlip' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumSuspensionForce:'>
<arg declared_type='CGFloat' index='0' name='maximumSuspensionForce' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumSuspensionTravel:'>
<arg declared_type='CGFloat' index='0' name='maximumSuspensionTravel' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSteeringAxis:'>
<arg declared_type='SCNVector3' index='0' name='steeringAxis' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuspensionCompression:'>
<arg declared_type='CGFloat' index='0' name='suspensionCompression' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuspensionDamping:'>
<arg declared_type='CGFloat' index='0' name='suspensionDamping' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuspensionRestLength:'>
<arg declared_type='CGFloat' index='0' name='suspensionRestLength' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuspensionStiffness:'>
<arg declared_type='CGFloat' index='0' name='suspensionStiffness' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='steeringAxis'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='suspensionCompression'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='suspensionDamping'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='suspensionRestLength'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='suspensionStiffness'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='wheelWithNode:'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SCNPhysicsWorld'>
<method selector='addBehavior:'>
<arg declared_type='SCNPhysicsBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allBehaviors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='contactDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='contactTestBetweenBody:andBody:options:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='1' name='bodyB' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='options' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='contactTestWithBody:options:'>
<arg declared_type='SCNPhysicsBody * _Nonnull' index='0' name='body' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='convexSweepTestWithShape:fromTransform:toTransform:options:'>
<arg declared_type='SCNPhysicsShape * _Nonnull' index='0' name='shape' type='@'/>
<arg declared_type='SCNMatrix4' index='1' name='from' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='SCNMatrix4' index='2' name='to' type='{SCNMatrix4=ffffffffffffffff}'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='options' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='gravity'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='rayTestWithSegmentFromPoint:toPoint:options:'>
<arg declared_type='SCNVector3' index='0' name='origin' type='{SCNVector3=fff}'/>
<arg declared_type='SCNVector3' index='1' name='dest' type='{SCNVector3=fff}'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='options' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeAllBehaviors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeBehavior:'>
<arg declared_type='SCNPhysicsBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContactDelegate:'>
<arg declared_type='id _Nullable' index='0' name='contactDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGravity:'>
<arg declared_type='SCNVector3' index='0' name='gravity' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeStep:'>
<arg declared_type='NSTimeInterval' index='0' name='timeStep' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='timeStep'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='updateCollisionPairs'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNPlane'>
<method selector='cornerRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='cornerSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method class_method='true' selector='planeWithWidth:height:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<arg declared_type='CGFloat' index='1' name='height' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type='CGFloat' index='0' name='cornerRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='cornerSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='heightSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidthSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='widthSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='widthSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='SCNPyramid'>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='lengthSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method class_method='true' selector='pyramidWithWidth:height:length:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<arg declared_type='CGFloat' index='1' name='height' type='f'/>
<arg declared_type='CGFloat' index='2' name='length' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='heightSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLength:'>
<arg declared_type='CGFloat' index='0' name='length' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLengthSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='lengthSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidthSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='widthSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='widthSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='SCNReferenceNode'>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='referenceURL' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadingPolicy'>
<retval declared_type='SCNReferenceLoadingPolicy' type='i'/>
</method>
<method class_method='true' selector='referenceNodeWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='referenceURL' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='referenceURL'>
<retval declared_type='NSURL * _Nonnull' type='@'/>
</method>
<method selector='setLoadingPolicy:'>
<arg declared_type='SCNReferenceLoadingPolicy' index='0' name='loadingPolicy' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferenceURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='referenceURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unload'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNReplicatorConstraint'>
<method selector='orientationOffset'>
<retval declared_type='SCNQuaternion' type='{SCNVector4=ffff}'/>
</method>
<method selector='positionOffset'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='replicatesOrientation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='replicatesPosition'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='replicatesScale'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='replicatorConstraintWithTarget:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='target' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='scaleOffset'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='setOrientationOffset:'>
<arg declared_type='SCNQuaternion' index='0' name='orientationOffset' type='{SCNVector4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionOffset:'>
<arg declared_type='SCNVector3' index='0' name='positionOffset' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReplicatesOrientation:'>
<arg declared_type='BOOL' index='0' name='replicatesOrientation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReplicatesPosition:'>
<arg declared_type='BOOL' index='0' name='replicatesPosition' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReplicatesScale:'>
<arg declared_type='BOOL' index='0' name='replicatesScale' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleOffset:'>
<arg declared_type='SCNVector3' index='0' name='scaleOffset' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
</class>
<class name='SCNScene'>
<method selector='addParticleSystem:withTransform:'>
<arg declared_type='SCNParticleSystem * _Nonnull' index='0' name='system' type='@'/>
<arg declared_type='SCNMatrix4' index='1' name='transform' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='background'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='fogColor'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='fogDensityExponent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='fogEndDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='fogStartDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lightingEnvironment'>
<retval declared_type='SCNMaterialProperty * _Nonnull' type='@'/>
</method>
<method selector='particleSystems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='physicsWorld'>
<retval declared_type='SCNPhysicsWorld * _Nonnull' type='@'/>
</method>
<method selector='removeAllParticleSystems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeParticleSystem:'>
<arg declared_type='SCNParticleSystem * _Nonnull' index='0' name='system' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rootNode'>
<retval declared_type='SCNNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scene'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sceneNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='sceneNamed:inDirectory:options:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='directory' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='options' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='sceneWithURL:options:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='setAttribute:forKey:'>
<arg declared_type='id _Nullable' index='0' name='attribute' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFogColor:'>
<arg declared_type='id _Nonnull' index='0' name='fogColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFogDensityExponent:'>
<arg declared_type='CGFloat' index='0' name='fogDensityExponent' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFogEndDistance:'>
<arg declared_type='CGFloat' index='0' name='fogEndDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFogStartDistance:'>
<arg declared_type='CGFloat' index='0' name='fogStartDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaused:'>
<arg declared_type='BOOL' index='0' name='paused' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SCNSceneSource'>
<method selector='data'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='entriesPassingTest:'>
<arg declared_type='BOOL (^ _Nonnull)(id _Nonnull, NSString * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='predicate' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='NSString * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='entryWithIdentifier:withClass:'>
<arg declared_type='NSString * _Nonnull' index='0' name='uid' type='@'/>
<arg declared_type='Class _Nonnull' index='1' name='entryClass' type='#'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='identifiersOfEntriesWithClass:'>
<arg declared_type='Class _Nonnull' index='0' name='entryClass' type='#'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithData:options:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithURL:options:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='propertyForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='sceneSourceWithData:options:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='sceneSourceWithURL:options:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='sceneWithOptions:error:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='SCNScene * _Nullable' type='@'/>
</method>
<method selector='sceneWithOptions:statusHandler:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<arg declared_type='SCNSceneSourceStatusHandler _Nullable' function_pointer='true' index='1' name='statusHandler' type='@?'>
<arg declared_type='float' type='f'/>
<arg declared_type='SCNSceneSourceStatus' type='i'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='SCNScene * _Nullable' type='@'/>
</method>
<method selector='url'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
</class>
<class name='SCNShape'>
<method selector='chamferMode'>
<retval declared_type='SCNChamferMode' type='i'/>
</method>
<method selector='chamferProfile'>
<retval declared_type='UIBezierPath * _Nullable' type='@'/>
</method>
<method selector='chamferRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='extrusionDepth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='path'>
<retval declared_type='UIBezierPath * _Nullable' type='@'/>
</method>
<method selector='setChamferMode:'>
<arg declared_type='SCNChamferMode' index='0' name='chamferMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChamferProfile:'>
<arg declared_type='UIBezierPath * _Nullable' index='0' name='chamferProfile' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChamferRadius:'>
<arg declared_type='CGFloat' index='0' name='chamferRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtrusionDepth:'>
<arg declared_type='CGFloat' index='0' name='extrusionDepth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg declared_type='UIBezierPath * _Nullable' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shapeWithPath:extrusionDepth:'>
<arg declared_type='UIBezierPath * _Nullable' index='0' name='path' type='@'/>
<arg declared_type='CGFloat' index='1' name='extrusionDepth' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SCNSkinner'>
<method selector='baseGeometry'>
<retval declared_type='SCNGeometry * _Nullable' type='@'/>
</method>
<method selector='baseGeometryBindTransform'>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</method>
<method selector='boneIndices'>
<retval declared_type='SCNGeometrySource * _Nonnull' type='@'/>
</method>
<method selector='boneInverseBindTransforms'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='boneWeights'>
<retval declared_type='SCNGeometrySource * _Nonnull' type='@'/>
</method>
<method selector='bones'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setBaseGeometry:'>
<arg declared_type='SCNGeometry * _Nullable' index='0' name='baseGeometry' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseGeometryBindTransform:'>
<arg declared_type='SCNMatrix4' index='0' name='baseGeometryBindTransform' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSkeleton:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='skeleton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='skeleton'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method class_method='true' selector='skinnerWithBaseGeometry:bones:boneInverseBindTransforms:boneWeights:boneIndices:'>
<arg declared_type='SCNGeometry * _Nullable' index='0' name='baseGeometry' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='bones' type='@'/>
<arg declared_type='NSArray * _Nullable' index='2' name='boneInverseBindTransforms' type='@'/>
<arg declared_type='SCNGeometrySource * _Nonnull' index='3' name='boneWeights' type='@'/>
<arg declared_type='SCNGeometrySource * _Nonnull' index='4' name='boneIndices' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SCNSliderConstraint'>
<method selector='collisionCategoryBitMask'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='offset'>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setCollisionCategoryBitMask:'>
<arg declared_type='NSUInteger' index='0' name='collisionCategoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type='SCNVector3' index='0' name='offset' type='{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sliderConstraint'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SCNSphere'>
<method selector='isGeodesic'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='segmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setGeodesic:'>
<arg declared_type='BOOL' index='0' name='geodesic' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='segmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sphereWithRadius:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SCNTechnique'>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='handleBindingOfSymbol:usingBlock:'>
<arg declared_type='NSString * _Nonnull' index='0' name='symbol' type='@'/>
<arg declared_type='SCNBindingBlock _Nullable' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='SCNNode * _Nullable' type='@'/>
<arg declared_type='SCNRenderer * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type='id _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setObject:forKeyedSubscript:'>
<arg declared_type='id _Nullable' index='0' name='obj' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='techniqueBySequencingTechniques:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='techniques' type='@'/>
<retval declared_type='SCNTechnique * _Nullable' type='@'/>
</method>
<method class_method='true' selector='techniqueWithDictionary:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='dictionary' type='@'/>
<retval declared_type='SCNTechnique * _Nullable' type='@'/>
</method>
</class>
<class name='SCNText'>
<method selector='alignmentMode'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='chamferProfile'>
<retval declared_type='UIBezierPath * _Nullable' type='@'/>
</method>
<method selector='chamferRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='containerFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='extrusionDepth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='flatness'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='font'>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='isWrapped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlignmentMode:'>
<arg declared_type='NSString * _Nonnull' index='0' name='alignmentMode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChamferProfile:'>
<arg declared_type='UIBezierPath * _Nullable' index='0' name='chamferProfile' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChamferRadius:'>
<arg declared_type='CGFloat' index='0' name='chamferRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContainerFrame:'>
<arg declared_type='CGRect' index='0' name='containerFrame' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtrusionDepth:'>
<arg declared_type='CGFloat' index='0' name='extrusionDepth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlatness:'>
<arg declared_type='CGFloat' index='0' name='flatness' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg declared_type='id _Nullable' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTruncationMode:'>
<arg declared_type='NSString * _Nonnull' index='0' name='truncationMode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWrapped:'>
<arg declared_type='BOOL' index='0' name='wrapped' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='textWithString:extrusionDepth:'>
<arg declared_type='id _Nullable' index='0' name='string' type='@'/>
<arg declared_type='CGFloat' index='1' name='extrusionDepth' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='truncationMode'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='SCNTimingFunction'>
<method class_method='true' selector='functionWithTimingMode:'>
<arg declared_type='SCNActionTimingMode' index='0' name='timingMode' type='i'/>
<retval declared_type='SCNTimingFunction * _Nonnull' type='@'/>
</method>
</class>
<class name='SCNTorus'>
<method selector='pipeRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='pipeSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='ringRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='ringSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setPipeRadius:'>
<arg declared_type='CGFloat' index='0' name='pipeRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPipeSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='pipeSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRingRadius:'>
<arg declared_type='CGFloat' index='0' name='ringRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRingSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='ringSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='torusWithRingRadius:pipeRadius:'>
<arg declared_type='CGFloat' index='0' name='ringRadius' type='f'/>
<arg declared_type='CGFloat' index='1' name='pipeRadius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SCNTransaction'>
<method class_method='true' selector='animationDuration'>
<retval declared_type='CFTimeInterval' type='d'/>
</method>
<method class_method='true' selector='begin'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='commit'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='completionBlock'>
<retval declared_type='void (^ _Nullable)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method class_method='true' selector='disableActions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='lock'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAnimationDuration:'>
<arg declared_type='CFTimeInterval' index='0' name='animationDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCompletionBlock:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='completionBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDisableActions:'>
<arg declared_type='BOOL' index='0' name='disableActions' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setValue:forKey:'>
<arg declared_type='id _Nullable' index='0' name='value' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='unlock'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='valueForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='SCNTransformConstraint'>
<method class_method='true' selector='orientationConstraintInWorldSpace:withBlock:'>
<arg declared_type='BOOL' index='0' name='world' type='B'/>
<arg declared_type='SCNQuaternion (^ _Nonnull)(SCNNode * _Nonnull, SCNQuaternion)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<arg declared_type='SCNQuaternion' type='{SCNVector4=ffff}'/>
<retval declared_type='SCNQuaternion' type='{SCNVector4=ffff}'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='positionConstraintInWorldSpace:withBlock:'>
<arg declared_type='BOOL' index='0' name='world' type='B'/>
<arg declared_type='SCNVector3 (^ _Nonnull)(SCNNode * _Nonnull, SCNVector3)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<arg declared_type='SCNVector3' type='{SCNVector3=fff}'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='transformConstraintInWorldSpace:withBlock:'>
<arg declared_type='BOOL' index='0' name='world' type='B'/>
<arg declared_type='SCNMatrix4 (^ _Nonnull)(SCNNode * _Nonnull, SCNMatrix4)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='SCNNode * _Nonnull' type='@'/>
<arg declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
<retval declared_type='SCNMatrix4' type='{SCNMatrix4=ffffffffffffffff}'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SCNTube'>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='heightSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='innerRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='outerRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='radialSegmentCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='heightSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInnerRadius:'>
<arg declared_type='CGFloat' index='0' name='innerRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOuterRadius:'>
<arg declared_type='CGFloat' index='0' name='outerRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadialSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='radialSegmentCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='tubeWithInnerRadius:outerRadius:height:'>
<arg declared_type='CGFloat' index='0' name='innerRadius' type='f'/>
<arg declared_type='CGFloat' index='1' name='outerRadius' type='f'/>
<arg declared_type='CGFloat' index='2' name='height' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<informal_protocol name='SCNActionable'>
<method selector='actionForKey:' type='@12@0:4@8'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SCNAction * _Nullable' type='@'/>
</method>
<method selector='actionKeys' type='@8@0:4'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='hasActions' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeActionForKey:' type='v12@0:4@8'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActions' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:' type='v12@0:4@8'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:completionHandler:' type='v16@0:4@8@?12'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:forKey:' type='v16@0:4@8@12'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:forKey:completionHandler:' type='v20@0:4@8@12@?16'>
<arg declared_type='SCNAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='key' type='@'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='2' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNAnimatable'>
<method selector='addAnimation:forKey:' type='v16@0:4@8@12'>
<arg declared_type='id _Nonnull' index='0' name='animation' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnimationPlayer:forKey:' type='v16@0:4@8@12'>
<arg declared_type='SCNAnimationPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationKeys' type='@8@0:4'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='animationPlayerForKey:' type='@12@0:4@8'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SCNAnimationPlayer * _Nullable' type='@'/>
</method>
<method selector='isAnimationForKeyPaused:' type='B12@0:4@8'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pauseAnimationForKey:' type='v12@0:4@8'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllAnimations' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationForKey:' type='v12@0:4@8'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationForKey:blendOutDuration:' type='v16@0:4@8f12'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<arg declared_type='CGFloat' index='1' name='duration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationForKey:fadeOutDuration:' type='v16@0:4@8f12'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<arg declared_type='CGFloat' index='1' name='duration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeAnimationForKey:' type='v12@0:4@8'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:forAnimationKey:' type='v16@0:4f8@12'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNAvoidOccluderConstraintDelegate'>
<method selector='avoidOccluderConstraint:didAvoidOccluder:forNode:' type='v20@0:4@8@12@16'>
<arg declared_type='SCNAvoidOccluderConstraint * _Nonnull' index='0' name='constraint' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='occluder' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='2' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='avoidOccluderConstraint:shouldAvoidOccluder:forNode:' type='B20@0:4@8@12@16'>
<arg declared_type='SCNAvoidOccluderConstraint * _Nonnull' index='0' name='constraint' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='occluder' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='2' name='node' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='SCNBoundingVolume'>
<method selector='getBoundingBoxMin:max:' type='B16@0:4^{SCNVector3=fff}8^{SCNVector3=fff}12'>
<arg declared_type='SCNVector3 * _Nullable' index='0' name='min' type='^{SCNVector3=fff}'/>
<arg declared_type='SCNVector3 * _Nullable' index='1' name='max' type='^{SCNVector3=fff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getBoundingSphereCenter:radius:' type='B16@0:4^{SCNVector3=fff}8^f12'>
<arg declared_type='SCNVector3 * _Nullable' index='0' name='center' type='^{SCNVector3=fff}'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='radius' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBoundingBoxMin:max:' type='v16@0:4^{SCNVector3=fff}8^{SCNVector3=fff}12'>
<arg declared_type='SCNVector3 * _Nullable' index='0' name='min' type='^{SCNVector3=fff}'/>
<arg declared_type='SCNVector3 * _Nullable' index='1' name='max' type='^{SCNVector3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNBufferStream'>
<method selector='writeBytes:length:' type='v16@0:4^v8I12'>
<arg declared_type='void * _Nonnull' index='0' name='bytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNCameraControllerDelegate'>
<method selector='cameraInertiaDidEndForController:' type='v12@0:4@8'>
<arg declared_type='SCNCameraController * _Nonnull' index='0' name='cameraController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cameraInertiaWillStartForController:' type='v12@0:4@8'>
<arg declared_type='SCNCameraController * _Nonnull' index='0' name='cameraController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNNodeRendererDelegate'>
<method selector='renderNode:renderer:arguments:' type='v20@0:4@8@12@16'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='SCNRenderer * _Nonnull' index='1' name='renderer' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='arguments' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNPhysicsContactDelegate'>
<method selector='physicsWorld:didBeginContact:' type='v16@0:4@8@12'>
<arg declared_type='SCNPhysicsWorld * _Nonnull' index='0' name='world' type='@'/>
<arg declared_type='SCNPhysicsContact * _Nonnull' index='1' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='physicsWorld:didEndContact:' type='v16@0:4@8@12'>
<arg declared_type='SCNPhysicsWorld * _Nonnull' index='0' name='world' type='@'/>
<arg declared_type='SCNPhysicsContact * _Nonnull' index='1' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='physicsWorld:didUpdateContact:' type='v16@0:4@8@12'>
<arg declared_type='SCNPhysicsWorld * _Nonnull' index='0' name='world' type='@'/>
<arg declared_type='SCNPhysicsContact * _Nonnull' index='1' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNSceneRenderer'>
<method selector='audioEngine' type='@8@0:4'>
<retval declared_type='AVAudioEngine * _Nonnull' type='@'/>
</method>
<method selector='audioListener' type='@8@0:4'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='autoenablesDefaultLighting' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='context' type='^v8@0:4'>
<retval declared_type='void * _Nullable' type='^v'/>
</method>
<method selector='debugOptions' type='I8@0:4'>
<retval declared_type='SCNDebugOptions' type='I'/>
</method>
<method selector='delegate' type='@8@0:4'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='hitTest:options:' type='@20@0:4{CGPoint=ff}8@16'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='isJitteringEnabled' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNodeInsideFrustum:withPointOfView:' type='B16@0:4@8@12'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='SCNNode * _Nonnull' index='1' name='pointOfView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaying' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loops' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nodesInsideFrustumWithPointOfView:' type='@12@0:4@8'>
<arg declared_type='SCNNode * _Nonnull' index='0' name='pointOfView' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='overlaySKScene' type='@8@0:4'>
<retval declared_type='SKScene * _Nullable' type='@'/>
</method>
<method selector='pointOfView' type='@8@0:4'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='prepareObject:shouldAbortBlock:' type='B16@0:4@8@?12'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='BOOL (^ _Nullable)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareObjects:withCompletionHandler:' type='v16@0:4@8@?12'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentScene:withTransition:incomingPointOfView:completionHandler:' type='v24@0:4@8@12@16@?20'>
<arg declared_type='SCNScene * _Nonnull' index='0' name='scene' type='@'/>
<arg declared_type='SKTransition * _Nonnull' index='1' name='transition' type='@'/>
<arg declared_type='SCNNode * _Nullable' index='2' name='pointOfView' type='@'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='projectPoint:' type='{SCNVector3=fff}20@0:4{SCNVector3=fff}8'>
<arg declared_type='SCNVector3' index='0' name='point' type='{SCNVector3=fff}'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
<method selector='renderingAPI' type='I8@0:4'>
<retval declared_type='SCNRenderingAPI' type='I'/>
</method>
<method selector='scene' type='@8@0:4'>
<retval declared_type='SCNScene * _Nullable' type='@'/>
</method>
<method selector='sceneTime' type='d8@0:4'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setAudioListener:' type='v12@0:4@8'>
<arg declared_type='SCNNode * _Nullable' index='0' name='audioListener' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoenablesDefaultLighting:' type='v12@0:4B8'>
<arg declared_type='BOOL' index='0' name='autoenablesDefaultLighting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDebugOptions:' type='v12@0:4I8'>
<arg declared_type='SCNDebugOptions' index='0' name='debugOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:' type='v12@0:4@8'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setJitteringEnabled:' type='v12@0:4B8'>
<arg declared_type='BOOL' index='0' name='jitteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoops:' type='v12@0:4B8'>
<arg declared_type='BOOL' index='0' name='loops' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverlaySKScene:' type='v12@0:4@8'>
<arg declared_type='SKScene * _Nullable' index='0' name='overlaySKScene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaying:' type='v12@0:4B8'>
<arg declared_type='BOOL' index='0' name='playing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPointOfView:' type='v12@0:4@8'>
<arg declared_type='SCNNode * _Nullable' index='0' name='pointOfView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScene:' type='v12@0:4@8'>
<arg declared_type='SCNScene * _Nullable' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSceneTime:' type='v16@0:4d8'>
<arg declared_type='NSTimeInterval' index='0' name='sceneTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsStatistics:' type='v12@0:4B8'>
<arg declared_type='BOOL' index='0' name='showsStatistics' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsStatistics' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unprojectPoint:' type='{SCNVector3=fff}20@0:4{SCNVector3=fff}8'>
<arg declared_type='SCNVector3' index='0' name='point' type='{SCNVector3=fff}'/>
<retval declared_type='SCNVector3' type='{SCNVector3=fff}'/>
</method>
</informal_protocol>
<informal_protocol name='SCNSceneRendererDelegate'>
<method selector='renderer:didApplyAnimationsAtTime:' type='v20@0:4@8d12'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didApplyConstraintsAtTime:' type='v20@0:4@8d12'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didRenderScene:atTime:' type='v24@0:4@8@12d16'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNScene * _Nonnull' index='1' name='scene' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:didSimulatePhysicsAtTime:' type='v20@0:4@8d12'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:updateAtTime:' type='v20@0:4@8d12'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderer:willRenderScene:atTime:' type='v24@0:4@8@12d16'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='SCNScene * _Nonnull' index='1' name='scene' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='time' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SCNShadable'>
<method selector='setShaderModifiers:' type='v12@0:4@8'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='shaderModifiers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shaderModifiers' type='@8@0:4'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='SCNTechniqueSupport'>
<method selector='setTechnique:' type='v12@0:4@8'>
<arg declared_type='SCNTechnique * _Nullable' index='0' name='technique' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='technique' type='@8@0:4'>
<retval declared_type='SCNTechnique * _Nullable' type='@'/>
</method>
</informal_protocol>
</signatures>
