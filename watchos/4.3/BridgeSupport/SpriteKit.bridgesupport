<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/OpenGLES.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/AVFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreImage.framework'/>
<depends_on path='/System/Library/Frameworks/OpenAL.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/MobileCoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/UIKit.framework'/>
<depends_on path='/System/Library/Frameworks/GLKit.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='vector_float2' type='{_vector_float2=&quot;x&quot;f&quot;y&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
</struct>
<struct name='vector_float3' type='{_vector_float3=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
</struct>
<struct name='vector_float4' type='{_vector_float4=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
<field declared_type='float' name='w' type='f'/>
</struct>
<struct name='vector_int2' type='{_vector_int2=&quot;x&quot;i&quot;y&quot;i}'>
<field declared_type='int' name='x' type='i'/>
<field declared_type='int' name='y' type='i'/>
</struct>
<struct name='vector_int4' type='{_vector_int4=&quot;x&quot;i&quot;y&quot;i&quot;z&quot;i&quot;w&quot;i}'>
<field declared_type='int' name='x' type='i'/>
<field declared_type='int' name='y' type='i'/>
<field declared_type='int' name='z' type='i'/>
<field declared_type='int' name='w' type='i'/>
</struct>
<struct name='vector_uint2' type='{_vector_uint2=&quot;x&quot;I&quot;y&quot;I}'>
<field declared_type='unsigned int' name='x' type='I'/>
<field declared_type='unsigned int' name='y' type='I'/>
</struct>
<struct name='vector_uint3' type='{_vector_uint3=&quot;x&quot;I&quot;y&quot;I&quot;z&quot;I}'>
<field declared_type='unsigned int' name='x' type='I'/>
<field declared_type='unsigned int' name='y' type='I'/>
<field declared_type='unsigned int' name='z' type='I'/>
</struct>
<enum name='SKActionTimingEaseIn' value='1'/>
<enum name='SKActionTimingEaseInEaseOut' value='3'/>
<enum name='SKActionTimingEaseOut' value='2'/>
<enum name='SKActionTimingLinear' value='0'/>
<enum name='SKAttributeTypeFloat' value='1'/>
<enum name='SKAttributeTypeHalfFloat' value='5'/>
<enum name='SKAttributeTypeNone' value='0'/>
<enum name='SKAttributeTypeVectorFloat2' value='2'/>
<enum name='SKAttributeTypeVectorFloat3' value='3'/>
<enum name='SKAttributeTypeVectorFloat4' value='4'/>
<enum name='SKAttributeTypeVectorHalfFloat2' value='6'/>
<enum name='SKAttributeTypeVectorHalfFloat3' value='7'/>
<enum name='SKAttributeTypeVectorHalfFloat4' value='8'/>
<enum name='SKBlendModeAdd' value='1'/>
<enum name='SKBlendModeAlpha' value='0'/>
<enum name='SKBlendModeMultiply' value='3'/>
<enum name='SKBlendModeMultiplyX2' value='4'/>
<enum name='SKBlendModeReplace' value='6'/>
<enum name='SKBlendModeScreen' value='5'/>
<enum name='SKBlendModeSubtract' value='2'/>
<enum name='SKInterpolationModeLinear' value='1'/>
<enum name='SKInterpolationModeSpline' value='2'/>
<enum name='SKInterpolationModeStep' value='3'/>
<enum name='SKLabelHorizontalAlignmentModeCenter' value='0'/>
<enum name='SKLabelHorizontalAlignmentModeLeft' value='1'/>
<enum name='SKLabelHorizontalAlignmentModeRight' value='2'/>
<enum name='SKLabelVerticalAlignmentModeBaseline' value='0'/>
<enum name='SKLabelVerticalAlignmentModeBottom' value='3'/>
<enum name='SKLabelVerticalAlignmentModeCenter' value='1'/>
<enum name='SKLabelVerticalAlignmentModeTop' value='2'/>
<enum name='SKParticleRenderOrderDontCare' value='2'/>
<enum name='SKParticleRenderOrderOldestFirst' value='1'/>
<enum name='SKParticleRenderOrderOldestLast' value='0'/>
<enum name='SKRepeatModeClamp' value='1'/>
<enum name='SKRepeatModeLoop' value='2'/>
<enum name='SKSceneScaleModeAspectFill' value='1'/>
<enum name='SKSceneScaleModeAspectFit' value='2'/>
<enum name='SKSceneScaleModeFill' value='0'/>
<enum name='SKSceneScaleModeResizeFill' value='3'/>
<enum name='SKTextureFilteringLinear' value='1'/>
<enum name='SKTextureFilteringNearest' value='0'/>
<enum name='SKTileAdjacencyAll' value='255'/>
<enum name='SKTileAdjacencyDown' value='16'/>
<enum name='SKTileAdjacencyDownEdge' value='199'/>
<enum name='SKTileAdjacencyLeft' value='64'/>
<enum name='SKTileAdjacencyLeftEdge' value='31'/>
<enum name='SKTileAdjacencyLowerLeft' value='32'/>
<enum name='SKTileAdjacencyLowerLeftCorner' value='253'/>
<enum name='SKTileAdjacencyLowerLeftEdge' value='7'/>
<enum name='SKTileAdjacencyLowerRight' value='8'/>
<enum name='SKTileAdjacencyLowerRightCorner' value='127'/>
<enum name='SKTileAdjacencyLowerRightEdge' value='193'/>
<enum name='SKTileAdjacencyRight' value='4'/>
<enum name='SKTileAdjacencyRightEdge' value='241'/>
<enum name='SKTileAdjacencyUp' value='1'/>
<enum name='SKTileAdjacencyUpEdge' value='124'/>
<enum name='SKTileAdjacencyUpperLeft' value='128'/>
<enum name='SKTileAdjacencyUpperLeftCorner' value='247'/>
<enum name='SKTileAdjacencyUpperLeftEdge' value='28'/>
<enum name='SKTileAdjacencyUpperRight' value='2'/>
<enum name='SKTileAdjacencyUpperRightCorner' value='223'/>
<enum name='SKTileAdjacencyUpperRightEdge' value='112'/>
<enum name='SKTileDefinitionRotation0' value='0'/>
<enum name='SKTileDefinitionRotation180' value='2'/>
<enum name='SKTileDefinitionRotation270' value='3'/>
<enum name='SKTileDefinitionRotation90' value='1'/>
<enum name='SKTileHexFlatAdjacencyAll' value='63'/>
<enum name='SKTileHexFlatAdjacencyDown' value='8'/>
<enum name='SKTileHexFlatAdjacencyLowerLeft' value='16'/>
<enum name='SKTileHexFlatAdjacencyLowerRight' value='4'/>
<enum name='SKTileHexFlatAdjacencyUp' value='1'/>
<enum name='SKTileHexFlatAdjacencyUpperLeft' value='32'/>
<enum name='SKTileHexFlatAdjacencyUpperRight' value='2'/>
<enum name='SKTileHexPointyAdjacencyAdd' value='63'/>
<enum name='SKTileHexPointyAdjacencyLeft' value='32'/>
<enum name='SKTileHexPointyAdjacencyLowerLeft' value='16'/>
<enum name='SKTileHexPointyAdjacencyLowerRight' value='8'/>
<enum name='SKTileHexPointyAdjacencyRight' value='4'/>
<enum name='SKTileHexPointyAdjacencyUpperLeft' value='1'/>
<enum name='SKTileHexPointyAdjacencyUpperRight' value='2'/>
<enum name='SKTileSetTypeGrid' value='0'/>
<enum name='SKTileSetTypeHexagonalFlat' value='2'/>
<enum name='SKTileSetTypeHexagonalPointy' value='3'/>
<enum name='SKTileSetTypeIsometric' value='1'/>
<enum name='SKTransitionDirectionDown' value='1'/>
<enum name='SKTransitionDirectionLeft' value='3'/>
<enum name='SKTransitionDirectionRight' value='2'/>
<enum name='SKTransitionDirectionUp' value='0'/>
<enum name='SKUniformTypeFloat' value='1'/>
<enum name='SKUniformTypeFloatMatrix2' value='5'/>
<enum name='SKUniformTypeFloatMatrix3' value='6'/>
<enum name='SKUniformTypeFloatMatrix4' value='7'/>
<enum name='SKUniformTypeFloatVector2' value='2'/>
<enum name='SKUniformTypeFloatVector3' value='3'/>
<enum name='SKUniformTypeFloatVector4' value='4'/>
<enum name='SKUniformTypeNone' value='0'/>
<enum name='SKUniformTypeTexture' value='8'/>
<enum name='SKVIEW_AVAILABLE' value='0'/>
<enum name='SK_VERSION' value='23001000'/>
<class name='NSObject'>
<method selector='didApplyConstraintsForScene:'>
<arg declared_type='SKScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didBeginContact:'>
<arg declared_type='SKPhysicsContact * _Nonnull' index='0' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didEndContact:'>
<arg declared_type='SKPhysicsContact * _Nonnull' index='0' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didEvaluateActionsForScene:'>
<arg declared_type='SKScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFinishUpdateForScene:'>
<arg declared_type='SKScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didSimulatePhysicsForScene:'>
<arg declared_type='SKScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubdivisionLevels:'>
<arg declared_type='NSInteger' index='0' name='subdivisionLevels' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWarpGeometry:'>
<arg declared_type='SKWarpGeometry * _Nullable' index='0' name='warpGeometry' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subdivisionLevels'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='update:forScene:'>
<arg declared_type='NSTimeInterval' index='0' name='currentTime' type='d'/>
<arg declared_type='SKScene * _Nonnull' index='1' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='warpGeometry'>
<retval declared_type='SKWarpGeometry * _Nullable' type='@'/>
</method>
</class>
<class name='SK3DNode'>
<method selector='autoenablesDefaultLighting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hitTest:options:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithViewportSize:'>
<arg declared_type='CGSize' index='0' name='viewportSize' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loops'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='nodeWithViewportSize:'>
<arg declared_type='CGSize' index='0' name='viewportSize' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='pointOfView'>
<retval declared_type='SCNNode * _Nullable' type='@'/>
</method>
<method selector='projectPoint:'>
<arg declared_type='vector_float3' index='0' name='point' type='{_vector_float3=fff}'/>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='sceneTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='scnScene'>
<retval declared_type='SCNScene * _Nullable' type='@'/>
</method>
<method selector='setAutoenablesDefaultLighting:'>
<arg declared_type='BOOL' index='0' name='autoenablesDefaultLighting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoops:'>
<arg declared_type='BOOL' index='0' name='loops' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaying:'>
<arg declared_type='BOOL' index='0' name='playing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPointOfView:'>
<arg declared_type='SCNNode * _Nullable' index='0' name='pointOfView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSceneTime:'>
<arg declared_type='NSTimeInterval' index='0' name='sceneTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScnScene:'>
<arg declared_type='SCNScene * _Nullable' index='0' name='scnScene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewportSize:'>
<arg declared_type='CGSize' index='0' name='viewportSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unprojectPoint:'>
<arg declared_type='vector_float3' index='0' name='point' type='{_vector_float3=fff}'/>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='viewportSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='SKAction'>
<method class_method='true' selector='actionNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
<method class_method='true' selector='actionNamed:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
<method class_method='true' selector='actionNamed:fromURL:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
<method class_method='true' selector='actionNamed:fromURL:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animateWithNormalTextures:timePerFrame:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='animateWithNormalTextures:timePerFrame:resize:restore:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<arg declared_type='BOOL' index='2' name='resize' type='B'/>
<arg declared_type='BOOL' index='3' name='restore' type='B'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='animateWithTextures:timePerFrame:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='animateWithTextures:timePerFrame:resize:restore:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<arg declared_type='BOOL' index='2' name='resize' type='B'/>
<arg declared_type='BOOL' index='3' name='restore' type='B'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='animateWithWarps:times:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='warps' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='times' type='@'/>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animateWithWarps:times:restore:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='warps' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='times' type='@'/>
<arg declared_type='BOOL' index='2' name='restore' type='B'/>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
<method class_method='true' selector='applyAngularImpulse:duration:'>
<arg declared_type='CGFloat' index='0' name='impulse' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='applyForce:atPoint:duration:'>
<arg declared_type='CGVector' index='0' name='force' type='{CGVector=ff}'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='applyForce:duration:'>
<arg declared_type='CGVector' index='0' name='force' type='{CGVector=ff}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='applyImpulse:atPoint:duration:'>
<arg declared_type='CGVector' index='0' name='impulse' type='{CGVector=ff}'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='applyImpulse:duration:'>
<arg declared_type='CGVector' index='0' name='impulse' type='{CGVector=ff}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='applyTorque:duration:'>
<arg declared_type='CGFloat' index='0' name='torque' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeChargeBy:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeChargeTo:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeMassBy:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeMassTo:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeObstructionBy:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeObstructionTo:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeOcclusionBy:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeOcclusionTo:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changePlaybackRateBy:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changePlaybackRateTo:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeReverbBy:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeReverbTo:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeVolumeBy:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='changeVolumeTo:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorizeWithColor:colorBlendFactor:duration:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='color' type='@'/>
<arg declared_type='CGFloat' index='1' name='colorBlendFactor' type='f'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorizeWithColorBlendFactor:duration:'>
<arg declared_type='CGFloat' index='0' name='colorBlendFactor' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='customActionWithDuration:actionBlock:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='void (^ _Nonnull)(SKNode * _Nonnull, CGFloat)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='SKNode * _Nonnull' type='@'/>
<arg declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='fadeAlphaBy:duration:'>
<arg declared_type='CGFloat' index='0' name='factor' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fadeAlphaTo:duration:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fadeInWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fadeOutWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='falloffBy:duration:'>
<arg declared_type='float' index='0' name='falloff' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='falloffTo:duration:'>
<arg declared_type='float' index='0' name='falloff' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='followPath:asOffset:orientToPath:duration:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<arg declared_type='BOOL' index='1' name='offset' type='B'/>
<arg declared_type='BOOL' index='2' name='orient' type='B'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='followPath:asOffset:orientToPath:speed:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<arg declared_type='BOOL' index='1' name='offset' type='B'/>
<arg declared_type='BOOL' index='2' name='orient' type='B'/>
<arg declared_type='CGFloat' index='3' name='speed' type='f'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='followPath:duration:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='followPath:speed:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<arg declared_type='CGFloat' index='1' name='speed' type='f'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='group:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='actions' type='@'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='hide'>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveBy:duration:'>
<arg declared_type='CGVector' index='0' name='delta' type='{CGVector=ff}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveByX:y:duration:'>
<arg declared_type='CGFloat' index='0' name='deltaX' type='f'/>
<arg declared_type='CGFloat' index='1' name='deltaY' type='f'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveTo:duration:'>
<arg declared_type='CGPoint' index='0' name='location' type='{CGPoint=ff}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveToX:duration:'>
<arg declared_type='CGFloat' index='0' name='x' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveToY:duration:'>
<arg declared_type='CGFloat' index='0' name='y' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pause'>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='performSelector:onTarget:'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<arg declared_type='id _Nonnull' index='1' name='target' type='@'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='play'>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='playSoundFileNamed:waitForCompletion:'>
<arg declared_type='NSString * _Nonnull' index='0' name='soundFile' type='@'/>
<arg declared_type='BOOL' index='1' name='wait' type='B'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='reachTo:rootNode:duration:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='root' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='reachTo:rootNode:velocity:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='root' type='@'/>
<arg declared_type='CGFloat' index='2' name='velocity' type='f'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='reachToNode:rootNode:duration:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='root' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='sec' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='reachToNode:rootNode:velocity:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='root' type='@'/>
<arg declared_type='CGFloat' index='2' name='velocity' type='f'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='removeFromParent'>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='repeatAction:count:'>
<arg declared_type='SKAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='repeatActionForever:'>
<arg declared_type='SKAction * _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeByWidth:height:duration:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<arg declared_type='CGFloat' index='1' name='height' type='f'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeToHeight:duration:'>
<arg declared_type='CGFloat' index='0' name='height' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeToWidth:duration:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeToWidth:height:duration:'>
<arg declared_type='CGFloat' index='0' name='width' type='f'/>
<arg declared_type='CGFloat' index='1' name='height' type='f'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method selector='reversedAction'>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rotateByAngle:duration:'>
<arg declared_type='CGFloat' index='0' name='radians' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rotateToAngle:duration:'>
<arg declared_type='CGFloat' index='0' name='radians' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rotateToAngle:duration:shortestUnitArc:'>
<arg declared_type='CGFloat' index='0' name='radians' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<arg declared_type='BOOL' index='2' name='shortestUnitArc' type='B'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='runAction:onChildWithName:'>
<arg declared_type='SKAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='name' type='@'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='runBlock:'>
<arg declared_type='dispatch_block_t _Nonnull' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='runBlock:queue:'>
<arg declared_type='dispatch_block_t _Nonnull' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='dispatch_queue_t _Nonnull' index='1' name='queue' type='@'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleBy:duration:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleTo:duration:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleToSize:duration:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleXBy:y:duration:'>
<arg declared_type='CGFloat' index='0' name='xScale' type='f'/>
<arg declared_type='CGFloat' index='1' name='yScale' type='f'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleXTo:duration:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleXTo:y:duration:'>
<arg declared_type='CGFloat' index='0' name='xScale' type='f'/>
<arg declared_type='CGFloat' index='1' name='yScale' type='f'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scaleYTo:duration:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sequence:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='actions' type='@'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method selector='setDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setNormalTexture:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='setNormalTexture:resize:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='BOOL' index='1' name='resize' type='B'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setTexture:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='setTexture:resize:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='BOOL' index='1' name='resize' type='B'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method selector='setTimingFunction:'>
<arg declared_type='SKActionTimingFunction _Nonnull' function_pointer='true' index='0' name='timingFunction' type='@?'>
<arg declared_type='float' type='f'/>
<retval declared_type='float' type='f'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimingMode:'>
<arg declared_type='SKActionTimingMode' index='0' name='timingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='speedBy:duration:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='speedTo:duration:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='stereoPanBy:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='stereoPanTo:duration:'>
<arg declared_type='float' index='0' name='v' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='stop'>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='strengthBy:duration:'>
<arg declared_type='float' index='0' name='strength' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='strengthTo:duration:'>
<arg declared_type='float' index='0' name='strength' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method selector='timingFunction'>
<retval declared_type='SKActionTimingFunction _Nonnull' function_pointer='true' type='@?'>
<arg declared_type='float' type='f'/>
<retval declared_type='float' type='f'/>
</retval>
</method>
<method selector='timingMode'>
<retval declared_type='SKActionTimingMode' type='i'/>
</method>
<method class_method='true' selector='unhide'>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='waitForDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='waitForDuration:withRange:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='durationRange' type='d'/>
<retval declared_type='SKAction * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='warpTo:duration:'>
<arg declared_type='SKWarpGeometry * _Nonnull' index='0' name='warp' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
</class>
<class name='SKAttribute'>
<method class_method='true' selector='attributeWithName:type:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='SKAttributeType' index='1' name='type' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:type:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='SKAttributeType' index='1' name='type' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='type'>
<retval declared_type='SKAttributeType' type='i'/>
</method>
</class>
<class name='SKAttributeValue'>
<method selector='floatValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setFloatValue:'>
<arg declared_type='float' index='0' name='floatValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVectorFloat2Value:'>
<arg declared_type='vector_float2' index='0' name='vectorFloat2Value' type='{_vector_float2=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVectorFloat3Value:'>
<arg declared_type='vector_float3' index='0' name='vectorFloat3Value' type='{_vector_float3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVectorFloat4Value:'>
<arg declared_type='vector_float4' index='0' name='vectorFloat4Value' type='{_vector_float4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='valueWithFloat:'>
<arg declared_type='float' index='0' name='value' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithVectorFloat2:'>
<arg declared_type='vector_float2' index='0' name='value' type='{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithVectorFloat3:'>
<arg declared_type='vector_float3' index='0' name='value' type='{_vector_float3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithVectorFloat4:'>
<arg declared_type='vector_float4' index='0' name='value' type='{_vector_float4=ffff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='vectorFloat2Value'>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='vectorFloat3Value'>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='vectorFloat4Value'>
<retval declared_type='vector_float4' type='{_vector_float4=ffff}'/>
</method>
</class>
<class name='SKAudioNode'>
<method selector='autoplayLooped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='avAudioNode'>
<retval declared_type='AVAudioNode * _Nullable' type='@'/>
</method>
<method selector='initWithAVAudioNode:'>
<arg declared_type='AVAudioNode * _Nullable' index='0' name='node' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isPositional'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAutoplayLooped:'>
<arg declared_type='BOOL' index='0' name='autoplayLooped' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAvAudioNode:'>
<arg declared_type='AVAudioNode * _Nullable' index='0' name='avAudioNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositional:'>
<arg declared_type='BOOL' index='0' name='positional' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKCameraNode'>
<method selector='containedNodeSet'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='containsNode:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='SKConstraint'>
<method class_method='true' selector='distance:toNode:'>
<arg declared_type='SKRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='distance:toPoint:'>
<arg declared_type='SKRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='distance:toPoint:inNode:'>
<arg declared_type='SKRange * _Nonnull' index='0' name='range' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}'/>
<arg declared_type='SKNode * _Nonnull' index='2' name='node' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='enabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='orientToNode:offset:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='SKRange * _Nonnull' index='1' name='radians' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='orientToPoint:inNode:offset:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<arg declared_type='SKRange * _Nonnull' index='2' name='radians' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='orientToPoint:offset:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='SKRange * _Nonnull' index='1' name='radians' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='positionX:'>
<arg declared_type='SKRange * _Nonnull' index='0' name='range' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='positionX:Y:'>
<arg declared_type='SKRange * _Nonnull' index='0' name='xRange' type='@'/>
<arg declared_type='SKRange * _Nonnull' index='1' name='yRange' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='positionY:'>
<arg declared_type='SKRange * _Nonnull' index='0' name='range' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='referenceNode'>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferenceNode:'>
<arg declared_type='SKNode * _Nullable' index='0' name='referenceNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='zRotation:'>
<arg declared_type='SKRange * _Nonnull' index='0' name='zRange' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SKCropNode'>
<method selector='maskNode'>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='setMaskNode:'>
<arg declared_type='SKNode * _Nullable' index='0' name='maskNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKEffectNode'>
<method selector='attributeValues'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='SKBlendMode' type='i'/>
</method>
<method selector='setAttributeValues:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributeValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='SKBlendMode' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShader:'>
<arg declared_type='SKShader * _Nullable' index='0' name='shader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCenterFilter:'>
<arg declared_type='BOOL' index='0' name='shouldCenterFilter' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldEnableEffects:'>
<arg declared_type='BOOL' index='0' name='shouldEnableEffects' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldRasterize:'>
<arg declared_type='BOOL' index='0' name='shouldRasterize' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forAttributeNamed:'>
<arg declared_type='SKAttributeValue * _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shader'>
<retval declared_type='SKShader * _Nullable' type='@'/>
</method>
<method selector='shouldCenterFilter'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldEnableEffects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldRasterize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueForAttributeNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SKAttributeValue * _Nullable' type='@'/>
</method>
</class>
<class name='SKEmitterNode'>
<method selector='advanceSimulationTime:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeValues'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='emissionAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='emissionAngleRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='fieldBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='numParticlesToEmit'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='particleAction'>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
<method selector='particleAlpha'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleAlphaRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleAlphaSequence'>
<retval declared_type='SKKeyframeSequence * _Nullable' type='@'/>
</method>
<method selector='particleAlphaSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleBirthRate'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleBlendMode'>
<retval declared_type='SKBlendMode' type='i'/>
</method>
<method selector='particleColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='particleColorAlphaRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorAlphaSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorBlendFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorBlendFactorRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorBlendFactorSequence'>
<retval declared_type='SKKeyframeSequence * _Nullable' type='@'/>
</method>
<method selector='particleColorBlendFactorSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorBlueRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorBlueSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorGreenRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorGreenSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorRedRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorRedSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleColorSequence'>
<retval declared_type='SKKeyframeSequence * _Nullable' type='@'/>
</method>
<method selector='particleLifetime'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleLifetimeRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particlePosition'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='particlePositionRange'>
<retval declared_type='CGVector' type='{CGVector=ff}'/>
</method>
<method selector='particleRenderOrder'>
<retval declared_type='SKParticleRenderOrder' type='I'/>
</method>
<method selector='particleRotation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleRotationRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleRotationSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleScaleRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleScaleSequence'>
<retval declared_type='SKKeyframeSequence * _Nullable' type='@'/>
</method>
<method selector='particleScaleSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='particleSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleSpeedRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleTexture'>
<retval declared_type='SKTexture * _Nullable' type='@'/>
</method>
<method selector='particleZPosition'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleZPositionRange'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='particleZPositionSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='resetSimulation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributeValues:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributeValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmissionAngle:'>
<arg declared_type='CGFloat' index='0' name='emissionAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmissionAngleRange:'>
<arg declared_type='CGFloat' index='0' name='emissionAngleRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldBitMask:'>
<arg declared_type='uint32_t' index='0' name='fieldBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumParticlesToEmit:'>
<arg declared_type='NSUInteger' index='0' name='numParticlesToEmit' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAction:'>
<arg declared_type='SKAction * _Nullable' index='0' name='particleAction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAlpha:'>
<arg declared_type='CGFloat' index='0' name='particleAlpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAlphaRange:'>
<arg declared_type='CGFloat' index='0' name='particleAlphaRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAlphaSequence:'>
<arg declared_type='SKKeyframeSequence * _Nullable' index='0' name='particleAlphaSequence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleAlphaSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleAlphaSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleBirthRate:'>
<arg declared_type='CGFloat' index='0' name='particleBirthRate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleBlendMode:'>
<arg declared_type='SKBlendMode' index='0' name='particleBlendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='particleColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorAlphaRange:'>
<arg declared_type='CGFloat' index='0' name='particleColorAlphaRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorAlphaSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleColorAlphaSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorBlendFactor:'>
<arg declared_type='CGFloat' index='0' name='particleColorBlendFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorBlendFactorRange:'>
<arg declared_type='CGFloat' index='0' name='particleColorBlendFactorRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorBlendFactorSequence:'>
<arg declared_type='SKKeyframeSequence * _Nullable' index='0' name='particleColorBlendFactorSequence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorBlendFactorSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleColorBlendFactorSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorBlueRange:'>
<arg declared_type='CGFloat' index='0' name='particleColorBlueRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorBlueSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleColorBlueSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorGreenRange:'>
<arg declared_type='CGFloat' index='0' name='particleColorGreenRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorGreenSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleColorGreenSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorRedRange:'>
<arg declared_type='CGFloat' index='0' name='particleColorRedRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorRedSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleColorRedSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleColorSequence:'>
<arg declared_type='SKKeyframeSequence * _Nullable' index='0' name='particleColorSequence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleLifetime:'>
<arg declared_type='CGFloat' index='0' name='particleLifetime' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleLifetimeRange:'>
<arg declared_type='CGFloat' index='0' name='particleLifetimeRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticlePosition:'>
<arg declared_type='CGPoint' index='0' name='particlePosition' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticlePositionRange:'>
<arg declared_type='CGVector' index='0' name='particlePositionRange' type='{CGVector=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleRenderOrder:'>
<arg declared_type='SKParticleRenderOrder' index='0' name='particleRenderOrder' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleRotation:'>
<arg declared_type='CGFloat' index='0' name='particleRotation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleRotationRange:'>
<arg declared_type='CGFloat' index='0' name='particleRotationRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleRotationSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleRotationSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleScale:'>
<arg declared_type='CGFloat' index='0' name='particleScale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleScaleRange:'>
<arg declared_type='CGFloat' index='0' name='particleScaleRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleScaleSequence:'>
<arg declared_type='SKKeyframeSequence * _Nullable' index='0' name='particleScaleSequence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleScaleSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleScaleSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleSize:'>
<arg declared_type='CGSize' index='0' name='particleSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleSpeedRange:'>
<arg declared_type='CGFloat' index='0' name='particleSpeedRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleTexture:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='particleTexture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleZPosition:'>
<arg declared_type='CGFloat' index='0' name='particleZPosition' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleZPositionRange:'>
<arg declared_type='CGFloat' index='0' name='particleZPositionRange' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParticleZPositionSpeed:'>
<arg declared_type='CGFloat' index='0' name='particleZPositionSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShader:'>
<arg declared_type='SKShader * _Nullable' index='0' name='shader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetNode:'>
<arg declared_type='SKNode * _Nullable' index='0' name='targetNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forAttributeNamed:'>
<arg declared_type='SKAttributeValue * _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXAcceleration:'>
<arg declared_type='CGFloat' index='0' name='xAcceleration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYAcceleration:'>
<arg declared_type='CGFloat' index='0' name='yAcceleration' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shader'>
<retval declared_type='SKShader * _Nullable' type='@'/>
</method>
<method selector='targetNode'>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='valueForAttributeNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SKAttributeValue * _Nullable' type='@'/>
</method>
<method selector='xAcceleration'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='yAcceleration'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SKFieldNode'>
<method selector='animationSpeed'>
<retval declared_type='float' type='f'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method class_method='true' selector='customFieldWithEvaluationBlock:'>
<arg declared_type='SKFieldForceEvaluator _Nonnull' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='vector_float3' type='{_vector_float3=fff}'/>
<arg declared_type='vector_float3' type='{_vector_float3=fff}'/>
<arg declared_type='float' type='f'/>
<arg declared_type='float' type='f'/>
<arg declared_type='NSTimeInterval' type='d'/>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</arg>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method selector='direction'>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method class_method='true' selector='dragField'>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='electricField'>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method selector='falloff'>
<retval declared_type='float' type='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExclusive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='linearGravityFieldWithVector:'>
<arg declared_type='vector_float3' index='0' name='direction' type='{_vector_float3=fff}'/>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='magneticField'>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method selector='minimumRadius'>
<retval declared_type='float' type='f'/>
</method>
<method class_method='true' selector='noiseFieldWithSmoothness:animationSpeed:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f'/>
<arg declared_type='CGFloat' index='1' name='speed' type='f'/>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='radialGravityField'>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method selector='region'>
<retval declared_type='SKRegion * _Nullable' type='@'/>
</method>
<method selector='setAnimationSpeed:'>
<arg declared_type='float' index='0' name='animationSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type='uint32_t' index='0' name='categoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirection:'>
<arg declared_type='vector_float3' index='0' name='direction' type='{_vector_float3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExclusive:'>
<arg declared_type='BOOL' index='0' name='exclusive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFalloff:'>
<arg declared_type='float' index='0' name='falloff' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumRadius:'>
<arg declared_type='float' index='0' name='minimumRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRegion:'>
<arg declared_type='SKRegion * _Nullable' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmoothness:'>
<arg declared_type='float' index='0' name='smoothness' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrength:'>
<arg declared_type='float' index='0' name='strength' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='texture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='smoothness'>
<retval declared_type='float' type='f'/>
</method>
<method class_method='true' selector='springField'>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method selector='strength'>
<retval declared_type='float' type='f'/>
</method>
<method selector='texture'>
<retval declared_type='SKTexture * _Nullable' type='@'/>
</method>
<method class_method='true' selector='turbulenceFieldWithSmoothness:animationSpeed:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f'/>
<arg declared_type='CGFloat' index='1' name='speed' type='f'/>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='velocityFieldWithTexture:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='velocityTexture' type='@'/>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='velocityFieldWithVector:'>
<arg declared_type='vector_float3' index='0' name='direction' type='{_vector_float3=fff}'/>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='vortexField'>
<retval declared_type='SKFieldNode * _Nonnull' type='@'/>
</method>
</class>
<class name='SKKeyframeSequence'>
<method selector='addKeyframeValue:time:'>
<arg declared_type='id _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='CGFloat' index='1' name='time' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='getKeyframeTimeForIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='getKeyframeValueForIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='initWithCapacity:'>
<arg declared_type='NSUInteger' index='0' name='numItems' type='I'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithKeyframeValues:times:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='values' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='times' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='interpolationMode'>
<retval declared_type='SKInterpolationMode' type='i'/>
</method>
<method selector='removeKeyframeAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLastKeyframe'>
<retval declared_type='void' type='v'/>
</method>
<method selector='repeatMode'>
<retval declared_type='SKRepeatMode' type='i'/>
</method>
<method selector='sampleAtTime:'>
<arg declared_type='CGFloat' index='0' name='time' type='f'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setInterpolationMode:'>
<arg declared_type='SKInterpolationMode' index='0' name='interpolationMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyframeTime:forIndex:'>
<arg declared_type='CGFloat' index='0' name='time' type='f'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyframeValue:forIndex:'>
<arg declared_type='id _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyframeValue:time:forIndex:'>
<arg declared_type='id _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='CGFloat' index='1' name='time' type='f'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepeatMode:'>
<arg declared_type='SKRepeatMode' index='0' name='repeatMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKLabelNode'>
<method selector='attributedText'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='SKBlendMode' type='i'/>
</method>
<method selector='color'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='colorBlendFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='fontColor'>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fontSize'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='horizontalAlignmentMode'>
<retval declared_type='SKLabelHorizontalAlignmentMode' type='i'/>
</method>
<method selector='initWithFontNamed:'>
<arg declared_type='NSString * _Nullable' index='0' name='fontName' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='labelNodeWithAttributedText:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedText' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='labelNodeWithFontNamed:'>
<arg declared_type='NSString * _Nullable' index='0' name='fontName' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='labelNodeWithText:'>
<arg declared_type='NSString * _Nullable' index='0' name='text' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i'/>
</method>
<method selector='numberOfLines'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='preferredMaxLayoutWidth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAttributedText:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='SKBlendMode' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorBlendFactor:'>
<arg declared_type='CGFloat' index='0' name='colorBlendFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontColor:'>
<arg declared_type='UIColor * _Nullable' index='0' name='fontColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontName:'>
<arg declared_type='NSString * _Nullable' index='0' name='fontName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalAlignmentMode:'>
<arg declared_type='SKLabelHorizontalAlignmentMode' index='0' name='horizontalAlignmentMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfLines:'>
<arg declared_type='NSInteger' index='0' name='numberOfLines' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredMaxLayoutWidth:'>
<arg declared_type='CGFloat' index='0' name='preferredMaxLayoutWidth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg declared_type='NSString * _Nullable' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalAlignmentMode:'>
<arg declared_type='SKLabelVerticalAlignmentMode' index='0' name='verticalAlignmentMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='text'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='verticalAlignmentMode'>
<retval declared_type='SKLabelVerticalAlignmentMode' type='i'/>
</method>
</class>
<class name='SKLightNode'>
<method selector='ambientColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='falloff'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lightColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='setAmbientColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='ambientColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type='uint32_t' index='0' name='categoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFalloff:'>
<arg declared_type='CGFloat' index='0' name='falloff' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLightColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='lightColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='shadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
</class>
<class name='SKMutableTexture'>
<method selector='initWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='initWithSize:pixelFormat:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<arg declared_type='int' index='1' name='format' type='i'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='modifyPixelDataWithBlock:'>
<arg declared_type='void (^)(void *, size_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='size_t' type='L'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='mutableTextureWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype' type='@'/>
</method>
</class>
<class name='SKNode'>
<method selector='actionForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SKAction * _Nullable' type='@'/>
</method>
<method selector='addChild:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alpha'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='attributeValues'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='calculateAccumulatedFrame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='childNodeWithName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='children'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='constraints'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='containsPoint:'>
<arg declared_type='CGPoint' index='0' name='p' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='convertPoint:fromNode:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='convertPoint:toNode:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='SKNode * _Nonnull' index='1' name='node' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='enumerateChildNodesWithName:usingBlock:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='void (^ _Nonnull)(SKNode * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='SKNode * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='frame'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='hasActions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inParentHierarchy:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='parent' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='insertChild:atIndex:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='intersectsNode:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToNode:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserInteractionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='moveToParent:'>
<arg declared_type='SKNode * _Nonnull' index='0' name='parent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method class_method='true' selector='node'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='nodeAtPoint:'>
<arg declared_type='CGPoint' index='0' name='p' type='{CGPoint=ff}'/>
<retval declared_type='SKNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='nodeWithFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filename' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='nodesAtPoint:'>
<arg declared_type='CGPoint' index='0' name='p' type='{CGPoint=ff}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='parent'>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='physicsBody'>
<retval declared_type='SKPhysicsBody * _Nullable' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='reachConstraints'>
<retval declared_type='SKReachConstraints * _Nullable' type='@'/>
</method>
<method selector='removeActionForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllChildren'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildrenInArray:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromParent'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:'>
<arg declared_type='SKAction * _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:completion:'>
<arg declared_type='SKAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='runAction:withKey:'>
<arg declared_type='SKAction * _Nonnull' index='0' name='action' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scene'>
<retval declared_type='SKScene * _Nullable' type='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributeValues:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributeValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstraints:'>
<arg declared_type='NSArray * _Nullable' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaused:'>
<arg declared_type='BOOL' index='0' name='paused' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPhysicsBody:'>
<arg declared_type='SKPhysicsBody * _Nullable' index='0' name='physicsBody' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachConstraints:'>
<arg declared_type='SKReachConstraints * _Nullable' index='0' name='reachConstraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScale:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg declared_type='NSMutableDictionary * _Nullable' index='0' name='userData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInteractionEnabled:'>
<arg declared_type='BOOL' index='0' name='userInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forAttributeNamed:'>
<arg declared_type='SKAttributeValue * _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXScale:'>
<arg declared_type='CGFloat' index='0' name='xScale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYScale:'>
<arg declared_type='CGFloat' index='0' name='yScale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZPosition:'>
<arg declared_type='CGFloat' index='0' name='zPosition' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZRotation:'>
<arg declared_type='CGFloat' index='0' name='zRotation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='userData'>
<retval declared_type='NSMutableDictionary * _Nullable' type='@'/>
</method>
<method selector='valueForAttributeNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SKAttributeValue * _Nullable' type='@'/>
</method>
<method selector='xScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='yScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='zPosition'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='zRotation'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SKPhysicsBody'>
<method selector='affectedByGravity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allContactedBodies'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='allowsRotation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='angularDamping'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='angularVelocity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='applyAngularImpulse:'>
<arg declared_type='CGFloat' index='0' name='impulse' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyForce:'>
<arg declared_type='CGVector' index='0' name='force' type='{CGVector=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyForce:atPoint:'>
<arg declared_type='CGVector' index='0' name='force' type='{CGVector=ff}'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyImpulse:'>
<arg declared_type='CGVector' index='0' name='impulse' type='{CGVector=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyImpulse:atPoint:'>
<arg declared_type='CGVector' index='0' name='impulse' type='{CGVector=ff}'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyTorque:'>
<arg declared_type='CGFloat' index='0' name='torque' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='area'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='bodyWithBodies:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='bodies' type='@'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithCircleOfRadius:'>
<arg declared_type='CGFloat' index='0' name='r' type='f'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithCircleOfRadius:center:'>
<arg declared_type='CGFloat' index='0' name='r' type='f'/>
<arg declared_type='CGPoint' index='1' name='center' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithEdgeChainFromPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithEdgeFromPoint:toPoint:'>
<arg declared_type='CGPoint' index='0' name='p1' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='1' name='p2' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithEdgeLoopFromPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithEdgeLoopFromRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithPolygonFromPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithRectangleOfSize:'>
<arg declared_type='CGSize' index='0' name='s' type='{CGSize=ff}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithRectangleOfSize:center:'>
<arg declared_type='CGSize' index='0' name='s' type='{CGSize=ff}'/>
<arg declared_type='CGPoint' index='1' name='center' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithTexture:alphaThreshold:size:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='float' index='1' name='alphaThreshold' type='f'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bodyWithTexture:size:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='categoryBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='charge'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='collisionBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='contactTestBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='density'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='fieldBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='friction'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='isDynamic'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isResting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='joints'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='linearDamping'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='mass'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='node'>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='pinned'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='restitution'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAffectedByGravity:'>
<arg declared_type='BOOL' index='0' name='affectedByGravity' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsRotation:'>
<arg declared_type='BOOL' index='0' name='allowsRotation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngularDamping:'>
<arg declared_type='CGFloat' index='0' name='angularDamping' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAngularVelocity:'>
<arg declared_type='CGFloat' index='0' name='angularVelocity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategoryBitMask:'>
<arg declared_type='uint32_t' index='0' name='categoryBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCharge:'>
<arg declared_type='CGFloat' index='0' name='charge' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollisionBitMask:'>
<arg declared_type='uint32_t' index='0' name='collisionBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContactTestBitMask:'>
<arg declared_type='uint32_t' index='0' name='contactTestBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDensity:'>
<arg declared_type='CGFloat' index='0' name='density' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDynamic:'>
<arg declared_type='BOOL' index='0' name='dynamic' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldBitMask:'>
<arg declared_type='uint32_t' index='0' name='fieldBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFriction:'>
<arg declared_type='CGFloat' index='0' name='friction' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLinearDamping:'>
<arg declared_type='CGFloat' index='0' name='linearDamping' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMass:'>
<arg declared_type='CGFloat' index='0' name='mass' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPinned:'>
<arg declared_type='BOOL' index='0' name='pinned' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResting:'>
<arg declared_type='BOOL' index='0' name='resting' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestitution:'>
<arg declared_type='CGFloat' index='0' name='restitution' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesPreciseCollisionDetection:'>
<arg declared_type='BOOL' index='0' name='usesPreciseCollisionDetection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVelocity:'>
<arg declared_type='CGVector' index='0' name='velocity' type='{CGVector=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesPreciseCollisionDetection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='velocity'>
<retval declared_type='CGVector' type='{CGVector=ff}'/>
</method>
</class>
<class name='SKPhysicsContact'>
<method selector='bodyA'>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='bodyB'>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='collisionImpulse'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='contactNormal'>
<retval declared_type='CGVector' type='{CGVector=ff}'/>
</method>
<method selector='contactPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
</class>
<class name='SKPhysicsJoint'>
<method selector='bodyA'>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='bodyB'>
<retval declared_type='SKPhysicsBody * _Nonnull' type='@'/>
</method>
<method selector='reactionForce'>
<retval declared_type='CGVector' type='{CGVector=ff}'/>
</method>
<method selector='reactionTorque'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setBodyA:'>
<arg declared_type='SKPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBodyB:'>
<arg declared_type='SKPhysicsBody * _Nonnull' index='0' name='bodyB' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKPhysicsJointFixed'>
<method class_method='true' selector='jointWithBodyA:bodyB:anchor:'>
<arg declared_type='SKPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SKPhysicsBody * _Nonnull' index='1' name='bodyB' type='@'/>
<arg declared_type='CGPoint' index='2' name='anchor' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsJointFixed * _Nonnull' type='@'/>
</method>
</class>
<class name='SKPhysicsJointLimit'>
<method class_method='true' selector='jointWithBodyA:bodyB:anchorA:anchorB:'>
<arg declared_type='SKPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SKPhysicsBody * _Nonnull' index='1' name='bodyB' type='@'/>
<arg declared_type='CGPoint' index='2' name='anchorA' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='3' name='anchorB' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsJointLimit * _Nonnull' type='@'/>
</method>
<method selector='maxLength'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setMaxLength:'>
<arg declared_type='CGFloat' index='0' name='maxLength' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKPhysicsJointPin'>
<method selector='frictionTorque'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='jointWithBodyA:bodyB:anchor:'>
<arg declared_type='SKPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SKPhysicsBody * _Nonnull' index='1' name='bodyB' type='@'/>
<arg declared_type='CGPoint' index='2' name='anchor' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsJointPin * _Nonnull' type='@'/>
</method>
<method selector='lowerAngleLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='rotationSpeed'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setFrictionTorque:'>
<arg declared_type='CGFloat' index='0' name='frictionTorque' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLowerAngleLimit:'>
<arg declared_type='CGFloat' index='0' name='lowerAngleLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotationSpeed:'>
<arg declared_type='CGFloat' index='0' name='rotationSpeed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldEnableLimits:'>
<arg declared_type='BOOL' index='0' name='shouldEnableLimits' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpperAngleLimit:'>
<arg declared_type='CGFloat' index='0' name='upperAngleLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEnableLimits'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='upperAngleLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SKPhysicsJointSliding'>
<method class_method='true' selector='jointWithBodyA:bodyB:anchor:axis:'>
<arg declared_type='SKPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SKPhysicsBody * _Nonnull' index='1' name='bodyB' type='@'/>
<arg declared_type='CGPoint' index='2' name='anchor' type='{CGPoint=ff}'/>
<arg declared_type='CGVector' index='3' name='axis' type='{CGVector=ff}'/>
<retval declared_type='SKPhysicsJointSliding * _Nonnull' type='@'/>
</method>
<method selector='lowerDistanceLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setLowerDistanceLimit:'>
<arg declared_type='CGFloat' index='0' name='lowerDistanceLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldEnableLimits:'>
<arg declared_type='BOOL' index='0' name='shouldEnableLimits' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpperDistanceLimit:'>
<arg declared_type='CGFloat' index='0' name='upperDistanceLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEnableLimits'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='upperDistanceLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SKPhysicsJointSpring'>
<method selector='damping'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='frequency'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='jointWithBodyA:bodyB:anchorA:anchorB:'>
<arg declared_type='SKPhysicsBody * _Nonnull' index='0' name='bodyA' type='@'/>
<arg declared_type='SKPhysicsBody * _Nonnull' index='1' name='bodyB' type='@'/>
<arg declared_type='CGPoint' index='2' name='anchorA' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='3' name='anchorB' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsJointSpring * _Nonnull' type='@'/>
</method>
<method selector='setDamping:'>
<arg declared_type='CGFloat' index='0' name='damping' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrequency:'>
<arg declared_type='CGFloat' index='0' name='frequency' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKPhysicsWorld'>
<method selector='addJoint:'>
<arg declared_type='SKPhysicsJoint * _Nonnull' index='0' name='joint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bodyAlongRayStart:end:'>
<arg declared_type='CGPoint' index='0' name='start' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='1' name='end' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsBody * _Nullable' type='@'/>
</method>
<method selector='bodyAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<retval declared_type='SKPhysicsBody * _Nullable' type='@'/>
</method>
<method selector='bodyInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='SKPhysicsBody * _Nullable' type='@'/>
</method>
<method selector='contactDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='enumerateBodiesAlongRayStart:end:usingBlock:'>
<arg declared_type='CGPoint' index='0' name='start' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='1' name='end' type='{CGPoint=ff}'/>
<arg declared_type='void (^ _Nonnull)(SKPhysicsBody * _Nonnull, CGPoint, CGVector, BOOL * _Nonnull)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='SKPhysicsBody * _Nonnull' type='@'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg declared_type='CGVector' type='{CGVector=ff}'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateBodiesAtPoint:usingBlock:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='void (^ _Nonnull)(SKPhysicsBody * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='SKPhysicsBody * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateBodiesInRect:usingBlock:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='void (^ _Nonnull)(SKPhysicsBody * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='SKPhysicsBody * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='gravity'>
<retval declared_type='CGVector' type='{CGVector=ff}'/>
</method>
<method selector='removeAllJoints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeJoint:'>
<arg declared_type='SKPhysicsJoint * _Nonnull' index='0' name='joint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sampleFieldsAt:'>
<arg declared_type='vector_float3' index='0' name='position' type='{_vector_float3=fff}'/>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='setContactDelegate:'>
<arg declared_type='id _Nullable' index='0' name='contactDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGravity:'>
<arg declared_type='CGVector' index='0' name='gravity' type='{CGVector=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpeed:'>
<arg declared_type='CGFloat' index='0' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speed'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SKRange'>
<method selector='initWithLowerLimit:upperLimit:'>
<arg declared_type='CGFloat' index='0' name='lower' type='f'/>
<arg declared_type='CGFloat' index='1' name='upper' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='lowerLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='rangeWithConstantValue:'>
<arg declared_type='CGFloat' index='0' name='value' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rangeWithLowerLimit:'>
<arg declared_type='CGFloat' index='0' name='lower' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rangeWithLowerLimit:upperLimit:'>
<arg declared_type='CGFloat' index='0' name='lower' type='f'/>
<arg declared_type='CGFloat' index='1' name='upper' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rangeWithNoLimits'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rangeWithUpperLimit:'>
<arg declared_type='CGFloat' index='0' name='upper' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='rangeWithValue:variance:'>
<arg declared_type='CGFloat' index='0' name='value' type='f'/>
<arg declared_type='CGFloat' index='1' name='variance' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setLowerLimit:'>
<arg declared_type='CGFloat' index='0' name='lowerLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpperLimit:'>
<arg declared_type='CGFloat' index='0' name='upperLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='upperLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SKReachConstraints'>
<method selector='initWithLowerAngleLimit:upperAngleLimit:'>
<arg declared_type='CGFloat' index='0' name='lowerAngleLimit' type='f'/>
<arg declared_type='CGFloat' index='1' name='upperAngleLimit' type='f'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='lowerAngleLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setLowerAngleLimit:'>
<arg declared_type='CGFloat' index='0' name='lowerAngleLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpperAngleLimit:'>
<arg declared_type='CGFloat' index='0' name='upperAngleLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='upperAngleLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SKReferenceNode'>
<method selector='didLoadReferenceNode:'>
<arg declared_type='SKNode * _Nullable' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFileNamed:'>
<arg declared_type='NSString * _Nullable' index='0' name='fileName' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='referenceNodeWithFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='referenceNodeWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='referenceURL' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='resolveReferenceNode'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKRegion'>
<method selector='containsPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='infiniteRegion'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithRadius:'>
<arg declared_type='float' index='0' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='inverseRegion'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='path'>
<retval declared_type='CGPathRef _Nullable' type='^{CGPath=}'/>
</method>
<method selector='regionByDifferenceFromRegion:'>
<arg declared_type='SKRegion * _Nonnull' index='0' name='region' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='regionByIntersectionWithRegion:'>
<arg declared_type='SKRegion * _Nonnull' index='0' name='region' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='regionByUnionWithRegion:'>
<arg declared_type='SKRegion * _Nonnull' index='0' name='region' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SKScene'>
<method selector='anchorPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='audioEngine'>
<retval declared_type='AVAudioEngine * _Nonnull' type='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='camera'>
<retval declared_type='SKCameraNode * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='didApplyConstraints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didChangeSize:'>
<arg declared_type='CGSize' index='0' name='oldSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didEvaluateActions'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFinishUpdate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didSimulatePhysics'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='listener'>
<retval declared_type='SKNode * _Nullable' type='@'/>
</method>
<method selector='physicsWorld'>
<retval declared_type='SKPhysicsWorld * _Nonnull' type='@'/>
</method>
<method selector='scaleMode'>
<retval declared_type='SKSceneScaleMode' type='i'/>
</method>
<method selector='sceneDidLoad'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sceneWithSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAnchorPoint:'>
<arg declared_type='CGPoint' index='0' name='anchorPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCamera:'>
<arg declared_type='SKCameraNode * _Nullable' index='0' name='camera' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setListener:'>
<arg declared_type='SKNode * _Nullable' index='0' name='listener' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleMode:'>
<arg declared_type='SKSceneScaleMode' index='0' name='scaleMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='update:'>
<arg declared_type='NSTimeInterval' index='0' name='currentTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKShader'>
<method selector='addUniform:'>
<arg declared_type='SKUniform * _Nonnull' index='0' name='uniform' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithSource:'>
<arg declared_type='NSString * _Nonnull' index='0' name='source' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSource:uniforms:'>
<arg declared_type='NSString * _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='uniforms' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='removeUniformNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSource:'>
<arg declared_type='NSString * _Nullable' index='0' name='source' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUniforms:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='uniforms' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shader'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shaderWithFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shaderWithSource:'>
<arg declared_type='NSString * _Nonnull' index='0' name='source' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shaderWithSource:uniforms:'>
<arg declared_type='NSString * _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='uniforms' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='source'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='uniformNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='SKUniform * _Nullable' type='@'/>
</method>
<method selector='uniforms'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='SKShapeNode'>
<method selector='attributeValues'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='SKBlendMode' type='i'/>
</method>
<method selector='fillColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='fillShader'>
<retval declared_type='SKShader * _Nullable' type='@'/>
</method>
<method selector='fillTexture'>
<retval declared_type='SKTexture * _Nullable' type='@'/>
</method>
<method selector='glowWidth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='isAntialiased'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineCap'>
<retval declared_type='CGLineCap' type='i'/>
</method>
<method selector='lineJoin'>
<retval declared_type='CGLineJoin' type='i'/>
</method>
<method selector='lineLength'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='lineWidth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='miterLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='path'>
<retval declared_type='CGPathRef _Nullable' type='^{CGPath=}'/>
</method>
<method selector='setAntialiased:'>
<arg declared_type='BOOL' index='0' name='antialiased' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributeValues:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributeValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='SKBlendMode' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='fillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillShader:'>
<arg declared_type='SKShader * _Nullable' index='0' name='fillShader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillTexture:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='fillTexture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlowWidth:'>
<arg declared_type='CGFloat' index='0' name='glowWidth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCap:'>
<arg declared_type='CGLineCap' index='0' name='lineCap' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoin:'>
<arg declared_type='CGLineJoin' index='0' name='lineJoin' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='CGFloat' index='0' name='lineWidth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiterLimit:'>
<arg declared_type='CGFloat' index='0' name='miterLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg declared_type='CGPathRef _Nullable' index='0' name='path' type='^{CGPath=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='strokeColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeShader:'>
<arg declared_type='SKShader * _Nullable' index='0' name='strokeShader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeTexture:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='strokeTexture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forAttributeNamed:'>
<arg declared_type='SKAttributeValue * _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shapeNodeWithCircleOfRadius:'>
<arg declared_type='CGFloat' index='0' name='radius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithEllipseInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithEllipseOfSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithPath:centered:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='path' type='^{CGPath=}'/>
<arg declared_type='BOOL' index='1' name='centered' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithPoints:count:'>
<arg declared_type='CGPoint * _Nonnull' index='0' name='points' type='^{CGPoint=ff}'/>
<arg declared_type='size_t' index='1' name='numPoints' type='L'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithRect:cornerRadius:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='CGFloat' index='1' name='cornerRadius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithRectOfSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithRectOfSize:cornerRadius:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<arg declared_type='CGFloat' index='1' name='cornerRadius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='shapeNodeWithSplinePoints:count:'>
<arg declared_type='CGPoint * _Nonnull' index='0' name='points' type='^{CGPoint=ff}'/>
<arg declared_type='size_t' index='1' name='numPoints' type='L'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='strokeColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='strokeShader'>
<retval declared_type='SKShader * _Nullable' type='@'/>
</method>
<method selector='strokeTexture'>
<retval declared_type='SKTexture * _Nullable' type='@'/>
</method>
<method selector='valueForAttributeNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SKAttributeValue * _Nullable' type='@'/>
</method>
</class>
<class name='SKSpriteNode'>
<method selector='anchorPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='attributeValues'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='SKBlendMode' type='i'/>
</method>
<method selector='centerRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='color'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='colorBlendFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithColor:size:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='color' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithImageNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTexture:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='texture' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTexture:color:size:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='UIColor * _Nonnull' index='1' name='color' type='@'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='lightingBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='normalTexture'>
<retval declared_type='SKTexture * _Nullable' type='@'/>
</method>
<method selector='scaleToSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorPoint:'>
<arg declared_type='CGPoint' index='0' name='anchorPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributeValues:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributeValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='SKBlendMode' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterRect:'>
<arg declared_type='CGRect' index='0' name='centerRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorBlendFactor:'>
<arg declared_type='CGFloat' index='0' name='colorBlendFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLightingBitMask:'>
<arg declared_type='uint32_t' index='0' name='lightingBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalTexture:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='normalTexture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShader:'>
<arg declared_type='SKShader * _Nullable' index='0' name='shader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowCastBitMask:'>
<arg declared_type='uint32_t' index='0' name='shadowCastBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowedBitMask:'>
<arg declared_type='uint32_t' index='0' name='shadowedBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='texture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forAttributeNamed:'>
<arg declared_type='SKAttributeValue * _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shader'>
<retval declared_type='SKShader * _Nullable' type='@'/>
</method>
<method selector='shadowCastBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='shadowedBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method class_method='true' selector='spriteNodeWithColor:size:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='color' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='spriteNodeWithImageNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='spriteNodeWithImageNamed:normalMapped:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='BOOL' index='1' name='generateNormalMap' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='spriteNodeWithTexture:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='texture' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='spriteNodeWithTexture:normalMap:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='SKTexture * _Nullable' index='1' name='normalMap' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='spriteNodeWithTexture:size:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='texture'>
<retval declared_type='SKTexture * _Nullable' type='@'/>
</method>
<method selector='valueForAttributeNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SKAttributeValue * _Nullable' type='@'/>
</method>
</class>
<class name='SKTexture'>
<method selector='CGImage'>
<retval declared_type='CGImageRef _Nonnull' type='^{CGImage=}'/>
</method>
<method selector='filteringMode'>
<retval declared_type='SKTextureFilteringMode' type='i'/>
</method>
<method class_method='true' selector='preloadTextures:withCompletionHandler:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='preloadWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilteringMode:'>
<arg declared_type='SKTextureFilteringMode' index='0' name='filteringMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesMipmaps:'>
<arg declared_type='BOOL' index='0' name='usesMipmaps' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='textureByGeneratingNormalMap'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='textureByGeneratingNormalMapWithSmoothness:contrast:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f'/>
<arg declared_type='CGFloat' index='1' name='contrast' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureNoiseWithSmoothness:size:grayscale:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<arg declared_type='BOOL' index='2' name='grayscale' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='textureRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method class_method='true' selector='textureVectorNoiseWithSmoothness:size:'>
<arg declared_type='CGFloat' index='0' name='smoothness' type='f'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureWithCGImage:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='image' type='^{CGImage=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureWithData:size:'>
<arg declared_type='NSData * _Nonnull' index='0' name='pixelData' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureWithData:size:flipped:'>
<arg declared_type='NSData * _Nonnull' index='0' name='pixelData' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<arg declared_type='BOOL' index='2' name='flipped' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureWithData:size:rowLength:alignment:'>
<arg declared_type='NSData * _Nonnull' index='0' name='pixelData' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<arg declared_type='unsigned int' index='2' name='rowLength' type='I'/>
<arg declared_type='unsigned int' index='3' name='alignment' type='I'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureWithImage:'>
<arg declared_type='UIImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureWithImageNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureWithRect:inTexture:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='SKTexture * _Nonnull' index='1' name='texture' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='usesMipmaps'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='SKTextureAtlas'>
<method class_method='true' selector='atlasNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='atlasWithDictionary:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='properties' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='preloadTextureAtlases:withCompletionHandler:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textureAtlases' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='preloadTextureAtlasesNamed:withCompletionHandler:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='atlasNames' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable, NSArray * _Nonnull)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='preloadWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='SKTexture * _Nonnull' type='@'/>
</method>
<method selector='textureNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='SKTileDefinition'>
<method selector='flipHorizontally'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flipVertically'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithTexture:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTexture:normalTexture:size:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='SKTexture * _Nonnull' index='1' name='normalTexture' type='@'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTexture:size:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTextures:normalTextures:size:timePerFrame:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='normalTextures' type='@'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}'/>
<arg declared_type='CGFloat' index='3' name='timePerFrame' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTextures:size:timePerFrame:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<arg declared_type='CGFloat' index='2' name='timePerFrame' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='normalTextures'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='placementWeight'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='rotation'>
<retval declared_type='SKTileDefinitionRotation' type='I'/>
</method>
<method selector='setFlipHorizontally:'>
<arg declared_type='BOOL' index='0' name='flipHorizontally' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlipVertically:'>
<arg declared_type='BOOL' index='0' name='flipVertically' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalTextures:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='normalTextures' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlacementWeight:'>
<arg declared_type='NSUInteger' index='0' name='placementWeight' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type='SKTileDefinitionRotation' index='0' name='rotation' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextures:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimePerFrame:'>
<arg declared_type='CGFloat' index='0' name='timePerFrame' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserData:'>
<arg declared_type='NSMutableDictionary * _Nullable' index='0' name='userData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='textures'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileDefinitionWithTexture:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileDefinitionWithTexture:normalTexture:size:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='SKTexture * _Nonnull' index='1' name='normalTexture' type='@'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileDefinitionWithTexture:size:'>
<arg declared_type='SKTexture * _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileDefinitionWithTextures:normalTextures:size:timePerFrame:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='normalTextures' type='@'/>
<arg declared_type='CGSize' index='2' name='size' type='{CGSize=ff}'/>
<arg declared_type='CGFloat' index='3' name='timePerFrame' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileDefinitionWithTextures:size:timePerFrame:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textures' type='@'/>
<arg declared_type='CGSize' index='1' name='size' type='{CGSize=ff}'/>
<arg declared_type='CGFloat' index='2' name='timePerFrame' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='timePerFrame'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='userData'>
<retval declared_type='NSMutableDictionary * _Nullable' type='@'/>
</method>
</class>
<class name='SKTileGroup'>
<method class_method='true' selector='emptyTileGroup'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithRules:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='rules' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTileDefinition:'>
<arg declared_type='SKTileDefinition * _Nonnull' index='0' name='tileDefinition' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='rules'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRules:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='rules' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='tileGroupWithRules:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='rules' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileGroupWithTileDefinition:'>
<arg declared_type='SKTileDefinition * _Nonnull' index='0' name='tileDefinition' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SKTileGroupRule'>
<method selector='adjacency'>
<retval declared_type='SKTileAdjacencyMask' type='I'/>
</method>
<method selector='initWithAdjacency:tileDefinitions:'>
<arg declared_type='SKTileAdjacencyMask' index='0' name='adjacency' type='I'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='tileDefinitions' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setAdjacency:'>
<arg declared_type='SKTileAdjacencyMask' index='0' name='adjacency' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileDefinitions:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='tileDefinitions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileDefinitions'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileGroupRuleWithAdjacency:tileDefinitions:'>
<arg declared_type='SKTileAdjacencyMask' index='0' name='adjacency' type='I'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='tileDefinitions' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='SKTileMapNode'>
<method selector='anchorPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='attributeValues'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='SKBlendMode' type='i'/>
</method>
<method selector='centerOfTileAtColumn:row:'>
<arg declared_type='NSUInteger' index='0' name='column' type='I'/>
<arg declared_type='NSUInteger' index='1' name='row' type='I'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='color'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='colorBlendFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='enableAutomapping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fillWithTileGroup:'>
<arg declared_type='SKTileGroup * _Nullable' index='0' name='tileGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTileSet:columns:rows:tileSize:'>
<arg declared_type='SKTileSet * _Nonnull' index='0' name='tileSet' type='@'/>
<arg declared_type='NSUInteger' index='1' name='columns' type='I'/>
<arg declared_type='NSUInteger' index='2' name='rows' type='I'/>
<arg declared_type='CGSize' index='3' name='tileSize' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTileSet:columns:rows:tileSize:fillWithTileGroup:'>
<arg declared_type='SKTileSet * _Nonnull' index='0' name='tileSet' type='@'/>
<arg declared_type='NSUInteger' index='1' name='columns' type='I'/>
<arg declared_type='NSUInteger' index='2' name='rows' type='I'/>
<arg declared_type='CGSize' index='3' name='tileSize' type='{CGSize=ff}'/>
<arg declared_type='SKTileGroup * _Nonnull' index='4' name='tileGroup' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTileSet:columns:rows:tileSize:tileGroupLayout:'>
<arg declared_type='SKTileSet * _Nonnull' index='0' name='tileSet' type='@'/>
<arg declared_type='NSUInteger' index='1' name='columns' type='I'/>
<arg declared_type='NSUInteger' index='2' name='rows' type='I'/>
<arg declared_type='CGSize' index='3' name='tileSize' type='{CGSize=ff}'/>
<arg declared_type='NSArray * _Nonnull' index='4' name='tileGroupLayout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='lightingBitMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='mapSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setAnchorPoint:'>
<arg declared_type='CGPoint' index='0' name='anchorPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributeValues:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributeValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendMode:'>
<arg declared_type='SKBlendMode' index='0' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorBlendFactor:'>
<arg declared_type='CGFloat' index='0' name='colorBlendFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableAutomapping:'>
<arg declared_type='BOOL' index='0' name='enableAutomapping' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLightingBitMask:'>
<arg declared_type='uint32_t' index='0' name='lightingBitMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfColumns:'>
<arg declared_type='NSUInteger' index='0' name='numberOfColumns' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfRows:'>
<arg declared_type='NSUInteger' index='0' name='numberOfRows' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShader:'>
<arg declared_type='SKShader * _Nullable' index='0' name='shader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGroup:andTileDefinition:forColumn:row:'>
<arg declared_type='SKTileGroup * _Nonnull' index='0' name='tileGroup' type='@'/>
<arg declared_type='SKTileDefinition * _Nonnull' index='1' name='tileDefinition' type='@'/>
<arg declared_type='NSUInteger' index='2' name='column' type='I'/>
<arg declared_type='NSUInteger' index='3' name='row' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGroup:forColumn:row:'>
<arg declared_type='SKTileGroup * _Nullable' index='0' name='tileGroup' type='@'/>
<arg declared_type='NSUInteger' index='1' name='column' type='I'/>
<arg declared_type='NSUInteger' index='2' name='row' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSet:'>
<arg declared_type='SKTileSet * _Nonnull' index='0' name='tileSet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSize:'>
<arg declared_type='CGSize' index='0' name='tileSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forAttributeNamed:'>
<arg declared_type='SKAttributeValue * _Nonnull' index='0' name='value' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shader'>
<retval declared_type='SKShader * _Nullable' type='@'/>
</method>
<method selector='tileColumnIndexFromPosition:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='tileDefinitionAtColumn:row:'>
<arg declared_type='NSUInteger' index='0' name='column' type='I'/>
<arg declared_type='NSUInteger' index='1' name='row' type='I'/>
<retval declared_type='SKTileDefinition * _Nullable' type='@'/>
</method>
<method selector='tileGroupAtColumn:row:'>
<arg declared_type='NSUInteger' index='0' name='column' type='I'/>
<arg declared_type='NSUInteger' index='1' name='row' type='I'/>
<retval declared_type='SKTileGroup * _Nullable' type='@'/>
</method>
<method class_method='true' selector='tileMapNodeWithTileSet:columns:rows:tileSize:'>
<arg declared_type='SKTileSet * _Nonnull' index='0' name='tileSet' type='@'/>
<arg declared_type='NSUInteger' index='1' name='columns' type='I'/>
<arg declared_type='NSUInteger' index='2' name='rows' type='I'/>
<arg declared_type='CGSize' index='3' name='tileSize' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileMapNodeWithTileSet:columns:rows:tileSize:fillWithTileGroup:'>
<arg declared_type='SKTileSet * _Nonnull' index='0' name='tileSet' type='@'/>
<arg declared_type='NSUInteger' index='1' name='columns' type='I'/>
<arg declared_type='NSUInteger' index='2' name='rows' type='I'/>
<arg declared_type='CGSize' index='3' name='tileSize' type='{CGSize=ff}'/>
<arg declared_type='SKTileGroup * _Nonnull' index='4' name='tileGroup' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileMapNodeWithTileSet:columns:rows:tileSize:tileGroupLayout:'>
<arg declared_type='SKTileSet * _Nonnull' index='0' name='tileSet' type='@'/>
<arg declared_type='NSUInteger' index='1' name='columns' type='I'/>
<arg declared_type='NSUInteger' index='2' name='rows' type='I'/>
<arg declared_type='CGSize' index='3' name='tileSize' type='{CGSize=ff}'/>
<arg declared_type='NSArray * _Nonnull' index='4' name='tileGroupLayout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='tileRowIndexFromPosition:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='tileSet'>
<retval declared_type='SKTileSet * _Nonnull' type='@'/>
</method>
<method selector='tileSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='valueForAttributeNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='SKAttributeValue * _Nullable' type='@'/>
</method>
</class>
<class name='SKTileSet'>
<method selector='defaultTileGroup'>
<retval declared_type='SKTileGroup * _Nullable' type='@'/>
</method>
<method selector='defaultTileSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='initWithTileGroups:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='tileGroups' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTileGroups:tileSetType:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='tileGroups' type='@'/>
<arg declared_type='SKTileSetType' index='1' name='tileSetType' type='I'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setDefaultTileGroup:'>
<arg declared_type='SKTileGroup * _Nullable' index='0' name='defaultTileGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTileSize:'>
<arg declared_type='CGSize' index='0' name='defaultTileSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileGroups:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='tileGroups' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='SKTileSetType' index='0' name='type' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileGroups'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileSetFromURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='tileSetNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='tileSetWithTileGroups:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='tileGroups' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tileSetWithTileGroups:tileSetType:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='tileGroups' type='@'/>
<arg declared_type='SKTileSetType' index='1' name='tileSetType' type='I'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='type'>
<retval declared_type='SKTileSetType' type='I'/>
</method>
</class>
<class name='SKTransformNode'>
<method selector='eulerAngles'>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='quaternion'>
<retval declared_type='simd_quatf' type='{_simd_quatf=}'/>
</method>
<method selector='rotationMatrix'>
<retval declared_type='matrix_float3x3' type='{_matrix_float3x3=[3]}'/>
</method>
<method selector='setEulerAngles:'>
<arg declared_type='vector_float3' index='0' name='euler' type='{_vector_float3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuaternion:'>
<arg declared_type='simd_quatf' index='0' name='quaternion' type='{_simd_quatf=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotationMatrix:'>
<arg declared_type='matrix_float3x3' index='0' name='rotationMatrix' type='{_matrix_float3x3=[3]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXRotation:'>
<arg declared_type='CGFloat' index='0' name='xRotation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYRotation:'>
<arg declared_type='CGFloat' index='0' name='yRotation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='xRotation'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='yRotation'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='SKTransition'>
<method class_method='true' selector='crossFadeWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='doorsCloseHorizontalWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='doorsCloseVerticalWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='doorsOpenHorizontalWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='doorsOpenVerticalWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='doorwayWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fadeWithColor:duration:'>
<arg declared_type='UIColor * _Nonnull' index='0' name='color' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fadeWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='flipHorizontalWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='flipVerticalWithDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='moveInWithDirection:duration:'>
<arg declared_type='SKTransitionDirection' index='0' name='direction' type='i'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method selector='pausesIncomingScene'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pausesOutgoingScene'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='pushWithDirection:duration:'>
<arg declared_type='SKTransitionDirection' index='0' name='direction' type='i'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='revealWithDirection:duration:'>
<arg declared_type='SKTransitionDirection' index='0' name='direction' type='i'/>
<arg declared_type='NSTimeInterval' index='1' name='sec' type='d'/>
<retval declared_type='SKTransition * _Nonnull' type='@'/>
</method>
<method selector='setPausesIncomingScene:'>
<arg declared_type='BOOL' index='0' name='pausesIncomingScene' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPausesOutgoingScene:'>
<arg declared_type='BOOL' index='0' name='pausesOutgoingScene' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SKUniform'>
<method selector='floatValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:float:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='float' index='1' name='value' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:matrixFloat2x2:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='matrix_float2x2' index='1' name='value' type='{_matrix_float2x2=[2]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:matrixFloat3x3:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='matrix_float3x3' index='1' name='value' type='{_matrix_float3x3=[3]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:matrixFloat4x4:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='matrix_float4x4' index='1' name='value' type='{_matrix_float4x4=[4]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:texture:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='SKTexture * _Nullable' index='1' name='texture' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:vectorFloat2:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='vector_float2' index='1' name='value' type='{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:vectorFloat3:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='vector_float3' index='1' name='value' type='{_vector_float3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:vectorFloat4:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='vector_float4' index='1' name='value' type='{_vector_float4=ffff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='matrixFloat2x2Value'>
<retval declared_type='matrix_float2x2' type='{_matrix_float2x2=[2]}'/>
</method>
<method selector='matrixFloat3x3Value'>
<retval declared_type='matrix_float3x3' type='{_matrix_float3x3=[3]}'/>
</method>
<method selector='matrixFloat4x4Value'>
<retval declared_type='matrix_float4x4' type='{_matrix_float4x4=[4]}'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setFloatValue:'>
<arg declared_type='float' index='0' name='floatValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatrixFloat2x2Value:'>
<arg declared_type='matrix_float2x2' index='0' name='matrixFloat2x2Value' type='{_matrix_float2x2=[2]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatrixFloat3x3Value:'>
<arg declared_type='matrix_float3x3' index='0' name='matrixFloat3x3Value' type='{_matrix_float3x3=[3]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatrixFloat4x4Value:'>
<arg declared_type='matrix_float4x4' index='0' name='matrixFloat4x4Value' type='{_matrix_float4x4=[4]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureValue:'>
<arg declared_type='SKTexture * _Nullable' index='0' name='textureValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVectorFloat2Value:'>
<arg declared_type='vector_float2' index='0' name='vectorFloat2Value' type='{_vector_float2=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVectorFloat3Value:'>
<arg declared_type='vector_float3' index='0' name='vectorFloat3Value' type='{_vector_float3=fff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVectorFloat4Value:'>
<arg declared_type='vector_float4' index='0' name='vectorFloat4Value' type='{_vector_float4=ffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureValue'>
<retval declared_type='SKTexture * _Nullable' type='@'/>
</method>
<method selector='uniformType'>
<retval declared_type='SKUniformType' type='i'/>
</method>
<method class_method='true' selector='uniformWithName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='uniformWithName:float:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='float' index='1' name='value' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='uniformWithName:matrixFloat2x2:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='matrix_float2x2' index='1' name='value' type='{_matrix_float2x2=[2]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='uniformWithName:matrixFloat3x3:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='matrix_float3x3' index='1' name='value' type='{_matrix_float3x3=[3]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='uniformWithName:matrixFloat4x4:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='matrix_float4x4' index='1' name='value' type='{_matrix_float4x4=[4]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='uniformWithName:texture:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='SKTexture * _Nullable' index='1' name='texture' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='uniformWithName:vectorFloat2:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='vector_float2' index='1' name='value' type='{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='uniformWithName:vectorFloat3:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='vector_float3' index='1' name='value' type='{_vector_float3=fff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='uniformWithName:vectorFloat4:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='vector_float4' index='1' name='value' type='{_vector_float4=ffff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='vectorFloat2Value'>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='vectorFloat3Value'>
<retval declared_type='vector_float3' type='{_vector_float3=fff}'/>
</method>
<method selector='vectorFloat4Value'>
<retval declared_type='vector_float4' type='{_vector_float4=ffff}'/>
</method>
</class>
<class name='SKVideoNode'>
<method selector='anchorPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='initWithAVPlayer:'>
<arg declared_type='AVPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='videoFile' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithVideoFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='videoFile' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithVideoURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='play'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorPoint:'>
<arg declared_type='CGPoint' index='0' name='anchorPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method class_method='true' selector='videoNodeWithAVPlayer:'>
<arg declared_type='AVPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='SKVideoNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='videoNodeWithFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='videoFile' type='@'/>
<retval declared_type='SKVideoNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='videoNodeWithURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='videoURL' type='@'/>
<retval declared_type='SKVideoNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='videoNodeWithVideoFileNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='videoFile' type='@'/>
<retval declared_type='SKVideoNode * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='videoNodeWithVideoURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='videoURL' type='@'/>
<retval declared_type='SKVideoNode * _Nonnull' type='@'/>
</method>
</class>
<class name='SKWarpGeometryGrid'>
<method selector='destPositionAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i'/>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method class_method='true' selector='grid'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='gridByReplacingDestPositions:'>
<arg const='true' declared_type='vector_float2 * _Nonnull' index='0' name='destPositions' type='^{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='gridByReplacingSourcePositions:'>
<arg const='true' declared_type='vector_float2 * _Nonnull' index='0' name='sourcePositions' type='^{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='gridWithColumns:rows:'>
<arg declared_type='NSInteger' index='0' name='cols' type='i'/>
<arg declared_type='NSInteger' index='1' name='rows' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='gridWithColumns:rows:sourcePositions:destPositions:'>
<arg declared_type='NSInteger' index='0' name='cols' type='i'/>
<arg declared_type='NSInteger' index='1' name='rows' type='i'/>
<arg const='true' declared_type='vector_float2 * _Nullable' index='2' name='sourcePositions' type='^{_vector_float2=ff}'/>
<arg const='true' declared_type='vector_float2 * _Nullable' index='3' name='destPositions' type='^{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithColumns:rows:sourcePositions:destPositions:'>
<arg declared_type='NSInteger' index='0' name='cols' type='i'/>
<arg declared_type='NSInteger' index='1' name='rows' type='i'/>
<arg const='true' declared_type='vector_float2 * _Nullable' index='2' name='sourcePositions' type='^{_vector_float2=ff}'/>
<arg const='true' declared_type='vector_float2 * _Nullable' index='3' name='destPositions' type='^{_vector_float2=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='sourcePositionAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i'/>
<retval declared_type='vector_float2' type='{_vector_float2=ff}'/>
</method>
<method selector='vertexCount'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<informal_protocol name='SKPhysicsContactDelegate'>
<method selector='didBeginContact:' type='v12@0:4@8'>
<arg declared_type='SKPhysicsContact * _Nonnull' index='0' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didEndContact:' type='v12@0:4@8'>
<arg declared_type='SKPhysicsContact * _Nonnull' index='0' name='contact' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SKSceneDelegate'>
<method selector='didApplyConstraintsForScene:' type='v12@0:4@8'>
<arg declared_type='SKScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didEvaluateActionsForScene:' type='v12@0:4@8'>
<arg declared_type='SKScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFinishUpdateForScene:' type='v12@0:4@8'>
<arg declared_type='SKScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didSimulatePhysicsForScene:' type='v12@0:4@8'>
<arg declared_type='SKScene * _Nonnull' index='0' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='update:forScene:' type='v20@0:4d8@16'>
<arg declared_type='NSTimeInterval' index='0' name='currentTime' type='d'/>
<arg declared_type='SKScene * _Nonnull' index='1' name='scene' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SKWarpable'>
<method selector='setSubdivisionLevels:' type='v12@0:4i8'>
<arg declared_type='NSInteger' index='0' name='subdivisionLevels' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWarpGeometry:' type='v12@0:4@8'>
<arg declared_type='SKWarpGeometry * _Nullable' index='0' name='warpGeometry' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subdivisionLevels' type='i8@0:4'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='warpGeometry' type='@8@0:4'>
<retval declared_type='SKWarpGeometry * _Nullable' type='@'/>
</method>
</informal_protocol>
</signatures>
