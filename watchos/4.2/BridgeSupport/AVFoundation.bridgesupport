<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/AVFoundation.framework/Frameworks/AVFAudio.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/CoreMedia.framework'/>
<depends_on path='/System/Library/Frameworks/CoreImage.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/MediaToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/VideoToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/MobileCoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<enum name='AVF_IS_WATCHOS_SDK' value='1'/>
<class name='AVAssetCache'>
<method selector='isPlayableOffline'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mediaSelectionOptionsInMediaSelectionGroup:'>
<arg declared_type='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='AVContentKeyRequest'>
<method selector='renewsExpiringResponseData'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVContentKeySession'>
<method selector='addContentKeyRecipient:'>
<arg declared_type='id _Nonnull' index='0' name='recipient' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentKeyRecipients'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pendingExpiredSessionReportsWithAppIdentifier:storageDirectoryAtURL:'>
<arg declared_type='NSData * _Nonnull' index='0' name='appIdentifier' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='storageURL' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeContentKeyRecipient:'>
<arg declared_type='id _Nonnull' index='0' name='recipient' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removePendingExpiredSessionReports:withAppIdentifier:storageDirectoryAtURL:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='expiredSessionReports' type='@'/>
<arg declared_type='NSData * _Nonnull' index='1' name='appIdentifier' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='2' name='storageURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVSampleBufferAudioRenderer'>
<method selector='flushFromSourceTime:completionHandler:'>
<arg declared_type='id' index='0' name='time' type='@'/>
<arg declared_type='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='isMuted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setMuted:'>
<arg declared_type='BOOL' index='0' name='muted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVSampleBufferRenderSynchronizer'>
<method selector='addBoundaryTimeObserverForTimes:queue:usingBlock:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='times' type='@'/>
<arg declared_type='dispatch_queue_t _Nullable' index='1' name='queue' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='2' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='addPeriodicTimeObserverForInterval:queue:usingBlock:'>
<arg declared_type='id' index='0' name='interval' type='@'/>
<arg declared_type='dispatch_queue_t _Nullable' index='1' name='queue' type='@'/>
<arg declared_type='void (^ _Nonnull)(int)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='addRenderer:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRenderer:atTime:completionHandler:'>
<arg declared_type='id _Nonnull' index='0' name='renderer' type='@'/>
<arg declared_type='id' index='1' name='time' type='@'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTimeObserver:'>
<arg declared_type='id _Nonnull' index='0' name='observer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderers'>
<retval declared_type='NSArray&gt; * _Nonnull' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='mayRequireContentKeysForMediaDataProcessing'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<informal_protocol name='AVContentKeyRecipient'>
<method selector='mayRequireContentKeysForMediaDataProcessing' type='B8@0:4'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<struct name='AVAudio3DAngularOrientation' type='{AVAudio3DAngularOrientation=&quot;yaw&quot;f&quot;pitch&quot;f&quot;roll&quot;f}'>
<field declared_type='float' name='yaw' type='f'/>
<field declared_type='float' name='pitch' type='f'/>
<field declared_type='float' name='roll' type='f'/>
</struct>
<struct name='AVAudio3DPoint' type='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
</struct>
<struct name='AVAudio3DVector' type='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
<field declared_type='float' name='z' type='f'/>
</struct>
<struct name='AVAudio3DVectorOrientation' type='{AVAudio3DVectorOrientation=&quot;forward&quot;{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;up&quot;{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field declared_type='AVAudio3DVector' name='forward' type='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type='AVAudio3DVector' name='up' type='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
</struct>
<struct name='AVAudioConverterPrimeInfo' type='{AVAudioConverterPrimeInfo=&quot;leadingFrames&quot;I&quot;trailingFrames&quot;I}'>
<field declared_type='AVAudioFrameCount' name='leadingFrames' type='I'/>
<field declared_type='AVAudioFrameCount' name='trailingFrames' type='I'/>
</struct>
<struct name='AVBeatRange' type='{_AVBeatRange=&quot;start&quot;d&quot;length&quot;d}'>
<field declared_type='AVMusicTimeStamp' name='start' type='d'/>
<field declared_type='AVMusicTimeStamp' name='length' type='d'/>
</struct>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_Constant' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_LongTermAverage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_Variable' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_VariableConstrained' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioEngineConfigurationChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioFileTypeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionCategoryAmbient' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionCategoryMultiRoute' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionCategoryPlayAndRecord' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionCategoryPlayback' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionCategoryRecord' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionCategorySoloAmbient' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionInterruptionNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionInterruptionOptionKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionInterruptionTypeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionInterruptionWasSuspendedKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionLocationLower' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionLocationUpper' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionMediaServicesWereLostNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionMediaServicesWereResetNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionModeDefault' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionModeGameChat' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionModeMeasurement' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionModeMoviePlayback' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionModeSpokenAudio' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionModeVideoChat' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionModeVideoRecording' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionModeVoiceChat' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionOrientationBack' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionOrientationBottom' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionOrientationFront' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionOrientationLeft' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionOrientationRight' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionOrientationTop' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPolarPatternCardioid' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPolarPatternOmnidirectional' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPolarPatternSubcardioid' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortAirPlay' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortBluetoothA2DP' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortBluetoothHFP' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortBluetoothLE' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortBuiltInMic' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortBuiltInReceiver' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortBuiltInSpeaker' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortCarAudio' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortHDMI' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortHeadphones' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortHeadsetMic' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortLineIn' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortLineOut' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionPortUSBAudio' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionRouteChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionRouteChangePreviousRouteKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionRouteChangeReasonKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionSilenceSecondaryAudioHintNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioSessionSilenceSecondaryAudioHintTypeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitComponentTagsDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitManufacturerNameApple' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeEffect' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeFormatConverter' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeGenerator' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeMIDIProcessor' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeMixer' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeMusicDevice' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeMusicEffect' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeOfflineEffect' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypeOutput' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVAudioUnitTypePanner' type='@'/>
<constant const='true' declared_type='NSString*' name='AVChannelLayoutKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderAudioQualityForVBRKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderAudioQualityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitDepthHintKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRateKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRatePerChannelKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRateStrategyKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFormatIDKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMBitDepthKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsBigEndianKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsFloatKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsNonInterleaved' type='@'/>
<constant const='true' declared_type='NSString*' name='AVNumberOfChannelsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithmKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithm_Mastering' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithm_MinimumPhase' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithm_Normal' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAudioQualityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVSpeechSynthesisIPANotationAttribute' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='AVSpeechSynthesisVoiceIdentifierAlex' type='@'/>
<constant const='true' declared_type='float' name='AVSpeechUtteranceDefaultSpeechRate' type='f'/>
<constant const='true' declared_type='float' name='AVSpeechUtteranceMaximumSpeechRate' type='f'/>
<constant const='true' declared_type='float' name='AVSpeechUtteranceMinimumSpeechRate' type='f'/>
<enum name='AVAudio3DMixingRenderingAlgorithmEqualPowerPanning' value='0'/>
<enum name='AVAudio3DMixingRenderingAlgorithmHRTF' value='2'/>
<enum name='AVAudio3DMixingRenderingAlgorithmHRTFHQ' value='6'/>
<enum name='AVAudio3DMixingRenderingAlgorithmSoundField' value='3'/>
<enum name='AVAudio3DMixingRenderingAlgorithmSphericalHead' value='1'/>
<enum name='AVAudio3DMixingRenderingAlgorithmStereoPassThrough' value='5'/>
<enum name='AVAudioConverterInputStatus_EndOfStream' value='2'/>
<enum name='AVAudioConverterInputStatus_HaveData' value='0'/>
<enum name='AVAudioConverterInputStatus_NoDataNow' value='1'/>
<enum name='AVAudioConverterOutputStatus_EndOfStream' value='2'/>
<enum name='AVAudioConverterOutputStatus_Error' value='3'/>
<enum name='AVAudioConverterOutputStatus_HaveData' value='0'/>
<enum name='AVAudioConverterOutputStatus_InputRanDry' value='1'/>
<enum name='AVAudioConverterPrimeMethod_None' value='2'/>
<enum name='AVAudioConverterPrimeMethod_Normal' value='1'/>
<enum name='AVAudioConverterPrimeMethod_Pre' value='0'/>
<enum name='AVAudioEngineManualRenderingErrorInitialized' value='-80801'/>
<enum name='AVAudioEngineManualRenderingErrorInvalidMode' value='-80800'/>
<enum name='AVAudioEngineManualRenderingErrorNotRunning' value='-80802'/>
<enum name='AVAudioEngineManualRenderingModeOffline' value='0'/>
<enum name='AVAudioEngineManualRenderingModeRealtime' value='1'/>
<enum name='AVAudioEngineManualRenderingStatusCannotDoInCurrentContext' value='2'/>
<enum name='AVAudioEngineManualRenderingStatusError' value='-1'/>
<enum name='AVAudioEngineManualRenderingStatusInsufficientDataFromInputNode' value='1'/>
<enum name='AVAudioEngineManualRenderingStatusSuccess' value='0'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelExponential' value='1'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelInverse' value='2'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelLinear' value='3'/>
<enum name='AVAudioOtherFormat' value='0'/>
<enum name='AVAudioPCMFormatFloat32' value='1'/>
<enum name='AVAudioPCMFormatFloat64' value='2'/>
<enum name='AVAudioPCMFormatInt16' value='3'/>
<enum name='AVAudioPCMFormatInt32' value='4'/>
<enum name='AVAudioPlayerNodeBufferInterrupts' value='2'/>
<enum name='AVAudioPlayerNodeBufferInterruptsAtLoop' value='4'/>
<enum name='AVAudioPlayerNodeBufferLoops' value='1'/>
<enum name='AVAudioPlayerNodeCompletionDataConsumed' value='0'/>
<enum name='AVAudioPlayerNodeCompletionDataPlayedBack' value='2'/>
<enum name='AVAudioPlayerNodeCompletionDataRendered' value='1'/>
<enum name='AVAudioQualityHigh' value='96'/>
<enum name='AVAudioQualityLow' value='32'/>
<enum name='AVAudioQualityMax' value='127'/>
<enum name='AVAudioQualityMedium' value='64'/>
<enum name='AVAudioQualityMin' value='0'/>
<enum name='AVAudioSessionCategoryOptionAllowAirPlay' value='64'/>
<enum name='AVAudioSessionCategoryOptionAllowBluetooth' value='4'/>
<enum name='AVAudioSessionCategoryOptionAllowBluetoothA2DP' value='32'/>
<enum name='AVAudioSessionCategoryOptionDefaultToSpeaker' value='8'/>
<enum name='AVAudioSessionCategoryOptionDuckOthers' value='2'/>
<enum name='AVAudioSessionCategoryOptionInterruptSpokenAudioAndMixWithOthers' value='17'/>
<enum name='AVAudioSessionCategoryOptionMixWithOthers' value='1'/>
<enum name='AVAudioSessionErrorCodeBadParam' value='-50'/>
<enum name='AVAudioSessionErrorCodeCannotInterruptOthers' value='560557684'/>
<enum name='AVAudioSessionErrorCodeCannotStartPlaying' value='561015905'/>
<enum name='AVAudioSessionErrorCodeCannotStartRecording' value='561145187'/>
<enum name='AVAudioSessionErrorCodeIncompatibleCategory' value='560161140'/>
<enum name='AVAudioSessionErrorCodeIsBusy' value='560030580'/>
<enum name='AVAudioSessionErrorCodeMediaServicesFailed' value='1836282486'/>
<enum name='AVAudioSessionErrorCodeMissingEntitlement' value='1701737535'/>
<enum name='AVAudioSessionErrorCodeNone' value='0'/>
<enum name='AVAudioSessionErrorCodeResourceNotAvailable' value='561145203'/>
<enum name='AVAudioSessionErrorCodeSiriIsRecording' value='1936290409'/>
<enum name='AVAudioSessionErrorCodeUnspecified' value='2003329396'/>
<enum name='AVAudioSessionErrorInsufficientPriority' value='561017449'/>
<enum name='AVAudioSessionInterruptionOptionShouldResume' value='1'/>
<enum name='AVAudioSessionInterruptionTypeBegan' value='1'/>
<enum name='AVAudioSessionInterruptionTypeEnded' value='0'/>
<enum name='AVAudioSessionPortOverrideNone' value='0'/>
<enum name='AVAudioSessionPortOverrideSpeaker' value='1936747378'/>
<enum name='AVAudioSessionRecordPermissionDenied' value='1684369017'/>
<enum name='AVAudioSessionRecordPermissionGranted' value='1735552628'/>
<enum name='AVAudioSessionRecordPermissionUndetermined' value='1970168948'/>
<enum name='AVAudioSessionRouteChangeReasonCategoryChange' value='3'/>
<enum name='AVAudioSessionRouteChangeReasonNewDeviceAvailable' value='1'/>
<enum name='AVAudioSessionRouteChangeReasonNoSuitableRouteForCategory' value='7'/>
<enum name='AVAudioSessionRouteChangeReasonOldDeviceUnavailable' value='2'/>
<enum name='AVAudioSessionRouteChangeReasonOverride' value='4'/>
<enum name='AVAudioSessionRouteChangeReasonRouteConfigurationChange' value='8'/>
<enum name='AVAudioSessionRouteChangeReasonUnknown' value='0'/>
<enum name='AVAudioSessionRouteChangeReasonWakeFromSleep' value='6'/>
<enum name='AVAudioSessionSetActiveOptionNotifyOthersOnDeactivation' value='1'/>
<enum name='AVAudioSessionSilenceSecondaryAudioHintTypeBegin' value='1'/>
<enum name='AVAudioSessionSilenceSecondaryAudioHintTypeEnd' value='0'/>
<enum name='AVAudioUnitDistortionPresetDrumsBitBrush' value='0'/>
<enum name='AVAudioUnitDistortionPresetDrumsBufferBeats' value='1'/>
<enum name='AVAudioUnitDistortionPresetDrumsLoFi' value='2'/>
<enum name='AVAudioUnitDistortionPresetMultiBrokenSpeaker' value='3'/>
<enum name='AVAudioUnitDistortionPresetMultiCellphoneConcert' value='4'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated1' value='5'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated2' value='6'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated3' value='7'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated4' value='8'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedCubed' value='10'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedFunk' value='9'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedSquared' value='11'/>
<enum name='AVAudioUnitDistortionPresetMultiEcho1' value='12'/>
<enum name='AVAudioUnitDistortionPresetMultiEcho2' value='13'/>
<enum name='AVAudioUnitDistortionPresetMultiEchoTight1' value='14'/>
<enum name='AVAudioUnitDistortionPresetMultiEchoTight2' value='15'/>
<enum name='AVAudioUnitDistortionPresetMultiEverythingIsBroken' value='16'/>
<enum name='AVAudioUnitDistortionPresetSpeechAlienChatter' value='17'/>
<enum name='AVAudioUnitDistortionPresetSpeechCosmicInterference' value='18'/>
<enum name='AVAudioUnitDistortionPresetSpeechGoldenPi' value='19'/>
<enum name='AVAudioUnitDistortionPresetSpeechRadioTower' value='20'/>
<enum name='AVAudioUnitDistortionPresetSpeechWaves' value='21'/>
<enum name='AVAudioUnitEQFilterTypeBandPass' value='5'/>
<enum name='AVAudioUnitEQFilterTypeBandStop' value='6'/>
<enum name='AVAudioUnitEQFilterTypeHighPass' value='2'/>
<enum name='AVAudioUnitEQFilterTypeHighShelf' value='8'/>
<enum name='AVAudioUnitEQFilterTypeLowPass' value='1'/>
<enum name='AVAudioUnitEQFilterTypeLowShelf' value='7'/>
<enum name='AVAudioUnitEQFilterTypeParametric' value='0'/>
<enum name='AVAudioUnitEQFilterTypeResonantHighPass' value='4'/>
<enum name='AVAudioUnitEQFilterTypeResonantHighShelf' value='10'/>
<enum name='AVAudioUnitEQFilterTypeResonantLowPass' value='3'/>
<enum name='AVAudioUnitEQFilterTypeResonantLowShelf' value='9'/>
<enum name='AVAudioUnitReverbPresetCathedral' value='8'/>
<enum name='AVAudioUnitReverbPresetLargeChamber' value='7'/>
<enum name='AVAudioUnitReverbPresetLargeHall' value='4'/>
<enum name='AVAudioUnitReverbPresetLargeHall2' value='12'/>
<enum name='AVAudioUnitReverbPresetLargeRoom' value='2'/>
<enum name='AVAudioUnitReverbPresetLargeRoom2' value='9'/>
<enum name='AVAudioUnitReverbPresetMediumChamber' value='6'/>
<enum name='AVAudioUnitReverbPresetMediumHall' value='3'/>
<enum name='AVAudioUnitReverbPresetMediumHall2' value='10'/>
<enum name='AVAudioUnitReverbPresetMediumHall3' value='11'/>
<enum name='AVAudioUnitReverbPresetMediumRoom' value='1'/>
<enum name='AVAudioUnitReverbPresetPlate' value='5'/>
<enum name='AVAudioUnitReverbPresetSmallRoom' value='0'/>
<enum name='AVMusicSequenceLoadSMF_ChannelsToTracks' value='1'/>
<enum name='AVMusicSequenceLoadSMF_PreserveTracks' value='0'/>
<enum name='AVMusicTrackLoopCountForever' value='-1'/>
<enum name='AVSpeechBoundaryImmediate' value='0'/>
<enum name='AVSpeechBoundaryWord' value='1'/>
<enum name='AVSpeechSynthesisVoiceQualityDefault' value='1'/>
<enum name='AVSpeechSynthesisVoiceQualityEnhanced' value='2'/>
<function inline='true' name='AVAudioMake3DAngularOrientation'>
<arg declared_type='float' name='yaw' type='f'/>
<arg declared_type='float' name='pitch' type='f'/>
<arg declared_type='float' name='roll' type='f'/>
<retval declared_type='AVAudio3DAngularOrientation' type='{AVAudio3DAngularOrientation=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DPoint'>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<arg declared_type='float' name='z' type='f'/>
<retval declared_type='AVAudio3DPoint' type='{AVAudio3DPoint=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DVector'>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<arg declared_type='float' name='z' type='f'/>
<retval declared_type='AVAudio3DVector' type='{AVAudio3DPoint=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DVectorOrientation'>
<arg declared_type='AVAudio3DVector' name='forward' type='{AVAudio3DPoint=fff}'/>
<arg declared_type='AVAudio3DVector' name='up' type='{AVAudio3DPoint=fff}'/>
<retval declared_type='AVAudio3DVectorOrientation' type='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
</function>
<function inline='true' name='AVMakeBeatRange'>
<arg declared_type='AVMusicTimeStamp' name='startBeat' type='d'/>
<arg declared_type='AVMusicTimeStamp' name='lengthInBeats' type='d'/>
<retval declared_type='AVBeatRange' type='{_AVBeatRange=dd}'/>
</function>
<class name='AVAudioBuffer'>
<method selector='audioBufferList'>
<retval const='true' declared_type='AudioBufferList * _Nonnull' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</method>
<method selector='format'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='mutableAudioBufferList'>
<retval declared_type='AudioBufferList * _Nonnull' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</method>
</class>
<class name='AVAudioChannelLayout'>
<method selector='channelCount'>
<retval declared_type='AVAudioChannelCount' type='I'/>
</method>
<method selector='initWithLayout:'>
<arg const='true' declared_type='AudioChannelLayout * _Nonnull' index='0' name='layout' type='^{AudioChannelLayout=ILI[1{AudioChannelDescription=IL[3f]}]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithLayoutTag:'>
<arg declared_type='AudioChannelLayoutTag' index='0' name='layoutTag' type='L'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layout'>
<retval const='true' declared_type='AudioChannelLayout * _Nonnull' type='^{AudioChannelLayout=ILI[1{AudioChannelDescription=IL[3f]}]}'/>
</method>
<method selector='layoutTag'>
<retval declared_type='AudioChannelLayoutTag' type='L'/>
</method>
<method class_method='true' selector='layoutWithLayout:'>
<arg const='true' declared_type='AudioChannelLayout * _Nonnull' index='0' name='layout' type='^{AudioChannelLayout=ILI[1{AudioChannelDescription=IL[3f]}]}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutWithLayoutTag:'>
<arg declared_type='AudioChannelLayoutTag' index='0' name='layoutTag' type='L'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioCompressedBuffer'>
<method selector='byteCapacity'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='byteLength'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='data'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='initWithFormat:packetCapacity:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='AVAudioPacketCount' index='1' name='packetCapacity' type='I'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFormat:packetCapacity:maximumPacketSize:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='AVAudioPacketCount' index='1' name='packetCapacity' type='I'/>
<arg declared_type='NSInteger' index='2' name='maximumPacketSize' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumPacketSize'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='packetCapacity'>
<retval declared_type='AVAudioPacketCount' type='I'/>
</method>
<method selector='packetCount'>
<retval declared_type='AVAudioPacketCount' type='I'/>
</method>
<method selector='packetDescriptions'>
<retval declared_type='AudioStreamPacketDescription * _Nullable' type='^{AudioStreamPacketDescription=qII}'/>
</method>
<method selector='setByteLength:'>
<arg declared_type='uint32_t' index='0' name='byteLength' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPacketCount:'>
<arg declared_type='AVAudioPacketCount' index='0' name='packetCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioConnectionPoint'>
<method selector='bus'>
<retval declared_type='AVAudioNodeBus' type='I'/>
</method>
<method selector='initWithNode:bus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='node'>
<retval declared_type='AVAudioNode * _Nullable' type='@'/>
</method>
</class>
<class name='AVAudioConverter'>
<method selector='applicableEncodeBitRates'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='applicableEncodeSampleRates'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableEncodeBitRates'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableEncodeChannelLayoutTags'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableEncodeSampleRates'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='bitRate'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='bitRateStrategy'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='channelMap'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='convertToBuffer:error:withInputFromBlock:'>
<arg declared_type='AVAudioBuffer * _Nonnull' index='0' name='outputBuffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<arg declared_type='AVAudioConverterInputBlock _Nonnull' function_pointer='true' index='2' name='inputBlock' type='@?'>
<arg declared_type='AVAudioPacketCount' type='I'/>
<arg declared_type='AVAudioConverterInputStatus * _Nonnull' type='^i'/>
<retval declared_type='AVAudioBuffer * _Nullable' type='@'/>
</arg>
<retval declared_type='AVAudioConverterOutputStatus' type='i'/>
</method>
<method selector='convertToBuffer:fromBuffer:error:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='outputBuffer' type='@'/>
<arg const='true' declared_type='AVAudioPCMBuffer * _Nonnull' index='1' name='inputBuffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dither'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='downmix'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initFromFormat:toFormat:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='fromFormat' type='@'/>
<arg declared_type='AVAudioFormat * _Nonnull' index='1' name='toFormat' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='inputFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='magicCookie'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='maximumOutputPacketSize'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='outputFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='primeInfo'>
<retval declared_type='AVAudioConverterPrimeInfo' type='{AVAudioConverterPrimeInfo=II}'/>
</method>
<method selector='primeMethod'>
<retval declared_type='AVAudioConverterPrimeMethod' type='i'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sampleRateConverterAlgorithm'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='sampleRateConverterQuality'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setBitRate:'>
<arg declared_type='NSInteger' index='0' name='bitRate' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBitRateStrategy:'>
<arg declared_type='NSString * _Nullable' index='0' name='bitRateStrategy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChannelMap:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='channelMap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDither:'>
<arg declared_type='BOOL' index='0' name='dither' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownmix:'>
<arg declared_type='BOOL' index='0' name='downmix' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMagicCookie:'>
<arg declared_type='NSData * _Nullable' index='0' name='magicCookie' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrimeInfo:'>
<arg declared_type='AVAudioConverterPrimeInfo' index='0' name='primeInfo' type='{AVAudioConverterPrimeInfo=II}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrimeMethod:'>
<arg declared_type='AVAudioConverterPrimeMethod' index='0' name='primeMethod' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleRateConverterAlgorithm:'>
<arg declared_type='NSString * _Nullable' index='0' name='sampleRateConverterAlgorithm' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleRateConverterQuality:'>
<arg declared_type='NSInteger' index='0' name='sampleRateConverterQuality' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioEngine'>
<method selector='attachNode:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connect:to:format:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node1' type='@'/>
<arg declared_type='AVAudioNode * _Nonnull' index='1' name='node2' type='@'/>
<arg declared_type='AVAudioFormat * _Nullable' index='2' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connect:to:fromBus:toBus:format:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node1' type='@'/>
<arg declared_type='AVAudioNode * _Nonnull' index='1' name='node2' type='@'/>
<arg declared_type='AVAudioNodeBus' index='2' name='bus1' type='I'/>
<arg declared_type='AVAudioNodeBus' index='3' name='bus2' type='I'/>
<arg declared_type='AVAudioFormat * _Nullable' index='4' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connect:toConnectionPoints:fromBus:format:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='sourceNode' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='destNodes' type='@'/>
<arg declared_type='AVAudioNodeBus' index='2' name='sourceBus' type='I'/>
<arg declared_type='AVAudioFormat * _Nullable' index='3' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='detachNode:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableManualRenderingMode'>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectNodeInput:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectNodeInput:bus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectNodeOutput:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disconnectNodeOutput:bus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableManualRenderingMode:format:maximumFrameCount:error:'>
<arg declared_type='AVAudioEngineManualRenderingMode' index='0' name='mode' type='i'/>
<arg declared_type='AVAudioFormat * _Nonnull' index='1' name='pcmFormat' type='@'/>
<arg declared_type='AVAudioFrameCount' index='2' name='maximumFrameCount' type='I'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='inputConnectionPointForNode:inputBus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I'/>
<retval declared_type='AVAudioConnectionPoint * _Nullable' type='@'/>
</method>
<method selector='inputNode'>
<retval declared_type='AVAudioInputNode * _Nonnull' type='@'/>
</method>
<method selector='isInManualRenderingMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mainMixerNode'>
<retval declared_type='AVAudioMixerNode * _Nonnull' type='@'/>
</method>
<method selector='manualRenderingBlock'>
<retval declared_type='AVAudioEngineManualRenderingBlock _Nonnull' function_pointer='true' type='@?'>
<arg declared_type='AVAudioFrameCount' type='I'/>
<arg declared_type='AudioBufferList * _Nonnull' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
<arg declared_type='OSStatus * _Nullable' type='^i'/>
<retval declared_type='AVAudioEngineManualRenderingStatus' type='i'/>
</retval>
</method>
<method selector='manualRenderingFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='manualRenderingMaximumFrameCount'>
<retval declared_type='AVAudioFrameCount' type='I'/>
</method>
<method selector='manualRenderingMode'>
<retval declared_type='AVAudioEngineManualRenderingMode' type='i'/>
</method>
<method selector='manualRenderingSampleTime'>
<retval declared_type='AVAudioFramePosition' type='q'/>
</method>
<method selector='outputConnectionPointsForNode:outputBus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='outputNode'>
<retval declared_type='AVAudioOutputNode * _Nonnull' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepare'>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderOffline:toBuffer:error:'>
<arg declared_type='AVAudioFrameCount' index='0' name='numberOfFrames' type='I'/>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='1' name='buffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='AVAudioEngineManualRenderingStatus' type='i'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAndReturnError:'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioEnvironmentDistanceAttenuationParameters'>
<method selector='distanceAttenuationModel'>
<retval declared_type='AVAudioEnvironmentDistanceAttenuationModel' type='i'/>
</method>
<method selector='maximumDistance'>
<retval declared_type='float' type='f'/>
</method>
<method selector='referenceDistance'>
<retval declared_type='float' type='f'/>
</method>
<method selector='rolloffFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setDistanceAttenuationModel:'>
<arg declared_type='AVAudioEnvironmentDistanceAttenuationModel' index='0' name='distanceAttenuationModel' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumDistance:'>
<arg declared_type='float' index='0' name='maximumDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferenceDistance:'>
<arg declared_type='float' index='0' name='referenceDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRolloffFactor:'>
<arg declared_type='float' index='0' name='rolloffFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioEnvironmentReverbParameters'>
<method selector='enable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='filterParameters'>
<retval declared_type='AVAudioUnitEQFilterParameters * _Nonnull' type='@'/>
</method>
<method selector='level'>
<retval declared_type='float' type='f'/>
</method>
<method selector='loadFactoryReverbPreset:'>
<arg declared_type='AVAudioUnitReverbPreset' index='0' name='preset' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnable:'>
<arg declared_type='BOOL' index='0' name='enable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLevel:'>
<arg declared_type='float' index='0' name='level' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioFile'>
<method selector='fileFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='framePosition'>
<retval declared_type='AVAudioFramePosition' type='q'/>
</method>
<method selector='initForReading:commonFormat:interleaved:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='AVAudioCommonFormat' index='1' name='format' type='I'/>
<arg declared_type='BOOL' index='2' name='interleaved' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initForReading:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initForWriting:settings:commonFormat:interleaved:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='settings' type='@'/>
<arg declared_type='AVAudioCommonFormat' index='2' name='format' type='I'/>
<arg declared_type='BOOL' index='3' name='interleaved' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initForWriting:settings:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='fileURL' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='settings' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='length'>
<retval declared_type='AVAudioFramePosition' type='q'/>
</method>
<method selector='processingFormat'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='readIntoBuffer:error:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readIntoBuffer:frameCount:error:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioFrameCount' index='1' name='frames' type='I'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFramePosition:'>
<arg declared_type='AVAudioFramePosition' index='0' name='framePosition' type='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL * _Nonnull' type='@'/>
</method>
<method selector='writeFromBuffer:error:'>
<arg const='true' declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVAudioFormat'>
<method selector='channelCount'>
<retval declared_type='AVAudioChannelCount' type='I'/>
</method>
<method selector='channelLayout'>
<retval declared_type='AVAudioChannelLayout * _Nullable' type='@'/>
</method>
<method selector='commonFormat'>
<retval declared_type='AVAudioCommonFormat' type='I'/>
</method>
<method selector='initStandardFormatWithSampleRate:channelLayout:'>
<arg declared_type='double' index='0' name='sampleRate' type='d'/>
<arg declared_type='AVAudioChannelLayout * _Nonnull' index='1' name='layout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initStandardFormatWithSampleRate:channels:'>
<arg declared_type='double' index='0' name='sampleRate' type='d'/>
<arg declared_type='AVAudioChannelCount' index='1' name='channels' type='I'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCommonFormat:sampleRate:channels:interleaved:'>
<arg declared_type='AVAudioCommonFormat' index='0' name='format' type='I'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<arg declared_type='AVAudioChannelCount' index='2' name='channels' type='I'/>
<arg declared_type='BOOL' index='3' name='interleaved' type='B'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCommonFormat:sampleRate:interleaved:channelLayout:'>
<arg declared_type='AVAudioCommonFormat' index='0' name='format' type='I'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<arg declared_type='BOOL' index='2' name='interleaved' type='B'/>
<arg declared_type='AVAudioChannelLayout * _Nonnull' index='3' name='layout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSettings:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='settings' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithStreamDescription:'>
<arg const='true' declared_type='AudioStreamBasicDescription * _Nonnull' index='0' name='asbd' type='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithStreamDescription:channelLayout:'>
<arg const='true' declared_type='AudioStreamBasicDescription * _Nonnull' index='0' name='asbd' type='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type='AVAudioChannelLayout * _Nullable' index='1' name='layout' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInterleaved'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isStandard'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='magicCookie'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='sampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setMagicCookie:'>
<arg declared_type='NSData * _Nullable' index='0' name='magicCookie' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='streamDescription'>
<retval const='true' declared_type='AudioStreamBasicDescription * _Nonnull' type='^{AudioStreamBasicDescription=dIIIIIIII}'/>
</method>
</class>
<class name='AVAudioIONode'>
<method selector='presentationLatency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='AVAudioInputNode'>
<method selector='setManualRenderingInputPCMFormat:inputBlock:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='AVAudioIONodeInputBlock _Nonnull' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='AVAudioFrameCount' type='I'/>
<retval const='true' declared_type='AudioBufferList * _Nullable' type='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVAudioMixerNode'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='nextAvailableInputBus'>
<retval declared_type='AVAudioNodeBus' type='I'/>
</method>
<method selector='outputVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setOutputVolume:'>
<arg declared_type='float' index='0' name='outputVolume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioMixingDestination'>
<method selector='connectionPoint'>
<retval declared_type='AVAudioConnectionPoint * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioNode'>
<method selector='engine'>
<retval declared_type='AVAudioEngine * _Nullable' type='@'/>
</method>
<method selector='inputFormatForBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I'/>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='installTapOnBus:bufferSize:format:block:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I'/>
<arg declared_type='AVAudioFrameCount' index='1' name='bufferSize' type='I'/>
<arg declared_type='AVAudioFormat * _Nullable' index='2' name='format' type='@'/>
<arg declared_type='AVAudioNodeTapBlock _Nonnull' function_pointer='true' index='3' name='tapBlock' type='@?'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' type='@'/>
<arg declared_type='AVAudioTime * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='lastRenderTime'>
<retval declared_type='AVAudioTime * _Nullable' type='@'/>
</method>
<method selector='latency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='nameForInputBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='nameForOutputBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='numberOfInputs'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='numberOfOutputs'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='outputFormatForBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I'/>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='outputPresentationLatency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='removeTapOnBus:'>
<arg declared_type='AVAudioNodeBus' index='0' name='bus' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioPCMBuffer'>
<method selector='floatChannelData'>
<retval const='true' declared_type='float * _Nonnull * _Nullable' type='^^f'/>
</method>
<method selector='frameCapacity'>
<retval declared_type='AVAudioFrameCount' type='I'/>
</method>
<method selector='frameLength'>
<retval declared_type='AVAudioFrameCount' type='I'/>
</method>
<method selector='initWithPCMFormat:frameCapacity:'>
<arg declared_type='AVAudioFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='AVAudioFrameCount' index='1' name='frameCapacity' type='I'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='int16ChannelData'>
<retval const='true' declared_type='int16_t * _Nonnull * _Nullable' type='^^s'/>
</method>
<method selector='int32ChannelData'>
<retval const='true' declared_type='int32_t * _Nonnull * _Nullable' type='^^i'/>
</method>
<method selector='setFrameLength:'>
<arg declared_type='AVAudioFrameCount' index='0' name='frameLength' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stride'>
<retval declared_type='NSUInteger' type='I'/>
</method>
</class>
<class name='AVAudioPlayer'>
<method selector='averagePowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='channelAssignments'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='currentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='data'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deviceCurrentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='enableRate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='format'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithContentsOfURL:fileTypeHint:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='utiString' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:fileTypeHint:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='utiString' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfChannels'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='pan'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='play'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='playAtTime:'>
<arg declared_type='NSTimeInterval' index='0' name='time' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setChannelAssignments:'>
<arg declared_type='NSArray * _Nullable' index='0' name='channelAssignments' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentTime:'>
<arg declared_type='NSTimeInterval' index='0' name='currentTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableRate:'>
<arg declared_type='BOOL' index='0' name='enableRate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg declared_type='BOOL' index='0' name='meteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg declared_type='NSInteger' index='0' name='numberOfLoops' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPan:'>
<arg declared_type='float' index='0' name='pan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:fadeDuration:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVAudioPlayerNode'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nodeTimeForPlayerTime:'>
<arg declared_type='AVAudioTime * _Nonnull' index='0' name='playerTime' type='@'/>
<retval declared_type='AVAudioTime * _Nullable' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='play'>
<retval declared_type='void' type='v'/>
</method>
<method selector='playAtTime:'>
<arg declared_type='AVAudioTime * _Nullable' index='0' name='when' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='playerTimeForNodeTime:'>
<arg declared_type='AVAudioTime * _Nonnull' index='0' name='nodeTime' type='@'/>
<retval declared_type='AVAudioTime * _Nullable' type='@'/>
</method>
<method selector='prepareWithFrameCount:'>
<arg declared_type='AVAudioFrameCount' index='0' name='frameCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBuffer:atTime:options:completionCallbackType:completionHandler:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioTime * _Nullable' index='1' name='when' type='@'/>
<arg declared_type='AVAudioPlayerNodeBufferOptions' index='2' name='options' type='I'/>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' index='3' name='callbackType' type='i'/>
<arg declared_type='AVAudioPlayerNodeCompletionHandler _Nullable' function_pointer='true' index='4' name='completionHandler' type='@?'>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBuffer:atTime:options:completionHandler:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioTime * _Nullable' index='1' name='when' type='@'/>
<arg declared_type='AVAudioPlayerNodeBufferOptions' index='2' name='options' type='I'/>
<arg declared_type='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='3' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBuffer:completionCallbackType:completionHandler:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' index='1' name='callbackType' type='i'/>
<arg declared_type='AVAudioPlayerNodeCompletionHandler _Nullable' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleBuffer:completionHandler:'>
<arg declared_type='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='1' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleFile:atTime:completionCallbackType:completionHandler:'>
<arg declared_type='AVAudioFile * _Nonnull' index='0' name='file' type='@'/>
<arg declared_type='AVAudioTime * _Nullable' index='1' name='when' type='@'/>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' index='2' name='callbackType' type='i'/>
<arg declared_type='AVAudioPlayerNodeCompletionHandler _Nullable' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleFile:atTime:completionHandler:'>
<arg declared_type='AVAudioFile * _Nonnull' index='0' name='file' type='@'/>
<arg declared_type='AVAudioTime * _Nullable' index='1' name='when' type='@'/>
<arg declared_type='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='2' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSegment:startingFrame:frameCount:atTime:completionCallbackType:completionHandler:'>
<arg declared_type='AVAudioFile * _Nonnull' index='0' name='file' type='@'/>
<arg declared_type='AVAudioFramePosition' index='1' name='startFrame' type='q'/>
<arg declared_type='AVAudioFrameCount' index='2' name='numberFrames' type='I'/>
<arg declared_type='AVAudioTime * _Nullable' index='3' name='when' type='@'/>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' index='4' name='callbackType' type='i'/>
<arg declared_type='AVAudioPlayerNodeCompletionHandler _Nullable' function_pointer='true' index='5' name='completionHandler' type='@?'>
<arg declared_type='AVAudioPlayerNodeCompletionCallbackType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scheduleSegment:startingFrame:frameCount:atTime:completionHandler:'>
<arg declared_type='AVAudioFile * _Nonnull' index='0' name='file' type='@'/>
<arg declared_type='AVAudioFramePosition' index='1' name='startFrame' type='q'/>
<arg declared_type='AVAudioFrameCount' index='2' name='numberFrames' type='I'/>
<arg declared_type='AVAudioTime * _Nullable' index='3' name='when' type='@'/>
<arg declared_type='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='4' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioRecorder'>
<method selector='averagePowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='channelAssignments'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='currentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deleteRecording'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deviceCurrentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='format'>
<retval declared_type='AVAudioFormat * _Nonnull' type='@'/>
</method>
<method selector='initWithURL:format:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='AVAudioFormat * _Nonnull' index='1' name='format' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithURL:settings:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='settings' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRecording'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='prepareToRecord'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='record'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recordAtTime:'>
<arg declared_type='NSTimeInterval' index='0' name='time' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recordAtTime:forDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='time' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recordForDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setChannelAssignments:'>
<arg declared_type='NSArray * _Nullable' index='0' name='channelAssignments' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg declared_type='BOOL' index='0' name='meteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioSequencer'>
<method selector='beatsForHostTime:error:'>
<arg declared_type='UInt64' index='0' name='inHostTime' type='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='AVMusicTimeStamp' type='d'/>
</method>
<method selector='currentPositionInBeats'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='currentPositionInSeconds'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='hostTimeForBeats:error:'>
<arg declared_type='AVMusicTimeStamp' index='0' name='inBeats' type='d'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='UInt64' type='Q'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setCurrentPositionInBeats:'>
<arg declared_type='NSTimeInterval' index='0' name='currentPositionInBeats' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPositionInSeconds:'>
<arg declared_type='NSTimeInterval' index='0' name='currentPositionInSeconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAndReturnError:'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAudioSession'>
<method selector='IOBufferDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='availableCategories'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='availableInputs'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableModes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='category'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='categoryOptions'>
<retval declared_type='AVAudioSessionCategoryOptions' type='I'/>
</method>
<method selector='currentRoute'>
<retval declared_type='AVAudioSessionRouteDescription * _Nonnull' type='@'/>
</method>
<method selector='inputDataSource'>
<retval declared_type='AVAudioSessionDataSourceDescription * _Nullable' type='@'/>
</method>
<method selector='inputDataSources'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='inputLatency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='inputNumberOfChannels'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='isInputAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOtherAudioPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumInputNumberOfChannels'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='maximumOutputNumberOfChannels'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='mode'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='outputDataSource'>
<retval declared_type='AVAudioSessionDataSourceDescription * _Nullable' type='@'/>
</method>
<method selector='outputDataSources'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='outputLatency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='outputNumberOfChannels'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='outputVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='overrideOutputAudioPort:error:'>
<arg declared_type='AVAudioSessionPortOverride' index='0' name='portOverride' type='I'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recordPermission'>
<retval declared_type='AVAudioSessionRecordPermission' type='I'/>
</method>
<method selector='requestRecordPermission:'>
<arg declared_type='PermissionBlock _Nonnull' function_pointer='true' index='0' name='response' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='sampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='secondaryAudioShouldBeSilencedHint'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActive:error:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActive:withOptions:error:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<arg declared_type='AVAudioSessionSetActiveOptions' index='1' name='options' type='I'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCategory:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='category' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCategory:mode:options:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='category' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='mode' type='@'/>
<arg declared_type='AVAudioSessionCategoryOptions' index='2' name='options' type='I'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCategory:withOptions:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='category' type='@'/>
<arg declared_type='AVAudioSessionCategoryOptions' index='1' name='options' type='I'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setMode:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='mode' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='AVAudioSession * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioSessionChannelDescription'>
<method selector='channelLabel'>
<retval declared_type='AudioChannelLabel' type='L'/>
</method>
<method selector='channelName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='channelNumber'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='owningPortUID'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioSessionDataSourceDescription'>
<method selector='dataSourceID'>
<retval declared_type='NSNumber * _Nonnull' type='@'/>
</method>
<method selector='dataSourceName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='location'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='AVAudioSessionPortDescription'>
<method selector='UID'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='channels'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='hasHardwareVoiceCallProcessing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='portName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='portType'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioSessionRouteDescription'>
<method selector='inputs'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='outputs'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioTime'>
<method selector='audioTimeStamp'>
<retval declared_type='AudioTimeStamp' type='{AudioTimeStamp=dQdQ{SMPTETime=ssILLssss}LI}'/>
</method>
<method selector='extrapolateTimeFromAnchor:'>
<arg declared_type='AVAudioTime * _Nonnull' index='0' name='anchorTime' type='@'/>
<retval declared_type='AVAudioTime * _Nullable' type='@'/>
</method>
<method selector='hostTime'>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method class_method='true' selector='hostTimeForSeconds:'>
<arg declared_type='NSTimeInterval' index='0' name='seconds' type='d'/>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method selector='initWithAudioTimeStamp:sampleRate:'>
<arg const='true' declared_type='AudioTimeStamp * _Nonnull' index='0' name='ts' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssILLssss}LI}'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithHostTime:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithHostTime:sampleTime:atRate:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<arg declared_type='AVAudioFramePosition' index='1' name='sampleTime' type='q'/>
<arg declared_type='double' index='2' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSampleTime:atRate:'>
<arg declared_type='AVAudioFramePosition' index='0' name='sampleTime' type='q'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isHostTimeValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSampleTimeValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='sampleTime'>
<retval declared_type='AVAudioFramePosition' type='q'/>
</method>
<method class_method='true' selector='secondsForHostTime:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='timeWithAudioTimeStamp:sampleRate:'>
<arg const='true' declared_type='AudioTimeStamp * _Nonnull' index='0' name='ts' type='^{AudioTimeStamp=dQdQ{SMPTETime=ssILLssss}LI}'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='timeWithHostTime:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='timeWithHostTime:sampleTime:atRate:'>
<arg declared_type='uint64_t' index='0' name='hostTime' type='Q'/>
<arg declared_type='AVAudioFramePosition' index='1' name='sampleTime' type='q'/>
<arg declared_type='double' index='2' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='timeWithSampleTime:atRate:'>
<arg declared_type='AVAudioFramePosition' index='0' name='sampleTime' type='q'/>
<arg declared_type='double' index='1' name='sampleRate' type='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='AVAudioUnitEQFilterParameters'>
<method selector='bandwidth'>
<retval declared_type='float' type='f'/>
</method>
<method selector='bypass'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='filterType'>
<retval declared_type='AVAudioUnitEQFilterType' type='i'/>
</method>
<method selector='frequency'>
<retval declared_type='float' type='f'/>
</method>
<method selector='gain'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setBandwidth:'>
<arg declared_type='float' index='0' name='bandwidth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBypass:'>
<arg declared_type='BOOL' index='0' name='bypass' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterType:'>
<arg declared_type='AVAudioUnitEQFilterType' index='0' name='filterType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrequency:'>
<arg declared_type='float' index='0' name='frequency' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGain:'>
<arg declared_type='float' index='0' name='gain' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVSpeechSynthesisVoice'>
<method class_method='true' selector='currentLanguageCode'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='language'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='quality'>
<retval declared_type='AVSpeechSynthesisVoiceQuality' type='i'/>
</method>
<method class_method='true' selector='speechVoices'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='voiceWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='AVSpeechSynthesisVoice * _Nullable' type='@'/>
</method>
<method class_method='true' selector='voiceWithLanguage:'>
<arg declared_type='NSString * _Nullable' index='0' name='languageCode' type='@'/>
<retval declared_type='AVSpeechSynthesisVoice * _Nullable' type='@'/>
</method>
</class>
<class name='AVSpeechSynthesizer'>
<method selector='continueSpeaking'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSpeaking'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputChannels'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='pauseSpeakingAtBoundary:'>
<arg declared_type='AVSpeechBoundary' index='0' name='boundary' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputChannels:'>
<arg declared_type='NSArray * _Nullable' index='0' name='outputChannels' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speakUtterance:'>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='0' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopSpeakingAtBoundary:'>
<arg declared_type='AVSpeechBoundary' index='0' name='boundary' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVSpeechUtterance'>
<method selector='attributedSpeechString'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='initWithAttributedString:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='pitchMultiplier'>
<retval declared_type='float' type='f'/>
</method>
<method selector='postUtteranceDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='preUtteranceDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPitchMultiplier:'>
<arg declared_type='float' index='0' name='pitchMultiplier' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostUtteranceDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='postUtteranceDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreUtteranceDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='preUtteranceDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVoice:'>
<arg declared_type='AVSpeechSynthesisVoice * _Nullable' index='0' name='voice' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechString'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='speechUtteranceWithAttributedString:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='speechUtteranceWithString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='voice'>
<retval declared_type='AVSpeechSynthesisVoice * _Nullable' type='@'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='NSObject'>
<method selector='audioPlayerBeginInterruption:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSError * _Nullable' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withFlags:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withOptions:'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderBeginInterruption:'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderDidFinishRecording:successfully:'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEncodeErrorDidOccur:error:'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<arg declared_type='NSError * _Nullable' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEndInterruption:'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEndInterruption:withFlags:'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEndInterruption:withOptions:'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='destinationForMixer:bus:'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='mixer' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I'/>
<retval declared_type='AVAudioMixingDestination * _Nullable' type='@'/>
</method>
<method selector='pan'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPan:'>
<arg declared_type='float' index='0' name='pan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didCancelSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didContinueSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didPauseSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didStartSpeechUtterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:willSpeakRangeOfSpeechString:utterance:'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='NSRange' index='1' name='characterRange' type='{_NSRange=II}'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='2' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<informal_protocol name='AVAudioMixing'>
<method selector='destinationForMixer:bus:' type='@16@0:4@8I12'>
<arg declared_type='AVAudioNode * _Nonnull' index='0' name='mixer' type='@'/>
<arg declared_type='AVAudioNodeBus' index='1' name='bus' type='I'/>
<retval declared_type='AVAudioMixingDestination * _Nullable' type='@'/>
</method>
<method selector='setVolume:' type='v12@0:4f8'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='volume' type='f8@0:4'>
<retval declared_type='float' type='f'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioPlayerDelegate'>
<method selector='audioPlayerBeginInterruption:' type='v12@0:4@8'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDecodeErrorDidOccur:error:' type='v16@0:4@8@12'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSError * _Nullable' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:' type='v16@0:4@8B12'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:' type='v12@0:4@8'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withFlags:' type='v16@0:4@8I12'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withOptions:' type='v16@0:4@8I12'>
<arg declared_type='AVAudioPlayer * _Nonnull' index='0' name='player' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioRecorderDelegate'>
<method selector='audioRecorderBeginInterruption:' type='v12@0:4@8'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderDidFinishRecording:successfully:' type='v16@0:4@8B12'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEncodeErrorDidOccur:error:' type='v16@0:4@8@12'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<arg declared_type='NSError * _Nullable' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEndInterruption:' type='v12@0:4@8'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEndInterruption:withFlags:' type='v16@0:4@8I12'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEndInterruption:withOptions:' type='v16@0:4@8I12'>
<arg declared_type='AVAudioRecorder * _Nonnull' index='0' name='recorder' type='@'/>
<arg declared_type='NSUInteger' index='1' name='flags' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioStereoMixing'>
<method selector='pan' type='f8@0:4'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setPan:' type='v12@0:4f8'>
<arg declared_type='float' index='0' name='pan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVSpeechSynthesizerDelegate'>
<method selector='speechSynthesizer:didCancelSpeechUtterance:' type='v16@0:4@8@12'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didContinueSpeechUtterance:' type='v16@0:4@8@12'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeechUtterance:' type='v16@0:4@8@12'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didPauseSpeechUtterance:' type='v16@0:4@8@12'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didStartSpeechUtterance:' type='v16@0:4@8@12'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='1' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:willSpeakRangeOfSpeechString:utterance:' type='v24@0:4@8{_NSRange=II}12@20'>
<arg declared_type='AVSpeechSynthesizer * _Nonnull' index='0' name='synthesizer' type='@'/>
<arg declared_type='NSRange' index='1' name='characterRange' type='{_NSRange=II}'/>
<arg declared_type='AVSpeechUtterance * _Nonnull' index='2' name='utterance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
