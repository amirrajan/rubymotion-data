<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Intents.framework'/>
<depends_on path='/System/Library/Frameworks/Contacts.framework'/>
<depends_on path='/System/Library/Frameworks/MobileCoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreLocation.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/UIKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<struct name='MKCoordinateRegion' type='{_MKCoordinateRegion=&quot;center&quot;{CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}&quot;span&quot;{_MKCoordinateSpan=&quot;latitudeDelta&quot;d&quot;longitudeDelta&quot;d}}'>
<field declared_type='CLLocationCoordinate2D' name='center' type='{CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}'/>
<field declared_type='MKCoordinateSpan' name='span' type='{_MKCoordinateSpan=&quot;latitudeDelta&quot;d&quot;longitudeDelta&quot;d}'/>
</struct>
<struct name='MKCoordinateSpan' type='{_MKCoordinateSpan=&quot;latitudeDelta&quot;d&quot;longitudeDelta&quot;d}'>
<field declared_type='CLLocationDegrees' name='latitudeDelta' type='d'/>
<field declared_type='CLLocationDegrees' name='longitudeDelta' type='d'/>
</struct>
<struct name='MKMapPoint' type='{_MKMapPoint=&quot;x&quot;d&quot;y&quot;d}'>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
</struct>
<struct name='MKMapRect' type='{_MKMapRect=&quot;origin&quot;{_MKMapPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{_MKMapSize=&quot;width&quot;d&quot;height&quot;d}}'>
<field declared_type='MKMapPoint' name='origin' type='{_MKMapPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<field declared_type='MKMapSize' name='size' type='{_MKMapSize=&quot;width&quot;d&quot;height&quot;d}'/>
</struct>
<struct name='MKMapSize' type='{_MKMapSize=&quot;width&quot;d&quot;height&quot;d}'>
<field declared_type='double' name='width' type='d'/>
<field declared_type='double' name='height' type='d'/>
</struct>
<struct name='MKTileOverlayPath' type='{_MKTileOverlayPath=&quot;x&quot;i&quot;y&quot;i&quot;z&quot;i&quot;contentScaleFactor&quot;f}'>
<field declared_type='NSInteger' name='x' type='i'/>
<field declared_type='NSInteger' name='y' type='i'/>
<field declared_type='NSInteger' name='z' type='i'/>
<field declared_type='CGFloat' name='contentScaleFactor' type='f'/>
</struct>
<constant declared_type='NSString * _Nonnull' name='MKErrorDomain' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKLaunchOptionsCameraKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKLaunchOptionsDirectionsModeDefault' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKLaunchOptionsDirectionsModeDriving' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKLaunchOptionsDirectionsModeKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKLaunchOptionsDirectionsModeTransit' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKLaunchOptionsDirectionsModeWalking' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKLaunchOptionsMapCenterKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKLaunchOptionsMapSpanKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MKMapItemTypeIdentifier' type='@'/>
<constant const='true' declared_type='MKMapRect' name='MKMapRectNull' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<constant const='true' declared_type='MKMapRect' name='MKMapRectWorld' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<constant const='true' declared_type='MKMapSize' name='MKMapSizeWorld' type='{_MKMapSize=dd}'/>
<enum name='MKDistanceFormatterUnitStyleAbbreviated' value='1'/>
<enum name='MKDistanceFormatterUnitStyleDefault' value='0'/>
<enum name='MKDistanceFormatterUnitStyleFull' value='2'/>
<enum name='MKDistanceFormatterUnitsDefault' value='0'/>
<enum name='MKDistanceFormatterUnitsImperial' value='2'/>
<enum name='MKDistanceFormatterUnitsImperialWithYards' value='3'/>
<enum name='MKDistanceFormatterUnitsMetric' value='1'/>
<function name='MKCoordinateForMapPoint'>
<arg declared_type='MKMapPoint' name='mapPoint' type='{_MKMapPoint=dd}'/>
<retval declared_type='CLLocationCoordinate2D' type='{CLLocationCoordinate2D=dd}'/>
</function>
<function name='MKCoordinateRegionForMapRect'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='MKCoordinateRegion' type='{_MKCoordinateRegion={CLLocationCoordinate2D=dd}{_MKCoordinateSpan=dd}}'/>
</function>
<function inline='true' name='MKCoordinateRegionMake'>
<arg declared_type='CLLocationCoordinate2D' name='centerCoordinate' type='{CLLocationCoordinate2D=dd}'/>
<arg declared_type='MKCoordinateSpan' name='span' type='{_MKCoordinateSpan=dd}'/>
<retval declared_type='MKCoordinateRegion' type='{_MKCoordinateRegion={CLLocationCoordinate2D=dd}{_MKCoordinateSpan=dd}}'/>
</function>
<function name='MKCoordinateRegionMakeWithDistance'>
<arg declared_type='CLLocationCoordinate2D' name='centerCoordinate' type='{CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationDistance' name='latitudinalMeters' type='d'/>
<arg declared_type='CLLocationDistance' name='longitudinalMeters' type='d'/>
<retval declared_type='MKCoordinateRegion' type='{_MKCoordinateRegion={CLLocationCoordinate2D=dd}{_MKCoordinateSpan=dd}}'/>
</function>
<function inline='true' name='MKCoordinateSpanMake'>
<arg declared_type='CLLocationDegrees' name='latitudeDelta' type='d'/>
<arg declared_type='CLLocationDegrees' name='longitudeDelta' type='d'/>
<retval declared_type='MKCoordinateSpan' type='{_MKCoordinateSpan=dd}'/>
</function>
<function inline='true' name='MKMapPointEqualToPoint'>
<arg declared_type='MKMapPoint' name='point1' type='{_MKMapPoint=dd}'/>
<arg declared_type='MKMapPoint' name='point2' type='{_MKMapPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='MKMapPointForCoordinate'>
<arg declared_type='CLLocationCoordinate2D' name='coordinate' type='{CLLocationCoordinate2D=dd}'/>
<retval declared_type='MKMapPoint' type='{_MKMapPoint=dd}'/>
</function>
<function inline='true' name='MKMapPointMake'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='MKMapPoint' type='{_MKMapPoint=dd}'/>
</function>
<function name='MKMapPointsPerMeterAtLatitude'>
<arg declared_type='CLLocationDegrees' name='latitude' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='MKMapRectContainsPoint'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='MKMapPoint' name='point' type='{_MKMapPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='MKMapRectContainsRect'>
<arg declared_type='MKMapRect' name='rect1' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='MKMapRect' name='rect2' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='MKMapRectDivide'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='MKMapRect * _Nonnull' name='slice' type='^{_MKMapRect={?=dd}{?=dd}}'/>
<arg declared_type='MKMapRect * _Nonnull' name='remainder' type='^{_MKMapRect={?=dd}{?=dd}}'/>
<arg declared_type='double' name='amount' type='d'/>
<arg declared_type='CGRectEdge' name='edge' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function inline='true' name='MKMapRectEqualToRect'>
<arg declared_type='MKMapRect' name='rect1' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='MKMapRect' name='rect2' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='MKMapRectGetHeight'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='double' type='d'/>
</function>
<function inline='true' name='MKMapRectGetMaxX'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='double' type='d'/>
</function>
<function inline='true' name='MKMapRectGetMaxY'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='double' type='d'/>
</function>
<function inline='true' name='MKMapRectGetMidX'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='double' type='d'/>
</function>
<function inline='true' name='MKMapRectGetMidY'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='double' type='d'/>
</function>
<function inline='true' name='MKMapRectGetMinX'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='double' type='d'/>
</function>
<function inline='true' name='MKMapRectGetMinY'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='double' type='d'/>
</function>
<function inline='true' name='MKMapRectGetWidth'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='MKMapRectInset'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='double' name='dx' type='d'/>
<arg declared_type='double' name='dy' type='d'/>
<retval declared_type='MKMapRect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
</function>
<function name='MKMapRectIntersection'>
<arg declared_type='MKMapRect' name='rect1' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='MKMapRect' name='rect2' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='MKMapRect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
</function>
<function name='MKMapRectIntersectsRect'>
<arg declared_type='MKMapRect' name='rect1' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='MKMapRect' name='rect2' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='MKMapRectIsEmpty'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='MKMapRectIsNull'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='MKMapRectMake'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='width' type='d'/>
<arg declared_type='double' name='height' type='d'/>
<retval declared_type='MKMapRect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
</function>
<function name='MKMapRectOffset'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='double' name='dx' type='d'/>
<arg declared_type='double' name='dy' type='d'/>
<retval declared_type='MKMapRect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
</function>
<function name='MKMapRectRemainder'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='MKMapRect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
</function>
<function name='MKMapRectSpans180thMeridian'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='MKMapRectUnion'>
<arg declared_type='MKMapRect' name='rect1' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<arg declared_type='MKMapRect' name='rect2' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='MKMapRect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
</function>
<function inline='true' name='MKMapSizeEqualToSize'>
<arg declared_type='MKMapSize' name='size1' type='{_MKMapSize=dd}'/>
<arg declared_type='MKMapSize' name='size2' type='{_MKMapSize=dd}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='MKMapSizeMake'>
<arg declared_type='double' name='width' type='d'/>
<arg declared_type='double' name='height' type='d'/>
<retval declared_type='MKMapSize' type='{_MKMapSize=dd}'/>
</function>
<function name='MKMetersBetweenMapPoints'>
<arg declared_type='MKMapPoint' name='a' type='{_MKMapPoint=dd}'/>
<arg declared_type='MKMapPoint' name='b' type='{_MKMapPoint=dd}'/>
<retval declared_type='CLLocationDistance' type='d'/>
</function>
<function name='MKMetersPerMapPointAtLatitude'>
<arg declared_type='CLLocationDegrees' name='latitude' type='d'/>
<retval declared_type='CLLocationDistance' type='d'/>
</function>
<function inline='true' name='MKStringFromMapPoint'>
<arg declared_type='MKMapPoint' name='point' type='{_MKMapPoint=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function inline='true' name='MKStringFromMapRect'>
<arg declared_type='MKMapRect' name='rect' type='{_MKMapRect={_MKMapPoint=dd}{_MKMapSize=dd}}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function inline='true' name='MKStringFromMapSize'>
<arg declared_type='MKMapSize' name='size' type='{_MKMapSize=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<class name='MKDirectionsRequest'>
<method selector='arrivalDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='departureDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='isDirectionsRequestURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestsAlternateRoutes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setArrivalDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='arrivalDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepartureDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='departureDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestsAlternateRoutes:'>
<arg declared_type='BOOL' index='0' name='requestsAlternateRoutes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransportType:'>
<arg declared_type='MKDirectionsTransportType' index='0' name='transportType' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transportType'>
<retval declared_type='MKDirectionsTransportType' type='I'/>
</method>
</class>
<class name='MKDistanceFormatter'>
<method selector='distanceFromString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='distance' type='@'/>
<retval declared_type='CLLocationDistance' type='d'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale * _Nonnull' type='@'/>
</method>
<method selector='setLocale:'>
<arg declared_type='NSLocale * _Nullable' index='0' name='locale' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnitStyle:'>
<arg declared_type='MKDistanceFormatterUnitStyle' index='0' name='unitStyle' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnits:'>
<arg declared_type='MKDistanceFormatterUnits' index='0' name='units' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromDistance:'>
<arg declared_type='CLLocationDistance' index='0' name='distance' type='d'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='unitStyle'>
<retval declared_type='MKDistanceFormatterUnitStyle' type='I'/>
</method>
<method selector='units'>
<retval declared_type='MKDistanceFormatterUnits' type='I'/>
</method>
</class>
<class name='MKMapItem'>
<method selector='initWithPlacemark:'>
<arg declared_type='MKPlacemark * _Nonnull' index='0' name='placemark' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isCurrentLocation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='mapItemForCurrentLocation'>
<retval declared_type='MKMapItem * _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='openInMapsWithLaunchOptions:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='launchOptions' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='openMapsWithItems:launchOptions:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='mapItems' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='launchOptions' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='phoneNumber'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='placemark'>
<retval declared_type='MKPlacemark * _Nonnull' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nullable' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPhoneNumber:'>
<arg declared_type='NSString * _Nullable' index='0' name='phoneNumber' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone * _Nullable' index='0' name='timeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUrl:'>
<arg declared_type='NSURL * _Nullable' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone * _Nullable' type='@'/>
</method>
<method selector='url'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
</class>
<class name='MKPlacemark'>
<method selector='countryCode'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='initWithCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{CLLocationCoordinate2D=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoordinate:addressDictionary:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{CLLocationCoordinate2D=dd}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='addressDictionary' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoordinate:postalAddress:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{CLLocationCoordinate2D=dd}'/>
<arg declared_type='CNPostalAddress * _Nonnull' index='1' name='postalAddress' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='MKTileOverlay'>
<method selector='URLForTilePath:'>
<arg declared_type='MKTileOverlayPath' index='0' name='path' type='{_MKTileOverlayPath=iiif}'/>
<retval declared_type='NSURL * _Nonnull' type='@'/>
</method>
<method selector='loadTileAtPath:result:'>
<arg declared_type='MKTileOverlayPath' index='0' name='path' type='{_MKTileOverlayPath=iiif}'/>
<arg declared_type='void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable)' function_pointer='true' index='1' name='result' type='@?'>
<arg declared_type='NSData * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='coordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{CLLocationCoordinate2D=dd}'/>
</method>
<method selector='setCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='newCoordinate' type='{CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='NSUserActivity'>
<method selector='mapItem'>
<retval declared_type='MKMapItem*' type='@'/>
</method>
<method selector='setMapItem:'>
<arg declared_type='MKMapItem*' index='0' name='mapItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSValue'>
<method selector='MKCoordinateSpanValue'>
<retval declared_type='MKCoordinateSpan' type='{_MKCoordinateSpan=dd}'/>
</method>
<method selector='MKCoordinateValue'>
<retval declared_type='CLLocationCoordinate2D' type='{CLLocationCoordinate2D=dd}'/>
</method>
<method class_method='true' selector='valueWithMKCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{CLLocationCoordinate2D=dd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithMKCoordinateSpan:'>
<arg declared_type='MKCoordinateSpan' index='0' name='span' type='{_MKCoordinateSpan=dd}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
</class>
<informal_protocol name='MKAnnotation'>
<method selector='coordinate' type='{CLLocationCoordinate2D=dd}8@0:4'>
<retval declared_type='CLLocationCoordinate2D' type='{CLLocationCoordinate2D=dd}'/>
</method>
<method selector='setCoordinate:' type='v24@0:4{CLLocationCoordinate2D=dd}8'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='newCoordinate' type='{CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle' type='@8@0:4'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='title' type='@8@0:4'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
</signatures>
