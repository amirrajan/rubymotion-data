<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=&quot;top&quot;f&quot;leading&quot;f&quot;bottom&quot;f&quot;trailing&quot;f}'>
<field declared_type='CGFloat' name='top' type='f'/>
<field declared_type='CGFloat' name='leading' type='f'/>
<field declared_type='CGFloat' name='bottom' type='f'/>
<field declared_type='CGFloat' name='trailing' type='f'/>
</struct>
<struct name='UIEdgeInsets' type='{UIEdgeInsets=&quot;top&quot;f&quot;left&quot;f&quot;bottom&quot;f&quot;right&quot;f}'>
<field declared_type='CGFloat' name='top' type='f'/>
<field declared_type='CGFloat' name='left' type='f'/>
<field declared_type='CGFloat' name='bottom' type='f'/>
<field declared_type='CGFloat' name='right' type='f'/>
</struct>
<struct name='UIOffset' type='{UIOffset=&quot;horizontal&quot;f&quot;vertical&quot;f}'>
<field declared_type='CGFloat' name='horizontal' type='f'/>
<field declared_type='CGFloat' name='vertical' type='f'/>
</struct>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAttachmentAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSBackgroundColorAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSBackgroundColorDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSBaselineOffsetAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCharacterEncodingDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSCharacterEncodingDocumentOption' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDefaultAttributesDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSDefaultAttributesDocumentOption' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDefaultTabIntervalDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSDirectionalEdgeInsets' name='NSDirectionalEdgeInsetsZero' type='{NSDirectionalEdgeInsets=ffff}'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDocumentTypeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSDocumentTypeDocumentOption' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSExpansionAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSFontAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSForegroundColorAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentType _Nonnull' name='NSHTMLTextDocumentType' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSHyphenationFactorDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSKernAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSLigatureAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSLinkAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSObliquenessAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSPaperMarginDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSPaperSizeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSParagraphStyleAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentType _Nonnull' name='NSPlainTextDocumentType' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentType _Nonnull' name='NSRTFDTextDocumentType' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentType _Nonnull' name='NSRTFTextDocumentType' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSReadOnlyDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSShadowAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSStrikethroughColorAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSStrikethroughStyleAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSStrokeColorAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSStrokeWidthAttributeName' type='@'/>
<constant const='true' declared_type='NSTextTabOptionKey _Nonnull' name='NSTabColumnTerminatorsAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSTextEffectAttributeName' type='@'/>
<constant const='true' declared_type='NSTextEffectStyle _Nonnull' name='NSTextEffectLetterpressStyle' type='@'/>
<constant const='true' declared_type='NSTextLayoutSectionKey _Nonnull' name='NSTextLayoutSectionOrientation' type='@'/>
<constant const='true' declared_type='NSTextLayoutSectionKey _Nonnull' name='NSTextLayoutSectionRange' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTextLayoutSectionsAttribute' type='@'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlineByWord' type='i'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSUnderlineColorAttributeName' type='@'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternDash' type='i'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternDashDot' type='i'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternDashDotDot' type='i'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternDot' type='i'/>
<constant const='true' declared_type='NSUnderlineStyle' name='NSUnderlinePatternSolid' type='i'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSUnderlineStyleAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSVerticalGlyphFormAttributeName' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewModeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewSizeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewZoomDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSWritingDirectionAttributeName' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityAnnouncementDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityAnnouncementKeyStringValue' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityAnnouncementKeyWasSuccessful' type='@'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityAnnouncementNotification' type='I'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityAssistiveTechnologyKey' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='UIAccessibilityElementFocusedNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityFocusedElementKey' type='@'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityLayoutChangedNotification' type='I'/>
<constant const='true' declared_type='UIAccessibilityAssistiveTechnologyIdentifier _Nonnull' name='UIAccessibilityNotificationSwitchControlIdentifier' type='@'/>
<constant const='true' declared_type='UIAccessibilityAssistiveTechnologyIdentifier _Nonnull' name='UIAccessibilityNotificationVoiceOverIdentifier' type='@'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityPageScrolledNotification' type='I'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityPauseAssistiveTechnologyNotification' type='I'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityResumeAssistiveTechnologyNotification' type='I'/>
<constant declared_type='UIAccessibilityNotifications' name='UIAccessibilityScreenChangedNotification' type='I'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributeIPANotation' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributeLanguage' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributePitch' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributePunctuation' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilitySpeechAttributeQueueAnnouncement' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilityTextAttributeCustom' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='UIAccessibilityTextAttributeHeadingLevel' type='@'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitAdjustable' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitAllowsDirectInteraction' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitButton' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitCausesPageTurn' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitHeader' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitImage' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitKeyboardKey' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitLink' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitNone' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitNotEnabled' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitPlaysSound' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitSearchField' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitSelected' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitStartsMediaSession' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitStaticText' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitSummaryElement' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitTabBar' type='Q'/>
<constant declared_type='UIAccessibilityTraits' name='UIAccessibilityTraitUpdatesFrequently' type='Q'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UIAccessibilityUnfocusedElementKey' type='@'/>
<constant const='true' declared_type='UIEdgeInsets' name='UIEdgeInsetsZero' type='{UIEdgeInsets=ffff}'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorCascadeListAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorCharacterSetAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorFaceAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorFamilyAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorFeatureSettingsAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorFixedAdvanceAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorMatrixAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorNameAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorSizeAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorSystemDesign _Nonnull' name='UIFontDescriptorSystemDesignDefault' type='@'/>
<constant const='true' declared_type='UIFontDescriptorSystemDesign _Nonnull' name='UIFontDescriptorSystemDesignRounded' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorTextStyleAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorTraitsAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorAttributeName _Nonnull' name='UIFontDescriptorVisibleNameAttribute' type='@'/>
<constant const='true' declared_type='UIFontDescriptorFeatureKey _Nonnull' name='UIFontFeatureSelectorIdentifierKey' type='@'/>
<constant const='true' declared_type='UIFontDescriptorFeatureKey _Nonnull' name='UIFontFeatureTypeIdentifierKey' type='@'/>
<constant const='true' declared_type='UIFontDescriptorTraitKey _Nonnull' name='UIFontSlantTrait' type='@'/>
<constant const='true' declared_type='UIFontDescriptorTraitKey _Nonnull' name='UIFontSymbolicTrait' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleBody' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleCallout' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleCaption1' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleCaption2' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleFootnote' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleHeadline' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleLargeTitle' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleSubheadline' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleTitle1' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleTitle2' type='@'/>
<constant const='true' declared_type='UIFontTextStyle _Nonnull' name='UIFontTextStyleTitle3' type='@'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightBlack' type='f'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightBold' type='f'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightHeavy' type='f'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightLight' type='f'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightMedium' type='f'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightRegular' type='f'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightSemibold' type='f'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightThin' type='f'/>
<constant const='true' declared_type='UIFontDescriptorTraitKey _Nonnull' name='UIFontWeightTrait' type='@'/>
<constant const='true' declared_type='UIFontWeight' name='UIFontWeightUltraLight' type='f'/>
<constant const='true' declared_type='UIFontDescriptorTraitKey _Nonnull' name='UIFontWidthTrait' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='UILocalNotificationDefaultSoundName' type='@'/>
<constant const='true' declared_type='UIOffset' name='UIOffsetZero' type='{UIOffset=ff}'/>
<enum name='NSLineBreakByCharWrapping' value='1'/>
<enum name='NSLineBreakByClipping' value='2'/>
<enum name='NSLineBreakByTruncatingHead' value='3'/>
<enum name='NSLineBreakByTruncatingMiddle' value='5'/>
<enum name='NSLineBreakByTruncatingTail' value='4'/>
<enum name='NSLineBreakByWordWrapping' value='0'/>
<enum name='NSStringDrawingTruncatesLastVisibleLine' value='32'/>
<enum name='NSStringDrawingUsesDeviceMetrics' value='8'/>
<enum name='NSStringDrawingUsesFontLeading' value='2'/>
<enum name='NSStringDrawingUsesLineFragmentOrigin' value='1'/>
<enum name='NSTextAlignmentCenter' value='1'/>
<enum name='NSTextAlignmentJustified' value='3'/>
<enum name='NSTextAlignmentLeft' value='0'/>
<enum name='NSTextAlignmentNatural' value='4'/>
<enum name='NSTextAlignmentRight' value='2'/>
<enum name='NSTextWritingDirectionEmbedding' value='0'/>
<enum name='NSTextWritingDirectionOverride' value='2'/>
<enum name='NSUnderlineStyleByWord' value='32768'/>
<enum name='NSUnderlineStyleDouble' value='9'/>
<enum name='NSUnderlineStyleNone' value='0'/>
<enum name='NSUnderlineStylePatternDash' value='512'/>
<enum name='NSUnderlineStylePatternDashDot' value='768'/>
<enum name='NSUnderlineStylePatternDashDotDot' value='1024'/>
<enum name='NSUnderlineStylePatternDot' value='256'/>
<enum name='NSUnderlineStylePatternSolid' value='0'/>
<enum name='NSUnderlineStyleSingle' value='1'/>
<enum name='NSUnderlineStyleThick' value='2'/>
<enum name='NSWritingDirectionEmbedding' value='0'/>
<enum name='NSWritingDirectionLeftToRight' value='0'/>
<enum name='NSWritingDirectionNatural' value='-1'/>
<enum name='NSWritingDirectionOverride' value='2'/>
<enum name='NSWritingDirectionRightToLeft' value='1'/>
<enum name='UIAccessibilityContainerTypeDataTable' value='1'/>
<enum name='UIAccessibilityContainerTypeLandmark' value='3'/>
<enum name='UIAccessibilityContainerTypeList' value='2'/>
<enum name='UIAccessibilityContainerTypeNone' value='0'/>
<enum name='UIAccessibilityNavigationStyleAutomatic' value='0'/>
<enum name='UIAccessibilityNavigationStyleCombined' value='2'/>
<enum name='UIAccessibilityNavigationStyleSeparate' value='1'/>
<enum name='UIFontDescriptorClassClarendonSerifs' value='1073741824'/>
<enum name='UIFontDescriptorClassFreeformSerifs' value='1879048192'/>
<enum name='UIFontDescriptorClassMask' value='4026531840'/>
<enum name='UIFontDescriptorClassModernSerifs' value='805306368'/>
<enum name='UIFontDescriptorClassOldStyleSerifs' value='268435456'/>
<enum name='UIFontDescriptorClassOrnamentals' value='2415919104'/>
<enum name='UIFontDescriptorClassSansSerif' value='2147483648'/>
<enum name='UIFontDescriptorClassScripts' value='2684354560'/>
<enum name='UIFontDescriptorClassSlabSerifs' value='1342177280'/>
<enum name='UIFontDescriptorClassSymbolic' value='3221225472'/>
<enum name='UIFontDescriptorClassTransitionalSerifs' value='536870912'/>
<enum name='UIFontDescriptorClassUnknown' value='0'/>
<enum name='UIFontDescriptorTraitBold' value='2'/>
<enum name='UIFontDescriptorTraitCondensed' value='64'/>
<enum name='UIFontDescriptorTraitExpanded' value='32'/>
<enum name='UIFontDescriptorTraitItalic' value='1'/>
<enum name='UIFontDescriptorTraitLooseLeading' value='65536'/>
<enum name='UIFontDescriptorTraitMonoSpace' value='1024'/>
<enum name='UIFontDescriptorTraitTightLeading' value='32768'/>
<enum name='UIFontDescriptorTraitUIOptimized' value='4096'/>
<enum name='UIFontDescriptorTraitVertical' value='2048'/>
<enum name='UIImageOrientationDown' value='1'/>
<enum name='UIImageOrientationDownMirrored' value='5'/>
<enum name='UIImageOrientationLeft' value='2'/>
<enum name='UIImageOrientationLeftMirrored' value='6'/>
<enum name='UIImageOrientationRight' value='3'/>
<enum name='UIImageOrientationRightMirrored' value='7'/>
<enum name='UIImageOrientationUp' value='0'/>
<enum name='UIImageOrientationUpMirrored' value='4'/>
<enum name='UIImageRenderingModeAlwaysOriginal' value='1'/>
<enum name='UIImageRenderingModeAlwaysTemplate' value='2'/>
<enum name='UIImageRenderingModeAutomatic' value='0'/>
<enum name='UIImageResizingModeStretch' value='1'/>
<enum name='UIImageResizingModeTile' value='0'/>
<enum name='UIKIT_DEFINE_AS_PROPERTIES' value='1'/>
<enum name='UIKIT_REMOVE_ZERO_FROM_SWIFT' value='1'/>
<enum name='UIKIT_STRING_ENUMS' value='0'/>
<enum name='UIPreferredPresentationStyleAttachment' value='2'/>
<enum name='UIPreferredPresentationStyleInline' value='1'/>
<enum name='UIPreferredPresentationStyleUnspecified' value='0'/>
<enum name='UIRectCornerAllCorners' value='4294967295'/>
<enum name='UIRectCornerBottomLeft' value='4'/>
<enum name='UIRectCornerBottomRight' value='8'/>
<enum name='UIRectCornerTopLeft' value='1'/>
<enum name='UIRectCornerTopRight' value='2'/>
<enum name='UIRectEdgeAll' value='15'/>
<enum name='UIRectEdgeBottom' value='4'/>
<enum name='UIRectEdgeLeft' value='2'/>
<enum name='UIRectEdgeNone' value='0'/>
<enum name='UIRectEdgeRight' value='8'/>
<enum name='UIRectEdgeTop' value='1'/>
<function name='CGAffineTransformFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</function>
<function name='CGPointFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='CGRectFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</function>
<function name='CGSizeFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</function>
<function name='CGVectorFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='CGVector' type='{CGVector=ff}'/>
</function>
<function inline='true' name='NSDirectionalEdgeInsetsEqualToDirectionalEdgeInsets'>
<arg declared_type='NSDirectionalEdgeInsets' name='insets1' type='{NSDirectionalEdgeInsets=ffff}'/>
<arg declared_type='NSDirectionalEdgeInsets' name='insets2' type='{NSDirectionalEdgeInsets=ffff}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSDirectionalEdgeInsetsFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}'/>
</function>
<function inline='true' name='NSDirectionalEdgeInsetsMake'>
<arg declared_type='CGFloat' name='top' type='f'/>
<arg declared_type='CGFloat' name='leading' type='f'/>
<arg declared_type='CGFloat' name='bottom' type='f'/>
<arg declared_type='CGFloat' name='trailing' type='f'/>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}'/>
</function>
<function name='NSStringFromCGAffineTransform'>
<arg declared_type='CGAffineTransform' name='transform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromCGPoint'>
<arg declared_type='CGPoint' name='point' type='{CGPoint=ff}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromCGRect'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromCGSize'>
<arg declared_type='CGSize' name='size' type='{CGSize=ff}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromCGVector'>
<arg declared_type='CGVector' name='vector' type='{CGVector=ff}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromDirectionalEdgeInsets'>
<arg declared_type='NSDirectionalEdgeInsets' name='insets' type='{NSDirectionalEdgeInsets=ffff}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromUIEdgeInsets'>
<arg declared_type='UIEdgeInsets' name='insets' type='{UIEdgeInsets=ffff}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSStringFromUIOffset'>
<arg declared_type='UIOffset' name='offset' type='{UIOffset=ff}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</function>
<function name='NSTextAlignmentFromCTTextAlignment'>
<arg declared_type='CTTextAlignment' name='ctTextAlignment' type='C'/>
<retval declared_type='NSTextAlignment' type='i'/>
</function>
<function name='NSTextAlignmentToCTTextAlignment'>
<arg declared_type='NSTextAlignment' name='nsTextAlignment' type='i'/>
<retval declared_type='CTTextAlignment' type='C'/>
</function>
<function inline='true' name='UIEdgeInsetsEqualToEdgeInsets'>
<arg declared_type='UIEdgeInsets' name='insets1' type='{UIEdgeInsets=ffff}'/>
<arg declared_type='UIEdgeInsets' name='insets2' type='{UIEdgeInsets=ffff}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIEdgeInsetsFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}'/>
</function>
<function inline='true' name='UIEdgeInsetsInsetRect'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='UIEdgeInsets' name='insets' type='{UIEdgeInsets=ffff}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</function>
<function inline='true' name='UIEdgeInsetsMake'>
<arg declared_type='CGFloat' name='top' type='f'/>
<arg declared_type='CGFloat' name='left' type='f'/>
<arg declared_type='CGFloat' name='bottom' type='f'/>
<arg declared_type='CGFloat' name='right' type='f'/>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}'/>
</function>
<function name='UIGraphicsAddPDFContextDestinationAtPoint'>
<arg declared_type='NSString * _Nonnull' name='name' type='@'/>
<arg declared_type='CGPoint' name='point' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginImageContext'>
<arg declared_type='CGSize' name='size' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginImageContextWithOptions'>
<arg declared_type='CGSize' name='size' type='{CGSize=ff}'/>
<arg declared_type='BOOL' name='opaque' type='B'/>
<arg declared_type='CGFloat' name='scale' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginPDFContextToData'>
<arg declared_type='NSMutableData * _Nonnull' name='data' type='@'/>
<arg declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='NSDictionary * _Nullable' name='documentInfo' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginPDFContextToFile'>
<arg declared_type='NSString * _Nonnull' name='path' type='@'/>
<arg declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='NSDictionary * _Nullable' name='documentInfo' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIGraphicsBeginPDFPage'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsBeginPDFPageWithInfo'>
<arg declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='NSDictionary * _Nullable' name='pageInfo' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsEndImageContext'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsEndPDFContext'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsGetCurrentContext'>
<retval declared_type='CGContextRef _Nullable' type='^{CGContext=}'/>
</function>
<function name='UIGraphicsGetImageFromCurrentImageContext'>
<retval declared_type='UIImage * _Nullable' type='@'/>
</function>
<function name='UIGraphicsGetPDFContextBounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</function>
<function name='UIGraphicsPopContext'>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsPushContext'>
<arg declared_type='CGContextRef _Nonnull' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsSetPDFContextDestinationForRect'>
<arg declared_type='NSString * _Nonnull' name='name' type='@'/>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIGraphicsSetPDFContextURLForRect'>
<arg declared_type='NSURL * _Nonnull' name='url' type='@'/>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIImageJPEGRepresentation'>
<arg declared_type='UIImage * _Nonnull' name='image' type='@'/>
<arg declared_type='CGFloat' name='compressionQuality' type='f'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</function>
<function name='UIImagePNGRepresentation'>
<arg declared_type='UIImage * _Nonnull' name='image' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</function>
<function inline='true' name='UIOffsetEqualToOffset'>
<arg declared_type='UIOffset' name='offset1' type='{UIOffset=ff}'/>
<arg declared_type='UIOffset' name='offset2' type='{UIOffset=ff}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='UIOffsetFromString'>
<arg declared_type='NSString * _Nonnull' name='string' type='@'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}'/>
</function>
<function inline='true' name='UIOffsetMake'>
<arg declared_type='CGFloat' name='horizontal' type='f'/>
<arg declared_type='CGFloat' name='vertical' type='f'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}'/>
</function>
<function name='UIRectClip'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIRectFill'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIRectFillUsingBlendMode'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='CGBlendMode' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIRectFrame'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UIRectFrameUsingBlendMode'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='CGBlendMode' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<class name='NSAttributedString'>
<method selector='boundingRectWithSize:options:context:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='2' name='context' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='containsAttachmentsInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataFromRange:documentAttributes:error:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithRect:options:context:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='2' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fileWrapperFromRange:documentAttributes:error:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='initWithData:options:documentAttributes:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFileURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCGAffineTransformForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='decodeCGPointForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='decodeCGRectForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='decodeCGSizeForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='decodeCGVectorForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGVector' type='{CGVector=ff}'/>
</method>
<method selector='decodeDirectionalEdgeInsetsForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}'/>
</method>
<method selector='decodeUIEdgeInsetsForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}'/>
</method>
<method selector='decodeUIOffsetForKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='UIOffset' type='{UIOffset=ff}'/>
</method>
<method selector='encodeCGAffineTransform:forKey:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGPoint:forKey:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGRect:forKey:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGSize:forKey:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGVector:forKey:'>
<arg declared_type='CGVector' index='0' name='vector' type='{CGVector=ff}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeDirectionalEdgeInsets:forKey:'>
<arg declared_type='NSDirectionalEdgeInsets' index='0' name='insets' type='{NSDirectionalEdgeInsets=ffff}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeUIEdgeInsets:forKey:'>
<arg declared_type='UIEdgeInsets' index='0' name='insets' type='{UIEdgeInsets=ffff}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeUIOffset:forKey:'>
<arg declared_type='UIOffset' index='0' name='offset' type='{UIOffset=ff}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSItemProvider'>
<method selector='preferredPresentationStyle'>
<retval declared_type='UIPreferredPresentationStyle' type='i'/>
</method>
<method selector='setPreferredPresentationStyle:'>
<arg declared_type='UIPreferredPresentationStyle' index='0' name='preferredPresentationStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='fixAttributesInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readFromData:options:documentAttributes:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='opts' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromFileURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='opts' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='opts' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSMutableParagraphStyle'>
<method selector='addTabStop:'>
<arg declared_type='NSTextTab * _Nonnull' index='0' name='anObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='i'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='headIndent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='lineSpacing'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='removeTabStop:'>
<arg declared_type='NSTextTab * _Nonnull' index='0' name='anObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='baseWritingDirection' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTabInterval:'>
<arg declared_type='CGFloat' index='0' name='defaultTabInterval' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFirstLineHeadIndent:'>
<arg declared_type='CGFloat' index='0' name='firstLineHeadIndent' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeadIndent:'>
<arg declared_type='CGFloat' index='0' name='headIndent' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type='float' index='0' name='hyphenationFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineHeightMultiple:'>
<arg declared_type='CGFloat' index='0' name='lineHeightMultiple' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineSpacing:'>
<arg declared_type='CGFloat' index='0' name='lineSpacing' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumLineHeight:'>
<arg declared_type='CGFloat' index='0' name='maximumLineHeight' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumLineHeight:'>
<arg declared_type='CGFloat' index='0' name='minimumLineHeight' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphSpacing:'>
<arg declared_type='CGFloat' index='0' name='paragraphSpacing' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphSpacingBefore:'>
<arg declared_type='CGFloat' index='0' name='paragraphSpacingBefore' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphStyle:'>
<arg declared_type='NSParagraphStyle * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabStops:'>
<arg declared_type='NSArray * _Nullable' index='0' name='tabStops' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTailIndent:'>
<arg declared_type='CGFloat' index='0' name='tailIndent' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabStops'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='NSParagraphStyle'>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='i'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i'/>
</method>
<method class_method='true' selector='defaultParagraphStyle'>
<retval declared_type='NSParagraphStyle * _Nonnull' type='@'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='defaultWritingDirectionForLanguage:'>
<arg declared_type='NSString * _Nullable' index='0' name='languageName' type='@'/>
<retval declared_type='NSWritingDirection' type='i'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='headIndent'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='i'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='lineSpacing'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='tabStops'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='NSString'>
<method selector='boundingRectWithSize:options:attributes:context:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='attributes' type='@'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='3' name='context' type='@'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='drawAtPoint:withAttributes:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='attrs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:withAttributes:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='attrs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithRect:options:attributes:context:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='attributes' type='@'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='3' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeWithAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='attrs' type='@'/>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='NSStringDrawingContext'>
<method selector='actualScaleFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='actualTrackingAdjustment'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumScaleFactor'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='minimumTrackingAdjustment'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setMinimumScaleFactor:'>
<arg declared_type='CGFloat' index='0' name='minimumScaleFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumTrackingAdjustment:'>
<arg declared_type='CGFloat' index='0' name='minimumTrackingAdjustment' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalBounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
</class>
<class name='NSTextTab'>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='i'/>
</method>
<method class_method='true' selector='columnTerminatorsForLocale:'>
<arg declared_type='NSLocale * _Nullable' index='0' name='aLocale' type='@'/>
<retval declared_type='NSCharacterSet * _Nonnull' type='@'/>
</method>
<method selector='initWithTextAlignment:location:options:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='i'/>
<arg declared_type='CGFloat' index='1' name='loc' type='f'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='location'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='options'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
</class>
<class name='NSValue'>
<method selector='CGAffineTransformValue'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='CGPointValue'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='CGRectValue'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='CGSizeValue'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='CGVectorValue'>
<retval declared_type='CGVector' type='{CGVector=ff}'/>
</method>
<method selector='UIEdgeInsetsValue'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}'/>
</method>
<method selector='UIOffsetValue'>
<retval declared_type='UIOffset' type='{UIOffset=ff}'/>
</method>
<method selector='directionalEdgeInsetsValue'>
<retval declared_type='NSDirectionalEdgeInsets' type='{NSDirectionalEdgeInsets=ffff}'/>
</method>
<method class_method='true' selector='valueWithCGAffineTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithCGPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithCGRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithCGSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithCGVector:'>
<arg declared_type='CGVector' index='0' name='vector' type='{CGVector=ff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithDirectionalEdgeInsets:'>
<arg declared_type='NSDirectionalEdgeInsets' index='0' name='insets' type='{NSDirectionalEdgeInsets=ffff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithUIEdgeInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='insets' type='{UIEdgeInsets=ffff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueWithUIOffset:'>
<arg declared_type='UIOffset' index='0' name='insets' type='{UIOffset=ff}'/>
<retval declared_type='NSValue * _Nonnull' type='@'/>
</method>
</class>
<class name='UIBezierPath'>
<method selector='CGPath'>
<retval declared_type='CGPathRef _Nonnull' type='^{CGPath=}'/>
</method>
<method selector='addArcWithCenter:radius:startAngle:endAngle:clockwise:'>
<arg declared_type='CGPoint' index='0' name='center' type='{CGPoint=ff}'/>
<arg declared_type='CGFloat' index='1' name='radius' type='f'/>
<arg declared_type='CGFloat' index='2' name='startAngle' type='f'/>
<arg declared_type='CGFloat' index='3' name='endAngle' type='f'/>
<arg declared_type='BOOL' index='4' name='clockwise' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addClip'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCurveToPoint:controlPoint1:controlPoint2:'>
<arg declared_type='CGPoint' index='0' name='endPoint' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='1' name='controlPoint1' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='2' name='controlPoint2' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLineToPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addQuadCurveToPoint:controlPoint:'>
<arg declared_type='CGPoint' index='0' name='endPoint' type='{CGPoint=ff}'/>
<arg declared_type='CGPoint' index='1' name='controlPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPath:'>
<arg declared_type='UIBezierPath * _Nonnull' index='0' name='bezierPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bezierPath'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='bezierPathByReversingPath'>
<retval declared_type='UIBezierPath * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:'>
<arg declared_type='CGPoint' index='0' name='center' type='{CGPoint=ff}'/>
<arg declared_type='CGFloat' index='1' name='radius' type='f'/>
<arg declared_type='CGFloat' index='2' name='startAngle' type='f'/>
<arg declared_type='CGFloat' index='3' name='endAngle' type='f'/>
<arg declared_type='BOOL' index='4' name='clockwise' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithCGPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='CGPath' type='^{CGPath=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithOvalInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='UIRectCorner' index='1' name='corners' type='I'/>
<arg declared_type='CGSize' index='2' name='cornerRadii' type='{CGSize=ff}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:cornerRadius:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='CGFloat' index='1' name='cornerRadius' type='f'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='closePath'>
<retval declared_type='void' type='v'/>
</method>
<method selector='containsPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='fill'>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillWithBlendMode:alpha:'>
<arg declared_type='CGBlendMode' index='0' name='blendMode' type='i'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flatness'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='getLineDash:count:phase:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='pattern' type='^f'/>
<arg declared_type='NSInteger * _Nullable' index='1' name='count' type='^i'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='phase' type='^f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineCapStyle'>
<retval declared_type='CGLineCap' type='i'/>
</method>
<method selector='lineJoinStyle'>
<retval declared_type='CGLineJoin' type='i'/>
</method>
<method selector='lineWidth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='miterLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='moveToPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllPoints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCGPath:'>
<arg declared_type='CGPathRef _Nonnull' index='0' name='CGPath' type='^{CGPath=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlatness:'>
<arg declared_type='CGFloat' index='0' name='flatness' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCapStyle:'>
<arg declared_type='CGLineCap' index='0' name='lineCapStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineDash:count:phase:'>
<arg const='true' declared_type='CGFloat * _Nullable' index='0' name='pattern' type='^f'/>
<arg declared_type='NSInteger' index='1' name='count' type='i'/>
<arg declared_type='CGFloat' index='2' name='phase' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoinStyle:'>
<arg declared_type='CGLineJoin' index='0' name='lineJoinStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='CGFloat' index='0' name='lineWidth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiterLimit:'>
<arg declared_type='CGFloat' index='0' name='miterLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesEvenOddFillRule:'>
<arg declared_type='BOOL' index='0' name='usesEvenOddFillRule' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stroke'>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeWithBlendMode:alpha:'>
<arg declared_type='CGBlendMode' index='0' name='blendMode' type='i'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesEvenOddFillRule'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='UIColor'>
<method selector='CGColor'>
<retval declared_type='CGColorRef _Nonnull' type='^{CGColor=}'/>
</method>
<method class_method='true' selector='blackColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='blueColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='brownColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='clearColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='colorNamed:inBundle:compatibleWithTraitCollection:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<arg declared_type='UITraitCollection * _Nullable' index='2' name='traitCollection' type='@'/>
<retval declared_type='UIColor * _Nullable' type='@'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg declared_type='CGColorRef _Nonnull' index='0' name='cgColor' type='^{CGColor=}'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithDisplayP3Red:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='displayP3Red' type='f'/>
<arg declared_type='CGFloat' index='1' name='green' type='f'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f'/>
<arg declared_type='CGFloat' index='2' name='brightness' type='f'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithPatternImage:'>
<arg declared_type='UIImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f'/>
<arg declared_type='CGFloat' index='1' name='green' type='f'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithWhite:alpha:'>
<arg declared_type='CGFloat' index='0' name='white' type='f'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='darkGrayColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='getHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='hue' type='^f'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='saturation' type='^f'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='brightness' type='^f'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='alpha' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getRed:green:blue:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='red' type='^f'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='green' type='^f'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='blue' type='^f'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='alpha' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getWhite:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='white' type='^f'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='alpha' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='grayColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='greenColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithCGColor:'>
<arg declared_type='CGColorRef _Nonnull' index='0' name='cgColor' type='^{CGColor=}'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithDisplayP3Red:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='displayP3Red' type='f'/>
<arg declared_type='CGFloat' index='1' name='green' type='f'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f'/>
<arg declared_type='CGFloat' index='2' name='brightness' type='f'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithPatternImage:'>
<arg declared_type='UIImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f'/>
<arg declared_type='CGFloat' index='1' name='green' type='f'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='initWithWhite:alpha:'>
<arg declared_type='CGFloat' index='0' name='white' type='f'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f'/>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='lightGrayColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='orangeColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='purpleColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='redColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStroke'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval declared_type='UIColor * _Nonnull' type='@'/>
</method>
</class>
<class name='UIFont'>
<method selector='ascender'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='boldSystemFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='capHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='descender'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='familyName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='familyNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptor'>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontNamesForFamilyName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='familyName' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontWithDescriptor:size:'>
<arg declared_type='UIFontDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='CGFloat' index='1' name='pointSize' type='f'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontWithName:size:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGFloat' index='1' name='fontSize' type='f'/>
<retval declared_type='UIFont * _Nullable' type='@'/>
</method>
<method selector='fontWithSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='italicSystemFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='leading'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='lineHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='monospacedDigitSystemFontOfSize:weight:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f'/>
<arg declared_type='UIFontWeight' index='1' name='weight' type='f'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='pointSize'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='preferredFontForTextStyle:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='style' type='@'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemFontOfSize:weight:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f'/>
<arg declared_type='UIFontWeight' index='1' name='weight' type='f'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='xHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='UIFontDescriptor'>
<method selector='fontAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorByAddingAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithDesign:'>
<arg declared_type='UIFontDescriptorSystemDesign _Nonnull' index='0' name='design' type='@'/>
<retval declared_type='UIFontDescriptor * _Nullable' type='@'/>
</method>
<method selector='fontDescriptorWithFace:'>
<arg declared_type='NSString * _Nonnull' index='0' name='newFace' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithFamily:'>
<arg declared_type='NSString * _Nonnull' index='0' name='newFamily' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithFontAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithMatrix:'>
<arg declared_type='CGAffineTransform' index='0' name='matrix' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:matrix:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGAffineTransform' index='1' name='matrix' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:size:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGFloat' index='1' name='size' type='f'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithSize:'>
<arg declared_type='CGFloat' index='0' name='newPointSize' type='f'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithSymbolicTraits:'>
<arg declared_type='UIFontDescriptorSymbolicTraits' index='0' name='symbolicTraits' type='I'/>
<retval declared_type='UIFontDescriptor * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFontAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='matchingFontDescriptorsWithMandatoryKeys:'>
<arg declared_type='NSSet * _Nullable' index='0' name='mandatoryKeys' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='matrix'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='objectForKey:'>
<arg declared_type='UIFontDescriptorAttributeName _Nonnull' index='0' name='anAttribute' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='pointSize'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='postscriptName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='preferredFontDescriptorWithTextStyle:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='style' type='@'/>
<retval declared_type='UIFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='symbolicTraits'>
<retval declared_type='UIFontDescriptorSymbolicTraits' type='I'/>
</method>
</class>
<class name='UIFontMetrics'>
<method class_method='true' selector='defaultMetrics'>
<retval declared_type='UIFontMetrics * _Nonnull' type='@'/>
</method>
<method selector='initForTextStyle:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='textStyle' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='metricsForTextStyle:'>
<arg declared_type='UIFontTextStyle _Nonnull' index='0' name='textStyle' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='scaledFontForFont:'>
<arg declared_type='UIFont * _Nonnull' index='0' name='font' type='@'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='scaledFontForFont:maximumPointSize:'>
<arg declared_type='UIFont * _Nonnull' index='0' name='font' type='@'/>
<arg declared_type='CGFloat' index='1' name='maximumPointSize' type='f'/>
<retval declared_type='UIFont * _Nonnull' type='@'/>
</method>
<method selector='scaledValueForValue:'>
<arg declared_type='CGFloat' index='0' name='value' type='f'/>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='UIImage'>
<method selector='CGImage'>
<retval declared_type='CGImageRef _Nullable' type='^{CGImage=}'/>
</method>
<method selector='alignmentRectInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}'/>
</method>
<method class_method='true' selector='animatedImageNamed:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animatedImageWithImages:duration:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='images' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animatedResizableImageNamed:capInsets:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='UIEdgeInsets' index='1' name='capInsets' type='{UIEdgeInsets=ffff}'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='animatedResizableImageNamed:capInsets:resizingMode:duration:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='UIEdgeInsets' index='1' name='capInsets' type='{UIEdgeInsets=ffff}'/>
<arg declared_type='UIImageResizingMode' index='2' name='resizingMode' type='i'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='capInsets'>
<retval declared_type='UIEdgeInsets' type='{UIEdgeInsets=ffff}'/>
</method>
<method selector='drawAsPatternInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawAtPoint:blendMode:alpha:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<arg declared_type='CGFloat' index='2' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:blendMode:alpha:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='CGBlendMode' index='1' name='blendMode' type='i'/>
<arg declared_type='CGFloat' index='2' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='flipsForRightToLeftLayoutDirection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageFlippedForRightToLeftLayoutDirection'>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageNamed:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imageOrientation'>
<retval declared_type='UIImageOrientation' type='i'/>
</method>
<method selector='imageWithAlignmentRectInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='alignmentInsets' type='{UIEdgeInsets=ffff}'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:scale:orientation:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f'/>
<arg declared_type='UIImageOrientation' index='2' name='orientation' type='i'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithContentsOfFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageWithData:scale:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f'/>
<retval declared_type='UIImage * _Nullable' type='@'/>
</method>
<method selector='imageWithHorizontallyFlippedOrientation'>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='imageWithRenderingMode:'>
<arg declared_type='UIImageRenderingMode' index='0' name='renderingMode' type='i'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='images'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='initWithCGImage:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCGImage:scale:orientation:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f'/>
<arg declared_type='UIImageOrientation' index='2' name='orientation' type='i'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:scale:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='leftCapWidth'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='renderingMode'>
<retval declared_type='UIImageRenderingMode' type='i'/>
</method>
<method selector='resizableImageWithCapInsets:'>
<arg declared_type='UIEdgeInsets' index='0' name='capInsets' type='{UIEdgeInsets=ffff}'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='resizableImageWithCapInsets:resizingMode:'>
<arg declared_type='UIEdgeInsets' index='0' name='capInsets' type='{UIEdgeInsets=ffff}'/>
<arg declared_type='UIImageResizingMode' index='1' name='resizingMode' type='i'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='resizingMode'>
<retval declared_type='UIImageResizingMode' type='i'/>
</method>
<method selector='scale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='stretchableImageWithLeftCapWidth:topCapHeight:'>
<arg declared_type='NSInteger' index='0' name='leftCapWidth' type='i'/>
<arg declared_type='NSInteger' index='1' name='topCapHeight' type='i'/>
<retval declared_type='UIImage * _Nonnull' type='@'/>
</method>
<method selector='topCapHeight'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='UILocalNotification'>
<method selector='alertAction'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='alertBody'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='alertLaunchImage'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='alertTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='applicationIconBadgeNumber'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='category'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fireDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='hasAction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='region'>
<retval declared_type='CLRegion * _Nullable' type='@'/>
</method>
<method selector='regionTriggersOnce'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='repeatCalendar'>
<retval declared_type='NSCalendar * _Nullable' type='@'/>
</method>
<method selector='repeatInterval'>
<retval declared_type='NSCalendarUnit' type='I'/>
</method>
<method selector='setAlertAction:'>
<arg declared_type='NSString * _Nullable' index='0' name='alertAction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlertBody:'>
<arg declared_type='NSString * _Nullable' index='0' name='alertBody' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlertLaunchImage:'>
<arg declared_type='NSString * _Nullable' index='0' name='alertLaunchImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlertTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='alertTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setApplicationIconBadgeNumber:'>
<arg declared_type='NSInteger' index='0' name='applicationIconBadgeNumber' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCategory:'>
<arg declared_type='NSString * _Nullable' index='0' name='category' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFireDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='fireDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasAction:'>
<arg declared_type='BOOL' index='0' name='hasAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRegion:'>
<arg declared_type='CLRegion * _Nullable' index='0' name='region' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRegionTriggersOnce:'>
<arg declared_type='BOOL' index='0' name='regionTriggersOnce' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepeatCalendar:'>
<arg declared_type='NSCalendar * _Nullable' index='0' name='repeatCalendar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepeatInterval:'>
<arg declared_type='NSCalendarUnit' index='0' name='repeatInterval' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSoundName:'>
<arg declared_type='NSString * _Nullable' index='0' name='soundName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone * _Nullable' index='0' name='timeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='soundName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone * _Nullable' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
</class>
</signatures>
