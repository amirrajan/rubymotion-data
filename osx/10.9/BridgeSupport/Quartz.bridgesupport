<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Cocoa.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework'/>
<depends_on path='/System/Library/Frameworks/QuickLook.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework'/>
<depends_on path='/System/Library/Frameworks/ImageCaptureCore.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/QTKit.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework'/>
<depends_on path='/System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Cocoa.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant const='true' declared_type='NSString*' name='IKFilterBrowserDefaultInputImage' type='@'/>
<constant const='true' declared_type='NSString*' name='IKFilterBrowserExcludeCategories' type='@'/>
<constant const='true' declared_type='NSString*' name='IKFilterBrowserExcludeFilters' type='@'/>
<constant const='true' declared_type='NSString*' name='IKFilterBrowserFilterDoubleClickNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='IKFilterBrowserFilterSelectedNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='IKFilterBrowserShowCategories' type='@'/>
<constant const='true' declared_type='NSString*' name='IKFilterBrowserShowPreview' type='@'/>
<constant const='true' declared_type='NSString*' name='IKFilterBrowserWillPreviewFilterNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserBackgroundColorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCGImageRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCGImageSourceRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCellBackgroundLayer' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCellForegroundLayer' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCellPlaceHolderLayer' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCellSelectionLayer' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCellsHighlightedTitleAttributesKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCellsOutlineColorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCellsSubtitleAttributesKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserCellsTitleAttributesKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserGroupBackgroundColorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserGroupFooterLayer' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserGroupHeaderLayer' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserGroupRangeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserGroupStyleKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserGroupTitleKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserIconRefPathRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserIconRefRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserNSBitmapImageRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserNSDataRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserNSImageRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserNSURLRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserPDFPageRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserPathRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserQCCompositionPathRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserQCCompositionRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserQTMoviePathRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserQTMovieRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserQuickLookPathRepresentationType' type='@'/>
<constant const='true' declared_type='NSString*' name='IKImageBrowserSelectionColorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKOverlayTypeBackground' type='@'/>
<constant const='true' declared_type='NSString*' name='IKOverlayTypeImage' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerAllowsEditingKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerAllowsFileChoosingKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerAllowsVideoCaptureKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerCropAreaSizeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerImageTransformsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerInformationalTextKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerOutputImageMaxSizeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerRemainOpenAfterValidateKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerShowAddressBookPicture' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerShowAddressBookPictureKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerShowEffectsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerShowEmptyPicture' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerShowEmptyPictureKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerShowRecentPictureKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKPictureTakerUpdateRecentPictureKey' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowAudioFile' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowModeImages' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowModeOther' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowModePDF' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowPDFDisplayBox' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowPDFDisplayMode' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowPDFDisplaysAsBook' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowScreen' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowStartIndex' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowStartPaused' type='@'/>
<constant const='true' declared_type='NSString*' name='IKSlideshowWrapAround' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeAnnotate' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeCrop' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeMove' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeNone' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeRotate' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeSelect' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeSelectEllipse' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeSelectLasso' type='@'/>
<constant const='true' declared_type='NSString*' name='IKToolModeSelectRect' type='@'/>
<constant declared_type='NSString*' name='IKUIFlavorAllowFallback' type='@'/>
<constant declared_type='NSString*' name='IKUISizeFlavor' type='@'/>
<constant declared_type='NSString*' name='IKUISizeMini' type='@'/>
<constant declared_type='NSString*' name='IKUISizeRegular' type='@'/>
<constant declared_type='NSString*' name='IKUISizeSmall' type='@'/>
<constant declared_type='NSString*' name='IKUImaxSize' type='@'/>
<constant const='true' declared_type='NSString*' name='IK_ApertureBundleIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='IK_MailBundleIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='IK_iPhotoBundleIdentifier' type='@'/>
<enum name='IKCameraDeviceViewDisplayModeIcon' value='1'/>
<enum name='IKCameraDeviceViewDisplayModeTable' value='0'/>
<enum name='IKCameraDeviceViewTransferModeFileBased' value='0'/>
<enum name='IKCameraDeviceViewTransferModeMemoryBased' value='1'/>
<enum name='IKCellsStyleNone' value='0'/>
<enum name='IKCellsStyleOutlined' value='2'/>
<enum name='IKCellsStyleShadowed' value='1'/>
<enum name='IKCellsStyleSubtitled' value='8'/>
<enum name='IKCellsStyleTitled' value='4'/>
<enum name='IKDeviceBrowserViewDisplayModeIcon' value='2'/>
<enum name='IKDeviceBrowserViewDisplayModeOutline' value='1'/>
<enum name='IKDeviceBrowserViewDisplayModeTable' value='0'/>
<enum name='IKGroupBezelStyle' value='0'/>
<enum name='IKGroupDisclosureStyle' value='1'/>
<enum name='IKImageBrowserDropBefore' value='1'/>
<enum name='IKImageBrowserDropOn' value='0'/>
<enum name='IKImageStateInvalid' value='1'/>
<enum name='IKImageStateNoImage' value='0'/>
<enum name='IKImageStateReady' value='2'/>
<enum name='IKScannerDeviceViewDisplayModeAdvanced' value='1'/>
<enum name='IKScannerDeviceViewDisplayModeSimple' value='0'/>
<enum name='IKScannerDeviceViewTransferModeFileBased' value='0'/>
<enum name='IKScannerDeviceViewTransferModeMemoryBased' value='1'/>
<class name='CIFilter'>
<method selector='viewForUIConfiguration:excludedKeys:'>
<arg declared_type='NSDictionary*' index='0' name='inUIConfiguration' type='@'/>
<arg declared_type='NSArray*' index='1' name='inKeys' type='@'/>
<retval declared_type='IKFilterUIView*' type='@'/>
</method>
</class>
<class name='IKCameraDeviceView'>
<method selector='cameraDevice'>
<retval declared_type='ICCameraDevice*' type='@'/>
</method>
<method selector='canDeleteSelectedItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canDownloadSelectedItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canRotateSelectedItemsLeft'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canRotateSelectedItemsRight'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deleteSelectedItems:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displaysDownloadsDirectoryControl'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displaysPostProcessApplicationControl'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='downloadAllControlLabel'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadAllItems:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadSelectedControlLabel'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadSelectedItems:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadsDirectory'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='hasDisplayModeIcon'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasDisplayModeTable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='iconSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='mode'>
<retval declared_type='IKCameraDeviceViewDisplayMode' type='i' type64='q'/>
</method>
<method selector='postProcessApplication'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='rotateLeft:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateRight:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectIndexes:byExtendingSelection:'>
<arg declared_type='NSIndexSet*' index='0' name='indexes' type='@'/>
<arg declared_type='BOOL' index='1' name='extend' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedIndexes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='setCameraDevice:'>
<arg declared_type='ICCameraDevice*' index='0' name='cameraDevice' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysDownloadsDirectoryControl:'>
<arg declared_type='BOOL' index='0' name='displaysDownloadsDirectoryControl' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysPostProcessApplicationControl:'>
<arg declared_type='BOOL' index='0' name='displaysPostProcessApplicationControl' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadAllControlLabel:'>
<arg declared_type='NSString*' index='0' name='downloadAllControlLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadSelectedControlLabel:'>
<arg declared_type='NSString*' index='0' name='downloadSelectedControlLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadsDirectory:'>
<arg declared_type='NSURL*' index='0' name='downloadsDirectory' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasDisplayModeIcon:'>
<arg declared_type='BOOL' index='0' name='hasDisplayModeIcon' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasDisplayModeTable:'>
<arg declared_type='BOOL' index='0' name='hasDisplayModeTable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIconSize:'>
<arg declared_type='NSUInteger' index='0' name='iconSize' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='IKCameraDeviceViewDisplayMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostProcessApplication:'>
<arg declared_type='NSURL*' index='0' name='postProcessApplication' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransferMode:'>
<arg declared_type='IKCameraDeviceViewTransferMode' index='0' name='transferMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transferMode'>
<retval declared_type='IKCameraDeviceViewTransferMode' type='i' type64='q'/>
</method>
</class>
<class name='IKDeviceBrowserView'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='displaysLocalCameras'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displaysLocalScanners'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displaysNetworkCameras'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displaysNetworkScanners'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mode'>
<retval declared_type='IKDeviceBrowserViewDisplayMode' type='i' type64='q'/>
</method>
<method selector='selectedDevice'>
<retval declared_type='ICDevice*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysLocalCameras:'>
<arg declared_type='BOOL' index='0' name='displaysLocalCameras' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysLocalScanners:'>
<arg declared_type='BOOL' index='0' name='displaysLocalScanners' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysNetworkCameras:'>
<arg declared_type='BOOL' index='0' name='displaysNetworkCameras' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysNetworkScanners:'>
<arg declared_type='BOOL' index='0' name='displaysNetworkScanners' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='IKDeviceBrowserViewDisplayMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='IKFilterBrowserPanel'>
<method selector='beginSheetWithOptions:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSDictionary*' index='0' name='inOptions' type='@'/>
<arg declared_type='NSWindow*' index='1' name='docWindow' type='@'/>
<arg declared_type='id' index='2' name='modalDelegate' type='@'/>
<arg declared_type='SEL' index='3' name='didEndSelector' type=':'/>
<arg declared_type='void*' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithOptions:modelessDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSDictionary*' index='0' name='inOptions' type='@'/>
<arg declared_type='id' index='1' name='modelessDelegate' type='@'/>
<arg declared_type='SEL' index='2' name='didEndSelector' type=':'/>
<arg declared_type='void*' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='filterBrowserPanelWithStyleMask:'>
<arg declared_type='unsigned int' index='0' name='styleMask' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='filterBrowserViewWithOptions:'>
<arg declared_type='NSDictionary*' index='0' name='inOptions' type='@'/>
<retval declared_type='IKFilterBrowserView*' type='@'/>
</method>
<method selector='filterName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='finish:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runModalWithOptions:'>
<arg declared_type='NSDictionary*' index='0' name='inOptions' type='@'/>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='IKFilterBrowserView'>
<method selector='filterName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setPreviewState:'>
<arg declared_type='BOOL' index='0' name='inState' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='IKFilterUIView'>
<method selector='filter'>
<retval declared_type='CIFilter*' type='@'/>
</method>
<method selector='initWithFrame:filter:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CIFilter*' index='1' name='inFilter' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectController'>
<retval declared_type='NSObjectController*' type='@'/>
</method>
<method class_method='true' selector='viewWithFrame:filter:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CIFilter*' index='1' name='inFilter' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='IKImageBrowserCell'>
<method selector='cellState'>
<retval declared_type='IKImageBrowserCellState' type='i'/>
</method>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageAlignment'>
<retval declared_type='NSImageAlignment' type='I' type64='Q'/>
</method>
<method selector='imageBrowserView'>
<retval declared_type='IKImageBrowserView*' type='@'/>
</method>
<method selector='imageContainerFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indexOfRepresentedItem'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layerForType:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='representedItem'>
<retval declared_type='id' type='@'/>
</method>
<method selector='selectionFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='subtitleFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='titleFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='IKImageBrowserView'>
<method selector='allowsDroppingOnItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsReordering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundLayer'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='canControlQuickLookPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cellForItemAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='IKImageBrowserCell*' type='@'/>
</method>
<method selector='cellSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='cellsStyleMask'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='collapseGroupAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='columnIndexesInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='constrainsToOriginalSize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentResizingMask'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='draggingDestinationDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dropOperation'>
<retval declared_type='IKImageBrowserDropOperation' type='i'/>
</method>
<method selector='expandGroupAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='foregroundLayer'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='indexAtLocationOfDroppedItem'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexOfItemAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='isGroupExpandedAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemFrameAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='newCellForRepresentedItem:'>
<arg declared_type='id' index='0' name='anItem' type='@'/>
<retval declared_type='IKImageBrowserCell*' type='@'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='rectOfColumn:'>
<arg declared_type='NSUInteger' index='0' name='columnIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectOfRow:'>
<arg declared_type='NSUInteger' index='0' name='rowIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowIndexesInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='scrollIndexToVisible:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectionIndexes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='setAllowsDroppingOnItems:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsReordering:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimates:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundLayer:'>
<arg declared_type='CALayer*' index='0' name='aLayer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanControlQuickLookPanel:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellsStyleMask:'>
<arg declared_type='NSUInteger' index='0' name='mask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstrainsToOriginalSize:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentResizingMask:'>
<arg declared_type='NSUInteger' index='0' name='mask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' name='source' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='aDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingDestinationDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDropIndex:dropOperation:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<arg declared_type='IKImageBrowserDropOperation' index='1' name='operation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundLayer:'>
<arg declared_type='CALayer*' index='0' name='aLayer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type='NSSize' index='0' name='aSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionIndexes:byExtendingSelection:'>
<arg declared_type='NSIndexSet*' index='0' name='indexes' type='@'/>
<arg declared_type='BOOL' index='1' name='extendSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoomValue:'>
<arg declared_type='float' index='0' name='aValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visibleItemIndexes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='zoomValue'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='IKImageEditPanel'>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='filterArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageEditPanel'>
<retval declared_type='IKImageEditPanel*' type='@'/>
</method>
</class>
<class name='IKImageView'>
<method selector='autohidesScrollers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autoresizes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='convertImagePointToViewPoint:'>
<arg declared_type='NSPoint' index='0' name='imagePoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertImageRectToViewRect:'>
<arg declared_type='NSRect' index='0' name='imageRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertViewPointToImagePoint:'>
<arg declared_type='NSPoint' index='0' name='viewPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertViewRectToImageRect:'>
<arg declared_type='NSRect' index='0' name='viewRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='crop:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentToolMode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='doubleClickOpensImageEditPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='editable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flipImageHorizontal:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flipImageVertical:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasHorizontalScroller'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasVerticalScroller'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method selector='imageCorrection'>
<retval declared_type='CIFilter*' type='@'/>
</method>
<method selector='imageProperties'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='imageSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='overlayForType:'>
<arg declared_type='NSString*' index='0' name='layerType' type='@'/>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='rotateImageLeft:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateImageRight:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotationAngle'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollToPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutohidesScrollers:'>
<arg declared_type='BOOL' index='0' name='autohidesScrollers' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoresizes:'>
<arg declared_type='BOOL' index='0' name='autoresizes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentToolMode:'>
<arg declared_type='NSString*' index='0' name='currentToolMode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleClickOpensImageEditPanel:'>
<arg declared_type='BOOL' index='0' name='doubleClickOpensImageEditPanel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg declared_type='BOOL' index='0' name='hasHorizontalScroller' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg declared_type='BOOL' index='0' name='hasVerticalScroller' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:imageProperties:'>
<arg declared_type='CGImageRef' index='0' name='image' type='^{CGImage=}'/>
<arg declared_type='NSDictionary*' index='1' name='metaData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageCorrection:'>
<arg declared_type='CIFilter*' index='0' name='imageCorrection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageZoomFactor:centerPoint:'>
<arg declared_type='CGFloat' index='0' name='zoomFactor' type='f' type64='d'/>
<arg declared_type='NSPoint' index='1' name='centerPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverlay:forType:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<arg declared_type='NSString*' index='1' name='layerType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotationAngle:'>
<arg declared_type='CGFloat' index='0' name='rotationAngle' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotationAngle:centerPoint:'>
<arg declared_type='CGFloat' index='0' name='rotationAngle' type='f' type64='d'/>
<arg declared_type='NSPoint' index='1' name='centerPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSupportsDragAndDrop:'>
<arg declared_type='BOOL' index='0' name='supportsDragAndDrop' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoomFactor:'>
<arg declared_type='CGFloat' index='0' name='zoomFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportsDragAndDrop'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='zoomFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='zoomImageToActualSize:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomImageToFit:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomImageToRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomIn:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomOut:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='IKPictureTaker'>
<method selector='beginPictureTakerSheetForWindow:withDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSWindow*' index='0' name='aWindow' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<arg declared_type='SEL' index='2' name='didEndSelector' type=':'/>
<arg declared_type='void*' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginPictureTakerWithDelegate:didEndSelector:contextInfo:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<arg declared_type='SEL' index='1' name='didEndSelector' type=':'/>
<arg declared_type='void*' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputImage'>
<retval declared_type='NSImage*' type='@'/>
</method>
<method selector='mirroring'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputImage'>
<retval declared_type='NSImage*' type='@'/>
</method>
<method class_method='true' selector='pictureTaker'>
<retval declared_type='IKPictureTaker*' type='@'/>
</method>
<method selector='popUpRecentsMenuForView:withDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSView*' index='0' name='aView' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<arg declared_type='SEL' index='2' name='didEndSelector' type=':'/>
<arg declared_type='void*' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runModal'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setInputImage:'>
<arg declared_type='NSImage*' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMirroring:'>
<arg declared_type='BOOL' index='0' name='b' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='IKSaveOptions'>
<method selector='addSaveOptionsAccessoryViewToSavePanel:'>
<arg declared_type='NSSavePanel*' index='0' name='savePanel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSaveOptionsToView:'>
<arg declared_type='NSView*' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageProperties'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='imageUTType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithImageProperties:imageUTType:'>
<arg declared_type='NSDictionary*' index='0' name='imageProperties' type='@'/>
<arg declared_type='NSString*' index='1' name='imageUTType' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userSelection'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='IKScannerDeviceView'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='displaysDownloadsDirectoryControl'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displaysPostProcessApplicationControl'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='documentName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadsDirectory'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='hasDisplayModeAdvanced'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasDisplayModeSimple'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mode'>
<retval declared_type='IKScannerDeviceViewDisplayMode' type='i' type64='q'/>
</method>
<method selector='overviewControlLabel'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='postProcessApplication'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='scanControlLabel'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='scannerDevice'>
<retval declared_type='ICScannerDevice*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysDownloadsDirectoryControl:'>
<arg declared_type='BOOL' index='0' name='displaysDownloadsDirectoryControl' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysPostProcessApplicationControl:'>
<arg declared_type='BOOL' index='0' name='displaysPostProcessApplicationControl' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentName:'>
<arg declared_type='NSString*' index='0' name='documentName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadsDirectory:'>
<arg declared_type='NSURL*' index='0' name='downloadsDirectory' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasDisplayModeAdvanced:'>
<arg declared_type='BOOL' index='0' name='hasDisplayModeAdvanced' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasDisplayModeSimple:'>
<arg declared_type='BOOL' index='0' name='hasDisplayModeSimple' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='IKScannerDeviceViewDisplayMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverviewControlLabel:'>
<arg declared_type='NSString*' index='0' name='overviewControlLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostProcessApplication:'>
<arg declared_type='NSURL*' index='0' name='postProcessApplication' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScanControlLabel:'>
<arg declared_type='NSString*' index='0' name='scanControlLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScannerDevice:'>
<arg declared_type='ICScannerDevice*' index='0' name='scannerDevice' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransferMode:'>
<arg declared_type='IKScannerDeviceViewTransferMode' index='0' name='transferMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transferMode'>
<retval declared_type='IKScannerDeviceViewTransferMode' type='i' type64='q'/>
</method>
</class>
<class name='IKSlideshow'>
<method selector='autoPlayDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='canExportToApplication:'>
<arg declared_type='NSString*' index='0' name='applicationBundleIdentifier' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='exportSlideshowItem:toApplication:'>
<arg declared_type='id' index='0' name='item' type='@'/>
<arg declared_type='NSString*' index='1' name='applicationBundleIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexOfCurrentSlideshowItem'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadSlideshowItemAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runSlideshowWithDataSource:inMode:options:'>
<arg declared_type='id' index='0' name='dataSource' type='@'/>
<arg declared_type='NSString*' index='1' name='slideshowMode' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='slideshowOptions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoPlayDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='autoPlayDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedSlideshow'>
<retval declared_type='IKSlideshow*' type='@'/>
</method>
<method selector='stopSlideshow:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='cameraDeviceView:didDownloadFile:location:fileData:error:'>
<arg declared_type='IKCameraDeviceView*' index='0' name='cameraDeviceView' type='@'/>
<arg declared_type='ICCameraFile*' index='1' name='file' type='@'/>
<arg declared_type='NSURL*' index='2' name='url' type='@'/>
<arg declared_type='NSData*' index='3' name='data' type='@'/>
<arg declared_type='NSError*' index='4' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cameraDeviceView:didEncounterError:'>
<arg declared_type='IKCameraDeviceView*' index='0' name='cameraDeviceView' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cameraDeviceViewSelectionDidChange:'>
<arg declared_type='IKCameraDeviceView*' index='0' name='cameraDeviceView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canExportSlideshowItemAtIndex:toApplication:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSString*' index='1' name='applicationBundleIdentifier' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deviceBrowserView:didEncounterError:'>
<arg declared_type='IKDeviceBrowserView*' index='0' name='deviceBrowserView' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deviceBrowserView:selectionDidChange:'>
<arg declared_type='IKDeviceBrowserView*' index='0' name='deviceBrowserView' type='@'/>
<arg declared_type='ICDevice*' index='1' name='device' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasAdjustMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasDetailsMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasEffectsMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method selector='imageBrowser:backgroundWasRightClickedWithEvent:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSEvent*' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageBrowser:cellWasDoubleClickedAtIndex:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageBrowser:cellWasRightClickedAtIndex:withEvent:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<arg declared_type='NSEvent*' index='2' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageBrowser:groupAtIndex:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='imageBrowser:itemAtIndex:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageBrowser:moveItemsAtIndexes:toIndex:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSIndexSet*' index='1' name='indexes' type='@'/>
<arg declared_type='NSUInteger' index='2' name='destinationIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageBrowser:removeItemsAtIndexes:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSIndexSet*' index='1' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageBrowser:writeItemsAtIndexes:toPasteboard:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSIndexSet*' index='1' name='itemIndexes' type='@'/>
<arg declared_type='NSPasteboard*' index='2' name='pasteboard' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='imageBrowserSelectionDidChange:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageProperties'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='imageRepresentation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageRepresentationType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageSubtitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageUID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageVersion'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='isSelectable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nameOfSlideshowItemAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfGroupsInImageBrowser:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfItemsInImageBrowser:'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfSlideshowItems'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='provideViewForUIConfiguration:excludedKeys:'>
<arg declared_type='NSDictionary*' index='0' name='inUIConfiguration' type='@'/>
<arg declared_type='NSArray*' index='1' name='inKeys' type='@'/>
<retval declared_type='IKFilterUIView*' type='@'/>
</method>
<method selector='saveOptions:shouldShowUTType:'>
<arg declared_type='IKSaveOptions*' index='0' name='saveOptions' type='@'/>
<arg declared_type='NSString*' index='1' name='utType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scannerDeviceView:didEncounterError:'>
<arg declared_type='IKScannerDeviceView*' index='0' name='scannerDeviceView' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scannerDeviceView:didScanToBandData:scanInfo:error:'>
<arg declared_type='IKScannerDeviceView*' index='0' name='scannerDeviceView' type='@'/>
<arg declared_type='ICScannerBandData*' index='1' name='data' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='scanInfo' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scannerDeviceView:didScanToURL:error:'>
<arg declared_type='IKScannerDeviceView*' index='0' name='scannerDeviceView' type='@'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='NSError*' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scannerDeviceView:didScanToURL:fileData:error:'>
<arg declared_type='IKScannerDeviceView*' index='0' name='scannerDeviceView' type='@'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='NSData*' index='2' name='data' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:imageProperties:'>
<arg declared_type='CGImageRef' index='0' name='image' type='^{CGImage=}'/>
<arg declared_type='NSDictionary*' index='1' name='metaData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='slideshowDidChangeCurrentIndex:'>
<arg declared_type='NSUInteger' index='0' name='newIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='slideshowDidStop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='slideshowItemAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='slideshowWillStart'>
<retval declared_type='void' type='v'/>
</method>
<method selector='thumbnailWithMaximumSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
</class>
<informal_protocol name='IKCameraDeviceViewDelegate'>
<method selector='cameraDeviceView:didDownloadFile:location:fileData:error:' type='v28@0:4@8@12@16@20@24' type64='v56@0:8@16@24@32@40@48'>
<arg declared_type='IKCameraDeviceView*' index='0' name='cameraDeviceView' type='@'/>
<arg declared_type='ICCameraFile*' index='1' name='file' type='@'/>
<arg declared_type='NSURL*' index='2' name='url' type='@'/>
<arg declared_type='NSData*' index='3' name='data' type='@'/>
<arg declared_type='NSError*' index='4' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cameraDeviceView:didEncounterError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='IKCameraDeviceView*' index='0' name='cameraDeviceView' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cameraDeviceViewSelectionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='IKCameraDeviceView*' index='0' name='cameraDeviceView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='IKDeviceBrowserViewDelegate'>
<method selector='deviceBrowserView:didEncounterError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='IKDeviceBrowserView*' index='0' name='deviceBrowserView' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deviceBrowserView:selectionDidChange:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='IKDeviceBrowserView*' index='0' name='deviceBrowserView' type='@'/>
<arg declared_type='ICDevice*' index='1' name='device' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='IKFilterCustomUIProvider'>
<method selector='provideViewForUIConfiguration:excludedKeys:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSDictionary*' index='0' name='inUIConfiguration' type='@'/>
<arg declared_type='NSArray*' index='1' name='inKeys' type='@'/>
<retval declared_type='IKFilterUIView*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='IKImageBrowserDataSource'>
<method selector='imageBrowser:groupAtIndex:' type='@16@0:4@8I12' type64='@32@0:8@16Q24'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='imageBrowser:itemAtIndex:' type='@16@0:4@8I12' type64='@32@0:8@16Q24'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageBrowser:moveItemsAtIndexes:toIndex:' type='B20@0:4@8@12I16' type64='B40@0:8@16@24Q32'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSIndexSet*' index='1' name='indexes' type='@'/>
<arg declared_type='NSUInteger' index='2' name='destinationIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageBrowser:removeItemsAtIndexes:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSIndexSet*' index='1' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageBrowser:writeItemsAtIndexes:toPasteboard:' type='I20@0:4@8@12@16' type64='Q40@0:8@16@24@32'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSIndexSet*' index='1' name='itemIndexes' type='@'/>
<arg declared_type='NSPasteboard*' index='2' name='pasteboard' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfGroupsInImageBrowser:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfItemsInImageBrowser:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='IKImageBrowserDelegate'>
<method selector='imageBrowser:backgroundWasRightClickedWithEvent:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSEvent*' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageBrowser:cellWasDoubleClickedAtIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageBrowser:cellWasRightClickedAtIndex:withEvent:' type='v20@0:4@8I12@16' type64='v40@0:8@16Q24@32'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<arg declared_type='NSEvent*' index='2' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageBrowserSelectionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='IKImageBrowserView*' index='0' name='aBrowser' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='IKImageBrowserItem'>
<method selector='imageRepresentation' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageRepresentationType' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageSubtitle' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageTitle' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageUID' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageVersion' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='isSelectable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='IKImageEditPanelDataSource'>
<method selector='hasAdjustMode' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasDetailsMode' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasEffectsMode' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image' type='^{CGImage=}8@0:4' type64='^{CGImage=}16@0:8'>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method selector='imageProperties' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setImage:imageProperties:' type='v16@0:4^{CGImage=}8@12' type64='v32@0:8^{CGImage=}16@24'>
<arg declared_type='CGImageRef' index='0' name='image' type='^{CGImage=}'/>
<arg declared_type='NSDictionary*' index='1' name='metaData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='thumbnailWithMaximumSize:' type='^{CGImage=}16@0:4{_NSSize=ff}8' type64='^{CGImage=}32@0:8{CGSize=dd}16'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
</informal_protocol>
<informal_protocol name='IKSaveOptionsDelegate'>
<method selector='saveOptions:shouldShowUTType:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='IKSaveOptions*' index='0' name='saveOptions' type='@'/>
<arg declared_type='NSString*' index='1' name='utType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='IKScannerDeviceViewDelegate'>
<method selector='scannerDeviceView:didEncounterError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='IKScannerDeviceView*' index='0' name='scannerDeviceView' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scannerDeviceView:didScanToBandData:scanInfo:error:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='IKScannerDeviceView*' index='0' name='scannerDeviceView' type='@'/>
<arg declared_type='ICScannerBandData*' index='1' name='data' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='scanInfo' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scannerDeviceView:didScanToURL:error:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='IKScannerDeviceView*' index='0' name='scannerDeviceView' type='@'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='NSError*' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scannerDeviceView:didScanToURL:fileData:error:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='IKScannerDeviceView*' index='0' name='scannerDeviceView' type='@'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='NSData*' index='2' name='data' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='IKSlideshowDataSource'>
<method selector='canExportSlideshowItemAtIndex:toApplication:' type='B16@0:4I8@12' type64='B32@0:8Q16@24'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSString*' index='1' name='applicationBundleIdentifier' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nameOfSlideshowItemAtIndex:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfSlideshowItems' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='slideshowDidChangeCurrentIndex:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='newIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='slideshowDidStop' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='slideshowItemAtIndex:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='slideshowWillStart' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<depends_on path='/System/Library/Frameworks/Cocoa.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<constant declared_type='NSString*' name='PDFDocumentAuthorAttribute' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentCreationDateAttribute' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentCreatorAttribute' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidBeginFindNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidBeginPageFindNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidBeginPageWriteNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidBeginWriteNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidEndFindNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidEndPageFindNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidEndPageWriteNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidEndWriteNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidFindMatchNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentDidUnlockNotification' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentKeywordsAttribute' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentModificationDateAttribute' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentProducerAttribute' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentSubjectAttribute' type='@'/>
<constant declared_type='NSString*' name='PDFDocumentTitleAttribute' type='@'/>
<constant declared_type='NSString*' name='PDFThumbnailViewDocumentEditedNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewAnnotationHitNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewAnnotationWillHitNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewChangedHistoryNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewCopyPermissionNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewDisplayBoxChangedNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewDisplayModeChangedNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewDocumentChangedNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewPageChangedNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewPrintPermissionNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewScaleChangedNotification' type='@'/>
<constant declared_type='NSString*' name='PDFViewSelectionChangedNotification' type='@'/>
<enum name='kPDFActionNamedFind' value='8'/>
<enum name='kPDFActionNamedFirstPage' value='3'/>
<enum name='kPDFActionNamedGoBack' value='5'/>
<enum name='kPDFActionNamedGoForward' value='6'/>
<enum name='kPDFActionNamedGoToPage' value='7'/>
<enum name='kPDFActionNamedLastPage' value='4'/>
<enum name='kPDFActionNamedNextPage' value='1'/>
<enum name='kPDFActionNamedNone' value='0'/>
<enum name='kPDFActionNamedPreviousPage' value='2'/>
<enum name='kPDFActionNamedPrint' value='9'/>
<enum name='kPDFActionNamedZoomIn' value='10'/>
<enum name='kPDFActionNamedZoomOut' value='11'/>
<enum name='kPDFAnnotationArea' value='4'/>
<enum name='kPDFBorderStyleBeveled' value='2'/>
<enum name='kPDFBorderStyleDashed' value='1'/>
<enum name='kPDFBorderStyleInset' value='3'/>
<enum name='kPDFBorderStyleSolid' value='0'/>
<enum name='kPDFBorderStyleUnderline' value='4'/>
<enum name='kPDFControlArea' value='16'/>
<enum name='kPDFDestinationUnspecifiedValue' value='3.40282347E+38'/>
<enum name='kPDFDisplayBoxArtBox' value='4'/>
<enum name='kPDFDisplayBoxBleedBox' value='2'/>
<enum name='kPDFDisplayBoxCropBox' value='1'/>
<enum name='kPDFDisplayBoxMediaBox' value='0'/>
<enum name='kPDFDisplayBoxTrimBox' value='3'/>
<enum name='kPDFDisplaySinglePage' value='0'/>
<enum name='kPDFDisplaySinglePageContinuous' value='1'/>
<enum name='kPDFDisplayTwoUp' value='2'/>
<enum name='kPDFDisplayTwoUpContinuous' value='3'/>
<enum name='kPDFDocumentPermissionsNone' value='0'/>
<enum name='kPDFDocumentPermissionsOwner' value='2'/>
<enum name='kPDFDocumentPermissionsUser' value='1'/>
<enum name='kPDFIconArea' value='64'/>
<enum name='kPDFInterpolationQualityHigh' value='2'/>
<enum name='kPDFInterpolationQualityLow' value='1'/>
<enum name='kPDFInterpolationQualityNone' value='0'/>
<enum name='kPDFLineStyleCircle' value='2'/>
<enum name='kPDFLineStyleClosedArrow' value='5'/>
<enum name='kPDFLineStyleDiamond' value='3'/>
<enum name='kPDFLineStyleNone' value='0'/>
<enum name='kPDFLineStyleOpenArrow' value='4'/>
<enum name='kPDFLineStyleSquare' value='1'/>
<enum name='kPDFLinkArea' value='8'/>
<enum name='kPDFMarkupTypeHighlight' value='0'/>
<enum name='kPDFMarkupTypeStrikeOut' value='1'/>
<enum name='kPDFMarkupTypeUnderline' value='2'/>
<enum name='kPDFNoArea' value='0'/>
<enum name='kPDFPageArea' value='1'/>
<enum name='kPDFPopupArea' value='128'/>
<enum name='kPDFPrintPageScaleDownToFit' value='2'/>
<enum name='kPDFPrintPageScaleNone' value='0'/>
<enum name='kPDFPrintPageScaleToFit' value='1'/>
<enum name='kPDFTextAnnotationIconComment' value='0'/>
<enum name='kPDFTextAnnotationIconHelp' value='3'/>
<enum name='kPDFTextAnnotationIconInsert' value='6'/>
<enum name='kPDFTextAnnotationIconKey' value='1'/>
<enum name='kPDFTextAnnotationIconNewParagraph' value='4'/>
<enum name='kPDFTextAnnotationIconNote' value='2'/>
<enum name='kPDFTextAnnotationIconParagraph' value='5'/>
<enum name='kPDFTextArea' value='2'/>
<enum name='kPDFTextFieldArea' value='32'/>
<enum name='kPDFWidgetCheckBoxControl' value='2'/>
<enum name='kPDFWidgetPushButtonControl' value='0'/>
<enum name='kPDFWidgetRadioButtonControl' value='1'/>
<enum name='kPDFWidgetUnknownControl' value='-1'/>
<class name='NSObject'>
<method selector='PDFViewOpenPDF:forRemoteGoToAction:'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<arg declared_type='PDFActionRemoteGoTo*' index='1' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='PDFViewPerformFind:'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='PDFViewPerformGoToPage:'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='PDFViewPerformPrint:'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='PDFViewPrintJobTitle:'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='PDFViewWillChangeScaleFactor:toScale:'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='PDFViewWillClickOnLink:withURL:'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='classForAnnotationClass:'>
<arg declared_type='Class' index='0' name='annotationClass' type='#'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForPage'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='didMatchString:'>
<arg declared_type='PDFSelection*' index='0' name='instance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidBeginDocumentFind:'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidBeginPageFind:'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidEndDocumentFind:'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidEndPageFind:'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidFindMatch:'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidUnlock:'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAction'>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PDFActionGoTo'>
<method selector='destination'>
<retval declared_type='PDFDestination*' type='@'/>
</method>
<method selector='initWithDestination:'>
<arg declared_type='PDFDestination*' index='0' name='destination' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDestination:'>
<arg declared_type='PDFDestination*' index='0' name='destination' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFActionNamed'>
<method selector='initWithName:'>
<arg declared_type='PDFActionNamedName' index='0' name='name' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='PDFActionNamedName' type='i' type64='q'/>
</method>
<method selector='setName:'>
<arg declared_type='PDFActionNamedName' index='0' name='name' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFActionRemoteGoTo'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithPageIndex:atPoint:fileURL:'>
<arg declared_type='NSUInteger' index='0' name='pageIndex' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSURL*' index='2' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pageIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='point'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='setPageIndex:'>
<arg declared_type='NSUInteger' index='0' name='pageIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFActionResetForm'>
<method selector='fields'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='fieldsIncludedAreCleared'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFields:'>
<arg declared_type='NSArray*' index='0' name='fields' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldsIncludedAreCleared:'>
<arg declared_type='BOOL' index='0' name='include' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFActionURL'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotation'>
<method selector='border'>
<retval declared_type='PDFBorder*' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='color'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='contents'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='drawWithBox:'>
<arg declared_type='PDFDisplayBox' index='0' name='box' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasAppearanceStream'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithBounds:'>
<arg declared_type='NSRect' index='0' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='mouseUpAction'>
<retval declared_type='PDFAction*' type='@'/>
</method>
<method selector='page'>
<retval declared_type='PDFPage*' type='@'/>
</method>
<method selector='popup'>
<retval declared_type='PDFAnnotationPopup*' type='@'/>
</method>
<method selector='removeAllAppearanceStreams'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorder:'>
<arg declared_type='PDFBorder*' index='0' name='border' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type='NSRect' index='0' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContents:'>
<arg declared_type='NSString*' index='0' name='contents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMouseUpAction:'>
<arg declared_type='PDFAction*' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPopup:'>
<arg declared_type='PDFAnnotationPopup*' index='0' name='popup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldDisplay:'>
<arg declared_type='BOOL' index='0' name='display' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldPrint:'>
<arg declared_type='BOOL' index='0' name='print' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldPrint'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='toolTip'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userName'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PDFAnnotationButtonWidget'>
<method selector='allowsToggleToOff'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='caption'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='controlType'>
<retval declared_type='PDFWidgetControlType' type='i' type64='q'/>
</method>
<method selector='fieldName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='font'>
<retval declared_type='NSFont*' type='@'/>
</method>
<method selector='fontColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='onStateValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setAllowsToggleToOff:'>
<arg declared_type='BOOL' index='0' name='allowOff' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCaption:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlType:'>
<arg declared_type='PDFWidgetControlType' index='0' name='type' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnStateValue:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg declared_type='NSInteger' index='0' name='value' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='PDFAnnotationChoiceWidget'>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='choices'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='fieldName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='font'>
<retval declared_type='NSFont*' type='@'/>
</method>
<method selector='fontColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='isListChoice'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChoices:'>
<arg declared_type='NSArray*' index='0' name='options' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsListChoice:'>
<arg declared_type='BOOL' index='0' name='isList' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringValue:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringValue'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PDFAnnotationCircle'>
<method selector='interiorColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='setInteriorColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationFreeText'>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='font'>
<retval declared_type='NSFont*' type='@'/>
</method>
<method selector='fontColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationInk'>
<method selector='addBezierPath:'>
<arg declared_type='NSBezierPath*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='paths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeBezierPath:'>
<arg declared_type='NSBezierPath*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationLine'>
<method selector='endLineStyle'>
<retval declared_type='PDFLineStyle' type='i' type64='q'/>
</method>
<method selector='endPoint'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='interiorColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='setEndLineStyle:'>
<arg declared_type='PDFLineStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInteriorColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartLineStyle:'>
<arg declared_type='PDFLineStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startLineStyle'>
<retval declared_type='PDFLineStyle' type='i' type64='q'/>
</method>
<method selector='startPoint'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='PDFAnnotationLink'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='destination'>
<retval declared_type='PDFDestination*' type='@'/>
</method>
<method selector='setDestination:'>
<arg declared_type='PDFDestination*' index='0' name='destination' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationMarkup'>
<method selector='markupType'>
<retval declared_type='PDFMarkupType' type='i' type64='q'/>
</method>
<method selector='quadrilateralPoints'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setMarkupType:'>
<arg declared_type='PDFMarkupType' index='0' name='type' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuadrilateralPoints:'>
<arg declared_type='NSArray*' index='0' name='points' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationPopup'>
<method selector='isOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setIsOpen:'>
<arg declared_type='BOOL' index='0' name='isOpen' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationSquare'>
<method selector='interiorColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='setInteriorColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationStamp'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationText'>
<method selector='iconType'>
<retval declared_type='PDFTextAnnotationIconType' type='i' type64='q'/>
</method>
<method selector='setIconType:'>
<arg declared_type='PDFTextAnnotationIconType' index='0' name='type' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFAnnotationTextWidget'>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='attributedStringValue'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='fieldName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='font'>
<retval declared_type='NSFont*' type='@'/>
</method>
<method selector='fontColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='maximumLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='rotation'>
<retval declared_type='int' type='i'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringValue:'>
<arg declared_type='NSAttributedString*' index='0' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumLength:'>
<arg declared_type='NSUInteger' index='0' name='maxLen' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type='int' index='0' name='rotation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringValue:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringValue'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PDFBorder'>
<method selector='dashPattern'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='drawInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setDashPattern:'>
<arg declared_type='NSArray*' index='0' name='pattern' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type='PDFBorderStyle' index='0' name='style' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='PDFBorderStyle' type='i' type64='q'/>
</method>
</class>
<class name='PDFDestination'>
<method selector='compare:'>
<arg declared_type='PDFDestination*' index='0' name='destination' type='@'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='initWithPage:atPoint:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='page'>
<retval declared_type='PDFPage*' type='@'/>
</method>
<method selector='point'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='setZoom:'>
<arg declared_type='CGFloat' index='0' name='zoom' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoom'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='PDFDocument'>
<method selector='allowsCopying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsPrinting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginFindString:withOptions:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSUInteger' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginFindStrings:withOptions:'>
<arg declared_type='NSArray*' index='0' name='strings' type='@'/>
<arg declared_type='NSUInteger' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelFindString'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataRepresentation'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataRepresentationWithOptions:'>
<arg declared_type='NSDictionary*' index='0' name='options' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='documentAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='documentRef'>
<retval declared_type='CGPDFDocumentRef' type='^{CGPDFDocument=}'/>
</method>
<method selector='documentURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='exchangePageAtIndex:withPageAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='indexA' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='indexB' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='findString:fromSelection:withOptions:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='PDFSelection*' index='1' name='selection' type='@'/>
<arg declared_type='NSUInteger' index='2' name='options' type='I' type64='Q'/>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='findString:withOptions:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSUInteger' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexForPage:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertPage:atIndex:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEncrypted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFinding'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLocked'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='majorVersion'>
<retval declared_type='int' type='i'/>
</method>
<method selector='minorVersion'>
<retval declared_type='int' type='i'/>
</method>
<method selector='outlineItemForSelection:'>
<arg declared_type='PDFSelection*' index='0' name='selection' type='@'/>
<retval declared_type='PDFOutline*' type='@'/>
</method>
<method selector='outlineRoot'>
<retval declared_type='PDFOutline*' type='@'/>
</method>
<method selector='pageAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='PDFPage*' type='@'/>
</method>
<method selector='pageClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='pageCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='permissionsStatus'>
<retval declared_type='PDFDocumentPermissions' type='i' type64='q'/>
</method>
<method selector='printOperationForPrintInfo:scalingMode:autoRotate:'>
<arg declared_type='NSPrintInfo*' index='0' name='printInfo' type='@'/>
<arg declared_type='PDFPrintScalingMode' index='1' name='scaleMode' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='doRotate' type='B'/>
<retval declared_type='NSPrintOperation*' type='@'/>
</method>
<method selector='removePageAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectionForEntireDocument'>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='selectionFromPage:atCharacterIndex:toPage:atCharacterIndex:'>
<arg declared_type='PDFPage*' index='0' name='startPage' type='@'/>
<arg declared_type='NSUInteger' index='1' name='startChar' type='I' type64='Q'/>
<arg declared_type='PDFPage*' index='2' name='endPage' type='@'/>
<arg declared_type='NSUInteger' index='3' name='endChar' type='I' type64='Q'/>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='selectionFromPage:atPoint:toPage:atPoint:'>
<arg declared_type='PDFPage*' index='0' name='startPage' type='@'/>
<arg declared_type='NSPoint' index='1' name='startPt' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='PDFPage*' index='2' name='endPage' type='@'/>
<arg declared_type='NSPoint' index='3' name='endPt' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='anObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentAttributes:'>
<arg declared_type='NSDictionary*' index='0' name='attributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutlineRoot:'>
<arg declared_type='PDFOutline*' index='0' name='outline' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='unlockWithPassword:'>
<arg declared_type='NSString*' index='0' name='password' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToFile:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToFile:withOptions:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:withOptions:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='PDFOutline'>
<method selector='action'>
<retval declared_type='PDFAction*' type='@'/>
</method>
<method selector='childAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='PDFOutline*' type='@'/>
</method>
<method selector='destination'>
<retval declared_type='PDFDestination*' type='@'/>
</method>
<method selector='document'>
<retval declared_type='PDFDocument*' type='@'/>
</method>
<method selector='index'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertChild:atIndex:'>
<arg declared_type='PDFOutline*' index='0' name='child' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='label'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfChildren'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='parent'>
<retval declared_type='PDFOutline*' type='@'/>
</method>
<method selector='removeFromParent'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAction:'>
<arg declared_type='PDFAction*' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestination:'>
<arg declared_type='PDFDestination*' index='0' name='destination' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsOpen:'>
<arg declared_type='BOOL' index='0' name='open' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString*' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFPage'>
<method selector='addAnnotation:'>
<arg declared_type='PDFAnnotation*' index='0' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='annotationAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='PDFAnnotation*' type='@'/>
</method>
<method selector='annotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='attributedString'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='boundsForBox:'>
<arg declared_type='PDFDisplayBox' index='0' name='box' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterBoundsAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterIndexAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dataRepresentation'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='displaysAnnotations'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='document'>
<retval declared_type='PDFDocument*' type='@'/>
</method>
<method selector='drawWithBox:'>
<arg declared_type='PDFDisplayBox' index='0' name='box' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithImage:'>
<arg declared_type='NSImage*' index='0' name='image' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='label'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfCharacters'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pageRef'>
<retval declared_type='CGPDFPageRef' type='^{CGPDFPage=}'/>
</method>
<method selector='removeAnnotation:'>
<arg declared_type='PDFAnnotation*' index='0' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotation'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectionForLineAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='selectionForRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='selectionForRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='selectionForWordAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='selectionFromPoint:toPoint:'>
<arg declared_type='NSPoint' index='0' name='startPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='endPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='setBounds:forBox:'>
<arg declared_type='NSRect' index='0' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='PDFDisplayBox' index='1' name='box' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysAnnotations:'>
<arg declared_type='BOOL' index='0' name='display' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg declared_type='NSInteger' index='0' name='angle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='transformContextForBox:'>
<arg declared_type='PDFDisplayBox' index='0' name='box' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PDFSelection'>
<method selector='addSelection:'>
<arg declared_type='PDFSelection*' index='0' name='selection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSelections:'>
<arg declared_type='NSArray*' index='0' name='selections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributedString'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='boundsForPage:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='color'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='drawForPage:active:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<arg declared_type='BOOL' index='1' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawForPage:withBox:active:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<arg declared_type='PDFDisplayBox' index='1' name='box' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='extendSelectionAtEnd:'>
<arg declared_type='NSInteger' index='0' name='succeed' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='extendSelectionAtStart:'>
<arg declared_type='NSInteger' index='0' name='precede' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithDocument:'>
<arg declared_type='PDFDocument*' index='0' name='document' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='numberOfTextRangesOnPage:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pages'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='rangeAtIndex:onPage:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='PDFPage*' index='1' name='page' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='selectionsByLine'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PDFThumbnailView'>
<method selector='PDFView'>
<retval declared_type='PDFView*' type='@'/>
</method>
<method selector='allowsDragging'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='labelFont'>
<retval declared_type='NSFont*' type='@'/>
</method>
<method selector='maximumNumberOfColumns'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='selectedPages'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setAllowsDragging:'>
<arg declared_type='BOOL' index='0' name='allow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelFont:'>
<arg declared_type='NSFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfColumns:'>
<arg declared_type='NSUInteger' index='0' name='maxColumns' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPDFView:'>
<arg declared_type='PDFView*' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setThumbnailSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='thumbnailSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='PDFView'>
<method selector='allowsDragging'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='annotationsChangedOnPage:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='areaOfInterestForMouse:'>
<arg declared_type='NSEvent*' index='0' name='event' type='@'/>
<retval declared_type='PDFAreaOfInterest' type='i' type64='q'/>
</method>
<method selector='autoScales'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='canGoBack'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canGoForward'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canGoToFirstPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canGoToLastPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canGoToNextPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canGoToPreviousPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canZoomIn'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canZoomOut'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearSelection'>
<retval declared_type='void' type='v'/>
</method>
<method selector='convertPoint:fromPage:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='PDFPage*' index='1' name='page' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toPage:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='PDFPage*' index='1' name='page' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromPage:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='PDFPage*' index='1' name='page' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toPage:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='PDFPage*' index='1' name='page' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='copy:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentDestination'>
<retval declared_type='PDFDestination*' type='@'/>
</method>
<method selector='currentPage'>
<retval declared_type='PDFPage*' type='@'/>
</method>
<method selector='currentSelection'>
<retval declared_type='PDFSelection*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='displayBox'>
<retval declared_type='PDFDisplayBox' type='i' type64='q'/>
</method>
<method selector='displayMode'>
<retval declared_type='PDFDisplayMode' type='i' type64='q'/>
</method>
<method selector='displaysAsBook'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displaysPageBreaks'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='document'>
<retval declared_type='PDFDocument*' type='@'/>
</method>
<method selector='documentView'>
<retval declared_type='NSView*' type='@'/>
</method>
<method selector='drawPage:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPagePost:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableDataDetectors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='goBack:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goForward:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToDestination:'>
<arg declared_type='PDFDestination*' index='0' name='destination' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToFirstPage:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToLastPage:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToNextPage:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToPage:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToPreviousPage:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToRect:onPage:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='PDFPage*' index='1' name='page' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='goToSelection:'>
<arg declared_type='PDFSelection*' index='0' name='selection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='greekingThreshold'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='highlightedSelections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='interpolationQuality'>
<retval declared_type='PDFInterpolationQuality' type='i' type64='q'/>
</method>
<method selector='layoutDocumentView'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageForPoint:nearest:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='1' name='nearest' type='B'/>
<retval declared_type='PDFPage*' type='@'/>
</method>
<method selector='performAction:'>
<arg declared_type='PDFAction*' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printWithInfo:autoRotate:'>
<arg declared_type='NSPrintInfo*' index='0' name='printInfo' type='@'/>
<arg declared_type='BOOL' index='1' name='doRotate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printWithInfo:autoRotate:pageScaling:'>
<arg declared_type='NSPrintInfo*' index='0' name='printInfo' type='@'/>
<arg declared_type='BOOL' index='1' name='doRotate' type='B'/>
<arg declared_type='PDFPrintScalingMode' index='2' name='scale' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowSizeForPage:'>
<arg declared_type='PDFPage*' index='0' name='page' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='scaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollSelectionToVisible:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsDragging:'>
<arg declared_type='BOOL' index='0' name='allow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoScales:'>
<arg declared_type='BOOL' index='0' name='newAuto' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='newColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentSelection:'>
<arg declared_type='PDFSelection*' index='0' name='selection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentSelection:animate:'>
<arg declared_type='PDFSelection*' index='0' name='selection' type='@'/>
<arg declared_type='BOOL' index='1' name='animate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCursorForAreaOfInterest:'>
<arg declared_type='PDFAreaOfInterest' index='0' name='area' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='anObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayBox:'>
<arg declared_type='PDFDisplayBox' index='0' name='box' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayMode:'>
<arg declared_type='PDFDisplayMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysAsBook:'>
<arg declared_type='BOOL' index='0' name='asBook' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysPageBreaks:'>
<arg declared_type='BOOL' index='0' name='breaks' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocument:'>
<arg declared_type='PDFDocument*' index='0' name='document' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableDataDetectors:'>
<arg declared_type='BOOL' index='0' name='enable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGreekingThreshold:'>
<arg declared_type='CGFloat' index='0' name='threshold' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedSelections:'>
<arg declared_type='NSArray*' index='0' name='selections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterpolationQuality:'>
<arg declared_type='PDFInterpolationQuality' index='0' name='quality' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleFactor:'>
<arg declared_type='CGFloat' index='0' name='scale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldAntiAlias:'>
<arg declared_type='BOOL' index='0' name='aliasing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAntiAlias'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='takeBackgroundColorFrom:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takePasswordFrom:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visiblePages'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='zoomIn:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomOut:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='PDFDocumentDelegate'>
<method selector='classForAnnotationClass:' type='#12@0:4#8' type64='#24@0:8#16'>
<arg declared_type='Class' index='0' name='annotationClass' type='#'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForPage' type='#8@0:4' type64='#16@0:8'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='didMatchString:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='PDFSelection*' index='0' name='instance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PDFDocumentNotifications'>
<method selector='documentDidBeginDocumentFind:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidBeginPageFind:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidEndDocumentFind:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidEndPageFind:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidFindMatch:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='documentDidUnlock:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification*' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PDFViewDelegate'>
<method selector='PDFViewOpenPDF:forRemoteGoToAction:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<arg declared_type='PDFActionRemoteGoTo*' index='1' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='PDFViewPerformFind:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='PDFViewPerformGoToPage:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='PDFViewPerformPrint:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='PDFViewPrintJobTitle:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='PDFViewWillChangeScaleFactor:toScale:' type='f16@0:4@8f12' type64='d32@0:8@16d24'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<arg declared_type='CGFloat' index='1' name='scale' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='PDFViewWillClickOnLink:withURL:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='PDFView*' index='0' name='sender' type='@'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<depends_on path='/System/Library/Frameworks/JavaScriptCore.framework'/>
<depends_on path='/System/Library/Frameworks/QTKit.framework'/>
<depends_on path='/System/Library/Frameworks/OpenCL.framework'/>
<depends_on path='/System/Library/Frameworks/IOSurface.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<constant const='true' declared_type='NSString*' name='QCCompositionAttributeBuiltInKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionAttributeCategoryKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionAttributeCopyrightKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionAttributeDescriptionKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionAttributeHasConsumersKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionAttributeIsTimeDependentKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionAttributeNameKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionCategoryDistortion' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionCategoryStylize' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionCategoryUtility' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputAudioPeakKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputAudioSpectrumKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputDestinationImageKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputImageKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputPaceKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputPreviewModeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputPrimaryColorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputRSSArticleDurationKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputRSSFeedURLKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputScreenImageKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputSecondaryColorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputSourceImageKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputTrackInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputTrackPositionKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputTrackSignalKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputXKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionInputYKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionOutputImageKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionOutputWebPageURLKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionPickerPanelDidSelectCompositionNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionPickerViewDidSelectCompositionNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionProtocolGraphicAnimation' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionProtocolGraphicTransition' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionProtocolImageFilter' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionProtocolMusicVisualizer' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionProtocolRSSVisualizer' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionProtocolScreenSaver' type='@'/>
<constant const='true' declared_type='NSString*' name='QCCompositionRepositoryDidUpdateNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInAttributeCategoriesKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInAttributeCopyrightKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInAttributeDescriptionKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInAttributeExamplesKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInAttributeNameKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInExecutionArgumentEventKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInExecutionArgumentMouseLocationKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInPixelFormatARGB8' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInPixelFormatBGRA8' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInPixelFormatI8' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInPixelFormatIf' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPlugInPixelFormatRGBAf' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortAttributeDefaultValueKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortAttributeMaximumValueKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortAttributeMenuItemsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortAttributeMinimumValueKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortAttributeNameKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortAttributeTypeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortTypeBoolean' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortTypeColor' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortTypeImage' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortTypeIndex' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortTypeNumber' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortTypeString' type='@'/>
<constant const='true' declared_type='NSString*' name='QCPortTypeStructure' type='@'/>
<constant const='true' declared_type='NSString*' name='QCRendererEventKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCRendererMouseLocationKey' type='@'/>
<constant const='true' declared_type='NSString*' name='QCViewDidStartRenderingNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='QCViewDidStopRenderingNotification' type='@'/>
<enum name='kQCPlugInExecutionModeConsumer' value='3'/>
<enum name='kQCPlugInExecutionModeProcessor' value='2'/>
<enum name='kQCPlugInExecutionModeProvider' value='1'/>
<enum name='kQCPlugInTimeModeIdle' value='1'/>
<enum name='kQCPlugInTimeModeNone' value='0'/>
<enum name='kQCPlugInTimeModeTimeBase' value='2'/>
<class name='NSObject'>
<method selector='CGLContextObj'>
<retval declared_type='CGLContextObj' type='^{_CGLContextObject=}'/>
</method>
<method selector='attributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='bindTextureRepresentationToCGLContext:textureUnit:normalizeCoordinates:'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<arg declared_type='GLenum' index='1' name='unit' type='I'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='bufferBaseAddress'>
<retval const='true' declared_type='void*' type='^v'/>
</method>
<method selector='bufferBytesPerRow'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferColorSpace'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='bufferPixelFormat'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bufferPixelsHigh'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferPixelsWide'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='canRenderWithCGLContext:'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='colorSpace'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='compositionParameterView:didChangeParameterWithKey:'>
<arg declared_type='QCCompositionParameterView*' index='0' name='parameterView' type='@'/>
<arg declared_type='NSString*' index='1' name='portKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositionParameterView:shouldDisplayParameterWithKey:attributes:'>
<arg declared_type='QCCompositionParameterView*' index='0' name='parameterView' type='@'/>
<arg declared_type='NSString*' index='1' name='portKey' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='portAttributes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compositionPickerView:didSelectComposition:'>
<arg declared_type='QCCompositionPickerView*' index='0' name='pickerView' type='@'/>
<arg declared_type='QCComposition*' index='1' name='composition' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositionPickerViewDidStartAnimating:'>
<arg declared_type='QCCompositionPickerView*' index='0' name='pickerView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositionPickerViewWillStopAnimating:'>
<arg declared_type='QCCompositionPickerView*' index='0' name='pickerView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositionURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='copyRenderedTextureForCGLContext:pixelFormat:bounds:isFlipped:'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<arg declared_type='NSString*' index='1' name='format' type='@'/>
<arg declared_type='NSRect' index='2' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL*' index='3' name='flipped' type='^B'/>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='imageBounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageColorSpace'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='inputKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='lockBufferRepresentationWithPixelFormat:colorSpace:forBounds:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='CGColorSpaceRef' index='1' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='NSRect' index='2' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lockTextureRepresentationWithColorSpace:forBounds:'>
<arg declared_type='CGColorSpaceRef' index='0' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='NSRect' index='1' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logMessage:' variadic='true'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outputImageProviderFromBufferWithPixelFormat:pixelsWide:pixelsHigh:baseAddress:bytesPerRow:releaseCallback:releaseContext:colorSpace:shouldColorMatch:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='NSUInteger' index='1' name='width' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='height' type='I' type64='Q'/>
<arg const='true' declared_type='void*' index='3' name='baseAddress' type='^v'/>
<arg declared_type='NSUInteger' index='4' name='rowBytes' type='I' type64='Q'/>
<arg declared_type='QCPlugInBufferReleaseCallback' function_pointer='true' index='5' name='callback' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' index='6' name='context' type='^v'/>
<arg declared_type='CGColorSpaceRef' index='7' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='BOOL' index='8' name='colorMatch' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='outputImageProviderFromTextureWithPixelFormat:pixelsWide:pixelsHigh:name:flipped:releaseCallback:releaseContext:colorSpace:shouldColorMatch:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='NSUInteger' index='1' name='width' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='height' type='I' type64='Q'/>
<arg declared_type='GLuint' index='3' name='name' type='I'/>
<arg declared_type='BOOL' index='4' name='flipped' type='B'/>
<arg declared_type='QCPlugInTextureReleaseCallback' function_pointer='true' index='5' name='callback' type='^?'>
<arg declared_type='CGLContextObj' type='^{_CGLContextObject=}'/>
<arg declared_type='GLuint' type='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' index='6' name='context' type='^v'/>
<arg declared_type='CGColorSpaceRef' index='7' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='BOOL' index='8' name='colorMatch' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='outputKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='propertyListFromInputValues'>
<retval declared_type='id' type='@'/>
</method>
<method selector='releaseRenderedTexture:forCGLContext:'>
<arg declared_type='GLuint' index='0' name='name' type='I'/>
<arg declared_type='CGLContextObj' index='1' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToBuffer:withBytesPerRow:pixelFormat:forBounds:'>
<arg declared_type='void*' index='0' name='baseAddress' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='rowBytes' type='I' type64='Q'/>
<arg declared_type='NSString*' index='2' name='format' type='@'/>
<arg declared_type='NSRect' index='3' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='renderWithCGLContext:forBounds:'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<arg declared_type='NSRect' index='1' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setInputValuesWithPropertyList:'>
<arg declared_type='id' index='0' name='plist' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forInputKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldColorMatch'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportedBufferPixelFormats'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='supportedRenderedTexturePixelFormats'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='textureColorSpace'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='textureFlipped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textureMatrix'>
<retval const='true' declared_type='GLfloat*' type='^f'/>
</method>
<method selector='textureName'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='texturePixelsHigh'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='texturePixelsWide'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='textureTarget'>
<retval declared_type='GLenum' type='I'/>
</method>
<method selector='unbindTextureRepresentationFromCGLContext:textureUnit:'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<arg declared_type='GLenum' index='1' name='unit' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockBufferRepresentation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockTextureRepresentation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='valueForInputKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForOutputKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForOutputKey:ofType:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSString*' index='1' name='type' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='QCComposition'>
<method selector='attributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='compositionWithData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='QCComposition*' type='@'/>
</method>
<method class_method='true' selector='compositionWithFile:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='QCComposition*' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='inputKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='outputKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='protocols'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='QCCompositionLayer'>
<method selector='composition'>
<retval declared_type='QCComposition*' type='@'/>
</method>
<method class_method='true' selector='compositionLayerWithComposition:'>
<arg declared_type='QCComposition*' index='0' name='composition' type='@'/>
<retval declared_type='QCCompositionLayer*' type='@'/>
</method>
<method class_method='true' selector='compositionLayerWithFile:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='QCCompositionLayer*' type='@'/>
</method>
<method selector='initWithComposition:'>
<arg declared_type='QCComposition*' index='0' name='composition' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFile:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='QCCompositionParameterView'>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='compositionRenderer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasParameters'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompositionRenderer:'>
<arg declared_type='id' index='0' name='renderer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='QCCompositionPickerPanel'>
<method selector='compositionPickerView'>
<retval declared_type='QCCompositionPickerView*' type='@'/>
</method>
<method class_method='true' selector='sharedCompositionPickerPanel'>
<retval declared_type='QCCompositionPickerPanel*' type='@'/>
</method>
</class>
<class name='QCCompositionPickerView'>
<method selector='allowsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='compositionAspectRatio'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='compositions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxAnimationFrameRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='resetDefaultInputValues'>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedComposition'>
<retval declared_type='QCComposition*' type='@'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompositionAspectRatio:'>
<arg declared_type='NSSize' index='0' name='ratio' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompositionsFromRepositoryWithProtocol:andAttributes:'>
<arg declared_type='NSString*' index='0' name='protocol' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='attributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultValue:forInputKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAnimationFrameRate:'>
<arg declared_type='float' index='0' name='maxFPS' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfColumns:'>
<arg declared_type='NSUInteger' index='0' name='columns' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfRows:'>
<arg declared_type='NSUInteger' index='0' name='rows' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedComposition:'>
<arg declared_type='QCComposition*' index='0' name='composition' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsCompositionNames:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsCompositionNames'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startAnimation:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimation:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='QCCompositionRepository'>
<method selector='allCompositions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='compositionWithIdentifier:'>
<arg declared_type='NSString*' index='0' name='identifier' type='@'/>
<retval declared_type='QCComposition*' type='@'/>
</method>
<method selector='compositionsWithProtocols:andAttributes:'>
<arg declared_type='NSArray*' index='0' name='protocols' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='attributes' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='sharedCompositionRepository'>
<retval declared_type='QCCompositionRepository*' type='@'/>
</method>
</class>
<class name='QCPlugIn'>
<method selector='addInputPortWithType:forKey:withAttributes:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='attributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addOutputPortWithType:forKey:withAttributes:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='attributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='attributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='attributesForPropertyPortWithKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='createViewController'>
<retval already_retained='true' declared_type='QCPlugInViewController*' type='@'/>
</method>
<method selector='didValueForInputKeyChange:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='disableExecution:'>
<arg declared_type='id' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableExecution:'>
<arg declared_type='id' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='execute:atTime:withArguments:'>
<arg declared_type='id' index='0' name='context' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<arg declared_type='NSDictionary*' index='2' name='arguments' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='executionMode'>
<retval declared_type='QCPlugInExecutionMode' type='i'/>
</method>
<method selector='executionTimeForContext:atTime:withArguments:'>
<arg declared_type='id' index='0' name='context' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='time' type='d'/>
<arg declared_type='NSDictionary*' index='2' name='arguments' type='@'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='loadPlugInAtPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='plugInKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='registerPlugInClass:'>
<arg declared_type='Class' index='0' name='aClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeInputPortForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeOutputPortForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='serializedValueForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setSerializedValue:forKey:'>
<arg declared_type='id' index='0' name='serializedValue' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forOutputKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sortedPropertyPortKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='startExecution:'>
<arg declared_type='id' index='0' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopExecution:'>
<arg declared_type='id' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='timeMode'>
<retval declared_type='QCPlugInTimeMode' type='i'/>
</method>
<method selector='valueForInputKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='QCPlugInViewController'>
<method selector='initWithPlugIn:viewNibName:'>
<arg declared_type='QCPlugIn*' index='0' name='plugIn' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='plugIn'>
<retval declared_type='QCPlugIn*' type='@'/>
</method>
</class>
<class name='QCRenderer'>
<method selector='composition'>
<retval declared_type='QCComposition*' type='@'/>
</method>
<method selector='createSnapshotImageOfType:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<retval already_retained='true' declared_type='id' type='@'/>
</method>
<method selector='initOffScreenWithSize:colorSpace:composition:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='CGColorSpaceRef' index='1' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='QCComposition*' index='2' name='composition' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCGLContext:pixelFormat:colorSpace:composition:'>
<arg declared_type='CGLContextObj' index='0' name='context' type='^{_CGLContextObject=}'/>
<arg declared_type='CGLPixelFormatObj' index='1' name='format' type='^{_CGLPixelFormatObject=}'/>
<arg declared_type='CGColorSpaceRef' index='2' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='QCComposition*' index='3' name='composition' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithComposition:colorSpace:'>
<arg declared_type='QCComposition*' index='0' name='composition' type='@'/>
<arg declared_type='CGColorSpaceRef' index='1' name='colorSpace' type='^{CGColorSpace=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithOpenGLContext:pixelFormat:file:'>
<arg declared_type='NSOpenGLContext*' index='0' name='context' type='@'/>
<arg declared_type='NSOpenGLPixelFormat*' index='1' name='format' type='@'/>
<arg declared_type='NSString*' index='2' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='renderAtTime:arguments:'>
<arg declared_type='NSTimeInterval' index='0' name='time' type='d'/>
<arg declared_type='NSDictionary*' index='1' name='arguments' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='renderingTimeForTime:arguments:'>
<arg declared_type='NSTimeInterval' index='0' name='time' type='d'/>
<arg declared_type='NSDictionary*' index='1' name='arguments' type='@'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='snapshotImage'>
<retval declared_type='NSImage*' type='@'/>
</method>
</class>
<class name='QCView'>
<method selector='autostartsRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createSnapshotImageOfType:'>
<arg declared_type='NSString*' index='0' name='type' type='@'/>
<retval already_retained='true' declared_type='id' type='@'/>
</method>
<method selector='erase'>
<retval declared_type='void' type='v'/>
</method>
<method selector='eraseColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='eventForwardingMask'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='isPausedRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadComposition:'>
<arg declared_type='QCComposition*' index='0' name='composition' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadCompositionFromFile:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadedComposition'>
<retval declared_type='QCComposition*' type='@'/>
</method>
<method selector='maxRenderingFrameRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='openGLContext'>
<retval declared_type='NSOpenGLContext*' type='@'/>
</method>
<method selector='openGLPixelFormat'>
<retval declared_type='NSOpenGLPixelFormat*' type='@'/>
</method>
<method selector='pauseRendering'>
<retval declared_type='void' type='v'/>
</method>
<method selector='play:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderAtTime:arguments:'>
<arg declared_type='NSTimeInterval' index='0' name='time' type='d'/>
<arg declared_type='NSDictionary*' index='1' name='arguments' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='resumeRendering'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutostartsRendering:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEraseColor:'>
<arg declared_type='NSColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEventForwardingMask:'>
<arg declared_type='NSUInteger' index='0' name='mask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxRenderingFrameRate:'>
<arg declared_type='float' index='0' name='maxFPS' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='snapshotImage'>
<retval declared_type='NSImage*' type='@'/>
</method>
<method selector='start:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stop:'>
<arg declared_type='id' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopRendering'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unloadComposition'>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='QCCompositionParameterViewDelegate'>
<method selector='compositionParameterView:didChangeParameterWithKey:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='QCCompositionParameterView*' index='0' name='parameterView' type='@'/>
<arg declared_type='NSString*' index='1' name='portKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositionParameterView:shouldDisplayParameterWithKey:attributes:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='QCCompositionParameterView*' index='0' name='parameterView' type='@'/>
<arg declared_type='NSString*' index='1' name='portKey' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='portAttributes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='QCCompositionPickerViewDelegate'>
<method selector='compositionPickerView:didSelectComposition:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='QCCompositionPickerView*' index='0' name='pickerView' type='@'/>
<arg declared_type='QCComposition*' index='1' name='composition' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositionPickerViewDidStartAnimating:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='QCCompositionPickerView*' index='0' name='pickerView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositionPickerViewWillStopAnimating:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='QCCompositionPickerView*' index='0' name='pickerView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='QCCompositionRenderer'>
<method selector='attributes' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='inputKeys' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='outputKeys' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='propertyListFromInputValues' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setInputValuesWithPropertyList:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id' index='0' name='plist' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forInputKey:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='valueForInputKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForOutputKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='valueForOutputKey:ofType:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSString*' index='1' name='type' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='QCPlugInContext'>
<method selector='CGLContextObj' type='^{_CGLContextObject=}8@0:4' type64='^{_CGLContextObject=}16@0:8'>
<retval declared_type='CGLContextObj' type='^{_CGLContextObject=}'/>
</method>
<method selector='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='colorSpace' type='^{CGColorSpace=}8@0:4' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='compositionURL' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='logMessage:' type='v12@0:4@8' type64='v24@0:8@16' variadic='true'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outputImageProviderFromBufferWithPixelFormat:pixelsWide:pixelsHigh:baseAddress:bytesPerRow:releaseCallback:releaseContext:colorSpace:shouldColorMatch:' type='@44@0:4@8I12I16r^v20I24^?28^v32^{CGColorSpace=}36B40' type64='@84@0:8@16Q24Q32r^v40Q48^?56^v64^{CGColorSpace=}72B80'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='NSUInteger' index='1' name='width' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='height' type='I' type64='Q'/>
<arg const='true' declared_type='void*' index='3' name='baseAddress' type='^v'/>
<arg declared_type='NSUInteger' index='4' name='rowBytes' type='I' type64='Q'/>
<arg declared_type='QCPlugInBufferReleaseCallback' function_pointer='true' index='5' name='callback' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' index='6' name='context' type='^v'/>
<arg declared_type='CGColorSpaceRef' index='7' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='BOOL' index='8' name='colorMatch' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='outputImageProviderFromTextureWithPixelFormat:pixelsWide:pixelsHigh:name:flipped:releaseCallback:releaseContext:colorSpace:shouldColorMatch:' type='@44@0:4@8I12I16I20B24^?28^v32^{CGColorSpace=}36B40' type64='@76@0:8@16Q24Q32I40B44^?48^v56^{CGColorSpace=}64B72'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='NSUInteger' index='1' name='width' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='height' type='I' type64='Q'/>
<arg declared_type='GLuint' index='3' name='name' type='I'/>
<arg declared_type='BOOL' index='4' name='flipped' type='B'/>
<arg declared_type='QCPlugInTextureReleaseCallback' function_pointer='true' index='5' name='callback' type='^?'>
<arg declared_type='CGLContextObj' type='^{_CGLContextObject=}'/>
<arg declared_type='GLuint' type='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' index='6' name='context' type='^v'/>
<arg declared_type='CGColorSpaceRef' index='7' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='BOOL' index='8' name='colorMatch' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='userInfo' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='QCPlugInInputImageSource'>
<method selector='bindTextureRepresentationToCGLContext:textureUnit:normalizeCoordinates:' type='v20@0:4^{_CGLContextObject=}8I12B16' type64='v32@0:8^{_CGLContextObject=}16I24B28'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<arg declared_type='GLenum' index='1' name='unit' type='I'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bufferBaseAddress' type='r^v8@0:4' type64='r^v16@0:8'>
<retval const='true' declared_type='void*' type='^v'/>
</method>
<method selector='bufferBytesPerRow' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferColorSpace' type='^{CGColorSpace=}8@0:4' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='bufferPixelFormat' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bufferPixelsHigh' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferPixelsWide' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='imageBounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageColorSpace' type='^{CGColorSpace=}8@0:4' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='lockBufferRepresentationWithPixelFormat:colorSpace:forBounds:' type='B32@0:4@8^{CGColorSpace=}12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='B64@0:8@16^{CGColorSpace=}24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<arg declared_type='CGColorSpaceRef' index='1' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='NSRect' index='2' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lockTextureRepresentationWithColorSpace:forBounds:' type='B28@0:4^{CGColorSpace=}8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' type64='B56@0:8^{CGColorSpace=}16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type='CGColorSpaceRef' index='0' name='colorSpace' type='^{CGColorSpace=}'/>
<arg declared_type='NSRect' index='1' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldColorMatch' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textureColorSpace' type='^{CGColorSpace=}8@0:4' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='textureFlipped' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textureMatrix' type='r^f8@0:4' type64='r^f16@0:8'>
<retval const='true' declared_type='GLfloat*' type='^f'/>
</method>
<method selector='textureName' type='I8@0:4' type64='I16@0:8'>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='texturePixelsHigh' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='texturePixelsWide' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='textureTarget' type='I8@0:4' type64='I16@0:8'>
<retval declared_type='GLenum' type='I'/>
</method>
<method selector='unbindTextureRepresentationFromCGLContext:textureUnit:' type='v16@0:4^{_CGLContextObject=}8I12' type64='v28@0:8^{_CGLContextObject=}16I24'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<arg declared_type='GLenum' index='1' name='unit' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockBufferRepresentation' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockTextureRepresentation' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='QCPlugInOutputImageProvider'>
<method selector='canRenderWithCGLContext:' type='B12@0:4^{_CGLContextObject=}8' type64='B24@0:8^{_CGLContextObject=}16'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='copyRenderedTextureForCGLContext:pixelFormat:bounds:isFlipped:' type='I36@0:4^{_CGLContextObject=}8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16^B32' type64='I72@0:8^{_CGLContextObject=}16@24{CGRect={CGPoint=dd}{CGSize=dd}}32^B64'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<arg declared_type='NSString*' index='1' name='format' type='@'/>
<arg declared_type='NSRect' index='2' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL*' index='3' name='flipped' type='^B'/>
<retval declared_type='GLuint' type='I'/>
</method>
<method selector='imageBounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageColorSpace' type='^{CGColorSpace=}8@0:4' type64='^{CGColorSpace=}16@0:8'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='releaseRenderedTexture:forCGLContext:' type='v16@0:4I8^{_CGLContextObject=}12' type64='v28@0:8I16^{_CGLContextObject=}20'>
<arg declared_type='GLuint' index='0' name='name' type='I'/>
<arg declared_type='CGLContextObj' index='1' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToBuffer:withBytesPerRow:pixelFormat:forBounds:' type='B36@0:4^v8I12@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}20' type64='B72@0:8^v16Q24@32{CGRect={CGPoint=dd}{CGSize=dd}}40'>
<arg declared_type='void*' index='0' name='baseAddress' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='rowBytes' type='I' type64='Q'/>
<arg declared_type='NSString*' index='2' name='format' type='@'/>
<arg declared_type='NSRect' index='3' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='renderWithCGLContext:forBounds:' type='B28@0:4^{_CGLContextObject=}8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' type64='B56@0:8^{_CGLContextObject=}16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type='CGLContextObj' index='0' name='cgl_ctx' type='^{_CGLContextObject=}'/>
<arg declared_type='NSRect' index='1' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldColorMatch' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportedBufferPixelFormats' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='supportedRenderedTexturePixelFormats' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<depends_on path='/System/Library/Frameworks/Cocoa.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant declared_type='Boolean' name='globalUpdateOK' type='B'/>
<constant declared_type='NSString*' name='kQuartzFilterApplicationDomain' type='@'/>
<constant declared_type='NSString*' name='kQuartzFilterManagerDidAddFilterNotification' type='@'/>
<constant declared_type='NSString*' name='kQuartzFilterManagerDidModifyFilterNotification' type='@'/>
<constant declared_type='NSString*' name='kQuartzFilterManagerDidRemoveFilterNotification' type='@'/>
<constant declared_type='NSString*' name='kQuartzFilterManagerDidSelectFilterNotification' type='@'/>
<constant declared_type='NSString*' name='kQuartzFilterPDFWorkflowDomain' type='@'/>
<constant declared_type='NSString*' name='kQuartzFilterPrintingDomain' type='@'/>
<class name='NSObject'>
<method selector='quartzFilterManager:didAddFilter:'>
<arg declared_type='QuartzFilterManager*' index='0' name='sender' type='@'/>
<arg declared_type='QuartzFilter*' index='1' name='filter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quartzFilterManager:didModifyFilter:'>
<arg declared_type='QuartzFilterManager*' index='0' name='sender' type='@'/>
<arg declared_type='QuartzFilter*' index='1' name='filter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quartzFilterManager:didRemoveFilter:'>
<arg declared_type='QuartzFilterManager*' index='0' name='sender' type='@'/>
<arg declared_type='QuartzFilter*' index='1' name='filter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quartzFilterManager:didSelectFilter:'>
<arg declared_type='QuartzFilterManager*' index='0' name='sender' type='@'/>
<arg declared_type='QuartzFilter*' index='1' name='filter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='QuartzFilter'>
<method selector='applyToContext:'>
<arg declared_type='CGContextRef' index='0' name='aContext' type='^{CGContext=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='properties'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='quartzFilterWithOutputIntents:'>
<arg declared_type='NSArray*' index='0' name='outputIntents' type='@'/>
<retval declared_type='QuartzFilter*' type='@'/>
</method>
<method class_method='true' selector='quartzFilterWithProperties:'>
<arg declared_type='NSDictionary*' index='0' name='properties' type='@'/>
<retval declared_type='QuartzFilter*' type='@'/>
</method>
<method class_method='true' selector='quartzFilterWithURL:'>
<arg declared_type='NSURL*' index='0' name='aURL' type='@'/>
<retval declared_type='QuartzFilter*' type='@'/>
</method>
<method selector='removeFromContext:'>
<arg declared_type='CGContextRef' index='0' name='aContext' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL*' type='@'/>
</method>
</class>
<class name='QuartzFilterManager'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='filterManager'>
<retval declared_type='QuartzFilterManager*' type='@'/>
</method>
<method selector='filterPanel'>
<retval declared_type='NSPanel*' type='@'/>
</method>
<method selector='filterView'>
<retval declared_type='QuartzFilterView*' type='@'/>
</method>
<method class_method='true' selector='filtersInDomains:'>
<arg declared_type='NSArray*' index='0' name='domains' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='importFilter:'>
<arg declared_type='NSDictionary*' index='0' name='filterProperties' type='@'/>
<retval declared_type='QuartzFilter*' type='@'/>
</method>
<method selector='selectFilter:'>
<arg declared_type='QuartzFilter*' index='0' name='filter' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectedFilter'>
<retval declared_type='QuartzFilter*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='aDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='QuartzFilterView'>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='QuartzFilterManagerDelegate'>
<method selector='quartzFilterManager:didAddFilter:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='QuartzFilterManager*' index='0' name='sender' type='@'/>
<arg declared_type='QuartzFilter*' index='1' name='filter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quartzFilterManager:didModifyFilter:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='QuartzFilterManager*' index='0' name='sender' type='@'/>
<arg declared_type='QuartzFilter*' index='1' name='filter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quartzFilterManager:didRemoveFilter:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='QuartzFilterManager*' index='0' name='sender' type='@'/>
<arg declared_type='QuartzFilter*' index='1' name='filter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quartzFilterManager:didSelectFilter:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='QuartzFilterManager*' index='0' name='sender' type='@'/>
<arg declared_type='QuartzFilter*' index='1' name='filter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<depends_on path='/System/Library/Frameworks/QuickLook.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/DiskArbitration.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<enum name='QLPreviewViewStyleCompact' value='1'/>
<enum name='QLPreviewViewStyleNormal' value='0'/>
<class name='NSObject'>
<method selector='acceptsPreviewPanelControl:'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginPreviewPanelControl:'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endPreviewPanelControl:'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfPreviewItemsInPreviewPanel:'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='previewItemDisplayState'>
<retval declared_type='id' type='@'/>
</method>
<method selector='previewItemTitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='previewItemURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='previewPanel:handleEvent:'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<arg declared_type='NSEvent*' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='previewPanel:previewItemAtIndex:'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='previewPanel:sourceFrameOnScreenForPreviewItem:'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<arg declared_type='id' index='1' name='item' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='previewPanel:transitionImageForPreviewItem:contentRect:'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<arg declared_type='id' index='1' name='item' type='@'/>
<arg declared_type='NSRect*' index='2' name='contentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='QLPreviewPanel'>
<method selector='currentController'>
<retval declared_type='id' type='@'/>
</method>
<method selector='currentPreviewItem'>
<retval declared_type='id' type='@'/>
</method>
<method selector='currentPreviewItemIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='displayState'>
<retval declared_type='id' type='@'/>
</method>
<method selector='enterFullScreenMode:withOptions:'>
<arg declared_type='NSScreen*' index='0' name='screen' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='exitFullScreenModeWithOptions:'>
<arg declared_type='NSDictionary*' index='0' name='options' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isInFullScreenMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='refreshCurrentPreviewItem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentPreviewItemIndex:'>
<arg declared_type='NSInteger' index='0' name='currentPreviewItemIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayState:'>
<arg declared_type='id' index='0' name='displayState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedPreviewPanel'>
<retval declared_type='QLPreviewPanel*' type='@'/>
</method>
<method class_method='true' selector='sharedPreviewPanelExists'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateController'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='QLPreviewView'>
<method selector='autostarts'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayState'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:style:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='QLPreviewViewStyle' index='1' name='style' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='previewItem'>
<retval declared_type='id' type='@'/>
</method>
<method selector='refreshPreviewItem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutostarts:'>
<arg declared_type='BOOL' index='0' name='autostarts' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayState:'>
<arg declared_type='id' index='0' name='displayState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreviewItem:'>
<arg declared_type='id' index='0' name='previewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCloseWithWindow:'>
<arg declared_type='BOOL' index='0' name='shouldCloseWithWindow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldCloseWithWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<informal_protocol name='QLPreviewItem'>
<method selector='previewItemDisplayState' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id' type='@'/>
</method>
<method selector='previewItemTitle' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='previewItemURL' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSURL*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='QLPreviewPanelController'>
<method selector='acceptsPreviewPanelControl:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginPreviewPanelControl:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endPreviewPanelControl:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='QLPreviewPanelDataSource'>
<method selector='numberOfPreviewItemsInPreviewPanel:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='previewPanel:previewItemAtIndex:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='QLPreviewPanelDelegate'>
<method selector='previewPanel:handleEvent:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<arg declared_type='NSEvent*' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='previewPanel:sourceFrameOnScreenForPreviewItem:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8@12' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<arg declared_type='id' index='1' name='item' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='previewPanel:transitionImageForPreviewItem:contentRect:' type='@20@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='@40@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='QLPreviewPanel*' index='0' name='panel' type='@'/>
<arg declared_type='id' index='1' name='item' type='@'/>
<arg declared_type='NSRect*' index='2' name='contentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
</signatures>
