<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreMedia.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/AudioUnit.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/MediaToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/VideoToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreMediaIO.framework'/>
<depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<struct name='AVEdgeWidths' type='{_AVEdgeWidths=&quot;left&quot;f&quot;top&quot;f&quot;right&quot;f&quot;bottom&quot;f}' type64='{_AVEdgeWidths=&quot;left&quot;d&quot;top&quot;d&quot;right&quot;d&quot;bottom&quot;d}'>
<field declared_type='CGFloat' name='left' type='f' type64='d'/>
<field declared_type='CGFloat' name='top' type='f' type64='d'/>
<field declared_type='CGFloat' name='right' type='f' type64='d'/>
<field declared_type='CGFloat' name='bottom' type='f' type64='d'/>
</struct>
<struct name='AVPixelAspectRatio' type='{_AVPixelAspectRatio=&quot;horizontalSpacing&quot;i&quot;verticalSpacing&quot;i}' type64='{_AVPixelAspectRatio=&quot;horizontalSpacing&quot;q&quot;verticalSpacing&quot;q}'>
<field declared_type='NSInteger' name='horizontalSpacing' type='i' type64='q'/>
<field declared_type='NSInteger' name='verticalSpacing' type='i' type64='q'/>
</struct>
<constant const='true' declared_type='NSString*' name='AVAssetExportPreset1280x720' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPreset1920x1080' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPreset640x480' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPreset960x540' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleM4A' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleM4V1080pHD' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleM4V480pSD' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleM4V720pHD' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleM4VAppleTV' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleM4VCellular' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleM4VWiFi' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleM4ViPod' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetAppleProRes422LPCM' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetExportPresetPassthrough' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetImageGeneratorApertureModeCleanAperture' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetImageGeneratorApertureModeEncodedPixels' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAssetImageGeneratorApertureModeProductionAperture' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_Constant' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_LongTermAverage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_Variable' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioBitRateStrategy_VariableConstrained' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioTimePitchAlgorithmSpectral' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioTimePitchAlgorithmTimeDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='AVAudioTimePitchAlgorithmVarispeed' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureDeviceWasConnectedNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureDeviceWasDisconnectedNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureInputPortFormatDescriptionDidChangeNotification' type='@'/>
<constant const='true' declared_type='float' name='AVCaptureMaxAvailableTorchLevel' type='f'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionDidStartRunningNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionDidStopRunningNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPreset1280x720' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPreset320x240' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPreset352x288' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPreset640x480' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPreset960x540' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPresetHigh' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPresetLow' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPresetMedium' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPresetPhoto' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPresetiFrame1280x720' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionPresetiFrame960x540' type='@'/>
<constant const='true' declared_type='NSString*' name='AVCaptureSessionRuntimeErrorNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVChannelLayoutKey' type='@'/>
<constant const='true' declared_type='CFTimeInterval' name='AVCoreAnimationBeginTimeAtZero' type='d'/>
<constant const='true' declared_type='NSString*' name='AVEncoderAudioQualityForVBRKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderAudioQualityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitDepthHintKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRateKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRatePerChannelKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVEncoderBitRateStrategyKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVErrorDeviceKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVErrorDiscontinuityFlagsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVErrorFileSizeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVErrorMediaSubTypeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVErrorMediaTypeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVErrorPIDKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVErrorRecordingSuccessfullyFinishedKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVErrorTimeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeAC3' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeAIFC' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeAIFF' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeAMR' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeAppleM4A' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeAppleM4V' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeCoreAudioFormat' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeMPEG4' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeMPEGLayer3' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeQuickTimeMovie' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeSunAU' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFileTypeWAVE' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFormatIDKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVFoundationErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLayerVideoGravityResize' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLayerVideoGravityResizeAspect' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLayerVideoGravityResizeAspectFill' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMBitDepthKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsBigEndianKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsFloatKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVLinearPCMIsNonInterleaved' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicAudible' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicContainsOnlyForcedSubtitles' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicDescribesMusicAndSoundForAccessibility' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicDescribesVideoForAccessibility' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicEasyToRead' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicFrameBased' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicIsAuxiliaryContent' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicIsMainProgramContent' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicLegible' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicTranscribesSpokenDialogForAccessibility' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaCharacteristicVisual' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaTypeAudio' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaTypeClosedCaption' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaTypeMetadata' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaTypeMuxed' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaTypeSubtitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaTypeText' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaTypeTimecode' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMediaTypeVideo' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyAlbumAndTrack' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyAuthor' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyCollection' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyCopyright' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyGenre' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyKeywordList' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyLocation' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyMediaClassification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyMediaRating' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyPerformer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyRecordingYear' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyThumbnail' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadata3GPUserDataKeyUserRating' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyAlbumName' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyArtwork' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyAuthor' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyContributor' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyCopyrights' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyCreationDate' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyCreator' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyFormat' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyLanguage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyLastModifiedDate' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyLocation' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyMake' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyModel' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyPublisher' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyRelation' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeySoftware' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeySource' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeySubject' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataCommonKeyType' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataFormatID3Metadata' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataFormatISOUserData' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataFormatQuickTimeMetadata' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataFormatQuickTimeUserData' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataFormatiTunesMetadata' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyAlbumSortOrder' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyAlbumTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyAttachedPicture' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyAudioEncryption' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyAudioSeekPointIndex' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyBand' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyBeatsPerMinute' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyComments' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyCommercialInformation' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyCommerical' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyComposer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyConductor' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyContentGroupDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyContentType' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyCopyright' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyCopyrightInformation' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyDate' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyEncodedBy' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyEncodedWith' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyEncodingTime' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyEncryption' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyEqualization' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyEqualization2' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyEventTimingCodes' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyFileOwner' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyFileType' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyGeneralEncapsulatedObject' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyGroupIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyInitialKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyInternationalStandardRecordingCode' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyInternetRadioStationName' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyInternetRadioStationOwner' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyInvolvedPeopleList_v23' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyInvolvedPeopleList_v24' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyLanguage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyLeadPerformer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyLength' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyLink' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyLyricist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyMPEGLocationLookupTable' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyMediaType' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyModifiedBy' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyMood' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyMusicCDIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyMusicianCreditsList' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOfficialArtistWebpage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOfficialAudioFileWebpage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOfficialAudioSourceWebpage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOfficialInternetRadioStationHomepage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOfficialPublisherWebpage' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOriginalAlbumTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOriginalArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOriginalFilename' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOriginalLyricist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOriginalReleaseTime' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOriginalReleaseYear' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyOwnership' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPartOfASet' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPayment' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPerformerSortOrder' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPlayCounter' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPlaylistDelay' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPopularimeter' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPositionSynchronization' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPrivate' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyProducedNotice' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyPublisher' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyRecommendedBufferSize' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyRecordingDates' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyRecordingTime' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyRelativeVolumeAdjustment' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyRelativeVolumeAdjustment2' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyReleaseTime' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyReverb' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeySeek' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeySetSubtitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeySignature' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeySize' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeySubTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeySynchronizedLyric' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeySynchronizedTempoCodes' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyTaggingTime' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyTermsOfUse' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyTime' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyTitleDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyTitleSortOrder' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyTrackNumber' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyUniqueFileIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyUnsynchronizedLyric' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyUserText' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyUserURL' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataID3MetadataKeyYear' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataISOUserDataKeyCopyright' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataKeySpaceCommon' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataKeySpaceID3' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataKeySpaceISOUserData' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataKeySpaceQuickTimeMetadata' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataKeySpaceQuickTimeUserData' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataKeySpaceiTunes' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyAlbum' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyArranger' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyArtwork' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyAuthor' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyCameraFrameReadoutTime' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyCameraIdentifier' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyCollectionUser' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyComment' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyComposer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyCopyright' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyCreationDate' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyCredits' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyDirectionFacing' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyDirectionMotion' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyDirector' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyDisplayName' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyEncodedBy' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyGenre' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyInformation' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyKeywords' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationBody' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationDate' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationISO6709' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationName' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationNote' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationRole' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyMake' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyModel' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyOriginalArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyPerformer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyPhonogramRights' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyProducer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyPublisher' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyRatingUser' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeySoftware' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyYear' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeMetadataKeyiXML' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyAlbum' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyArranger' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyAuthor' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyChapter' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyComment' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyComposer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyCopyright' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyCreationDate' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyCredits' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyDirector' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyDisclaimer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyEncodedBy' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyFullName' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyGenre' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyHostComputer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyInformation' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyKeywords' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyLocationISO6709' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyMake' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyModel' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyOriginalArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyOriginalFormat' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyOriginalSource' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyPerformers' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyPhonogramRights' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyProducer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyProduct' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyPublisher' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeySoftware' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeySpecialPlaybackRequirements' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyTaggedCharacteristic' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyTrack' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyTrackName' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyURLLink' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyWarning' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataQuickTimeUserDataKeyWriter' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyAccountKind' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyAcknowledgement' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyAlbum' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyAlbumArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyAppleID' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyArranger' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyArtDirector' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyArtistID' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyAuthor' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyBeatsPerMin' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyComposer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyConductor' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyContentRating' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyCopyright' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyCoverArt' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyCredits' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyDescription' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyDirector' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyDiscCompilation' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyDiscNumber' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyEQ' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyEncodedBy' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyEncodingTool' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyExecProducer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyGenreID' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyGrouping' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyLinerNotes' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyLyrics' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyOnlineExtras' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyOriginalArtist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyPerformer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyPhonogramRights' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyPlaylistID' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyPredefinedGenre' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyProducer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyPublisher' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyRecordCompany' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyReleaseDate' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeySoloist' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeySongID' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeySongName' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeySoundEngineer' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyThanks' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyTrackNumber' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyTrackSubTitle' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyUserComment' type='@'/>
<constant const='true' declared_type='NSString*' name='AVMetadataiTunesMetadataKeyUserGenre' type='@'/>
<constant const='true' declared_type='NSString*' name='AVNumberOfChannelsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVOutputSettingsPreset1280x720' type='@'/>
<constant const='true' declared_type='NSString*' name='AVOutputSettingsPreset1920x1080' type='@'/>
<constant const='true' declared_type='NSString*' name='AVOutputSettingsPreset640x480' type='@'/>
<constant const='true' declared_type='NSString*' name='AVOutputSettingsPreset960x540' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemDidPlayToEndTimeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemFailedToPlayToEndTimeErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemFailedToPlayToEndTimeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemLegibleOutputTextStylingResolutionDefault' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemNewAccessLogEntryNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemNewErrorLogEntryNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemPlaybackStalledNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVPlayerItemTimeJumpedNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithmKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithm_Mastering' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAlgorithm_Normal' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateConverterAudioQualityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVSampleRateKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVTrackAssociationTypeAudioFallback' type='@'/>
<constant const='true' declared_type='NSString*' name='AVTrackAssociationTypeChapterList' type='@'/>
<constant const='true' declared_type='NSString*' name='AVTrackAssociationTypeForcedSubtitlesOnly' type='@'/>
<constant const='true' declared_type='NSString*' name='AVTrackAssociationTypeSelectionFollower' type='@'/>
<constant const='true' declared_type='NSString*' name='AVTrackAssociationTypeTimecode' type='@'/>
<constant const='true' declared_type='NSString*' name='AVURLAssetPreferPreciseDurationAndTimingKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVURLAssetReferenceRestrictionsKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoAverageBitRateKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCleanApertureHeightKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCleanApertureHorizontalOffsetKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCleanApertureKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCleanApertureVerticalOffsetKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCleanApertureWidthKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCodecAppleProRes422' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCodecAppleProRes4444' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCodecH264' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCodecJPEG' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCodecKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoColorPrimariesKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoColorPrimaries_EBU_3213' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoColorPrimaries_ITU_R_709_2' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoColorPrimaries_SMPTE_C' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoColorPropertiesKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoCompressionPropertiesKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoHeightKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoMaxKeyFrameIntervalDurationKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoMaxKeyFrameIntervalKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoPixelAspectRatioHorizontalSpacingKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoPixelAspectRatioKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoPixelAspectRatioVerticalSpacingKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264Baseline30' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264Baseline31' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264Baseline41' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264BaselineAutoLevel' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264High40' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264High41' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264HighAutoLevel' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264Main30' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264Main31' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264Main32' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264Main41' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelH264MainAutoLevel' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoProfileLevelKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoQualityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoScalingModeFit' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoScalingModeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoScalingModeResize' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoScalingModeResizeAspect' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoScalingModeResizeAspectFill' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoTransferFunctionKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoTransferFunction_ITU_R_709_2' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoTransferFunction_SMPTE_240M_1995' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoWidthKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoYCbCrMatrixKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoYCbCrMatrix_ITU_R_601_4' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoYCbCrMatrix_ITU_R_709_2' type='@'/>
<constant const='true' declared_type='NSString*' name='AVVideoYCbCrMatrix_SMPTE_240M_1995' type='@'/>
<enum name='AVAssetExportSessionStatusCancelled' value='5'/>
<enum name='AVAssetExportSessionStatusCompleted' value='3'/>
<enum name='AVAssetExportSessionStatusExporting' value='2'/>
<enum name='AVAssetExportSessionStatusFailed' value='4'/>
<enum name='AVAssetExportSessionStatusUnknown' value='0'/>
<enum name='AVAssetExportSessionStatusWaiting' value='1'/>
<enum name='AVAssetImageGeneratorCancelled' value='2'/>
<enum name='AVAssetImageGeneratorFailed' value='1'/>
<enum name='AVAssetImageGeneratorSucceeded' value='0'/>
<enum name='AVAssetReaderStatusCancelled' value='4'/>
<enum name='AVAssetReaderStatusCompleted' value='2'/>
<enum name='AVAssetReaderStatusFailed' value='3'/>
<enum name='AVAssetReaderStatusReading' value='1'/>
<enum name='AVAssetReaderStatusUnknown' value='0'/>
<enum name='AVAssetReferenceRestrictionForbidAll' value='65535'/>
<enum name='AVAssetReferenceRestrictionForbidCrossSiteReference' value='4'/>
<enum name='AVAssetReferenceRestrictionForbidLocalReferenceToLocal' value='8'/>
<enum name='AVAssetReferenceRestrictionForbidLocalReferenceToRemote' value='2'/>
<enum name='AVAssetReferenceRestrictionForbidNone' value='0'/>
<enum name='AVAssetReferenceRestrictionForbidRemoteReferenceToLocal' value='1'/>
<enum name='AVAssetWriterStatusCancelled' value='4'/>
<enum name='AVAssetWriterStatusCompleted' value='2'/>
<enum name='AVAssetWriterStatusFailed' value='3'/>
<enum name='AVAssetWriterStatusUnknown' value='0'/>
<enum name='AVAssetWriterStatusWriting' value='1'/>
<enum name='AVAudioQualityHigh' value='96'/>
<enum name='AVAudioQualityLow' value='32'/>
<enum name='AVAudioQualityMax' value='127'/>
<enum name='AVAudioQualityMedium' value='64'/>
<enum name='AVAudioQualityMin' value='0'/>
<enum name='AVCaptureDevicePositionBack' value='1'/>
<enum name='AVCaptureDevicePositionFront' value='2'/>
<enum name='AVCaptureDevicePositionUnspecified' value='0'/>
<enum name='AVCaptureDeviceTransportControlsNotPlayingMode' value='0'/>
<enum name='AVCaptureDeviceTransportControlsPlayingMode' value='1'/>
<enum name='AVCaptureExposureModeAutoExpose' value='1'/>
<enum name='AVCaptureExposureModeContinuousAutoExposure' value='2'/>
<enum name='AVCaptureExposureModeLocked' value='0'/>
<enum name='AVCaptureFlashModeAuto' value='2'/>
<enum name='AVCaptureFlashModeOff' value='0'/>
<enum name='AVCaptureFlashModeOn' value='1'/>
<enum name='AVCaptureFocusModeAutoFocus' value='1'/>
<enum name='AVCaptureFocusModeContinuousAutoFocus' value='2'/>
<enum name='AVCaptureFocusModeLocked' value='0'/>
<enum name='AVCaptureTorchModeAuto' value='2'/>
<enum name='AVCaptureTorchModeOff' value='0'/>
<enum name='AVCaptureTorchModeOn' value='1'/>
<enum name='AVCaptureVideoOrientationLandscapeLeft' value='4'/>
<enum name='AVCaptureVideoOrientationLandscapeRight' value='3'/>
<enum name='AVCaptureVideoOrientationPortrait' value='1'/>
<enum name='AVCaptureVideoOrientationPortraitUpsideDown' value='2'/>
<enum name='AVCaptureWhiteBalanceModeAutoWhiteBalance' value='1'/>
<enum name='AVCaptureWhiteBalanceModeContinuousAutoWhiteBalance' value='2'/>
<enum name='AVCaptureWhiteBalanceModeLocked' value='0'/>
<enum name='AVContentAuthorizationBusy' value='4'/>
<enum name='AVContentAuthorizationCancelled' value='2'/>
<enum name='AVContentAuthorizationCompleted' value='1'/>
<enum name='AVContentAuthorizationNotAvailable' value='5'/>
<enum name='AVContentAuthorizationNotPossible' value='6'/>
<enum name='AVContentAuthorizationTimedOut' value='3'/>
<enum name='AVContentAuthorizationUnknown' value='0'/>
<enum name='AVErrorApplicationIsNotAuthorized' value='-11836'/>
<enum name='AVErrorApplicationIsNotAuthorizedToUseDevice' value='-11852'/>
<enum name='AVErrorCompositionTrackSegmentsNotContiguous' value='-11824'/>
<enum name='AVErrorContentIsNotAuthorized' value='-11835'/>
<enum name='AVErrorContentIsProtected' value='-11831'/>
<enum name='AVErrorDecodeFailed' value='-11821'/>
<enum name='AVErrorDecoderNotFound' value='-11833'/>
<enum name='AVErrorDecoderTemporarilyUnavailable' value='-11839'/>
<enum name='AVErrorDeviceAlreadyUsedByAnotherSession' value='-11804'/>
<enum name='AVErrorDeviceInUseByAnotherApplication' value='-11815'/>
<enum name='AVErrorDeviceLockedForConfigurationByAnotherProcess' value='-11817'/>
<enum name='AVErrorDeviceNotConnected' value='-11814'/>
<enum name='AVErrorDeviceWasDisconnected' value='-11808'/>
<enum name='AVErrorDiskFull' value='-11807'/>
<enum name='AVErrorDisplayWasDisabled' value='-11845'/>
<enum name='AVErrorEncoderNotFound' value='-11834'/>
<enum name='AVErrorEncoderTemporarilyUnavailable' value='-11840'/>
<enum name='AVErrorExportFailed' value='-11820'/>
<enum name='AVErrorFailedToLoadMediaData' value='-11849'/>
<enum name='AVErrorFileAlreadyExists' value='-11823'/>
<enum name='AVErrorFileFailedToParse' value='-11829'/>
<enum name='AVErrorFileFormatNotRecognized' value='-11828'/>
<enum name='AVErrorIncompatibleAsset' value='-11848'/>
<enum name='AVErrorInvalidCompositionTrackSegmentDuration' value='-11825'/>
<enum name='AVErrorInvalidCompositionTrackSegmentSourceDuration' value='-11827'/>
<enum name='AVErrorInvalidCompositionTrackSegmentSourceStartTime' value='-11826'/>
<enum name='AVErrorInvalidOutputURLPathExtension' value='-11843'/>
<enum name='AVErrorInvalidSourceMedia' value='-11822'/>
<enum name='AVErrorInvalidVideoComposition' value='-11841'/>
<enum name='AVErrorMaximumDurationReached' value='-11810'/>
<enum name='AVErrorMaximumFileSizeReached' value='-11811'/>
<enum name='AVErrorMaximumNumberOfSamplesForFileFormatReached' value='-11813'/>
<enum name='AVErrorMaximumStillImageCaptureRequestsExceeded' value='-11830'/>
<enum name='AVErrorMediaChanged' value='-11809'/>
<enum name='AVErrorMediaDiscontinuity' value='-11812'/>
<enum name='AVErrorNoDataCaptured' value='-11805'/>
<enum name='AVErrorNoImageAtTime' value='-11832'/>
<enum name='AVErrorOperationNotSupportedForAsset' value='-11838'/>
<enum name='AVErrorOutOfMemory' value='-11801'/>
<enum name='AVErrorReferenceForbiddenByReferencePolicy' value='-11842'/>
<enum name='AVErrorScreenCaptureFailed' value='-11844'/>
<enum name='AVErrorServerIncorrectlyConfigured' value='-11850'/>
<enum name='AVErrorSessionConfigurationChanged' value='-11806'/>
<enum name='AVErrorSessionNotRunning' value='-11803'/>
<enum name='AVErrorTorchLevelUnavailable' value='-11846'/>
<enum name='AVErrorUnknown' value='-11800'/>
<enum name='AVKeyValueStatusCancelled' value='4'/>
<enum name='AVKeyValueStatusFailed' value='3'/>
<enum name='AVKeyValueStatusLoaded' value='2'/>
<enum name='AVKeyValueStatusLoading' value='1'/>
<enum name='AVKeyValueStatusUnknown' value='0'/>
<enum name='AVPlayerActionAtItemEndAdvance' value='0'/>
<enum name='AVPlayerActionAtItemEndNone' value='2'/>
<enum name='AVPlayerActionAtItemEndPause' value='1'/>
<enum name='AVPlayerItemStatusFailed' value='2'/>
<enum name='AVPlayerItemStatusReadyToPlay' value='1'/>
<enum name='AVPlayerItemStatusUnknown' value='0'/>
<enum name='AVPlayerStatusFailed' value='2'/>
<enum name='AVPlayerStatusReadyToPlay' value='1'/>
<enum name='AVPlayerStatusUnknown' value='0'/>
<enum name='AVVideoFieldModeBoth' value='0'/>
<enum name='AVVideoFieldModeBottomOnly' value='2'/>
<enum name='AVVideoFieldModeDeinterlace' value='3'/>
<enum name='AVVideoFieldModeTopOnly' value='1'/>
<function name='AVMakeRectWithAspectRatioInsideRect'>
<arg declared_type='CGSize' name='aspectRatio' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='CGRect' name='boundingRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<class name='AVAsset'>
<method class_method='true' selector='assetWithURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='availableChapterLocales'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='availableMediaCharacteristicsWithMediaSelectionOptions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cancelLoading'>
<retval declared_type='void' type='v'/>
</method>
<method selector='chapterMetadataGroupsBestMatchingPreferredLanguages:'>
<arg declared_type='NSArray*' index='0' name='preferredLanguages' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:'>
<arg declared_type='NSLocale*' index='0' name='locale' type='@'/>
<arg declared_type='NSArray*' index='1' name='commonKeys' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commonMetadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='creationDate'>
<retval declared_type='AVMetadataItem*' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='hasProtectedContent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isComposable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExportable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReadable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lyrics'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mediaSelectionGroupForMediaCharacteristic:'>
<arg declared_type='NSString*' index='0' name='mediaCharacteristic' type='@'/>
<retval declared_type='AVMediaSelectionGroup*' type='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='preferredRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='preferredTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='providesPreciseDurationAndTiming'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='referenceRestrictions'>
<retval declared_type='AVAssetReferenceRestrictions' type='I' type64='Q'/>
</method>
<method selector='trackGroups'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type='CMPersistentTrackID' index='0' name='trackID' type='i'/>
<retval declared_type='AVAssetTrack*' type='@'/>
</method>
<method selector='tracks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type='NSString*' index='0' name='mediaCharacteristic' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unusedTrackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
</class>
<class name='AVAssetExportSession'>
<method class_method='true' selector='allExportPresets'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='asset'>
<retval declared_type='AVAsset*' type='@'/>
</method>
<method selector='audioMix'>
<retval declared_type='AVAudioMix*' type='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cancelExport'>
<retval declared_type='void' type='v'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:'>
<arg declared_type='NSString*' index='0' name='presetName' type='@'/>
<arg declared_type='AVAsset*' index='1' name='asset' type='@'/>
<arg declared_type='NSString*' index='2' name='outputFileType' type='@'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='3' name='handler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='determineCompatibleFileTypesWithCompletionHandler:'>
<arg declared_type='void (^)(NSArray *)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='estimatedOutputFileLength'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='exportAsynchronouslyWithCompletionHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='exportPresetsCompatibleWithAsset:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='exportSessionWithAsset:presetName:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<arg declared_type='NSString*' index='1' name='presetName' type='@'/>
<retval declared_type='AVAssetExportSession*' type='@'/>
</method>
<method selector='initWithAsset:presetName:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<arg declared_type='NSString*' index='1' name='presetName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='metadataItemFilter'>
<retval declared_type='AVMetadataItemFilter*' type='@'/>
</method>
<method selector='outputFileType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='outputURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='presetName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type='AVAudioMix*' index='0' name='audioMix' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type='NSString*' index='0' name='audioTimePitchAlgorithm' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type='NSArray*' index='0' name='metadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadataItemFilter:'>
<arg declared_type='AVMetadataItemFilter*' index='0' name='metadataItemFilter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputFileType:'>
<arg declared_type='NSString*' index='0' name='outputFileType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputURL:'>
<arg declared_type='NSURL*' index='0' name='outputURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldOptimizeForNetworkUse:'>
<arg declared_type='BOOL' index='0' name='shouldOptimizeForNetworkUse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldOptimizeForNetworkUse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='status'>
<retval declared_type='AVAssetExportSessionStatus' type='i' type64='q'/>
</method>
<method selector='supportedFileTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='timeRange'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='videoComposition'>
<retval declared_type='AVVideoComposition*' type='@'/>
</method>
</class>
<class name='AVAssetImageGenerator'>
<method selector='apertureMode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='appliesPreferredTrackTransform'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='asset'>
<retval declared_type='AVAsset*' type='@'/>
</method>
<method class_method='true' selector='assetImageGeneratorWithAsset:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<retval declared_type='AVAssetImageGenerator*' type='@'/>
</method>
<method selector='cancelAllCGImageGeneration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyCGImageAtTime:actualTime:error:'>
<arg declared_type='CMTime' index='0' name='requestedTime' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime*' index='1' name='actualTime' type='^{_CMTime=qiIq}'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type='id' type='@'/>
</method>
<method selector='generateCGImagesAsynchronouslyForTimes:completionHandler:'>
<arg declared_type='NSArray*' index='0' name='requestedTimes' type='@'/>
<arg declared_type='AVAssetImageGeneratorCompletionHandler' function_pointer='true' index='1' name='handler' type='@?'>
<arg declared_type='CMTime' type='{_CMTime=qiIq}'/>
<arg declared_type='CGImageRef' type='^{CGImage=}'/>
<arg declared_type='CMTime' type='{_CMTime=qiIq}'/>
<arg declared_type='AVAssetImageGeneratorResult' type='i' type64='q'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithAsset:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='requestedTimeToleranceAfter'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='requestedTimeToleranceBefore'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='setApertureMode:'>
<arg declared_type='NSString*' index='0' name='apertureMode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppliesPreferredTrackTransform:'>
<arg declared_type='BOOL' index='0' name='appliesPreferredTrackTransform' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumSize:'>
<arg declared_type='CGSize' index='0' name='maximumSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestedTimeToleranceAfter:'>
<arg declared_type='CMTime' index='0' name='requestedTimeToleranceAfter' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestedTimeToleranceBefore:'>
<arg declared_type='CMTime' index='0' name='requestedTimeToleranceBefore' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoComposition'>
<retval declared_type='AVVideoComposition*' type='@'/>
</method>
</class>
<class name='AVAssetReader'>
<method selector='addOutput:'>
<arg declared_type='AVAssetReaderOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='asset'>
<retval declared_type='AVAsset*' type='@'/>
</method>
<method class_method='true' selector='assetReaderWithAsset:error:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='AVAssetReader*' type='@'/>
</method>
<method selector='canAddOutput:'>
<arg declared_type='AVAssetReaderOutput*' index='0' name='output' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelReading'>
<retval declared_type='void' type='v'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithAsset:error:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='outputs'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startReading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='status'>
<retval declared_type='AVAssetReaderStatus' type='i' type64='q'/>
</method>
<method selector='timeRange'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVAssetReaderAudioMixOutput'>
<method class_method='true' selector='assetReaderAudioMixOutputWithAudioTracks:audioSettings:'>
<arg declared_type='NSArray*' index='0' name='audioTracks' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='audioSettings' type='@'/>
<retval declared_type='AVAssetReaderAudioMixOutput*' type='@'/>
</method>
<method selector='audioMix'>
<retval declared_type='AVAudioMix*' type='@'/>
</method>
<method selector='audioSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='audioTracks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithAudioTracks:audioSettings:'>
<arg declared_type='NSArray*' index='0' name='audioTracks' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='audioSettings' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type='AVAudioMix*' index='0' name='audioMix' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type='NSString*' index='0' name='audioTimePitchAlgorithm' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAssetReaderOutput'>
<method selector='alwaysCopiesSampleData'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='copyNextSampleBuffer'>
<retval declared_type='CMSampleBufferRef' type='^{opaqueCMSampleBuffer=}'/>
</method>
<method selector='mediaType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setAlwaysCopiesSampleData:'>
<arg declared_type='BOOL' index='0' name='alwaysCopiesSampleData' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAssetReaderTrackOutput'>
<method class_method='true' selector='assetReaderTrackOutputWithTrack:outputSettings:'>
<arg declared_type='AVAssetTrack*' index='0' name='track' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='outputSettings' type='@'/>
<retval declared_type='AVAssetReaderTrackOutput*' type='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithTrack:outputSettings:'>
<arg declared_type='AVAssetTrack*' index='0' name='track' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='outputSettings' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='outputSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type='NSString*' index='0' name='audioTimePitchAlgorithm' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='track'>
<retval declared_type='AVAssetTrack*' type='@'/>
</method>
</class>
<class name='AVAssetReaderVideoCompositionOutput'>
<method class_method='true' selector='assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:'>
<arg declared_type='NSArray*' index='0' name='videoTracks' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='videoSettings' type='@'/>
<retval declared_type='AVAssetReaderVideoCompositionOutput*' type='@'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithVideoTracks:videoSettings:'>
<arg declared_type='NSArray*' index='0' name='videoTracks' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='videoSettings' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoComposition'>
<retval declared_type='AVVideoComposition*' type='@'/>
</method>
<method selector='videoSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='videoTracks'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVAssetResourceLoader'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<arg declared_type='dispatch_queue_t' index='1' name='delegateQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingContentInformationRequest'>
<method selector='contentLength'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='contentType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isByteRangeAccessSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setByteRangeAccessSupported:'>
<arg declared_type='BOOL' index='0' name='byteRangeAccessSupported' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentLength:'>
<arg declared_type='long long' index='0' name='contentLength' type='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentType:'>
<arg declared_type='NSString*' index='0' name='contentType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingDataRequest'>
<method selector='currentOffset'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='requestedLength'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='requestedOffset'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='respondWithData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingRequest'>
<method selector='contentInformationRequest'>
<retval declared_type='AVAssetResourceLoadingContentInformationRequest*' type='@'/>
</method>
<method selector='dataRequest'>
<retval declared_type='AVAssetResourceLoadingDataRequest*' type='@'/>
</method>
<method selector='finishLoading'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishLoadingWithError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isCancelled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFinished'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='redirect'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='setRedirect:'>
<arg declared_type='NSURLRequest*' index='0' name='redirect' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponse:'>
<arg declared_type='NSURLResponse*' index='0' name='response' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='streamingContentKeyRequestDataForApp:contentIdentifier:options:error:'>
<arg declared_type='NSData*' index='0' name='appIdentifier' type='@'/>
<arg declared_type='NSData*' index='1' name='contentIdentifier' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
</class>
<class name='AVAssetTrack'>
<method selector='asset'>
<retval declared_type='AVAsset*' type='@'/>
</method>
<method selector='associatedTracksOfType:'>
<arg declared_type='NSString*' index='0' name='trackAssociationType' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='availableTrackAssociationTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commonMetadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='estimatedDataRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formatDescriptions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='hasMediaCharacteristic:'>
<arg declared_type='NSString*' index='0' name='mediaCharacteristic' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelfContained'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='languageCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mediaType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='naturalTimeScale'>
<retval declared_type='CMTimeScale' type='i'/>
</method>
<method selector='nominalFrameRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='preferredTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='samplePresentationTimeForTrackTime:'>
<arg declared_type='CMTime' index='0' name='trackTime' type='{_CMTime=qiIq}'/>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='segmentForTrackTime:'>
<arg declared_type='CMTime' index='0' name='trackTime' type='{_CMTime=qiIq}'/>
<retval declared_type='AVAssetTrackSegment*' type='@'/>
</method>
<method selector='segments'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='timeRange'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='totalSampleDataLength'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='trackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
</class>
<class name='AVAssetTrackGroup'>
<method selector='trackIDs'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVAssetTrackSegment'>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='timeMapping'>
<retval declared_type='CMTimeMapping' type='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
</class>
<class name='AVAssetWriter'>
<method selector='addInput:'>
<arg declared_type='AVAssetWriterInput*' index='0' name='input' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addInputGroup:'>
<arg declared_type='AVAssetWriterInputGroup*' index='0' name='inputGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='assetWriterWithURL:fileType:error:'>
<arg declared_type='NSURL*' index='0' name='outputURL' type='@'/>
<arg declared_type='NSString*' index='1' name='outputFileType' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='AVAssetWriter*' type='@'/>
</method>
<method selector='availableMediaTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='canAddInput:'>
<arg declared_type='AVAssetWriterInput*' index='0' name='input' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canAddInputGroup:'>
<arg declared_type='AVAssetWriterInputGroup*' index='0' name='inputGroup' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canApplyOutputSettings:forMediaType:'>
<arg declared_type='NSDictionary*' index='0' name='outputSettings' type='@'/>
<arg declared_type='NSString*' index='1' name='mediaType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelWriting'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endSessionAtSourceTime:'>
<arg declared_type='CMTime' index='0' name='endTime' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='finishWriting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='finishWritingWithCompletionHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithURL:fileType:error:'>
<arg declared_type='NSURL*' index='0' name='outputURL' type='@'/>
<arg declared_type='NSString*' index='1' name='outputFileType' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputGroups'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='inputs'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='movieFragmentInterval'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='movieTimeScale'>
<retval declared_type='CMTimeScale' type='i'/>
</method>
<method selector='outputFileType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='outputURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='setMetadata:'>
<arg declared_type='NSArray*' index='0' name='metadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMovieFragmentInterval:'>
<arg declared_type='CMTime' index='0' name='movieFragmentInterval' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMovieTimeScale:'>
<arg declared_type='CMTimeScale' index='0' name='movieTimeScale' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldOptimizeForNetworkUse:'>
<arg declared_type='BOOL' index='0' name='shouldOptimizeForNetworkUse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldOptimizeForNetworkUse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startSessionAtSourceTime:'>
<arg declared_type='CMTime' index='0' name='startTime' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startWriting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='status'>
<retval declared_type='AVAssetWriterStatus' type='i' type64='q'/>
</method>
</class>
<class name='AVAssetWriterInput'>
<method selector='addTrackAssociationWithTrackOfInput:type:'>
<arg declared_type='AVAssetWriterInput*' index='0' name='input' type='@'/>
<arg declared_type='NSString*' index='1' name='trackAssociationType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendSampleBuffer:'>
<arg declared_type='CMSampleBufferRef' index='0' name='sampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='assetWriterInputWithMediaType:outputSettings:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='outputSettings' type='@'/>
<retval declared_type='AVAssetWriterInput*' type='@'/>
</method>
<method class_method='true' selector='assetWriterInputWithMediaType:outputSettings:sourceFormatHint:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='outputSettings' type='@'/>
<arg declared_type='CMFormatDescriptionRef' index='2' name='sourceFormatHint' type='^{opaqueCMFormatDescription=}'/>
<retval declared_type='AVAssetWriterInput*' type='@'/>
</method>
<method selector='canAddTrackAssociationWithTrackOfInput:type:'>
<arg declared_type='AVAssetWriterInput*' index='0' name='input' type='@'/>
<arg declared_type='NSString*' index='1' name='trackAssociationType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='expectsMediaDataInRealTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithMediaType:outputSettings:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='outputSettings' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMediaType:outputSettings:sourceFormatHint:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='outputSettings' type='@'/>
<arg declared_type='CMFormatDescriptionRef' index='2' name='sourceFormatHint' type='^{opaqueCMFormatDescription=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isReadyForMoreMediaData'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='languageCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='markAsFinished'>
<retval declared_type='void' type='v'/>
</method>
<method selector='marksOutputTrackAsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mediaTimeScale'>
<retval declared_type='CMTimeScale' type='i'/>
</method>
<method selector='mediaType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='outputSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='preferredVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='requestMediaDataWhenReadyOnQueue:usingBlock:'>
<arg declared_type='dispatch_queue_t' index='0' name='queue' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpectsMediaDataInRealTime:'>
<arg declared_type='BOOL' index='0' name='expectsMediaDataInRealTime' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type='NSString*' index='0' name='extendedLanguageTag' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLanguageCode:'>
<arg declared_type='NSString*' index='0' name='languageCode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarksOutputTrackAsEnabled:'>
<arg declared_type='BOOL' index='0' name='marksOutputTrackAsEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMediaTimeScale:'>
<arg declared_type='CMTimeScale' index='0' name='mediaTimeScale' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type='NSArray*' index='0' name='metadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNaturalSize:'>
<arg declared_type='CGSize' index='0' name='naturalSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredVolume:'>
<arg declared_type='float' index='0' name='preferredVolume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceFormatHint'>
<retval declared_type='CMFormatDescriptionRef' type='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
</class>
<class name='AVAssetWriterInputGroup'>
<method class_method='true' selector='assetWriterInputGroupWithInputs:defaultInput:'>
<arg declared_type='NSArray*' index='0' name='inputs' type='@'/>
<arg declared_type='AVAssetWriterInput*' index='1' name='defaultInput' type='@'/>
<retval declared_type='AVAssetWriterInputGroup*' type='@'/>
</method>
<method selector='defaultInput'>
<retval declared_type='AVAssetWriterInput*' type='@'/>
</method>
<method selector='initWithInputs:defaultInput:'>
<arg declared_type='NSArray*' index='0' name='inputs' type='@'/>
<arg declared_type='AVAssetWriterInput*' index='1' name='defaultInput' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputs'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVAssetWriterInputPixelBufferAdaptor'>
<method selector='appendPixelBuffer:withPresentationTime:'>
<arg declared_type='CVPixelBufferRef' index='0' name='pixelBuffer' type='^{__CVBuffer=}'/>
<arg declared_type='CMTime' index='1' name='presentationTime' type='{_CMTime=qiIq}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assetWriterInput'>
<retval declared_type='AVAssetWriterInput*' type='@'/>
</method>
<method class_method='true' selector='assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:'>
<arg declared_type='AVAssetWriterInput*' index='0' name='input' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='sourcePixelBufferAttributes' type='@'/>
<retval declared_type='AVAssetWriterInputPixelBufferAdaptor*' type='@'/>
</method>
<method selector='initWithAssetWriterInput:sourcePixelBufferAttributes:'>
<arg declared_type='AVAssetWriterInput*' index='0' name='input' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='sourcePixelBufferAttributes' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pixelBufferPool'>
<retval declared_type='CVPixelBufferPoolRef' type='^{__CVPixelBufferPool=}'/>
</method>
<method selector='sourcePixelBufferAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AVAsynchronousVideoCompositionRequest'>
<method selector='compositionTime'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='finishCancelledRequest'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishWithComposedVideoFrame:'>
<arg declared_type='CVPixelBufferRef' index='0' name='composedVideoFrame' type='^{__CVBuffer=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishWithError:'>
<arg declared_type='NSError*' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderContext'>
<retval declared_type='AVVideoCompositionRenderContext*' type='@'/>
</method>
<method selector='sourceFrameByTrackID:'>
<arg declared_type='CMPersistentTrackID' index='0' name='trackID' type='i'/>
<retval declared_type='CVPixelBufferRef' type='^{__CVBuffer=}'/>
</method>
<method selector='sourceTrackIDs'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='videoCompositionInstruction'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AVAudioMix'>
<method selector='inputParameters'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVAudioMixInputParameters'>
<method selector='audioTapProcessor'>
<retval declared_type='MTAudioProcessingTapRef' type='^{opaqueMTAudioProcessingTap=}'/>
</method>
<method selector='getVolumeRampForTime:startVolume:endVolume:timeRange:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='float*' index='1' name='startVolume' type='^f'/>
<arg declared_type='float*' index='2' name='endVolume' type='^f'/>
<arg declared_type='CMTimeRange*' index='3' name='timeRange' type='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='trackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
</class>
<class name='AVAudioPlayer'>
<method selector='averagePowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I' type64='Q'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='currentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deviceCurrentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='enableRate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithContentsOfURL:fileTypeHint:error:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSString*' index='1' name='utiString' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:error:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:fileTypeHint:error:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='utiString' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfChannels'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pan'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I' type64='Q'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='play'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='playAtTime:'>
<arg declared_type='NSTimeInterval' index='0' name='time' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setCurrentTime:'>
<arg declared_type='NSTimeInterval' index='0' name='currentTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableRate:'>
<arg declared_type='BOOL' index='0' name='enableRate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg declared_type='BOOL' index='0' name='meteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg declared_type='NSInteger' index='0' name='numberOfLoops' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPan:'>
<arg declared_type='float' index='0' name='pan' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVAudioRecorder'>
<method selector='averagePowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I' type64='Q'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='currentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deleteRecording'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithURL:settings:error:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='settings' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRecording'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg declared_type='NSUInteger' index='0' name='channelNumber' type='I' type64='Q'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='prepareToRecord'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='record'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recordForDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg declared_type='BOOL' index='0' name='meteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL*' type='@'/>
</method>
</class>
<class name='AVCaptureAudioChannel'>
<method selector='averagePowerLevel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='peakHoldLevel'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVCaptureAudioDataOutput'>
<method selector='audioSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='sampleBufferCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='sampleBufferDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAudioSettings:'>
<arg declared_type='NSDictionary*' index='0' name='audioSettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleBufferDelegate:queue:'>
<arg declared_type='id' index='0' name='sampleBufferDelegate' type='@'/>
<arg declared_type='dispatch_queue_t' index='1' name='sampleBufferCallbackQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVCaptureAudioFileOutput'>
<method selector='audioSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='availableOutputFileTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setAudioSettings:'>
<arg declared_type='NSDictionary*' index='0' name='audioSettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type='NSArray*' index='0' name='metadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startRecordingToOutputFileURL:outputFileType:recordingDelegate:'>
<arg declared_type='NSURL*' index='0' name='outputFileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='fileType' type='@'/>
<arg declared_type='id' index='2' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVCaptureAudioPreviewOutput'>
<method selector='outputDeviceUniqueID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setOutputDeviceUniqueID:'>
<arg declared_type='NSString*' index='0' name='outputDeviceUniqueID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVCaptureConnection'>
<method selector='audioChannels'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='automaticallyAdjustsVideoMirroring'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='connectionWithInputPort:videoPreviewLayer:'>
<arg declared_type='AVCaptureInputPort*' index='0' name='port' type='@'/>
<arg declared_type='AVCaptureVideoPreviewLayer*' index='1' name='layer' type='@'/>
<retval declared_type='AVCaptureConnection*' type='@'/>
</method>
<method class_method='true' selector='connectionWithInputPorts:output:'>
<arg declared_type='NSArray*' index='0' name='ports' type='@'/>
<arg declared_type='AVCaptureOutput*' index='1' name='output' type='@'/>
<retval declared_type='AVCaptureConnection*' type='@'/>
</method>
<method selector='initWithInputPort:videoPreviewLayer:'>
<arg declared_type='AVCaptureInputPort*' index='0' name='port' type='@'/>
<arg declared_type='AVCaptureVideoPreviewLayer*' index='1' name='layer' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithInputPorts:output:'>
<arg declared_type='NSArray*' index='0' name='ports' type='@'/>
<arg declared_type='AVCaptureOutput*' index='1' name='output' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputPorts'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVideoFieldModeSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVideoMaxFrameDurationSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVideoMinFrameDurationSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVideoMirrored'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVideoMirroringSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVideoOrientationSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='output'>
<retval declared_type='AVCaptureOutput*' type='@'/>
</method>
<method selector='setAutomaticallyAdjustsVideoMirroring:'>
<arg declared_type='BOOL' index='0' name='automaticallyAdjustsVideoMirroring' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoFieldMode:'>
<arg declared_type='AVVideoFieldMode' index='0' name='videoFieldMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoMaxFrameDuration:'>
<arg declared_type='CMTime' index='0' name='videoMaxFrameDuration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoMinFrameDuration:'>
<arg declared_type='CMTime' index='0' name='videoMinFrameDuration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoMirrored:'>
<arg declared_type='BOOL' index='0' name='videoMirrored' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoOrientation:'>
<arg declared_type='AVCaptureVideoOrientation' index='0' name='videoOrientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoFieldMode'>
<retval declared_type='AVVideoFieldMode' type='i' type64='q'/>
</method>
<method selector='videoMaxFrameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='videoMinFrameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='videoOrientation'>
<retval declared_type='AVCaptureVideoOrientation' type='i' type64='q'/>
</method>
<method selector='videoPreviewLayer'>
<retval declared_type='AVCaptureVideoPreviewLayer*' type='@'/>
</method>
</class>
<class name='AVCaptureDevice'>
<method selector='activeFormat'>
<retval declared_type='AVCaptureDeviceFormat*' type='@'/>
</method>
<method selector='activeInputSource'>
<retval declared_type='AVCaptureDeviceInputSource*' type='@'/>
</method>
<method selector='activeVideoMaxFrameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='activeVideoMinFrameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method class_method='true' selector='defaultDeviceWithMediaType:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<retval declared_type='AVCaptureDevice*' type='@'/>
</method>
<method class_method='true' selector='deviceWithUniqueID:'>
<arg declared_type='NSString*' index='0' name='deviceUniqueID' type='@'/>
<retval declared_type='AVCaptureDevice*' type='@'/>
</method>
<method class_method='true' selector='devices'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='devicesWithMediaType:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='exposureMode'>
<retval declared_type='AVCaptureExposureMode' type='i' type64='q'/>
</method>
<method selector='exposurePointOfInterest'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='flashMode'>
<retval declared_type='AVCaptureFlashMode' type='i' type64='q'/>
</method>
<method selector='focusMode'>
<retval declared_type='AVCaptureFocusMode' type='i' type64='q'/>
</method>
<method selector='focusPointOfInterest'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='formats'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='hasFlash'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasMediaType:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasTorch'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inputSources'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='isAdjustingExposure'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAdjustingFocus'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAdjustingWhiteBalance'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isConnected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExposureModeSupported:'>
<arg declared_type='AVCaptureExposureMode' index='0' name='exposureMode' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExposurePointOfInterestSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFlashModeSupported:'>
<arg declared_type='AVCaptureFlashMode' index='0' name='flashMode' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFocusModeSupported:'>
<arg declared_type='AVCaptureFocusMode' index='0' name='focusMode' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFocusPointOfInterestSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInUseByAnotherApplication'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSuspended'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTorchModeSupported:'>
<arg declared_type='AVCaptureTorchMode' index='0' name='torchMode' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isWhiteBalanceModeSupported:'>
<arg declared_type='AVCaptureWhiteBalanceMode' index='0' name='whiteBalanceMode' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='linkedDevices'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='localizedName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lockForConfiguration:'>
<arg declared_type='NSError**' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='manufacturer'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='modelID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='position'>
<retval declared_type='AVCaptureDevicePosition' type='i' type64='q'/>
</method>
<method selector='setActiveFormat:'>
<arg declared_type='AVCaptureDeviceFormat*' index='0' name='activeFormat' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActiveInputSource:'>
<arg declared_type='AVCaptureDeviceInputSource*' index='0' name='activeInputSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActiveVideoMaxFrameDuration:'>
<arg declared_type='CMTime' index='0' name='activeVideoMaxFrameDuration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActiveVideoMinFrameDuration:'>
<arg declared_type='CMTime' index='0' name='activeVideoMinFrameDuration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExposureMode:'>
<arg declared_type='AVCaptureExposureMode' index='0' name='exposureMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExposurePointOfInterest:'>
<arg declared_type='CGPoint' index='0' name='exposurePointOfInterest' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlashMode:'>
<arg declared_type='AVCaptureFlashMode' index='0' name='flashMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusMode:'>
<arg declared_type='AVCaptureFocusMode' index='0' name='focusMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusPointOfInterest:'>
<arg declared_type='CGPoint' index='0' name='focusPointOfInterest' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTorchMode:'>
<arg declared_type='AVCaptureTorchMode' index='0' name='torchMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransportControlsPlaybackMode:speed:'>
<arg declared_type='AVCaptureDeviceTransportControlsPlaybackMode' index='0' name='mode' type='i' type64='q'/>
<arg declared_type='AVCaptureDeviceTransportControlsSpeed' index='1' name='speed' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWhiteBalanceMode:'>
<arg declared_type='AVCaptureWhiteBalanceMode' index='0' name='whiteBalanceMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportsAVCaptureSessionPreset:'>
<arg declared_type='NSString*' index='0' name='preset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='torchMode'>
<retval declared_type='AVCaptureTorchMode' type='i' type64='q'/>
</method>
<method selector='transportControlsPlaybackMode'>
<retval declared_type='AVCaptureDeviceTransportControlsPlaybackMode' type='i' type64='q'/>
</method>
<method selector='transportControlsSpeed'>
<retval declared_type='AVCaptureDeviceTransportControlsSpeed' type='f'/>
</method>
<method selector='transportControlsSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='transportType'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='uniqueID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='unlockForConfiguration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='whiteBalanceMode'>
<retval declared_type='AVCaptureWhiteBalanceMode' type='i' type64='q'/>
</method>
</class>
<class name='AVCaptureDeviceFormat'>
<method selector='formatDescription'>
<retval declared_type='CMFormatDescriptionRef' type='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='mediaType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='videoSupportedFrameRateRanges'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVCaptureDeviceInput'>
<method selector='device'>
<retval declared_type='AVCaptureDevice*' type='@'/>
</method>
<method class_method='true' selector='deviceInputWithDevice:error:'>
<arg declared_type='AVCaptureDevice*' index='0' name='device' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDevice:error:'>
<arg declared_type='AVCaptureDevice*' index='0' name='device' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AVCaptureDeviceInputSource'>
<method selector='inputSourceID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='localizedName'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='AVCaptureFileOutput'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isRecording'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRecordingPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxRecordedDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='maxRecordedFileSize'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='minFreeDiskSpaceLimit'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='outputFileURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='pauseRecording'>
<retval declared_type='void' type='v'/>
</method>
<method selector='recordedDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='recordedFileSize'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='resumeRecording'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxRecordedDuration:'>
<arg declared_type='CMTime' index='0' name='maxRecordedDuration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxRecordedFileSize:'>
<arg declared_type='int64_t' index='0' name='maxRecordedFileSize' type='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinFreeDiskSpaceLimit:'>
<arg declared_type='int64_t' index='0' name='minFreeDiskSpaceLimit' type='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startRecordingToOutputFileURL:recordingDelegate:'>
<arg declared_type='NSURL*' index='0' name='outputFileURL' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopRecording'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVCaptureInput'>
<method selector='ports'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVCaptureInputPort'>
<method selector='clock'>
<retval declared_type='CMClockRef' type='^{OpaqueCMClock=}'/>
</method>
<method selector='formatDescription'>
<retval declared_type='CMFormatDescriptionRef' type='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='input'>
<retval declared_type='AVCaptureInput*' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mediaType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVCaptureMovieFileOutput'>
<method selector='metadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='movieFragmentInterval'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='outputSettingsForConnection:'>
<arg declared_type='AVCaptureConnection*' index='0' name='connection' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setMetadata:'>
<arg declared_type='NSArray*' index='0' name='metadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMovieFragmentInterval:'>
<arg declared_type='CMTime' index='0' name='movieFragmentInterval' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputSettings:forConnection:'>
<arg declared_type='NSDictionary*' index='0' name='outputSettings' type='@'/>
<arg declared_type='AVCaptureConnection*' index='1' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVCaptureOutput'>
<method selector='connectionWithMediaType:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<retval declared_type='AVCaptureConnection*' type='@'/>
</method>
<method selector='connections'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVCaptureScreenInput'>
<method selector='capturesCursor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='capturesMouseClicks'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cropRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithDisplayID:'>
<arg declared_type='CGDirectDisplayID' index='0' name='displayID' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='minFrameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='removesDuplicateFrames'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setCapturesCursor:'>
<arg declared_type='BOOL' index='0' name='capturesCursor' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCapturesMouseClicks:'>
<arg declared_type='BOOL' index='0' name='capturesMouseClicks' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCropRect:'>
<arg declared_type='CGRect' index='0' name='cropRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinFrameDuration:'>
<arg declared_type='CMTime' index='0' name='minFrameDuration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemovesDuplicateFrames:'>
<arg declared_type='BOOL' index='0' name='removesDuplicateFrames' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleFactor:'>
<arg declared_type='CGFloat' index='0' name='scaleFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVCaptureSession'>
<method selector='addConnection:'>
<arg declared_type='AVCaptureConnection*' index='0' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addInput:'>
<arg declared_type='AVCaptureInput*' index='0' name='input' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addInputWithNoConnections:'>
<arg declared_type='AVCaptureInput*' index='0' name='input' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addOutput:'>
<arg declared_type='AVCaptureOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addOutputWithNoConnections:'>
<arg declared_type='AVCaptureOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginConfiguration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='canAddConnection:'>
<arg declared_type='AVCaptureConnection*' index='0' name='connection' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canAddInput:'>
<arg declared_type='AVCaptureInput*' index='0' name='input' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canAddOutput:'>
<arg declared_type='AVCaptureOutput*' index='0' name='output' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canSetSessionPreset:'>
<arg declared_type='NSString*' index='0' name='preset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitConfiguration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputs'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='masterClock'>
<retval declared_type='CMClockRef' type='^{OpaqueCMClock=}'/>
</method>
<method selector='outputs'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeConnection:'>
<arg declared_type='AVCaptureConnection*' index='0' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeInput:'>
<arg declared_type='AVCaptureInput*' index='0' name='input' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeOutput:'>
<arg declared_type='AVCaptureOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sessionPreset'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setSessionPreset:'>
<arg declared_type='NSString*' index='0' name='sessionPreset' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startRunning'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopRunning'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVCaptureStillImageOutput'>
<method selector='availableImageDataCVPixelFormatTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='availableImageDataCodecTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='captureStillImageAsynchronouslyFromConnection:completionHandler:'>
<arg declared_type='AVCaptureConnection*' index='0' name='connection' type='@'/>
<arg declared_type='void (^)(CMSampleBufferRef, NSError *)' function_pointer='true' index='1' name='handler' type='@?'>
<arg declared_type='CMSampleBufferRef' type='^{opaqueCMSampleBuffer=}'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='isCapturingStillImage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='jpegStillImageNSDataRepresentation:'>
<arg declared_type='CMSampleBufferRef' index='0' name='jpegSampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='outputSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setOutputSettings:'>
<arg declared_type='NSDictionary*' index='0' name='outputSettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVCaptureVideoDataOutput'>
<method selector='alwaysDiscardsLateVideoFrames'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='availableVideoCVPixelFormatTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='availableVideoCodecTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sampleBufferCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='sampleBufferDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAlwaysDiscardsLateVideoFrames:'>
<arg declared_type='BOOL' index='0' name='alwaysDiscardsLateVideoFrames' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleBufferDelegate:queue:'>
<arg declared_type='id' index='0' name='sampleBufferDelegate' type='@'/>
<arg declared_type='dispatch_queue_t' index='1' name='sampleBufferCallbackQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoSettings:'>
<arg declared_type='NSDictionary*' index='0' name='videoSettings' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AVCaptureVideoPreviewLayer'>
<method selector='connection'>
<retval declared_type='AVCaptureConnection*' type='@'/>
</method>
<method selector='initWithSession:'>
<arg declared_type='AVCaptureSession*' index='0' name='session' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithSessionWithNoConnection:'>
<arg declared_type='AVCaptureSession*' index='0' name='session' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='layerWithSession:'>
<arg declared_type='AVCaptureSession*' index='0' name='session' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='layerWithSessionWithNoConnection:'>
<arg declared_type='AVCaptureSession*' index='0' name='session' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='session'>
<retval declared_type='AVCaptureSession*' type='@'/>
</method>
<method selector='setSession:'>
<arg declared_type='AVCaptureSession*' index='0' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionWithNoConnection:'>
<arg declared_type='AVCaptureSession*' index='0' name='session' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoGravity:'>
<arg declared_type='NSString*' index='0' name='videoGravity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoGravity'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='AVComposition'>
<method selector='naturalSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='tracks'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVCompositionTrack'>
<method selector='segments'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVCompositionTrackSegment'>
<method class_method='true' selector='compositionTrackSegmentWithTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='AVCompositionTrackSegment*' type='@'/>
</method>
<method class_method='true' selector='compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='CMPersistentTrackID' index='1' name='trackID' type='i'/>
<arg declared_type='CMTimeRange' index='2' name='sourceTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type='CMTimeRange' index='3' name='targetTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='AVCompositionTrackSegment*' type='@'/>
</method>
<method selector='initWithTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:trackID:sourceTimeRange:targetTimeRange:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='CMPersistentTrackID' index='1' name='trackID' type='i'/>
<arg declared_type='CMTimeRange' index='2' name='sourceTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type='CMTimeRange' index='3' name='targetTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sourceTrackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
<method selector='sourceURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
</class>
<class name='AVFrameRateRange'>
<method selector='maxFrameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='maxFrameRate'>
<retval declared_type='Float64' type='d'/>
</method>
<method selector='minFrameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='minFrameRate'>
<retval declared_type='Float64' type='d'/>
</method>
</class>
<class name='AVMediaSelectionGroup'>
<method selector='allowsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mediaSelectionOptionWithPropertyList:'>
<arg declared_type='id' index='0' name='plist' type='@'/>
<retval declared_type='AVMediaSelectionOption*' type='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:'>
<arg declared_type='NSArray*' index='0' name='mediaSelectionOptions' type='@'/>
<arg declared_type='NSArray*' index='1' name='preferredLanguages' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withLocale:'>
<arg declared_type='NSArray*' index='0' name='mediaSelectionOptions' type='@'/>
<arg declared_type='NSLocale*' index='1' name='locale' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withMediaCharacteristics:'>
<arg declared_type='NSArray*' index='0' name='mediaSelectionOptions' type='@'/>
<arg declared_type='NSArray*' index='1' name='mediaCharacteristics' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withoutMediaCharacteristics:'>
<arg declared_type='NSArray*' index='0' name='mediaSelectionOptions' type='@'/>
<arg declared_type='NSArray*' index='1' name='mediaCharacteristics' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='options'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='playableMediaSelectionOptionsFromArray:'>
<arg declared_type='NSArray*' index='0' name='mediaSelectionOptions' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVMediaSelectionOption'>
<method selector='associatedMediaSelectionOptionInMediaSelectionGroup:'>
<arg declared_type='AVMediaSelectionGroup*' index='0' name='mediaSelectionGroup' type='@'/>
<retval declared_type='AVMediaSelectionOption*' type='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commonMetadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='displayName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='displayNameWithLocale:'>
<arg declared_type='NSLocale*' index='0' name='locale' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasMediaCharacteristic:'>
<arg declared_type='NSString*' index='0' name='mediaCharacteristic' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method selector='mediaSubTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mediaType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='propertyList'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AVMetadataItem'>
<method selector='commonKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dataValue'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dateValue'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='extraAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='key'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keySpace'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:'>
<arg declared_type='NSArray*' index='0' name='keys' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:'>
<arg declared_type='NSArray*' index='0' name='metadataItems' type='@'/>
<arg declared_type='NSArray*' index='1' name='preferredLanguages' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:filteredByMetadataItemFilter:'>
<arg declared_type='NSArray*' index='0' name='metadataItems' type='@'/>
<arg declared_type='AVMetadataItemFilter*' index='1' name='metadataItemFilter' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:withKey:keySpace:'>
<arg declared_type='NSArray*' index='0' name='metadataItems' type='@'/>
<arg declared_type='id' index='1' name='key' type='@'/>
<arg declared_type='NSString*' index='2' name='keySpace' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:withLocale:'>
<arg declared_type='NSArray*' index='0' name='metadataItems' type='@'/>
<arg declared_type='NSLocale*' index='1' name='locale' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='numberValue'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='statusOfValueForKey:error:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='AVKeyValueStatus' type='i' type64='q'/>
</method>
<method selector='stringValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='time'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AVMetadataItemFilter'>
<method class_method='true' selector='metadataItemFilterForSharing'>
<retval declared_type='AVMetadataItemFilter*' type='@'/>
</method>
</class>
<class name='AVMutableAudioMix'>
<method class_method='true' selector='audioMix'>
<retval declared_type='AVMutableAudioMix*' type='@'/>
</method>
<method selector='inputParameters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setInputParameters:'>
<arg declared_type='NSArray*' index='0' name='inputParameters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVMutableAudioMixInputParameters'>
<method class_method='true' selector='audioMixInputParameters'>
<retval declared_type='AVMutableAudioMixInputParameters*' type='@'/>
</method>
<method class_method='true' selector='audioMixInputParametersWithTrack:'>
<arg declared_type='AVAssetTrack*' index='0' name='track' type='@'/>
<retval declared_type='AVMutableAudioMixInputParameters*' type='@'/>
</method>
<method selector='audioTapProcessor'>
<retval declared_type='MTAudioProcessingTapRef' type='^{opaqueMTAudioProcessingTap=}'/>
</method>
<method selector='setAudioTapProcessor:'>
<arg declared_type='MTAudioProcessingTapRef' index='0' name='audioTapProcessor' type='^{opaqueMTAudioProcessingTap=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackID:'>
<arg declared_type='CMPersistentTrackID' index='0' name='trackID' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:atTime:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<arg declared_type='CMTime' index='1' name='time' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolumeRampFromStartVolume:toEndVolume:timeRange:'>
<arg declared_type='float' index='0' name='startVolume' type='f'/>
<arg declared_type='float' index='1' name='endVolume' type='f'/>
<arg declared_type='CMTimeRange' index='2' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
</class>
<class name='AVMutableComposition'>
<method selector='addMutableTrackWithMediaType:preferredTrackID:'>
<arg declared_type='NSString*' index='0' name='mediaType' type='@'/>
<arg declared_type='CMPersistentTrackID' index='1' name='preferredTrackID' type='i'/>
<retval declared_type='AVMutableCompositionTrack*' type='@'/>
</method>
<method class_method='true' selector='composition'>
<retval declared_type='AVMutableComposition*' type='@'/>
</method>
<method selector='insertEmptyTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertTimeRange:ofAsset:atTime:error:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type='AVAsset*' index='1' name='asset' type='@'/>
<arg declared_type='CMTime' index='2' name='startTime' type='{_CMTime=qiIq}'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mutableTrackCompatibleWithTrack:'>
<arg declared_type='AVAssetTrack*' index='0' name='track' type='@'/>
<retval declared_type='AVMutableCompositionTrack*' type='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='removeTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTrack:'>
<arg declared_type='AVCompositionTrack*' index='0' name='track' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleTimeRange:toDuration:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type='CMTime' index='1' name='duration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNaturalSize:'>
<arg declared_type='CGSize' index='0' name='naturalSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tracks'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVMutableCompositionTrack'>
<method selector='extendedLanguageTag'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='insertEmptyTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertTimeRange:ofTrack:atTime:error:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type='AVAssetTrack*' index='1' name='track' type='@'/>
<arg declared_type='CMTime' index='2' name='startTime' type='{_CMTime=qiIq}'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='insertTimeRanges:ofTracks:atTime:error:'>
<arg declared_type='NSArray*' index='0' name='timeRanges' type='@'/>
<arg declared_type='NSArray*' index='1' name='tracks' type='@'/>
<arg declared_type='CMTime' index='2' name='startTime' type='{_CMTime=qiIq}'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='languageCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='naturalTimeScale'>
<retval declared_type='CMTimeScale' type='i'/>
</method>
<method selector='preferredTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='removeTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleTimeRange:toDuration:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type='CMTime' index='1' name='duration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='segments'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type='NSString*' index='0' name='extendedLanguageTag' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLanguageCode:'>
<arg declared_type='NSString*' index='0' name='languageCode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNaturalTimeScale:'>
<arg declared_type='CMTimeScale' index='0' name='naturalTimeScale' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredTransform:'>
<arg declared_type='CGAffineTransform' index='0' name='preferredTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredVolume:'>
<arg declared_type='float' index='0' name='preferredVolume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSegments:'>
<arg declared_type='NSArray*' index='0' name='segments' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validateTrackSegments:error:'>
<arg declared_type='NSArray*' index='0' name='trackSegments' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVMutableMetadataItem'>
<method selector='duration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='extraAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='key'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keySpace'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method class_method='true' selector='metadataItem'>
<retval declared_type='AVMutableMetadataItem*' type='@'/>
</method>
<method selector='setDuration:'>
<arg declared_type='CMTime' index='0' name='duration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtraAttributes:'>
<arg declared_type='NSDictionary*' index='0' name='extraAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='id' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeySpace:'>
<arg declared_type='NSString*' index='0' name='keySpace' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type='NSLocale*' index='0' name='locale' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTime:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='time'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AVMutableTimedMetadataGroup'>
<method selector='items'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setItems:'>
<arg declared_type='NSArray*' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeRange'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVMutableVideoComposition'>
<method selector='animationTool'>
<retval declared_type='AVVideoCompositionCoreAnimationTool*' type='@'/>
</method>
<method selector='customVideoCompositorClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='frameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='instructions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='renderSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='setAnimationTool:'>
<arg declared_type='AVVideoCompositionCoreAnimationTool*' index='0' name='animationTool' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomVideoCompositorClass:'>
<arg declared_type='Class' index='0' name='customVideoCompositorClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameDuration:'>
<arg declared_type='CMTime' index='0' name='frameDuration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInstructions:'>
<arg declared_type='NSArray*' index='0' name='instructions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRenderSize:'>
<arg declared_type='CGSize' index='0' name='renderSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='videoComposition'>
<retval declared_type='AVMutableVideoComposition*' type='@'/>
</method>
<method class_method='true' selector='videoCompositionWithPropertiesOfAsset:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<retval declared_type='AVMutableVideoComposition*' type='@'/>
</method>
</class>
<class name='AVMutableVideoCompositionInstruction'>
<method selector='backgroundColor'>
<retval declared_type='CGColorRef' type='^{CGColor=}'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layerInstructions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='CGColorRef' index='0' name='backgroundColor' type='^{CGColor=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnablePostProcessing:'>
<arg declared_type='BOOL' index='0' name='enablePostProcessing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerInstructions:'>
<arg declared_type='NSArray*' index='0' name='layerInstructions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeRange'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method class_method='true' selector='videoCompositionInstruction'>
<retval declared_type='AVMutableVideoCompositionInstruction*' type='@'/>
</method>
</class>
<class name='AVMutableVideoCompositionLayerInstruction'>
<method selector='setCropRectangle:atTime:'>
<arg declared_type='CGRect' index='0' name='cropRectangle' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CMTime' index='1' name='time' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:'>
<arg declared_type='CGRect' index='0' name='startCropRectangle' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect' index='1' name='endCropRectangle' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CMTimeRange' index='2' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:atTime:'>
<arg declared_type='float' index='0' name='opacity' type='f'/>
<arg declared_type='CMTime' index='1' name='time' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacityRampFromStartOpacity:toEndOpacity:timeRange:'>
<arg declared_type='float' index='0' name='startOpacity' type='f'/>
<arg declared_type='float' index='1' name='endOpacity' type='f'/>
<arg declared_type='CMTimeRange' index='2' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackID:'>
<arg declared_type='CMPersistentTrackID' index='0' name='trackID' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:atTime:'>
<arg declared_type='CGAffineTransform' index='0' name='transform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type='CMTime' index='1' name='time' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransformRampFromStartTransform:toEndTransform:timeRange:'>
<arg declared_type='CGAffineTransform' index='0' name='startTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type='CGAffineTransform' index='1' name='endTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type='CMTimeRange' index='2' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
<method class_method='true' selector='videoCompositionLayerInstruction'>
<retval declared_type='AVMutableVideoCompositionLayerInstruction*' type='@'/>
</method>
<method class_method='true' selector='videoCompositionLayerInstructionWithAssetTrack:'>
<arg declared_type='AVAssetTrack*' index='0' name='track' type='@'/>
<retval declared_type='AVMutableVideoCompositionLayerInstruction*' type='@'/>
</method>
</class>
<class name='AVOutputSettingsAssistant'>
<method selector='audioSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='outputFileType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='outputSettingsAssistantWithPreset:'>
<arg declared_type='NSString*' index='0' name='presetIdentifier' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='setSourceAudioFormat:'>
<arg declared_type='CMAudioFormatDescriptionRef' index='0' name='sourceAudioFormat' type='^{opaqueCMFormatDescription=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceVideoAverageFrameDuration:'>
<arg declared_type='CMTime' index='0' name='sourceVideoAverageFrameDuration' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceVideoFormat:'>
<arg declared_type='CMVideoFormatDescriptionRef' index='0' name='sourceVideoFormat' type='^{opaqueCMFormatDescription=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceAudioFormat'>
<retval declared_type='CMAudioFormatDescriptionRef' type='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='sourceVideoAverageFrameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='sourceVideoFormat'>
<retval declared_type='CMVideoFormatDescriptionRef' type='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='videoSettings'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AVPlayer'>
<method selector='actionAtItemEnd'>
<retval declared_type='AVPlayerActionAtItemEnd' type='i' type64='q'/>
</method>
<method selector='addBoundaryTimeObserverForTimes:queue:usingBlock:'>
<arg declared_type='NSArray*' index='0' name='times' type='@'/>
<arg declared_type='dispatch_queue_t' index='1' name='queue' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='2' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='addPeriodicTimeObserverForInterval:queue:usingBlock:'>
<arg declared_type='CMTime' index='0' name='interval' type='{_CMTime=qiIq}'/>
<arg declared_type='dispatch_queue_t' index='1' name='queue' type='@'/>
<arg declared_type='void (^)(CMTime)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='CMTime' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='appliesMediaSelectionCriteriaAutomatically'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='audioOutputDeviceUniqueID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cancelPendingPrerolls'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentItem'>
<retval declared_type='AVPlayerItem*' type='@'/>
</method>
<method selector='currentTime'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithPlayerItem:'>
<arg declared_type='AVPlayerItem*' index='0' name='item' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClosedCaptionDisplayEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMuted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='masterClock'>
<retval declared_type='CMClockRef' type='^{OpaqueCMClock=}'/>
</method>
<method selector='mediaSelectionCriteriaForMediaCharacteristic:'>
<arg declared_type='NSString*' index='0' name='mediaCharacteristic' type='@'/>
<retval declared_type='AVPlayerMediaSelectionCriteria*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='play'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='playerWithPlayerItem:'>
<arg declared_type='AVPlayerItem*' index='0' name='item' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='playerWithURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='prerollAtRate:completionHandler:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='removeTimeObserver:'>
<arg declared_type='id' index='0' name='observer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceCurrentItemWithPlayerItem:'>
<arg declared_type='AVPlayerItem*' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToDate:completionHandler:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToTime:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToTime:completionHandler:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='1' name='toleranceBefore' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='2' name='toleranceAfter' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:completionHandler:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='1' name='toleranceBefore' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='2' name='toleranceAfter' type='{_CMTime=qiIq}'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActionAtItemEnd:'>
<arg declared_type='AVPlayerActionAtItemEnd' index='0' name='actionAtItemEnd' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppliesMediaSelectionCriteriaAutomatically:'>
<arg declared_type='BOOL' index='0' name='appliesMediaSelectionCriteriaAutomatically' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAudioOutputDeviceUniqueID:'>
<arg declared_type='NSString*' index='0' name='audioOutputDeviceUniqueID' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClosedCaptionDisplayEnabled:'>
<arg declared_type='BOOL' index='0' name='closedCaptionDisplayEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMasterClock:'>
<arg declared_type='CMClockRef' index='0' name='masterClock' type='^{OpaqueCMClock=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMediaSelectionCriteria:forMediaCharacteristic:'>
<arg declared_type='AVPlayerMediaSelectionCriteria*' index='0' name='criteria' type='@'/>
<arg declared_type='NSString*' index='1' name='mediaCharacteristic' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMuted:'>
<arg declared_type='BOOL' index='0' name='muted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRate:time:atHostTime:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<arg declared_type='CMTime' index='1' name='itemTime' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='2' name='hostClockTime' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='status'>
<retval declared_type='AVPlayerStatus' type='i' type64='q'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVPlayerItem'>
<method selector='accessLog'>
<retval declared_type='AVPlayerItemAccessLog*' type='@'/>
</method>
<method selector='addOutput:'>
<arg declared_type='AVPlayerItemOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='asset'>
<retval declared_type='AVAsset*' type='@'/>
</method>
<method selector='audioMix'>
<retval declared_type='AVAudioMix*' type='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='automaticallyLoadedAssetKeys'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='canPlayFastForward'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPlayFastReverse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPlayReverse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPlaySlowForward'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPlaySlowReverse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canStepBackward'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canStepForward'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelContentAuthorizationRequest'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelPendingSeeks'>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentAuthorizationRequestStatus'>
<retval declared_type='AVContentAuthorizationStatus' type='i' type64='q'/>
</method>
<method selector='currentDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='currentTime'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type='id' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='errorLog'>
<retval declared_type='AVPlayerItemErrorLog*' type='@'/>
</method>
<method selector='forwardPlaybackEndTime'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='initWithAsset:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithAsset:automaticallyLoadedAssetKeys:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<arg declared_type='NSArray*' index='1' name='automaticallyLoadedAssetKeys' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isApplicationAuthorizedForPlayback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAuthorizationRequiredForPlayback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isContentAuthorizedForPlayback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaybackBufferEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaybackBufferFull'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaybackLikelyToKeepUp'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadedTimeRanges'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='outputs'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='playerItemWithAsset:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<retval declared_type='AVPlayerItem*' type='@'/>
</method>
<method class_method='true' selector='playerItemWithAsset:automaticallyLoadedAssetKeys:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<arg declared_type='NSArray*' index='1' name='automaticallyLoadedAssetKeys' type='@'/>
<retval declared_type='AVPlayerItem*' type='@'/>
</method>
<method class_method='true' selector='playerItemWithURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='AVPlayerItem*' type='@'/>
</method>
<method selector='presentationSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='removeOutput:'>
<arg declared_type='AVPlayerItemOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestContentAuthorizationAsynchronouslyWithTimeoutInterval:completionHandler:'>
<arg declared_type='NSTimeInterval' index='0' name='timeoutInterval' type='d'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='reversePlaybackEndTime'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='seekToDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='seekToDate:completionHandler:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='seekToTime:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToTime:completionHandler:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='1' name='toleranceBefore' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='2' name='toleranceAfter' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:completionHandler:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='1' name='toleranceBefore' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime' index='2' name='toleranceAfter' type='{_CMTime=qiIq}'/>
<arg declared_type='void (^)(BOOL)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='seekableTimeRanges'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='seekingWaitsForVideoCompositionRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectMediaOption:inMediaSelectionGroup:'>
<arg declared_type='AVMediaSelectionOption*' index='0' name='mediaSelectionOption' type='@'/>
<arg declared_type='AVMediaSelectionGroup*' index='1' name='mediaSelectionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectMediaOptionAutomaticallyInMediaSelectionGroup:'>
<arg declared_type='AVMediaSelectionGroup*' index='0' name='mediaSelectionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedMediaOptionInMediaSelectionGroup:'>
<arg declared_type='AVMediaSelectionGroup*' index='0' name='mediaSelectionGroup' type='@'/>
<retval declared_type='AVMediaSelectionOption*' type='@'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type='AVAudioMix*' index='0' name='audioMix' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type='NSString*' index='0' name='audioTimePitchAlgorithm' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForwardPlaybackEndTime:'>
<arg declared_type='CMTime' index='0' name='forwardPlaybackEndTime' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReversePlaybackEndTime:'>
<arg declared_type='CMTime' index='0' name='reversePlaybackEndTime' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeekingWaitsForVideoCompositionRendering:'>
<arg declared_type='BOOL' index='0' name='seekingWaitsForVideoCompositionRendering' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextStyleRules:'>
<arg declared_type='NSArray*' index='0' name='textStyleRules' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='status'>
<retval declared_type='AVPlayerItemStatus' type='i' type64='q'/>
</method>
<method selector='stepByCount:'>
<arg declared_type='NSInteger' index='0' name='stepCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStyleRules'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='timebase'>
<retval declared_type='CMTimebaseRef' type='^{OpaqueCMTimebase=}'/>
</method>
<method selector='timedMetadata'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tracks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='videoComposition'>
<retval declared_type='AVVideoComposition*' type='@'/>
</method>
</class>
<class name='AVPlayerItemAccessLog'>
<method selector='events'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
</class>
<class name='AVPlayerItemAccessLogEvent'>
<method selector='URI'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='downloadOverdue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='durationWatched'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='indicatedBitrate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='mediaRequestsWWAN'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfBytesTransferred'>
<retval declared_type='long long' type='q'/>
</method>
<method selector='numberOfDroppedVideoFrames'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfMediaRequests'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSegmentsDownloaded'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfServerAddressChanges'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfStalls'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='observedBitrate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='observedBitrateStandardDeviation'>
<retval declared_type='double' type='d'/>
</method>
<method selector='observedMaxBitrate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='observedMinBitrate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='playbackStartDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='playbackStartOffset'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='playbackType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='segmentsDownloadedDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='serverAddress'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='startupTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='switchBitrate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='transferDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='AVPlayerItemErrorLog'>
<method selector='events'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
</class>
<class name='AVPlayerItemErrorLogEvent'>
<method selector='URI'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='date'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='errorComment'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='errorDomain'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='errorStatusCode'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='serverAddress'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='AVPlayerItemLegibleOutput'>
<method selector='advanceIntervalForDelegateInvocation'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='initWithMediaSubtypesForNativeRepresentation:'>
<arg declared_type='NSArray*' index='0' name='subtypes' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAdvanceIntervalForDelegateInvocation:'>
<arg declared_type='NSTimeInterval' index='0' name='advanceIntervalForDelegateInvocation' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<arg declared_type='dispatch_queue_t' index='1' name='delegateQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextStylingResolution:'>
<arg declared_type='NSString*' index='0' name='textStylingResolution' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStylingResolution'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='AVPlayerItemOutput'>
<method selector='itemTimeForCVTimeStamp:'>
<arg declared_type='CVTimeStamp' index='0' name='timestamp' type='{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}'/>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='itemTimeForHostTime:'>
<arg declared_type='CFTimeInterval' index='0' name='hostTimeInSeconds' type='d'/>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='itemTimeForMachAbsoluteTime:'>
<arg declared_type='int64_t' index='0' name='machAbsoluteTime' type='q'/>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='setSuppressesPlayerRendering:'>
<arg declared_type='BOOL' index='0' name='suppressesPlayerRendering' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='suppressesPlayerRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AVPlayerItemTrack'>
<method selector='assetTrack'>
<retval declared_type='AVAssetTrack*' type='@'/>
</method>
<method selector='currentVideoFrameRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVPlayerItemVideoOutput'>
<method selector='copyPixelBufferForItemTime:itemTimeForDisplay:'>
<arg declared_type='CMTime' index='0' name='itemTime' type='{_CMTime=qiIq}'/>
<arg declared_type='CMTime*' index='1' name='outItemTimeForDisplay' type='^{_CMTime=qiIq}'/>
<retval declared_type='CVPixelBufferRef' type='^{__CVBuffer=}'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasNewPixelBufferForItemTime:'>
<arg declared_type='CMTime' index='0' name='itemTime' type='{_CMTime=qiIq}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPixelBufferAttributes:'>
<arg declared_type='NSDictionary*' index='0' name='pixelBufferAttributes' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='requestNotificationOfMediaDataChangeWithAdvanceInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='interval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<arg declared_type='dispatch_queue_t' index='1' name='delegateQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVPlayerLayer'>
<method selector='isReadyForDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='player'>
<retval declared_type='AVPlayer*' type='@'/>
</method>
<method class_method='true' selector='playerLayerWithPlayer:'>
<arg declared_type='AVPlayer*' index='0' name='player' type='@'/>
<retval declared_type='AVPlayerLayer*' type='@'/>
</method>
<method selector='setPlayer:'>
<arg declared_type='AVPlayer*' index='0' name='player' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoGravity:'>
<arg declared_type='NSString*' index='0' name='videoGravity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoGravity'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='videoRect'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='AVPlayerMediaSelectionCriteria'>
<method selector='initWithPreferredLanguages:preferredMediaCharacteristics:'>
<arg declared_type='NSArray*' index='0' name='preferredLanguages' type='@'/>
<arg declared_type='NSArray*' index='1' name='preferredMediaCharacteristics' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='preferredLanguages'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='preferredMediaCharacteristics'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVQueuePlayer'>
<method selector='advanceToNextItem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='canInsertItem:afterItem:'>
<arg declared_type='AVPlayerItem*' index='0' name='item' type='@'/>
<arg declared_type='AVPlayerItem*' index='1' name='afterItem' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithItems:'>
<arg declared_type='NSArray*' index='0' name='items' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertItem:afterItem:'>
<arg declared_type='AVPlayerItem*' index='0' name='item' type='@'/>
<arg declared_type='AVPlayerItem*' index='1' name='afterItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='items'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='queuePlayerWithItems:'>
<arg declared_type='NSArray*' index='0' name='items' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeAllItems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItem:'>
<arg declared_type='AVPlayerItem*' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AVSampleBufferDisplayLayer'>
<method selector='controlTimebase'>
<retval declared_type='CMTimebaseRef' type='^{OpaqueCMTimebase=}'/>
</method>
<method selector='enqueueSampleBuffer:'>
<arg declared_type='CMSampleBufferRef' index='0' name='sampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushAndRemoveImage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isReadyForMoreMediaData'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestMediaDataWhenReadyOnQueue:usingBlock:'>
<arg declared_type='dispatch_queue_t' index='0' name='queue' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlTimebase:'>
<arg declared_type='CMTimebaseRef' index='0' name='controlTimebase' type='^{OpaqueCMTimebase=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVideoGravity:'>
<arg declared_type='NSString*' index='0' name='videoGravity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopRequestingMediaData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='videoGravity'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='AVSynchronizedLayer'>
<method selector='playerItem'>
<retval declared_type='AVPlayerItem*' type='@'/>
</method>
<method selector='setPlayerItem:'>
<arg declared_type='AVPlayerItem*' index='0' name='playerItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='synchronizedLayerWithPlayerItem:'>
<arg declared_type='AVPlayerItem*' index='0' name='playerItem' type='@'/>
<retval declared_type='AVSynchronizedLayer*' type='@'/>
</method>
</class>
<class name='AVTextStyleRule'>
<method selector='initWithTextMarkupAttributes:'>
<arg declared_type='NSDictionary*' index='0' name='textMarkupAttributes' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTextMarkupAttributes:textSelector:'>
<arg declared_type='NSDictionary*' index='0' name='textMarkupAttributes' type='@'/>
<arg declared_type='NSString*' index='1' name='textSelector' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='propertyListForTextStyleRules:'>
<arg declared_type='NSArray*' index='0' name='textStyleRules' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textMarkupAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='textSelector'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='textStyleRuleWithTextMarkupAttributes:'>
<arg declared_type='NSDictionary*' index='0' name='textMarkupAttributes' type='@'/>
<retval declared_type='AVTextStyleRule*' type='@'/>
</method>
<method class_method='true' selector='textStyleRuleWithTextMarkupAttributes:textSelector:'>
<arg declared_type='NSDictionary*' index='0' name='textMarkupAttributes' type='@'/>
<arg declared_type='NSString*' index='1' name='textSelector' type='@'/>
<retval declared_type='AVTextStyleRule*' type='@'/>
</method>
<method class_method='true' selector='textStyleRulesFromPropertyList:'>
<arg declared_type='id' index='0' name='plist' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AVTimedMetadataGroup'>
<method selector='initWithItems:timeRange:'>
<arg declared_type='NSArray*' index='0' name='items' type='@'/>
<arg declared_type='CMTimeRange' index='1' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='items'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='timeRange'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVURLAsset'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method class_method='true' selector='URLAssetWithURL:options:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='options' type='@'/>
<retval declared_type='AVURLAsset*' type='@'/>
</method>
<method class_method='true' selector='audiovisualMIMETypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='audiovisualTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='compatibleTrackForCompositionTrack:'>
<arg declared_type='AVCompositionTrack*' index='0' name='compositionTrack' type='@'/>
<retval declared_type='AVAssetTrack*' type='@'/>
</method>
<method selector='initWithURL:options:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='isPlayableExtendedMIMEType:'>
<arg declared_type='NSString*' index='0' name='extendedMIMEType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='resourceLoader'>
<retval declared_type='AVAssetResourceLoader*' type='@'/>
</method>
</class>
<class name='AVVideoComposition'>
<method selector='animationTool'>
<retval declared_type='AVVideoCompositionCoreAnimationTool*' type='@'/>
</method>
<method selector='customVideoCompositorClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='frameDuration'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='instructions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='isValidForAsset:timeRange:validationDelegate:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<arg declared_type='CMTimeRange' index='1' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type='id' index='2' name='validationDelegate' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='renderSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='videoCompositionWithPropertiesOfAsset:'>
<arg declared_type='AVAsset*' index='0' name='asset' type='@'/>
<retval declared_type='AVVideoComposition*' type='@'/>
</method>
</class>
<class name='AVVideoCompositionCoreAnimationTool'>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<arg declared_type='CMPersistentTrackID' index='1' name='trackID' type='i'/>
<retval declared_type='AVVideoCompositionCoreAnimationTool*' type='@'/>
</method>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:'>
<arg declared_type='CALayer*' index='0' name='videoLayer' type='@'/>
<arg declared_type='CALayer*' index='1' name='animationLayer' type='@'/>
<retval declared_type='AVVideoCompositionCoreAnimationTool*' type='@'/>
</method>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:'>
<arg declared_type='NSArray*' index='0' name='videoLayers' type='@'/>
<arg declared_type='CALayer*' index='1' name='animationLayer' type='@'/>
<retval declared_type='AVVideoCompositionCoreAnimationTool*' type='@'/>
</method>
</class>
<class name='AVVideoCompositionInstruction'>
<method selector='backgroundColor'>
<retval declared_type='CGColorRef' type='^{CGColor=}'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layerInstructions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='passthroughTrackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
<method selector='requiredSourceTrackIDs'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='CGColorRef' index='0' name='backgroundColor' type='^{CGColor=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timeRange'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVVideoCompositionLayerInstruction'>
<method selector='getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='CGRect*' index='1' name='startCropRectangle' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGRect*' index='2' name='endCropRectangle' type='^{CGRect={CGPoint=ff}{CGSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CMTimeRange*' index='3' name='timeRange' type='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getOpacityRampForTime:startOpacity:endOpacity:timeRange:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='float*' index='1' name='startOpacity' type='^f'/>
<arg declared_type='float*' index='2' name='endOpacity' type='^f'/>
<arg declared_type='CMTimeRange*' index='3' name='timeRange' type='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getTransformRampForTime:startTransform:endTransform:timeRange:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='CGAffineTransform*' index='1' name='startTransform' type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type='CGAffineTransform*' index='2' name='endTransform' type='^{CGAffineTransform=ffffff}' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type='CMTimeRange*' index='3' name='timeRange' type='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='trackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
</class>
<class name='AVVideoCompositionRenderContext'>
<method selector='edgeWidths'>
<retval declared_type='AVEdgeWidths' type='{_AVEdgeWidths=ffff}' type64='{_AVEdgeWidths=dddd}'/>
</method>
<method selector='highQualityRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='newPixelBuffer'>
<retval declared_type='CVPixelBufferRef' type='^{__CVBuffer=}'/>
</method>
<method selector='pixelAspectRatio'>
<retval declared_type='AVPixelAspectRatio' type='{_AVPixelAspectRatio=ii}' type64='{_AVPixelAspectRatio=qq}'/>
</method>
<method selector='renderScale'>
<retval declared_type='float' type='f'/>
</method>
<method selector='renderTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='videoComposition'>
<retval declared_type='AVVideoComposition*' type='@'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCMTimeForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method selector='decodeCMTimeMappingForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='CMTimeMapping' type='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
<method selector='decodeCMTimeRangeForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='encodeCMTime:forKey:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCMTimeMapping:forKey:'>
<arg declared_type='CMTimeMapping' index='0' name='timeMapping' type='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCMTimeRange:forKey:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg declared_type='AVAudioPlayer*' index='0' name='player' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:'>
<arg declared_type='AVAudioPlayer*' index='0' name='player' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderDidFinishRecording:successfully:'>
<arg declared_type='AVAudioRecorder*' index='0' name='recorder' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEncodeErrorDidOccur:error:'>
<arg declared_type='AVAudioRecorder*' index='0' name='recorder' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelAllPendingVideoCompositionRequests'>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didDropSampleBuffer:fromConnection:'>
<arg declared_type='AVCaptureOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='CMSampleBufferRef' index='1' name='sampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<arg declared_type='AVCaptureConnection*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='outputFileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didOutputMetadataObjects:fromConnection:'>
<arg declared_type='AVCaptureOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSArray*' index='1' name='metadataObjects' type='@'/>
<arg declared_type='AVCaptureConnection*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didOutputSampleBuffer:fromConnection:'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='CMSampleBufferRef' index='1' name='sampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<arg declared_type='AVCaptureConnection*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didPauseRecordingToOutputFileAtURL:fromConnections:'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didResumeRecordingToOutputFileAtURL:fromConnections:'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:willFinishRecordingToOutputFileAtURL:fromConnections:error:'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutputShouldProvideSampleAccurateRecordingStart:'>
<arg declared_type='AVCaptureOutput*' index='0' name='captureOutput' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsTweening'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:'>
<arg declared_type='AVPlayerItemLegibleOutput*' index='0' name='output' type='@'/>
<arg declared_type='NSArray*' index='1' name='strings' type='@'/>
<arg declared_type='NSArray*' index='2' name='nativeSamples' type='@'/>
<arg declared_type='CMTime' index='3' name='itemTime' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:'>
<arg declared_type='NSArray*' index='0' name='keys' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='outputMediaDataWillChange:'>
<arg declared_type='AVPlayerItemOutput*' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outputSequenceWasFlushed:'>
<arg declared_type='AVPlayerItemOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='passthroughTrackID'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
<method selector='renderContextChanged:'>
<arg declared_type='AVVideoCompositionRenderContext*' index='0' name='newRenderContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requiredPixelBufferAttributesForRenderContext'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='requiredSourceTrackIDs'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='resourceLoader:didCancelLoadingRequest:'>
<arg declared_type='AVAssetResourceLoader*' index='0' name='resourceLoader' type='@'/>
<arg declared_type='AVAssetResourceLoadingRequest*' index='1' name='loadingRequest' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resourceLoader:shouldWaitForLoadingOfRequestedResource:'>
<arg declared_type='AVAssetResourceLoader*' index='0' name='resourceLoader' type='@'/>
<arg declared_type='AVAssetResourceLoadingRequest*' index='1' name='loadingRequest' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sourcePixelBufferAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='startVideoCompositionRequest:'>
<arg declared_type='AVAsynchronousVideoCompositionRequest*' index='0' name='asyncVideoCompositionRequest' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusOfValueForKey:error:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='AVKeyValueStatus' type='i' type64='q'/>
</method>
<method selector='timeRange'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<arg declared_type='CMTimeRange' index='1' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<arg declared_type='id' index='1' name='videoCompositionInstruction' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<arg declared_type='id' index='1' name='videoCompositionInstruction' type='@'/>
<arg declared_type='AVVideoCompositionLayerInstruction*' index='2' name='layerInstruction' type='@'/>
<arg declared_type='AVAsset*' index='3' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSValue'>
<method selector='CMTimeMappingValue'>
<retval declared_type='CMTimeMapping' type='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
<method selector='CMTimeRangeValue'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='CMTimeValue'>
<retval declared_type='CMTime' type='{_CMTime=qiIq}'/>
</method>
<method class_method='true' selector='valueWithCMTime:'>
<arg declared_type='CMTime' index='0' name='time' type='{_CMTime=qiIq}'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithCMTimeMapping:'>
<arg declared_type='CMTimeMapping' index='0' name='timeMapping' type='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
<retval declared_type='NSValue*' type='@'/>
</method>
<method class_method='true' selector='valueWithCMTimeRange:'>
<arg declared_type='CMTimeRange' index='0' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='NSValue*' type='@'/>
</method>
</class>
<informal_protocol name='AVAssetResourceLoaderDelegate'>
<method selector='resourceLoader:didCancelLoadingRequest:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVAssetResourceLoader*' index='0' name='resourceLoader' type='@'/>
<arg declared_type='AVAssetResourceLoadingRequest*' index='1' name='loadingRequest' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resourceLoader:shouldWaitForLoadingOfRequestedResource:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='AVAssetResourceLoader*' index='0' name='resourceLoader' type='@'/>
<arg declared_type='AVAssetResourceLoadingRequest*' index='1' name='loadingRequest' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVAsynchronousKeyValueLoading'>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='NSArray*' index='0' name='keys' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusOfValueForKey:error:' type='i16@0:4@8^@12' type64='q32@0:8@16^@24'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='AVKeyValueStatus' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioPlayerDelegate'>
<method selector='audioPlayerDecodeErrorDidOccur:error:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVAudioPlayer*' index='0' name='player' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='AVAudioPlayer*' index='0' name='player' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioRecorderDelegate'>
<method selector='audioRecorderDidFinishRecording:successfully:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='AVAudioRecorder*' index='0' name='recorder' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioRecorderEncodeErrorDidOccur:error:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='AVAudioRecorder*' index='0' name='recorder' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureAudioDataOutputSampleBufferDelegate'>
<method selector='captureOutput:didOutputSampleBuffer:fromConnection:' type='v20@0:4@8^{opaqueCMSampleBuffer=}12@16' type64='v40@0:8@16^{opaqueCMSampleBuffer=}24@32'>
<arg declared_type='AVCaptureOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='CMSampleBufferRef' index='1' name='sampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<arg declared_type='AVCaptureConnection*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureFileOutputDelegate'>
<method selector='captureOutput:didOutputSampleBuffer:fromConnection:' type='v20@0:4@8^{opaqueCMSampleBuffer=}12@16' type64='v40@0:8@16^{opaqueCMSampleBuffer=}24@32'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='CMSampleBufferRef' index='1' name='sampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<arg declared_type='AVCaptureConnection*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutputShouldProvideSampleAccurateRecordingStart:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='AVCaptureOutput*' index='0' name='captureOutput' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureFileOutputRecordingDelegate'>
<method selector='captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='outputFileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didPauseRecordingToOutputFileAtURL:fromConnections:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didResumeRecordingToOutputFileAtURL:fromConnections:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:willFinishRecordingToOutputFileAtURL:fromConnections:error:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSArray*' index='2' name='connections' type='@'/>
<arg declared_type='NSError*' index='3' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureMetadataOutputObjectsDelegate'>
<method selector='captureOutput:didOutputMetadataObjects:fromConnection:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='AVCaptureOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='NSArray*' index='1' name='metadataObjects' type='@'/>
<arg declared_type='AVCaptureConnection*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureVideoDataOutputSampleBufferDelegate'>
<method selector='captureOutput:didDropSampleBuffer:fromConnection:' type='v20@0:4@8^{opaqueCMSampleBuffer=}12@16' type64='v40@0:8@16^{opaqueCMSampleBuffer=}24@32'>
<arg declared_type='AVCaptureOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='CMSampleBufferRef' index='1' name='sampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<arg declared_type='AVCaptureConnection*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='captureOutput:didOutputSampleBuffer:fromConnection:' type='v20@0:4@8^{opaqueCMSampleBuffer=}12@16' type64='v40@0:8@16^{opaqueCMSampleBuffer=}24@32'>
<arg declared_type='AVCaptureFileOutput*' index='0' name='captureOutput' type='@'/>
<arg declared_type='CMSampleBufferRef' index='1' name='sampleBuffer' type='^{opaqueCMSampleBuffer=}'/>
<arg declared_type='AVCaptureConnection*' index='2' name='connection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemLegibleOutputPushDelegate'>
<method selector='legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:' type='v44@0:4@8@12@16{?=qiIq}20' type64='v64@0:8@16@24@32{?=qiIq}40'>
<arg declared_type='AVPlayerItemLegibleOutput*' index='0' name='output' type='@'/>
<arg declared_type='NSArray*' index='1' name='strings' type='@'/>
<arg declared_type='NSArray*' index='2' name='nativeSamples' type='@'/>
<arg declared_type='CMTime' index='3' name='itemTime' type='{_CMTime=qiIq}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemOutputPullDelegate'>
<method selector='outputMediaDataWillChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='AVPlayerItemOutput*' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outputSequenceWasFlushed:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='AVPlayerItemOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemOutputPushDelegate'>
<method selector='outputSequenceWasFlushed:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='AVPlayerItemOutput*' index='0' name='output' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositing'>
<method selector='cancelAllPendingVideoCompositionRequests' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderContextChanged:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='AVVideoCompositionRenderContext*' index='0' name='newRenderContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requiredPixelBufferAttributesForRenderContext' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='sourcePixelBufferAttributes' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='startVideoCompositionRequest:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='AVAsynchronousVideoCompositionRequest*' index='0' name='asyncVideoCompositionRequest' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositionInstruction'>
<method selector='containsTweening' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enablePostProcessing' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='passthroughTrackID' type='i8@0:4' type64='i16@0:8'>
<retval declared_type='CMPersistentTrackID' type='i'/>
</method>
<method selector='requiredSourceTrackIDs' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='timeRange' type='{?={?=qiIq}{?=qiIq}}8@0:4' type64='{?={?=qiIq}{?=qiIq}}16@0:8'>
<retval declared_type='CMTimeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositionValidationHandling'>
<method selector='videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:' type='B60@0:4@8{?={?=qiIq}{?=qiIq}}12' type64='B72@0:8@16{?={?=qiIq}{?=qiIq}}24'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<arg declared_type='CMTimeRange' index='1' name='timeRange' type='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<arg declared_type='id' index='1' name='videoCompositionInstruction' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:' type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<arg declared_type='id' index='1' name='videoCompositionInstruction' type='@'/>
<arg declared_type='AVVideoCompositionLayerInstruction*' index='2' name='layerInstruction' type='@'/>
<arg declared_type='AVAsset*' index='3' name='asset' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='AVVideoComposition*' index='0' name='videoComposition' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
