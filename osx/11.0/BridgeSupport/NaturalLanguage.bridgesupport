<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreML.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageAmharic' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageArabic' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageArmenian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageBengali' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageBulgarian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageBurmese' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageCatalan' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageCherokee' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageCroatian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageCzech' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageDanish' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageDutch' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageEnglish' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageFinnish' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageFrench' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageGeorgian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageGerman' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageGreek' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageGujarati' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageHebrew' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageHindi' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageHungarian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageIcelandic' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageIndonesian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageItalian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageJapanese' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageKannada' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageKhmer' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageKorean' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageLao' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageMalay' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageMalayalam' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageMarathi' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageMongolian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageNorwegian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageOriya' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguagePersian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguagePolish' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguagePortuguese' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguagePunjabi' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageRomanian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageRussian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageSimplifiedChinese' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageSinhalese' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageSlovak' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageSpanish' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageSwedish' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageTamil' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageTelugu' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageThai' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageTibetan' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageTraditionalChinese' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageTurkish' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageUkrainian' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageUndetermined' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageUrdu' type64='@'/>
<constant const='true' declared_type64='NLLanguage' name='NLLanguageVietnamese' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagAdjective' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagAdverb' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagClassifier' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagCloseParenthesis' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagCloseQuote' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagConjunction' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagDash' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagDeterminer' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagIdiom' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagInterjection' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagNoun' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagNumber' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagOpenParenthesis' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagOpenQuote' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagOrganizationName' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagOther' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagOtherPunctuation' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagOtherWhitespace' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagOtherWord' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagParagraphBreak' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagParticle' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagPersonalName' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagPlaceName' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagPreposition' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagPronoun' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagPunctuation' type64='@'/>
<constant const='true' declared_type64='NLTagScheme' name='NLTagSchemeLanguage' type64='@'/>
<constant const='true' declared_type64='NLTagScheme' name='NLTagSchemeLemma' type64='@'/>
<constant const='true' declared_type64='NLTagScheme' name='NLTagSchemeLexicalClass' type64='@'/>
<constant const='true' declared_type64='NLTagScheme' name='NLTagSchemeNameType' type64='@'/>
<constant const='true' declared_type64='NLTagScheme' name='NLTagSchemeNameTypeOrLexicalClass' type64='@'/>
<constant const='true' declared_type64='NLTagScheme' name='NLTagSchemeScript' type64='@'/>
<constant const='true' declared_type64='NLTagScheme' name='NLTagSchemeSentimentScore' type64='@'/>
<constant const='true' declared_type64='NLTagScheme' name='NLTagSchemeTokenType' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagSentenceTerminator' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagVerb' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagWhitespace' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagWord' type64='@'/>
<constant const='true' declared_type64='NLTag' name='NLTagWordJoiner' type64='@'/>
<enum name='NLDistanceTypeCosine' value64='0'/>
<enum name='NLModelTypeClassifier' value64='0'/>
<enum name='NLModelTypeSequence' value64='1'/>
<enum name='NLTaggerAssetsResultAvailable' value64='0'/>
<enum name='NLTaggerAssetsResultError' value64='2'/>
<enum name='NLTaggerAssetsResultNotAvailable' value64='1'/>
<enum name='NLTaggerJoinContractions' value64='32'/>
<enum name='NLTaggerJoinNames' value64='16'/>
<enum name='NLTaggerOmitOther' value64='8'/>
<enum name='NLTaggerOmitPunctuation' value64='2'/>
<enum name='NLTaggerOmitWhitespace' value64='4'/>
<enum name='NLTaggerOmitWords' value64='1'/>
<enum name='NLTokenUnitDocument' value64='3'/>
<enum name='NLTokenUnitParagraph' value64='2'/>
<enum name='NLTokenUnitSentence' value64='1'/>
<enum name='NLTokenUnitWord' value64='0'/>
<enum name='NLTokenizerAttributeEmoji' value64='4'/>
<enum name='NLTokenizerAttributeNumeric' value64='1'/>
<enum name='NLTokenizerAttributeSymbolic' value64='2'/>
<class name='NLEmbedding'>
<method selector='containsString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='currentRevisionForLanguage:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='currentSentenceEmbeddingRevisionForLanguage:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='dimension'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='distanceBetweenString:andString:distanceType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='firstString' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='secondString' type64='@'/>
<arg declared_type64='NLDistanceType' index='2' name='distanceType' type64='q'/>
<retval declared_type64='NLDistance' type64='d'/>
</method>
<method class_method='true' selector='embeddingWithContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='enumerateNeighborsForString:maximumCount:distanceType:usingBlock:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maxCount' type64='Q'/>
<arg declared_type64='NLDistanceType' index='2' name='distanceType' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(NSString * _Nonnull, NLDistance, BOOL * _Nonnull)' function_pointer='true' index='3' name='block' type64='@?'>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<arg declared_type64='NLDistance' type64='d'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateNeighborsForString:maximumCount:maximumDistance:distanceType:usingBlock:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maxCount' type64='Q'/>
<arg declared_type64='NLDistance' index='2' name='maxDistance' type64='d'/>
<arg declared_type64='NLDistanceType' index='3' name='distanceType' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(NSString * _Nonnull, NLDistance, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type64='@?'>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<arg declared_type64='NLDistance' type64='d'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateNeighborsForVector:maximumCount:distanceType:usingBlock:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='vector' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maxCount' type64='Q'/>
<arg declared_type64='NLDistanceType' index='2' name='distanceType' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(NSString * _Nonnull, NLDistance, BOOL * _Nonnull)' function_pointer='true' index='3' name='block' type64='@?'>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<arg declared_type64='NLDistance' type64='d'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateNeighborsForVector:maximumCount:maximumDistance:distanceType:usingBlock:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='vector' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maxCount' type64='Q'/>
<arg declared_type64='NLDistance' index='2' name='maxDistance' type64='d'/>
<arg declared_type64='NLDistanceType' index='3' name='distanceType' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(NSString * _Nonnull, NLDistance, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type64='@?'>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<arg declared_type64='NLDistance' type64='d'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getVector:forString:'>
<arg declared_type64='float * _Nonnull' index='0' name='vector' type64='^f'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='language'>
<retval declared_type64='NLLanguage _Nullable' type64='@'/>
</method>
<method selector='neighborsForString:maximumCount:distanceType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maxCount' type64='Q'/>
<arg declared_type64='NLDistanceType' index='2' name='distanceType' type64='q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='neighborsForString:maximumCount:maximumDistance:distanceType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maxCount' type64='Q'/>
<arg declared_type64='NLDistance' index='2' name='maxDistance' type64='d'/>
<arg declared_type64='NLDistanceType' index='3' name='distanceType' type64='q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='neighborsForVector:maximumCount:distanceType:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='vector' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maxCount' type64='Q'/>
<arg declared_type64='NLDistanceType' index='2' name='distanceType' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='neighborsForVector:maximumCount:maximumDistance:distanceType:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='vector' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maxCount' type64='Q'/>
<arg declared_type64='NLDistance' index='2' name='maxDistance' type64='d'/>
<arg declared_type64='NLDistanceType' index='3' name='distanceType' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='revision'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='sentenceEmbeddingForLanguage:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='NLEmbedding * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='sentenceEmbeddingForLanguage:revision:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='revision' type64='Q'/>
<retval declared_type64='NLEmbedding * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='supportedRevisionsForLanguage:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='supportedSentenceEmbeddingRevisionsForLanguage:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='vectorForString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='vocabularySize'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='wordEmbeddingForLanguage:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='NLEmbedding * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='wordEmbeddingForLanguage:revision:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='revision' type64='Q'/>
<retval declared_type64='NLEmbedding * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='writeEmbeddingForDictionary:language:revision:toURL:error:'>
<arg declared_type64='NSDictionary *&gt; * _Nonnull' index='0' name='dictionary' type64='@'/>
<arg declared_type64='NLLanguage _Nullable' index='1' name='language' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='revision' type64='Q'/>
<arg declared_type64='NSURL * _Nonnull' index='3' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NLGazetteer'>
<method selector='data'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='gazetteerWithContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithDictionary:language:error:'>
<arg declared_type64='NSDictionary *&gt; * _Nonnull' index='0' name='dictionary' type64='@'/>
<arg declared_type64='NLLanguage _Nullable' index='1' name='language' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='labelForString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='language'>
<retval declared_type64='NLLanguage _Nullable' type64='@'/>
</method>
<method class_method='true' selector='writeGazetteerForDictionary:language:toURL:error:'>
<arg declared_type64='NSDictionary *&gt; * _Nonnull' index='0' name='dictionary' type64='@'/>
<arg declared_type64='NLLanguage _Nullable' index='1' name='language' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='2' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NLLanguageRecognizer'>
<method selector='dominantLanguage'>
<retval declared_type64='NLLanguage _Nullable' type64='@'/>
</method>
<method class_method='true' selector='dominantLanguageForString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='NLLanguage _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='languageConstraints'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='languageHints'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='languageHypothesesWithMaximum:'>
<arg declared_type64='NSUInteger' index='0' name='maxHypotheses' type64='Q'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='processString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguageConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='languageConstraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguageHints:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='languageHints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NLModel'>
<method selector='configuration'>
<retval declared_type64='NLModelConfiguration * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='modelWithContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='modelWithMLModel:error:'>
<arg declared_type64='MLModel * _Nonnull' index='0' name='mlModel' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='predictedLabelForString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='predictedLabelHypothesesForString:maximumCount:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maximumCount' type64='Q'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='predictedLabelHypothesesForTokens:maximumCount:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='tokens' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='maximumCount' type64='Q'/>
<retval declared_type64='NSArray *&gt; * _Nonnull' type64='@'/>
</method>
<method selector='predictedLabelsForTokens:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='tokens' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NLModelConfiguration'>
<method class_method='true' selector='currentRevisionForType:'>
<arg declared_type64='NLModelType' index='0' name='type' type64='q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='language'>
<retval declared_type64='NLLanguage _Nullable' type64='@'/>
</method>
<method selector='revision'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='supportedRevisionsForType:'>
<arg declared_type64='NLModelType' index='0' name='type' type64='q'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='NLModelType' type64='q'/>
</method>
</class>
<class name='NLTagger'>
<method class_method='true' selector='availableTagSchemesForUnit:language:'>
<arg declared_type64='NLTokenUnit' index='0' name='unit' type64='q'/>
<arg declared_type64='NLLanguage _Nonnull' index='1' name='language' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='dominantLanguage'>
<retval declared_type64='NLLanguage _Nullable' type64='@'/>
</method>
<method selector='enumerateTagsInRange:unit:scheme:options:usingBlock:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NLTokenUnit' index='1' name='unit' type64='q'/>
<arg declared_type64='NLTagScheme _Nonnull' index='2' name='scheme' type64='@'/>
<arg declared_type64='NLTaggerOptions' index='3' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nonnull)(NLTag _Nullable, NSRange, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type64='@?'>
<arg declared_type64='NLTag _Nullable' type64='@'/>
<arg declared_type64='NSRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='gazetteersForTagScheme:'>
<arg declared_type64='NLTagScheme _Nonnull' index='0' name='tagScheme' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithTagSchemes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='tagSchemes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='modelsForTagScheme:'>
<arg declared_type64='NLTagScheme _Nonnull' index='0' name='tagScheme' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='requestAssetsForLanguage:tagScheme:completionHandler:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<arg declared_type64='NLTagScheme _Nonnull' index='1' name='tagScheme' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NLTaggerAssetsResult, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NLTaggerAssetsResult' type64='q'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGazetteers:forTagScheme:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='gazetteers' type64='@'/>
<arg declared_type64='NLTagScheme _Nonnull' index='1' name='tagScheme' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguage:range:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setModels:forTagScheme:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='models' type64='@'/>
<arg declared_type64='NLTagScheme _Nonnull' index='1' name='tagScheme' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrthography:range:'>
<arg declared_type64='NSOrthography * _Nonnull' index='0' name='orthography' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setString:'>
<arg declared_type64='NSString * _Nullable' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='string'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tagAtIndex:unit:scheme:tokenRange:'>
<arg declared_type64='NSUInteger' index='0' name='characterIndex' type64='Q'/>
<arg declared_type64='NLTokenUnit' index='1' name='unit' type64='q'/>
<arg declared_type64='NLTagScheme _Nonnull' index='2' name='scheme' type64='@'/>
<arg declared_type64='NSRangePointer _Nullable' index='3' name='tokenRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NLTag _Nullable' type64='@'/>
</method>
<method selector='tagHypothesesAtIndex:unit:scheme:maximumCount:tokenRange:'>
<arg declared_type64='NSUInteger' index='0' name='characterIndex' type64='Q'/>
<arg declared_type64='NLTokenUnit' index='1' name='unit' type64='q'/>
<arg declared_type64='NLTagScheme _Nonnull' index='2' name='scheme' type64='@'/>
<arg declared_type64='NSUInteger' index='3' name='maximumCount' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='4' name='tokenRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='tagSchemes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tagsInRange:unit:scheme:options:tokenRanges:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NLTokenUnit' index='1' name='unit' type64='q'/>
<arg declared_type64='NLTagScheme _Nonnull' index='2' name='scheme' type64='@'/>
<arg declared_type64='NLTaggerOptions' index='3' name='options' type64='Q'/>
<arg declared_type64='NSArray * _Nullable * _Nullable' index='4' name='tokenRanges' type64='^@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tokenRangeAtIndex:unit:'>
<arg declared_type64='NSUInteger' index='0' name='characterIndex' type64='Q'/>
<arg declared_type64='NLTokenUnit' index='1' name='unit' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='tokenRangeForRange:unit:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NLTokenUnit' index='1' name='unit' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
</class>
<class name='NLTokenizer'>
<method selector='enumerateTokensInRange:usingBlock:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='void (^ _Nonnull)(NSRange, NLTokenizerAttributes, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='NSRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NLTokenizerAttributes' type64='Q'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithUnit:'>
<arg declared_type64='NLTokenUnit' index='0' name='unit' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setLanguage:'>
<arg declared_type64='NLLanguage _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setString:'>
<arg declared_type64='NSString * _Nullable' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='string'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenRangeAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='characterIndex' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='tokenRangeForRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='tokensForRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='unit'>
<retval declared_type64='NLTokenUnit' type64='q'/>
</method>
</class>
</signatures>
