<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/DriverKit.framework'/>
<struct name='IOUserNetworkMACAddress' type64='{IOUserNetworkMACAddress=&quot;octet&quot;[6C]}'>
<field declared_type64='uint8_t*' name='octet' type64='[6C]'/>
</struct>
<struct name='IOUserNetworkPacketBufferPoolOptions' type64='{IOUserNetworkPacketBufferPoolOptions=&quot;packetCount&quot;I&quot;bufferCount&quot;I&quot;bufferSize&quot;I&quot;maxBuffersPerPacket&quot;I&quot;memorySegmentSize&quot;I&quot;poolFlags&quot;I&quot;dmaSpecification&quot;{IODMACommandSpecification=&quot;options&quot;Q&quot;maxAddressBits&quot;Q&quot;_resv&quot;[16Q]}&quot;_resv&quot;[16I]}'>
<field declared_type64='uint32_t' name='packetCount' type64='I'/>
<field declared_type64='uint32_t' name='bufferCount' type64='I'/>
<field declared_type64='uint32_t' name='bufferSize' type64='I'/>
<field declared_type64='uint32_t' name='maxBuffersPerPacket' type64='I'/>
<field declared_type64='uint32_t' name='memorySegmentSize' type64='I'/>
<field declared_type64='uint32_t' name='poolFlags' type64='I'/>
<field declared_type64='struct IODMACommandSpecification' name='dmaSpecification' type64='{IODMACommandSpecification=&quot;options&quot;Q&quot;maxAddressBits&quot;Q&quot;_resv&quot;[16Q]}'/>
<field declared_type64='uint32_t*' name='_resv' type64='[16I]'/>
</struct>
<struct name='IOUserNetworkPacketState' type64='{IOUserNetworkPacketState=&quot;memoryOffset&quot;Q&quot;dataDKVA&quot;Q&quot;dataIOVA&quot;Q&quot;packetIndex&quot;I&quot;dataLength&quot;I&quot;dataOffset&quot;S&quot;direction&quot;C&quot;linkHeaderLength&quot;C&quot;__reserved&quot;[4C]}'>
<field declared_type64='uint64_t' name='memoryOffset' type64='Q'/>
<field declared_type64='uint64_t' name='dataDKVA' type64='Q'/>
<field declared_type64='uint64_t' name='dataIOVA' type64='Q'/>
<field declared_type64='uint32_t' name='packetIndex' type64='I'/>
<field declared_type64='uint32_t' name='dataLength' type64='I'/>
<field declared_type64='uint16_t' name='dataOffset' type64='S'/>
<field declared_type64='uint8_t' name='direction' type64='C'/>
<field declared_type64='uint8_t' name='linkHeaderLength' type64='C'/>
<field declared_type64='uint8_t*' name='__reserved' type64='[4C]'/>
</struct>
<struct name='nicproxy_limits_info_s' type64='{nicproxy_limits_info_s=&quot;ipv4_cnt&quot;C&quot;ipv6_cnt&quot;C&quot;kaIPv4Count&quot;S&quot;kaIPv6Count&quot;S&quot;wakeUDPCount&quot;S&quot;wakeTCPCount&quot;S&quot;rr_cnt&quot;S&quot;mDnsMaxDomainLen&quot;C&quot;ethCount&quot;C&quot;rr_buf_size&quot;S}'>
<field declared_type64='uint8_t' name='ipv4_cnt' type64='C'/>
<field declared_type64='uint8_t' name='ipv6_cnt' type64='C'/>
<field declared_type64='uint16_t' name='kaIPv4Count' type64='S'/>
<field declared_type64='uint16_t' name='kaIPv6Count' type64='S'/>
<field declared_type64='uint16_t' name='wakeUDPCount' type64='S'/>
<field declared_type64='uint16_t' name='wakeTCPCount' type64='S'/>
<field declared_type64='uint16_t' name='rr_cnt' type64='S'/>
<field declared_type64='uint8_t' name='mDnsMaxDomainLen' type64='C'/>
<field declared_type64='uint8_t' name='ethCount' type64='C'/>
<field declared_type64='uint16_t' name='rr_buf_size' type64='S'/>
</struct>
<struct name='nicproxy_limits_info_t' type64='{nicproxy_limits_info_s=&quot;ipv4_cnt&quot;C&quot;ipv6_cnt&quot;C&quot;kaIPv4Count&quot;S&quot;kaIPv6Count&quot;S&quot;wakeUDPCount&quot;S&quot;wakeTCPCount&quot;S&quot;rr_cnt&quot;S&quot;mDnsMaxDomainLen&quot;C&quot;ethCount&quot;C&quot;rr_buf_size&quot;S}'>
<field declared_type64='uint8_t' name='ipv4_cnt' type64='C'/>
<field declared_type64='uint8_t' name='ipv6_cnt' type64='C'/>
<field declared_type64='uint16_t' name='kaIPv4Count' type64='S'/>
<field declared_type64='uint16_t' name='kaIPv6Count' type64='S'/>
<field declared_type64='uint16_t' name='wakeUDPCount' type64='S'/>
<field declared_type64='uint16_t' name='wakeTCPCount' type64='S'/>
<field declared_type64='uint16_t' name='rr_cnt' type64='S'/>
<field declared_type64='uint8_t' name='mDnsMaxDomainLen' type64='C'/>
<field declared_type64='uint8_t' name='ethCount' type64='C'/>
<field declared_type64='uint16_t' name='rr_buf_size' type64='S'/>
</struct>
<struct name='offload_inet_info_s' type64='{offload_inet_info_s=&quot;v4LocalAddrCount&quot;C&quot;v4AddrCount&quot;C&quot;v6LocalAddrCount&quot;C&quot;v6AddrCount&quot;C&quot;v4AddrOfft&quot;I&quot;v4PrefixOfft&quot;I&quot;v6AddrOfft&quot;I&quot;v6PrefixOfft&quot;I}'>
<field declared_type64='uint8_t' name='v4LocalAddrCount' type64='C'/>
<field declared_type64='uint8_t' name='v4AddrCount' type64='C'/>
<field declared_type64='uint8_t' name='v6LocalAddrCount' type64='C'/>
<field declared_type64='uint8_t' name='v6AddrCount' type64='C'/>
<field declared_type64='uint32_t' name='v4AddrOfft' type64='I'/>
<field declared_type64='uint32_t' name='v4PrefixOfft' type64='I'/>
<field declared_type64='uint32_t' name='v6AddrOfft' type64='I'/>
<field declared_type64='uint32_t' name='v6PrefixOfft' type64='I'/>
</struct>
<struct name='offload_inet_info_t' type64='{offload_inet_info_s=&quot;v4LocalAddrCount&quot;C&quot;v4AddrCount&quot;C&quot;v6LocalAddrCount&quot;C&quot;v6AddrCount&quot;C&quot;v4AddrOfft&quot;I&quot;v4PrefixOfft&quot;I&quot;v6AddrOfft&quot;I&quot;v6PrefixOfft&quot;I}'>
<field declared_type64='uint8_t' name='v4LocalAddrCount' type64='C'/>
<field declared_type64='uint8_t' name='v4AddrCount' type64='C'/>
<field declared_type64='uint8_t' name='v6LocalAddrCount' type64='C'/>
<field declared_type64='uint8_t' name='v6AddrCount' type64='C'/>
<field declared_type64='uint32_t' name='v4AddrOfft' type64='I'/>
<field declared_type64='uint32_t' name='v4PrefixOfft' type64='I'/>
<field declared_type64='uint32_t' name='v6AddrOfft' type64='I'/>
<field declared_type64='uint32_t' name='v6PrefixOfft' type64='I'/>
</struct>
<struct name='offload_info_s' type64='{offload_info_s=&quot;len&quot;I&quot;mac_addr&quot;{ether_addr=&quot;octet&quot;[6C]}&quot;flags&quot;C&quot;reserved&quot;C&quot;ips&quot;{offload_inet_info_s=&quot;v4LocalAddrCount&quot;C&quot;v4AddrCount&quot;C&quot;v6LocalAddrCount&quot;C&quot;v6AddrCount&quot;C&quot;v4AddrOfft&quot;I&quot;v4PrefixOfft&quot;I&quot;v6AddrOfft&quot;I&quot;v6PrefixOfft&quot;I}&quot;ports&quot;{offload_port_info_s=&quot;UDPPortCount&quot;S&quot;TCPPortCount&quot;S&quot;UDPPortOfft&quot;I&quot;TCPPortOfft&quot;I}&quot;kas&quot;{offload_keep_alive_info_s=&quot;v4KACount&quot;S&quot;v6KACount&quot;S&quot;retryCount&quot;I&quot;retryInterval&quot;I&quot;v4KAOfft&quot;I&quot;v6KAOfft&quot;I}&quot;rrs&quot;{offload_rr_info_s=&quot;RRCount&quot;I&quot;RRBufLen&quot;I&quot;RRIdxOfft&quot;I&quot;RRBufOfft&quot;I}&quot;buf&quot;[0C]}'>
<field declared_type64='uint32_t' name='len' type64='I'/>
<field declared_type64='ether_addr_t' name='mac_addr' type64='{ether_addr=&quot;octet&quot;[6C]}'/>
<field declared_type64='uint8_t' name='flags' type64='C'/>
<field declared_type64='uint8_t' name='reserved' type64='C'/>
<field declared_type64='offload_inet_info_t' name='ips' type64='{offload_inet_info_s=&quot;v4LocalAddrCount&quot;C&quot;v4AddrCount&quot;C&quot;v6LocalAddrCount&quot;C&quot;v6AddrCount&quot;C&quot;v4AddrOfft&quot;I&quot;v4PrefixOfft&quot;I&quot;v6AddrOfft&quot;I&quot;v6PrefixOfft&quot;I}'/>
<field declared_type64='offload_port_info_t' name='ports' type64='{offload_port_info_s=&quot;UDPPortCount&quot;S&quot;TCPPortCount&quot;S&quot;UDPPortOfft&quot;I&quot;TCPPortOfft&quot;I}'/>
<field declared_type64='offload_keep_alive_info_t' name='kas' type64='{offload_keep_alive_info_s=&quot;v4KACount&quot;S&quot;v6KACount&quot;S&quot;retryCount&quot;I&quot;retryInterval&quot;I&quot;v4KAOfft&quot;I&quot;v6KAOfft&quot;I}'/>
<field declared_type64='offload_rr_info_t' name='rrs' type64='{offload_rr_info_s=&quot;RRCount&quot;I&quot;RRBufLen&quot;I&quot;RRIdxOfft&quot;I&quot;RRBufOfft&quot;I}'/>
<field declared_type64='uint8_t*' name='buf' type64='[0C]'/>
</struct>
<struct name='offload_info_t' type64='{offload_info_s=&quot;len&quot;I&quot;mac_addr&quot;{ether_addr=&quot;octet&quot;[6C]}&quot;flags&quot;C&quot;reserved&quot;C&quot;ips&quot;{offload_inet_info_s=&quot;v4LocalAddrCount&quot;C&quot;v4AddrCount&quot;C&quot;v6LocalAddrCount&quot;C&quot;v6AddrCount&quot;C&quot;v4AddrOfft&quot;I&quot;v4PrefixOfft&quot;I&quot;v6AddrOfft&quot;I&quot;v6PrefixOfft&quot;I}&quot;ports&quot;{offload_port_info_s=&quot;UDPPortCount&quot;S&quot;TCPPortCount&quot;S&quot;UDPPortOfft&quot;I&quot;TCPPortOfft&quot;I}&quot;kas&quot;{offload_keep_alive_info_s=&quot;v4KACount&quot;S&quot;v6KACount&quot;S&quot;retryCount&quot;I&quot;retryInterval&quot;I&quot;v4KAOfft&quot;I&quot;v6KAOfft&quot;I}&quot;rrs&quot;{offload_rr_info_s=&quot;RRCount&quot;I&quot;RRBufLen&quot;I&quot;RRIdxOfft&quot;I&quot;RRBufOfft&quot;I}&quot;buf&quot;[0C]}'>
<field declared_type64='uint32_t' name='len' type64='I'/>
<field declared_type64='ether_addr_t' name='mac_addr' type64='{ether_addr=&quot;octet&quot;[6C]}'/>
<field declared_type64='uint8_t' name='flags' type64='C'/>
<field declared_type64='uint8_t' name='reserved' type64='C'/>
<field declared_type64='offload_inet_info_t' name='ips' type64='{offload_inet_info_s=&quot;v4LocalAddrCount&quot;C&quot;v4AddrCount&quot;C&quot;v6LocalAddrCount&quot;C&quot;v6AddrCount&quot;C&quot;v4AddrOfft&quot;I&quot;v4PrefixOfft&quot;I&quot;v6AddrOfft&quot;I&quot;v6PrefixOfft&quot;I}'/>
<field declared_type64='offload_port_info_t' name='ports' type64='{offload_port_info_s=&quot;UDPPortCount&quot;S&quot;TCPPortCount&quot;S&quot;UDPPortOfft&quot;I&quot;TCPPortOfft&quot;I}'/>
<field declared_type64='offload_keep_alive_info_t' name='kas' type64='{offload_keep_alive_info_s=&quot;v4KACount&quot;S&quot;v6KACount&quot;S&quot;retryCount&quot;I&quot;retryInterval&quot;I&quot;v4KAOfft&quot;I&quot;v6KAOfft&quot;I}'/>
<field declared_type64='offload_rr_info_t' name='rrs' type64='{offload_rr_info_s=&quot;RRCount&quot;I&quot;RRBufLen&quot;I&quot;RRIdxOfft&quot;I&quot;RRBufOfft&quot;I}'/>
<field declared_type64='uint8_t*' name='buf' type64='[0C]'/>
</struct>
<struct name='offload_keep_alive_info_s' type64='{offload_keep_alive_info_s=&quot;v4KACount&quot;S&quot;v6KACount&quot;S&quot;retryCount&quot;I&quot;retryInterval&quot;I&quot;v4KAOfft&quot;I&quot;v6KAOfft&quot;I}'>
<field declared_type64='uint16_t' name='v4KACount' type64='S'/>
<field declared_type64='uint16_t' name='v6KACount' type64='S'/>
<field declared_type64='uint32_t' name='retryCount' type64='I'/>
<field declared_type64='uint32_t' name='retryInterval' type64='I'/>
<field declared_type64='uint32_t' name='v4KAOfft' type64='I'/>
<field declared_type64='uint32_t' name='v6KAOfft' type64='I'/>
</struct>
<struct name='offload_keep_alive_info_t' type64='{offload_keep_alive_info_s=&quot;v4KACount&quot;S&quot;v6KACount&quot;S&quot;retryCount&quot;I&quot;retryInterval&quot;I&quot;v4KAOfft&quot;I&quot;v6KAOfft&quot;I}'>
<field declared_type64='uint16_t' name='v4KACount' type64='S'/>
<field declared_type64='uint16_t' name='v6KACount' type64='S'/>
<field declared_type64='uint32_t' name='retryCount' type64='I'/>
<field declared_type64='uint32_t' name='retryInterval' type64='I'/>
<field declared_type64='uint32_t' name='v4KAOfft' type64='I'/>
<field declared_type64='uint32_t' name='v6KAOfft' type64='I'/>
</struct>
<struct name='offload_port_info_s' type64='{offload_port_info_s=&quot;UDPPortCount&quot;S&quot;TCPPortCount&quot;S&quot;UDPPortOfft&quot;I&quot;TCPPortOfft&quot;I}'>
<field declared_type64='uint16_t' name='UDPPortCount' type64='S'/>
<field declared_type64='uint16_t' name='TCPPortCount' type64='S'/>
<field declared_type64='uint32_t' name='UDPPortOfft' type64='I'/>
<field declared_type64='uint32_t' name='TCPPortOfft' type64='I'/>
</struct>
<struct name='offload_port_info_t' type64='{offload_port_info_s=&quot;UDPPortCount&quot;S&quot;TCPPortCount&quot;S&quot;UDPPortOfft&quot;I&quot;TCPPortOfft&quot;I}'>
<field declared_type64='uint16_t' name='UDPPortCount' type64='S'/>
<field declared_type64='uint16_t' name='TCPPortCount' type64='S'/>
<field declared_type64='uint32_t' name='UDPPortOfft' type64='I'/>
<field declared_type64='uint32_t' name='TCPPortOfft' type64='I'/>
</struct>
<struct name='offload_rr_info_s' type64='{offload_rr_info_s=&quot;RRCount&quot;I&quot;RRBufLen&quot;I&quot;RRIdxOfft&quot;I&quot;RRBufOfft&quot;I}'>
<field declared_type64='uint32_t' name='RRCount' type64='I'/>
<field declared_type64='uint32_t' name='RRBufLen' type64='I'/>
<field declared_type64='uint32_t' name='RRIdxOfft' type64='I'/>
<field declared_type64='uint32_t' name='RRBufOfft' type64='I'/>
</struct>
<struct name='offload_rr_info_t' type64='{offload_rr_info_s=&quot;RRCount&quot;I&quot;RRBufLen&quot;I&quot;RRIdxOfft&quot;I&quot;RRBufOfft&quot;I}'>
<field declared_type64='uint32_t' name='RRCount' type64='I'/>
<field declared_type64='uint32_t' name='RRBufLen' type64='I'/>
<field declared_type64='uint32_t' name='RRIdxOfft' type64='I'/>
<field declared_type64='uint32_t' name='RRBufOfft' type64='I'/>
</struct>
<struct name='offload_v4_keep_alive_s' type64='{offload_v4_keep_alive_s=&quot;timeout&quot;I&quot;local_port&quot;S&quot;remote_port&quot;S&quot;remote_mac_addr&quot;{ether_addr=&quot;octet&quot;[6C]}&quot;win_size&quot;S&quot;seq_num&quot;I&quot;ack_num&quot;I&quot;local_ip&quot;I&quot;remote_ip&quot;I}'>
<field declared_type64='uint32_t' name='timeout' type64='I'/>
<field declared_type64='in_port_t' name='local_port' type64='S'/>
<field declared_type64='in_port_t' name='remote_port' type64='S'/>
<field declared_type64='ether_addr_t' name='remote_mac_addr' type64='{ether_addr=&quot;octet&quot;[6C]}'/>
<field declared_type64='uint16_t' name='win_size' type64='S'/>
<field declared_type64='uint32_t' name='seq_num' type64='I'/>
<field declared_type64='uint32_t' name='ack_num' type64='I'/>
<field declared_type64='in_addr_t' name='local_ip' type64='I'/>
<field declared_type64='in_addr_t' name='remote_ip' type64='I'/>
</struct>
<struct name='offload_v4_keep_alive_t' type64='{offload_v4_keep_alive_s=&quot;timeout&quot;I&quot;local_port&quot;S&quot;remote_port&quot;S&quot;remote_mac_addr&quot;{ether_addr=&quot;octet&quot;[6C]}&quot;win_size&quot;S&quot;seq_num&quot;I&quot;ack_num&quot;I&quot;local_ip&quot;I&quot;remote_ip&quot;I}'>
<field declared_type64='uint32_t' name='timeout' type64='I'/>
<field declared_type64='in_port_t' name='local_port' type64='S'/>
<field declared_type64='in_port_t' name='remote_port' type64='S'/>
<field declared_type64='ether_addr_t' name='remote_mac_addr' type64='{ether_addr=&quot;octet&quot;[6C]}'/>
<field declared_type64='uint16_t' name='win_size' type64='S'/>
<field declared_type64='uint32_t' name='seq_num' type64='I'/>
<field declared_type64='uint32_t' name='ack_num' type64='I'/>
<field declared_type64='in_addr_t' name='local_ip' type64='I'/>
<field declared_type64='in_addr_t' name='remote_ip' type64='I'/>
</struct>
<struct name='offload_v6_keep_alive_s' type64='{offload_v6_keep_alive_s=&quot;timeout&quot;I&quot;local_port&quot;S&quot;remote_port&quot;S&quot;remote_mac_addr&quot;{ether_addr=&quot;octet&quot;[6C]}&quot;win_size&quot;S&quot;seq_num&quot;I&quot;ack_num&quot;I&quot;local_ip&quot;{in6_addr=&quot;__u6_addr&quot;(?=&quot;__u6_addr8&quot;[16C]&quot;__u6_addr16&quot;[8S]&quot;__u6_addr32&quot;[4I])}&quot;remote_ip&quot;{in6_addr=&quot;__u6_addr&quot;(?=&quot;__u6_addr8&quot;[16C]&quot;__u6_addr16&quot;[8S]&quot;__u6_addr32&quot;[4I])}}'>
<field declared_type64='uint32_t' name='timeout' type64='I'/>
<field declared_type64='in_port_t' name='local_port' type64='S'/>
<field declared_type64='in_port_t' name='remote_port' type64='S'/>
<field declared_type64='ether_addr_t' name='remote_mac_addr' type64='{ether_addr=&quot;octet&quot;[6C]}'/>
<field declared_type64='uint16_t' name='win_size' type64='S'/>
<field declared_type64='uint32_t' name='seq_num' type64='I'/>
<field declared_type64='uint32_t' name='ack_num' type64='I'/>
<field declared_type64='in6_addr_t' name='local_ip' type64='{in6_addr=&quot;__u6_addr&quot;(?=&quot;__u6_addr8&quot;[16C]&quot;__u6_addr16&quot;[8S]&quot;__u6_addr32&quot;[4I])}'/>
<field declared_type64='in6_addr_t' name='remote_ip' type64='{in6_addr=&quot;__u6_addr&quot;(?=&quot;__u6_addr8&quot;[16C]&quot;__u6_addr16&quot;[8S]&quot;__u6_addr32&quot;[4I])}'/>
</struct>
<struct name='offload_v6_keep_alive_t' type64='{offload_v6_keep_alive_s=&quot;timeout&quot;I&quot;local_port&quot;S&quot;remote_port&quot;S&quot;remote_mac_addr&quot;{ether_addr=&quot;octet&quot;[6C]}&quot;win_size&quot;S&quot;seq_num&quot;I&quot;ack_num&quot;I&quot;local_ip&quot;{in6_addr=&quot;__u6_addr&quot;(?=&quot;__u6_addr8&quot;[16C]&quot;__u6_addr16&quot;[8S]&quot;__u6_addr32&quot;[4I])}&quot;remote_ip&quot;{in6_addr=&quot;__u6_addr&quot;(?=&quot;__u6_addr8&quot;[16C]&quot;__u6_addr16&quot;[8S]&quot;__u6_addr32&quot;[4I])}}'>
<field declared_type64='uint32_t' name='timeout' type64='I'/>
<field declared_type64='in_port_t' name='local_port' type64='S'/>
<field declared_type64='in_port_t' name='remote_port' type64='S'/>
<field declared_type64='ether_addr_t' name='remote_mac_addr' type64='{ether_addr=&quot;octet&quot;[6C]}'/>
<field declared_type64='uint16_t' name='win_size' type64='S'/>
<field declared_type64='uint32_t' name='seq_num' type64='I'/>
<field declared_type64='uint32_t' name='ack_num' type64='I'/>
<field declared_type64='in6_addr_t' name='local_ip' type64='{in6_addr=&quot;__u6_addr&quot;(?=&quot;__u6_addr8&quot;[16C]&quot;__u6_addr16&quot;[8S]&quot;__u6_addr32&quot;[4I])}'/>
<field declared_type64='in6_addr_t' name='remote_ip' type64='{in6_addr=&quot;__u6_addr&quot;(?=&quot;__u6_addr8&quot;[16C]&quot;__u6_addr16&quot;[8S]&quot;__u6_addr32&quot;[4I])}'/>
</struct>
<struct name='rr_null_record_s' type64='{rr_null_record_s=&quot;rr_record&quot;(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})&quot;data&quot;[0C]}'>
<field declared_type64='rr_record_t' name='rr_record' type64='(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})'/>
<field declared_type64='uint8_t*' name='data' type64='^C'/>
</struct>
<struct name='rr_null_record_t' type64='{rr_null_record_s=&quot;rr_record&quot;(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})&quot;data&quot;[0C]}'>
<field declared_type64='rr_record_t' name='rr_record' type64='(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})'/>
<field declared_type64='uint8_t*' name='data' type64='^C'/>
</struct>
<struct name='rr_ptr_record_s' type64='{rr_ptr_record_s=&quot;rr_record&quot;(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})&quot;name&quot;[0C]}'>
<field declared_type64='rr_record_t' name='rr_record' type64='(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})'/>
<field declared_type64='uint8_t*' name='name' type64='^C'/>
</struct>
<struct name='rr_ptr_record_t' type64='{rr_ptr_record_s=&quot;rr_record&quot;(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})&quot;name&quot;[0C]}'>
<field declared_type64='rr_record_t' name='rr_record' type64='(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})'/>
<field declared_type64='uint8_t*' name='name' type64='^C'/>
</struct>
<struct name='rr_srv_record_s' type64='{rr_srv_record_s=&quot;rr_record&quot;(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})&quot;&quot;{?=&quot;priority&quot;S&quot;weight&quot;S&quot;port&quot;S&quot;target&quot;[0C]}&quot;sub_type&quot;{rr_sub_type_s=&quot;sub_typ_cnt&quot;S&quot;sub_typ_name&quot;[0C]}}'>
<field declared_type64='rr_record_t' name='rr_record' type64='(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})'/>
<field declared_type64='struct rr_srv_record_s::(anonymous at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk/System/Library/Frameworks/NetworkingDriverKit.framework/Headers/IOUserNetworkEthernetNicProxy.h:162:5)' type64='{_structrr_srv_record_sanonymousatApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX110sdkSystemLibraryFrameworksNetworkingDriverKitframeworkHeadersIOUserNetworkEthernetNicProxyh1625=&quot;priority&quot;S&quot;weight&quot;S&quot;port&quot;S&quot;target&quot;[0C]}'/>
<field declared_type64='rr_sub_type_t' name='sub_type' type64='{rr_sub_type_s=&quot;sub_typ_cnt&quot;S&quot;sub_typ_name&quot;[0C]}'/>
</struct>
<struct name='rr_srv_record_t' type64='{rr_srv_record_s=&quot;rr_record&quot;(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})&quot;&quot;{?=&quot;priority&quot;S&quot;weight&quot;S&quot;port&quot;S&quot;target&quot;[0C]}&quot;sub_type&quot;{rr_sub_type_s=&quot;sub_typ_cnt&quot;S&quot;sub_typ_name&quot;[0C]}}'>
<field declared_type64='rr_record_t' name='rr_record' type64='(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})'/>
<field declared_type64='struct rr_srv_record_s::(anonymous at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk/System/Library/Frameworks/NetworkingDriverKit.framework/Headers/IOUserNetworkEthernetNicProxy.h:162:5)' type64='{_structrr_srv_record_sanonymousatApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX110sdkSystemLibraryFrameworksNetworkingDriverKitframeworkHeadersIOUserNetworkEthernetNicProxyh1625=&quot;priority&quot;S&quot;weight&quot;S&quot;port&quot;S&quot;target&quot;[0C]}'/>
<field declared_type64='rr_sub_type_t' name='sub_type' type64='{rr_sub_type_s=&quot;sub_typ_cnt&quot;S&quot;sub_typ_name&quot;[0C]}'/>
</struct>
<struct name='rr_sub_type_s' type64='{rr_sub_type_s=&quot;sub_typ_cnt&quot;S&quot;sub_typ_name&quot;[0C]}'>
<field declared_type64='uint16_t' name='sub_typ_cnt' type64='S'/>
<field declared_type64='uint8_t*' name='sub_typ_name' type64='^C'/>
</struct>
<struct name='rr_sub_type_t' type64='{rr_sub_type_s=&quot;sub_typ_cnt&quot;S&quot;sub_typ_name&quot;[0C]}'>
<field declared_type64='uint16_t' name='sub_typ_cnt' type64='S'/>
<field declared_type64='uint8_t*' name='sub_typ_name' type64='^C'/>
</struct>
<struct name='rr_txt_record_s' type64='{rr_txt_record_s=&quot;rr_record&quot;(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})&quot;txt&quot;[0C]}'>
<field declared_type64='rr_record_t' name='rr_record' type64='(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})'/>
<field declared_type64='uint8_t*' name='txt' type64='^C'/>
</struct>
<struct name='rr_txt_record_t' type64='{rr_txt_record_s=&quot;rr_record&quot;(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})&quot;txt&quot;[0C]}'>
<field declared_type64='rr_record_t' name='rr_record' type64='(rr_record_s=&quot;label&quot;{?=&quot;len&quot;C}&quot;ptr&quot;{?=&quot;hb&quot;C&quot;lb&quot;C&quot;record&quot;[0C]}&quot;rr&quot;{?=&quot;type&quot;S&quot;rr_class&quot;S&quot;ttl&quot;I&quot;len&quot;S})'/>
<field declared_type64='uint8_t*' name='txt' type64='^C'/>
</struct>
<constant declared_type64='int' name='IOService' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkEthernet' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkEthernetInterface' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkEthernetMetaClass' type64='i'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='IOUserNetworkEthernet_Class' type64='{OSClassLoadInformation=}'/>
<constant declared_type64='Class' name='IOUserNetworkPacket' type64='#'/>
<constant declared_type64='int' name='IOUserNetworkPacketBufferPool' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkPacketBufferPoolInterface' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkPacketBufferPoolMetaClass' type64='i'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='IOUserNetworkPacketBufferPool_Class' type64='{OSClassLoadInformation=}'/>
<constant declared_type64='Class' name='IOUserNetworkPacketInterface' type64='#'/>
<constant declared_type64='Class' name='IOUserNetworkPacketMetaClass' type64='#'/>
<constant declared_type64='int' name='IOUserNetworkPacketQueue' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkPacketQueueInterface' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkPacketQueueMetaClass' type64='i'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='IOUserNetworkPacketQueue_Class' type64='{OSClassLoadInformation=}'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='IOUserNetworkPacket_Class' type64='{OSClassLoadInformation=}'/>
<constant declared_type64='int' name='IOUserNetworkRxCompletionQueue' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkRxCompletionQueueInterface' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkRxCompletionQueueMetaClass' type64='i'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='IOUserNetworkRxCompletionQueue_Class' type64='{OSClassLoadInformation=}'/>
<constant declared_type64='int' name='IOUserNetworkRxSubmissionQueue' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkRxSubmissionQueueInterface' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkRxSubmissionQueueMetaClass' type64='i'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='IOUserNetworkRxSubmissionQueue_Class' type64='{OSClassLoadInformation=}'/>
<constant declared_type64='int' name='IOUserNetworkTxCompletionQueue' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkTxCompletionQueueInterface' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkTxCompletionQueueMetaClass' type64='i'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='IOUserNetworkTxCompletionQueue_Class' type64='{OSClassLoadInformation=}'/>
<constant declared_type64='int' name='IOUserNetworkTxSubmissionQueue' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkTxSubmissionQueueInterface' type64='i'/>
<constant declared_type64='int' name='IOUserNetworkTxSubmissionQueueMetaClass' type64='i'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='IOUserNetworkTxSubmissionQueue_Class' type64='{OSClassLoadInformation=}'/>
<constant declared_type64='int' name='OSAction' type64='i'/>
<constant declared_type64='int' name='OSAction_IOUserNetworkEthernet__DataAvailable' type64='i'/>
<constant declared_type64='int' name='OSAction_IOUserNetworkEthernet__DataAvailableInterface' type64='i'/>
<constant declared_type64='int' name='OSAction_IOUserNetworkEthernet__DataAvailableMetaClass' type64='i'/>
<constant const='true' declared_type64='struct OSClassLoadInformation' name='OSAction_IOUserNetworkEthernet__DataAvailable_Class' type64='{OSClassLoadInformation=}'/>
<constant declared_type64='int' name='OSInterface' type64='i'/>
<constant declared_type64='int' name='OSMetaClass' type64='i'/>
<constant declared_type64='int' name='OSObject' type64='i'/>
<constant declared_type64='int*' name='gIOUserNetworkEthernetMetaClass' type64='^i'/>
<constant declared_type64='int*' name='gIOUserNetworkPacketBufferPoolMetaClass' type64='^i'/>
<constant declared_type64='int*' name='gIOUserNetworkPacketMetaClass' type64='^i'/>
<constant declared_type64='int*' name='gIOUserNetworkPacketQueueMetaClass' type64='^i'/>
<constant declared_type64='int*' name='gIOUserNetworkRxCompletionQueueMetaClass' type64='^i'/>
<constant declared_type64='int*' name='gIOUserNetworkRxSubmissionQueueMetaClass' type64='^i'/>
<constant declared_type64='int*' name='gIOUserNetworkTxCompletionQueueMetaClass' type64='^i'/>
<constant declared_type64='int*' name='gIOUserNetworkTxSubmissionQueueMetaClass' type64='^i'/>
<constant declared_type64='int*' name='gOSAction_IOUserNetworkEthernet__DataAvailableMetaClass' type64='^i'/>
<enum name='IOUserNetworkEthernet_GetHardwareAssists_ID' value64='16679814207064797292'/>
<enum name='IOUserNetworkEthernet_GetMaxTransferUnit_ID' value64='11859500583396896725'/>
<enum name='IOUserNetworkEthernet_ReleaseNicProxyData_ID' value64='11477451977261338228'/>
<enum name='IOUserNetworkEthernet_ReportDataBandwidths_ID' value64='13457782789630604582'/>
<enum name='IOUserNetworkEthernet_ReportLinkQuality_ID' value64='12729422760767926130'/>
<enum name='IOUserNetworkEthernet_ReportLinkStatus_ID' value64='13823394040626310221'/>
<enum name='IOUserNetworkEthernet_ReportNicProxyLimits_ID' value64='11884490708663947635'/>
<enum name='IOUserNetworkEthernet_RetainNicProxyData_ID' value64='12260836260246827795'/>
<enum name='IOUserNetworkEthernet_SelectMediaType_ID' value64='14116034701012226558'/>
<enum name='IOUserNetworkEthernet_SetAllMulticastModeEnable_ID' value64='16159663652522234405'/>
<enum name='IOUserNetworkEthernet_SetHardwareAssists_ID' value64='16399778060869198294'/>
<enum name='IOUserNetworkEthernet_SetInterfaceEnable_ID' value64='17591528364925657050'/>
<enum name='IOUserNetworkEthernet_SetMTU_ID' value64='17112802041546730766'/>
<enum name='IOUserNetworkEthernet_SetMulticastAddresses_ID' value64='11652309763253471681'/>
<enum name='IOUserNetworkEthernet_SetPromiscuousModeEnable_ID' value64='16173267123822803372'/>
<enum name='IOUserNetworkEthernet_SetWakeOnMagicPacketEnable_ID' value64='12843949626206059413'/>
<enum name='IOUserNetworkEthernet__DataAvailable_ID' value64='17437537243140497154'/>
<enum name='IOUserNetworkEthernet__RegisterEthernetInterface_ID' value64='15250584130904752949'/>
<enum name='IOUserNetworkEthernet__ReportAvailableMediaTypes_ID' value64='13009575116156156970'/>
<enum name='IOUserNetworkEthernet__SetMulticastAddresses_ID' value64='18224002736400622178'/>
<enum name='IOUserNetworkPacketBufferPool_CopyMemoryDescriptor_ID' value64='14530644891684263735'/>
<enum name='IOUserNetworkPacketBufferPool_GetBufferCount_ID' value64='16799224426972265406'/>
<enum name='IOUserNetworkPacketBufferPool_GetPacketCount_ID' value64='17630154748140225259'/>
<enum name='IOUserNetworkPacketBufferPool__CopyPacketWithIndex_ID' value64='17300115148458543608'/>
<enum name='IOUserNetworkPacketBufferPool__Create_ID' value64='10245347456471725095'/>
<enum name='IOUserNetworkPacketBufferPool__DeallocatePacket_ID' value64='10871698816987465397'/>
<enum name='IOUserNetworkPacketQueue_SetDataQueue_ID' value64='14136408248927626219'/>
<enum name='IOUserNetworkPacketQueue_SetEnable_ID' value64='10121682799667522932'/>
<enum name='IOUserNetworkRxCompletionQueue_Create_ID' value64='17883809862295020580'/>
<enum name='IOUserNetworkRxSubmissionQueue_Create_ID' value64='10549671829748398935'/>
<enum name='IOUserNetworkTxCompletionQueue_Create_ID' value64='15873305614771388805'/>
<enum name='IOUserNetworkTxSubmissionQueue_Create_ID' value64='14016784116837742291'/>
<enum name='PoolFlagMapToDevice' value64='536870912'/>
<enum name='PoolFlagMapToDext' value64='268435456'/>
<enum name='PoolFlagMask' value64='805306374'/>
<enum name='PoolFlagPersistentMemory' value64='4'/>
<enum name='PoolFlagSingleMemorySegment' value64='2'/>
<enum name='kIOUserNetworkFeatureFlagNicProxy' value64='134217728'/>
<enum name='kIOUserNetworkFeatureFlagSoftwareVlan' value64='131072'/>
<enum name='kIOUserNetworkFeatureFlagWOMP' value64='67108864'/>
<enum name='kIOUserNetworkLinkQualityBad' value64='10'/>
<enum name='kIOUserNetworkLinkQualityGood' value64='100'/>
<enum name='kIOUserNetworkLinkQualityOff' value64='-2'/>
<enum name='kIOUserNetworkLinkQualityPoor' value64='50'/>
<enum name='kIOUserNetworkLinkQualityUnknown' value64='-1'/>
<enum name='kIOUserNetworkLinkStatusActive' value64='3'/>
<enum name='kIOUserNetworkLinkStatusInactive' value64='1'/>
<enum name='kIOUserNetworkLinkStatusInvalid' value64='0'/>
<enum name='kIOUserNetworkLinkStatusWakeSameNet' value64='4'/>
<enum name='kIOUserNetworkMediaEthernet1000BaseCX' value64='47'/>
<enum name='kIOUserNetworkMediaEthernet1000BaseCX_SGMII' value64='56'/>
<enum name='kIOUserNetworkMediaEthernet1000BaseKX' value64='57'/>
<enum name='kIOUserNetworkMediaEthernet1000BaseLX' value64='46'/>
<enum name='kIOUserNetworkMediaEthernet1000BaseSX' value64='43'/>
<enum name='kIOUserNetworkMediaEthernet1000BaseT' value64='48'/>
<enum name='kIOUserNetworkMediaEthernet100BaseFX' value64='39'/>
<enum name='kIOUserNetworkMediaEthernet100BaseT2' value64='42'/>
<enum name='kIOUserNetworkMediaEthernet100BaseT4' value64='40'/>
<enum name='kIOUserNetworkMediaEthernet100BaseTX' value64='38'/>
<enum name='kIOUserNetworkMediaEthernet100BaseVG' value64='41'/>
<enum name='kIOUserNetworkMediaEthernet100GBaseCR4' value64='2092'/>
<enum name='kIOUserNetworkMediaEthernet100GBaseKR4' value64='2094'/>
<enum name='kIOUserNetworkMediaEthernet100GBaseLR4' value64='2095'/>
<enum name='kIOUserNetworkMediaEthernet100GBaseSR4' value64='2093'/>
<enum name='kIOUserNetworkMediaEthernet10Base2' value64='36'/>
<enum name='kIOUserNetworkMediaEthernet10Base5' value64='37'/>
<enum name='kIOUserNetworkMediaEthernet10BaseFL' value64='45'/>
<enum name='kIOUserNetworkMediaEthernet10BaseSTP' value64='44'/>
<enum name='kIOUserNetworkMediaEthernet10BaseT' value64='35'/>
<enum name='kIOUserNetworkMediaEthernet10GBaseCR1' value64='60'/>
<enum name='kIOUserNetworkMediaEthernet10GBaseCX4' value64='52'/>
<enum name='kIOUserNetworkMediaEthernet10GBaseER' value64='61'/>
<enum name='kIOUserNetworkMediaEthernet10GBaseKR' value64='59'/>
<enum name='kIOUserNetworkMediaEthernet10GBaseKX4' value64='58'/>
<enum name='kIOUserNetworkMediaEthernet10GBaseLR' value64='51'/>
<enum name='kIOUserNetworkMediaEthernet10GBaseSR' value64='50'/>
<enum name='kIOUserNetworkMediaEthernet10GBaseT' value64='53'/>
<enum name='kIOUserNetworkMediaEthernet20GBaseKR2' value64='62'/>
<enum name='kIOUserNetworkMediaEthernet2500BaseT' value64='54'/>
<enum name='kIOUserNetworkMediaEthernet25GBaseCR' value64='63'/>
<enum name='kIOUserNetworkMediaEthernet25GBaseKR' value64='2080'/>
<enum name='kIOUserNetworkMediaEthernet25GBaseLR' value64='2082'/>
<enum name='kIOUserNetworkMediaEthernet25GBaseSR' value64='2081'/>
<enum name='kIOUserNetworkMediaEthernet40GBaseCR4' value64='2083'/>
<enum name='kIOUserNetworkMediaEthernet40GBaseKR4' value64='2086'/>
<enum name='kIOUserNetworkMediaEthernet40GBaseLR4' value64='2085'/>
<enum name='kIOUserNetworkMediaEthernet40GBaseSR4' value64='2084'/>
<enum name='kIOUserNetworkMediaEthernet5000BaseT' value64='55'/>
<enum name='kIOUserNetworkMediaEthernet50GBaseCR2' value64='2087'/>
<enum name='kIOUserNetworkMediaEthernet50GBaseKR2' value64='2088'/>
<enum name='kIOUserNetworkMediaEthernet50GBaseLR2' value64='2090'/>
<enum name='kIOUserNetworkMediaEthernet50GBaseSR2' value64='2089'/>
<enum name='kIOUserNetworkMediaEthernet56GBaseR4' value64='2091'/>
<enum name='kIOUserNetworkMediaEthernetAuto' value64='32'/>
<enum name='kIOUserNetworkMediaEthernetHomePNA1' value64='49'/>
<enum name='kIOUserNetworkMediaEthernetManual' value64='33'/>
<enum name='kIOUserNetworkMediaEthernetMask' value64='4095'/>
<enum name='kIOUserNetworkMediaEthernetNone' value64='34'/>
<enum name='kIOUserNetworkMediaOptionEEE' value64='8388608'/>
<enum name='kIOUserNetworkMediaOptionFlowControl' value64='4194304'/>
<enum name='kIOUserNetworkMediaOptionFullDuplex' value64='1048576'/>
<enum name='kIOUserNetworkMediaOptionHalfDuplex' value64='2097152'/>
<enum name='kIOUserNetworkMediaOptionLoopback' value64='134217728'/>
<enum name='kIOUserNetworkPacketDirectionNone' value64='0'/>
<enum name='kIOUserNetworkPacketDirectionRx' value64='2'/>
<enum name='kIOUserNetworkPacketDirectionTx' value64='1'/>
</signatures>
