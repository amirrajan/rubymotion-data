<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant const='true' declared_type64='MLFeatureValueImageOption _Nonnull' name='MLFeatureValueImageOptionCropAndScale' type64='@'/>
<constant const='true' declared_type64='MLFeatureValueImageOption _Nonnull' name='MLFeatureValueImageOptionCropRect' type64='@'/>
<constant const='true' declared_type64='MLModelMetadataKey' name='MLModelAuthorKey' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='MLModelCollectionDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='MLModelMetadataKey' name='MLModelCreatorDefinedKey' type64='@'/>
<constant const='true' declared_type64='MLModelMetadataKey' name='MLModelDescriptionKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='MLModelErrorDomain' type64='@'/>
<constant const='true' declared_type64='MLModelMetadataKey' name='MLModelLicenseKey' type64='@'/>
<constant const='true' declared_type64='MLModelMetadataKey' name='MLModelVersionStringKey' type64='@'/>
<enum name='MLComputeUnitsAll' value64='2'/>
<enum name='MLComputeUnitsCPUAndGPU' value64='1'/>
<enum name='MLComputeUnitsCPUOnly' value64='0'/>
<enum name='MLFeatureTypeDictionary' value64='6'/>
<enum name='MLFeatureTypeDouble' value64='2'/>
<enum name='MLFeatureTypeImage' value64='4'/>
<enum name='MLFeatureTypeInt64' value64='1'/>
<enum name='MLFeatureTypeInvalid' value64='0'/>
<enum name='MLFeatureTypeMultiArray' value64='5'/>
<enum name='MLFeatureTypeSequence' value64='7'/>
<enum name='MLFeatureTypeString' value64='3'/>
<enum name='MLImageSizeConstraintTypeEnumerated' value64='2'/>
<enum name='MLImageSizeConstraintTypeRange' value64='3'/>
<enum name='MLImageSizeConstraintTypeUnspecified' value64='0'/>
<enum name='MLModelErrorCustomLayer' value64='4'/>
<enum name='MLModelErrorCustomModel' value64='5'/>
<enum name='MLModelErrorFeatureType' value64='1'/>
<enum name='MLModelErrorGeneric' value64='0'/>
<enum name='MLModelErrorIO' value64='3'/>
<enum name='MLModelErrorModelCollection' value64='10'/>
<enum name='MLModelErrorModelDecryption' value64='9'/>
<enum name='MLModelErrorModelDecryptionKeyFetch' value64='8'/>
<enum name='MLModelErrorParameters' value64='7'/>
<enum name='MLModelErrorUpdate' value64='6'/>
<enum name='MLMultiArrayDataTypeDouble' value64='65600'/>
<enum name='MLMultiArrayDataTypeFloat' value64='65568'/>
<enum name='MLMultiArrayDataTypeFloat32' value64='65568'/>
<enum name='MLMultiArrayDataTypeFloat64' value64='65600'/>
<enum name='MLMultiArrayDataTypeInt32' value64='131104'/>
<enum name='MLMultiArrayShapeConstraintTypeEnumerated' value64='2'/>
<enum name='MLMultiArrayShapeConstraintTypeRange' value64='3'/>
<enum name='MLMultiArrayShapeConstraintTypeUnspecified' value64='1'/>
<enum name='MLTaskStateCancelling' value64='3'/>
<enum name='MLTaskStateCompleted' value64='4'/>
<enum name='MLTaskStateFailed' value64='5'/>
<enum name='MLTaskStateRunning' value64='2'/>
<enum name='MLTaskStateSuspended' value64='1'/>
<enum name='MLUpdateProgressEventEpochEnd' value64='2'/>
<enum name='MLUpdateProgressEventMiniBatchEnd' value64='4'/>
<enum name='MLUpdateProgressEventTrainingBegin' value64='1'/>
<class name='MLArrayBatchProvider'>
<method selector='array'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='initWithDictionary:error:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='dictionary' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFeatureProviderArray:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='array' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MLDictionaryConstraint'>
<method selector='keyType'>
<retval declared_type64='MLFeatureType' type64='q'/>
</method>
</class>
<class name='MLDictionaryFeatureProvider'>
<method selector='dictionary'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='initWithDictionary:error:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='dictionary' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='featureName' type64='@'/>
<retval declared_type64='MLFeatureValue * _Nullable' type64='@'/>
</method>
</class>
<class name='MLFeatureDescription'>
<method selector='dictionaryConstraint'>
<retval declared_type64='MLDictionaryConstraint * _Nullable' type64='@'/>
</method>
<method selector='imageConstraint'>
<retval declared_type64='MLImageConstraint * _Nullable' type64='@'/>
</method>
<method selector='isAllowedValue:'>
<arg declared_type64='MLFeatureValue * _Nonnull' index='0' name='value' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOptional'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='multiArrayConstraint'>
<retval declared_type64='MLMultiArrayConstraint * _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='sequenceConstraint'>
<retval declared_type64='MLSequenceConstraint * _Nullable' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='MLFeatureType' type64='q'/>
</method>
</class>
<class name='MLFeatureValue'>
<method selector='dictionaryValue'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method class_method='true' selector='featureValueWithCGImage:constraint:options:error:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<arg declared_type64='MLImageConstraint * _Nonnull' index='1' name='constraint' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithCGImage:orientation:constraint:options:error:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<arg declared_type64='CGImagePropertyOrientation' index='1' name='orientation' type64='I'/>
<arg declared_type64='MLImageConstraint * _Nonnull' index='2' name='constraint' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithCGImage:orientation:pixelsWide:pixelsHigh:pixelFormatType:options:error:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<arg declared_type64='CGImagePropertyOrientation' index='1' name='orientation' type64='I'/>
<arg declared_type64='NSInteger' index='2' name='pixelsWide' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='pixelsHigh' type64='q'/>
<arg declared_type64='OSType' index='4' name='pixelFormatType' type64='I'/>
<arg declared_type64='NSDictionary * _Nullable' index='5' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='6' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithCGImage:pixelsWide:pixelsHigh:pixelFormatType:options:error:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<arg declared_type64='NSInteger' index='1' name='pixelsWide' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='pixelsHigh' type64='q'/>
<arg declared_type64='OSType' index='3' name='pixelFormatType' type64='I'/>
<arg declared_type64='NSDictionary * _Nullable' index='4' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='5' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithDictionary:error:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='value' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithDouble:'>
<arg declared_type64='double' index='0' name='value' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithImageAtURL:constraint:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='MLImageConstraint * _Nonnull' index='1' name='constraint' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithImageAtURL:orientation:constraint:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='CGImagePropertyOrientation' index='1' name='orientation' type64='I'/>
<arg declared_type64='MLImageConstraint * _Nonnull' index='2' name='constraint' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithImageAtURL:orientation:pixelsWide:pixelsHigh:pixelFormatType:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='CGImagePropertyOrientation' index='1' name='orientation' type64='I'/>
<arg declared_type64='NSInteger' index='2' name='pixelsWide' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='pixelsHigh' type64='q'/>
<arg declared_type64='OSType' index='4' name='pixelFormatType' type64='I'/>
<arg declared_type64='NSDictionary * _Nullable' index='5' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='6' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithImageAtURL:pixelsWide:pixelsHigh:pixelFormatType:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='pixelsWide' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='pixelsHigh' type64='q'/>
<arg declared_type64='OSType' index='3' name='pixelFormatType' type64='I'/>
<arg declared_type64='NSDictionary * _Nullable' index='4' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='5' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithInt64:'>
<arg declared_type64='int64_t' index='0' name='value' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithMultiArray:'>
<arg declared_type64='MLMultiArray * _Nonnull' index='0' name='value' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithPixelBuffer:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='value' type64='^{__CVBuffer=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithSequence:'>
<arg declared_type64='MLSequence * _Nonnull' index='0' name='sequence' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='featureValueWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='value' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='imageBufferValue'>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='int64Value'>
<retval declared_type64='int64_t' type64='q'/>
</method>
<method selector='isEqualToFeatureValue:'>
<arg declared_type64='MLFeatureValue * _Nonnull' index='0' name='value' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isUndefined'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='multiArrayValue'>
<retval declared_type64='MLMultiArray * _Nullable' type64='@'/>
</method>
<method selector='sequenceValue'>
<retval declared_type64='MLSequence * _Nullable' type64='@'/>
</method>
<method selector='stringValue'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='MLFeatureType' type64='q'/>
</method>
<method class_method='true' selector='undefinedFeatureValueWithType:'>
<arg declared_type64='MLFeatureType' index='0' name='type' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MLImageConstraint'>
<method selector='pixelFormatType'>
<retval declared_type64='OSType' type64='I'/>
</method>
<method selector='pixelsHigh'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='pixelsWide'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='sizeConstraint'>
<retval declared_type64='MLImageSizeConstraint * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLImageSize'>
<method selector='pixelsHigh'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='pixelsWide'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='MLImageSizeConstraint'>
<method selector='enumeratedImageSizes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='pixelsHighRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='pixelsWideRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='type'>
<retval declared_type64='MLImageSizeConstraintType' type64='q'/>
</method>
</class>
<class name='MLKey'>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='scope'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='MLMetricKey'>
<method class_method='true' selector='epochIndex'>
<retval declared_type64='MLMetricKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='lossValue'>
<retval declared_type64='MLMetricKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='miniBatchIndex'>
<retval declared_type64='MLMetricKey * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLModel'>
<method class_method='true' selector='compileModelAtURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='modelURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='configuration'>
<retval declared_type64='MLModelConfiguration * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='loadContentsOfURL:configuration:completionHandler:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='MLModelConfiguration * _Nonnull' index='1' name='configuration' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(MLModel * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='handler' type64='@?'>
<arg declared_type64='MLModel * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='modelDescription'>
<retval declared_type64='MLModelDescription * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='modelWithContentsOfURL:configuration:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='MLModelConfiguration * _Nonnull' index='1' name='configuration' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='modelWithContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='parameterValueForKey:error:'>
<arg declared_type64='MLParameterKey * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='predictionFromFeatures:error:'>
<arg declared_type64='id _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='predictionFromFeatures:options:error:'>
<arg declared_type64='id _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='MLPredictionOptions * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='predictionsFromBatch:error:'>
<arg declared_type64='id _Nonnull' index='0' name='inputBatch' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='predictionsFromBatch:options:error:'>
<arg declared_type64='id _Nonnull' index='0' name='inputBatch' type64='@'/>
<arg declared_type64='MLPredictionOptions * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='MLModelCollection'>
<method class_method='true' selector='beginAccessingModelCollectionWithIdentifier:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(MLModelCollection * _Nullable, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='MLModelCollection * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='NSProgress * _Nonnull' type64='@'/>
</method>
<method selector='deploymentID'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='endAccessingModelCollectionWithIdentifier:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(BOOL, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='entries'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLModelCollectionEntry'>
<method selector='isEqualToModelCollectionEntry:'>
<arg declared_type64='MLModelCollectionEntry * _Nonnull' index='0' name='entry' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='modelIdentifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='modelURL'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLModelConfiguration'>
<method selector='allowLowPrecisionAccumulationOnGPU'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='computeUnits'>
<retval declared_type64='MLComputeUnits' type64='q'/>
</method>
<method selector='parameters'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='preferredMetalDevice'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setAllowLowPrecisionAccumulationOnGPU:'>
<arg declared_type64='BOOL' index='0' name='allowLowPrecisionAccumulationOnGPU' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setComputeUnits:'>
<arg declared_type64='MLComputeUnits' index='0' name='computeUnits' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParameters:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='parameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMetalDevice:'>
<arg declared_type64='id _Nullable' index='0' name='preferredMetalDevice' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MLModelDescription'>
<method selector='classLabels'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='inputDescriptionsByName'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='isUpdatable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='outputDescriptionsByName'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='parameterDescriptionsByKey'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='predictedFeatureName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='predictedProbabilitiesName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='trainingInputDescriptionsByName'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLMultiArray'>
<method selector='count'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='dataPointer'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='dataType'>
<retval declared_type64='MLMultiArrayDataType' type64='q'/>
</method>
<method selector='initWithDataPointer:shape:dataType:strides:deallocator:error:'>
<arg declared_type64='void * _Nonnull' index='0' name='dataPointer' type64='^v'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='shape' type64='@'/>
<arg declared_type64='MLMultiArrayDataType' index='2' name='dataType' type64='q'/>
<arg declared_type64='NSArray * _Nonnull' index='3' name='strides' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void * _Nonnull)' function_pointer='true' index='4' name='deallocator' type64='@?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='NSError * _Nullable * _Nullable' index='5' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithShape:dataType:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='shape' type64='@'/>
<arg declared_type64='MLMultiArrayDataType' index='1' name='dataType' type64='q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='multiArrayByConcatenatingMultiArrays:alongAxis:dataType:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='multiArrays' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='axis' type64='q'/>
<arg declared_type64='MLMultiArrayDataType' index='2' name='dataType' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type64='NSInteger' index='0' name='idx' type64='q'/>
<retval declared_type64='NSNumber * _Nonnull' type64='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='NSNumber * _Nonnull' type64='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type64='NSNumber * _Nonnull' index='0' name='obj' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='idx' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObject:forKeyedSubscript:'>
<arg declared_type64='NSNumber * _Nonnull' index='0' name='obj' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shape'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='strides'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLMultiArrayConstraint'>
<method selector='dataType'>
<retval declared_type64='MLMultiArrayDataType' type64='q'/>
</method>
<method selector='shape'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='shapeConstraint'>
<retval declared_type64='MLMultiArrayShapeConstraint * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLMultiArrayShapeConstraint'>
<method selector='enumeratedShapes'>
<retval declared_type64='NSArray *&gt; * _Nonnull' type64='@'/>
</method>
<method selector='sizeRangeForDimension'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='MLMultiArrayShapeConstraintType' type64='q'/>
</method>
</class>
<class name='MLNumericConstraint'>
<method selector='enumeratedNumbers'>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='maxNumber'>
<retval declared_type64='NSNumber * _Nonnull' type64='@'/>
</method>
<method selector='minNumber'>
<retval declared_type64='NSNumber * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLParameterDescription'>
<method selector='defaultValue'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='key'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method selector='numericConstraint'>
<retval declared_type64='MLNumericConstraint * _Nullable' type64='@'/>
</method>
</class>
<class name='MLParameterKey'>
<method class_method='true' selector='beta1'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='beta2'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='biases'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='epochs'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='eps'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='learningRate'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='linkedModelFileName'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='linkedModelSearchPath'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='miniBatchSize'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='momentum'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='numberOfNeighbors'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method selector='scopedTo:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='scope' type64='@'/>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='seed'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='shuffle'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='weights'>
<retval declared_type64='MLParameterKey * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLPredictionOptions'>
<method selector='setUsesCPUOnly:'>
<arg declared_type64='BOOL' index='0' name='usesCPUOnly' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesCPUOnly'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='MLSequence'>
<method class_method='true' selector='emptySequenceWithType:'>
<arg declared_type64='MLFeatureType' index='0' name='type' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='int64Values'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sequenceWithInt64Array:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='int64Values' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sequenceWithStringArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='stringValues' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='stringValues'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='MLFeatureType' type64='q'/>
</method>
</class>
<class name='MLSequenceConstraint'>
<method selector='countRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='valueDescription'>
<retval declared_type64='MLFeatureDescription * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLTask'>
<method selector='cancel'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='resume'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='state'>
<retval declared_type64='MLTaskState' type64='q'/>
</method>
<method selector='taskIdentifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLUpdateContext'>
<method selector='event'>
<retval declared_type64='MLUpdateProgressEvent' type64='q'/>
</method>
<method selector='metrics'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='model'>
<retval declared_type64='MLModel * _Nonnull' type64='@'/>
</method>
<method selector='parameters'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='task'>
<retval declared_type64='MLUpdateTask * _Nonnull' type64='@'/>
</method>
</class>
<class name='MLUpdateProgressHandlers'>
<method selector='initForEvents:progressHandler:completionHandler:'>
<arg declared_type64='MLUpdateProgressEvent' index='0' name='interestedEvents' type64='q'/>
<arg declared_type64='void (^ _Nullable)(MLUpdateContext * _Nonnull)' function_pointer='true' index='1' name='progressHandler' type64='@?'>
<arg declared_type64='MLUpdateContext * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nonnull)(MLUpdateContext * _Nonnull)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='MLUpdateContext * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='MLUpdateTask'>
<method selector='resumeWithParameters:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='updateParameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='updateTaskForModelAtURL:trainingData:completionHandler:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='modelURL' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='trainingData' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(MLUpdateContext * _Nonnull)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='MLUpdateContext * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='updateTaskForModelAtURL:trainingData:configuration:completionHandler:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='modelURL' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='trainingData' type64='@'/>
<arg declared_type64='MLModelConfiguration * _Nullable' index='2' name='configuration' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(MLUpdateContext * _Nonnull)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<arg declared_type64='MLUpdateContext * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='updateTaskForModelAtURL:trainingData:configuration:progressHandlers:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='modelURL' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='trainingData' type64='@'/>
<arg declared_type64='MLModelConfiguration * _Nullable' index='2' name='configuration' type64='@'/>
<arg declared_type64='MLUpdateProgressHandlers * _Nonnull' index='3' name='progressHandlers' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='updateTaskForModelAtURL:trainingData:progressHandlers:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='modelURL' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='trainingData' type64='@'/>
<arg declared_type64='MLUpdateProgressHandlers * _Nonnull' index='2' name='progressHandlers' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='count'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='encodeToCommandBuffer:inputs:outputs:error:'>
<arg declared_type64='id _Nonnull' index='0' name='commandBuffer' type64='@'/>
<arg declared_type64='NSArray&gt; * _Nonnull' index='1' name='inputs' type64='@'/>
<arg declared_type64='NSArray&gt; * _Nonnull' index='2' name='outputs' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='evaluateOnCPUWithInputs:outputs:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='inputs' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='outputs' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='featureNames'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='featureValueForName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='featureName' type64='@'/>
<retval declared_type64='MLFeatureValue * _Nullable' type64='@'/>
</method>
<method selector='featuresAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='initWithModelDescription:parameterDictionary:error:'>
<arg declared_type64='MLModelDescription * _Nonnull' index='0' name='modelDescription' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='parameters' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithParameterDictionary:error:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='parameters' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='outputShapesForInputShapes:error:'>
<arg declared_type64='NSArray *&gt; * _Nonnull' index='0' name='inputShapes' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='NSArray *&gt; * _Nullable' type64='@'/>
</method>
<method selector='predictionFromFeatures:options:error:'>
<arg declared_type64='id _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='MLPredictionOptions * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='predictionsFromBatch:options:error:'>
<arg declared_type64='id _Nonnull' index='0' name='inputBatch' type64='@'/>
<arg declared_type64='MLPredictionOptions * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setWeightData:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='weights' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeToURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<informal_protocol name='MLBatchProvider'>
<method selector='count' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='featuresAtIndex:' type64='@24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='MLCustomLayer'>
<method selector='encodeToCommandBuffer:inputs:outputs:error:' type64='B48@0:8@16@24@32^@40'>
<arg declared_type64='id _Nonnull' index='0' name='commandBuffer' type64='@'/>
<arg declared_type64='NSArray&gt; * _Nonnull' index='1' name='inputs' type64='@'/>
<arg declared_type64='NSArray&gt; * _Nonnull' index='2' name='outputs' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='evaluateOnCPUWithInputs:outputs:error:' type64='B40@0:8@16@24^@32'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='inputs' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='outputs' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithParameterDictionary:error:' type64='@32@0:8@16^@24'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='parameters' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='outputShapesForInputShapes:error:' type64='@32@0:8@16^@24'>
<arg declared_type64='NSArray *&gt; * _Nonnull' index='0' name='inputShapes' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='NSArray *&gt; * _Nullable' type64='@'/>
</method>
<method selector='setWeightData:error:' type64='B32@0:8@16^@24'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='weights' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='MLCustomModel'>
<method selector='initWithModelDescription:parameterDictionary:error:' type64='@40@0:8@16@24^@32'>
<arg declared_type64='MLModelDescription * _Nonnull' index='0' name='modelDescription' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='parameters' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='predictionFromFeatures:options:error:' type64='@40@0:8@16@24^@32'>
<arg declared_type64='id _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='MLPredictionOptions * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='predictionsFromBatch:options:error:' type64='@40@0:8@16@24^@32'>
<arg declared_type64='id _Nonnull' index='0' name='inputBatch' type64='@'/>
<arg declared_type64='MLPredictionOptions * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='MLFeatureProvider'>
<method selector='featureNames' type64='@16@0:8'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='featureValueForName:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='featureName' type64='@'/>
<retval declared_type64='MLFeatureValue * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='MLWritable'>
<method selector='writeToURL:error:' type64='B32@0:8@16^@24'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
</signatures>
