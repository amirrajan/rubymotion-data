<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreDisplay.framework'/>
<depends_on path='/System/Library/Frameworks/Metal.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/IOSurface.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/AudioUnit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreData.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework'/>
<depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
<depends_on path='/System/Library/Frameworks/DiskArbitration.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/ColorSync.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreImage.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<struct name='NSDirectionalEdgeInsets' type64='{NSDirectionalEdgeInsets=&quot;top&quot;d&quot;leading&quot;d&quot;bottom&quot;d&quot;trailing&quot;d}'>
<field declared_type64='CGFloat' name='top' type64='d'/>
<field declared_type64='CGFloat' name='leading' type64='d'/>
<field declared_type64='CGFloat' name='bottom' type64='d'/>
<field declared_type64='CGFloat' name='trailing' type64='d'/>
</struct>
<cftype name='NSModalSession' type64='^{_NSModalSession=}'/>
<constant const='true' declared_type64='NSBitmapFormat' name='NS16BitBigEndianBitmapFormat' type64='Q'/>
<constant const='true' declared_type64='NSBitmapFormat' name='NS16BitLittleEndianBitmapFormat' type64='Q'/>
<constant const='true' declared_type64='NSBitmapFormat' name='NS32BitBigEndianBitmapFormat' type64='Q'/>
<constant const='true' declared_type64='NSBitmapFormat' name='NS32BitLittleEndianBitmapFormat' type64='Q'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSAWTEventType' type64='s'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSAbortModalException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSAbortPrintingException' type64='@'/>
<constant const='true' declared_type64='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionApplicationIcon' type64='@'/>
<constant const='true' declared_type64='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionApplicationName' type64='@'/>
<constant const='true' declared_type64='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionApplicationVersion' type64='@'/>
<constant const='true' declared_type64='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionCredits' type64='@'/>
<constant const='true' declared_type64='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionVersion' type64='@'/>
<constant const='true' declared_type64='NSButtonType' name='NSAcceleratorButton' type64='Q'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityActivationPointAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityAllowedValuesAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityAlternateUIVisibleAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAnnotationAttributeKey _Nonnull' name='NSAccessibilityAnnotationElement' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAnnotationAttributeKey _Nonnull' name='NSAccessibilityAnnotationLabel' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAnnotationAttributeKey _Nonnull' name='NSAccessibilityAnnotationLocation' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityAnnotationTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationUserInfoKey _Nonnull' name='NSAccessibilityAnnouncementKey' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityAnnouncementRequestedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityApplicationActivatedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityApplicationDeactivatedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityApplicationHiddenNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityApplicationRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityApplicationShownNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySortDirectionValue _Nonnull' name='NSAccessibilityAscendingSortDirectionValue' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityAttachmentTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityAttributedStringForRangeParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityAutocorrectedTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityBackgroundColorTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityBoundsForRangeParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityBrowserRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityBusyIndicatorRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityButtonRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityCancelAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityCancelButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityCellForColumnAndRowParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityCellRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityCenterTabStopMarkerTypeValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityCentimetersUnitValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityCheckBoxRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityChildrenAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityClearButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityCloseButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityCloseButtonSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityCollectionListSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityColorWellRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnCountAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnHeaderUIElementsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnIndexRangeAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityColumnRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnTitlesAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityComboBoxRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityConfirmAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityContainsProtectedContentAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityContentListSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityContentsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityCreatedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityCriticalValueAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityCustomTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityDecimalTabStopMarkerTypeValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityDecrementAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDecrementArrowSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDecrementButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDecrementPageSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDefaultButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDefinitionListSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityDeleteAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySortDirectionValue _Nonnull' name='NSAccessibilityDescendingSortDirectionValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDescriptionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDescriptionListSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDialogSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDisclosedByRowAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDisclosedRowsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDisclosingAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDisclosureLevelAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityDisclosureTriangleRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityDrawerCreatedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityDrawerRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityEditedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityEnabledAttribute' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSAccessibilityErrorCodeExceptionInfo' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSAccessibilityException' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityExpandedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityExtrasMenuBarAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFilenameAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityFirstLineIndentMarkerTypeValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityFloatingWindowSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFocusedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFocusedUIElementAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityFocusedUIElementChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFocusedWindowAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityFocusedWindowChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityFontAttributeKey _Nonnull' name='NSAccessibilityFontFamilyKey' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityFontAttributeKey _Nonnull' name='NSAccessibilityFontNameKey' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityFontAttributeKey _Nonnull' name='NSAccessibilityFontSizeKey' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityFontTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityForegroundColorTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFrontmostAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFullScreenButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityFullScreenButtonSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityGridRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityGroupRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityGrowAreaAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityGrowAreaRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityHandleRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHandlesAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityHeadIndentMarkerTypeValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHeaderAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHelpAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityHelpTagCreatedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityHelpTagRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHiddenAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityOrientationValue _Nonnull' name='NSAccessibilityHorizontalOrientationValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHorizontalScrollBarAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHorizontalUnitDescriptionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHorizontalUnitsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityIdentifierAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityImageRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityInchesUnitValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityIncrementAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityIncrementArrowSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityIncrementButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityIncrementPageSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityIncrementorRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityIndexAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityInsertionPointLineNumberAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityLabelUIElementsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityLabelValueAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityLanguageTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityLayoutAreaRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityLayoutChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityLayoutItemRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityLayoutPointForScreenPointParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityLeftTabStopMarkerTypeValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityLevelIndicatorRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityLineForIndexParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityLinkRole' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityLinkTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityLinkedUIElementsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityListItemIndexTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityListItemLevelTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityListItemPrefixTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityListRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMainAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMainWindowAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityMainWindowChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityMarkedMisspelledTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerGroupUIElementAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerTypeAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerTypeDescriptionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerUIElementsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerValuesAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMatteContentUIElementAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMatteHoleAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityMatteRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMaxValueAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMenuBarAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuBarItemRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuBarRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuButtonRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuItemRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMinValueAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMinimizeButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityMinimizeButtonSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMinimizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityMisspelledTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityModalAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityMovedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityNextContentsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityNumberOfCharactersAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityOrderedByRowAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityOrientationAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityOutlineRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityOutlineRowSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityOverflowButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityPageRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityParentAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityPicasUnitValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityPickAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityPlaceholderValueAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityPointsUnitValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityPopUpButtonRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityPopoverRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityPositionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityPressAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityPreviousContentsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationUserInfoKey _Nonnull' name='NSAccessibilityPriorityKey' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityProgressIndicatorRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityProxyAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityRTFForRangeParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityRadioButtonRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityRadioGroupRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityRaiseAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityRangeForIndexParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityRangeForLineParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityRangeForPositionParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityRatingIndicatorSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityRelevanceIndicatorRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRequiredAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityResizedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityRightTabStopMarkerTypeValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRoleAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRoleDescriptionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityRowCollapsedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRowCountAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityRowCountChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityRowExpandedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRowHeaderUIElementsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRowIndexRangeAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityRowRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRowsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityRulerMarkerRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityRulerRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityScreenPointForLayoutPointParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityScrollAreaRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityScrollBarRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySearchButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySearchFieldSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySearchMenuAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySectionListSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySecureTextFieldSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedCellsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedCellsChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedChildrenAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedChildrenChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedChildrenMovedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedColumnsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedColumnsChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedRowsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedRowsChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedTextChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedTextRangeAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedTextRangesAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityServesAsTitleForUIElementsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityShadowTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySharedCharacterRangeAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySharedFocusElementsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySharedTextUIElementsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySheetCreatedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilitySheetRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityShowAlternateUIAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityShowDefaultUIAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityActionName _Nonnull' name='NSAccessibilityShowMenuAction' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityShownMenuAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySizeAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilitySliderRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilitySortButtonRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySortButtonSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySortDirectionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilitySplitGroupRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilitySplitterRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySplittersAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityStandardWindowSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityStaticTextRole' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityStrikethroughColorTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityStrikethroughTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityStringForRangeParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityStyleRangeForIndexParameterizedAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySubroleAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilitySuperscriptTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySwitchSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySystemDialogSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySystemFloatingWindowSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilitySystemWideRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTabButtonSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityTabGroupRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityTableRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTableRowSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityTabsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityTailIndentMarkerTypeValue' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityTextAlignmentAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityTextAreaRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTextAttachmentSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityTextFieldRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTextLinkSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTimelineSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityTitleAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityTitleChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityTitleUIElementAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityToggleSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityToolbarButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityToolbarButtonSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityToolbarRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityTopLevelUIElementAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityUIElementDestroyedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationUserInfoKey _Nonnull' name='NSAccessibilityUIElementsKey' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityURLAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityUnderlineColorTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSAccessibilityUnderlineTextAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityUnitDescriptionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityUnitsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityUnitsChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityUnknownMarkerTypeValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityOrientationValue _Nonnull' name='NSAccessibilityUnknownOrientationValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityUnknownRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySortDirectionValue _Nonnull' name='NSAccessibilityUnknownSortDirectionValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityUnknownSubrole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityUnknownUnitValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityValueAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityValueChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityValueDescriptionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityValueIndicatorRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityOrientationValue _Nonnull' name='NSAccessibilityVerticalOrientationValue' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVerticalScrollBarAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVerticalUnitDescriptionAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVerticalUnitsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleCellsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleCharacterRangeAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleChildrenAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleColumnsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityFontAttributeKey _Nonnull' name='NSAccessibilityVisibleNameKey' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleRowsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityWarningValueAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityWindowAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowCreatedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowDeminiaturizedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowMiniaturizedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowMovedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowResizedNotification' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityRole _Nonnull' name='NSAccessibilityWindowRole' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityWindowsAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityZoomButtonAttribute' type64='@'/>
<constant const='true' declared_type64='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityZoomButtonSubrole' type64='@'/>
<constant const='true' declared_type64='NSModalResponse' name='NSAlertFirstButtonReturn' type64='q'/>
<constant const='true' declared_type64='NSModalResponse' name='NSAlertSecondButtonReturn' type64='q'/>
<constant const='true' declared_type64='NSModalResponse' name='NSAlertThirdButtonReturn' type64='q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSAlignmentBinding' type64='@'/>
<constant declared_type64='NSString * _Nonnull' name='NSAllRomanInputSourcesLocaleIdentifier' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSAllowsEditingMultipleValuesSelectionBindingOption' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSAllowsNullArgumentBindingOption' type64='@'/>
<constant const='true' declared_type64='NSBitmapFormat' name='NSAlphaFirstBitmapFormat' type64='Q'/>
<constant const='true' declared_type64='NSBitmapFormat' name='NSAlphaNonpremultipliedBitmapFormat' type64='Q'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSAlphaShiftKeyMask' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSAlternateImageBinding' type64='@'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSAlternateKeyMask' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSAlternateTitleBinding' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSAlwaysPresentsApplicationModalAlertsBindingOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSAnimateBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSAnimationDelayBinding' type64='@'/>
<constant declared_type64='NSString * _Nonnull' name='NSAnimationProgressMark' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSAnimationProgressMarkNotification' type64='@'/>
<constant declared_type64='NSAnimatablePropertyKey _Nonnull' name='NSAnimationTriggerOrderIn' type64='@'/>
<constant declared_type64='NSAnimatablePropertyKey _Nonnull' name='NSAnimationTriggerOrderOut' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSAntialiasThresholdChangedNotification' type64='@'/>
<constant const='true' declared_type64='NSEventMask' name='NSAnyEventMask' type64='Q'/>
<constant declared_type64='__kindof NSApplication * _Null_unspecified' name='NSApp' type64='@'/>
<constant const='true' declared_type64='NSEventType' name='NSAppKitDefined' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSAppKitDefinedMask' type64='Q'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSAppKitIgnoredException' type64='@'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_0' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_1' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_10' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_10_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_10_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_10_4' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_10_5' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_10_Max' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_11' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_11_1' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_11_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_11_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_12' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_12_1' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_12_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_13' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_13_1' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_13_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_13_4' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_14' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_14_1' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_14_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_14_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_14_4' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_14_5' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_15' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_2_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_3_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_3_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_3_5' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_3_7' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_3_9' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_4' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_4_1' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_4_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_4_4' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_4_7' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_5' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_5_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_5_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_6' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_7' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_7_2' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_7_3' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_7_4' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_8' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumber10_9' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumberWithColumnResizingBrowser' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumberWithContinuousScrollingBrowser' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumberWithCursorSizeSupport' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumberWithCustomSheetPosition' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumberWithDeferredWindowDisplaySupport' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumberWithDirectionalTabs' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumberWithDockTilePlugInSupport' type64='d'/>
<constant const='true' declared_type64='NSAppKitVersion' name='NSAppKitVersionNumberWithPatternColorLeakFix' type64='d'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSAppKitVirtualMemoryException' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSAppearanceDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameAccessibilityHighContrastAqua' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameAccessibilityHighContrastDarkAqua' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameAccessibilityHighContrastVibrantDark' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameAccessibilityHighContrastVibrantLight' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameAqua' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameDarkAqua' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameLightContent' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameVibrantDark' type64='@'/>
<constant const='true' declared_type64='NSAppearanceName _Nonnull' name='NSAppearanceNameVibrantLight' type64='@'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSApplicationActivatedEventType' type64='s'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSApplicationDeactivatedEventType' type64='s'/>
<constant const='true' declared_type64='NSEventType' name='NSApplicationDefined' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSApplicationDefinedMask' type64='Q'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidBecomeActiveNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidChangeOcclusionStateNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidChangeScreenParametersNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidFinishLaunchingNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidFinishRestoringWindowsNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidHideNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidResignActiveNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidUnhideNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationDidUpdateNotification' type64='@'/>
<constant declared_type64='NSString * _Nonnull' name='NSApplicationFileType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSApplicationLaunchIsDefaultLaunchKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSApplicationLaunchRemoteNotificationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSApplicationLaunchUserNotificationKey' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationWillBecomeActiveNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationWillFinishLaunchingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationWillHideNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationWillResignActiveNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationWillTerminateNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationWillUnhideNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSApplicationWillUpdateNotification' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSArgumentBinding' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSAttachmentAttributeName' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSAttributedStringBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSAuthorDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSPrintingPaginationMode' name='NSAutoPagination' type64='Q'/>
<constant const='true' declared_type64='NSBitmapImageFileType' name='NSBMPFileType' type64='Q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSBackgroundColorAttributeName' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSBackgroundColorDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSBackgroundStyle' name='NSBackgroundStyleDark' type64='q'/>
<constant const='true' declared_type64='NSBackgroundStyle' name='NSBackgroundStyleLight' type64='q'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSBackingPropertyOldColorSpaceKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSBackingPropertyOldScaleFactorKey' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSBadBitmapParametersException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSBadComparisonException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSBadRTFColorTableException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSBadRTFDirectiveException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSBadRTFFontTableException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSBadRTFStyleSheetException' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSBaseURLDocumentOption' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSBaselineOffsetAttributeName' type64='@'/>
<constant const='true' declared_type64='NSLineJoinStyle' name='NSBevelLineJoinStyle' type64='Q'/>
<constant const='true' declared_type64='CGFloat' name='NSBlack' type64='d'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSBorderlessWindowMask' type64='Q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSBottomMarginDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSBoxType' name='NSBoxOldStyle' type64='Q'/>
<constant const='true' declared_type64='NSBoxType' name='NSBoxSecondary' type64='Q'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSBrowserColumnConfigurationDidChangeNotification' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSBrowserIllegalDelegateException' type64='@'/>
<constant const='true' declared_type64='NSLineCapStyle' name='NSButtLineCapStyle' type64='Q'/>
<constant const='true' declared_type64='NSColorSpaceModel' name='NSCMYKColorSpaceModel' type64='q'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSCMYKModeColorPanel' type64='q'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSCalibratedBlackColorSpace' type64='@'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSCalibratedRGBColorSpace' type64='@'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSCalibratedWhiteColorSpace' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCategoryDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSTextAlignment' name='NSCenterTextAlignment' type64='q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCharacterEncodingDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSCharacterEncodingDocumentOption' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSCharacterShapeAttributeName' type64='@'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSCircularBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSSliderType' name='NSCircularSlider' type64='Q'/>
<constant const='true' declared_type64='NSPrintingPaginationMode' name='NSClipPagination' type64='Q'/>
<constant const='true' declared_type64='NSDatePickerStyle' name='NSClockAndCalendarDatePickerStyle' type64='Q'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSClosableWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSBezierPathElement' name='NSClosePathBezierPathElement' type64='Q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCocoaVersionDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' name='NSCollectionElementKindInterItemGapIndicator' type64='@'/>
<constant const='true' declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' name='NSCollectionElementKindSectionFooter' type64='@'/>
<constant const='true' declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' name='NSCollectionElementKindSectionHeader' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSColorListDidChangeNotification' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSColorListIOException' type64='@'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSColorListModeColorPanel' type64='q'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSColorListNotEditableException' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSColorPanelColorDidChangeNotification' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSColorPboardType' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSComboBoxSelectionDidChangeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSComboBoxSelectionIsChangingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSComboBoxWillDismissNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSComboBoxWillPopUpNotification' type64='@'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSCommandKeyMask' type64='Q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCommentDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCompanyDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeClear' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeColor' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeColorBurn' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeColorDodge' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeCopy' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeDarken' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeDestinationAtop' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeDestinationIn' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeDestinationOut' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeDestinationOver' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeDifference' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeExclusion' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeHardLight' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeHighlight' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeHue' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeLighten' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeLuminosity' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeMultiply' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeOverlay' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositePlusDarker' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositePlusLighter' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeSaturation' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeScreen' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeSoftLight' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeSourceAtop' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeSourceIn' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeSourceOut' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeSourceOver' type64='Q'/>
<constant const='true' declared_type64='NSCompositingOperation' name='NSCompositeXOR' type64='Q'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSConditionallySetsEditableBindingOption' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSConditionallySetsEnabledBindingOption' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSConditionallySetsHiddenBindingOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentArrayBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentArrayForMultipleSelectionBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentDictionaryBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentHeightBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentObjectBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentObjectsBinding' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSContentPlacementTagBindingOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentSetBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentValuesBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSContentWidthBinding' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSContextHelpModeDidActivateNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSContextHelpModeDidDeactivateNotification' type64='@'/>
<constant const='true' declared_type64='NSLevelIndicatorStyle' name='NSContinuousCapacityLevelIndicatorStyle' type64='Q'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSContinuouslyUpdatesValueBindingOption' type64='@'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSControlKeyMask' type64='Q'/>
<constant const='true' declared_type64='NSControlStateValue' name='NSControlStateValueMixed' type64='q'/>
<constant const='true' declared_type64='NSControlStateValue' name='NSControlStateValueOff' type64='q'/>
<constant const='true' declared_type64='NSControlStateValue' name='NSControlStateValueOn' type64='q'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSControlTextDidBeginEditingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSControlTextDidChangeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSControlTextDidEndEditingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSControlTintDidChangeNotification' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSConvertedDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCopyrightDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSCrayonModeColorPanel' type64='q'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSCreatesSortDescriptorBindingOption' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCreationTimeDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSAlertStyle' name='NSCriticalAlertStyle' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSCriticalValueBinding' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSCursorAttributeName' type64='@'/>
<constant const='true' declared_type64='NSPointingDeviceType' name='NSCursorPointingDevice' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSCursorUpdate' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSCursorUpdateMask' type64='Q'/>
<constant const='true' declared_type64='NSBezierPathElement' name='NSCurveToBezierPathElement' type64='Q'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSCustomColorSpace' type64='@'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSCustomPaletteModeColorPanel' type64='q'/>
<constant const='true' declared_type64='CGFloat' name='NSDarkGray' type64='d'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSDataBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDefaultAttributesDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSDefaultAttributesDocumentOption' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDefaultTabIntervalDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSTokenStyle' name='NSDefaultTokenStyle' type64='Q'/>
<constant const='true' declared_type64='NSDefinitionPresentationType _Nonnull' name='NSDefinitionPresentationTypeDictionaryApplication' type64='@'/>
<constant const='true' declared_type64='NSDefinitionOptionKey _Nonnull' name='NSDefinitionPresentationTypeKey' type64='@'/>
<constant const='true' declared_type64='NSDefinitionPresentationType _Nonnull' name='NSDefinitionPresentationTypeOverlay' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSDeletesObjectsOnRemoveBindingsOption' type64='@'/>
<constant declared_type64='NSDeviceDescriptionKey _Nonnull' name='NSDeviceBitsPerSample' type64='@'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSDeviceBlackColorSpace' type64='@'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSDeviceCMYKColorSpace' type64='@'/>
<constant declared_type64='NSDeviceDescriptionKey _Nonnull' name='NSDeviceColorSpaceName' type64='@'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSDeviceIndependentModifierFlagsMask' type64='Q'/>
<constant declared_type64='NSDeviceDescriptionKey _Nonnull' name='NSDeviceIsPrinter' type64='@'/>
<constant declared_type64='NSDeviceDescriptionKey _Nonnull' name='NSDeviceIsScreen' type64='@'/>
<constant const='true' declared_type64='NSColorSpaceModel' name='NSDeviceNColorSpaceModel' type64='q'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSDeviceRGBColorSpace' type64='@'/>
<constant declared_type64='NSDeviceDescriptionKey _Nonnull' name='NSDeviceResolution' type64='@'/>
<constant declared_type64='NSDeviceDescriptionKey _Nonnull' name='NSDeviceSize' type64='@'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSDeviceWhiteColorSpace' type64='@'/>
<constant const='true' declared_type64='NSDirectionalEdgeInsets' name='NSDirectionalEdgeInsetsZero' type64='{NSDirectionalEdgeInsets=dddd}'/>
<constant declared_type64='NSString * _Nonnull' name='NSDirectoryFileType' type64='@'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSDisclosureBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSLevelIndicatorStyle' name='NSDiscreteCapacityLevelIndicatorStyle' type64='Q'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSDisplayNameBindingOption' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSDisplayPatternBindingOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSDisplayPatternTitleBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSDisplayPatternValueBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSDocFormatTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSDocModalWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSDockWindowLevel' type64='q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSDocumentEditedBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDocumentTypeDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSDocumentTypeDocumentOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSDoubleClickArgumentBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSDoubleClickTargetBinding' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSDragPboard' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSDraggingException' type64='@'/>
<constant const='true' declared_type64='NSDraggingImageComponentKey _Nonnull' name='NSDraggingImageComponentIconKey' type64='@'/>
<constant const='true' declared_type64='NSDraggingImageComponentKey _Nonnull' name='NSDraggingImageComponentLabelKey' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSDrawerDidCloseNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSDrawerDidOpenNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSDrawerWillCloseNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSDrawerWillOpenNotification' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSEditableBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSEditorDocumentAttribute' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSEnabledBinding' type64='@'/>
<constant const='true' declared_type64='NSDatePickerElementFlags' name='NSEraDatePickerElementFlag' type64='Q'/>
<constant const='true' declared_type64='NSPointingDeviceType' name='NSEraserPointingDevice' type64='Q'/>
<constant const='true' declared_type64='NSWindingRule' name='NSEvenOddWindingRule' type64='Q'/>
<constant const='true' declared_type64='NSTimeInterval' name='NSEventDurationForever' type64='d'/>
<constant declared_type64='NSRunLoopMode _Nonnull' name='NSEventTrackingRunLoopMode' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSExcludedElementsDocumentAttribute' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSExcludedKeysBinding' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSExpansionAttributeName' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSFileContentsPboardType' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSFileTypeDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSFileTypeDocumentOption' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSFilenamesPboardType' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSFilesPromisePboardType' type64='@'/>
<constant declared_type64='NSString * _Nonnull' name='NSFilesystemFileType' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSFilterPredicateBinding' type64='@'/>
<constant declared_type64='NSPasteboardTypeFindPanelSearchOptionKey _Nonnull' name='NSFindPanelCaseInsensitiveSearch' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSFindPanelSearchOptionsPboardType' type64='@'/>
<constant declared_type64='NSPasteboardTypeFindPanelSearchOptionKey _Nonnull' name='NSFindPanelSubstringMatch' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSFindPboard' type64='@'/>
<constant const='true' declared_type64='NSPrintingPaginationMode' name='NSFitPagination' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSFlagsChanged' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSFlagsChangedMask' type64='Q'/>
<constant const='true' declared_type64='NSBitmapFormat' name='NSFloatingPointSamplesBitmapFormat' type64='Q'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSFloatingWindowLevel' type64='q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSFontAttributeName' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSFontBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSFontBoldBinding' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontCascadeListAttribute' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontCharacterSetAttribute' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionUserInfoKey _Nonnull' name='NSFontCollectionActionKey' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionName _Nonnull' name='NSFontCollectionAllFonts' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSFontCollectionDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionMatchingOptionKey _Nonnull' name='NSFontCollectionDisallowAutoActivationOption' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionName _Nonnull' name='NSFontCollectionFavorites' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionMatchingOptionKey _Nonnull' name='NSFontCollectionIncludeDisabledFontsOption' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionUserInfoKey _Nonnull' name='NSFontCollectionNameKey' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionUserInfoKey _Nonnull' name='NSFontCollectionOldNameKey' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionName _Nonnull' name='NSFontCollectionRecentlyUsed' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionMatchingOptionKey _Nonnull' name='NSFontCollectionRemoveDuplicatesOption' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionName _Nonnull' name='NSFontCollectionUser' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionUserInfoKey _Nonnull' name='NSFontCollectionVisibilityKey' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionActionTypeKey _Nonnull' name='NSFontCollectionWasHidden' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionActionTypeKey _Nonnull' name='NSFontCollectionWasRenamed' type64='@'/>
<constant const='true' declared_type64='NSFontCollectionActionTypeKey _Nonnull' name='NSFontCollectionWasShown' type64='@'/>
<constant declared_type64='NSString * _Nonnull' name='NSFontColorAttribute' type64='@'/>
<constant const='true' declared_type64='NSFontDescriptorSystemDesign _Nonnull' name='NSFontDescriptorSystemDesignDefault' type64='@'/>
<constant const='true' declared_type64='NSFontDescriptorSystemDesign _Nonnull' name='NSFontDescriptorSystemDesignMonospaced' type64='@'/>
<constant const='true' declared_type64='NSFontDescriptorSystemDesign _Nonnull' name='NSFontDescriptorSystemDesignRounded' type64='@'/>
<constant const='true' declared_type64='NSFontDescriptorSystemDesign _Nonnull' name='NSFontDescriptorSystemDesignSerif' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontFaceAttribute' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontFamilyAttribute' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSFontFamilyNameBinding' type64='@'/>
<constant declared_type64='NSFontDescriptorFeatureKey _Nonnull' name='NSFontFeatureSelectorIdentifierKey' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontFeatureSettingsAttribute' type64='@'/>
<constant declared_type64='NSFontDescriptorFeatureKey _Nonnull' name='NSFontFeatureTypeIdentifierKey' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontFixedAdvanceAttribute' type64='@'/>
<constant const='true' declared_type64='CGFloat * _Nonnull' name='NSFontIdentityMatrix' type64='^d'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSFontItalicBinding' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontMatrixAttribute' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontNameAttribute' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSFontNameBinding' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSFontPboard' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSFontPboardType' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSFontSetChangedNotification' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontSizeAttribute' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSFontSizeBinding' type64='@'/>
<constant declared_type64='NSFontDescriptorTraitKey _Nonnull' name='NSFontSlantTrait' type64='@'/>
<constant declared_type64='NSFontDescriptorTraitKey _Nonnull' name='NSFontSymbolicTrait' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleBody' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleCallout' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleCaption1' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleCaption2' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleFootnote' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleHeadline' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleLargeTitle' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleSubheadline' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleTitle1' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleTitle2' type64='@'/>
<constant const='true' declared_type64='NSFontTextStyle _Nonnull' name='NSFontTextStyleTitle3' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontTraitsAttribute' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSFontUnavailableException' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontVariationAttribute' type64='@'/>
<constant declared_type64='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisDefaultValueKey' type64='@'/>
<constant declared_type64='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisIdentifierKey' type64='@'/>
<constant declared_type64='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisMaximumValueKey' type64='@'/>
<constant declared_type64='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisMinimumValueKey' type64='@'/>
<constant declared_type64='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisNameKey' type64='@'/>
<constant declared_type64='NSFontDescriptorAttributeName _Nonnull' name='NSFontVisibleNameAttribute' type64='@'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightBlack' type64='d'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightBold' type64='d'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightHeavy' type64='d'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightLight' type64='d'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightMedium' type64='d'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightRegular' type64='d'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightSemibold' type64='d'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightThin' type64='d'/>
<constant declared_type64='NSFontDescriptorTraitKey _Nonnull' name='NSFontWeightTrait' type64='@'/>
<constant const='true' declared_type64='NSFontWeight' name='NSFontWeightUltraLight' type64='d'/>
<constant declared_type64='NSFontDescriptorTraitKey _Nonnull' name='NSFontWidthTrait' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSForegroundColorAttributeName' type64='@'/>
<constant const='true' declared_type64='NSViewFullScreenModeOptionKey _Nonnull' name='NSFullScreenModeAllScreens' type64='@'/>
<constant const='true' declared_type64='NSViewFullScreenModeOptionKey _Nonnull' name='NSFullScreenModeApplicationPresentationOptions' type64='@'/>
<constant const='true' declared_type64='NSViewFullScreenModeOptionKey _Nonnull' name='NSFullScreenModeSetting' type64='@'/>
<constant const='true' declared_type64='NSViewFullScreenModeOptionKey _Nonnull' name='NSFullScreenModeWindowLevel' type64='@'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSFullScreenWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSFullSizeContentViewWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSFunctionKeyMask' type64='Q'/>
<constant const='true' declared_type64='NSBitmapImageFileType' name='NSGIFFileType' type64='Q'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSGeneralPboard' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSGlyphInfoAttributeName' type64='@'/>
<constant declared_type64='NSGraphicsContextAttributeKey _Nonnull' name='NSGraphicsContextDestinationAttributeName' type64='@'/>
<constant declared_type64='NSGraphicsContextRepresentationFormatName _Nonnull' name='NSGraphicsContextPDFFormat' type64='@'/>
<constant declared_type64='NSGraphicsContextRepresentationFormatName _Nonnull' name='NSGraphicsContextPSFormat' type64='@'/>
<constant declared_type64='NSGraphicsContextAttributeKey _Nonnull' name='NSGraphicsContextRepresentationFormatAttributeName' type64='@'/>
<constant const='true' declared_type64='NSColorSpaceModel' name='NSGrayColorSpaceModel' type64='q'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSGrayModeColorPanel' type64='q'/>
<constant const='true' declared_type64='CGFloat' name='NSGridViewSizeForContent' type64='d'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSHSBModeColorPanel' type64='q'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSHTMLPboardType' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSHTMLTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSHUDWindowMask' type64='Q'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSHandlesContentAsCompoundValueBindingOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSHeaderTitleBinding' type64='@'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSHelpButtonBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSHelpKeyMask' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSHiddenBinding' type64='@'/>
<constant const='true' declared_type64='NSDatePickerElementFlags' name='NSHourMinuteDatePickerElementFlag' type64='Q'/>
<constant const='true' declared_type64='NSDatePickerElementFlags' name='NSHourMinuteSecondDatePickerElementFlag' type64='Q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSHyphenationFactorDocumentAttribute' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSIllegalSelectorException' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSImageBinding' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSImageCacheException' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageColorSyncProfileData' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageCompressionFactor' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageCompressionMethod' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageCurrentFrame' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageCurrentFrameDuration' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageDitherTransparency' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageEXIFData' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageFallbackBackgroundColor' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageFrameCount' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageGamma' type64='@'/>
<constant const='true' declared_type64='NSImageHintKey _Nonnull' name='NSImageHintCTM' type64='@'/>
<constant const='true' declared_type64='NSImageHintKey _Nonnull' name='NSImageHintInterpolation' type64='@'/>
<constant const='true' declared_type64='NSImageHintKey _Nonnull' name='NSImageHintUserInterfaceLayoutDirection' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageInterlaced' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageLoopCount' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameActionTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameAddTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameAdvanced' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameApplicationIcon' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameBluetoothTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameBonjour' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameBookmarksTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameCaution' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameColorPanel' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameColumnViewTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameComputer' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameDotMac' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameEnterFullScreenTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameEveryone' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameExitFullScreenTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameFlowViewTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameFolder' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameFolderBurnable' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameFolderSmart' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameFollowLinkFreestandingTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameFontPanel' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameGoBackTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameGoForwardTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameGoLeftTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameGoRightTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameHomeTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameIChatTheaterTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameIconViewTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameInfo' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameInvalidDataFreestandingTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameLeftFacingTriangleTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameListViewTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameLockLockedTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameLockUnlockedTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameMenuMixedStateTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameMenuOnStateTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameMobileMe' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameMultipleDocuments' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameNetwork' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNamePathTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNamePreferencesGeneral' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameQuickLookTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameRefreshFreestandingTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameRefreshTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameRemoveTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameRevealFreestandingTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameRightFacingTriangleTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameShareTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameSlideshowTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameSmartBadgeTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameStatusAvailable' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameStatusNone' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameStatusPartiallyAvailable' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameStatusUnavailable' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameStopProgressFreestandingTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameStopProgressTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAddDetailTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAddTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAlarmTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAudioInputMuteTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAudioInputTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputMuteTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputVolumeHighTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputVolumeLowTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputVolumeMediumTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputVolumeOffTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarBookmarksTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarColorPickerFill' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarColorPickerFont' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarColorPickerStroke' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarCommunicationAudioTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarCommunicationVideoTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarComposeTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarDeleteTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarDownloadTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarEnterFullScreenTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarExitFullScreenTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarFastForwardTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarFolderCopyToTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarFolderMoveToTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarFolderTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarGetInfoTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarGoBackTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarGoDownTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarGoForwardTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarGoUpTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarHistoryTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarIconViewTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarListViewTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarMailTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarNewFolderTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarNewMessageTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarOpenInBrowserTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarPauseTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarPlayPauseTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarPlayTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarPlayheadTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarQuickLookTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarRecordStartTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarRecordStopTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarRefreshTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarRemoveTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarRewindTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarRotateLeftTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarRotateRightTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSearchTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarShareTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSidebarTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSkipAhead15SecondsTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSkipAhead30SecondsTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSkipAheadTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSkipBack15SecondsTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSkipBack30SecondsTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSkipBackTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSkipToEndTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSkipToStartTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarSlideshowTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTagIconTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextBoldTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextBoxTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextCenterAlignTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextItalicTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextJustifiedAlignTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextLeftAlignTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextListTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextRightAlignTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextStrikethroughTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarTextUnderlineTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarUserAddTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarUserGroupTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarUserTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarVolumeDownTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTouchBarVolumeUpTemplate' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTrashEmpty' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameTrashFull' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameUser' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameUserAccounts' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameUserGroup' type64='@'/>
<constant const='true' declared_type64='NSImageName _Nonnull' name='NSImageNameUserGuest' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageProgressive' type64='@'/>
<constant declared_type64='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageRGBColorTable' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSImageRepRegistryDidChangeNotification' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSIncludedKeysBinding' type64='@'/>
<constant const='true' declared_type64='NSColorSpaceModel' name='NSIndexedColorSpaceModel' type64='q'/>
<constant const='true' declared_type64='NSAlertStyle' name='NSInformationalAlertStyle' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSInitialKeyBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSInitialValueBinding' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSInkTextPboardType' type64='@'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSInlineBezelStyle' type64='Q'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSInsertsNullPlaceholderBindingOption' type64='@'/>
<constant declared_type64='NSString*' name='NSInterfaceStyleDefault' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSInvokesSeparatelyWithArrayObjectsBindingOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSIsIndeterminateBinding' type64='@'/>
<constant const='true' declared_type64='NSBitmapImageFileType' name='NSJPEG2000FileType' type64='Q'/>
<constant const='true' declared_type64='NSBitmapImageFileType' name='NSJPEGFileType' type64='Q'/>
<constant const='true' declared_type64='NSTextAlignment' name='NSJustifiedTextAlignment' type64='q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSKernAttributeName' type64='@'/>
<constant const='true' declared_type64='NSEventType' name='NSKeyDown' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSKeyDownMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSKeyUp' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSKeyUpMask' type64='Q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSKeywordsDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSColorSpaceModel' name='NSLABColorSpaceModel' type64='q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSLabelBinding' type64='@'/>
<constant const='true' declared_type64='NSLayoutPriority' name='NSLayoutPriorityDefaultHigh' type64='f'/>
<constant const='true' declared_type64='NSLayoutPriority' name='NSLayoutPriorityDefaultLow' type64='f'/>
<constant const='true' declared_type64='NSLayoutPriority' name='NSLayoutPriorityDragThatCanResizeWindow' type64='f'/>
<constant const='true' declared_type64='NSLayoutPriority' name='NSLayoutPriorityDragThatCannotResizeWindow' type64='f'/>
<constant const='true' declared_type64='NSLayoutPriority' name='NSLayoutPriorityFittingSizeCompression' type64='f'/>
<constant const='true' declared_type64='NSLayoutPriority' name='NSLayoutPriorityRequired' type64='f'/>
<constant const='true' declared_type64='NSLayoutPriority' name='NSLayoutPriorityWindowSizeStayPut' type64='f'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSLeftMarginDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSEventType' name='NSLeftMouseDown' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSLeftMouseDownMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSLeftMouseDragged' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSLeftMouseDraggedMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSLeftMouseUp' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSLeftMouseUpMask' type64='Q'/>
<constant const='true' declared_type64='NSTextAlignment' name='NSLeftTextAlignment' type64='q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSLigatureAttributeName' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='NSLightGray' type64='d'/>
<constant const='true' declared_type64='NSBezierPathElement' name='NSLineToBezierPathElement' type64='Q'/>
<constant const='true' declared_type64='NSSliderType' name='NSLinearSlider' type64='Q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSLinkAttributeName' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSLocalizedKeyDictionaryBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSMacSimpleTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSMainMenuWindowLevel' type64='q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSManagedObjectContextBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSManagerDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSMarkedClauseSegmentAttributeName' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSMaxValueBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSMaxWidthBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSMaximumRecentsBinding' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSMenuDidAddItemNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSMenuDidBeginTrackingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSMenuDidChangeItemNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSMenuDidEndTrackingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSMenuDidRemoveItemNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSMenuDidSendActionNotification' type64='@'/>
<constant const='true' declared_type64='NSUserInterfaceItemIdentifier _Nonnull' name='NSMenuItemImportFromDeviceIdentifier' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSMenuWillSendActionNotification' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSMinValueBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSMinWidthBinding' type64='@'/>
<constant const='true' declared_type64='NSControlSize' name='NSMiniControlSize' type64='Q'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSMiniaturizableWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSLineJoinStyle' name='NSMiterLineJoinStyle' type64='Q'/>
<constant const='true' declared_type64='NSControlStateValue' name='NSMixedState' type64='q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSMixedStateImageBinding' type64='@'/>
<constant declared_type64='NSRunLoopMode _Nonnull' name='NSModalPanelRunLoopMode' type64='@'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSModalPanelWindowLevel' type64='q'/>
<constant const='true' declared_type64='NSModalResponse' name='NSModalResponseAbort' type64='q'/>
<constant const='true' declared_type64='NSModalResponse' name='NSModalResponseCancel' type64='q'/>
<constant const='true' declared_type64='NSModalResponse' name='NSModalResponseContinue' type64='q'/>
<constant const='true' declared_type64='NSModalResponse' name='NSModalResponseOK' type64='q'/>
<constant const='true' declared_type64='NSModalResponse' name='NSModalResponseStop' type64='q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSModificationTimeDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSButtonType' name='NSMomentaryChangeButton' type64='Q'/>
<constant const='true' declared_type64='NSButtonType' name='NSMomentaryLight' type64='Q'/>
<constant const='true' declared_type64='NSButtonType' name='NSMomentaryLightButton' type64='Q'/>
<constant const='true' declared_type64='NSButtonType' name='NSMomentaryPushButton' type64='Q'/>
<constant const='true' declared_type64='NSButtonType' name='NSMomentaryPushInButton' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSMouseEntered' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSMouseEnteredMask' type64='Q'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSMouseEventSubtype' type64='s'/>
<constant const='true' declared_type64='NSEventType' name='NSMouseExited' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSMouseExitedMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSMouseMoved' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSMouseMovedMask' type64='Q'/>
<constant const='true' declared_type64='NSBezierPathElement' name='NSMoveToBezierPathElement' type64='Q'/>
<constant const='true' declared_type64='NSButtonType' name='NSMultiLevelAcceleratorButton' type64='Q'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSMultipleTextSelectionPboardType' type64='@'/>
<constant declared_type64='id _Nonnull' name='NSMultipleValuesMarker' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSMultipleValuesPlaceholderBindingOption' type64='@'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSNamedColorSpace' type64='@'/>
<constant const='true' declared_type64='NSTextAlignment' name='NSNaturalTextAlignment' type64='q'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSNibLoadingException' type64='@'/>
<constant declared_type64='NSString * _Nonnull' name='NSNibOwner' type64='@'/>
<constant declared_type64='NSString * _Nonnull' name='NSNibTopLevelObjects' type64='@'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSNoModeColorPanel' type64='q'/>
<constant declared_type64='id _Nonnull' name='NSNoSelectionMarker' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSNoSelectionPlaceholderBindingOption' type64='@'/>
<constant const='true' declared_type64='NSWindingRule' name='NSNonZeroWindingRule' type64='Q'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSNonactivatingPanelMask' type64='Q'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSNormalWindowLevel' type64='q'/>
<constant declared_type64='id _Nonnull' name='NSNotApplicableMarker' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSNotApplicablePlaceholderBindingOption' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSNullPlaceholderBindingOption' type64='@'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSNumericPadKeyMask' type64='Q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSObliquenessAttributeName' type64='@'/>
<constant declared_type64='NSBindingInfoKey _Nonnull' name='NSObservedKeyPathKey' type64='@'/>
<constant declared_type64='NSBindingInfoKey _Nonnull' name='NSObservedObjectKey' type64='@'/>
<constant const='true' declared_type64='NSControlStateValue' name='NSOffState' type64='q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSOffStateImageBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSOfficeOpenXMLTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSButtonType' name='NSOnOffButton' type64='Q'/>
<constant const='true' declared_type64='NSControlStateValue' name='NSOnState' type64='q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSOnStateImageBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSOpenDocumentTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPCurrentRendererID' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPGPUFragmentProcessing' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPGPUVertexProcessing' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPHasDrawable' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPMPSwapsInFlight' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPRasterizationEnable' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPReclaimResources' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPStateValidation' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPSurfaceBackingSize' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPSurfaceOpacity' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPSurfaceOrder' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPSurfaceSurfaceVolatile' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPSwapInterval' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPSwapRectangle' type64='q'/>
<constant const='true' declared_type64='NSOpenGLContextParameter' name='NSOpenGLCPSwapRectangleEnable' type64='q'/>
<constant declared_type64='NSBindingInfoKey _Nonnull' name='NSOptionsKey' type64='@'/>
<constant const='true' declared_type64='NSEventType' name='NSOtherMouseDown' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSOtherMouseDownMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSOtherMouseDragged' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSOtherMouseDraggedMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSOtherMouseUp' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSOtherMouseUpMask' type64='Q'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSOutlineViewColumnDidMoveNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSOutlineViewColumnDidResizeNotification' type64='@'/>
<constant const='true' declared_type64='NSUserInterfaceItemIdentifier _Nonnull' name='NSOutlineViewDisclosureButtonKey' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSOutlineViewItemDidCollapseNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSOutlineViewItemDidExpandNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSOutlineViewItemWillCollapseNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSOutlineViewItemWillExpandNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSOutlineViewSelectionDidChangeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSOutlineViewSelectionIsChangingNotification' type64='@'/>
<constant const='true' declared_type64='NSUserInterfaceItemIdentifier _Nonnull' name='NSOutlineViewShowHideButtonKey' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSPDFPboardType' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSPICTPboardType' type64='@'/>
<constant const='true' declared_type64='NSBitmapImageFileType' name='NSPNGFileType' type64='Q'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSPPDIncludeNotFoundException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSPPDIncludeStackOverflowException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSPPDIncludeStackUnderflowException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSPPDParseException' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSPaperSizeDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSParagraphStyleAttributeName' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSPasteboardCommunicationException' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSPasteboardNameDrag' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSPasteboardNameFind' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSPasteboardNameFont' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSPasteboardNameGeneral' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSPasteboardNameRuler' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeColor' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeFileURL' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeFindPanelSearchOptions' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeFont' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeHTML' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeMultipleTextSelection' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypePDF' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypePNG' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeRTF' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeRTFD' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeRuler' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeSound' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeString' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeTIFF' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeTabularText' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeTextFinderOptions' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSPasteboardTypeURL' type64='@'/>
<constant const='true' declared_type64='NSPasteboardReadingOptionKey _Nonnull' name='NSPasteboardURLReadingContentsConformToTypesKey' type64='@'/>
<constant const='true' declared_type64='NSPasteboardReadingOptionKey _Nonnull' name='NSPasteboardURLReadingFileURLsOnlyKey' type64='@'/>
<constant declared_type64='NSColorSpaceName _Nonnull' name='NSPatternColorSpace' type64='@'/>
<constant const='true' declared_type64='NSColorSpaceModel' name='NSPatternColorSpaceModel' type64='q'/>
<constant const='true' declared_type64='NSEventButtonMask' name='NSPenLowerSideMask' type64='Q'/>
<constant const='true' declared_type64='NSPointingDeviceType' name='NSPenPointingDevice' type64='Q'/>
<constant const='true' declared_type64='NSEventButtonMask' name='NSPenTipMask' type64='Q'/>
<constant const='true' declared_type64='NSEventButtonMask' name='NSPenUpperSideMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSPeriodic' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSPeriodicMask' type64='Q'/>
<constant declared_type64='NSString * _Nonnull' name='NSPlainFileType' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSPlainTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSTokenStyle' name='NSPlainTextTokenStyle' type64='Q'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSPopUpButtonCellWillPopUpNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSPopUpButtonWillPopUpNotification' type64='@'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSPopUpMenuWindowLevel' type64='q'/>
<constant const='true' declared_type64='NSPopoverCloseReasonValue _Nonnull' name='NSPopoverCloseReasonDetachToWindow' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPopoverCloseReasonKey' type64='@'/>
<constant const='true' declared_type64='NSPopoverCloseReasonValue _Nonnull' name='NSPopoverCloseReasonStandard' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSPopoverDidCloseNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSPopoverDidShowNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSPopoverWillCloseNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSPopoverWillShowNotification' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSPositioningRectBinding' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSPostScriptPboardType' type64='@'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSPowerOffEventType' type64='s'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSPredicateBinding' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSPredicateFormatBindingOption' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSPreferredScrollerStyleDidChangeNotification' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSPrefixSpacesDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintAllPages' type64='@'/>
<constant const='true' declared_type64='NSPrintPanelJobStyleHint _Nonnull' name='NSPrintAllPresetsJobStyleHint' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintBottomMargin' type64='@'/>
<constant const='true' declared_type64='NSPrintJobDispositionValue _Nonnull' name='NSPrintCancelJob' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintCopies' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintDetailedErrorReporting' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintFaxNumber' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintFirstPage' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPrintFormName' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintHeaderAndFooter' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintHorizontalPagination' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintHorizontallyCentered' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintJobDisposition' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPrintJobFeatures' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintJobSavingFileNameExtensionHidden' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintJobSavingURL' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintLastPage' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintLeftMargin' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPrintManualFeed' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintMustCollate' type64='@'/>
<constant const='true' declared_type64='NSPrintPanelJobStyleHint _Nonnull' name='NSPrintNoPresetsJobStyleHint' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSPrintOperationExistsException' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintOrientation' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSPrintPackageException' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPagesAcross' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPagesDown' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPrintPagesPerSheet' type64='@'/>
<constant const='true' declared_type64='NSPrintPanelAccessorySummaryKey _Nonnull' name='NSPrintPanelAccessorySummaryItemDescriptionKey' type64='@'/>
<constant const='true' declared_type64='NSPrintPanelAccessorySummaryKey _Nonnull' name='NSPrintPanelAccessorySummaryItemNameKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPrintPaperFeed' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPaperName' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPaperSize' type64='@'/>
<constant const='true' declared_type64='NSPrintPanelJobStyleHint _Nonnull' name='NSPrintPhotoJobStyleHint' type64='@'/>
<constant const='true' declared_type64='NSPrintJobDispositionValue _Nonnull' name='NSPrintPreviewJob' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPrinter' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPrinterName' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintReversePageOrder' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintRightMargin' type64='@'/>
<constant const='true' declared_type64='NSPrintJobDispositionValue _Nonnull' name='NSPrintSaveJob' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSPrintSavePath' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintScalingFactor' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintSelectionOnly' type64='@'/>
<constant const='true' declared_type64='NSPrintJobDispositionValue _Nonnull' name='NSPrintSpoolJob' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintTime' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintTopMargin' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintVerticalPagination' type64='@'/>
<constant const='true' declared_type64='NSPrintInfoAttributeKey _Nonnull' name='NSPrintVerticallyCentered' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSPrintingCommunicationException' type64='@'/>
<constant const='true' declared_type64='NSProgressIndicatorStyle' name='NSProgressIndicatorBarStyle' type64='Q'/>
<constant const='true' declared_type64='NSProgressIndicatorStyle' name='NSProgressIndicatorSpinningStyle' type64='Q'/>
<constant const='true' declared_type64='NSButtonType' name='NSPushOnPushOffButton' type64='Q'/>
<constant const='true' declared_type64='NSColorSpaceModel' name='NSRGBColorSpaceModel' type64='q'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSRGBModeColorPanel' type64='q'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSRTFDPboardType' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSRTFDTextDocumentType' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSRTFPboardType' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSRTFPropertyStackOverflowException' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSRTFTextDocumentType' type64='@'/>
<constant const='true' declared_type64='NSButtonType' name='NSRadioButton' type64='Q'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSRaisesForNotApplicableKeysBindingOption' type64='@'/>
<constant const='true' declared_type64='NSDatePickerMode' name='NSRangeDateMode' type64='Q'/>
<constant const='true' declared_type64='NSLevelIndicatorStyle' name='NSRatingLevelIndicatorStyle' type64='Q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSReadOnlyDocumentAttribute' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSRecentSearchesBinding' type64='@'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSRecessedBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSControlSize' name='NSRegularControlSize' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSRegularSquareBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSLevelIndicatorStyle' name='NSRelevancyLevelIndicatorStyle' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSRepresentedFilenameBinding' type64='@'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSResizableWindowMask' type64='Q'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSRightMarginDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSEventType' name='NSRightMouseDown' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSRightMouseDownMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSRightMouseDragged' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSRightMouseDraggedMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSRightMouseUp' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSRightMouseUpMask' type64='Q'/>
<constant const='true' declared_type64='NSTextAlignment' name='NSRightTextAlignment' type64='q'/>
<constant const='true' declared_type64='NSLineCapStyle' name='NSRoundLineCapStyle' type64='Q'/>
<constant const='true' declared_type64='NSLineJoinStyle' name='NSRoundLineJoinStyle' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSRoundRectBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSRoundedBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSRoundedDisclosureBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSTokenStyle' name='NSRoundedTokenStyle' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSRowHeightBinding' type64='@'/>
<constant const='true' declared_type64='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateComparisonModifier' type64='@'/>
<constant const='true' declared_type64='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateCompoundType' type64='@'/>
<constant const='true' declared_type64='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateCustomSelector' type64='@'/>
<constant const='true' declared_type64='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateLeftExpression' type64='@'/>
<constant const='true' declared_type64='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateOperatorType' type64='@'/>
<constant const='true' declared_type64='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateOptions' type64='@'/>
<constant const='true' declared_type64='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateRightExpression' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSRuleEditorRowsDidChangeNotification' type64='@'/>
<constant declared_type64='NSPasteboardName _Nonnull' name='NSRulerPboard' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSRulerPboardType' type64='@'/>
<constant const='true' declared_type64='NSRulerViewUnitName _Nonnull' name='NSRulerViewUnitCentimeters' type64='@'/>
<constant const='true' declared_type64='NSRulerViewUnitName _Nonnull' name='NSRulerViewUnitInches' type64='@'/>
<constant const='true' declared_type64='NSRulerViewUnitName _Nonnull' name='NSRulerViewUnitPicas' type64='@'/>
<constant const='true' declared_type64='NSRulerViewUnitName _Nonnull' name='NSRulerViewUnitPoints' type64='@'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSScreenChangedEventType' type64='s'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSScreenColorSpaceDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSScreenSaverWindowLevel' type64='q'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSScrollViewDidEndLiveMagnifyNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSScrollViewDidEndLiveScrollNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSScrollViewDidLiveScrollNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSScrollViewWillStartLiveMagnifyNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSScrollViewWillStartLiveScrollNotification' type64='@'/>
<constant const='true' declared_type64='NSEventType' name='NSScrollWheel' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSScrollWheelMask' type64='Q'/>
<constant const='true' declared_type64='NSInteger' name='NSSearchFieldClearRecentsMenuItemTag' type64='q'/>
<constant const='true' declared_type64='NSInteger' name='NSSearchFieldNoRecentsMenuItemTag' type64='q'/>
<constant const='true' declared_type64='NSInteger' name='NSSearchFieldRecentsMenuItemTag' type64='q'/>
<constant const='true' declared_type64='NSInteger' name='NSSearchFieldRecentsTitleMenuItemTag' type64='q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectedIdentifierBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectedIndexBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectedLabelBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectedObjectBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectedObjectsBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectedTagBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectedValueBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectedValuesBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectionIndexPathsBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSelectionIndexesBinding' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSSelectorNameBindingOption' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSSelectsAllWhenSettingContentBindingOption' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSShadowAttributeName' type64='@'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSShadowlessSquareBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameAddToAperture' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameAddToIPhoto' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameAddToSafariReadingList' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameCloudSharing' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameComposeEmail' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameComposeMessage' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostImageOnFlickr' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnFacebook' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnLinkedIn' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnSinaWeibo' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnTencentWeibo' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnTwitter' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostVideoOnTudou' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostVideoOnVimeo' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostVideoOnYouku' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameSendViaAirDrop' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameUseAsDesktopPicture' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameUseAsFacebookProfileImage' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameUseAsLinkedInProfileImage' type64='@'/>
<constant const='true' declared_type64='NSSharingServiceName _Nonnull' name='NSSharingServiceNameUseAsTwitterProfileImage' type64='@'/>
<constant declared_type64='NSString * _Nonnull' name='NSShellCommandFileType' type64='@'/>
<constant const='true' declared_type64='NSEventModifierFlags' name='NSShiftKeyMask' type64='Q'/>
<constant const='true' declared_type64='NSDatePickerMode' name='NSSingleDateMode' type64='Q'/>
<constant const='true' declared_type64='NSSliderAccessoryWidth' name='NSSliderAccessoryWidthDefault' type64='d'/>
<constant const='true' declared_type64='NSSliderAccessoryWidth' name='NSSliderAccessoryWidthWide' type64='d'/>
<constant const='true' declared_type64='NSControlSize' name='NSSmallControlSize' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSSmallIconButtonBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSSmallSquareBezelStyle' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSSortDescriptorsBinding' type64='@'/>
<constant const='true' declared_type64='NSPasteboardType _Nonnull' name='NSSoundPboardType' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSSourceTextScalingDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSSourceTextScalingDocumentOption' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechCharacterModeProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechCommandDelimiterProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechCommandDelimiterKey _Nonnull' name='NSSpeechCommandPrefix' type64='@'/>
<constant const='true' declared_type64='NSSpeechCommandDelimiterKey _Nonnull' name='NSSpeechCommandSuffix' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechCurrentVoiceProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryAbbreviations' type64='@'/>
<constant const='true' declared_type64='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryEntryPhonemes' type64='@'/>
<constant const='true' declared_type64='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryEntrySpelling' type64='@'/>
<constant const='true' declared_type64='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryLocaleIdentifier' type64='@'/>
<constant const='true' declared_type64='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryModificationDate' type64='@'/>
<constant const='true' declared_type64='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryPronunciations' type64='@'/>
<constant const='true' declared_type64='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorCount' type64='@'/>
<constant const='true' declared_type64='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorNewestCharacterOffset' type64='@'/>
<constant const='true' declared_type64='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorNewestCode' type64='@'/>
<constant const='true' declared_type64='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorOldestCharacterOffset' type64='@'/>
<constant const='true' declared_type64='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorOldestCode' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechErrorsProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechInputModeProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechMode _Nonnull' name='NSSpeechModeLiteral' type64='@'/>
<constant const='true' declared_type64='NSSpeechMode _Nonnull' name='NSSpeechModeNormal' type64='@'/>
<constant const='true' declared_type64='NSSpeechMode _Nonnull' name='NSSpeechModePhoneme' type64='@'/>
<constant const='true' declared_type64='NSSpeechMode _Nonnull' name='NSSpeechModeText' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechNumberModeProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechOutputToFileURLProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoExample' type64='@'/>
<constant const='true' declared_type64='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoHiliteEnd' type64='@'/>
<constant const='true' declared_type64='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoHiliteStart' type64='@'/>
<constant const='true' declared_type64='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoOpcode' type64='@'/>
<constant const='true' declared_type64='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoSymbol' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechPhonemeSymbolsProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechPitchBaseProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechPitchModProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechRateProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechRecentSyncProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechResetProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechStatusKey _Nonnull' name='NSSpeechStatusNumberOfCharactersLeft' type64='@'/>
<constant const='true' declared_type64='NSSpeechStatusKey _Nonnull' name='NSSpeechStatusOutputBusy' type64='@'/>
<constant const='true' declared_type64='NSSpeechStatusKey _Nonnull' name='NSSpeechStatusOutputPaused' type64='@'/>
<constant const='true' declared_type64='NSSpeechStatusKey _Nonnull' name='NSSpeechStatusPhonemeCode' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechStatusProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechSynthesizerInfoKey _Nonnull' name='NSSpeechSynthesizerInfoIdentifier' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechSynthesizerInfoProperty' type64='@'/>
<constant const='true' declared_type64='NSSpeechSynthesizerInfoKey _Nonnull' name='NSSpeechSynthesizerInfoVersion' type64='@'/>
<constant const='true' declared_type64='NSSpeechPropertyKey _Nonnull' name='NSSpeechVolumeProperty' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticCapitalizationNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticDashSubstitutionNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticPeriodSubstitutionNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticQuoteSubstitutionNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticSpellingCorrectionNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticTextCompletionNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticTextReplacementNotification' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSSpellingStateAttributeName' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='NSSplitViewControllerAutomaticDimension' type64='d'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSSplitViewDidResizeSubviewsNotification' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='NSSplitViewItemUnspecifiedDimension' type64='d'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSSplitViewWillResizeSubviewsNotification' type64='@'/>
<constant const='true' declared_type64='NSLineCapStyle' name='NSSquareLineCapStyle' type64='Q'/>
<constant const='true' declared_type64='CGFloat' name='NSSquareStatusItemLength' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='NSStackViewSpacingUseDefault' type64='d'/>
<constant const='true' declared_type64='NSStackViewVisibilityPriority' name='NSStackViewVisibilityPriorityDetachOnlyIfNecessary' type64='f'/>
<constant const='true' declared_type64='NSStackViewVisibilityPriority' name='NSStackViewVisibilityPriorityMustHold' type64='f'/>
<constant const='true' declared_type64='NSStackViewVisibilityPriority' name='NSStackViewVisibilityPriorityNotVisible' type64='f'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSStatusWindowLevel' type64='q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSStrikethroughColorAttributeName' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSStrikethroughStyleAttributeName' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSStringPboardType' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSStrokeColorAttributeName' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSStrokeWidthAttributeName' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSSubjectDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSSubmenuWindowLevel' type64='q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSSuperscriptAttributeName' type64='@'/>
<constant const='true' declared_type64='NSButtonType' name='NSSwitchButton' type64='Q'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSSystemColorsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSEventType' name='NSSystemDefined' type64='Q'/>
<constant const='true' declared_type64='NSEventMask' name='NSSystemDefinedMask' type64='Q'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSTIFFException' type64='@'/>
<constant const='true' declared_type64='NSBitmapImageFileType' name='NSTIFFFileType' type64='Q'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSTIFFPboardType' type64='@'/>
<constant declared_type64='NSTextTabOptionKey _Nonnull' name='NSTabColumnTerminatorsAttributeName' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTableViewColumnDidMoveNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTableViewColumnDidResizeNotification' type64='@'/>
<constant const='true' declared_type64='NSUserInterfaceItemIdentifier _Nonnull' name='NSTableViewRowViewKey' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTableViewSelectionDidChangeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTableViewSelectionIsChangingNotification' type64='@'/>
<constant const='true' declared_type64='NSEventType' name='NSTabletPoint' type64='Q'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSTabletPointEventSubtype' type64='s'/>
<constant const='true' declared_type64='NSEventMask' name='NSTabletPointMask' type64='Q'/>
<constant const='true' declared_type64='NSEventType' name='NSTabletProximity' type64='Q'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSTabletProximityEventSubtype' type64='s'/>
<constant const='true' declared_type64='NSEventMask' name='NSTabletProximityMask' type64='Q'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSTabularTextPboardType' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSTargetBinding' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSTargetTextScalingDocumentOption' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSTextAlternativesAttributeName' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextAlternativesSelectedAlternativeStringNotification' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingDocumentAuthorKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingDocumentTitleKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingDocumentURLKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingOrthographyKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingQuotesKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingReferenceDateKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingReferenceTimeZoneKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingRegularExpressionsKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingReplacementsKey' type64='@'/>
<constant declared_type64='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingSelectedRangeKey' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSTextColorBinding' type64='@'/>
<constant const='true' declared_type64='NSTextContentType _Nonnull' name='NSTextContentTypeOneTimeCode' type64='@'/>
<constant const='true' declared_type64='NSTextContentType _Nonnull' name='NSTextContentTypePassword' type64='@'/>
<constant const='true' declared_type64='NSTextContentType _Nonnull' name='NSTextContentTypeUsername' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextDidBeginEditingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextDidChangeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextDidEndEditingNotification' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringKey _Nonnull' name='NSTextEffectAttributeName' type64='@'/>
<constant const='true' declared_type64='NSTextEffectStyle _Nonnull' name='NSTextEffectLetterpressStyle' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTextEncodingNameDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSTextEncodingNameDocumentOption' type64='@'/>
<constant const='true' declared_type64='NSDatePickerStyle' name='NSTextFieldAndStepperDatePickerStyle' type64='Q'/>
<constant const='true' declared_type64='NSDatePickerStyle' name='NSTextFieldDatePickerStyle' type64='Q'/>
<constant const='true' declared_type64='NSPasteboardTypeTextFinderOptionKey _Nonnull' name='NSTextFinderCaseInsensitiveKey' type64='@'/>
<constant const='true' declared_type64='NSPasteboardTypeTextFinderOptionKey _Nonnull' name='NSTextFinderMatchingTypeKey' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextInputContextKeyboardSelectionDidChangeNotification' type64='@'/>
<constant declared_type64='NSTextLayoutSectionKey _Nonnull' name='NSTextLayoutSectionOrientation' type64='@'/>
<constant declared_type64='NSTextLayoutSectionKey _Nonnull' name='NSTextLayoutSectionRange' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTextLayoutSectionsAttribute' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSTextLineTooLongException' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerBox' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerCheck' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerCircle' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerDecimal' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerDiamond' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerDisc' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerHyphen' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerLowercaseAlpha' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerLowercaseHexadecimal' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerLowercaseLatin' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerLowercaseRoman' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerOctal' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerSquare' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerUppercaseAlpha' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerUppercaseHexadecimal' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerUppercaseLatin' type64='@'/>
<constant const='true' declared_type64='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerUppercaseRoman' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTextMovementUserInfoKey' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSTextNoSelectionException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSTextReadException' type64='@'/>
<constant const='true' declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTextScalingDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSTextSizeMultiplierDocumentOption' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextStorageDidProcessEditingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextStorageWillProcessEditingNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextViewDidChangeSelectionNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextViewDidChangeTypingAttributesNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSTextViewWillChangeNotifyingTextViewNotification' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSTextWriteException' type64='@'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSTexturedBackgroundWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSTexturedRoundedBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSTexturedSquareBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSThickSquareBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSBezelStyle' name='NSThickerSquareBezelStyle' type64='Q'/>
<constant const='true' declared_type64='NSTickMarkPosition' name='NSTickMarkAbove' type64='Q'/>
<constant const='true' declared_type64='NSTickMarkPosition' name='NSTickMarkBelow' type64='Q'/>
<constant const='true' declared_type64='NSTickMarkPosition' name='NSTickMarkLeft' type64='Q'/>
<constant const='true' declared_type64='NSTickMarkPosition' name='NSTickMarkRight' type64='Q'/>
<constant const='true' declared_type64='NSDatePickerElementFlags' name='NSTimeZoneDatePickerElementFlag' type64='Q'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSTimeoutDocumentOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSTitleBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTitleDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSTitledWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSButtonType' name='NSToggleButton' type64='Q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSToolTipAttributeName' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSToolTipBinding' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarCloudSharingItemIdentifier' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarCustomizeToolbarItemIdentifier' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSToolbarDidRemoveItemNotification' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarFlexibleSpaceItemIdentifier' type64='@'/>
<constant const='true' declared_type64='NSToolbarItemVisibilityPriority' name='NSToolbarItemVisibilityPriorityHigh' type64='q'/>
<constant const='true' declared_type64='NSToolbarItemVisibilityPriority' name='NSToolbarItemVisibilityPriorityLow' type64='q'/>
<constant const='true' declared_type64='NSToolbarItemVisibilityPriority' name='NSToolbarItemVisibilityPriorityStandard' type64='q'/>
<constant const='true' declared_type64='NSToolbarItemVisibilityPriority' name='NSToolbarItemVisibilityPriorityUser' type64='q'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarPrintItemIdentifier' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarSeparatorItemIdentifier' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarShowColorsItemIdentifier' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarShowFontsItemIdentifier' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarSidebarTrackingSeparatorItemIdentifier' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarSpaceItemIdentifier' type64='@'/>
<constant declared_type64='NSToolbarItemIdentifier _Nonnull' name='NSToolbarToggleSidebarItemIdentifier' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSToolbarWillAddItemNotification' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTopMarginDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSWindowLevel' name='NSTornOffMenuWindowLevel' type64='q'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierCandidateList' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierCharacterPicker' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierFixedSpaceLarge' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierFixedSpaceSmall' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierFlexibleSpace' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierOtherItemsProxy' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextAlignment' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextColorPicker' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextFormat' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextList' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextStyle' type64='@'/>
<constant const='true' declared_type64='NSTouchBarItemPriority' name='NSTouchBarItemPriorityHigh' type64='f'/>
<constant const='true' declared_type64='NSTouchBarItemPriority' name='NSTouchBarItemPriorityLow' type64='f'/>
<constant const='true' declared_type64='NSTouchBarItemPriority' name='NSTouchBarItemPriorityNormal' type64='f'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSTouchEventSubtype' type64='s'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSTrackingAttributeName' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSTransparentBinding' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTypeIdentifierAddressText' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTypeIdentifierDateText' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTypeIdentifierPhoneNumberText' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSTypeIdentifierTransitInformationText' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSTypedStreamVersionException' type64='@'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSURLPboardType' type64='@'/>
<constant const='true' declared_type64='NSUnderlineStyle' name='NSUnderlineByWord' type64='q'/>
<constant declared_type64='NSUInteger' name='NSUnderlineByWordMask' type64='Q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSUnderlineColorAttributeName' type64='@'/>
<constant const='true' declared_type64='NSUnderlineStyle' name='NSUnderlinePatternDash' type64='q'/>
<constant const='true' declared_type64='NSUnderlineStyle' name='NSUnderlinePatternDashDot' type64='q'/>
<constant const='true' declared_type64='NSUnderlineStyle' name='NSUnderlinePatternDashDotDot' type64='q'/>
<constant const='true' declared_type64='NSUnderlineStyle' name='NSUnderlinePatternDot' type64='q'/>
<constant const='true' declared_type64='NSUnderlineStyle' name='NSUnderlinePatternSolid' type64='q'/>
<constant declared_type64='NSUInteger' name='NSUnderlineStrikethroughMask' type64='Q'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSUnderlineStyleAttributeName' type64='@'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSUnifiedTitleAndToolbarWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSColorSpaceModel' name='NSUnknownColorSpaceModel' type64='q'/>
<constant const='true' declared_type64='NSPointingDeviceType' name='NSUnknownPointingDevice' type64='Q'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSUnscaledWindowMask' type64='Q'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSUserActivityDocumentURLKey' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSUsesScreenFontsDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='NSWindowStyleMask' name='NSUtilityWindowMask' type64='Q'/>
<constant declared_type64='NSPasteboardType _Nonnull' name='NSVCardPboardType' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSValidatesImmediatelyBindingOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSValueBinding' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSValuePathBinding' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSValueTransformerBindingOption' type64='@'/>
<constant declared_type64='NSBindingOption _Nonnull' name='NSValueTransformerNameBindingOption' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSValueURLBinding' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='NSVariableStatusItemLength' type64='d'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSVerticalGlyphFormAttributeName' type64='@'/>
<constant declared_type64='NSViewAnimationKey _Nonnull' name='NSViewAnimationEffectKey' type64='@'/>
<constant declared_type64='NSViewAnimationKey _Nonnull' name='NSViewAnimationEndFrameKey' type64='@'/>
<constant declared_type64='NSViewAnimationEffectName _Nonnull' name='NSViewAnimationFadeInEffect' type64='@'/>
<constant declared_type64='NSViewAnimationEffectName _Nonnull' name='NSViewAnimationFadeOutEffect' type64='@'/>
<constant declared_type64='NSViewAnimationKey _Nonnull' name='NSViewAnimationStartFrameKey' type64='@'/>
<constant declared_type64='NSViewAnimationKey _Nonnull' name='NSViewAnimationTargetKey' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSViewBoundsDidChangeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSViewDidUpdateTrackingAreasNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSViewFocusDidChangeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSViewFrameDidChangeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSViewGlobalFrameDidChangeNotification' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewModeDocumentAttribute' type64='@'/>
<constant const='true' declared_type64='CGFloat' name='NSViewNoInstrinsicMetric' type64='d'/>
<constant const='true' declared_type64='CGFloat' name='NSViewNoIntrinsicMetric' type64='d'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewSizeDocumentAttribute' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewZoomDocumentAttribute' type64='@'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSVisibleBinding' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceAge' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceDemoText' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceGender' type64='@'/>
<constant const='true' declared_type64='NSVoiceGenderName _Nonnull' name='NSVoiceGenderFemale' type64='@'/>
<constant const='true' declared_type64='NSVoiceGenderName _Nonnull' name='NSVoiceGenderMale' type64='@'/>
<constant const='true' declared_type64='NSVoiceGenderName _Nonnull' name='NSVoiceGenderNeuter' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceIdentifier' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceIndividuallySpokenCharacters' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceLanguage' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceLocaleIdentifier' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceName' type64='@'/>
<constant const='true' declared_type64='NSVoiceAttributeKey _Nonnull' name='NSVoiceSupportedCharacters' type64='@'/>
<constant const='true' declared_type64='NSAlertStyle' name='NSWarningAlertStyle' type64='Q'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSWarningValueBinding' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSWebArchiveTextDocumentType' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSWebPreferencesDocumentOption' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSWebResourceLoadDelegateDocumentOption' type64='@'/>
<constant const='true' declared_type64='NSColorPanelMode' name='NSWheelModeColorPanel' type64='q'/>
<constant const='true' declared_type64='CGFloat' name='NSWhite' type64='d'/>
<constant declared_type64='NSBindingName _Nonnull' name='NSWidthBinding' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidBecomeKeyNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidBecomeMainNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowDidChangeBackingPropertiesNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowDidChangeOcclusionStateNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidChangeScreenNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidChangeScreenProfileNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidDeminiaturizeNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowDidEndLiveResizeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidEndSheetNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowDidEnterFullScreenNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowDidEnterVersionBrowserNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowDidExitFullScreenNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowDidExitVersionBrowserNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidExposeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidMiniaturizeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidMoveNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidResignKeyNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidResignMainNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidResizeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowDidUpdateNotification' type64='@'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSWindowExposedEventType' type64='s'/>
<constant const='true' declared_type64='NSWindowButton' name='NSWindowFullScreenButton' type64='Q'/>
<constant const='true' declared_type64='NSEventSubtype' name='NSWindowMovedEventType' type64='s'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSWindowServerCommunicationException' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowWillBeginSheetNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowWillCloseNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowWillEnterFullScreenNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowWillEnterVersionBrowserNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowWillExitFullScreenNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowWillExitVersionBrowserNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowWillMiniaturizeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWindowWillMoveNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWindowWillStartLiveResizeNotification' type64='@'/>
<constant declared_type64='NSAttributedStringDocumentType _Nonnull' name='NSWordMLTextDocumentType' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSWordTablesReadException' type64='@'/>
<constant declared_type64='NSExceptionName _Nonnull' name='NSWordTablesWriteException' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceAccessibilityDisplayOptionsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceActiveSpaceDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSWorkspaceApplicationKey' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceCompressOperation' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceCopyOperation' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceDecompressOperation' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceDecryptOperation' type64='@'/>
<constant const='true' declared_type64='NSWorkspaceDesktopImageOptionKey _Nonnull' name='NSWorkspaceDesktopImageAllowClippingKey' type64='@'/>
<constant const='true' declared_type64='NSWorkspaceDesktopImageOptionKey _Nonnull' name='NSWorkspaceDesktopImageFillColorKey' type64='@'/>
<constant const='true' declared_type64='NSWorkspaceDesktopImageOptionKey _Nonnull' name='NSWorkspaceDesktopImageScalingKey' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceDestroyOperation' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidActivateApplicationNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidChangeFileLabelsNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidDeactivateApplicationNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidHideApplicationNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidLaunchApplicationNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidMountNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidPerformFileOperationNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidRenameVolumeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidTerminateApplicationNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidUnhideApplicationNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidUnmountNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceDidWakeNotification' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceDuplicateOperation' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceEncryptOperation' type64='@'/>
<constant const='true' declared_type64='NSWorkspaceLaunchConfigurationKey _Nonnull' name='NSWorkspaceLaunchConfigurationAppleEvent' type64='@'/>
<constant const='true' declared_type64='NSWorkspaceLaunchConfigurationKey _Nonnull' name='NSWorkspaceLaunchConfigurationArchitecture' type64='@'/>
<constant const='true' declared_type64='NSWorkspaceLaunchConfigurationKey _Nonnull' name='NSWorkspaceLaunchConfigurationArguments' type64='@'/>
<constant const='true' declared_type64='NSWorkspaceLaunchConfigurationKey _Nonnull' name='NSWorkspaceLaunchConfigurationEnvironment' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceLinkOperation' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceMoveOperation' type64='@'/>
<constant declared_type64='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceRecycleOperation' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceScreensDidSleepNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceScreensDidWakeNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceSessionDidBecomeActiveNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceSessionDidResignActiveNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSWorkspaceVolumeLocalizedNameKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSWorkspaceVolumeOldLocalizedNameKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSWorkspaceVolumeOldURLKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='NSWorkspaceVolumeURLKey' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceWillLaunchApplicationNotification' type64='@'/>
<constant const='true' declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceWillPowerOffNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceWillSleepNotification' type64='@'/>
<constant declared_type64='NSNotificationName _Nonnull' name='NSWorkspaceWillUnmountNotification' type64='@'/>
<constant declared_type64='NSAttributedStringKey _Nonnull' name='NSWritingDirectionAttributeName' type64='@'/>
<constant const='true' declared_type64='NSDatePickerElementFlags' name='NSYearMonthDatePickerElementFlag' type64='Q'/>
<constant const='true' declared_type64='NSDatePickerElementFlags' name='NSYearMonthDayDatePickerElementFlag' type64='Q'/>
<enum name='NSAboveBottom' value64='4'/>
<enum name='NSAboveTop' value64='1'/>
<enum name='NSAccessibilityAnnotationPositionEnd' value64='2'/>
<enum name='NSAccessibilityAnnotationPositionFullRange' value64='0'/>
<enum name='NSAccessibilityAnnotationPositionStart' value64='1'/>
<enum name='NSAccessibilityCustomRotorSearchDirectionNext' value64='1'/>
<enum name='NSAccessibilityCustomRotorSearchDirectionPrevious' value64='0'/>
<enum name='NSAccessibilityCustomRotorTypeAnnotation' value64='2'/>
<enum name='NSAccessibilityCustomRotorTypeAny' value64='1'/>
<enum name='NSAccessibilityCustomRotorTypeBoldText' value64='3'/>
<enum name='NSAccessibilityCustomRotorTypeCustom' value64='0'/>
<enum name='NSAccessibilityCustomRotorTypeHeading' value64='4'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel1' value64='5'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel2' value64='6'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel3' value64='7'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel4' value64='8'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel5' value64='9'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel6' value64='10'/>
<enum name='NSAccessibilityCustomRotorTypeImage' value64='11'/>
<enum name='NSAccessibilityCustomRotorTypeItalicText' value64='12'/>
<enum name='NSAccessibilityCustomRotorTypeLandmark' value64='13'/>
<enum name='NSAccessibilityCustomRotorTypeLink' value64='14'/>
<enum name='NSAccessibilityCustomRotorTypeList' value64='15'/>
<enum name='NSAccessibilityCustomRotorTypeMisspelledWord' value64='16'/>
<enum name='NSAccessibilityCustomRotorTypeTable' value64='17'/>
<enum name='NSAccessibilityCustomRotorTypeTextField' value64='18'/>
<enum name='NSAccessibilityCustomRotorTypeUnderlinedText' value64='19'/>
<enum name='NSAccessibilityCustomRotorTypeVisitedLink' value64='20'/>
<enum name='NSAccessibilityOrientationHorizontal' value64='2'/>
<enum name='NSAccessibilityOrientationUnknown' value64='0'/>
<enum name='NSAccessibilityOrientationVertical' value64='1'/>
<enum name='NSAccessibilityPriorityHigh' value64='90'/>
<enum name='NSAccessibilityPriorityLow' value64='10'/>
<enum name='NSAccessibilityPriorityMedium' value64='50'/>
<enum name='NSAccessibilityRulerMarkerTypeIndentFirstLine' value64='7'/>
<enum name='NSAccessibilityRulerMarkerTypeIndentHead' value64='5'/>
<enum name='NSAccessibilityRulerMarkerTypeIndentTail' value64='6'/>
<enum name='NSAccessibilityRulerMarkerTypeTabStopCenter' value64='3'/>
<enum name='NSAccessibilityRulerMarkerTypeTabStopDecimal' value64='4'/>
<enum name='NSAccessibilityRulerMarkerTypeTabStopLeft' value64='1'/>
<enum name='NSAccessibilityRulerMarkerTypeTabStopRight' value64='2'/>
<enum name='NSAccessibilityRulerMarkerTypeUnknown' value64='0'/>
<enum name='NSAccessibilitySortDirectionAscending' value64='1'/>
<enum name='NSAccessibilitySortDirectionDescending' value64='2'/>
<enum name='NSAccessibilitySortDirectionUnknown' value64='0'/>
<enum name='NSAccessibilityUnitsCentimeters' value64='2'/>
<enum name='NSAccessibilityUnitsInches' value64='1'/>
<enum name='NSAccessibilityUnitsPicas' value64='4'/>
<enum name='NSAccessibilityUnitsPoints' value64='3'/>
<enum name='NSAccessibilityUnitsUnknown' value64='0'/>
<enum name='NSAddTraitFontAction' value64='2'/>
<enum name='NSAdobeCNS1CharacterCollection' value64='1'/>
<enum name='NSAdobeGB1CharacterCollection' value64='2'/>
<enum name='NSAdobeJapan1CharacterCollection' value64='3'/>
<enum name='NSAdobeJapan2CharacterCollection' value64='4'/>
<enum name='NSAdobeKorea1CharacterCollection' value64='5'/>
<enum name='NSAlertAlternateReturn' value64='0'/>
<enum name='NSAlertDefaultReturn' value64='1'/>
<enum name='NSAlertErrorReturn' value64='-2'/>
<enum name='NSAlertOtherReturn' value64='-1'/>
<enum name='NSAlertStyleCritical' value64='2'/>
<enum name='NSAlertStyleInformational' value64='1'/>
<enum name='NSAlertStyleWarning' value64='0'/>
<enum name='NSAllScrollerParts' value64='2'/>
<enum name='NSAnimationBlocking' value64='0'/>
<enum name='NSAnimationEaseIn' value64='1'/>
<enum name='NSAnimationEaseInOut' value64='0'/>
<enum name='NSAnimationEaseOut' value64='2'/>
<enum name='NSAnimationEffectDisappearingItemDefault' value64='0'/>
<enum name='NSAnimationEffectPoof' value64='10'/>
<enum name='NSAnimationLinear' value64='3'/>
<enum name='NSAnimationNonblocking' value64='1'/>
<enum name='NSAnimationNonblockingThreaded' value64='2'/>
<enum name='NSAnyType' value64='0'/>
<enum name='NSApplicationActivateAllWindows' value64='1'/>
<enum name='NSApplicationActivateIgnoringOtherApps' value64='2'/>
<enum name='NSApplicationActivationPolicyAccessory' value64='1'/>
<enum name='NSApplicationActivationPolicyProhibited' value64='2'/>
<enum name='NSApplicationActivationPolicyRegular' value64='0'/>
<enum name='NSApplicationDelegateReplyCancel' value64='1'/>
<enum name='NSApplicationDelegateReplyFailure' value64='2'/>
<enum name='NSApplicationDelegateReplySuccess' value64='0'/>
<enum name='NSApplicationOcclusionStateVisible' value64='2'/>
<enum name='NSApplicationPresentationAutoHideDock' value64='1'/>
<enum name='NSApplicationPresentationAutoHideMenuBar' value64='4'/>
<enum name='NSApplicationPresentationAutoHideToolbar' value64='2048'/>
<enum name='NSApplicationPresentationDefault' value64='0'/>
<enum name='NSApplicationPresentationDisableAppleMenu' value64='16'/>
<enum name='NSApplicationPresentationDisableCursorLocationAssistance' value64='4096'/>
<enum name='NSApplicationPresentationDisableForceQuit' value64='64'/>
<enum name='NSApplicationPresentationDisableHideApplication' value64='256'/>
<enum name='NSApplicationPresentationDisableMenuBarTransparency' value64='512'/>
<enum name='NSApplicationPresentationDisableProcessSwitching' value64='32'/>
<enum name='NSApplicationPresentationDisableSessionTermination' value64='128'/>
<enum name='NSApplicationPresentationFullScreen' value64='1024'/>
<enum name='NSApplicationPresentationHideDock' value64='2'/>
<enum name='NSApplicationPresentationHideMenuBar' value64='8'/>
<enum name='NSAscendingPageOrder' value64='1'/>
<enum name='NSAtBottom' value64='5'/>
<enum name='NSAtTop' value64='2'/>
<enum name='NSAttachmentCharacter' value64='65532'/>
<enum name='NSAutosaveAsOperation' value64='5'/>
<enum name='NSAutosaveElsewhereOperation' value64='3'/>
<enum name='NSAutosaveInPlaceOperation' value64='4'/>
<enum name='NSAutosaveOperation' value64='3'/>
<enum name='NSBackTabCharacter' value64='25'/>
<enum name='NSBackgroundStyleEmphasized' value64='1'/>
<enum name='NSBackgroundStyleLowered' value64='3'/>
<enum name='NSBackgroundStyleNormal' value64='0'/>
<enum name='NSBackgroundStyleRaised' value64='2'/>
<enum name='NSBackgroundTab' value64='1'/>
<enum name='NSBackingStoreBuffered' value64='2'/>
<enum name='NSBackingStoreNonretained' value64='1'/>
<enum name='NSBackingStoreRetained' value64='0'/>
<enum name='NSBackspaceCharacter' value64='8'/>
<enum name='NSBacktabTextMovement' value64='18'/>
<enum name='NSBeginFunctionKey' value64='63274'/>
<enum name='NSBelowBottom' value64='6'/>
<enum name='NSBelowTop' value64='3'/>
<enum name='NSBezelBorder' value64='2'/>
<enum name='NSBezelStyleCircular' value64='7'/>
<enum name='NSBezelStyleDisclosure' value64='5'/>
<enum name='NSBezelStyleHelpButton' value64='9'/>
<enum name='NSBezelStyleInline' value64='15'/>
<enum name='NSBezelStyleRecessed' value64='13'/>
<enum name='NSBezelStyleRegularSquare' value64='2'/>
<enum name='NSBezelStyleRoundRect' value64='12'/>
<enum name='NSBezelStyleRounded' value64='1'/>
<enum name='NSBezelStyleRoundedDisclosure' value64='14'/>
<enum name='NSBezelStyleShadowlessSquare' value64='6'/>
<enum name='NSBezelStyleSmallSquare' value64='10'/>
<enum name='NSBezelStyleTexturedRounded' value64='11'/>
<enum name='NSBezelStyleTexturedSquare' value64='8'/>
<enum name='NSBezierPathElementClosePath' value64='3'/>
<enum name='NSBezierPathElementCurveTo' value64='2'/>
<enum name='NSBezierPathElementLineTo' value64='1'/>
<enum name='NSBezierPathElementMoveTo' value64='0'/>
<enum name='NSBitmapFormatAlphaFirst' value64='1'/>
<enum name='NSBitmapFormatAlphaNonpremultiplied' value64='2'/>
<enum name='NSBitmapFormatFloatingPointSamples' value64='4'/>
<enum name='NSBitmapFormatSixteenBitBigEndian' value64='1024'/>
<enum name='NSBitmapFormatSixteenBitLittleEndian' value64='256'/>
<enum name='NSBitmapFormatThirtyTwoBitBigEndian' value64='2048'/>
<enum name='NSBitmapFormatThirtyTwoBitLittleEndian' value64='512'/>
<enum name='NSBitmapImageFileTypeBMP' value64='1'/>
<enum name='NSBitmapImageFileTypeGIF' value64='2'/>
<enum name='NSBitmapImageFileTypeJPEG' value64='3'/>
<enum name='NSBitmapImageFileTypeJPEG2000' value64='5'/>
<enum name='NSBitmapImageFileTypePNG' value64='4'/>
<enum name='NSBitmapImageFileTypeTIFF' value64='0'/>
<enum name='NSBlueControlTint' value64='1'/>
<enum name='NSBoldFontMask' value64='2'/>
<enum name='NSBottomTabsBezelBorder' value64='2'/>
<enum name='NSBoxCustom' value64='4'/>
<enum name='NSBoxPrimary' value64='0'/>
<enum name='NSBoxSeparator' value64='2'/>
<enum name='NSBreakFunctionKey' value64='63282'/>
<enum name='NSBrowserAutoColumnResizing' value64='1'/>
<enum name='NSBrowserDropAbove' value64='1'/>
<enum name='NSBrowserDropOn' value64='0'/>
<enum name='NSBrowserNoColumnResizing' value64='0'/>
<enum name='NSBrowserUserColumnResizing' value64='2'/>
<enum name='NSButtonTypeAccelerator' value64='8'/>
<enum name='NSButtonTypeMomentaryChange' value64='5'/>
<enum name='NSButtonTypeMomentaryLight' value64='0'/>
<enum name='NSButtonTypeMomentaryPushIn' value64='7'/>
<enum name='NSButtonTypeMultiLevelAccelerator' value64='9'/>
<enum name='NSButtonTypeOnOff' value64='6'/>
<enum name='NSButtonTypePushOnPushOff' value64='1'/>
<enum name='NSButtonTypeRadio' value64='4'/>
<enum name='NSButtonTypeSwitch' value64='3'/>
<enum name='NSButtonTypeToggle' value64='2'/>
<enum name='NSCancelButton' value64='0'/>
<enum name='NSCancelTextMovement' value64='23'/>
<enum name='NSCarriageReturnCharacter' value64='13'/>
<enum name='NSCellAllowsMixedState' value64='16'/>
<enum name='NSCellChangesContents' value64='14'/>
<enum name='NSCellDisabled' value64='0'/>
<enum name='NSCellEditable' value64='3'/>
<enum name='NSCellHasImageHorizontal' value64='12'/>
<enum name='NSCellHasImageOnLeftOrBottom' value64='13'/>
<enum name='NSCellHasOverlappingImage' value64='11'/>
<enum name='NSCellHighlighted' value64='5'/>
<enum name='NSCellHitContentArea' value64='1'/>
<enum name='NSCellHitEditableTextArea' value64='2'/>
<enum name='NSCellHitNone' value64='0'/>
<enum name='NSCellHitTrackableArea' value64='4'/>
<enum name='NSCellIsBordered' value64='10'/>
<enum name='NSCellIsInsetButton' value64='15'/>
<enum name='NSCellLightsByBackground' value64='9'/>
<enum name='NSCellLightsByContents' value64='6'/>
<enum name='NSCellLightsByGray' value64='7'/>
<enum name='NSCellState' value64='1'/>
<enum name='NSCenterTabStopType' value64='2'/>
<enum name='NSChangeAutosaved' value64='4'/>
<enum name='NSChangeBackgroundCell' value64='8'/>
<enum name='NSChangeBackgroundCellMask' value64='8'/>
<enum name='NSChangeCleared' value64='2'/>
<enum name='NSChangeDiscardable' value64='256'/>
<enum name='NSChangeDone' value64='0'/>
<enum name='NSChangeGrayCell' value64='4'/>
<enum name='NSChangeGrayCellMask' value64='4'/>
<enum name='NSChangeReadOtherContents' value64='3'/>
<enum name='NSChangeRedone' value64='5'/>
<enum name='NSChangeUndone' value64='1'/>
<enum name='NSClearControlTint' value64='7'/>
<enum name='NSClearDisplayFunctionKey' value64='63290'/>
<enum name='NSClearLineFunctionKey' value64='63289'/>
<enum name='NSCloudKitSharingServiceAllowPrivate' value64='2'/>
<enum name='NSCloudKitSharingServiceAllowPublic' value64='1'/>
<enum name='NSCloudKitSharingServiceAllowReadOnly' value64='16'/>
<enum name='NSCloudKitSharingServiceAllowReadWrite' value64='32'/>
<enum name='NSCloudKitSharingServiceStandard' value64='0'/>
<enum name='NSCollectionElementCategoryDecorationView' value64='2'/>
<enum name='NSCollectionElementCategoryInterItemGap' value64='3'/>
<enum name='NSCollectionElementCategoryItem' value64='0'/>
<enum name='NSCollectionElementCategorySupplementaryView' value64='1'/>
<enum name='NSCollectionLayoutSectionOrthogonalScrollingBehaviorContinuous' value64='1'/>
<enum name='NSCollectionLayoutSectionOrthogonalScrollingBehaviorContinuousGroupLeadingBoundary' value64='2'/>
<enum name='NSCollectionLayoutSectionOrthogonalScrollingBehaviorGroupPaging' value64='4'/>
<enum name='NSCollectionLayoutSectionOrthogonalScrollingBehaviorGroupPagingCentered' value64='5'/>
<enum name='NSCollectionLayoutSectionOrthogonalScrollingBehaviorNone' value64='0'/>
<enum name='NSCollectionLayoutSectionOrthogonalScrollingBehaviorPaging' value64='3'/>
<enum name='NSCollectionUpdateActionDelete' value64='1'/>
<enum name='NSCollectionUpdateActionInsert' value64='0'/>
<enum name='NSCollectionUpdateActionMove' value64='3'/>
<enum name='NSCollectionUpdateActionNone' value64='4'/>
<enum name='NSCollectionUpdateActionReload' value64='2'/>
<enum name='NSCollectionViewDropBefore' value64='1'/>
<enum name='NSCollectionViewDropOn' value64='0'/>
<enum name='NSCollectionViewItemHighlightAsDropTarget' value64='3'/>
<enum name='NSCollectionViewItemHighlightForDeselection' value64='2'/>
<enum name='NSCollectionViewItemHighlightForSelection' value64='1'/>
<enum name='NSCollectionViewItemHighlightNone' value64='0'/>
<enum name='NSCollectionViewScrollDirectionHorizontal' value64='1'/>
<enum name='NSCollectionViewScrollDirectionVertical' value64='0'/>
<enum name='NSCollectionViewScrollPositionBottom' value64='4'/>
<enum name='NSCollectionViewScrollPositionCenteredHorizontally' value64='16'/>
<enum name='NSCollectionViewScrollPositionCenteredVertically' value64='2'/>
<enum name='NSCollectionViewScrollPositionLeadingEdge' value64='64'/>
<enum name='NSCollectionViewScrollPositionLeft' value64='8'/>
<enum name='NSCollectionViewScrollPositionNearestHorizontalEdge' value64='512'/>
<enum name='NSCollectionViewScrollPositionNearestVerticalEdge' value64='256'/>
<enum name='NSCollectionViewScrollPositionNone' value64='0'/>
<enum name='NSCollectionViewScrollPositionRight' value64='32'/>
<enum name='NSCollectionViewScrollPositionTop' value64='1'/>
<enum name='NSCollectionViewScrollPositionTrailingEdge' value64='128'/>
<enum name='NSColorPanelAllModesMask' value64='65535'/>
<enum name='NSColorPanelCMYKModeMask' value64='4'/>
<enum name='NSColorPanelColorListModeMask' value64='32'/>
<enum name='NSColorPanelCrayonModeMask' value64='128'/>
<enum name='NSColorPanelCustomPaletteModeMask' value64='16'/>
<enum name='NSColorPanelGrayModeMask' value64='1'/>
<enum name='NSColorPanelHSBModeMask' value64='8'/>
<enum name='NSColorPanelModeCMYK' value64='2'/>
<enum name='NSColorPanelModeColorList' value64='5'/>
<enum name='NSColorPanelModeCrayon' value64='7'/>
<enum name='NSColorPanelModeCustomPalette' value64='4'/>
<enum name='NSColorPanelModeGray' value64='0'/>
<enum name='NSColorPanelModeHSB' value64='3'/>
<enum name='NSColorPanelModeNone' value64='-1'/>
<enum name='NSColorPanelModeRGB' value64='1'/>
<enum name='NSColorPanelModeWheel' value64='6'/>
<enum name='NSColorPanelRGBModeMask' value64='2'/>
<enum name='NSColorPanelWheelModeMask' value64='64'/>
<enum name='NSColorRenderingIntentAbsoluteColorimetric' value64='1'/>
<enum name='NSColorRenderingIntentDefault' value64='0'/>
<enum name='NSColorRenderingIntentPerceptual' value64='3'/>
<enum name='NSColorRenderingIntentRelativeColorimetric' value64='2'/>
<enum name='NSColorRenderingIntentSaturation' value64='4'/>
<enum name='NSColorSpaceModelCMYK' value64='2'/>
<enum name='NSColorSpaceModelDeviceN' value64='4'/>
<enum name='NSColorSpaceModelGray' value64='0'/>
<enum name='NSColorSpaceModelIndexed' value64='5'/>
<enum name='NSColorSpaceModelLAB' value64='3'/>
<enum name='NSColorSpaceModelPatterned' value64='6'/>
<enum name='NSColorSpaceModelRGB' value64='1'/>
<enum name='NSColorSpaceModelUnknown' value64='-1'/>
<enum name='NSColorSystemEffectDeepPressed' value64='2'/>
<enum name='NSColorSystemEffectDisabled' value64='3'/>
<enum name='NSColorSystemEffectNone' value64='0'/>
<enum name='NSColorSystemEffectPressed' value64='1'/>
<enum name='NSColorSystemEffectRollover' value64='4'/>
<enum name='NSColorTypeCatalog' value64='2'/>
<enum name='NSColorTypeComponentBased' value64='0'/>
<enum name='NSColorTypePattern' value64='1'/>
<enum name='NSCompositingOperationClear' value64='0'/>
<enum name='NSCompositingOperationColor' value64='27'/>
<enum name='NSCompositingOperationColorBurn' value64='20'/>
<enum name='NSCompositingOperationColorDodge' value64='19'/>
<enum name='NSCompositingOperationCopy' value64='1'/>
<enum name='NSCompositingOperationDarken' value64='17'/>
<enum name='NSCompositingOperationDestinationAtop' value64='9'/>
<enum name='NSCompositingOperationDestinationIn' value64='7'/>
<enum name='NSCompositingOperationDestinationOut' value64='8'/>
<enum name='NSCompositingOperationDestinationOver' value64='6'/>
<enum name='NSCompositingOperationDifference' value64='23'/>
<enum name='NSCompositingOperationExclusion' value64='24'/>
<enum name='NSCompositingOperationHardLight' value64='22'/>
<enum name='NSCompositingOperationHighlight' value64='12'/>
<enum name='NSCompositingOperationHue' value64='25'/>
<enum name='NSCompositingOperationLighten' value64='18'/>
<enum name='NSCompositingOperationLuminosity' value64='28'/>
<enum name='NSCompositingOperationMultiply' value64='14'/>
<enum name='NSCompositingOperationOverlay' value64='16'/>
<enum name='NSCompositingOperationPlusDarker' value64='11'/>
<enum name='NSCompositingOperationPlusLighter' value64='13'/>
<enum name='NSCompositingOperationSaturation' value64='26'/>
<enum name='NSCompositingOperationScreen' value64='15'/>
<enum name='NSCompositingOperationSoftLight' value64='21'/>
<enum name='NSCompositingOperationSourceAtop' value64='5'/>
<enum name='NSCompositingOperationSourceIn' value64='3'/>
<enum name='NSCompositingOperationSourceOut' value64='4'/>
<enum name='NSCompositingOperationSourceOver' value64='2'/>
<enum name='NSCompositingOperationXOR' value64='10'/>
<enum name='NSCompressedFontMask' value64='512'/>
<enum name='NSCondensedFontMask' value64='64'/>
<enum name='NSContentsCellMask' value64='1'/>
<enum name='NSControlCharacterActionContainerBreak' value64='32'/>
<enum name='NSControlCharacterActionHorizontalTab' value64='4'/>
<enum name='NSControlCharacterActionLineBreak' value64='8'/>
<enum name='NSControlCharacterActionParagraphBreak' value64='16'/>
<enum name='NSControlCharacterActionWhitespace' value64='2'/>
<enum name='NSControlCharacterActionZeroAdvancement' value64='1'/>
<enum name='NSControlGlyph' value64='16777215'/>
<enum name='NSControlSizeLarge' value64='3'/>
<enum name='NSControlSizeMini' value64='2'/>
<enum name='NSControlSizeRegular' value64='0'/>
<enum name='NSControlSizeSmall' value64='1'/>
<enum name='NSCorrectionIndicatorTypeDefault' value64='0'/>
<enum name='NSCorrectionIndicatorTypeGuesses' value64='2'/>
<enum name='NSCorrectionIndicatorTypeReversion' value64='1'/>
<enum name='NSCorrectionResponseAccepted' value64='1'/>
<enum name='NSCorrectionResponseEdited' value64='4'/>
<enum name='NSCorrectionResponseIgnored' value64='3'/>
<enum name='NSCorrectionResponseNone' value64='0'/>
<enum name='NSCorrectionResponseRejected' value64='2'/>
<enum name='NSCorrectionResponseReverted' value64='5'/>
<enum name='NSCriticalRequest' value64='0'/>
<enum name='NSDatePickerElementFlagEra' value64='256'/>
<enum name='NSDatePickerElementFlagHourMinute' value64='12'/>
<enum name='NSDatePickerElementFlagHourMinuteSecond' value64='14'/>
<enum name='NSDatePickerElementFlagTimeZone' value64='16'/>
<enum name='NSDatePickerElementFlagYearMonth' value64='192'/>
<enum name='NSDatePickerElementFlagYearMonthDay' value64='224'/>
<enum name='NSDatePickerModeRange' value64='1'/>
<enum name='NSDatePickerModeSingle' value64='0'/>
<enum name='NSDatePickerStyleClockAndCalendar' value64='1'/>
<enum name='NSDatePickerStyleTextField' value64='2'/>
<enum name='NSDatePickerStyleTextFieldAndStepper' value64='0'/>
<enum name='NSDecimalTabStopType' value64='3'/>
<enum name='NSDefaultControlTint' value64='0'/>
<enum name='NSDeleteCharFunctionKey' value64='63294'/>
<enum name='NSDeleteCharacter' value64='127'/>
<enum name='NSDeleteFunctionKey' value64='63272'/>
<enum name='NSDeleteLineFunctionKey' value64='63292'/>
<enum name='NSDescendingPageOrder' value64='-1'/>
<enum name='NSDirectSelection' value64='0'/>
<enum name='NSDirectionalRectEdgeAll' value64='15'/>
<enum name='NSDirectionalRectEdgeBottom' value64='4'/>
<enum name='NSDirectionalRectEdgeLeading' value64='2'/>
<enum name='NSDirectionalRectEdgeNone' value64='0'/>
<enum name='NSDirectionalRectEdgeTop' value64='1'/>
<enum name='NSDirectionalRectEdgeTrailing' value64='8'/>
<enum name='NSDisplayGamutP3' value64='2'/>
<enum name='NSDisplayGamutSRGB' value64='1'/>
<enum name='NSDisplayWindowRunLoopOrdering' value64='600000'/>
<enum name='NSDoubleType' value64='6'/>
<enum name='NSDownArrowFunctionKey' value64='63233'/>
<enum name='NSDownTextMovement' value64='22'/>
<enum name='NSDragOperationAll' value64='15'/>
<enum name='NSDragOperationAll_Obsolete' value64='15'/>
<enum name='NSDragOperationCopy' value64='1'/>
<enum name='NSDragOperationDelete' value64='32'/>
<enum name='NSDragOperationEvery' value64='18446744073709551615'/>
<enum name='NSDragOperationGeneric' value64='4'/>
<enum name='NSDragOperationLink' value64='2'/>
<enum name='NSDragOperationMove' value64='16'/>
<enum name='NSDragOperationNone' value64='0'/>
<enum name='NSDragOperationPrivate' value64='8'/>
<enum name='NSDraggingContextOutsideApplication' value64='0'/>
<enum name='NSDraggingContextWithinApplication' value64='1'/>
<enum name='NSDraggingFormationDefault' value64='0'/>
<enum name='NSDraggingFormationList' value64='3'/>
<enum name='NSDraggingFormationNone' value64='1'/>
<enum name='NSDraggingFormationPile' value64='2'/>
<enum name='NSDraggingFormationStack' value64='4'/>
<enum name='NSDraggingItemEnumerationClearNonenumeratedImages' value64='65536'/>
<enum name='NSDraggingItemEnumerationConcurrent' value64='1'/>
<enum name='NSDrawerClosedState' value64='0'/>
<enum name='NSDrawerClosingState' value64='3'/>
<enum name='NSDrawerOpenState' value64='2'/>
<enum name='NSDrawerOpeningState' value64='1'/>
<enum name='NSEndFunctionKey' value64='63275'/>
<enum name='NSEnterCharacter' value64='3'/>
<enum name='NSEventButtonMaskPenLowerSide' value64='2'/>
<enum name='NSEventButtonMaskPenTip' value64='1'/>
<enum name='NSEventButtonMaskPenUpperSide' value64='4'/>
<enum name='NSEventGestureAxisHorizontal' value64='1'/>
<enum name='NSEventGestureAxisNone' value64='0'/>
<enum name='NSEventGestureAxisVertical' value64='2'/>
<enum name='NSEventMaskAny' value64='18446744073709551615'/>
<enum name='NSEventMaskAppKitDefined' value64='8192'/>
<enum name='NSEventMaskApplicationDefined' value64='32768'/>
<enum name='NSEventMaskBeginGesture' value64='524288'/>
<enum name='NSEventMaskChangeMode' value64='274877906944'/>
<enum name='NSEventMaskCursorUpdate' value64='131072'/>
<enum name='NSEventMaskDirectTouch' value64='137438953472'/>
<enum name='NSEventMaskEndGesture' value64='1048576'/>
<enum name='NSEventMaskFlagsChanged' value64='4096'/>
<enum name='NSEventMaskGesture' value64='536870912'/>
<enum name='NSEventMaskKeyDown' value64='1024'/>
<enum name='NSEventMaskKeyUp' value64='2048'/>
<enum name='NSEventMaskLeftMouseDown' value64='2'/>
<enum name='NSEventMaskLeftMouseDragged' value64='64'/>
<enum name='NSEventMaskLeftMouseUp' value64='4'/>
<enum name='NSEventMaskMagnify' value64='1073741824'/>
<enum name='NSEventMaskMouseEntered' value64='256'/>
<enum name='NSEventMaskMouseExited' value64='512'/>
<enum name='NSEventMaskMouseMoved' value64='32'/>
<enum name='NSEventMaskOtherMouseDown' value64='33554432'/>
<enum name='NSEventMaskOtherMouseDragged' value64='134217728'/>
<enum name='NSEventMaskOtherMouseUp' value64='67108864'/>
<enum name='NSEventMaskPeriodic' value64='65536'/>
<enum name='NSEventMaskPressure' value64='17179869184'/>
<enum name='NSEventMaskRightMouseDown' value64='8'/>
<enum name='NSEventMaskRightMouseDragged' value64='128'/>
<enum name='NSEventMaskRightMouseUp' value64='16'/>
<enum name='NSEventMaskRotate' value64='262144'/>
<enum name='NSEventMaskScrollWheel' value64='4194304'/>
<enum name='NSEventMaskSmartMagnify' value64='4294967296'/>
<enum name='NSEventMaskSwipe' value64='2147483648'/>
<enum name='NSEventMaskSystemDefined' value64='16384'/>
<enum name='NSEventMaskTabletPoint' value64='8388608'/>
<enum name='NSEventMaskTabletProximity' value64='16777216'/>
<enum name='NSEventModifierFlagCapsLock' value64='65536'/>
<enum name='NSEventModifierFlagCommand' value64='1048576'/>
<enum name='NSEventModifierFlagControl' value64='262144'/>
<enum name='NSEventModifierFlagDeviceIndependentFlagsMask' value64='4294901760'/>
<enum name='NSEventModifierFlagFunction' value64='8388608'/>
<enum name='NSEventModifierFlagHelp' value64='4194304'/>
<enum name='NSEventModifierFlagNumericPad' value64='2097152'/>
<enum name='NSEventModifierFlagOption' value64='524288'/>
<enum name='NSEventModifierFlagShift' value64='131072'/>
<enum name='NSEventPhaseBegan' value64='1'/>
<enum name='NSEventPhaseCancelled' value64='16'/>
<enum name='NSEventPhaseChanged' value64='4'/>
<enum name='NSEventPhaseEnded' value64='8'/>
<enum name='NSEventPhaseMayBegin' value64='32'/>
<enum name='NSEventPhaseNone' value64='0'/>
<enum name='NSEventPhaseStationary' value64='2'/>
<enum name='NSEventSubtypeApplicationActivated' value64='1'/>
<enum name='NSEventSubtypeApplicationDeactivated' value64='2'/>
<enum name='NSEventSubtypeMouseEvent' value64='0'/>
<enum name='NSEventSubtypePowerOff' value64='1'/>
<enum name='NSEventSubtypeScreenChanged' value64='8'/>
<enum name='NSEventSubtypeTabletPoint' value64='1'/>
<enum name='NSEventSubtypeTabletProximity' value64='2'/>
<enum name='NSEventSubtypeTouch' value64='3'/>
<enum name='NSEventSubtypeWindowExposed' value64='0'/>
<enum name='NSEventSubtypeWindowMoved' value64='4'/>
<enum name='NSEventSwipeTrackingClampGestureAmount' value64='2'/>
<enum name='NSEventSwipeTrackingLockDirection' value64='1'/>
<enum name='NSEventTypeAppKitDefined' value64='13'/>
<enum name='NSEventTypeApplicationDefined' value64='15'/>
<enum name='NSEventTypeBeginGesture' value64='19'/>
<enum name='NSEventTypeChangeMode' value64='38'/>
<enum name='NSEventTypeCursorUpdate' value64='17'/>
<enum name='NSEventTypeDirectTouch' value64='37'/>
<enum name='NSEventTypeEndGesture' value64='20'/>
<enum name='NSEventTypeFlagsChanged' value64='12'/>
<enum name='NSEventTypeGesture' value64='29'/>
<enum name='NSEventTypeKeyDown' value64='10'/>
<enum name='NSEventTypeKeyUp' value64='11'/>
<enum name='NSEventTypeLeftMouseDown' value64='1'/>
<enum name='NSEventTypeLeftMouseDragged' value64='6'/>
<enum name='NSEventTypeLeftMouseUp' value64='2'/>
<enum name='NSEventTypeMagnify' value64='30'/>
<enum name='NSEventTypeMouseEntered' value64='8'/>
<enum name='NSEventTypeMouseExited' value64='9'/>
<enum name='NSEventTypeMouseMoved' value64='5'/>
<enum name='NSEventTypeOtherMouseDown' value64='25'/>
<enum name='NSEventTypeOtherMouseDragged' value64='27'/>
<enum name='NSEventTypeOtherMouseUp' value64='26'/>
<enum name='NSEventTypePeriodic' value64='16'/>
<enum name='NSEventTypePressure' value64='34'/>
<enum name='NSEventTypeQuickLook' value64='33'/>
<enum name='NSEventTypeRightMouseDown' value64='3'/>
<enum name='NSEventTypeRightMouseDragged' value64='7'/>
<enum name='NSEventTypeRightMouseUp' value64='4'/>
<enum name='NSEventTypeRotate' value64='18'/>
<enum name='NSEventTypeScrollWheel' value64='22'/>
<enum name='NSEventTypeSmartMagnify' value64='32'/>
<enum name='NSEventTypeSwipe' value64='31'/>
<enum name='NSEventTypeSystemDefined' value64='14'/>
<enum name='NSEventTypeTabletPoint' value64='23'/>
<enum name='NSEventTypeTabletProximity' value64='24'/>
<enum name='NSExclude10_4ElementsIconCreationOption' value64='4'/>
<enum name='NSExcludeQuickDrawElementsIconCreationOption' value64='2'/>
<enum name='NSExecuteFunctionKey' value64='63298'/>
<enum name='NSExpandedFontMask' value64='32'/>
<enum name='NSF10FunctionKey' value64='63245'/>
<enum name='NSF11FunctionKey' value64='63246'/>
<enum name='NSF12FunctionKey' value64='63247'/>
<enum name='NSF13FunctionKey' value64='63248'/>
<enum name='NSF14FunctionKey' value64='63249'/>
<enum name='NSF15FunctionKey' value64='63250'/>
<enum name='NSF16FunctionKey' value64='63251'/>
<enum name='NSF17FunctionKey' value64='63252'/>
<enum name='NSF18FunctionKey' value64='63253'/>
<enum name='NSF19FunctionKey' value64='63254'/>
<enum name='NSF1FunctionKey' value64='63236'/>
<enum name='NSF20FunctionKey' value64='63255'/>
<enum name='NSF21FunctionKey' value64='63256'/>
<enum name='NSF22FunctionKey' value64='63257'/>
<enum name='NSF23FunctionKey' value64='63258'/>
<enum name='NSF24FunctionKey' value64='63259'/>
<enum name='NSF25FunctionKey' value64='63260'/>
<enum name='NSF26FunctionKey' value64='63261'/>
<enum name='NSF27FunctionKey' value64='63262'/>
<enum name='NSF28FunctionKey' value64='63263'/>
<enum name='NSF29FunctionKey' value64='63264'/>
<enum name='NSF2FunctionKey' value64='63237'/>
<enum name='NSF30FunctionKey' value64='63265'/>
<enum name='NSF31FunctionKey' value64='63266'/>
<enum name='NSF32FunctionKey' value64='63267'/>
<enum name='NSF33FunctionKey' value64='63268'/>
<enum name='NSF34FunctionKey' value64='63269'/>
<enum name='NSF35FunctionKey' value64='63270'/>
<enum name='NSF3FunctionKey' value64='63238'/>
<enum name='NSF4FunctionKey' value64='63239'/>
<enum name='NSF5FunctionKey' value64='63240'/>
<enum name='NSF6FunctionKey' value64='63241'/>
<enum name='NSF7FunctionKey' value64='63242'/>
<enum name='NSF8FunctionKey' value64='63243'/>
<enum name='NSF9FunctionKey' value64='63244'/>
<enum name='NSFPCurrentField' value64='134'/>
<enum name='NSFPPreviewButton' value64='131'/>
<enum name='NSFPPreviewField' value64='128'/>
<enum name='NSFPRevertButton' value64='130'/>
<enum name='NSFPSetButton' value64='132'/>
<enum name='NSFPSizeField' value64='129'/>
<enum name='NSFPSizeTitle' value64='133'/>
<enum name='NSFileHandlingPanelCancelButton' value64='0'/>
<enum name='NSFileHandlingPanelOKButton' value64='1'/>
<enum name='NSFindFunctionKey' value64='63301'/>
<enum name='NSFindPanelActionNext' value64='2'/>
<enum name='NSFindPanelActionPrevious' value64='3'/>
<enum name='NSFindPanelActionReplace' value64='5'/>
<enum name='NSFindPanelActionReplaceAll' value64='4'/>
<enum name='NSFindPanelActionReplaceAllInSelection' value64='8'/>
<enum name='NSFindPanelActionReplaceAndFind' value64='6'/>
<enum name='NSFindPanelActionSelectAll' value64='9'/>
<enum name='NSFindPanelActionSelectAllInSelection' value64='10'/>
<enum name='NSFindPanelActionSetFindString' value64='7'/>
<enum name='NSFindPanelActionShowFindPanel' value64='1'/>
<enum name='NSFindPanelSubstringMatchTypeContains' value64='0'/>
<enum name='NSFindPanelSubstringMatchTypeEndsWith' value64='3'/>
<enum name='NSFindPanelSubstringMatchTypeFullWord' value64='2'/>
<enum name='NSFindPanelSubstringMatchTypeStartsWith' value64='1'/>
<enum name='NSFixedPitchFontMask' value64='1024'/>
<enum name='NSFloatType' value64='3'/>
<enum name='NSFocusRingAbove' value64='2'/>
<enum name='NSFocusRingBelow' value64='1'/>
<enum name='NSFocusRingOnly' value64='0'/>
<enum name='NSFocusRingTypeDefault' value64='0'/>
<enum name='NSFocusRingTypeExterior' value64='2'/>
<enum name='NSFocusRingTypeNone' value64='1'/>
<enum name='NSFontAntialiasedIntegerAdvancementsRenderingMode' value64='3'/>
<enum name='NSFontAntialiasedRenderingMode' value64='1'/>
<enum name='NSFontAssetDownloadError' value64='66304'/>
<enum name='NSFontAssetRequestOptionUsesStandardUI' value64='1'/>
<enum name='NSFontBoldTrait' value64='2'/>
<enum name='NSFontClarendonSerifsClass' value64='1073741824'/>
<enum name='NSFontCollectionApplicationOnlyMask' value64='1'/>
<enum name='NSFontCollectionVisibilityComputer' value64='4'/>
<enum name='NSFontCollectionVisibilityProcess' value64='1'/>
<enum name='NSFontCollectionVisibilityUser' value64='2'/>
<enum name='NSFontCondensedTrait' value64='64'/>
<enum name='NSFontDefaultRenderingMode' value64='0'/>
<enum name='NSFontDescriptorClassClarendonSerifs' value64='1073741824'/>
<enum name='NSFontDescriptorClassFreeformSerifs' value64='1879048192'/>
<enum name='NSFontDescriptorClassMask' value64='4026531840'/>
<enum name='NSFontDescriptorClassModernSerifs' value64='805306368'/>
<enum name='NSFontDescriptorClassOldStyleSerifs' value64='268435456'/>
<enum name='NSFontDescriptorClassOrnamentals' value64='2415919104'/>
<enum name='NSFontDescriptorClassSansSerif' value64='2147483648'/>
<enum name='NSFontDescriptorClassScripts' value64='2684354560'/>
<enum name='NSFontDescriptorClassSlabSerifs' value64='1342177280'/>
<enum name='NSFontDescriptorClassSymbolic' value64='3221225472'/>
<enum name='NSFontDescriptorClassTransitionalSerifs' value64='536870912'/>
<enum name='NSFontDescriptorClassUnknown' value64='0'/>
<enum name='NSFontDescriptorTraitBold' value64='2'/>
<enum name='NSFontDescriptorTraitCondensed' value64='64'/>
<enum name='NSFontDescriptorTraitEmphasized' value64='2'/>
<enum name='NSFontDescriptorTraitExpanded' value64='32'/>
<enum name='NSFontDescriptorTraitItalic' value64='1'/>
<enum name='NSFontDescriptorTraitLooseLeading' value64='65536'/>
<enum name='NSFontDescriptorTraitMonoSpace' value64='1024'/>
<enum name='NSFontDescriptorTraitTightLeading' value64='32768'/>
<enum name='NSFontDescriptorTraitUIOptimized' value64='4096'/>
<enum name='NSFontDescriptorTraitVertical' value64='2048'/>
<enum name='NSFontErrorMaximum' value64='66335'/>
<enum name='NSFontErrorMinimum' value64='66304'/>
<enum name='NSFontExpandedTrait' value64='32'/>
<enum name='NSFontFamilyClassMask' value64='4026531840'/>
<enum name='NSFontFreeformSerifsClass' value64='1879048192'/>
<enum name='NSFontIntegerAdvancementsRenderingMode' value64='2'/>
<enum name='NSFontItalicTrait' value64='1'/>
<enum name='NSFontModernSerifsClass' value64='805306368'/>
<enum name='NSFontMonoSpaceTrait' value64='1024'/>
<enum name='NSFontOldStyleSerifsClass' value64='268435456'/>
<enum name='NSFontOrnamentalsClass' value64='-1879048192'/>
<enum name='NSFontPanelAllEffectsModeMask' value64='1048320'/>
<enum name='NSFontPanelAllModesMask' value64='4294967295'/>
<enum name='NSFontPanelCollectionModeMask' value64='4'/>
<enum name='NSFontPanelDocumentColorEffectModeMask' value64='2048'/>
<enum name='NSFontPanelFaceModeMask' value64='1'/>
<enum name='NSFontPanelModeMaskAllEffects' value64='1048320'/>
<enum name='NSFontPanelModeMaskCollection' value64='4'/>
<enum name='NSFontPanelModeMaskDocumentColorEffect' value64='2048'/>
<enum name='NSFontPanelModeMaskFace' value64='1'/>
<enum name='NSFontPanelModeMaskShadowEffect' value64='4096'/>
<enum name='NSFontPanelModeMaskSize' value64='2'/>
<enum name='NSFontPanelModeMaskStrikethroughEffect' value64='512'/>
<enum name='NSFontPanelModeMaskTextColorEffect' value64='1024'/>
<enum name='NSFontPanelModeMaskUnderlineEffect' value64='256'/>
<enum name='NSFontPanelModesMaskAllModes' value64='4294967295'/>
<enum name='NSFontPanelModesMaskStandardModes' value64='65535'/>
<enum name='NSFontPanelShadowEffectModeMask' value64='4096'/>
<enum name='NSFontPanelSizeModeMask' value64='2'/>
<enum name='NSFontPanelStandardModesMask' value64='65535'/>
<enum name='NSFontPanelStrikethroughEffectModeMask' value64='512'/>
<enum name='NSFontPanelTextColorEffectModeMask' value64='1024'/>
<enum name='NSFontPanelUnderlineEffectModeMask' value64='256'/>
<enum name='NSFontSansSerifClass' value64='-2147483648'/>
<enum name='NSFontScriptsClass' value64='-1610612736'/>
<enum name='NSFontSlabSerifsClass' value64='1342177280'/>
<enum name='NSFontSymbolicClass' value64='-1073741824'/>
<enum name='NSFontTransitionalSerifsClass' value64='536870912'/>
<enum name='NSFontUIOptimizedTrait' value64='4096'/>
<enum name='NSFontUnknownClass' value64='0'/>
<enum name='NSFontVerticalTrait' value64='2048'/>
<enum name='NSFormFeedCharacter' value64='12'/>
<enum name='NSGestureRecognizerStateBegan' value64='1'/>
<enum name='NSGestureRecognizerStateCancelled' value64='4'/>
<enum name='NSGestureRecognizerStateChanged' value64='2'/>
<enum name='NSGestureRecognizerStateEnded' value64='3'/>
<enum name='NSGestureRecognizerStateFailed' value64='5'/>
<enum name='NSGestureRecognizerStatePossible' value64='0'/>
<enum name='NSGestureRecognizerStateRecognized' value64='3'/>
<enum name='NSGlyphAttributeBidiLevel' value64='2'/>
<enum name='NSGlyphAttributeElastic' value64='1'/>
<enum name='NSGlyphAttributeInscribe' value64='5'/>
<enum name='NSGlyphAttributeSoft' value64='0'/>
<enum name='NSGlyphInscribeAbove' value64='2'/>
<enum name='NSGlyphInscribeBase' value64='0'/>
<enum name='NSGlyphInscribeBelow' value64='1'/>
<enum name='NSGlyphInscribeOverBelow' value64='4'/>
<enum name='NSGlyphInscribeOverstrike' value64='3'/>
<enum name='NSGlyphPropertyControlCharacter' value64='2'/>
<enum name='NSGlyphPropertyElastic' value64='4'/>
<enum name='NSGlyphPropertyNonBaseCharacter' value64='8'/>
<enum name='NSGlyphPropertyNull' value64='1'/>
<enum name='NSGradientConcaveStrong' value64='2'/>
<enum name='NSGradientConcaveWeak' value64='1'/>
<enum name='NSGradientConvexStrong' value64='4'/>
<enum name='NSGradientConvexWeak' value64='3'/>
<enum name='NSGradientDrawsAfterEndingLocation' value64='2'/>
<enum name='NSGradientDrawsBeforeStartingLocation' value64='1'/>
<enum name='NSGradientNone' value64='0'/>
<enum name='NSGraphiteControlTint' value64='6'/>
<enum name='NSGridCellPlacementBottom' value64='3'/>
<enum name='NSGridCellPlacementCenter' value64='4'/>
<enum name='NSGridCellPlacementFill' value64='5'/>
<enum name='NSGridCellPlacementInherited' value64='0'/>
<enum name='NSGridCellPlacementLeading' value64='2'/>
<enum name='NSGridCellPlacementNone' value64='1'/>
<enum name='NSGridCellPlacementTop' value64='2'/>
<enum name='NSGridCellPlacementTrailing' value64='3'/>
<enum name='NSGridRowAlignmentFirstBaseline' value64='2'/>
<enum name='NSGridRowAlignmentInherited' value64='0'/>
<enum name='NSGridRowAlignmentLastBaseline' value64='3'/>
<enum name='NSGridRowAlignmentNone' value64='1'/>
<enum name='NSGrooveBorder' value64='3'/>
<enum name='NSHapticFeedbackPatternAlignment' value64='1'/>
<enum name='NSHapticFeedbackPatternGeneric' value64='0'/>
<enum name='NSHapticFeedbackPatternLevelChange' value64='2'/>
<enum name='NSHapticFeedbackPerformanceTimeDefault' value64='0'/>
<enum name='NSHapticFeedbackPerformanceTimeDrawCompleted' value64='2'/>
<enum name='NSHapticFeedbackPerformanceTimeNow' value64='1'/>
<enum name='NSHeavierFontAction' value64='5'/>
<enum name='NSHelpFunctionKey' value64='63302'/>
<enum name='NSHighlightModeMatrix' value64='1'/>
<enum name='NSHomeFunctionKey' value64='63273'/>
<enum name='NSHorizontalRuler' value64='0'/>
<enum name='NSIMAGE_UNAVAILABLE_MACCATALYST' value64='0'/>
<enum name='NSIdentityMappingCharacterCollection' value64='0'/>
<enum name='NSIllegalTextMovement' value64='0'/>
<enum name='NSImageAbove' value64='5'/>
<enum name='NSImageAlignBottom' value64='5'/>
<enum name='NSImageAlignBottomLeft' value64='6'/>
<enum name='NSImageAlignBottomRight' value64='7'/>
<enum name='NSImageAlignCenter' value64='0'/>
<enum name='NSImageAlignLeft' value64='4'/>
<enum name='NSImageAlignRight' value64='8'/>
<enum name='NSImageAlignTop' value64='1'/>
<enum name='NSImageAlignTopLeft' value64='2'/>
<enum name='NSImageAlignTopRight' value64='3'/>
<enum name='NSImageBelow' value64='4'/>
<enum name='NSImageCacheAlways' value64='1'/>
<enum name='NSImageCacheBySize' value64='2'/>
<enum name='NSImageCacheDefault' value64='0'/>
<enum name='NSImageCacheNever' value64='3'/>
<enum name='NSImageCellType' value64='2'/>
<enum name='NSImageFrameButton' value64='4'/>
<enum name='NSImageFrameGrayBezel' value64='2'/>
<enum name='NSImageFrameGroove' value64='3'/>
<enum name='NSImageFrameNone' value64='0'/>
<enum name='NSImageFramePhoto' value64='1'/>
<enum name='NSImageInterpolationDefault' value64='0'/>
<enum name='NSImageInterpolationHigh' value64='3'/>
<enum name='NSImageInterpolationLow' value64='2'/>
<enum name='NSImageInterpolationMedium' value64='4'/>
<enum name='NSImageInterpolationNone' value64='1'/>
<enum name='NSImageLayoutDirectionLeftToRight' value64='2'/>
<enum name='NSImageLayoutDirectionRightToLeft' value64='3'/>
<enum name='NSImageLayoutDirectionUnspecified' value64='-1'/>
<enum name='NSImageLeading' value64='7'/>
<enum name='NSImageLeft' value64='2'/>
<enum name='NSImageLoadStatusCancelled' value64='1'/>
<enum name='NSImageLoadStatusCompleted' value64='0'/>
<enum name='NSImageLoadStatusInvalidData' value64='2'/>
<enum name='NSImageLoadStatusReadError' value64='4'/>
<enum name='NSImageLoadStatusUnexpectedEOF' value64='3'/>
<enum name='NSImageOnly' value64='1'/>
<enum name='NSImageOverlaps' value64='6'/>
<enum name='NSImageRepLoadStatusCompleted' value64='-6'/>
<enum name='NSImageRepLoadStatusInvalidData' value64='-4'/>
<enum name='NSImageRepLoadStatusReadingHeader' value64='-2'/>
<enum name='NSImageRepLoadStatusUnexpectedEOF' value64='-5'/>
<enum name='NSImageRepLoadStatusUnknownType' value64='-1'/>
<enum name='NSImageRepLoadStatusWillNeedAllData' value64='-3'/>
<enum name='NSImageRepMatchesDevice' value64='0'/>
<enum name='NSImageResizingModeStretch' value64='0'/>
<enum name='NSImageResizingModeTile' value64='1'/>
<enum name='NSImageRight' value64='3'/>
<enum name='NSImageScaleAxesIndependently' value64='1'/>
<enum name='NSImageScaleNone' value64='2'/>
<enum name='NSImageScaleProportionallyDown' value64='0'/>
<enum name='NSImageScaleProportionallyUpOrDown' value64='3'/>
<enum name='NSImageSymbolScaleLarge' value64='3'/>
<enum name='NSImageSymbolScaleMedium' value64='2'/>
<enum name='NSImageSymbolScaleSmall' value64='1'/>
<enum name='NSImageTrailing' value64='8'/>
<enum name='NSInformationalRequest' value64='10'/>
<enum name='NSInsertCharFunctionKey' value64='63293'/>
<enum name='NSInsertFunctionKey' value64='63271'/>
<enum name='NSInsertLineFunctionKey' value64='63291'/>
<enum name='NSIntType' value64='1'/>
<enum name='NSItalicFontMask' value64='1'/>
<enum name='NSLandscapeOrientation' value64='1'/>
<enum name='NSLayoutAttributeBaseline' value64='11'/>
<enum name='NSLayoutAttributeBottom' value64='4'/>
<enum name='NSLayoutAttributeCenterX' value64='9'/>
<enum name='NSLayoutAttributeCenterY' value64='10'/>
<enum name='NSLayoutAttributeFirstBaseline' value64='12'/>
<enum name='NSLayoutAttributeHeight' value64='8'/>
<enum name='NSLayoutAttributeLastBaseline' value64='11'/>
<enum name='NSLayoutAttributeLeading' value64='5'/>
<enum name='NSLayoutAttributeLeft' value64='1'/>
<enum name='NSLayoutAttributeNotAnAttribute' value64='0'/>
<enum name='NSLayoutAttributeRight' value64='2'/>
<enum name='NSLayoutAttributeTop' value64='3'/>
<enum name='NSLayoutAttributeTrailing' value64='6'/>
<enum name='NSLayoutAttributeWidth' value64='7'/>
<enum name='NSLayoutConstraintOrientationHorizontal' value64='0'/>
<enum name='NSLayoutConstraintOrientationVertical' value64='1'/>
<enum name='NSLayoutFormatAlignAllBaseline' value64='2048'/>
<enum name='NSLayoutFormatAlignAllBottom' value64='16'/>
<enum name='NSLayoutFormatAlignAllCenterX' value64='512'/>
<enum name='NSLayoutFormatAlignAllCenterY' value64='1024'/>
<enum name='NSLayoutFormatAlignAllFirstBaseline' value64='4096'/>
<enum name='NSLayoutFormatAlignAllLastBaseline' value64='2048'/>
<enum name='NSLayoutFormatAlignAllLeading' value64='32'/>
<enum name='NSLayoutFormatAlignAllLeft' value64='2'/>
<enum name='NSLayoutFormatAlignAllRight' value64='4'/>
<enum name='NSLayoutFormatAlignAllTop' value64='8'/>
<enum name='NSLayoutFormatAlignAllTrailing' value64='64'/>
<enum name='NSLayoutFormatAlignmentMask' value64='65535'/>
<enum name='NSLayoutFormatDirectionLeadingToTrailing' value64='0'/>
<enum name='NSLayoutFormatDirectionLeftToRight' value64='65536'/>
<enum name='NSLayoutFormatDirectionMask' value64='196608'/>
<enum name='NSLayoutFormatDirectionRightToLeft' value64='131072'/>
<enum name='NSLayoutRelationEqual' value64='0'/>
<enum name='NSLayoutRelationGreaterThanOrEqual' value64='1'/>
<enum name='NSLayoutRelationLessThanOrEqual' value64='-1'/>
<enum name='NSLeftArrowFunctionKey' value64='63234'/>
<enum name='NSLeftTabStopType' value64='0'/>
<enum name='NSLeftTabsBezelBorder' value64='1'/>
<enum name='NSLeftTextMovement' value64='19'/>
<enum name='NSLevelIndicatorPlaceholderVisibilityAlways' value64='1'/>
<enum name='NSLevelIndicatorPlaceholderVisibilityAutomatic' value64='0'/>
<enum name='NSLevelIndicatorPlaceholderVisibilityWhileEditing' value64='2'/>
<enum name='NSLevelIndicatorStyleContinuousCapacity' value64='1'/>
<enum name='NSLevelIndicatorStyleDiscreteCapacity' value64='2'/>
<enum name='NSLevelIndicatorStyleRating' value64='3'/>
<enum name='NSLevelIndicatorStyleRelevancy' value64='0'/>
<enum name='NSLighterFontAction' value64='6'/>
<enum name='NSLineBorder' value64='1'/>
<enum name='NSLineBreakByCharWrapping' value64='1'/>
<enum name='NSLineBreakByClipping' value64='2'/>
<enum name='NSLineBreakByTruncatingHead' value64='3'/>
<enum name='NSLineBreakByTruncatingMiddle' value64='5'/>
<enum name='NSLineBreakByTruncatingTail' value64='4'/>
<enum name='NSLineBreakByWordWrapping' value64='0'/>
<enum name='NSLineBreakStrategyHangulWordPriority' value64='2'/>
<enum name='NSLineBreakStrategyNone' value64='0'/>
<enum name='NSLineBreakStrategyPushOut' value64='1'/>
<enum name='NSLineBreakStrategyStandard' value64='65535'/>
<enum name='NSLineCapStyleButt' value64='0'/>
<enum name='NSLineCapStyleRound' value64='1'/>
<enum name='NSLineCapStyleSquare' value64='2'/>
<enum name='NSLineDoesntMove' value64='0'/>
<enum name='NSLineJoinStyleBevel' value64='2'/>
<enum name='NSLineJoinStyleMiter' value64='0'/>
<enum name='NSLineJoinStyleRound' value64='1'/>
<enum name='NSLineMovesDown' value64='3'/>
<enum name='NSLineMovesLeft' value64='1'/>
<enum name='NSLineMovesRight' value64='2'/>
<enum name='NSLineMovesUp' value64='4'/>
<enum name='NSLineSeparatorCharacter' value64='8232'/>
<enum name='NSLineSweepDown' value64='2'/>
<enum name='NSLineSweepLeft' value64='0'/>
<enum name='NSLineSweepRight' value64='1'/>
<enum name='NSLineSweepUp' value64='3'/>
<enum name='NSListModeMatrix' value64='2'/>
<enum name='NSMacintoshInterfaceStyle' value64='3'/>
<enum name='NSMediaLibraryAudio' value64='1'/>
<enum name='NSMediaLibraryImage' value64='2'/>
<enum name='NSMediaLibraryMovie' value64='4'/>
<enum name='NSMenuFunctionKey' value64='63285'/>
<enum name='NSMenuPropertyItemAccessibilityDescription' value64='32'/>
<enum name='NSMenuPropertyItemAttributedTitle' value64='2'/>
<enum name='NSMenuPropertyItemEnabled' value64='16'/>
<enum name='NSMenuPropertyItemImage' value64='8'/>
<enum name='NSMenuPropertyItemKeyEquivalent' value64='4'/>
<enum name='NSMenuPropertyItemTitle' value64='1'/>
<enum name='NSModeSwitchFunctionKey' value64='63303'/>
<enum name='NSNarrowFontMask' value64='16'/>
<enum name='NSNativeShortGlyphPacking' value64='5'/>
<enum name='NSNewlineCharacter' value64='10'/>
<enum name='NSNextFunctionKey' value64='63296'/>
<enum name='NSNextStepInterfaceStyle' value64='1'/>
<enum name='NSNoBorder' value64='0'/>
<enum name='NSNoCellMask' value64='0'/>
<enum name='NSNoFontChangeAction' value64='0'/>
<enum name='NSNoImage' value64='0'/>
<enum name='NSNoInterfaceStyle' value64='0'/>
<enum name='NSNoScrollerParts' value64='0'/>
<enum name='NSNoTabsBezelBorder' value64='4'/>
<enum name='NSNoTabsLineBorder' value64='5'/>
<enum name='NSNoTabsNoBorder' value64='6'/>
<enum name='NSNoTitle' value64='0'/>
<enum name='NSNoUnderlineStyle' value64='0'/>
<enum name='NSNonStandardCharacterSetFontMask' value64='8'/>
<enum name='NSNullCellType' value64='0'/>
<enum name='NSNullGlyph' value64='0'/>
<enum name='NSOKButton' value64='1'/>
<enum name='NSOnlyScrollerArrows' value64='1'/>
<enum name='NSOpenGLContextParameterCurrentRendererID' value64='309'/>
<enum name='NSOpenGLContextParameterGPUFragmentProcessing' value64='311'/>
<enum name='NSOpenGLContextParameterGPUVertexProcessing' value64='310'/>
<enum name='NSOpenGLContextParameterHasDrawable' value64='314'/>
<enum name='NSOpenGLContextParameterMPSwapsInFlight' value64='315'/>
<enum name='NSOpenGLContextParameterRasterizationEnable' value64='221'/>
<enum name='NSOpenGLContextParameterReclaimResources' value64='308'/>
<enum name='NSOpenGLContextParameterStateValidation' value64='301'/>
<enum name='NSOpenGLContextParameterSurfaceBackingSize' value64='304'/>
<enum name='NSOpenGLContextParameterSurfaceOpacity' value64='236'/>
<enum name='NSOpenGLContextParameterSurfaceOrder' value64='235'/>
<enum name='NSOpenGLContextParameterSurfaceSurfaceVolatile' value64='306'/>
<enum name='NSOpenGLContextParameterSwapInterval' value64='222'/>
<enum name='NSOpenGLContextParameterSwapRectangle' value64='200'/>
<enum name='NSOpenGLContextParameterSwapRectangleEnable' value64='201'/>
<enum name='NSOpenGLGOClearFormatCache' value64='502'/>
<enum name='NSOpenGLGOFormatCacheSize' value64='501'/>
<enum name='NSOpenGLGOResetLibrary' value64='504'/>
<enum name='NSOpenGLGORetainRenderers' value64='503'/>
<enum name='NSOpenGLGOUseBuildCache' value64='506'/>
<enum name='NSOpenGLPFAAccelerated' value64='73'/>
<enum name='NSOpenGLPFAAcceleratedCompute' value64='97'/>
<enum name='NSOpenGLPFAAccumSize' value64='14'/>
<enum name='NSOpenGLPFAAllRenderers' value64='1'/>
<enum name='NSOpenGLPFAAllowOfflineRenderers' value64='96'/>
<enum name='NSOpenGLPFAAlphaSize' value64='11'/>
<enum name='NSOpenGLPFAAuxBuffers' value64='7'/>
<enum name='NSOpenGLPFAAuxDepthStencil' value64='57'/>
<enum name='NSOpenGLPFABackingStore' value64='76'/>
<enum name='NSOpenGLPFAClosestPolicy' value64='74'/>
<enum name='NSOpenGLPFAColorFloat' value64='58'/>
<enum name='NSOpenGLPFAColorSize' value64='8'/>
<enum name='NSOpenGLPFACompliant' value64='83'/>
<enum name='NSOpenGLPFADepthSize' value64='12'/>
<enum name='NSOpenGLPFADoubleBuffer' value64='5'/>
<enum name='NSOpenGLPFAFullScreen' value64='54'/>
<enum name='NSOpenGLPFAMPSafe' value64='78'/>
<enum name='NSOpenGLPFAMaximumPolicy' value64='52'/>
<enum name='NSOpenGLPFAMinimumPolicy' value64='51'/>
<enum name='NSOpenGLPFAMultiScreen' value64='81'/>
<enum name='NSOpenGLPFAMultisample' value64='59'/>
<enum name='NSOpenGLPFANoRecovery' value64='72'/>
<enum name='NSOpenGLPFAOffScreen' value64='53'/>
<enum name='NSOpenGLPFAOpenGLProfile' value64='99'/>
<enum name='NSOpenGLPFAPixelBuffer' value64='90'/>
<enum name='NSOpenGLPFARemotePixelBuffer' value64='91'/>
<enum name='NSOpenGLPFARendererID' value64='70'/>
<enum name='NSOpenGLPFARobust' value64='75'/>
<enum name='NSOpenGLPFASampleAlpha' value64='61'/>
<enum name='NSOpenGLPFASampleBuffers' value64='55'/>
<enum name='NSOpenGLPFASamples' value64='56'/>
<enum name='NSOpenGLPFAScreenMask' value64='84'/>
<enum name='NSOpenGLPFASingleRenderer' value64='71'/>
<enum name='NSOpenGLPFAStencilSize' value64='13'/>
<enum name='NSOpenGLPFAStereo' value64='6'/>
<enum name='NSOpenGLPFASupersample' value64='60'/>
<enum name='NSOpenGLPFATripleBuffer' value64='3'/>
<enum name='NSOpenGLPFAVirtualScreenCount' value64='128'/>
<enum name='NSOpenGLPFAWindow' value64='80'/>
<enum name='NSOpenGLProfileVersion3_2Core' value64='12800'/>
<enum name='NSOpenGLProfileVersion4_1Core' value64='16640'/>
<enum name='NSOpenGLProfileVersionLegacy' value64='4096'/>
<enum name='NSOtherTextMovement' value64='0'/>
<enum name='NSOutlineViewDropOnItemIndex' value64='-1'/>
<enum name='NSPDFPanelRequestsParentDirectory' value64='16777216'/>
<enum name='NSPDFPanelShowsOrientation' value64='8'/>
<enum name='NSPDFPanelShowsPaperSize' value64='4'/>
<enum name='NSPageControllerTransitionStyleHorizontalStrip' value64='2'/>
<enum name='NSPageControllerTransitionStyleStackBook' value64='1'/>
<enum name='NSPageControllerTransitionStyleStackHistory' value64='0'/>
<enum name='NSPageDownFunctionKey' value64='63277'/>
<enum name='NSPageUpFunctionKey' value64='63276'/>
<enum name='NSPaperOrientationLandscape' value64='1'/>
<enum name='NSPaperOrientationPortrait' value64='0'/>
<enum name='NSParagraphSeparatorCharacter' value64='8233'/>
<enum name='NSPasteboardContentsCurrentHostOnly' value64='1'/>
<enum name='NSPasteboardReadingAsData' value64='0'/>
<enum name='NSPasteboardReadingAsKeyedArchive' value64='4'/>
<enum name='NSPasteboardReadingAsPropertyList' value64='2'/>
<enum name='NSPasteboardReadingAsString' value64='1'/>
<enum name='NSPasteboardWritingPromised' value64='512'/>
<enum name='NSPathStyleNavigationBar' value64='1'/>
<enum name='NSPathStylePopUp' value64='2'/>
<enum name='NSPathStyleStandard' value64='0'/>
<enum name='NSPauseFunctionKey' value64='63280'/>
<enum name='NSPickerTouchBarItemControlRepresentationAutomatic' value64='0'/>
<enum name='NSPickerTouchBarItemControlRepresentationCollapsed' value64='2'/>
<enum name='NSPickerTouchBarItemControlRepresentationExpanded' value64='1'/>
<enum name='NSPickerTouchBarItemSelectionModeMomentary' value64='2'/>
<enum name='NSPickerTouchBarItemSelectionModeSelectAny' value64='1'/>
<enum name='NSPickerTouchBarItemSelectionModeSelectOne' value64='0'/>
<enum name='NSPointingDeviceTypeCursor' value64='2'/>
<enum name='NSPointingDeviceTypeEraser' value64='3'/>
<enum name='NSPointingDeviceTypePen' value64='1'/>
<enum name='NSPointingDeviceTypeUnknown' value64='0'/>
<enum name='NSPopUpArrowAtBottom' value64='2'/>
<enum name='NSPopUpArrowAtCenter' value64='1'/>
<enum name='NSPopUpNoArrow' value64='0'/>
<enum name='NSPopoverAppearanceHUD' value64='1'/>
<enum name='NSPopoverAppearanceMinimal' value64='0'/>
<enum name='NSPopoverBehaviorApplicationDefined' value64='0'/>
<enum name='NSPopoverBehaviorSemitransient' value64='2'/>
<enum name='NSPopoverBehaviorTransient' value64='1'/>
<enum name='NSPortraitOrientation' value64='0'/>
<enum name='NSPositiveDoubleType' value64='7'/>
<enum name='NSPositiveFloatType' value64='4'/>
<enum name='NSPositiveIntType' value64='2'/>
<enum name='NSPosterFontMask' value64='256'/>
<enum name='NSPressedTab' value64='2'/>
<enum name='NSPressureBehaviorPrimaryAccelerator' value64='3'/>
<enum name='NSPressureBehaviorPrimaryClick' value64='1'/>
<enum name='NSPressureBehaviorPrimaryDeepClick' value64='5'/>
<enum name='NSPressureBehaviorPrimaryDeepDrag' value64='6'/>
<enum name='NSPressureBehaviorPrimaryDefault' value64='0'/>
<enum name='NSPressureBehaviorPrimaryGeneric' value64='2'/>
<enum name='NSPressureBehaviorUnknown' value64='-1'/>
<enum name='NSPrevFunctionKey' value64='63295'/>
<enum name='NSPrintFunctionKey' value64='63288'/>
<enum name='NSPrintPanelShowsCopies' value64='1'/>
<enum name='NSPrintPanelShowsOrientation' value64='8'/>
<enum name='NSPrintPanelShowsPageRange' value64='2'/>
<enum name='NSPrintPanelShowsPageSetupAccessory' value64='256'/>
<enum name='NSPrintPanelShowsPaperSize' value64='4'/>
<enum name='NSPrintPanelShowsPreview' value64='131072'/>
<enum name='NSPrintPanelShowsPrintSelection' value64='32'/>
<enum name='NSPrintPanelShowsScaling' value64='16'/>
<enum name='NSPrintRenderingQualityBest' value64='0'/>
<enum name='NSPrintRenderingQualityResponsive' value64='1'/>
<enum name='NSPrintScreenFunctionKey' value64='63278'/>
<enum name='NSPrinterTableError' value64='2'/>
<enum name='NSPrinterTableNotFound' value64='1'/>
<enum name='NSPrinterTableOK' value64='0'/>
<enum name='NSPrintingCancelled' value64='0'/>
<enum name='NSPrintingFailure' value64='3'/>
<enum name='NSPrintingPaginationModeAutomatic' value64='0'/>
<enum name='NSPrintingPaginationModeClip' value64='2'/>
<enum name='NSPrintingPaginationModeFit' value64='1'/>
<enum name='NSPrintingReplyLater' value64='2'/>
<enum name='NSPrintingSuccess' value64='1'/>
<enum name='NSProgressIndicatorPreferredAquaThickness' value64='12'/>
<enum name='NSProgressIndicatorPreferredLargeThickness' value64='18'/>
<enum name='NSProgressIndicatorPreferredSmallThickness' value64='10'/>
<enum name='NSProgressIndicatorPreferredThickness' value64='14'/>
<enum name='NSProgressIndicatorStyleBar' value64='0'/>
<enum name='NSProgressIndicatorStyleSpinning' value64='1'/>
<enum name='NSPushInCell' value64='2'/>
<enum name='NSPushInCellMask' value64='2'/>
<enum name='NSRadioModeMatrix' value64='0'/>
<enum name='NSRectAlignmentBottom' value64='5'/>
<enum name='NSRectAlignmentBottomLeading' value64='4'/>
<enum name='NSRectAlignmentBottomTrailing' value64='6'/>
<enum name='NSRectAlignmentLeading' value64='3'/>
<enum name='NSRectAlignmentNone' value64='0'/>
<enum name='NSRectAlignmentTop' value64='1'/>
<enum name='NSRectAlignmentTopLeading' value64='2'/>
<enum name='NSRectAlignmentTopTrailing' value64='8'/>
<enum name='NSRectAlignmentTrailing' value64='7'/>
<enum name='NSRedoFunctionKey' value64='63300'/>
<enum name='NSRemoteNotificationTypeAlert' value64='4'/>
<enum name='NSRemoteNotificationTypeBadge' value64='1'/>
<enum name='NSRemoteNotificationTypeNone' value64='0'/>
<enum name='NSRemoteNotificationTypeSound' value64='2'/>
<enum name='NSRemoveTraitFontAction' value64='7'/>
<enum name='NSResetCursorRectsRunLoopOrdering' value64='700000'/>
<enum name='NSResetFunctionKey' value64='63283'/>
<enum name='NSReturnTextMovement' value64='16'/>
<enum name='NSRightArrowFunctionKey' value64='63235'/>
<enum name='NSRightTabStopType' value64='1'/>
<enum name='NSRightTabsBezelBorder' value64='3'/>
<enum name='NSRightTextMovement' value64='20'/>
<enum name='NSRuleEditorNestingModeCompound' value64='2'/>
<enum name='NSRuleEditorNestingModeList' value64='1'/>
<enum name='NSRuleEditorNestingModeSimple' value64='3'/>
<enum name='NSRuleEditorNestingModeSingle' value64='0'/>
<enum name='NSRuleEditorRowTypeCompound' value64='1'/>
<enum name='NSRuleEditorRowTypeSimple' value64='0'/>
<enum name='NSRunAbortedResponse' value64='-1001'/>
<enum name='NSRunContinuesResponse' value64='-1002'/>
<enum name='NSRunStoppedResponse' value64='-1000'/>
<enum name='NSSaveAsOperation' value64='1'/>
<enum name='NSSaveOperation' value64='0'/>
<enum name='NSSaveToOperation' value64='2'/>
<enum name='NSScaleNone' value64='2'/>
<enum name='NSScaleProportionally' value64='0'/>
<enum name='NSScaleToFit' value64='1'/>
<enum name='NSScrollElasticityAllowed' value64='2'/>
<enum name='NSScrollElasticityAutomatic' value64='0'/>
<enum name='NSScrollElasticityNone' value64='1'/>
<enum name='NSScrollLockFunctionKey' value64='63279'/>
<enum name='NSScrollViewFindBarPositionAboveContent' value64='1'/>
<enum name='NSScrollViewFindBarPositionAboveHorizontalRuler' value64='0'/>
<enum name='NSScrollViewFindBarPositionBelowContent' value64='2'/>
<enum name='NSScrollerArrowsDefaultSetting' value64='0'/>
<enum name='NSScrollerArrowsMaxEnd' value64='0'/>
<enum name='NSScrollerArrowsMinEnd' value64='1'/>
<enum name='NSScrollerArrowsNone' value64='2'/>
<enum name='NSScrollerDecrementArrow' value64='1'/>
<enum name='NSScrollerDecrementLine' value64='4'/>
<enum name='NSScrollerDecrementPage' value64='1'/>
<enum name='NSScrollerIncrementArrow' value64='0'/>
<enum name='NSScrollerIncrementLine' value64='5'/>
<enum name='NSScrollerIncrementPage' value64='3'/>
<enum name='NSScrollerKnob' value64='2'/>
<enum name='NSScrollerKnobSlot' value64='6'/>
<enum name='NSScrollerKnobStyleDark' value64='1'/>
<enum name='NSScrollerKnobStyleDefault' value64='0'/>
<enum name='NSScrollerKnobStyleLight' value64='2'/>
<enum name='NSScrollerNoPart' value64='0'/>
<enum name='NSScrollerStyleLegacy' value64='0'/>
<enum name='NSScrollerStyleOverlay' value64='1'/>
<enum name='NSScrubberAlignmentCenter' value64='3'/>
<enum name='NSScrubberAlignmentLeading' value64='1'/>
<enum name='NSScrubberAlignmentNone' value64='0'/>
<enum name='NSScrubberAlignmentTrailing' value64='2'/>
<enum name='NSScrubberModeFixed' value64='0'/>
<enum name='NSScrubberModeFree' value64='1'/>
<enum name='NSSegmentDistributionFill' value64='1'/>
<enum name='NSSegmentDistributionFillEqually' value64='2'/>
<enum name='NSSegmentDistributionFillProportionally' value64='3'/>
<enum name='NSSegmentDistributionFit' value64='0'/>
<enum name='NSSegmentStyleAutomatic' value64='0'/>
<enum name='NSSegmentStyleCapsule' value64='5'/>
<enum name='NSSegmentStyleRoundRect' value64='3'/>
<enum name='NSSegmentStyleRounded' value64='1'/>
<enum name='NSSegmentStyleSeparated' value64='8'/>
<enum name='NSSegmentStyleSmallSquare' value64='6'/>
<enum name='NSSegmentStyleTexturedRounded' value64='2'/>
<enum name='NSSegmentStyleTexturedSquare' value64='4'/>
<enum name='NSSegmentSwitchTrackingMomentary' value64='2'/>
<enum name='NSSegmentSwitchTrackingMomentaryAccelerator' value64='3'/>
<enum name='NSSegmentSwitchTrackingSelectAny' value64='1'/>
<enum name='NSSegmentSwitchTrackingSelectOne' value64='0'/>
<enum name='NSSelectByCharacter' value64='0'/>
<enum name='NSSelectByParagraph' value64='2'/>
<enum name='NSSelectByWord' value64='1'/>
<enum name='NSSelectFunctionKey' value64='63297'/>
<enum name='NSSelectedTab' value64='0'/>
<enum name='NSSelectingNext' value64='1'/>
<enum name='NSSelectingPrevious' value64='2'/>
<enum name='NSSelectionAffinityDownstream' value64='1'/>
<enum name='NSSelectionAffinityUpstream' value64='0'/>
<enum name='NSServiceApplicationLaunchFailedError' value64='66561'/>
<enum name='NSServiceApplicationNotFoundError' value64='66560'/>
<enum name='NSServiceErrorMaximum' value64='66817'/>
<enum name='NSServiceErrorMinimum' value64='66560'/>
<enum name='NSServiceInvalidPasteboardDataError' value64='66563'/>
<enum name='NSServiceMalformedServiceDictionaryError' value64='66564'/>
<enum name='NSServiceMiscellaneousError' value64='66800'/>
<enum name='NSServiceRequestTimedOutError' value64='66562'/>
<enum name='NSSharingContentScopeFull' value64='2'/>
<enum name='NSSharingContentScopeItem' value64='0'/>
<enum name='NSSharingContentScopePartial' value64='1'/>
<enum name='NSSharingServiceErrorMaximum' value64='67327'/>
<enum name='NSSharingServiceErrorMinimum' value64='67072'/>
<enum name='NSSharingServiceNotConfiguredError' value64='67072'/>
<enum name='NSShowControlGlyphs' value64='1'/>
<enum name='NSShowInvisibleGlyphs' value64='2'/>
<enum name='NSSingleUnderlineStyle' value64='1'/>
<enum name='NSSizeDownFontAction' value64='4'/>
<enum name='NSSizeUpFontAction' value64='3'/>
<enum name='NSSliderTypeCircular' value64='1'/>
<enum name='NSSliderTypeLinear' value64='0'/>
<enum name='NSSmallCapsFontMask' value64='128'/>
<enum name='NSSpecialPageOrder' value64='0'/>
<enum name='NSSpeechImmediateBoundary' value64='0'/>
<enum name='NSSpeechSentenceBoundary' value64='2'/>
<enum name='NSSpeechWordBoundary' value64='1'/>
<enum name='NSSpellingStateGrammarFlag' value64='2'/>
<enum name='NSSpellingStateSpellingFlag' value64='1'/>
<enum name='NSSplitViewDividerStylePaneSplitter' value64='3'/>
<enum name='NSSplitViewDividerStyleThick' value64='1'/>
<enum name='NSSplitViewDividerStyleThin' value64='2'/>
<enum name='NSSplitViewItemBehaviorContentList' value64='2'/>
<enum name='NSSplitViewItemBehaviorDefault' value64='0'/>
<enum name='NSSplitViewItemBehaviorSidebar' value64='1'/>
<enum name='NSSplitViewItemCollapseBehaviorDefault' value64='0'/>
<enum name='NSSplitViewItemCollapseBehaviorPreferResizingSiblingsWithFixedSplitView' value64='2'/>
<enum name='NSSplitViewItemCollapseBehaviorPreferResizingSplitViewWithFixedSiblings' value64='1'/>
<enum name='NSSplitViewItemCollapseBehaviorUseConstraints' value64='3'/>
<enum name='NSSpringLoadingContinuousActivation' value64='2'/>
<enum name='NSSpringLoadingDisabled' value64='0'/>
<enum name='NSSpringLoadingEnabled' value64='1'/>
<enum name='NSSpringLoadingHighlightEmphasized' value64='2'/>
<enum name='NSSpringLoadingHighlightNone' value64='0'/>
<enum name='NSSpringLoadingHighlightStandard' value64='1'/>
<enum name='NSSpringLoadingNoHover' value64='8'/>
<enum name='NSStackViewDistributionEqualCentering' value64='4'/>
<enum name='NSStackViewDistributionEqualSpacing' value64='3'/>
<enum name='NSStackViewDistributionFill' value64='0'/>
<enum name='NSStackViewDistributionFillEqually' value64='1'/>
<enum name='NSStackViewDistributionFillProportionally' value64='2'/>
<enum name='NSStackViewDistributionGravityAreas' value64='-1'/>
<enum name='NSStackViewGravityBottom' value64='3'/>
<enum name='NSStackViewGravityCenter' value64='2'/>
<enum name='NSStackViewGravityLeading' value64='1'/>
<enum name='NSStackViewGravityTop' value64='1'/>
<enum name='NSStackViewGravityTrailing' value64='3'/>
<enum name='NSStatusItemBehaviorRemovalAllowed' value64='2'/>
<enum name='NSStatusItemBehaviorTerminationOnRemoval' value64='4'/>
<enum name='NSStopFunctionKey' value64='63284'/>
<enum name='NSStringDrawingDisableScreenFontSubstitution' value64='4'/>
<enum name='NSStringDrawingOneShot' value64='16'/>
<enum name='NSStringDrawingTruncatesLastVisibleLine' value64='32'/>
<enum name='NSStringDrawingUsesDeviceMetrics' value64='8'/>
<enum name='NSStringDrawingUsesFontLeading' value64='2'/>
<enum name='NSStringDrawingUsesLineFragmentOrigin' value64='1'/>
<enum name='NSSysReqFunctionKey' value64='63281'/>
<enum name='NSSystemFunctionKey' value64='63287'/>
<enum name='NSTIFFCompressionCCITTFAX3' value64='3'/>
<enum name='NSTIFFCompressionCCITTFAX4' value64='4'/>
<enum name='NSTIFFCompressionJPEG' value64='6'/>
<enum name='NSTIFFCompressionLZW' value64='5'/>
<enum name='NSTIFFCompressionNEXT' value64='32766'/>
<enum name='NSTIFFCompressionNone' value64='1'/>
<enum name='NSTIFFCompressionOldJPEG' value64='32865'/>
<enum name='NSTIFFCompressionPackBits' value64='32773'/>
<enum name='NSTabCharacter' value64='9'/>
<enum name='NSTabPositionBottom' value64='3'/>
<enum name='NSTabPositionLeft' value64='2'/>
<enum name='NSTabPositionNone' value64='0'/>
<enum name='NSTabPositionRight' value64='4'/>
<enum name='NSTabPositionTop' value64='1'/>
<enum name='NSTabTextMovement' value64='17'/>
<enum name='NSTabViewBorderTypeBezel' value64='2'/>
<enum name='NSTabViewBorderTypeLine' value64='1'/>
<enum name='NSTabViewBorderTypeNone' value64='0'/>
<enum name='NSTabViewControllerTabStyleSegmentedControlOnBottom' value64='1'/>
<enum name='NSTabViewControllerTabStyleSegmentedControlOnTop' value64='0'/>
<enum name='NSTabViewControllerTabStyleToolbar' value64='2'/>
<enum name='NSTabViewControllerTabStyleUnspecified' value64='-1'/>
<enum name='NSTableColumnAutoresizingMask' value64='1'/>
<enum name='NSTableColumnNoResizing' value64='0'/>
<enum name='NSTableColumnUserResizingMask' value64='2'/>
<enum name='NSTableRowActionEdgeLeading' value64='0'/>
<enum name='NSTableRowActionEdgeTrailing' value64='1'/>
<enum name='NSTableViewAnimationEffectFade' value64='1'/>
<enum name='NSTableViewAnimationEffectGap' value64='2'/>
<enum name='NSTableViewAnimationEffectNone' value64='0'/>
<enum name='NSTableViewAnimationSlideDown' value64='32'/>
<enum name='NSTableViewAnimationSlideLeft' value64='48'/>
<enum name='NSTableViewAnimationSlideRight' value64='64'/>
<enum name='NSTableViewAnimationSlideUp' value64='16'/>
<enum name='NSTableViewDashedHorizontalGridLineMask' value64='8'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleGap' value64='2'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleNone' value64='-1'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleRegular' value64='0'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleSourceList' value64='1'/>
<enum name='NSTableViewDropAbove' value64='1'/>
<enum name='NSTableViewDropOn' value64='0'/>
<enum name='NSTableViewFirstColumnOnlyAutoresizingStyle' value64='5'/>
<enum name='NSTableViewGridNone' value64='0'/>
<enum name='NSTableViewLastColumnOnlyAutoresizingStyle' value64='4'/>
<enum name='NSTableViewNoColumnAutoresizing' value64='0'/>
<enum name='NSTableViewReverseSequentialColumnAutoresizingStyle' value64='3'/>
<enum name='NSTableViewRowActionStyleDestructive' value64='1'/>
<enum name='NSTableViewRowActionStyleRegular' value64='0'/>
<enum name='NSTableViewRowSizeStyleCustom' value64='0'/>
<enum name='NSTableViewRowSizeStyleDefault' value64='-1'/>
<enum name='NSTableViewRowSizeStyleLarge' value64='3'/>
<enum name='NSTableViewRowSizeStyleMedium' value64='2'/>
<enum name='NSTableViewRowSizeStyleSmall' value64='1'/>
<enum name='NSTableViewSelectionHighlightStyleNone' value64='-1'/>
<enum name='NSTableViewSelectionHighlightStyleRegular' value64='0'/>
<enum name='NSTableViewSelectionHighlightStyleSourceList' value64='1'/>
<enum name='NSTableViewSequentialColumnAutoresizingStyle' value64='2'/>
<enum name='NSTableViewSolidHorizontalGridLineMask' value64='2'/>
<enum name='NSTableViewSolidVerticalGridLineMask' value64='1'/>
<enum name='NSTableViewStyleAutomatic' value64='0'/>
<enum name='NSTableViewStyleFullWidth' value64='1'/>
<enum name='NSTableViewStyleInset' value64='2'/>
<enum name='NSTableViewStylePlain' value64='4'/>
<enum name='NSTableViewStyleSourceList' value64='3'/>
<enum name='NSTableViewUniformColumnAutoresizingStyle' value64='1'/>
<enum name='NSTerminateCancel' value64='0'/>
<enum name='NSTerminateLater' value64='2'/>
<enum name='NSTerminateNow' value64='1'/>
<enum name='NSTextAlignmentCenter' value64='2'/>
<enum name='NSTextAlignmentJustified' value64='3'/>
<enum name='NSTextAlignmentLeft' value64='0'/>
<enum name='NSTextAlignmentNatural' value64='4'/>
<enum name='NSTextAlignmentRight' value64='1'/>
<enum name='NSTextBlockAbsoluteValueType' value64='0'/>
<enum name='NSTextBlockBaselineAlignment' value64='3'/>
<enum name='NSTextBlockBorder' value64='0'/>
<enum name='NSTextBlockBottomAlignment' value64='2'/>
<enum name='NSTextBlockHeight' value64='4'/>
<enum name='NSTextBlockMargin' value64='1'/>
<enum name='NSTextBlockMaximumHeight' value64='6'/>
<enum name='NSTextBlockMaximumWidth' value64='2'/>
<enum name='NSTextBlockMiddleAlignment' value64='1'/>
<enum name='NSTextBlockMinimumHeight' value64='5'/>
<enum name='NSTextBlockMinimumWidth' value64='1'/>
<enum name='NSTextBlockPadding' value64='-1'/>
<enum name='NSTextBlockPercentageValueType' value64='1'/>
<enum name='NSTextBlockTopAlignment' value64='0'/>
<enum name='NSTextBlockWidth' value64='0'/>
<enum name='NSTextCellType' value64='1'/>
<enum name='NSTextFieldRoundedBezel' value64='1'/>
<enum name='NSTextFieldSquareBezel' value64='0'/>
<enum name='NSTextFinderActionHideFindInterface' value64='11'/>
<enum name='NSTextFinderActionHideReplaceInterface' value64='13'/>
<enum name='NSTextFinderActionNextMatch' value64='2'/>
<enum name='NSTextFinderActionPreviousMatch' value64='3'/>
<enum name='NSTextFinderActionReplace' value64='5'/>
<enum name='NSTextFinderActionReplaceAll' value64='4'/>
<enum name='NSTextFinderActionReplaceAllInSelection' value64='8'/>
<enum name='NSTextFinderActionReplaceAndFind' value64='6'/>
<enum name='NSTextFinderActionSelectAll' value64='9'/>
<enum name='NSTextFinderActionSelectAllInSelection' value64='10'/>
<enum name='NSTextFinderActionSetSearchString' value64='7'/>
<enum name='NSTextFinderActionShowFindInterface' value64='1'/>
<enum name='NSTextFinderActionShowReplaceInterface' value64='12'/>
<enum name='NSTextFinderMatchingTypeContains' value64='0'/>
<enum name='NSTextFinderMatchingTypeEndsWith' value64='3'/>
<enum name='NSTextFinderMatchingTypeFullWord' value64='2'/>
<enum name='NSTextFinderMatchingTypeStartsWith' value64='1'/>
<enum name='NSTextInputTraitTypeDefault' value64='0'/>
<enum name='NSTextInputTraitTypeNo' value64='1'/>
<enum name='NSTextInputTraitTypeYes' value64='2'/>
<enum name='NSTextLayoutOrientationHorizontal' value64='0'/>
<enum name='NSTextLayoutOrientationVertical' value64='1'/>
<enum name='NSTextListPrependEnclosingMarker' value64='1'/>
<enum name='NSTextMovementBacktab' value64='18'/>
<enum name='NSTextMovementCancel' value64='23'/>
<enum name='NSTextMovementDown' value64='22'/>
<enum name='NSTextMovementLeft' value64='19'/>
<enum name='NSTextMovementOther' value64='0'/>
<enum name='NSTextMovementReturn' value64='16'/>
<enum name='NSTextMovementRight' value64='20'/>
<enum name='NSTextMovementTab' value64='17'/>
<enum name='NSTextMovementUp' value64='21'/>
<enum name='NSTextReadInapplicableDocumentTypeError' value64='65806'/>
<enum name='NSTextReadWriteErrorMaximum' value64='66303'/>
<enum name='NSTextReadWriteErrorMinimum' value64='65792'/>
<enum name='NSTextScalingStandard' value64='0'/>
<enum name='NSTextScalingiOS' value64='1'/>
<enum name='NSTextStorageEditedAttributes' value64='1'/>
<enum name='NSTextStorageEditedCharacters' value64='2'/>
<enum name='NSTextTableAutomaticLayoutAlgorithm' value64='0'/>
<enum name='NSTextTableFixedLayoutAlgorithm' value64='1'/>
<enum name='NSTextWriteInapplicableDocumentTypeError' value64='66062'/>
<enum name='NSTextWritingDirectionEmbedding' value64='0'/>
<enum name='NSTextWritingDirectionOverride' value64='2'/>
<enum name='NSTickMarkPositionAbove' value64='1'/>
<enum name='NSTickMarkPositionBelow' value64='0'/>
<enum name='NSTickMarkPositionLeading' value64='1'/>
<enum name='NSTickMarkPositionTrailing' value64='0'/>
<enum name='NSTitlebarSeparatorStyleAutomatic' value64='0'/>
<enum name='NSTitlebarSeparatorStyleLine' value64='2'/>
<enum name='NSTitlebarSeparatorStyleNone' value64='1'/>
<enum name='NSTitlebarSeparatorStyleShadow' value64='3'/>
<enum name='NSTokenStyleDefault' value64='0'/>
<enum name='NSTokenStyleNone' value64='1'/>
<enum name='NSTokenStylePlainSquared' value64='4'/>
<enum name='NSTokenStyleRounded' value64='2'/>
<enum name='NSTokenStyleSquared' value64='3'/>
<enum name='NSToolbarDisplayModeDefault' value64='0'/>
<enum name='NSToolbarDisplayModeIconAndLabel' value64='1'/>
<enum name='NSToolbarDisplayModeIconOnly' value64='2'/>
<enum name='NSToolbarDisplayModeLabelOnly' value64='3'/>
<enum name='NSToolbarItemGroupControlRepresentationAutomatic' value64='0'/>
<enum name='NSToolbarItemGroupControlRepresentationCollapsed' value64='2'/>
<enum name='NSToolbarItemGroupControlRepresentationExpanded' value64='1'/>
<enum name='NSToolbarItemGroupSelectionModeMomentary' value64='2'/>
<enum name='NSToolbarItemGroupSelectionModeSelectAny' value64='1'/>
<enum name='NSToolbarItemGroupSelectionModeSelectOne' value64='0'/>
<enum name='NSToolbarSizeModeDefault' value64='0'/>
<enum name='NSToolbarSizeModeRegular' value64='1'/>
<enum name='NSToolbarSizeModeSmall' value64='2'/>
<enum name='NSTopTabsBezelBorder' value64='0'/>
<enum name='NSTouchPhaseAny' value64='18446744073709551615'/>
<enum name='NSTouchPhaseBegan' value64='1'/>
<enum name='NSTouchPhaseCancelled' value64='16'/>
<enum name='NSTouchPhaseEnded' value64='8'/>
<enum name='NSTouchPhaseMoved' value64='2'/>
<enum name='NSTouchPhaseStationary' value64='4'/>
<enum name='NSTouchPhaseTouching' value64='7'/>
<enum name='NSTouchTypeDirect' value64='0'/>
<enum name='NSTouchTypeIndirect' value64='1'/>
<enum name='NSTouchTypeMaskDirect' value64='1'/>
<enum name='NSTouchTypeMaskIndirect' value64='2'/>
<enum name='NSTrackModeMatrix' value64='3'/>
<enum name='NSTrackingActiveAlways' value64='128'/>
<enum name='NSTrackingActiveInActiveApp' value64='64'/>
<enum name='NSTrackingActiveInKeyWindow' value64='32'/>
<enum name='NSTrackingActiveWhenFirstResponder' value64='16'/>
<enum name='NSTrackingAssumeInside' value64='256'/>
<enum name='NSTrackingCursorUpdate' value64='4'/>
<enum name='NSTrackingEnabledDuringMouseDrag' value64='1024'/>
<enum name='NSTrackingInVisibleRect' value64='512'/>
<enum name='NSTrackingMouseEnteredAndExited' value64='1'/>
<enum name='NSTrackingMouseMoved' value64='2'/>
<enum name='NSTypesetterBehavior_10_2' value64='2'/>
<enum name='NSTypesetterBehavior_10_2_WithCompatibility' value64='1'/>
<enum name='NSTypesetterBehavior_10_3' value64='3'/>
<enum name='NSTypesetterBehavior_10_4' value64='4'/>
<enum name='NSTypesetterContainerBreakAction' value64='32'/>
<enum name='NSTypesetterHorizontalTabAction' value64='4'/>
<enum name='NSTypesetterLatestBehavior' value64='-1'/>
<enum name='NSTypesetterLineBreakAction' value64='8'/>
<enum name='NSTypesetterOriginalBehavior' value64='0'/>
<enum name='NSTypesetterParagraphBreakAction' value64='16'/>
<enum name='NSTypesetterWhitespaceAction' value64='2'/>
<enum name='NSTypesetterZeroAdvancementAction' value64='1'/>
<enum name='NSUnboldFontMask' value64='4'/>
<enum name='NSUnderlineStyleByWord' value64='32768'/>
<enum name='NSUnderlineStyleDouble' value64='9'/>
<enum name='NSUnderlineStyleNone' value64='0'/>
<enum name='NSUnderlineStylePatternDash' value64='512'/>
<enum name='NSUnderlineStylePatternDashDot' value64='768'/>
<enum name='NSUnderlineStylePatternDashDotDot' value64='1024'/>
<enum name='NSUnderlineStylePatternDot' value64='256'/>
<enum name='NSUnderlineStylePatternSolid' value64='0'/>
<enum name='NSUnderlineStyleSingle' value64='1'/>
<enum name='NSUnderlineStyleThick' value64='2'/>
<enum name='NSUndoFunctionKey' value64='63299'/>
<enum name='NSUnitalicFontMask' value64='16777216'/>
<enum name='NSUnknownPageOrder' value64='2'/>
<enum name='NSUpArrowFunctionKey' value64='63232'/>
<enum name='NSUpTextMovement' value64='21'/>
<enum name='NSUpdateWindowsRunLoopOrdering' value64='500000'/>
<enum name='NSUserFunctionKey' value64='63286'/>
<enum name='NSUserInterfaceLayoutDirectionLeftToRight' value64='0'/>
<enum name='NSUserInterfaceLayoutDirectionRightToLeft' value64='1'/>
<enum name='NSUserInterfaceLayoutOrientationHorizontal' value64='0'/>
<enum name='NSUserInterfaceLayoutOrientationVertical' value64='1'/>
<enum name='NSVerticalRuler' value64='1'/>
<enum name='NSViaPanelFontAction' value64='1'/>
<enum name='NSViewControllerTransitionAllowUserInteraction' value64='4096'/>
<enum name='NSViewControllerTransitionCrossfade' value64='1'/>
<enum name='NSViewControllerTransitionNone' value64='0'/>
<enum name='NSViewControllerTransitionSlideBackward' value64='384'/>
<enum name='NSViewControllerTransitionSlideDown' value64='32'/>
<enum name='NSViewControllerTransitionSlideForward' value64='320'/>
<enum name='NSViewControllerTransitionSlideLeft' value64='64'/>
<enum name='NSViewControllerTransitionSlideRight' value64='128'/>
<enum name='NSViewControllerTransitionSlideUp' value64='16'/>
<enum name='NSViewHeightSizable' value64='16'/>
<enum name='NSViewLayerContentsPlacementBottom' value64='8'/>
<enum name='NSViewLayerContentsPlacementBottomLeft' value64='9'/>
<enum name='NSViewLayerContentsPlacementBottomRight' value64='7'/>
<enum name='NSViewLayerContentsPlacementCenter' value64='3'/>
<enum name='NSViewLayerContentsPlacementLeft' value64='10'/>
<enum name='NSViewLayerContentsPlacementRight' value64='6'/>
<enum name='NSViewLayerContentsPlacementScaleAxesIndependently' value64='0'/>
<enum name='NSViewLayerContentsPlacementScaleProportionallyToFill' value64='2'/>
<enum name='NSViewLayerContentsPlacementScaleProportionallyToFit' value64='1'/>
<enum name='NSViewLayerContentsPlacementTop' value64='4'/>
<enum name='NSViewLayerContentsPlacementTopLeft' value64='11'/>
<enum name='NSViewLayerContentsPlacementTopRight' value64='5'/>
<enum name='NSViewLayerContentsRedrawBeforeViewResize' value64='3'/>
<enum name='NSViewLayerContentsRedrawCrossfade' value64='4'/>
<enum name='NSViewLayerContentsRedrawDuringViewResize' value64='2'/>
<enum name='NSViewLayerContentsRedrawNever' value64='0'/>
<enum name='NSViewLayerContentsRedrawOnSetNeedsDisplay' value64='1'/>
<enum name='NSViewMaxXMargin' value64='4'/>
<enum name='NSViewMaxYMargin' value64='32'/>
<enum name='NSViewMinXMargin' value64='1'/>
<enum name='NSViewMinYMargin' value64='8'/>
<enum name='NSViewNotSizable' value64='0'/>
<enum name='NSViewWidthSizable' value64='2'/>
<enum name='NSVisualEffectBlendingModeBehindWindow' value64='0'/>
<enum name='NSVisualEffectBlendingModeWithinWindow' value64='1'/>
<enum name='NSVisualEffectMaterialAppearanceBased' value64='0'/>
<enum name='NSVisualEffectMaterialContentBackground' value64='18'/>
<enum name='NSVisualEffectMaterialDark' value64='2'/>
<enum name='NSVisualEffectMaterialFullScreenUI' value64='15'/>
<enum name='NSVisualEffectMaterialHUDWindow' value64='13'/>
<enum name='NSVisualEffectMaterialHeaderView' value64='10'/>
<enum name='NSVisualEffectMaterialLight' value64='1'/>
<enum name='NSVisualEffectMaterialMediumLight' value64='8'/>
<enum name='NSVisualEffectMaterialMenu' value64='5'/>
<enum name='NSVisualEffectMaterialPopover' value64='6'/>
<enum name='NSVisualEffectMaterialSelection' value64='4'/>
<enum name='NSVisualEffectMaterialSheet' value64='11'/>
<enum name='NSVisualEffectMaterialSidebar' value64='7'/>
<enum name='NSVisualEffectMaterialTitlebar' value64='3'/>
<enum name='NSVisualEffectMaterialToolTip' value64='17'/>
<enum name='NSVisualEffectMaterialUltraDark' value64='9'/>
<enum name='NSVisualEffectMaterialUnderPageBackground' value64='22'/>
<enum name='NSVisualEffectMaterialUnderWindowBackground' value64='21'/>
<enum name='NSVisualEffectMaterialWindowBackground' value64='12'/>
<enum name='NSVisualEffectStateActive' value64='1'/>
<enum name='NSVisualEffectStateFollowsWindowActiveState' value64='0'/>
<enum name='NSVisualEffectStateInactive' value64='2'/>
<enum name='NSWantsBidiLevels' value64='4'/>
<enum name='NSWindingRuleEvenOdd' value64='1'/>
<enum name='NSWindingRuleNonZero' value64='0'/>
<enum name='NSWindowAbove' value64='1'/>
<enum name='NSWindowAnimationBehaviorAlertPanel' value64='5'/>
<enum name='NSWindowAnimationBehaviorDefault' value64='0'/>
<enum name='NSWindowAnimationBehaviorDocumentWindow' value64='3'/>
<enum name='NSWindowAnimationBehaviorNone' value64='2'/>
<enum name='NSWindowAnimationBehaviorUtilityWindow' value64='4'/>
<enum name='NSWindowBackingLocationDefault' value64='0'/>
<enum name='NSWindowBackingLocationMainMemory' value64='2'/>
<enum name='NSWindowBackingLocationVideoMemory' value64='1'/>
<enum name='NSWindowBelow' value64='-1'/>
<enum name='NSWindowCloseButton' value64='0'/>
<enum name='NSWindowCollectionBehaviorCanJoinAllSpaces' value64='1'/>
<enum name='NSWindowCollectionBehaviorDefault' value64='0'/>
<enum name='NSWindowCollectionBehaviorFullScreenAllowsTiling' value64='2048'/>
<enum name='NSWindowCollectionBehaviorFullScreenAuxiliary' value64='256'/>
<enum name='NSWindowCollectionBehaviorFullScreenDisallowsTiling' value64='4096'/>
<enum name='NSWindowCollectionBehaviorFullScreenNone' value64='512'/>
<enum name='NSWindowCollectionBehaviorFullScreenPrimary' value64='128'/>
<enum name='NSWindowCollectionBehaviorIgnoresCycle' value64='64'/>
<enum name='NSWindowCollectionBehaviorManaged' value64='4'/>
<enum name='NSWindowCollectionBehaviorMoveToActiveSpace' value64='2'/>
<enum name='NSWindowCollectionBehaviorParticipatesInCycle' value64='32'/>
<enum name='NSWindowCollectionBehaviorStationary' value64='16'/>
<enum name='NSWindowCollectionBehaviorTransient' value64='8'/>
<enum name='NSWindowDepthOnehundredtwentyeightBitRGB' value64='544'/>
<enum name='NSWindowDepthSixtyfourBitRGB' value64='528'/>
<enum name='NSWindowDepthTwentyfourBitRGB' value64='520'/>
<enum name='NSWindowDocumentIconButton' value64='4'/>
<enum name='NSWindowDocumentVersionsButton' value64='6'/>
<enum name='NSWindowListOrderedFrontToBack' value64='1'/>
<enum name='NSWindowMiniaturizeButton' value64='1'/>
<enum name='NSWindowNumberListAllApplications' value64='1'/>
<enum name='NSWindowNumberListAllSpaces' value64='16'/>
<enum name='NSWindowOcclusionStateVisible' value64='2'/>
<enum name='NSWindowOut' value64='0'/>
<enum name='NSWindowSharingNone' value64='0'/>
<enum name='NSWindowSharingReadOnly' value64='1'/>
<enum name='NSWindowSharingReadWrite' value64='2'/>
<enum name='NSWindowStyleMaskBorderless' value64='0'/>
<enum name='NSWindowStyleMaskClosable' value64='2'/>
<enum name='NSWindowStyleMaskDocModalWindow' value64='64'/>
<enum name='NSWindowStyleMaskFullScreen' value64='16384'/>
<enum name='NSWindowStyleMaskFullSizeContentView' value64='32768'/>
<enum name='NSWindowStyleMaskHUDWindow' value64='8192'/>
<enum name='NSWindowStyleMaskMiniaturizable' value64='4'/>
<enum name='NSWindowStyleMaskNonactivatingPanel' value64='128'/>
<enum name='NSWindowStyleMaskResizable' value64='8'/>
<enum name='NSWindowStyleMaskTexturedBackground' value64='256'/>
<enum name='NSWindowStyleMaskTitled' value64='1'/>
<enum name='NSWindowStyleMaskUnifiedTitleAndToolbar' value64='4096'/>
<enum name='NSWindowStyleMaskUtilityWindow' value64='16'/>
<enum name='NSWindowTabbingModeAutomatic' value64='0'/>
<enum name='NSWindowTabbingModeDisallowed' value64='2'/>
<enum name='NSWindowTabbingModePreferred' value64='1'/>
<enum name='NSWindowTitleHidden' value64='1'/>
<enum name='NSWindowTitleVisible' value64='0'/>
<enum name='NSWindowToolbarButton' value64='3'/>
<enum name='NSWindowToolbarStyleAutomatic' value64='0'/>
<enum name='NSWindowToolbarStyleExpanded' value64='1'/>
<enum name='NSWindowToolbarStylePreference' value64='2'/>
<enum name='NSWindowToolbarStyleUnified' value64='3'/>
<enum name='NSWindowToolbarStyleUnifiedCompact' value64='4'/>
<enum name='NSWindowUserTabbingPreferenceAlways' value64='1'/>
<enum name='NSWindowUserTabbingPreferenceInFullScreen' value64='2'/>
<enum name='NSWindowUserTabbingPreferenceManual' value64='0'/>
<enum name='NSWindowZoomButton' value64='2'/>
<enum name='NSWindows95InterfaceStyle' value64='2'/>
<enum name='NSWorkspaceAuthorizationInvalidError' value64='67328'/>
<enum name='NSWorkspaceAuthorizationTypeCreateSymbolicLink' value64='0'/>
<enum name='NSWorkspaceAuthorizationTypeReplaceFile' value64='2'/>
<enum name='NSWorkspaceAuthorizationTypeSetAttributes' value64='1'/>
<enum name='NSWorkspaceErrorMaximum' value64='67455'/>
<enum name='NSWorkspaceErrorMinimum' value64='67328'/>
<enum name='NSWorkspaceLaunchAllowingClassicStartup' value64='131072'/>
<enum name='NSWorkspaceLaunchAndHide' value64='1048576'/>
<enum name='NSWorkspaceLaunchAndHideOthers' value64='2097152'/>
<enum name='NSWorkspaceLaunchAndPrint' value64='2'/>
<enum name='NSWorkspaceLaunchAsync' value64='65536'/>
<enum name='NSWorkspaceLaunchDefault' value64='65536'/>
<enum name='NSWorkspaceLaunchInhibitingBackgroundOnly' value64='128'/>
<enum name='NSWorkspaceLaunchNewInstance' value64='524288'/>
<enum name='NSWorkspaceLaunchPreferringClassic' value64='262144'/>
<enum name='NSWorkspaceLaunchWithErrorPresentation' value64='64'/>
<enum name='NSWorkspaceLaunchWithoutActivation' value64='512'/>
<enum name='NSWorkspaceLaunchWithoutAddingToRecents' value64='256'/>
<enum name='NSWritingDirectionEmbedding' value64='0'/>
<enum name='NSWritingDirectionLeftToRight' value64='0'/>
<enum name='NSWritingDirectionNatural' value64='-1'/>
<enum name='NSWritingDirectionOverride' value64='2'/>
<enum name='NSWritingDirectionRightToLeft' value64='1'/>
<enum name='NS_USER_ACTIVITY_SUPPORTED' value64='1'/>
<function name='NSAccessibilityActionDescription'>
<arg declared_type64='NSAccessibilityActionName _Nonnull' name='action' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</function>
<function name='NSAccessibilityFrameInView'>
<arg declared_type64='NSView * _Nonnull' name='parentView' type64='@'/>
<arg declared_type64='NSRect' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSAccessibilityPointInView'>
<arg declared_type64='NSView * _Nonnull' name='parentView' type64='@'/>
<arg declared_type64='NSPoint' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</function>
<function name='NSAccessibilityPostNotification'>
<arg declared_type64='id _Nonnull' name='element' type64='@'/>
<arg declared_type64='NSAccessibilityNotificationName _Nonnull' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSAccessibilityPostNotificationWithUserInfo'>
<arg declared_type64='id _Nonnull' name='element' type64='@'/>
<arg declared_type64='NSAccessibilityNotificationName _Nonnull' name='notification' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' name='userInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSAccessibilityRaiseBadArgumentException'>
<arg declared_type64='id _Null_unspecified' name='element' type64='@'/>
<arg declared_type64='NSAccessibilityAttributeName _Null_unspecified' name='attribute' type64='@'/>
<arg declared_type64='id _Null_unspecified' name='value' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSAccessibilityRoleDescription'>
<arg declared_type64='NSAccessibilityRole _Nonnull' name='role' type64='@'/>
<arg declared_type64='NSAccessibilitySubrole _Nullable' name='subrole' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</function>
<function name='NSAccessibilityRoleDescriptionForUIElement'>
<arg declared_type64='id _Nonnull' name='element' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</function>
<function name='NSAccessibilitySetMayContainProtectedContent'>
<arg declared_type64='BOOL' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='NSAccessibilityUnignoredAncestor'>
<arg declared_type64='id _Nonnull' name='element' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</function>
<function name='NSAccessibilityUnignoredChildren'>
<arg declared_type64='NSArray * _Nonnull' name='originalChildren' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</function>
<function name='NSAccessibilityUnignoredChildrenForOnlyChild'>
<arg declared_type64='id _Nonnull' name='originalChild' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</function>
<function name='NSAccessibilityUnignoredDescendant'>
<arg declared_type64='id _Nonnull' name='element' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</function>
<function name='NSApplicationLoad'>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='NSApplicationMain'>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char * _Nonnull*' name='argv' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='NSAvailableWindowDepths'>
<retval const='true' declared_type64='NSWindowDepth * _Nonnull' type64='^i'/>
</function>
<function name='NSBeep'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSBeginAlertSheet' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<arg declared_type64='NSWindow*' name='docWindow' type64='@'/>
<arg declared_type64='id' name='modalDelegate' type64='@'/>
<arg declared_type64='SEL' name='didEndSelector' type64=':'/>
<arg declared_type64='SEL' name='didDismissSelector' type64=':'/>
<arg declared_type64='void*' name='contextInfo' type64='^v'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSBeginCriticalAlertSheet' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<arg declared_type64='NSWindow*' name='docWindow' type64='@'/>
<arg declared_type64='id' name='modalDelegate' type64='@'/>
<arg declared_type64='SEL' name='didEndSelector' type64=':'/>
<arg declared_type64='SEL' name='didDismissSelector' type64=':'/>
<arg declared_type64='void*' name='contextInfo' type64='^v'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSBeginInformationalAlertSheet' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<arg declared_type64='NSWindow*' name='docWindow' type64='@'/>
<arg declared_type64='id' name='modalDelegate' type64='@'/>
<arg declared_type64='SEL' name='didEndSelector' type64=':'/>
<arg declared_type64='SEL' name='didDismissSelector' type64=':'/>
<arg declared_type64='void*' name='contextInfo' type64='^v'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSBestDepth'>
<arg declared_type64='NSColorSpaceName _Nonnull' name='colorSpace' type64='@'/>
<arg declared_type64='NSInteger' name='bps' type64='q'/>
<arg declared_type64='NSInteger' name='bpp' type64='q'/>
<arg declared_type64='BOOL' name='planar' type64='B'/>
<arg declared_type64='BOOL * _Nullable' name='exactMatch' type64='^B'/>
<retval declared_type64='NSWindowDepth' type64='i'/>
</function>
<function name='NSBitsPerPixelFromDepth'>
<arg declared_type64='NSWindowDepth' name='depth' type64='i'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSBitsPerSampleFromDepth'>
<arg declared_type64='NSWindowDepth' name='depth' type64='i'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSColorSpaceFromDepth'>
<arg declared_type64='NSWindowDepth' name='depth' type64='i'/>
<retval declared_type64='NSColorSpaceName _Nullable' type64='@'/>
</function>
<function name='NSConvertGlyphsToPackedGlyphs'>
<arg declared_type64='NSGlyph * _Nonnull' name='glBuf' type64='^I'/>
<arg declared_type64='NSInteger' name='count' type64='q'/>
<arg declared_type64='NSMultibyteGlyphPacking' name='packing' type64='Q'/>
<arg declared_type64='char * _Nonnull' name='packedGlyphs' type64='*'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSCopyBits'>
<arg declared_type64='NSInteger' name='srcGState' type64='q'/>
<arg declared_type64='NSRect' name='srcRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' name='destPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSCountWindows'>
<arg declared_type64='NSInteger * _Nonnull' name='count' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSCountWindowsForContext'>
<arg declared_type64='NSInteger' name='context' type64='q'/>
<arg declared_type64='NSInteger * _Nonnull' name='count' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSCreateFileContentsPboardType'>
<arg declared_type64='NSString * _Nonnull' name='fileType' type64='@'/>
<retval declared_type64='NSPasteboardType _Nullable' type64='@'/>
</function>
<function name='NSCreateFilenamePboardType'>
<arg declared_type64='NSString * _Nonnull' name='fileType' type64='@'/>
<retval declared_type64='NSPasteboardType _Nullable' type64='@'/>
</function>
<function inline='true' name='NSDirectionalEdgeInsetsMake'>
<arg declared_type64='CGFloat' name='top' type64='d'/>
<arg declared_type64='CGFloat' name='leading' type64='d'/>
<arg declared_type64='CGFloat' name='bottom' type64='d'/>
<arg declared_type64='CGFloat' name='trailing' type64='d'/>
<retval declared_type64='NSDirectionalEdgeInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
</function>
<function name='NSDisableScreenUpdates'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDottedFrameRect'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawBitmap'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' name='width' type64='q'/>
<arg declared_type64='NSInteger' name='height' type64='q'/>
<arg declared_type64='NSInteger' name='bps' type64='q'/>
<arg declared_type64='NSInteger' name='spp' type64='q'/>
<arg declared_type64='NSInteger' name='bpp' type64='q'/>
<arg declared_type64='NSInteger' name='bpr' type64='q'/>
<arg declared_type64='BOOL' name='isPlanar' type64='B'/>
<arg declared_type64='BOOL' name='hasAlpha' type64='B'/>
<arg declared_type64='NSColorSpaceName _Nonnull' name='colorSpaceName' type64='@'/>
<arg const='true' declared_type64='unsigned char * _Nullable*' name='data' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawButton'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawColorTiledRects'>
<arg declared_type64='NSRect' name='boundsRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='NSRectEdge * _Nonnull' name='sides' type64='^Q'/>
<arg declared_type64='NSColor * _Nonnull * _Nonnull' name='colors' type64='^@'/>
<arg declared_type64='NSInteger' name='count' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSDrawDarkBezel'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawGrayBezel'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawGroove'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawLightBezel'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawNinePartImage'>
<arg declared_type64='NSRect' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSImage * _Nullable' name='topLeftCorner' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='topEdgeFill' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='topRightCorner' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='leftEdgeFill' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='centerFill' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='rightEdgeFill' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='bottomLeftCorner' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='bottomEdgeFill' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='bottomRightCorner' type64='@'/>
<arg declared_type64='NSCompositingOperation' name='op' type64='Q'/>
<arg declared_type64='CGFloat' name='alphaFraction' type64='d'/>
<arg declared_type64='BOOL' name='flipped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawThreePartImage'>
<arg declared_type64='NSRect' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSImage * _Nullable' name='startCap' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='centerFill' type64='@'/>
<arg declared_type64='NSImage * _Nullable' name='endCap' type64='@'/>
<arg declared_type64='BOOL' name='vertical' type64='B'/>
<arg declared_type64='NSCompositingOperation' name='op' type64='Q'/>
<arg declared_type64='CGFloat' name='alphaFraction' type64='d'/>
<arg declared_type64='BOOL' name='flipped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawTiledRects'>
<arg declared_type64='NSRect' name='boundsRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='NSRectEdge * _Nonnull' name='sides' type64='^Q'/>
<arg const='true' declared_type64='CGFloat * _Nonnull' name='grays' type64='^d'/>
<arg declared_type64='NSInteger' name='count' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSDrawWhiteBezel'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSDrawWindowBackground'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSEnableScreenUpdates'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSEraseRect'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function inline='true' name='NSEventMaskFromType'>
<arg declared_type64='NSEventType' name='type' type64='Q'/>
<retval declared_type64='NSEventMask' type64='Q'/>
</function>
<function name='NSFrameRect'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSFrameRectWithWidth'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' name='frameWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSFrameRectWithWidthUsingOperation'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' name='frameWidth' type64='d'/>
<arg declared_type64='NSCompositingOperation' name='op' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSGetAlertPanel' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<retval declared_type64='id' type64='@'/>
</function>
<function name='NSGetCriticalAlertPanel' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<retval declared_type64='id' type64='@'/>
</function>
<function name='NSGetFileType'>
<arg declared_type64='NSPasteboardType _Nonnull' name='pboardType' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</function>
<function name='NSGetFileTypes'>
<arg declared_type64='NSArray * _Nonnull' name='pboardTypes' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</function>
<function name='NSGetInformationalAlertPanel' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<retval declared_type64='id' type64='@'/>
</function>
<function name='NSGetWindowServerMemory'>
<arg declared_type64='NSInteger' name='context' type64='q'/>
<arg declared_type64='NSInteger * _Nonnull' name='virtualMemory' type64='^q'/>
<arg declared_type64='NSInteger * _Nonnull' name='windowBackingMemory' type64='^q'/>
<arg declared_type64='NSString * _Nonnull * _Nonnull' name='windowDumpString' type64='^@'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSHighlightRect'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSInterfaceStyleForKey'>
<arg declared_type64='NSString*' name='key' type64='@'/>
<arg declared_type64='NSResponder*' name='responder' type64='@'/>
<retval declared_type64='NSInterfaceStyle' type64='Q'/>
</function>
<function name='NSIsControllerMarker'>
<arg declared_type64='id _Nullable' name='object' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='NSNumberOfColorComponents'>
<arg declared_type64='NSColorSpaceName _Nonnull' name='colorSpaceName' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSOpenGLGetOption'>
<arg declared_type64='NSOpenGLGlobalOption' name='pname' type64='I'/>
<arg declared_type64='GLint * _Nonnull' name='param' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSOpenGLGetVersion'>
<arg declared_type64='GLint * _Nullable' name='major' type64='^i'/>
<arg declared_type64='GLint * _Nullable' name='minor' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSOpenGLSetOption'>
<arg declared_type64='NSOpenGLGlobalOption' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSPerformService'>
<arg declared_type64='NSString * _Nonnull' name='itemName' type64='@'/>
<arg declared_type64='NSPasteboard * _Nullable' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='NSPlanarFromDepth'>
<arg declared_type64='NSWindowDepth' name='depth' type64='i'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function name='NSReadPixel'>
<arg declared_type64='NSPoint' name='passedPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</function>
<function name='NSRectClip'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRectClipList'>
<arg const='true' declared_type64='NSRect * _Nonnull' name='rects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' name='count' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRectFill'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRectFillList'>
<arg const='true' declared_type64='NSRect * _Nonnull' name='rects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' name='count' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRectFillListUsingOperation'>
<arg const='true' declared_type64='NSRect * _Nonnull' name='rects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' name='count' type64='q'/>
<arg declared_type64='NSCompositingOperation' name='op' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRectFillListWithColors'>
<arg const='true' declared_type64='NSRect * _Nonnull' name='rects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='NSColor * _Nonnull * _Nonnull' name='colors' type64='^@'/>
<arg declared_type64='NSInteger' name='num' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRectFillListWithColorsUsingOperation'>
<arg const='true' declared_type64='NSRect * _Nonnull' name='rects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='NSColor * _Nonnull * _Nonnull' name='colors' type64='^@'/>
<arg declared_type64='NSInteger' name='num' type64='q'/>
<arg declared_type64='NSCompositingOperation' name='op' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRectFillListWithGrays'>
<arg const='true' declared_type64='NSRect * _Nonnull' name='rects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='CGFloat * _Nonnull' name='grays' type64='^d'/>
<arg declared_type64='NSInteger' name='num' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRectFillUsingOperation'>
<arg declared_type64='NSRect' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' name='op' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRegisterServicesProvider'>
<arg declared_type64='id _Nullable' name='provider' type64='@'/>
<arg declared_type64='NSServiceProviderName _Nonnull' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSReleaseAlertPanel'>
<arg declared_type64='id' name='panel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSRunAlertPanel' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSRunAlertPanelRelativeToWindow' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<arg declared_type64='NSWindow*' name='docWindow' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSRunCriticalAlertPanel' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSRunCriticalAlertPanelRelativeToWindow' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<arg declared_type64='NSWindow*' name='docWindow' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSRunInformationalAlertPanel' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' printf_format='true' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSRunInformationalAlertPanelRelativeToWindow' variadic='true'>
<arg declared_type64='NSString*' name='title' type64='@'/>
<arg declared_type64='NSString*' name='msgFormat' type64='@'/>
<arg declared_type64='NSString*' name='defaultButton' type64='@'/>
<arg declared_type64='NSString*' name='alternateButton' type64='@'/>
<arg declared_type64='NSString*' name='otherButton' type64='@'/>
<arg declared_type64='NSWindow*' name='docWindow' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSSetFocusRingStyle'>
<arg declared_type64='NSFocusRingPlacement' name='placement' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSSetShowsServicesMenuItem'>
<arg declared_type64='NSString * _Nonnull' name='itemName' type64='@'/>
<arg declared_type64='BOOL' name='enabled' type64='B'/>
<retval declared_type64='NSInteger' type64='q'/>
</function>
<function name='NSShowAnimationEffect'>
<arg declared_type64='NSAnimationEffect' name='animationEffect' type64='Q'/>
<arg declared_type64='NSPoint' name='centerLocation' type64='{CGPoint=dd}'/>
<arg declared_type64='NSSize' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='id _Nullable' name='animationDelegate' type64='@'/>
<arg declared_type64='SEL _Nullable' name='didEndSelector' type64=':'/>
<arg declared_type64='void * _Nullable' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSShowsServicesMenuItem'>
<arg declared_type64='NSString * _Nonnull' name='itemName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</function>
<function inline='true' name='NSTouchTypeMaskFromType'>
<arg declared_type64='NSTouchType' name='type' type64='q'/>
<retval declared_type64='NSTouchTypeMask' type64='Q'/>
</function>
<function name='NSUnregisterServicesProvider'>
<arg declared_type64='NSServiceProviderName _Nonnull' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSUpdateDynamicServices'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSWindowList'>
<arg declared_type64='NSInteger' name='size' type64='q'/>
<arg declared_type64='NSInteger*' name='list' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='NSWindowListForContext'>
<arg declared_type64='NSInteger' name='context' type64='q'/>
<arg declared_type64='NSInteger' name='size' type64='q'/>
<arg declared_type64='NSInteger*' name='list' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<class name='CIColor'>
<method selector='initWithColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='CIImage'>
<method selector='drawAtPoint:fromRect:operation:fraction:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' index='2' name='op' type64='Q'/>
<arg declared_type64='CGFloat' index='3' name='delta' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='1' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' index='2' name='op' type64='Q'/>
<arg declared_type64='CGFloat' index='3' name='delta' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithBitmapImageRep:'>
<arg declared_type64='NSBitmapImageRep * _Nonnull' index='0' name='bitmapImageRep' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='NSATSTypesetter'>
<method selector='attributedString'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='bidiProcessingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='textContainer' type64='@'/>
<arg declared_type64='NSRect' index='2' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' index='3' name='glyphPosition' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='4' name='charIndex' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='currentTextContainer'>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
<arg declared_type64='NSRange' index='0' name='glyphsRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSGlyph * _Null_unspecified' index='1' name='glyphBuffer' type64='^I'/>
<arg declared_type64='NSUInteger * _Null_unspecified' index='2' name='charIndexBuffer' type64='^Q'/>
<arg declared_type64='NSGlyphInscription * _Null_unspecified' index='3' name='inscribeBuffer' type64='^Q'/>
<arg declared_type64='BOOL * _Null_unspecified' index='4' name='elasticBuffer' type64='^B'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
<arg declared_type64='NSRect * _Nonnull' index='0' name='lineFragmentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect * _Nonnull' index='1' name='lineFragmentUsedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='2' name='paragraphSeparatorGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='3' name='lineOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hyphenCharacterForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='UTF32Char' type64='I'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='hyphenationFactorForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='layoutManager'>
<retval declared_type64='NSLayoutManager * _Nullable' type64='@'/>
</method>
<method selector='layoutParagraphAtPoint:'>
<arg declared_type64='NSPoint * _Nonnull' index='0' name='lineFragmentOrigin' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='lineFragmentPadding'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineFragmentRectForProposedRect:remainingRect:'>
<arg declared_type64='NSRect' index='0' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRectPointer _Null_unspecified' index='1' name='remainingRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphGlyphRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSeparatorGlyphRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAttributedString:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBidiProcessingEnabled:'>
<arg declared_type64='BOOL' index='0' name='bidiProcessingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHardInvalidation:forGlyphRange:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type64='float' index='0' name='hyphenationFactor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg declared_type64='CGFloat' index='0' name='lineFragmentPadding' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphGlyphRange:separatorGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='paragraphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='1' name='paragraphSeparatorRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg declared_type64='NSTypesetterBehavior' index='0' name='typesetterBehavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFontLeading:'>
<arg declared_type64='BOOL' index='0' name='usesFontLeading' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedTypesetter'>
<retval declared_type64='NSATSTypesetter * _Nonnull' type64='@'/>
</method>
<method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='substituteFontForFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='originalFont' type64='@'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
<arg declared_type64='CGFloat' index='0' name='glyphLocation' type64='d'/>
<arg declared_type64='NSWritingDirection' index='1' name='direction' type64='q'/>
<arg declared_type64='CGFloat' index='2' name='maxLocation' type64='d'/>
<retval declared_type64='NSTextTab * _Nullable' type64='@'/>
</method>
<method selector='typesetterBehavior'>
<retval declared_type64='NSTypesetterBehavior' type64='q'/>
</method>
<method selector='usesFontLeading'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg declared_type64='NSRect * _Nonnull' index='0' name='lineRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRect * _Nonnull' index='2' name='usedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat * _Nonnull' index='3' name='baselineOffset' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSAccessibilityCustomAction'>
<method selector='handler'>
<retval declared_type64='BOOL (^ _Nullable)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='BOOL' type64='B'/>
</retval>
</method>
<method selector='initWithName:handler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='BOOL (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithName:target:selector:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='target' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='2' name='selector' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='selector'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='setHandler:'>
<arg declared_type64='BOOL (^ _Nullable)(void)' function_pointer='true' index='0' name='handler' type64='@?'>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelector:'>
<arg declared_type64='SEL _Nullable' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='NSAccessibilityCustomRotor'>
<method selector='initWithLabel:itemSearchDelegate:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='label' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='itemSearchDelegate' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRotorType:itemSearchDelegate:'>
<arg declared_type64='NSAccessibilityCustomRotorType' index='0' name='rotorType' type64='q'/>
<arg declared_type64='id _Nonnull' index='1' name='itemSearchDelegate' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='itemLoadingDelegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='itemSearchDelegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='label'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='setItemLoadingDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='itemLoadingDelegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemSearchDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='itemSearchDelegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setType:'>
<arg declared_type64='NSAccessibilityCustomRotorType' index='0' name='type' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='type'>
<retval declared_type64='NSAccessibilityCustomRotorType' type64='q'/>
</method>
</class>
<class name='NSAccessibilityCustomRotorItemResult'>
<method selector='customLabel'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='initWithItemLoadingToken:customLabel:'>
<arg declared_type64='NSAccessibilityLoadingToken _Nonnull' index='0' name='itemLoadingToken' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='customLabel' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTargetElement:'>
<arg declared_type64='id _Nonnull' index='0' name='targetElement' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='itemLoadingToken'>
<retval declared_type64='NSAccessibilityLoadingToken _Nullable' type64='@'/>
</method>
<method selector='setCustomLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTargetRange:'>
<arg declared_type64='NSRange' index='0' name='targetRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targetElement'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='targetRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
</class>
<class name='NSAccessibilityCustomRotorSearchParameters'>
<method selector='currentItem'>
<retval declared_type64='NSAccessibilityCustomRotorItemResult * _Nullable' type64='@'/>
</method>
<method selector='filterString'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='searchDirection'>
<retval declared_type64='NSAccessibilityCustomRotorSearchDirection' type64='q'/>
</method>
<method selector='setCurrentItem:'>
<arg declared_type64='NSAccessibilityCustomRotorItemResult * _Nullable' index='0' name='currentItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFilterString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filterString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchDirection:'>
<arg declared_type64='NSAccessibilityCustomRotorSearchDirection' index='0' name='searchDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSAccessibilityElement'>
<method selector='accessibilityAddChildElement:'>
<arg declared_type64='NSAccessibilityElement * _Nonnull' index='0' name='childElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='accessibilityElementWithRole:frame:label:parent:'>
<arg declared_type64='NSAccessibilityRole _Nonnull' index='0' name='role' type64='@'/>
<arg declared_type64='NSRect' index='1' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSString * _Nullable' index='2' name='label' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='parent' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='accessibilityFrameInParentSpace'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAccessibilityFrameInParentSpace:'>
<arg declared_type64='NSRect' index='0' name='accessibilityFrameInParentSpace' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSActionCell'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='NSAffineTransform'>
<method selector='concat'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='set'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transformBezierPath:'>
<arg declared_type64='NSBezierPath * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='NSBezierPath * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSAlert'>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='addButtonWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='NSButton * _Nonnull' type64='@'/>
</method>
<method selector='alertStyle'>
<retval declared_type64='NSAlertStyle' type64='Q'/>
</method>
<method class_method='true' selector='alertWithError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='NSAlert * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:' variadic='true'>
<arg declared_type64='NSString * _Nullable' index='0' name='message' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='defaultButton' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='alternateButton' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='3' name='otherButton' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='4' name='format' printf_format='true' type64='@'/>
<retval declared_type64='NSAlert * _Nonnull' type64='@'/>
</method>
<method selector='beginSheetModalForWindow:completionHandler:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sheetWindow' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSModalResponse)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='NSModalResponse' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='didEndSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='3' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='buttons'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='helpAnchor'>
<retval declared_type64='NSHelpAnchorName _Nullable' type64='@'/>
</method>
<method selector='icon'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='informativeText'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='layout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='messageText'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='runModal'>
<retval declared_type64='NSModalResponse' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlertStyle:'>
<arg declared_type64='NSAlertStyle' index='0' name='alertStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHelpAnchor:'>
<arg declared_type64='NSHelpAnchorName _Nullable' index='0' name='helpAnchor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIcon:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='icon' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInformativeText:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='informativeText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMessageText:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='messageText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsHelp:'>
<arg declared_type64='BOOL' index='0' name='showsHelp' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsSuppressionButton:'>
<arg declared_type64='BOOL' index='0' name='showsSuppressionButton' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsHelp'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsSuppressionButton'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='suppressionButton'>
<retval declared_type64='NSButton * _Nullable' type64='@'/>
</method>
<method selector='window'>
<retval declared_type64='NSWindow * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSAlignmentFeedbackFilter'>
<method selector='alignmentFeedbackTokenForHorizontalMovementInView:previousX:alignedX:defaultX:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='previousX' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='alignedX' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='defaultX' type64='d'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='alignmentFeedbackTokenForMovementInView:previousPoint:alignedPoint:defaultPoint:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='previousPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='2' name='alignedPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='3' name='defaultPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='alignmentFeedbackTokenForVerticalMovementInView:previousY:alignedY:defaultY:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='previousY' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='alignedY' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='defaultY' type64='d'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='inputEventMask'>
<retval declared_type64='NSEventMask' type64='Q'/>
</method>
<method selector='performFeedback:performanceTime:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='alignmentFeedbackTokens' type64='@'/>
<arg declared_type64='NSHapticFeedbackPerformanceTime' index='1' name='performanceTime' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateWithPanRecognizer:'>
<arg declared_type64='NSPanGestureRecognizer * _Nonnull' index='0' name='panRecognizer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSAnimation'>
<method selector='addProgressMark:'>
<arg declared_type64='NSAnimationProgress' index='0' name='progressMark' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationBlockingMode'>
<retval declared_type64='NSAnimationBlockingMode' type64='Q'/>
</method>
<method selector='animationCurve'>
<retval declared_type64='NSAnimationCurve' type64='Q'/>
</method>
<method selector='clearStartAnimation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='clearStopAnimation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='currentProgress'>
<retval declared_type64='NSAnimationProgress' type64='f'/>
</method>
<method selector='currentValue'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='frameRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithDuration:animationCurve:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<arg declared_type64='NSAnimationCurve' index='1' name='animationCurve' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='progressMarks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='removeProgressMark:'>
<arg declared_type64='NSAnimationProgress' index='0' name='progressMark' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runLoopModesForAnimating'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setAnimationBlockingMode:'>
<arg declared_type64='NSAnimationBlockingMode' index='0' name='animationBlockingMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationCurve:'>
<arg declared_type64='NSAnimationCurve' index='0' name='animationCurve' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentProgress:'>
<arg declared_type64='NSAnimationProgress' index='0' name='currentProgress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameRate:'>
<arg declared_type64='float' index='0' name='frameRate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProgressMarks:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='progressMarks' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startAnimation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startWhenAnimation:reachesProgress:'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<arg declared_type64='NSAnimationProgress' index='1' name='startProgress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopAnimation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopWhenAnimation:reachesProgress:'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<arg declared_type64='NSAnimationProgress' index='1' name='stopProgress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSAnimationContext'>
<method selector='allowsImplicitAnimation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='beginGrouping'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completionHandler'>
<retval declared_type64='void (^ _Nullable)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
<method class_method='true' selector='currentContext'>
<retval declared_type64='NSAnimationContext * _Nonnull' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='endGrouping'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='runAnimationGroup:'>
<arg declared_type64='void (^ _Nonnull)(NSAnimationContext * _Nonnull)' function_pointer='true' index='0' name='changes' type64='@?'>
<arg declared_type64='NSAnimationContext * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='runAnimationGroup:completionHandler:'>
<arg declared_type64='void (^ _Nonnull)(NSAnimationContext * _Nonnull)' function_pointer='true' index='0' name='changes' type64='@?'>
<arg declared_type64='NSAnimationContext * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsImplicitAnimation:'>
<arg declared_type64='BOOL' index='0' name='allowsImplicitAnimation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompletionHandler:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimingFunction:'>
<arg declared_type64='CAMediaTimingFunction * _Nullable' index='0' name='timingFunction' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timingFunction'>
<retval declared_type64='CAMediaTimingFunction * _Nullable' type64='@'/>
</method>
</class>
<class name='NSAppearance'>
<method selector='allowsVibrancy'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='appearanceNamed:'>
<arg declared_type64='NSAppearanceName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSAppearance * _Nullable' type64='@'/>
</method>
<method selector='bestMatchFromAppearancesWithNames:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='appearances' type64='@'/>
<retval declared_type64='NSAppearanceName _Nullable' type64='@'/>
</method>
<method class_method='true' selector='currentAppearance'>
<retval declared_type64='NSAppearance * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='currentDrawingAppearance'>
<retval declared_type64='NSAppearance * _Nonnull' type64='@'/>
</method>
<method selector='initWithAppearanceNamed:bundle:'>
<arg declared_type64='NSAppearanceName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='bundle' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSAppearanceName _Nonnull' type64='@'/>
</method>
<method selector='performAsCurrentDrawingAppearance:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setCurrentAppearance:'>
<arg declared_type64='NSAppearance * _Nullable' index='0' name='currentAppearance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSAppleScript'>
<method selector='richTextSource'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
</class>
<class name='NSApplication'>
<method selector='abortModal'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='activateContextHelpMode:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='activateIgnoringOtherApps:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='activationPolicy'>
<retval declared_type64='NSApplicationActivationPolicy' type64='q'/>
</method>
<method selector='addWindowsItem:title:filename:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='win' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='BOOL' index='2' name='isFilename' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appearance'>
<retval declared_type64='NSAppearance * _Nullable' type64='@'/>
</method>
<method selector='application:printFiles:'>
<arg declared_type64='NSApplication * _Null_unspecified' index='0' name='sender' type64='@'/>
<arg declared_type64='NSArray * _Null_unspecified' index='1' name='filenames' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationIconImage'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='arrangeInFront:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginModalSessionForWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSModalSession _Nonnull' type64='^{_NSModalSession=}'/>
</method>
<method selector='beginModalSessionForWindow:relativeToWindow:'>
<arg declared_type64='NSWindow * _Null_unspecified' index='0' name='window' type64='@'/>
<arg declared_type64='NSWindow * _Null_unspecified' index='1' name='docWindow' type64='@'/>
<retval declared_type64='NSModalSession _Nonnull' type64='^{_NSModalSession=}'/>
</method>
<method selector='beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sheet' type64='@'/>
<arg declared_type64='NSWindow * _Nonnull' index='1' name='docWindow' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='modalDelegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didEndSelector' type64=':'/>
<arg declared_type64='void * _Null_unspecified' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cancelUserAttentionRequest:'>
<arg declared_type64='NSInteger' index='0' name='request' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeWindowsItem:title:filename:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='win' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='BOOL' index='2' name='isFilename' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completeStateRestoration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='context'>
<retval declared_type64='NSGraphicsContext * _Nullable' type64='@'/>
</method>
<method selector='currentEvent'>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method selector='currentSystemPresentationOptions'>
<retval declared_type64='NSApplicationPresentationOptions' type64='Q'/>
</method>
<method selector='deactivate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='detachDrawingThread:toTarget:withObject:'>
<arg declared_type64='SEL _Nonnull' index='0' name='selector' type64=':'/>
<arg declared_type64='id _Nonnull' index='1' name='target' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='argument' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disableRelaunchOnLogin'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardEventsMatchingMask:beforeEvent:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSEvent * _Nullable' index='1' name='lastEvent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dockTile'>
<retval declared_type64='NSDockTile * _Nonnull' type64='@'/>
</method>
<method selector='effectiveAppearance'>
<retval declared_type64='NSAppearance * _Nonnull' type64='@'/>
</method>
<method selector='enableRelaunchOnLogin'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enabledRemoteNotificationTypes'>
<retval declared_type64='NSRemoteNotificationType' type64='Q'/>
</method>
<method selector='endModalSession:'>
<arg declared_type64='NSModalSession _Nonnull' index='0' name='session' type64='^{_NSModalSession=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endSheet:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sheet' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endSheet:returnCode:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sheet' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='returnCode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateWindowsWithOptions:usingBlock:'>
<arg declared_type64='NSWindowListOptions' index='0' name='options' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(NSWindow * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='NSWindow * _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extendStateRestoration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishLaunching'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='helpMenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='hide:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hideOtherApplications:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticCustomizeTouchBarMenuItemEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFullKeyboardAccessEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRegisteredForRemoteNotifications'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRunning'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyWindow'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='mainMenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='mainWindow'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='makeWindowsPerform:inOrder:'>
<arg declared_type64='SEL _Nonnull' index='0' name='selector' type64=':'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='miniaturizeAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='modalWindow'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSDate * _Nullable' index='1' name='expiration' type64='@'/>
<arg declared_type64='NSRunLoopMode _Nonnull' index='2' name='mode' type64='@'/>
<arg declared_type64='BOOL' index='3' name='deqFlag' type64='B'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method selector='occlusionState'>
<retval declared_type64='NSApplicationOcclusionState' type64='Q'/>
</method>
<method selector='orderFrontCharacterPalette:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontColorPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontStandardAboutPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontStandardAboutPanelWithOptions:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='optionsDictionary' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderedDocuments'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='orderedWindows'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='postEvent:atStart:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentationOptions'>
<retval declared_type64='NSApplicationPresentationOptions' type64='Q'/>
</method>
<method selector='preventWindowOrdering'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerForRemoteNotificationTypes:'>
<arg declared_type64='NSRemoteNotificationType' index='0' name='types' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerForRemoteNotifications'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerServicesMenuSendTypes:returnTypes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sendTypes' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='returnTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerUserInterfaceItemSearchHandler:'>
<arg declared_type64='id _Nonnull' index='0' name='handler' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeWindowsItem:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='win' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replyToApplicationShouldTerminate:'>
<arg declared_type64='BOOL' index='0' name='shouldTerminate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replyToOpenOrPrint:'>
<arg declared_type64='NSApplicationDelegateReply' index='0' name='reply' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reportException:'>
<arg declared_type64='NSException * _Nonnull' index='0' name='exception' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requestUserAttention:'>
<arg declared_type64='NSRequestUserAttentionType' index='0' name='requestType' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='restoreWindowWithIdentifier:state:completionHandler:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='state' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSWindow * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSWindow * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='run'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runModalForWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSModalResponse' type64='q'/>
</method>
<method selector='runModalForWindow:relativeToWindow:'>
<arg declared_type64='NSWindow * _Null_unspecified' index='0' name='window' type64='@'/>
<arg declared_type64='NSWindow * _Null_unspecified' index='1' name='docWindow' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='runModalSession:'>
<arg declared_type64='NSModalSession _Nonnull' index='0' name='session' type64='^{_NSModalSession=}'/>
<retval declared_type64='NSModalResponse' type64='q'/>
</method>
<method selector='runPageLayout:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchString:inUserInterfaceItemString:searchRange:foundRange:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='searchString' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='stringToSearch' type64='@'/>
<arg declared_type64='NSRange' index='2' name='searchRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange * _Nullable' index='3' name='foundRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sendAction:to:from:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sendEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='servicesMenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='servicesProvider'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setActivationPolicy:'>
<arg declared_type64='NSApplicationActivationPolicy' index='0' name='activationPolicy' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAppearance:'>
<arg declared_type64='NSAppearance * _Nullable' index='0' name='appearance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setApplicationIconImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='applicationIconImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticCustomizeTouchBarMenuItemEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticCustomizeTouchBarMenuItemEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHelpMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='helpMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMainMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='mainMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPresentationOptions:'>
<arg declared_type64='NSApplicationPresentationOptions' index='0' name='presentationOptions' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setServicesMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='servicesMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setServicesProvider:'>
<arg declared_type64='id _Nullable' index='0' name='servicesProvider' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindowsMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='windowsMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindowsNeedUpdate:'>
<arg declared_type64='BOOL' index='0' name='needUpdate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedApplication'>
<retval declared_type64='__kindof NSApplication * _Nonnull' type64='@'/>
</method>
<method selector='showHelp:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stop:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopModal'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopModalWithCode:'>
<arg declared_type64='NSModalResponse' index='0' name='returnCode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='targetForAction:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='targetForAction:to:from:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='sender' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='terminate:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleTouchBarCustomizationPalette:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tryToPerform:with:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='unhide:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unhideAllApplications:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unhideWithoutActivation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unregisterForRemoteNotifications'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unregisterUserInterfaceItemSearchHandler:'>
<arg declared_type64='id _Nonnull' index='0' name='handler' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateWindows'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateWindowsItem:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='win' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type64='NSUserInterfaceLayoutDirection' type64='q'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg declared_type64='NSPasteboardType _Nullable' index='0' name='sendType' type64='@'/>
<arg declared_type64='NSPasteboardType _Nullable' index='1' name='returnType' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='windowWithWindowNumber:'>
<arg declared_type64='NSInteger' index='0' name='windowNum' type64='q'/>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='windows'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='windowsMenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
</class>
<class name='NSArrayController'>
<method selector='add:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addObject:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addObjects:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addSelectedObjects:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='addSelectionIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='alwaysUsesMultipleValuesMarker'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='arrangeObjects:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='arrangedObjects'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='automaticRearrangementKeyPaths'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='automaticallyRearrangesObjects'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='avoidsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canInsert'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canSelectNext'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canSelectPrevious'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='clearsFilterPredicateOnInsertion'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='didChangeArrangementCriteria'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='filterPredicate'>
<retval declared_type64='NSPredicate * _Nullable' type64='@'/>
</method>
<method selector='insert:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertObject:atArrangedObjectIndex:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertObjects:atArrangedObjectIndexes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='indexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preservesSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rearrangeObjects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='remove:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeObjectAtArrangedObjectIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeObjects:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeObjectsAtArrangedObjectIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeSelectedObjects:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeSelectionIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectNext:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectPrevious:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedObjects'>
<retval declared_type64='NSArray * _Null_unspecified' type64='@'/>
</method>
<method selector='selectionIndex'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='selectionIndexes'>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='selectsInsertedObjects'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAlwaysUsesMultipleValuesMarker:'>
<arg declared_type64='BOOL' index='0' name='alwaysUsesMultipleValuesMarker' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyRearrangesObjects:'>
<arg declared_type64='BOOL' index='0' name='automaticallyRearrangesObjects' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAvoidsEmptySelection:'>
<arg declared_type64='BOOL' index='0' name='avoidsEmptySelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClearsFilterPredicateOnInsertion:'>
<arg declared_type64='BOOL' index='0' name='clearsFilterPredicateOnInsertion' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFilterPredicate:'>
<arg declared_type64='NSPredicate * _Nullable' index='0' name='filterPredicate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreservesSelection:'>
<arg declared_type64='BOOL' index='0' name='preservesSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedObjects:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setSelectionIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setSelectionIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setSelectsInsertedObjects:'>
<arg declared_type64='BOOL' index='0' name='selectsInsertedObjects' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sortDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortDescriptors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='RTFDFileWrapperFromRange:documentAttributes:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='dict' type64='@'/>
<retval declared_type64='NSFileWrapper * _Nullable' type64='@'/>
</method>
<method selector='RTFDFromRange:documentAttributes:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='dict' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='RTFFromRange:documentAttributes:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='dict' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='URLAtIndex:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<arg declared_type64='NSRangePointer _Nonnull' index='1' name='effectiveRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='attributedStringWithAttachment:'>
<arg declared_type64='NSTextAttachment * _Nonnull' index='0' name='attachment' type64='@'/>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='boundingRectWithSize:options:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundingRectWithSize:options:context:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSStringDrawingContext * _Nullable' index='2' name='context' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='containsAttachments'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='containsAttachmentsInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dataFromRange:documentAttributes:error:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='dict' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='docFormatFromRange:documentAttributes:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='dict' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='doubleClickAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithRect:options:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithRect:options:context:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSStringDrawingContext * _Nullable' index='2' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fileWrapperFromRange:documentAttributes:error:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='dict' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='NSFileWrapper * _Nullable' type64='@'/>
</method>
<method selector='fontAttributesInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='initWithData:options:documentAttributes:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithDocFormat:documentAttributes:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithHTML:baseURL:documentAttributes:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='base' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithHTML:documentAttributes:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithHTML:options:documentAttributes:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithPath:documentAttributes:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithRTF:documentAttributes:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithRTFD:documentAttributes:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithRTFDFileWrapper:documentAttributes:'>
<arg declared_type64='NSFileWrapper * _Nonnull' index='0' name='wrapper' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithURL:documentAttributes:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithURL:options:documentAttributes:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='itemNumberInTextList:atIndex:'>
<arg declared_type64='NSTextList * _Nonnull' index='0' name='list' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='location' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='lineBreakBeforeIndex:withinRange:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<arg declared_type64='NSRange' index='1' name='aRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='lineBreakByHyphenatingBeforeIndex:withinRange:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<arg declared_type64='NSRange' index='1' name='aRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='nextWordFromIndex:forward:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='isForward' type64='B'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='rangeOfTextBlock:atIndex:'>
<arg declared_type64='NSTextBlock * _Nonnull' index='0' name='block' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='location' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfTextList:atIndex:'>
<arg declared_type64='NSTextList * _Nonnull' index='0' name='list' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='location' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfTextTable:atIndex:'>
<arg declared_type64='NSTextTable * _Nonnull' index='0' name='table' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='location' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='rulerAttributesInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='size'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='textFileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='textPasteboardTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='textTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='textUnfilteredFileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='textUnfilteredPasteboardTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='textUnfilteredTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSBezierPath'>
<method selector='addClip'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPath:'>
<arg declared_type64='NSBezierPath * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithArcFromPoint:toPoint:radius:'>
<arg declared_type64='NSPoint' index='0' name='point1' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='1' name='point2' type64='{CGPoint=dd}'/>
<arg declared_type64='CGFloat' index='2' name='radius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:'>
<arg declared_type64='NSPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<arg declared_type64='CGFloat' index='1' name='radius' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='startAngle' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='endAngle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:'>
<arg declared_type64='NSPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<arg declared_type64='CGFloat' index='1' name='radius' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='startAngle' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='endAngle' type64='d'/>
<arg declared_type64='BOOL' index='4' name='clockwise' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithCGGlyph:inFont:'>
<arg declared_type64='CGGlyph' index='0' name='glyph' type64='S'/>
<arg declared_type64='NSFont * _Nonnull' index='1' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithCGGlyphs:count:inFont:'>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='0' name='glyphs' type64='^S'/>
<arg declared_type64='NSInteger' index='1' name='count' type64='q'/>
<arg declared_type64='NSFont * _Nonnull' index='2' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithGlyph:inFont:'>
<arg declared_type64='NSGlyph' index='0' name='glyph' type64='I'/>
<arg declared_type64='NSFont * _Nonnull' index='1' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithGlyphs:count:inFont:'>
<arg declared_type64='NSGlyph * _Nonnull' index='0' name='glyphs' type64='^I'/>
<arg declared_type64='NSInteger' index='1' name='count' type64='q'/>
<arg declared_type64='NSFont * _Nonnull' index='2' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithOvalInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithPackedGlyphs:'>
<arg const='true' declared_type64='char * _Nonnull' index='0' name='packedGlyphs' type64='*'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithPoints:count:'>
<arg declared_type64='NSPointArray _Nonnull' index='0' name='points' type64='^{CGPoint=dd}'/>
<arg declared_type64='NSInteger' index='1' name='count' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendBezierPathWithRoundedRect:xRadius:yRadius:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' index='1' name='xRadius' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='yRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='bezierPath'>
<retval declared_type64='NSBezierPath * _Nonnull' type64='@'/>
</method>
<method selector='bezierPathByFlatteningPath'>
<retval declared_type64='NSBezierPath * _Nonnull' type64='@'/>
</method>
<method selector='bezierPathByReversingPath'>
<retval declared_type64='NSBezierPath * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithOvalInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSBezierPath * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSBezierPath * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:xRadius:yRadius:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' index='1' name='xRadius' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='yRadius' type64='d'/>
<retval declared_type64='NSBezierPath * _Nonnull' type64='@'/>
</method>
<method selector='bounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cachesBezierPath'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='clipRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='closePath'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='containsPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='controlPointBounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='currentPoint'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='curveToPoint:controlPoint1:controlPoint2:'>
<arg declared_type64='NSPoint' index='0' name='endPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='1' name='controlPoint1' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='2' name='controlPoint2' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='defaultFlatness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='defaultLineCapStyle'>
<retval declared_type64='NSLineCapStyle' type64='Q'/>
</method>
<method class_method='true' selector='defaultLineJoinStyle'>
<retval declared_type64='NSLineJoinStyle' type64='Q'/>
</method>
<method class_method='true' selector='defaultLineWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='defaultMiterLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='defaultWindingRule'>
<retval declared_type64='NSWindingRule' type64='Q'/>
</method>
<method class_method='true' selector='drawPackedGlyphs:atPoint:'>
<arg const='true' declared_type64='char * _Nonnull' index='0' name='packedGlyphs' type64='*'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='elementAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSBezierPathElement' type64='Q'/>
</method>
<method selector='elementAtIndex:associatedPoints:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<arg declared_type64='NSPointArray _Nullable' index='1' name='points' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSBezierPathElement' type64='Q'/>
</method>
<method selector='elementCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='fill'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='fillRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flatness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='getLineDash:count:phase:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='pattern' type64='^d'/>
<arg declared_type64='NSInteger * _Nullable' index='1' name='count' type64='^q'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='phase' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lineCapStyle'>
<retval declared_type64='NSLineCapStyle' type64='Q'/>
</method>
<method selector='lineJoinStyle'>
<retval declared_type64='NSLineJoinStyle' type64='Q'/>
</method>
<method selector='lineToPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lineWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='miterLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='moveToPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='relativeCurveToPoint:controlPoint1:controlPoint2:'>
<arg declared_type64='NSPoint' index='0' name='endPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='1' name='controlPoint1' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='2' name='controlPoint2' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='relativeLineToPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='relativeMoveToPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllPoints'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAssociatedPoints:atIndex:'>
<arg declared_type64='NSPointArray _Nullable' index='0' name='points' type64='^{CGPoint=dd}'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCachesBezierPath:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClip'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDefaultFlatness:'>
<arg declared_type64='CGFloat' index='0' name='defaultFlatness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDefaultLineCapStyle:'>
<arg declared_type64='NSLineCapStyle' index='0' name='defaultLineCapStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDefaultLineJoinStyle:'>
<arg declared_type64='NSLineJoinStyle' index='0' name='defaultLineJoinStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDefaultLineWidth:'>
<arg declared_type64='CGFloat' index='0' name='defaultLineWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDefaultMiterLimit:'>
<arg declared_type64='CGFloat' index='0' name='defaultMiterLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDefaultWindingRule:'>
<arg declared_type64='NSWindingRule' index='0' name='defaultWindingRule' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFlatness:'>
<arg declared_type64='CGFloat' index='0' name='flatness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineCapStyle:'>
<arg declared_type64='NSLineCapStyle' index='0' name='lineCapStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineDash:count:phase:'>
<arg const='true' declared_type64='CGFloat * _Nullable' index='0' name='pattern' type64='^d'/>
<arg declared_type64='NSInteger' index='1' name='count' type64='q'/>
<arg declared_type64='CGFloat' index='2' name='phase' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineJoinStyle:'>
<arg declared_type64='NSLineJoinStyle' index='0' name='lineJoinStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type64='CGFloat' index='0' name='lineWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMiterLimit:'>
<arg declared_type64='CGFloat' index='0' name='miterLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindingRule:'>
<arg declared_type64='NSWindingRule' index='0' name='windingRule' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stroke'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='strokeLineFromPoint:toPoint:'>
<arg declared_type64='NSPoint' index='0' name='point1' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='1' name='point2' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='strokeRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transformUsingAffineTransform:'>
<arg declared_type64='NSAffineTransform * _Nonnull' index='0' name='transform' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windingRule'>
<retval declared_type64='NSWindingRule' type64='Q'/>
</method>
</class>
<class name='NSBindingSelectionMarker'>
<method class_method='true' selector='defaultPlaceholderForMarker:onClass:withBinding:'>
<arg declared_type64='NSBindingSelectionMarker * _Nullable' index='0' name='marker' type64='@'/>
<arg declared_type64='Class _Nonnull' index='1' name='objectClass' type64='#'/>
<arg declared_type64='NSBindingName _Nonnull' index='2' name='binding' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='multipleValuesSelectionMarker'>
<retval declared_type64='NSBindingSelectionMarker * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='noSelectionMarker'>
<retval declared_type64='NSBindingSelectionMarker * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='notApplicableSelectionMarker'>
<retval declared_type64='NSBindingSelectionMarker * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='setDefaultPlaceholder:forMarker:onClass:withBinding:'>
<arg declared_type64='id _Nullable' index='0' name='placeholder' type64='@'/>
<arg declared_type64='NSBindingSelectionMarker * _Nullable' index='1' name='marker' type64='@'/>
<arg declared_type64='Class _Nonnull' index='2' name='objectClass' type64='#'/>
<arg declared_type64='NSBindingName _Nonnull' index='3' name='binding' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSBitmapImageRep'>
<method selector='CGImage'>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='TIFFRepresentation'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='TIFFRepresentationOfImageRepsInArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='array' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='TIFFRepresentationOfImageRepsInArray:usingCompression:factor:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='array' type64='@'/>
<arg declared_type64='NSTIFFCompression' index='1' name='comp' type64='Q'/>
<arg declared_type64='float' index='2' name='factor' type64='f'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='TIFFRepresentationUsingCompression:factor:'>
<arg declared_type64='NSTIFFCompression' index='0' name='comp' type64='Q'/>
<arg declared_type64='float' index='1' name='factor' type64='f'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='bitmapData'>
<retval declared_type64='unsigned char * _Nullable' type64='*'/>
</method>
<method selector='bitmapFormat'>
<retval declared_type64='NSBitmapFormat' type64='Q'/>
</method>
<method selector='bitmapImageRepByConvertingToColorSpace:renderingIntent:'>
<arg declared_type64='NSColorSpace * _Nonnull' index='0' name='targetSpace' type64='@'/>
<arg declared_type64='NSColorRenderingIntent' index='1' name='renderingIntent' type64='q'/>
<retval declared_type64='NSBitmapImageRep * _Nullable' type64='@'/>
</method>
<method selector='bitmapImageRepByRetaggingWithColorSpace:'>
<arg declared_type64='NSColorSpace * _Nonnull' index='0' name='newSpace' type64='@'/>
<retval declared_type64='NSBitmapImageRep * _Nullable' type64='@'/>
</method>
<method selector='bitsPerPixel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='bytesPerPlane'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='bytesPerRow'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='canBeCompressedUsing:'>
<arg declared_type64='NSTIFFCompression' index='0' name='compression' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='colorAtX:y:'>
<arg declared_type64='NSInteger' index='0' name='x' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='y' type64='q'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='colorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method selector='colorizeByMappingGray:toColor:blackMapping:whiteMapping:'>
<arg declared_type64='CGFloat' index='0' name='midPoint' type64='d'/>
<arg declared_type64='NSColor * _Nullable' index='1' name='midPointColor' type64='@'/>
<arg declared_type64='NSColor * _Nullable' index='2' name='shadowColor' type64='@'/>
<arg declared_type64='NSColor * _Nullable' index='3' name='lightColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getBitmapDataPlanes:'>
<arg declared_type64='unsigned char * _Nullable * _Nonnull' index='0' name='data' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getCompression:factor:'>
<arg declared_type64='NSTIFFCompression * _Nullable' index='0' name='compression' type64='^Q'/>
<arg declared_type64='float * _Nullable' index='1' name='factor' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getPixel:atX:y:'>
<arg declared_type64='NSUInteger*' index='0' name='p' type64='^Q'/>
<arg declared_type64='NSInteger' index='1' name='x' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='y' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='getTIFFCompressionTypes:count:'>
<arg const='true' declared_type64='NSTIFFCompression * _Nullable * _Nonnull' index='0' name='list' type64='^^Q'/>
<arg declared_type64='NSInteger * _Nonnull' index='1' name='numTypes' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='imageRepWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageRepsWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='incrementalLoadFromData:complete:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='BOOL' index='1' name='complete' type64='B'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initForIncrementalLoad'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:'>
<arg declared_type64='unsigned char * _Nullable * _Nullable' index='0' name='planes' type64='^*'/>
<arg declared_type64='NSInteger' index='1' name='width' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='height' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='bps' type64='q'/>
<arg declared_type64='NSInteger' index='4' name='spp' type64='q'/>
<arg declared_type64='BOOL' index='5' name='alpha' type64='B'/>
<arg declared_type64='BOOL' index='6' name='isPlanar' type64='B'/>
<arg declared_type64='NSColorSpaceName _Nonnull' index='7' name='colorSpaceName' type64='@'/>
<arg declared_type64='NSBitmapFormat' index='8' name='bitmapFormat' type64='Q'/>
<arg declared_type64='NSInteger' index='9' name='rBytes' type64='q'/>
<arg declared_type64='NSInteger' index='10' name='pBits' type64='q'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:'>
<arg declared_type64='unsigned char * _Nullable * _Nullable' index='0' name='planes' type64='^*'/>
<arg declared_type64='NSInteger' index='1' name='width' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='height' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='bps' type64='q'/>
<arg declared_type64='NSInteger' index='4' name='spp' type64='q'/>
<arg declared_type64='BOOL' index='5' name='alpha' type64='B'/>
<arg declared_type64='BOOL' index='6' name='isPlanar' type64='B'/>
<arg declared_type64='NSColorSpaceName _Nonnull' index='7' name='colorSpaceName' type64='@'/>
<arg declared_type64='NSInteger' index='8' name='rBytes' type64='q'/>
<arg declared_type64='NSInteger' index='9' name='pBits' type64='q'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithCGImage:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCIImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='ciImage' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFocusedViewRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isPlanar'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='localizedNameForTIFFCompressionType:'>
<arg declared_type64='NSTIFFCompression' index='0' name='compression' type64='Q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='numberOfPlanes'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='representationOfImageRepsInArray:usingType:properties:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='imageReps' type64='@'/>
<arg declared_type64='NSBitmapImageFileType' index='1' name='storageType' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='properties' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='representationUsingType:properties:'>
<arg declared_type64='NSBitmapImageFileType' index='0' name='storageType' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='properties' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='samplesPerPixel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setColor:atX:y:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='x' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='y' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompression:factor:'>
<arg declared_type64='NSTIFFCompression' index='0' name='compression' type64='Q'/>
<arg declared_type64='float' index='1' name='factor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPixel:atX:y:'>
<arg declared_type64='NSUInteger*' index='0' name='p' type64='^Q'/>
<arg declared_type64='NSInteger' index='1' name='x' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='y' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProperty:withValue:'>
<arg declared_type64='NSBitmapImageRepPropertyKey _Nonnull' index='0' name='property' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='value' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='valueForProperty:'>
<arg declared_type64='NSBitmapImageRepPropertyKey _Nonnull' index='0' name='property' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='NSBox'>
<method selector='borderColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='borderRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='borderType'>
<retval declared_type64='NSBorderType' type64='Q'/>
</method>
<method selector='borderWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='boxType'>
<retval declared_type64='NSBoxType' type64='Q'/>
</method>
<method selector='contentView'>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
<method selector='contentViewMargins'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='cornerRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='fillColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='isTransparent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='borderColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBorderType:'>
<arg declared_type64='NSBorderType' index='0' name='borderType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBorderWidth:'>
<arg declared_type64='CGFloat' index='0' name='borderWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBoxType:'>
<arg declared_type64='NSBoxType' index='0' name='boxType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type64='__kindof NSView * _Nullable' index='0' name='contentView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentViewMargins:'>
<arg declared_type64='NSSize' index='0' name='contentViewMargins' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type64='CGFloat' index='0' name='cornerRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFillColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='fillColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameFromContentFrame:'>
<arg declared_type64='NSRect' index='0' name='contentFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='titleFont' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitlePosition:'>
<arg declared_type64='NSTitlePosition' index='0' name='titlePosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransparent:'>
<arg declared_type64='BOOL' index='0' name='transparent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='titleCell'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='titleFont'>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='titlePosition'>
<retval declared_type64='NSTitlePosition' type64='Q'/>
</method>
<method selector='titleRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSBrowser'>
<method selector='acceptsArrowKeys'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='addColumn'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsBranchSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsTypeSelect'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autohidesScroller'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='canDragRowsWithIndexes:inColumn:withEvent:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='cellClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='cellPrototype'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='clickedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='clickedRow'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='columnContentWidthForColumnWidth:'>
<arg declared_type64='CGFloat' index='0' name='columnWidth' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='columnOfMatrix:'>
<arg declared_type64='NSMatrix * _Nonnull' index='0' name='matrix' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='columnResizingType'>
<retval declared_type64='NSBrowserColumnResizingType' type64='Q'/>
</method>
<method selector='columnWidthForColumnContentWidth:'>
<arg declared_type64='CGFloat' index='0' name='columnContentWidth' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='columnsAutosaveName'>
<retval declared_type64='NSBrowserColumnsAutosaveName _Nonnull' type64='@'/>
</method>
<method selector='defaultColumnWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='displayAllColumns'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doClick:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doDoubleClick:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doubleAction'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nullable' index='3' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='drawTitleOfColumn:inRect:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='editItemAtIndexPath:withEvent:select:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='NSEvent * _Nullable' index='1' name='event' type64='@'/>
<arg declared_type64='BOOL' index='2' name='select' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstVisibleColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='frameOfColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameOfInsideOfColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameOfRow:inColumn:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='getRow:column:forPoint:'>
<arg declared_type64='NSInteger * _Nullable' index='0' name='row' type64='^q'/>
<arg declared_type64='NSInteger * _Nullable' index='1' name='column' type64='^q'/>
<arg declared_type64='NSPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasHorizontalScroller'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='indexPathForColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='isLeafItem:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTitled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='itemAtRow:inColumn:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='lastColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='lastVisibleColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='loadColumnZero'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='loadedCellAtRow:column:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='col' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='matrixClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='matrixInColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSMatrix * _Nullable' type64='@'/>
</method>
<method selector='maxVisibleColumns'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='minColumnWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='noteHeightOfRowsWithIndexesChanged:inColumn:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexSet' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfVisibleColumns'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='parentForItemsInColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='path'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='pathSeparator'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='pathToColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='prefersAllColumnUserResizing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='reloadColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadDataForRowIndexes:inColumn:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='removeSavedColumnsWithAutosaveName:'>
<arg declared_type64='NSBrowserColumnsAutosaveName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reusesColumns'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rowHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scrollColumnToVisible:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollColumnsLeftBy:'>
<arg declared_type64='NSInteger' index='0' name='shiftAmount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollColumnsRightBy:'>
<arg declared_type64='NSInteger' index='0' name='shiftAmount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollRowToVisible:inColumn:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollViaScroller:'>
<arg declared_type64='NSScroller * _Null_unspecified' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectRow:inColumn:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectRowIndexes:inColumn:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedCell'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='selectedCellInColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='selectedCells'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='selectedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectedRowInColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectedRowIndexesInColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSIndexSet * _Nullable' type64='@'/>
</method>
<method selector='selectionIndexPath'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='selectionIndexPaths'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='sendAction'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sendsActionOnArrowKeys'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='separatesColumns'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAcceptsArrowKeys:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsBranchSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsBranchSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type64='BOOL' index='0' name='allowsEmptySelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsMultipleSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsTypeSelect:'>
<arg declared_type64='BOOL' index='0' name='allowsTypeSelect' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutohidesScroller:'>
<arg declared_type64='BOOL' index='0' name='autohidesScroller' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCellClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='factoryId' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCellPrototype:'>
<arg declared_type64='id _Nullable' index='0' name='cellPrototype' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColumnResizingType:'>
<arg declared_type64='NSBrowserColumnResizingType' index='0' name='columnResizingType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColumnsAutosaveName:'>
<arg declared_type64='NSBrowserColumnsAutosaveName _Nonnull' index='0' name='columnsAutosaveName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultColumnWidth:'>
<arg declared_type64='CGFloat' index='0' name='columnWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='doubleAction' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg declared_type64='NSDragOperation' index='0' name='mask' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='isLocal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg declared_type64='BOOL' index='0' name='hasHorizontalScroller' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLastColumn:'>
<arg declared_type64='NSInteger' index='0' name='lastColumn' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMatrixClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='factoryId' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxVisibleColumns:'>
<arg declared_type64='NSInteger' index='0' name='maxVisibleColumns' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinColumnWidth:'>
<arg declared_type64='CGFloat' index='0' name='minColumnWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPathSeparator:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='pathSeparator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrefersAllColumnUserResizing:'>
<arg declared_type64='BOOL' index='0' name='prefersAllColumnUserResizing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReusesColumns:'>
<arg declared_type64='BOOL' index='0' name='reusesColumns' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowHeight:'>
<arg declared_type64='CGFloat' index='0' name='rowHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionIndexPath:'>
<arg declared_type64='NSIndexPath * _Nullable' index='0' name='selectionIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='selectionIndexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSendsActionOnArrowKeys:'>
<arg declared_type64='BOOL' index='0' name='sendsActionOnArrowKeys' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSeparatesColumns:'>
<arg declared_type64='BOOL' index='0' name='separatesColumns' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTakesTitleFromPreviousColumn:'>
<arg declared_type64='BOOL' index='0' name='takesTitleFromPreviousColumn' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:ofColumn:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitled:'>
<arg declared_type64='BOOL' index='0' name='titled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:ofColumn:'>
<arg declared_type64='CGFloat' index='0' name='columnWidth' type64='d'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takesTitleFromPreviousColumn'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tile'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='titleFrameOfColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='titleHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='titleOfColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='updateScroller'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validateVisibleColumns'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='widthOfColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSBrowserCell'>
<method selector='alternateImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='branchImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='highlightColorInView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='controlView' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='highlightedBranchImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='initImageCell:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initTextCell:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isLeaf'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='set'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='alternateImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeaf:'>
<arg declared_type64='BOOL' index='0' name='leaf' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoaded:'>
<arg declared_type64='BOOL' index='0' name='loaded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSBundle'>
<method selector='URLForImageResource:'>
<arg declared_type64='NSImageName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='contextHelpForKey:'>
<arg declared_type64='NSHelpManagerContextHelpKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='imageForResource:'>
<arg declared_type64='NSImageName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='loadNibFile:externalNameTable:withZone:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='fileName' type64='@'/>
<arg declared_type64='NSDictionary * _Null_unspecified' index='1' name='context' type64='@'/>
<arg declared_type64='NSZone * _Null_unspecified' index='2' name='zone' type64='^{_NSZone=}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadNibFile:externalNameTable:withZone:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='fileName' type64='@'/>
<arg declared_type64='NSDictionary * _Null_unspecified' index='1' name='context' type64='@'/>
<arg declared_type64='NSZone * _Null_unspecified' index='2' name='zone' type64='^{_NSZone=}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='loadNibNamed:owner:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='nibName' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='owner' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadNibNamed:owner:topLevelObjects:'>
<arg declared_type64='NSNibName _Nonnull' index='0' name='nibName' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='owner' type64='@'/>
<arg declared_type64='NSArray * _Nullable * _Nullable' index='2' name='topLevelObjects' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pathForImageResource:'>
<arg declared_type64='NSImageName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='pathForSoundResource:'>
<arg declared_type64='NSSoundName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='NSButton'>
<method selector='activeCompressionOptions'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method selector='allowsMixedState'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='alternateImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='alternateTitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='attributedAlternateTitle'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='bezelColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='bezelStyle'>
<retval declared_type64='NSBezelStyle' type64='Q'/>
</method>
<method class_method='true' selector='buttonWithImage:target:action:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='buttonWithTitle:image:target:action:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='NSImage * _Nonnull' index='1' name='image' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='buttonWithTitle:target:action:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='checkboxWithTitle:target:action:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='compressWithPrioritizedCompressionOptions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedOptions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentTintColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg declared_type64='float * _Nonnull' index='0' name='delay' type64='^f'/>
<arg declared_type64='float * _Nonnull' index='1' name='interval' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hasDestructiveAction'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='highlight:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='imageHugsTitle'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='imagePosition'>
<retval declared_type64='NSCellImagePosition' type64='Q'/>
</method>
<method selector='imageScaling'>
<retval declared_type64='NSImageScaling' type64='Q'/>
</method>
<method selector='isBordered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSpringLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTransparent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval declared_type64='NSEventModifierFlags' type64='Q'/>
</method>
<method selector='maxAcceleratorLevel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='minimumSizeWithPrioritizedCompressionOptions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedOptions' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='radioButtonWithTitle:target:action:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAllowsMixedState:'>
<arg declared_type64='BOOL' index='0' name='allowsMixedState' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='alternateImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='alternateTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedAlternateTitle:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedAlternateTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezelColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='bezelColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezelStyle:'>
<arg declared_type64='NSBezelStyle' index='0' name='bezelStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type64='BOOL' index='0' name='bordered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setButtonType:'>
<arg declared_type64='NSButtonType' index='0' name='type' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentTintColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='contentTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasDestructiveAction:'>
<arg declared_type64='BOOL' index='0' name='hasDestructiveAction' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageHugsTitle:'>
<arg declared_type64='BOOL' index='0' name='imageHugsTitle' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImagePosition:'>
<arg declared_type64='NSCellImagePosition' index='0' name='imagePosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageScaling:'>
<arg declared_type64='NSImageScaling' index='0' name='imageScaling' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyEquivalent:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='keyEquivalent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg declared_type64='NSEventModifierFlags' index='0' name='keyEquivalentModifierMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxAcceleratorLevel:'>
<arg declared_type64='NSInteger' index='0' name='maxAcceleratorLevel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNextState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPeriodicDelay:interval:'>
<arg declared_type64='float' index='0' name='delay' type64='f'/>
<arg declared_type64='float' index='1' name='interval' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsBorderOnlyWhileMouseInside:'>
<arg declared_type64='BOOL' index='0' name='showsBorderOnlyWhileMouseInside' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSound:'>
<arg declared_type64='NSSound * _Nullable' index='0' name='sound' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpringLoaded:'>
<arg declared_type64='BOOL' index='0' name='springLoaded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setState:'>
<arg declared_type64='NSControlStateValue' index='0' name='state' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSymbolConfiguration:'>
<arg declared_type64='NSImageSymbolConfiguration * _Nullable' index='0' name='symbolConfiguration' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransparent:'>
<arg declared_type64='BOOL' index='0' name='transparent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsBorderOnlyWhileMouseInside'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sound'>
<retval declared_type64='NSSound * _Nullable' type64='@'/>
</method>
<method selector='state'>
<retval declared_type64='NSControlStateValue' type64='q'/>
</method>
<method selector='symbolConfiguration'>
<retval declared_type64='NSImageSymbolConfiguration * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSButtonCell'>
<method selector='alternateImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='alternateMnemonic'>
<retval declared_type64='NSString * _Null_unspecified' type64='@'/>
</method>
<method selector='alternateMnemonicLocation'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='alternateTitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='attributedAlternateTitle'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='bezelStyle'>
<retval declared_type64='NSBezelStyle' type64='Q'/>
</method>
<method selector='drawBezelWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawImage:withFrame:inView:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSRect' index='1' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawTitle:withFrame:inView:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='NSRect' index='1' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg declared_type64='float * _Nonnull' index='0' name='delay' type64='^f'/>
<arg declared_type64='float * _Nonnull' index='1' name='interval' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='gradientType'>
<retval declared_type64='NSGradientType' type64='Q'/>
</method>
<method selector='highlightsBy'>
<retval declared_type64='NSCellStyleMask' type64='Q'/>
</method>
<method selector='imageDimsWhenDisabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='imagePosition'>
<retval declared_type64='NSCellImagePosition' type64='Q'/>
</method>
<method selector='imageScaling'>
<retval declared_type64='NSImageScaling' type64='Q'/>
</method>
<method selector='initImageCell:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initTextCell:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTransparent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='keyEquivalentFont'>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval declared_type64='NSEventModifierFlags' type64='Q'/>
</method>
<method selector='mouseEntered:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseExited:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performClick:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='alternateImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateMnemonicLocation:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='alternateTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateTitleWithMnemonic:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedAlternateTitle:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedAlternateTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezelStyle:'>
<arg declared_type64='NSBezelStyle' index='0' name='bezelStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setButtonType:'>
<arg declared_type64='NSButtonType' index='0' name='type' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGradientType:'>
<arg declared_type64='NSGradientType' index='0' name='gradientType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlightsBy:'>
<arg declared_type64='NSCellStyleMask' index='0' name='highlightsBy' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageDimsWhenDisabled:'>
<arg declared_type64='BOOL' index='0' name='imageDimsWhenDisabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImagePosition:'>
<arg declared_type64='NSCellImagePosition' index='0' name='imagePosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageScaling:'>
<arg declared_type64='NSImageScaling' index='0' name='imageScaling' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyEquivalent:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='keyEquivalent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyEquivalentFont:'>
<arg declared_type64='NSFont * _Nullable' index='0' name='keyEquivalentFont' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyEquivalentFont:size:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fontName' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='fontSize' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg declared_type64='NSEventModifierFlags' index='0' name='keyEquivalentModifierMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPeriodicDelay:interval:'>
<arg declared_type64='float' index='0' name='delay' type64='f'/>
<arg declared_type64='float' index='1' name='interval' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsBorderOnlyWhileMouseInside:'>
<arg declared_type64='BOOL' index='0' name='showsBorderOnlyWhileMouseInside' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsStateBy:'>
<arg declared_type64='NSCellStyleMask' index='0' name='showsStateBy' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSound:'>
<arg declared_type64='NSSound * _Nullable' index='0' name='sound' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransparent:'>
<arg declared_type64='BOOL' index='0' name='transparent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsBorderOnlyWhileMouseInside'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsStateBy'>
<retval declared_type64='NSCellStyleMask' type64='Q'/>
</method>
<method selector='sound'>
<retval declared_type64='NSSound * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSButtonTouchBarItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='bezelColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='buttonTouchBarItemWithIdentifier:image:target:action:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSImage * _Nonnull' index='1' name='image' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='buttonTouchBarItemWithIdentifier:title:image:target:action:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='title' type64='@'/>
<arg declared_type64='NSImage * _Nonnull' index='2' name='image' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='4' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='buttonTouchBarItemWithIdentifier:title:target:action:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='title' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezelColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='bezelColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCIImageRep'>
<method selector='CIImage'>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageRepWithCIImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCIImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCachedImageRep'>
<method selector='initWithSize:depth:separate:alpha:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSWindowDepth' index='1' name='depth' type64='i'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<arg declared_type64='BOOL' index='3' name='alpha' type64='B'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='initWithWindow:rect:'>
<arg declared_type64='NSWindow*' index='0' name='win' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='rect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='window'>
<retval declared_type64='NSWindow*' type64='@'/>
</method>
</class>
<class name='NSCandidateListTouchBarItem'>
<method selector='allowsCollapsing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsTextInputContextCandidates'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attributedStringForCandidate'>
<retval declared_type64='NSAttributedString * _Nonnull (^ _Nullable)(CandidateType _Nonnull, NSInteger)' function_pointer='true' type64='@?'>
<arg declared_type64='CandidateType _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</retval>
</method>
<method selector='candidates'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='client'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isCandidateListVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCollapsed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAllowsCollapsing:'>
<arg declared_type64='BOOL' index='0' name='allowsCollapsing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsTextInputContextCandidates:'>
<arg declared_type64='BOOL' index='0' name='allowsTextInputContextCandidates' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedStringForCandidate:'>
<arg declared_type64='NSAttributedString * _Nonnull (^ _Nullable)(CandidateType _Nonnull, NSInteger)' function_pointer='true' index='0' name='attributedStringForCandidate' type64='@?'>
<arg declared_type64='CandidateType _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCandidates:forSelectedRange:inString:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='candidates' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nullable' index='2' name='originalString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClient:'>
<arg declared_type64='NSView * _Nullable' index='0' name='client' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollapsed:'>
<arg declared_type64='BOOL' index='0' name='collapsed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateWithInsertionPointVisibility:'>
<arg declared_type64='BOOL' index='0' name='isVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCell'>
<method selector='acceptsFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsMixedState'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsUndo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attributedStringValue'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='backgroundStyle'>
<retval declared_type64='NSBackgroundStyle' type64='q'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method selector='calcDrawInfo:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cellAttribute:'>
<arg declared_type64='NSCellAttribute' index='0' name='parameter' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='cellSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='cellSizeForBounds:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='compare:'>
<arg declared_type64='id _Nonnull' index='0' name='otherCell' type64='@'/>
<retval declared_type64='NSComparisonResult' type64='q'/>
</method>
<method selector='continueTracking:at:inView:'>
<arg declared_type64='NSPoint' index='0' name='lastPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='1' name='currentPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='controlSize'>
<retval declared_type64='NSControlSize' type64='Q'/>
</method>
<method selector='controlTint'>
<retval declared_type64='NSControlTint' type64='Q'/>
</method>
<method selector='controlView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='defaultFocusRingType'>
<retval declared_type64='NSFocusRingType' type64='Q'/>
</method>
<method class_method='true' selector='defaultMenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='draggingImageComponentsWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='drawFocusRingMaskWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInteriorWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithExpansionFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawingRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='editWithFrame:inView:editor:delegate:event:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<arg declared_type64='NSText * _Nonnull' index='2' name='textObj' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='delegate' type64='@'/>
<arg declared_type64='NSEvent * _Nullable' index='4' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='entryType'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='expansionFrameWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='fieldEditorForView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='controlView' type64='@'/>
<retval declared_type64='NSTextView * _Nullable' type64='@'/>
</method>
<method selector='floatValue'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='focusRingMaskBoundsForFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='focusRingType'>
<retval declared_type64='NSFocusRingType' type64='Q'/>
</method>
<method selector='font'>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='formatter'>
<retval declared_type64='__kindof NSFormatter * _Nullable' type64='@'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg declared_type64='float * _Nonnull' index='0' name='delay' type64='^f'/>
<arg declared_type64='float * _Nonnull' index='1' name='interval' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hasValidObjectValue'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='highlight:withFrame:inView:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='highlightColorWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='hitTestForEvent:inRect:ofView:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<retval declared_type64='NSCellHitResult' type64='Q'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='imageRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='importsGraphics'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initImageCell:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initTextCell:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='intValue'>
<retval declared_type64='int' type64='i'/>
</method>
<method selector='integerValue'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='interiorBackgroundStyle'>
<retval declared_type64='NSBackgroundStyle' type64='q'/>
</method>
<method selector='isBezeled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isBordered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isContinuous'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEntryAcceptable:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isScrollable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='Q'/>
</method>
<method selector='menu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='menuForEvent:inRect:ofView:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='view' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='mnemonic'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='mnemonicLocation'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='mouseDownFlags'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='nextState'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='objectValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='performClick:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='prefersTrackingUntilMouseUp'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='refusesFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='representedObject'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='resetCursorRect:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectWithFrame:inView:editor:delegate:start:length:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<arg declared_type64='NSText * _Nonnull' index='2' name='textObj' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='delegate' type64='@'/>
<arg declared_type64='NSInteger' index='4' name='selStart' type64='q'/>
<arg declared_type64='NSInteger' index='5' name='selLength' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendActionOn:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='sendsActionOnEndEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg declared_type64='BOOL' index='0' name='allowsEditingTextAttributes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsMixedState:'>
<arg declared_type64='BOOL' index='0' name='allowsMixedState' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsUndo:'>
<arg declared_type64='BOOL' index='0' name='allowsUndo' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedStringValue:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedStringValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundStyle:'>
<arg declared_type64='NSBackgroundStyle' index='0' name='backgroundStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type64='NSWritingDirection' index='0' name='baseWritingDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type64='BOOL' index='0' name='bezeled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type64='BOOL' index='0' name='bordered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCellAttribute:to:'>
<arg declared_type64='NSCellAttribute' index='0' name='parameter' type64='Q'/>
<arg declared_type64='NSInteger' index='1' name='value' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type64='BOOL' index='0' name='continuous' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type64='NSControlSize' index='0' name='controlSize' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlTint:'>
<arg declared_type64='NSControlTint' index='0' name='controlTint' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleValue:'>
<arg declared_type64='double' index='0' name='doubleValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEntryType:'>
<arg declared_type64='NSInteger' index='0' name='type' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloatValue:'>
<arg declared_type64='float' index='0' name='floatValue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloatingPointFormat:left:right:'>
<arg declared_type64='BOOL' index='0' name='autoRange' type64='B'/>
<arg declared_type64='NSUInteger' index='1' name='leftDigits' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='rightDigits' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusRingType:'>
<arg declared_type64='NSFocusRingType' index='0' name='focusRingType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='NSFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFormatter:'>
<arg declared_type64='__kindof NSFormatter * _Nullable' index='0' name='formatter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImportsGraphics:'>
<arg declared_type64='BOOL' index='0' name='importsGraphics' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntValue:'>
<arg declared_type64='int' index='0' name='intValue' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntegerValue:'>
<arg declared_type64='NSInteger' index='0' name='integerValue' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type64='NSLineBreakMode' index='0' name='lineBreakMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMnemonicLocation:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNextState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObjectValue:'>
<arg declared_type64='id _Nullable' index='0' name='objectValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRefusesFirstResponder:'>
<arg declared_type64='BOOL' index='0' name='refusesFirstResponder' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='representedObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollable:'>
<arg declared_type64='BOOL' index='0' name='scrollable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type64='BOOL' index='0' name='selectable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSendsActionOnEndEditing:'>
<arg declared_type64='BOOL' index='0' name='sendsActionOnEndEditing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsFirstResponder:'>
<arg declared_type64='BOOL' index='0' name='showsFirstResponder' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setState:'>
<arg declared_type64='NSControlStateValue' index='0' name='state' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStringValue:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringWithAmpersand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTruncatesLastVisibleLine:'>
<arg declared_type64='BOOL' index='0' name='truncatesLastVisibleLine' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setType:'>
<arg declared_type64='NSCellType' index='0' name='type' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUpFieldEditorAttributes:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObj' type64='@'/>
<retval declared_type64='NSText * _Nonnull' type64='@'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type64='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesSingleLineMode:'>
<arg declared_type64='BOOL' index='0' name='usesSingleLineMode' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWraps:'>
<arg declared_type64='BOOL' index='0' name='wraps' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='startTrackingAt:inView:'>
<arg declared_type64='NSPoint' index='0' name='startPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='state'>
<retval declared_type64='NSControlStateValue' type64='q'/>
</method>
<method selector='stopTracking:at:inView:mouseIsUp:'>
<arg declared_type64='NSPoint' index='0' name='lastPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='1' name='stopPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stringValue'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='takeDoubleValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeFloatValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeIntValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeIntegerValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeObjectValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeStringValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='titleRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='truncatesLastVisibleLine'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='type'>
<retval declared_type64='NSCellType' type64='Q'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type64='NSUserInterfaceLayoutDirection' type64='q'/>
</method>
<method selector='usesSingleLineMode'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsNotificationForMarkedText'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wraps'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSClickGestureRecognizer'>
<method selector='buttonMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfClicksRequired'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setButtonMask:'>
<arg declared_type64='NSUInteger' index='0' name='buttonMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfClicksRequired:'>
<arg declared_type64='NSInteger' index='0' name='numberOfClicksRequired' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type64='NSInteger' index='0' name='numberOfTouchesRequired' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSClipView'>
<method selector='automaticallyAdjustsContentInsets'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autoscroll:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='constrainBoundsRect:'>
<arg declared_type64='NSRect' index='0' name='proposedBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='constrainScrollPoint:'>
<arg declared_type64='NSPoint' index='0' name='newOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='contentInsets'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='copiesOnScroll'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='documentCursor'>
<retval declared_type64='NSCursor * _Nullable' type64='@'/>
</method>
<method selector='documentRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='documentView'>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
<method selector='documentVisibleRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scrollToPoint:'>
<arg declared_type64='NSPoint' index='0' name='newOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyAdjustsContentInsets:'>
<arg declared_type64='BOOL' index='0' name='automaticallyAdjustsContentInsets' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentInsets:'>
<arg declared_type64='NSEdgeInsets' index='0' name='contentInsets' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCopiesOnScroll:'>
<arg declared_type64='BOOL' index='0' name='copiesOnScroll' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDocumentCursor:'>
<arg declared_type64='NSCursor * _Nullable' index='0' name='documentCursor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDocumentView:'>
<arg declared_type64='__kindof NSView * _Nullable' index='0' name='documentView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewBoundsChanged:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewFrameChanged:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeNXColor'>
<retval declared_type64='NSColor * _Null_unspecified' type64='@'/>
</method>
</class>
<class name='NSCollectionLayoutAnchor'>
<method selector='edges'>
<retval declared_type64='NSDirectionalRectEdge' type64='Q'/>
</method>
<method selector='isAbsoluteOffset'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFractionalOffset'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='layoutAnchorWithEdges:'>
<arg declared_type64='NSDirectionalRectEdge' index='0' name='edges' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAnchorWithEdges:absoluteOffset:'>
<arg declared_type64='NSDirectionalRectEdge' index='0' name='edges' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='absoluteOffset' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAnchorWithEdges:fractionalOffset:'>
<arg declared_type64='NSDirectionalRectEdge' index='0' name='edges' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='fractionalOffset' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='offset'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='NSCollectionLayoutBoundarySupplementaryItem'>
<method selector='alignment'>
<retval declared_type64='NSRectAlignment' type64='q'/>
</method>
<method class_method='true' selector='boundarySupplementaryItemWithLayoutSize:elementKind:alignment:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='elementKind' type64='@'/>
<arg declared_type64='NSRectAlignment' index='2' name='alignment' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='elementKind' type64='@'/>
<arg declared_type64='NSRectAlignment' index='2' name='alignment' type64='q'/>
<arg declared_type64='NSPoint' index='3' name='absoluteOffset' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='extendsBoundary'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='offset'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='pinToVisibleBounds'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setExtendsBoundary:'>
<arg declared_type64='BOOL' index='0' name='extendsBoundary' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPinToVisibleBounds:'>
<arg declared_type64='BOOL' index='0' name='pinToVisibleBounds' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCollectionLayoutDecorationItem'>
<method class_method='true' selector='backgroundDecorationItemWithElementKind:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='elementKind'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='setZIndex:'>
<arg declared_type64='NSInteger' index='0' name='zIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='zIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSCollectionLayoutDimension'>
<method class_method='true' selector='absoluteDimension:'>
<arg declared_type64='CGFloat' index='0' name='absoluteDimension' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='dimension'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='estimatedDimension:'>
<arg declared_type64='CGFloat' index='0' name='estimatedDimension' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fractionalHeightDimension:'>
<arg declared_type64='CGFloat' index='0' name='fractionalHeight' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fractionalWidthDimension:'>
<arg declared_type64='CGFloat' index='0' name='fractionalWidth' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAbsolute'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEstimated'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFractionalHeight'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFractionalWidth'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSCollectionLayoutEdgeSpacing'>
<method selector='bottom'>
<retval declared_type64='NSCollectionLayoutSpacing * _Nullable' type64='@'/>
</method>
<method selector='leading'>
<retval declared_type64='NSCollectionLayoutSpacing * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='spacingForLeading:top:trailing:bottom:'>
<arg declared_type64='NSCollectionLayoutSpacing * _Nullable' index='0' name='leading' type64='@'/>
<arg declared_type64='NSCollectionLayoutSpacing * _Nullable' index='1' name='top' type64='@'/>
<arg declared_type64='NSCollectionLayoutSpacing * _Nullable' index='2' name='trailing' type64='@'/>
<arg declared_type64='NSCollectionLayoutSpacing * _Nullable' index='3' name='bottom' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='top'>
<retval declared_type64='NSCollectionLayoutSpacing * _Nullable' type64='@'/>
</method>
<method selector='trailing'>
<retval declared_type64='NSCollectionLayoutSpacing * _Nullable' type64='@'/>
</method>
</class>
<class name='NSCollectionLayoutGroup'>
<method class_method='true' selector='customGroupWithLayoutSize:itemProvider:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSCollectionLayoutGroupCustomItemProvider _Nonnull' function_pointer='true' index='1' name='itemProvider' type64='@?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='horizontalGroupWithLayoutSize:subitem:count:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSCollectionLayoutItem * _Nonnull' index='1' name='subitem' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='count' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='horizontalGroupWithLayoutSize:subitems:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='subitems' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='interItemSpacing'>
<retval declared_type64='NSCollectionLayoutSpacing * _Nullable' type64='@'/>
</method>
<method selector='setInterItemSpacing:'>
<arg declared_type64='NSCollectionLayoutSpacing * _Nullable' index='0' name='interItemSpacing' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupplementaryItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='supplementaryItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='subitems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='supplementaryItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='verticalGroupWithLayoutSize:subitem:count:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSCollectionLayoutItem * _Nonnull' index='1' name='subitem' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='count' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='verticalGroupWithLayoutSize:subitems:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='subitems' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='visualDescription'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCollectionLayoutGroupCustomItem'>
<method class_method='true' selector='customItemWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='customItemWithFrame:zIndex:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' index='1' name='zIndex' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='zIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSCollectionLayoutItem'>
<method selector='contentInsets'>
<retval declared_type64='NSDirectionalEdgeInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='edgeSpacing'>
<retval declared_type64='NSCollectionLayoutEdgeSpacing * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='itemWithLayoutSize:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='itemWithLayoutSize:supplementaryItems:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='supplementaryItems' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='layoutSize'>
<retval declared_type64='NSCollectionLayoutSize * _Nonnull' type64='@'/>
</method>
<method selector='setContentInsets:'>
<arg declared_type64='NSDirectionalEdgeInsets' index='0' name='contentInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEdgeSpacing:'>
<arg declared_type64='NSCollectionLayoutEdgeSpacing * _Nullable' index='0' name='edgeSpacing' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supplementaryItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCollectionLayoutSection'>
<method selector='boundarySupplementaryItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='contentInsets'>
<retval declared_type64='NSDirectionalEdgeInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='decorationItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='interGroupSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='orthogonalScrollingBehavior'>
<retval declared_type64='NSCollectionLayoutSectionOrthogonalScrollingBehavior' type64='q'/>
</method>
<method class_method='true' selector='sectionWithGroup:'>
<arg declared_type64='NSCollectionLayoutGroup * _Nonnull' index='0' name='group' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBoundarySupplementaryItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='boundarySupplementaryItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentInsets:'>
<arg declared_type64='NSDirectionalEdgeInsets' index='0' name='contentInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDecorationItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='decorationItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInterGroupSpacing:'>
<arg declared_type64='CGFloat' index='0' name='interGroupSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrthogonalScrollingBehavior:'>
<arg declared_type64='NSCollectionLayoutSectionOrthogonalScrollingBehavior' index='0' name='orthogonalScrollingBehavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupplementariesFollowContentInsets:'>
<arg declared_type64='BOOL' index='0' name='supplementariesFollowContentInsets' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVisibleItemsInvalidationHandler:'>
<arg declared_type64='NSCollectionLayoutSectionVisibleItemsInvalidationHandler _Nullable' function_pointer='true' index='0' name='visibleItemsInvalidationHandler' type64='@?'>
<arg declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
<arg declared_type64='NSPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supplementariesFollowContentInsets'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='visibleItemsInvalidationHandler'>
<retval declared_type64='NSCollectionLayoutSectionVisibleItemsInvalidationHandler _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
<arg declared_type64='NSPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</retval>
</method>
</class>
<class name='NSCollectionLayoutSize'>
<method selector='heightDimension'>
<retval declared_type64='NSCollectionLayoutDimension * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sizeWithWidthDimension:heightDimension:'>
<arg declared_type64='NSCollectionLayoutDimension * _Nonnull' index='0' name='width' type64='@'/>
<arg declared_type64='NSCollectionLayoutDimension * _Nonnull' index='1' name='height' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='widthDimension'>
<retval declared_type64='NSCollectionLayoutDimension * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCollectionLayoutSpacing'>
<method class_method='true' selector='fixedSpacing:'>
<arg declared_type64='CGFloat' index='0' name='fixedSpacing' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='flexibleSpacing:'>
<arg declared_type64='CGFloat' index='0' name='flexibleSpacing' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isFixedSpacing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlexibleSpacing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='spacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSCollectionLayoutSupplementaryItem'>
<method selector='containerAnchor'>
<retval declared_type64='NSCollectionLayoutAnchor * _Nonnull' type64='@'/>
</method>
<method selector='elementKind'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='itemAnchor'>
<retval declared_type64='NSCollectionLayoutAnchor * _Nullable' type64='@'/>
</method>
<method selector='setZIndex:'>
<arg declared_type64='NSInteger' index='0' name='zIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='supplementaryItemWithLayoutSize:elementKind:containerAnchor:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='elementKind' type64='@'/>
<arg declared_type64='NSCollectionLayoutAnchor * _Nonnull' index='2' name='containerAnchor' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='supplementaryItemWithLayoutSize:elementKind:containerAnchor:itemAnchor:'>
<arg declared_type64='NSCollectionLayoutSize * _Nonnull' index='0' name='layoutSize' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='elementKind' type64='@'/>
<arg declared_type64='NSCollectionLayoutAnchor * _Nonnull' index='2' name='containerAnchor' type64='@'/>
<arg declared_type64='NSCollectionLayoutAnchor * _Nonnull' index='3' name='itemAnchor' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='zIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSCollectionView'>
<method selector='allowsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='backgroundView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='backgroundViewScrollsWithContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionViewLayout'>
<retval declared_type64='__kindof NSCollectionViewLayout * _Nullable' type64='@'/>
</method>
<method selector='content'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deleteItemsAtIndexPaths:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteSections:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deselectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deselectItemsAtIndexPaths:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingImageForItemsAtIndexPaths:withEvent:offset:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='indexPaths' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='2' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='draggingImageForItemsAtIndexes:withEvent:offset:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='2' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='frameForItemAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameForItemAtIndex:withNumberOfItems:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSUInteger' index='1' name='numberOfItems' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indexPathForItem:'>
<arg declared_type64='NSCollectionViewItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathForItemAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathsForVisibleItems'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='indexPathsForVisibleSupplementaryElementsOfKind:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='insertItemsAtIndexPaths:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSections:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='NSCollectionViewItem * _Nullable' type64='@'/>
</method>
<method selector='itemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewItem * _Nullable' type64='@'/>
</method>
<method selector='itemPrototype'>
<retval declared_type64='NSCollectionViewItem * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='kind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='makeItemWithIdentifier:forIndexPath:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='__kindof NSCollectionViewItem * _Nonnull' type64='@'/>
</method>
<method selector='makeSupplementaryViewOfKind:withIdentifier:forIndexPath:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='__kindof NSView * _Nonnull' type64='@'/>
</method>
<method selector='maxItemSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='maxNumberOfColumns'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='maxNumberOfRows'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='minItemSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='moveItemAtIndexPath:toIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='newIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveSection:toSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='newSection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='newItemForRepresentedObject:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='NSCollectionViewItem * _Nonnull' type64='@'/>
</method>
<method selector='numberOfItemsInSection:'>
<arg declared_type64='NSInteger' index='0' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSections'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='performBatchUpdates:completionHandler:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='updates' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prefetchDataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='registerClass:forItemWithIdentifier:'>
<arg declared_type64='Class _Nullable' index='0' name='itemClass' type64='#'/>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerClass:forSupplementaryViewOfKind:withIdentifier:'>
<arg declared_type64='Class _Nullable' index='0' name='viewClass' type64='#'/>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='1' name='kind' type64='@'/>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='2' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forItemWithIdentifier:'>
<arg declared_type64='NSNib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forSupplementaryViewOfKind:withIdentifier:'>
<arg declared_type64='NSNib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='1' name='kind' type64='@'/>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='2' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadItemsAtIndexPaths:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadSections:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='sections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollToItemsAtIndexPaths:scrollPosition:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='indexPaths' type64='@'/>
<arg declared_type64='NSCollectionViewScrollPosition' index='1' name='scrollPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemsAtIndexPaths:scrollPosition:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='indexPaths' type64='@'/>
<arg declared_type64='NSCollectionViewScrollPosition' index='1' name='scrollPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectionIndexPaths'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='selectionIndexes'>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type64='BOOL' index='0' name='allowsEmptySelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsMultipleSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColors:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='backgroundColors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='backgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundViewScrollsWithContent:'>
<arg declared_type64='BOOL' index='0' name='backgroundViewScrollsWithContent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollectionViewLayout:'>
<arg declared_type64='__kindof NSCollectionViewLayout * _Nullable' index='0' name='collectionViewLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContent:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='content' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg declared_type64='NSDragOperation' index='0' name='dragOperationMask' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='localDestination' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemPrototype:'>
<arg declared_type64='NSCollectionViewItem * _Nullable' index='0' name='itemPrototype' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxItemSize:'>
<arg declared_type64='NSSize' index='0' name='maxItemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxNumberOfColumns:'>
<arg declared_type64='NSUInteger' index='0' name='maxNumberOfColumns' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxNumberOfRows:'>
<arg declared_type64='NSUInteger' index='0' name='maxNumberOfRows' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinItemSize:'>
<arg declared_type64='NSSize' index='0' name='minItemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrefetchDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='prefetchDataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type64='BOOL' index='0' name='selectable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionIndexPaths:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='selectionIndexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='selectionIndexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supplementaryViewForElementKind:atIndexPath:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='toggleSectionCollapse:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='visibleItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='visibleSupplementaryViewsOfKind:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSArray *&gt; * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCollectionViewCompositionalLayout'>
<method selector='configuration'>
<retval declared_type64='NSCollectionViewCompositionalLayoutConfiguration * _Nonnull' type64='@'/>
</method>
<method selector='initWithSection:'>
<arg declared_type64='NSCollectionLayoutSection * _Nonnull' index='0' name='section' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSection:configuration:'>
<arg declared_type64='NSCollectionLayoutSection * _Nonnull' index='0' name='section' type64='@'/>
<arg declared_type64='NSCollectionViewCompositionalLayoutConfiguration * _Nonnull' index='1' name='configuration' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSectionProvider:'>
<arg declared_type64='NSCollectionViewCompositionalLayoutSectionProvider _Nonnull' function_pointer='true' index='0' name='sectionProvider' type64='@?'>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='NSCollectionLayoutSection * _Nullable' type64='@'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSectionProvider:configuration:'>
<arg declared_type64='NSCollectionViewCompositionalLayoutSectionProvider _Nonnull' function_pointer='true' index='0' name='sectionProvider' type64='@?'>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='NSCollectionLayoutSection * _Nullable' type64='@'/>
</arg>
<arg declared_type64='NSCollectionViewCompositionalLayoutConfiguration * _Nonnull' index='1' name='configuration' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setConfiguration:'>
<arg declared_type64='NSCollectionViewCompositionalLayoutConfiguration * _Nonnull' index='0' name='configuration' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCollectionViewCompositionalLayoutConfiguration'>
<method selector='boundarySupplementaryItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='interSectionSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scrollDirection'>
<retval declared_type64='NSCollectionViewScrollDirection' type64='q'/>
</method>
<method selector='setBoundarySupplementaryItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='boundarySupplementaryItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInterSectionSpacing:'>
<arg declared_type64='CGFloat' index='0' name='interSectionSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollDirection:'>
<arg declared_type64='NSCollectionViewScrollDirection' index='0' name='scrollDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCollectionViewDiffableDataSource'>
<method selector='applySnapshot:animatingDifferences:'>
<arg declared_type64='NSDiffableDataSourceSnapshot * _Nonnull' index='0' name='snapshot' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animatingDifferences' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexPathForItemIdentifier:'>
<arg declared_type64='ItemIdentifierType _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='initWithCollectionView:itemProvider:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewDiffableDataSourceItemProvider _Nonnull' function_pointer='true' index='1' name='itemProvider' type64='@?'>
<arg declared_type64='NSCollectionView * _Nonnull' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' type64='@'/>
<arg declared_type64='ItemIdentifierType _Nonnull' type64='@'/>
<retval declared_type64='NSCollectionViewItem * _Nullable' type64='@'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='itemIdentifierForIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='ItemIdentifierType _Nullable' type64='@'/>
</method>
<method selector='setSupplementaryViewProvider:'>
<arg declared_type64='NSCollectionViewDiffableDataSourceSupplementaryViewProvider _Nullable' function_pointer='true' index='0' name='supplementaryViewProvider' type64='@?'>
<arg declared_type64='NSCollectionView * _Nonnull' type64='@'/>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' type64='@'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='snapshot'>
<retval declared_type64='NSDiffableDataSourceSnapshot * _Nonnull' type64='@'/>
</method>
<method selector='supplementaryViewProvider'>
<retval declared_type64='NSCollectionViewDiffableDataSourceSupplementaryViewProvider _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='NSCollectionView * _Nonnull' type64='@'/>
<arg declared_type64='NSString * _Nonnull' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' type64='@'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</retval>
</method>
</class>
<class name='NSCollectionViewFlowLayout'>
<method selector='collapseSectionAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='sectionIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='estimatedItemSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='expandSectionAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='sectionIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='footerReferenceSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='headerReferenceSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='itemSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='minimumInteritemSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumLineSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scrollDirection'>
<retval declared_type64='NSCollectionViewScrollDirection' type64='q'/>
</method>
<method selector='sectionAtIndexIsCollapsed:'>
<arg declared_type64='NSUInteger' index='0' name='sectionIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sectionFootersPinToVisibleBounds'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sectionHeadersPinToVisibleBounds'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sectionInset'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='setEstimatedItemSize:'>
<arg declared_type64='NSSize' index='0' name='estimatedItemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFooterReferenceSize:'>
<arg declared_type64='NSSize' index='0' name='footerReferenceSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeaderReferenceSize:'>
<arg declared_type64='NSSize' index='0' name='headerReferenceSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemSize:'>
<arg declared_type64='NSSize' index='0' name='itemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumInteritemSpacing:'>
<arg declared_type64='CGFloat' index='0' name='minimumInteritemSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumLineSpacing:'>
<arg declared_type64='CGFloat' index='0' name='minimumLineSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollDirection:'>
<arg declared_type64='NSCollectionViewScrollDirection' index='0' name='scrollDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionFootersPinToVisibleBounds:'>
<arg declared_type64='BOOL' index='0' name='sectionFootersPinToVisibleBounds' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionHeadersPinToVisibleBounds:'>
<arg declared_type64='BOOL' index='0' name='sectionHeadersPinToVisibleBounds' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionInset:'>
<arg declared_type64='NSEdgeInsets' index='0' name='sectionInset' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCollectionViewFlowLayoutInvalidationContext'>
<method selector='invalidateFlowLayoutAttributes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='invalidateFlowLayoutDelegateMetrics'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setInvalidateFlowLayoutAttributes:'>
<arg declared_type64='BOOL' index='0' name='invalidateFlowLayoutAttributes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInvalidateFlowLayoutDelegateMetrics:'>
<arg declared_type64='BOOL' index='0' name='invalidateFlowLayoutDelegateMetrics' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCollectionViewGridLayout'>
<method selector='backgroundColors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='margins'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='maximumItemSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='maximumNumberOfColumns'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='maximumNumberOfRows'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='minimumInteritemSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumItemSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='minimumLineSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setBackgroundColors:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='backgroundColors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMargins:'>
<arg declared_type64='NSEdgeInsets' index='0' name='margins' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumItemSize:'>
<arg declared_type64='NSSize' index='0' name='maximumItemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumNumberOfColumns:'>
<arg declared_type64='NSUInteger' index='0' name='maximumNumberOfColumns' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumNumberOfRows:'>
<arg declared_type64='NSUInteger' index='0' name='maximumNumberOfRows' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumInteritemSpacing:'>
<arg declared_type64='CGFloat' index='0' name='minimumInteritemSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumItemSize:'>
<arg declared_type64='NSSize' index='0' name='minimumItemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumLineSpacing:'>
<arg declared_type64='CGFloat' index='0' name='minimumLineSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCollectionViewItem'>
<method selector='collectionView'>
<retval declared_type64='NSCollectionView * _Nullable' type64='@'/>
</method>
<method selector='draggingImageComponents'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='highlightState'>
<retval declared_type64='NSCollectionViewItemHighlightState' type64='q'/>
</method>
<method selector='imageView'>
<retval declared_type64='NSImageView * _Nullable' type64='@'/>
</method>
<method selector='isSelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setHighlightState:'>
<arg declared_type64='NSCollectionViewItemHighlightState' index='0' name='highlightState' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageView:'>
<arg declared_type64='NSImageView * _Nullable' index='0' name='imageView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextField:'>
<arg declared_type64='NSTextField * _Nullable' index='0' name='textField' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textField'>
<retval declared_type64='NSTextField * _Nullable' type64='@'/>
</method>
</class>
<class name='NSCollectionViewLayout'>
<method selector='collectionView'>
<retval declared_type64='NSCollectionView * _Nullable' type64='@'/>
</method>
<method selector='collectionViewContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='decorationIndexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='finalLayoutAttributesForDisappearingItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='itemIndexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='elementIndexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='finalizeAnimatedBoundsChange'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finalizeCollectionViewUpdates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finalizeLayoutTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexPathsToDeleteForDecorationViewOfKind:'>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='indexPathsToDeleteForSupplementaryViewOfKind:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='indexPathsToInsertForDecorationViewOfKind:'>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='indexPathsToInsertForSupplementaryViewOfKind:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='decorationIndexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='itemIndexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='elementIndexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='invalidateLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateLayoutWithContext:'>
<arg declared_type64='NSCollectionViewLayoutInvalidationContext * _Nonnull' index='0' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='invalidationContextClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='invalidationContextForBoundsChange:'>
<arg declared_type64='NSRect' index='0' name='newBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSCollectionViewLayoutInvalidationContext * _Nonnull' type64='@'/>
</method>
<method selector='invalidationContextForPreferredLayoutAttributes:withOriginalAttributes:'>
<arg declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='preferredAttributes' type64='@'/>
<arg declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' index='1' name='originalAttributes' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutInvalidationContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAttributesClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='layoutAttributesForDecorationViewOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForDropTargetAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='pointInCollectionView' type64='{CGPoint=dd}'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForElementsInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='layoutAttributesForInterItemGapBeforeIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForItemAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForSupplementaryViewOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='prepareForAnimatedBoundsChange:'>
<arg declared_type64='NSRect' index='0' name='oldBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForCollectionViewUpdates:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='updateItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForTransitionFromLayout:'>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForTransitionToLayout:'>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='0' name='newLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerClass:forDecorationViewOfKind:'>
<arg declared_type64='Class _Nullable' index='0' name='viewClass' type64='#'/>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='1' name='elementKind' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forDecorationViewOfKind:'>
<arg declared_type64='NSNib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='1' name='elementKind' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldInvalidateLayoutForBoundsChange:'>
<arg declared_type64='NSRect' index='0' name='newBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:'>
<arg declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='preferredAttributes' type64='@'/>
<arg declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' index='1' name='originalAttributes' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='targetContentOffsetForProposedContentOffset:'>
<arg declared_type64='NSPoint' index='0' name='proposedContentOffset' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='targetContentOffsetForProposedContentOffset:withScrollingVelocity:'>
<arg declared_type64='NSPoint' index='0' name='proposedContentOffset' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='1' name='velocity' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='NSCollectionViewLayoutAttributes'>
<method selector='alpha'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indexPath'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='layoutAttributesForDecorationViewOfKind:withIndexPath:'>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='decorationViewKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAttributesForInterItemGapBeforeIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAttributesForItemWithIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutAttributesForSupplementaryViewOfKind:withIndexPath:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='representedElementCategory'>
<retval declared_type64='NSCollectionElementCategory' type64='q'/>
</method>
<method selector='representedElementKind'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type64='CGFloat' index='0' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndexPath:'>
<arg declared_type64='NSIndexPath * _Nullable' index='0' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZIndex:'>
<arg declared_type64='NSInteger' index='0' name='zIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='size'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='zIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSCollectionViewLayoutInvalidationContext'>
<method selector='contentOffsetAdjustment'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='contentSizeAdjustment'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='invalidateDataSourceCounts'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='invalidateDecorationElementsOfKind:atIndexPaths:'>
<arg declared_type64='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateEverything'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='invalidateItemsAtIndexPaths:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateSupplementaryElementsOfKind:atIndexPaths:'>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidatedDecorationIndexPaths'>
<retval declared_type64='NSDictionary *&gt; * _Nullable' type64='@'/>
</method>
<method selector='invalidatedItemIndexPaths'>
<retval declared_type64='NSSet * _Nullable' type64='@'/>
</method>
<method selector='invalidatedSupplementaryIndexPaths'>
<retval declared_type64='NSDictionary *&gt; * _Nullable' type64='@'/>
</method>
<method selector='setContentOffsetAdjustment:'>
<arg declared_type64='NSPoint' index='0' name='contentOffsetAdjustment' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentSizeAdjustment:'>
<arg declared_type64='NSSize' index='0' name='contentSizeAdjustment' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCollectionViewTransitionLayout'>
<method selector='currentLayout'>
<retval declared_type64='NSCollectionViewLayout * _Nonnull' type64='@'/>
</method>
<method selector='initWithCurrentLayout:nextLayout:'>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='0' name='currentLayout' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='nextLayout'>
<retval declared_type64='NSCollectionViewLayout * _Nonnull' type64='@'/>
</method>
<method selector='setTransitionProgress:'>
<arg declared_type64='CGFloat' index='0' name='transitionProgress' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transitionProgress'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='updateValue:forAnimatedKey:'>
<arg declared_type64='CGFloat' index='0' name='value' type64='d'/>
<arg declared_type64='NSCollectionViewTransitionLayoutAnimatedKey _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='valueForAnimatedKey:'>
<arg declared_type64='NSCollectionViewTransitionLayoutAnimatedKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSCollectionViewUpdateItem'>
<method selector='indexPathAfterUpdate'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='indexPathBeforeUpdate'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='updateAction'>
<retval declared_type64='NSCollectionUpdateAction' type64='q'/>
</method>
</class>
<class name='NSColor'>
<method selector='CGColor'>
<retval declared_type64='CGColorRef _Nonnull' type64='^{CGColor=}'/>
</method>
<method selector='alphaComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='alternateSelectedControlColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='alternateSelectedControlTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='alternatingContentBackgroundColors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='blackColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='blackComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='blendedColorWithFraction:ofColor:'>
<arg declared_type64='CGFloat' index='0' name='fraction' type64='d'/>
<arg declared_type64='NSColor * _Nonnull' index='1' name='color' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='blueColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='blueComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='brightnessComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='brownColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='catalogNameComponent'>
<retval declared_type64='NSColorListName _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='clearColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorForControlTint:'>
<arg declared_type64='NSControlTint' index='0' name='controlTint' type64='Q'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorFromPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteBoard' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='colorNameComponent'>
<retval declared_type64='NSColorName _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorNamed:'>
<arg declared_type64='NSColorName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='colorNamed:bundle:'>
<arg declared_type64='NSColorName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='bundle' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='colorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method selector='colorSpaceName'>
<retval declared_type64='NSColorSpaceName _Nonnull' type64='@'/>
</method>
<method selector='colorUsingColorSpace:'>
<arg declared_type64='NSColorSpace * _Nonnull' index='0' name='space' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='colorUsingColorSpaceName:'>
<arg declared_type64='NSColorSpaceName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='colorUsingColorSpaceName:device:'>
<arg declared_type64='NSColorSpaceName _Nullable' index='0' name='name' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='deviceDescription' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='colorUsingType:'>
<arg declared_type64='NSColorType' index='0' name='type' type64='q'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg declared_type64='CGFloat' index='0' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg declared_type64='CGColorRef _Nonnull' index='0' name='cgColor' type64='^{CGColor=}'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='colorWithCIColor:'>
<arg declared_type64='CIColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithCalibratedHue:saturation:brightness:alpha:'>
<arg declared_type64='CGFloat' index='0' name='hue' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='saturation' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='brightness' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithCalibratedRed:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='red' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='green' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='blue' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithCalibratedWhite:alpha:'>
<arg declared_type64='CGFloat' index='0' name='white' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithCatalogName:colorName:'>
<arg declared_type64='NSColorListName _Nonnull' index='0' name='listName' type64='@'/>
<arg declared_type64='NSColorName _Nonnull' index='1' name='colorName' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='colorWithColorSpace:components:count:'>
<arg declared_type64='NSColorSpace * _Nonnull' index='0' name='space' type64='@'/>
<arg const='true' declared_type64='CGFloat * _Nonnull' index='1' name='components' type64='^d'/>
<arg declared_type64='NSInteger' index='2' name='numberOfComponents' type64='q'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithColorSpace:hue:saturation:brightness:alpha:'>
<arg declared_type64='NSColorSpace * _Nonnull' index='0' name='space' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='hue' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='saturation' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='brightness' type64='d'/>
<arg declared_type64='CGFloat' index='4' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithDeviceCyan:magenta:yellow:black:alpha:'>
<arg declared_type64='CGFloat' index='0' name='cyan' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='magenta' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='yellow' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='black' type64='d'/>
<arg declared_type64='CGFloat' index='4' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithDeviceHue:saturation:brightness:alpha:'>
<arg declared_type64='CGFloat' index='0' name='hue' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='saturation' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='brightness' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithDeviceRed:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='red' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='green' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='blue' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithDeviceWhite:alpha:'>
<arg declared_type64='CGFloat' index='0' name='white' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithDisplayP3Red:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='red' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='green' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='blue' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithGenericGamma22White:alpha:'>
<arg declared_type64='CGFloat' index='0' name='white' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:brightness:alpha:'>
<arg declared_type64='CGFloat' index='0' name='hue' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='saturation' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='brightness' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithName:dynamicProvider:'>
<arg declared_type64='NSColorName _Nullable' index='0' name='colorName' type64='@'/>
<arg declared_type64='NSColor * _Nonnull (^ _Nonnull)(NSAppearance * _Nonnull)' function_pointer='true' index='1' name='dynamicProvider' type64='@?'>
<arg declared_type64='NSAppearance * _Nonnull' type64='@'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithPatternImage:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='red' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='green' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='blue' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithSRGBRed:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='red' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='green' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='blue' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='colorWithSystemEffect:'>
<arg declared_type64='NSColorSystemEffect' index='0' name='systemEffect' type64='q'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithWhite:alpha:'>
<arg declared_type64='CGFloat' index='0' name='white' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='alpha' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlAccentColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlAlternatingRowBackgroundColors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlDarkShadowColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlHighlightColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlLightHighlightColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlShadowColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='controlTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='currentControlTint'>
<retval declared_type64='NSControlTint' type64='Q'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='cyanComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='darkGrayColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='disabledControlTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='drawSwatchInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='findHighlightColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='getComponents:'>
<arg declared_type64='CGFloat * _Nonnull' index='0' name='components' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getCyan:magenta:yellow:black:alpha:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='cyan' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='magenta' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='yellow' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='3' name='black' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='4' name='alpha' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getHue:saturation:brightness:alpha:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='hue' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='saturation' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='brightness' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='3' name='alpha' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getRed:green:blue:alpha:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='red' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='green' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='blue' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='3' name='alpha' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getWhite:alpha:'>
<arg declared_type64='CGFloat * _Nullable' index='0' name='white' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='alpha' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='grayColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='greenColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='greenComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='gridColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='headerColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='headerTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='highlightColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='highlightWithLevel:'>
<arg declared_type64='CGFloat' index='0' name='val' type64='d'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='hueComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='ignoresAlpha'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='keyboardFocusIndicatorColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='knobColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='labelColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='lightGrayColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='linkColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='localizedCatalogNameComponent'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='localizedColorNameComponent'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='magentaComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='numberOfComponents'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='orangeColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='patternImage'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='placeholderTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='purpleColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='quaternaryLabelColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='redColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='redComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='saturationComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='scrollBarColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='scrubberTexturedBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='secondaryLabelColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='secondarySelectedControlColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='selectedContentBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='selectedControlColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='selectedControlTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='selectedKnobColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='selectedMenuItemColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='selectedMenuItemTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='selectedTextBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='selectedTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='separatorColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='set'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFill'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setIgnoresAlpha:'>
<arg declared_type64='BOOL' index='0' name='ignoresAlpha' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStroke'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='shadowColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='shadowWithLevel:'>
<arg declared_type64='CGFloat' index='0' name='val' type64='d'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='systemBlueColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemBrownColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemGrayColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemGreenColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemIndigoColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemOrangeColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemPinkColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemPurpleColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemRedColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemTealColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemYellowColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='tertiaryLabelColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='textBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='textColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='NSColorType' type64='q'/>
</method>
<method class_method='true' selector='underPageBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='unemphasizedSelectedContentBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='unemphasizedSelectedTextBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='unemphasizedSelectedTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='whiteComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='windowBackgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='windowFrameColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='windowFrameTextColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='writeToPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteBoard' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='yellowComponent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSColorList'>
<method selector='allKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='availableColorLists'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorListNamed:'>
<arg declared_type64='NSColorListName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSColorList * _Nullable' type64='@'/>
</method>
<method selector='colorWithKey:'>
<arg declared_type64='NSColorName _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='initWithName:'>
<arg declared_type64='NSColorListName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithName:fromFile:'>
<arg declared_type64='NSColorListName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='path' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='insertColor:key:atIndex:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<arg declared_type64='NSColorName _Nonnull' index='1' name='key' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='loc' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='name'>
<retval declared_type64='NSColorListName _Nullable' type64='@'/>
</method>
<method selector='removeColorWithKey:'>
<arg declared_type64='NSColorName _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeFile'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColor:forKey:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<arg declared_type64='NSColorName _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='writeToFile:'>
<arg declared_type64='NSString * _Nullable' index='0' name='path' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeToURL:error:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='errPtr' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSColorPanel'>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='alpha'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='attachColorList:'>
<arg declared_type64='NSColorList * _Nonnull' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='color'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='detachColorList:'>
<arg declared_type64='NSColorList * _Nonnull' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='dragColor:withEvent:fromView:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='sourceView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isContinuous'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mode'>
<retval declared_type64='NSColorPanelMode' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type64='BOOL' index='0' name='continuous' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMode:'>
<arg declared_type64='NSColorPanelMode' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setPickerMask:'>
<arg declared_type64='NSColorPanelOptions' index='0' name='mask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setPickerMode:'>
<arg declared_type64='NSColorPanelMode' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsAlpha:'>
<arg declared_type64='BOOL' index='0' name='showsAlpha' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedColorPanel'>
<retval declared_type64='NSColorPanel * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sharedColorPanelExists'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsAlpha'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSColorPicker'>
<method selector='attachColorList:'>
<arg declared_type64='NSColorList * _Nonnull' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='buttonToolTip'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='colorPanel'>
<retval declared_type64='NSColorPanel * _Nonnull' type64='@'/>
</method>
<method selector='detachColorList:'>
<arg declared_type64='NSColorList * _Nonnull' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithPickerMask:colorPanel:'>
<arg declared_type64='NSUInteger' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSColorPanel * _Nonnull' index='1' name='owningColorPanel' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='insertNewButtonImage:in:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='newButtonImage' type64='@'/>
<arg declared_type64='NSButtonCell * _Nonnull' index='1' name='buttonCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='minContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='provideNewButtonImage'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='setMode:'>
<arg declared_type64='NSColorPanelMode' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewSizeChanged:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSColorPickerTouchBarItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='allowedColorSpaces'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='color'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='colorList'>
<retval declared_type64='NSColorList * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorPickerWithIdentifier:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorPickerWithIdentifier:buttonImage:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSImage * _Nonnull' index='1' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedColorSpaces:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='allowedColorSpaces' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorList:'>
<arg declared_type64='NSColorList * _Nullable' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsAlpha:'>
<arg declared_type64='BOOL' index='0' name='showsAlpha' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsAlpha'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='strokeColorPickerWithIdentifier:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='textColorPickerWithIdentifier:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSColorSampler'>
<method selector='showSamplerWithSelectionHandler:'>
<arg declared_type64='void (^ _Nonnull)(NSColor * _Nullable)' function_pointer='true' index='0' name='selectionHandler' type64='@?'>
<arg declared_type64='NSColor * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSColorSpace'>
<method selector='CGColorSpace'>
<retval declared_type64='CGColorSpaceRef _Nullable' type64='^{CGColorSpace=}'/>
</method>
<method selector='ICCProfileData'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='adobeRGB1998ColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='availableColorSpacesWithModel:'>
<arg declared_type64='NSColorSpaceModel' index='0' name='model' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='colorSpaceModel'>
<retval declared_type64='NSColorSpaceModel' type64='q'/>
</method>
<method selector='colorSyncProfile'>
<retval declared_type64='void * _Nullable' type64='^v'/>
</method>
<method class_method='true' selector='deviceCMYKColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='deviceGrayColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='deviceRGBColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='displayP3ColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='extendedGenericGamma22GrayColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='extendedSRGBColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='genericCMYKColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='genericGamma22GrayColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='genericGrayColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='genericRGBColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method selector='initWithCGColorSpace:'>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='0' name='cgColorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithColorSyncProfile:'>
<arg declared_type64='void * _Nonnull' index='0' name='prof' type64='^v'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithICCProfileData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='iccData' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='localizedName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='numberOfColorComponents'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='sRGBColorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSColorWell'>
<method selector='activate:'>
<arg declared_type64='BOOL' index='0' name='exclusive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='color'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='deactivate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWellInside:'>
<arg declared_type64='NSRect' index='0' name='insideRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isBordered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setBordered:'>
<arg declared_type64='BOOL' index='0' name='bordered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeColorFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSComboBox'>
<method selector='addItemWithObjectValue:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addItemsWithObjectValues:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deselectItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hasVerticalScroller'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='indexOfItemWithObjectValue:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='insertItemWithObjectValue:atIndex:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='isButtonBordered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='itemObjectValueAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='noteNumberOfItemsChanged'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfVisibleItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='objectValueOfSelectedItem'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='objectValues'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='reloadData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemWithObjectValue:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollItemAtIndexToTop:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollItemAtIndexToVisible:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemWithObjectValue:'>
<arg declared_type64='id _Nullable' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setButtonBordered:'>
<arg declared_type64='BOOL' index='0' name='buttonBordered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompletes:'>
<arg declared_type64='BOOL' index='0' name='completes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg declared_type64='BOOL' index='0' name='hasVerticalScroller' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type64='NSSize' index='0' name='intercellSpacing' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemHeight:'>
<arg declared_type64='CGFloat' index='0' name='itemHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfVisibleItems:'>
<arg declared_type64='NSInteger' index='0' name='numberOfVisibleItems' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesDataSource:'>
<arg declared_type64='BOOL' index='0' name='usesDataSource' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesDataSource'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSComboBoxCell'>
<method selector='addItemWithObjectValue:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addItemsWithObjectValues:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completedString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='completes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deselectItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hasVerticalScroller'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='indexOfItemWithObjectValue:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='insertItemWithObjectValue:atIndex:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='isButtonBordered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='itemObjectValueAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='noteNumberOfItemsChanged'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfVisibleItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='objectValueOfSelectedItem'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='objectValues'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='reloadData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemWithObjectValue:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollItemAtIndexToTop:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollItemAtIndexToVisible:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemWithObjectValue:'>
<arg declared_type64='id _Nullable' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setButtonBordered:'>
<arg declared_type64='BOOL' index='0' name='buttonBordered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompletes:'>
<arg declared_type64='BOOL' index='0' name='completes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg declared_type64='BOOL' index='0' name='hasVerticalScroller' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type64='NSSize' index='0' name='intercellSpacing' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemHeight:'>
<arg declared_type64='CGFloat' index='0' name='itemHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfVisibleItems:'>
<arg declared_type64='NSInteger' index='0' name='numberOfVisibleItems' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesDataSource:'>
<arg declared_type64='BOOL' index='0' name='usesDataSource' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesDataSource'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSControl'>
<method selector='abortEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='allowsExpansionToolTips'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attributedStringValue'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method selector='calcSize'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cell'>
<retval declared_type64='__kindof NSCell * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='cellClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='controlSize'>
<retval declared_type64='NSControlSize' type64='Q'/>
</method>
<method selector='currentEditor'>
<retval declared_type64='NSText * _Nullable' type64='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='drawCell:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawCellInside:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithExpansionFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='contentFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='editWithFrame:editor:delegate:event:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSText * _Nonnull' index='1' name='textObj' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='expansionFrameWithFrame:'>
<arg declared_type64='NSRect' index='0' name='contentFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='floatValue'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='font'>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='formatter'>
<retval declared_type64='__kindof NSFormatter * _Nullable' type64='@'/>
</method>
<method selector='ignoresMultiClick'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='intValue'>
<retval declared_type64='int' type64='i'/>
</method>
<method selector='integerValue'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='invalidateIntrinsicContentSizeForCell:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isContinuous'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='Q'/>
</method>
<method selector='mouseDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='objectValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='performClick:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='refusesFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectCell:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectWithFrame:editor:delegate:start:length:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSText * _Nonnull' index='1' name='textObj' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='selStart' type64='q'/>
<arg declared_type64='NSInteger' index='4' name='selLength' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedCell'>
<retval declared_type64='__kindof NSCell * _Nullable' type64='@'/>
</method>
<method selector='selectedTag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='sendAction:to:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='target' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sendActionOn:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsExpansionToolTips:'>
<arg declared_type64='BOOL' index='0' name='allowsExpansionToolTips' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedStringValue:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedStringValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type64='NSWritingDirection' index='0' name='baseWritingDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCell:'>
<arg declared_type64='__kindof NSCell * _Nullable' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setCellClass:'>
<arg declared_type64='Class _Nullable' index='0' name='cellClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type64='BOOL' index='0' name='continuous' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type64='NSControlSize' index='0' name='controlSize' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleValue:'>
<arg declared_type64='double' index='0' name='doubleValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloatValue:'>
<arg declared_type64='float' index='0' name='floatValue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloatingPointFormat:left:right:'>
<arg declared_type64='BOOL' index='0' name='autoRange' type64='B'/>
<arg declared_type64='NSUInteger' index='1' name='leftDigits' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='rightDigits' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='NSFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFormatter:'>
<arg declared_type64='__kindof NSFormatter * _Nullable' index='0' name='formatter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIgnoresMultiClick:'>
<arg declared_type64='BOOL' index='0' name='ignoresMultiClick' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntValue:'>
<arg declared_type64='int' index='0' name='intValue' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntegerValue:'>
<arg declared_type64='NSInteger' index='0' name='integerValue' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type64='NSLineBreakMode' index='0' name='lineBreakMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObjectValue:'>
<arg declared_type64='id _Nullable' index='0' name='objectValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRefusesFirstResponder:'>
<arg declared_type64='BOOL' index='0' name='refusesFirstResponder' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStringValue:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesSingleLineMode:'>
<arg declared_type64='BOOL' index='0' name='usesSingleLineMode' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeThatFits:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='sizeToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stringValue'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='takeDoubleValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeFloatValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeIntValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeIntegerValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeObjectValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeStringValueFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='updateCell:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateCellInside:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesSingleLineMode'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='validateEditing'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSController'>
<method selector='commitEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='didCommitSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardEditing'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='objectDidBeginEditing:'>
<arg declared_type64='id _Nonnull' index='0' name='editor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='objectDidEndEditing:'>
<arg declared_type64='id _Nonnull' index='0' name='editor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCursor'>
<method class_method='true' selector='IBeamCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='IBeamCursorForVerticalLayout'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='arrowCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='closedHandCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contextualMenuCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='crosshairCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='currentCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='currentSystemCursor'>
<retval declared_type64='NSCursor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='disappearingItemCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='dragCopyCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='dragLinkCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='hide'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hotSpot'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='newImage' type64='@'/>
<arg declared_type64='NSColor * _Nullable' index='1' name='fg' type64='@'/>
<arg declared_type64='NSColor * _Nullable' index='2' name='bg' type64='@'/>
<arg declared_type64='NSPoint' index='3' name='hotSpot' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImage:hotSpot:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='newImage' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isSetOnMouseEntered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSetOnMouseExited'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mouseEntered:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseExited:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='openHandCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='operationNotAllowedCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pointingHandCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='push'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='resizeDownCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='resizeLeftCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='resizeLeftRightCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='resizeRightCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='resizeUpCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='resizeUpDownCursor'>
<retval declared_type64='NSCursor * _Nonnull' type64='@'/>
</method>
<method selector='set'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setHiddenUntilMouseMoves:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOnMouseEntered:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOnMouseExited:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='unhide'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSCustomImageRep'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='drawSelector'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='drawingHandler'>
<retval declared_type64='BOOL (^ _Nullable)(NSRect)' function_pointer='true' type64='@?'>
<arg declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</retval>
</method>
<method selector='initWithDrawSelector:delegate:'>
<arg declared_type64='SEL _Nonnull' index='0' name='selector' type64=':'/>
<arg declared_type64='id _Nonnull' index='1' name='delegate' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSize:flipped:drawingHandler:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='1' name='drawingHandlerShouldBeCalledWithFlippedContext' type64='B'/>
<arg declared_type64='BOOL (^ _Nonnull)(NSRect)' function_pointer='true' index='2' name='drawingHandler' type64='@?'>
<arg declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCustomTouchBarItem'>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='__kindof NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewController:'>
<arg declared_type64='__kindof NSViewController * _Nullable' index='0' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='__kindof NSView * _Nonnull' type64='@'/>
</method>
<method selector='viewController'>
<retval declared_type64='__kindof NSViewController * _Nullable' type64='@'/>
</method>
</class>
<class name='NSDataAsset'>
<method selector='data'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='initWithName:'>
<arg declared_type64='NSDataAssetName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithName:bundle:'>
<arg declared_type64='NSDataAssetName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSBundle * _Nonnull' index='1' name='bundle' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSDataAssetName _Nonnull' type64='@'/>
</method>
<method selector='typeIdentifier'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSDatePicker'>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='calendar'>
<retval declared_type64='NSCalendar * _Nullable' type64='@'/>
</method>
<method selector='datePickerElements'>
<retval declared_type64='NSDatePickerElementFlags' type64='Q'/>
</method>
<method selector='datePickerMode'>
<retval declared_type64='NSDatePickerMode' type64='Q'/>
</method>
<method selector='datePickerStyle'>
<retval declared_type64='NSDatePickerStyle' type64='Q'/>
</method>
<method selector='dateValue'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isBezeled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isBordered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='locale'>
<retval declared_type64='NSLocale * _Nullable' type64='@'/>
</method>
<method selector='maxDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='minDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='presentsCalendarOverlay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type64='BOOL' index='0' name='bezeled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type64='BOOL' index='0' name='bordered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCalendar:'>
<arg declared_type64='NSCalendar * _Nullable' index='0' name='calendar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDatePickerElements:'>
<arg declared_type64='NSDatePickerElementFlags' index='0' name='datePickerElements' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDatePickerMode:'>
<arg declared_type64='NSDatePickerMode' index='0' name='datePickerMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDatePickerStyle:'>
<arg declared_type64='NSDatePickerStyle' index='0' name='datePickerStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDateValue:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='dateValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type64='NSLocale * _Nullable' index='0' name='locale' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='maxDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='minDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPresentsCalendarOverlay:'>
<arg declared_type64='BOOL' index='0' name='presentsCalendarOverlay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='textColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeInterval:'>
<arg declared_type64='NSTimeInterval' index='0' name='timeInterval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type64='NSTimeZone * _Nullable' index='0' name='timeZone' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='timeInterval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='timeZone'>
<retval declared_type64='NSTimeZone * _Nullable' type64='@'/>
</method>
</class>
<class name='NSDatePickerCell'>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='calendar'>
<retval declared_type64='NSCalendar * _Nullable' type64='@'/>
</method>
<method selector='datePickerElements'>
<retval declared_type64='NSDatePickerElementFlags' type64='Q'/>
</method>
<method selector='datePickerMode'>
<retval declared_type64='NSDatePickerMode' type64='Q'/>
</method>
<method selector='datePickerStyle'>
<retval declared_type64='NSDatePickerStyle' type64='Q'/>
</method>
<method selector='dateValue'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initTextCell:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='locale'>
<retval declared_type64='NSLocale * _Nullable' type64='@'/>
</method>
<method selector='maxDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='minDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCalendar:'>
<arg declared_type64='NSCalendar * _Nullable' index='0' name='calendar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDatePickerElements:'>
<arg declared_type64='NSDatePickerElementFlags' index='0' name='datePickerElements' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDatePickerMode:'>
<arg declared_type64='NSDatePickerMode' index='0' name='datePickerMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDatePickerStyle:'>
<arg declared_type64='NSDatePickerStyle' index='0' name='datePickerStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDateValue:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='dateValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type64='NSLocale * _Nullable' index='0' name='locale' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='maxDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='minDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='textColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeInterval:'>
<arg declared_type64='NSTimeInterval' index='0' name='timeInterval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type64='NSTimeZone * _Nullable' index='0' name='timeZone' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='timeInterval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='timeZone'>
<retval declared_type64='NSTimeZone * _Nullable' type64='@'/>
</method>
</class>
<class name='NSDictionaryController'>
<method selector='excludedKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='includedKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initialKey'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='initialValue'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='localizedKeyDictionary'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='localizedKeyTable'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='newObject'>
<retval declared_type64='NSDictionaryControllerKeyValuePair * _Nonnull' type64='@'/>
</method>
<method selector='setExcludedKeys:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='excludedKeys' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncludedKeys:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='includedKeys' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInitialKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='initialKey' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInitialValue:'>
<arg declared_type64='id _Nonnull' index='0' name='initialValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocalizedKeyDictionary:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='localizedKeyDictionary' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocalizedKeyTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='localizedKeyTable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSDictionaryControllerKeyValuePair'>
<method selector='isExplicitlyIncluded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='key'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='localizedKey'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setKey:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocalizedKey:'>
<arg declared_type64='NSString * _Nullable' index='0' name='localizedKey' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='value'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='NSDiffableDataSourceSnapshot'>
<method selector='appendItemsWithIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendItemsWithIdentifiers:intoSectionWithIdentifier:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifiers' type64='@'/>
<arg declared_type64='SectionIdentifierType _Nonnull' index='1' name='sectionIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendSectionsWithIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sectionIdentifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteAllItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteItemsWithIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteSectionsWithIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sectionIdentifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexOfItemIdentifier:'>
<arg declared_type64='ItemIdentifierType _Nonnull' index='0' name='itemIdentifier' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfSectionIdentifier:'>
<arg declared_type64='SectionIdentifierType _Nonnull' index='0' name='sectionIdentifier' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='insertItemsWithIdentifiers:afterItemWithIdentifier:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifiers' type64='@'/>
<arg declared_type64='ItemIdentifierType _Nonnull' index='1' name='itemIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertItemsWithIdentifiers:beforeItemWithIdentifier:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifiers' type64='@'/>
<arg declared_type64='ItemIdentifierType _Nonnull' index='1' name='itemIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSectionsWithIdentifiers:afterSectionWithIdentifier:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sectionIdentifiers' type64='@'/>
<arg declared_type64='SectionIdentifierType _Nonnull' index='1' name='toSectionIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSectionsWithIdentifiers:beforeSectionWithIdentifier:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sectionIdentifiers' type64='@'/>
<arg declared_type64='SectionIdentifierType _Nonnull' index='1' name='toSectionIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='itemIdentifiers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='itemIdentifiersInSectionWithIdentifier:'>
<arg declared_type64='SectionIdentifierType _Nonnull' index='0' name='sectionIdentifier' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='moveItemWithIdentifier:afterItemWithIdentifier:'>
<arg declared_type64='ItemIdentifierType _Nonnull' index='0' name='fromIdentifier' type64='@'/>
<arg declared_type64='ItemIdentifierType _Nonnull' index='1' name='toIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveItemWithIdentifier:beforeItemWithIdentifier:'>
<arg declared_type64='ItemIdentifierType _Nonnull' index='0' name='fromIdentifier' type64='@'/>
<arg declared_type64='ItemIdentifierType _Nonnull' index='1' name='toIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveSectionWithIdentifier:afterSectionWithIdentifier:'>
<arg declared_type64='SectionIdentifierType _Nonnull' index='0' name='fromSectionIdentifier' type64='@'/>
<arg declared_type64='SectionIdentifierType _Nonnull' index='1' name='toSectionIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveSectionWithIdentifier:beforeSectionWithIdentifier:'>
<arg declared_type64='SectionIdentifierType _Nonnull' index='0' name='fromSectionIdentifier' type64='@'/>
<arg declared_type64='SectionIdentifierType _Nonnull' index='1' name='toSectionIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfItemsInSection:'>
<arg declared_type64='SectionIdentifierType _Nonnull' index='0' name='sectionIdentifier' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSections'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='reloadItemsWithIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='identifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadSectionsWithIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sectionIdentifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sectionIdentifierForSectionContainingItemIdentifier:'>
<arg declared_type64='ItemIdentifierType _Nonnull' index='0' name='itemIdentifier' type64='@'/>
<retval declared_type64='SectionIdentifierType _Nullable' type64='@'/>
</method>
<method selector='sectionIdentifiers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSDockTile'>
<method selector='badgeLabel'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='contentView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='display'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='owner'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setBadgeLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='badgeLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='contentView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsApplicationBadge:'>
<arg declared_type64='BOOL' index='0' name='showsApplicationBadge' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsApplicationBadge'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='size'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSDocument'>
<method selector='PDFPrintOperation'>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method selector='addWindowController:'>
<arg declared_type64='NSWindowController * _Nonnull' index='0' name='windowController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsDocumentSharing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='didAutosaveSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='autosaveWithImplicitCancellability:completionHandler:'>
<arg declared_type64='BOOL' index='0' name='autosavingIsImplicitlyCancellable' type64='B'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='autosavedContentsFileURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='autosavesDrafts'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='autosavesInPlace'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autosavingFileType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='autosavingIsImplicitlyCancellable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backupFileURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='browseDocumentVersions:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canAsynchronouslyWriteToURL:ofType:forSaveOperation:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperation' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'>
<arg declared_type64='id _Nonnull' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='shouldCloseSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='canConcurrentlyReadDocumentsOfType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='changeCountTokenForSaveOperation:'>
<arg declared_type64='NSSaveOperationType' index='0' name='saveOperation' type64='Q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='checkAutosavingSafetyAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='close'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='continueActivityUsingBlock:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='continueAsynchronousWorkOnMainThreadUsingBlock:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dataOfType:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='dataRepresentationOfType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='defaultDraftName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='displayName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='duplicateAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='outError' type64='^@'/>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='duplicateDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='duplicateDocumentWithDelegate:didDuplicateSelector:contextInfo:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='didDuplicateSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:backgroundQueue:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<arg declared_type64='NSOperationQueue * _Nonnull' index='1' name='queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fileAttributesToWriteToFile:ofType:saveOperation:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullDocumentPath' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='documentTypeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperationType' type64='Q'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperation' type64='Q'/>
<arg declared_type64='NSURL * _Nullable' index='3' name='absoluteOriginalContentsURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='outError' type64='^@'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='fileModificationDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='fileName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fileNameExtensionForType:saveOperation:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='1' name='saveOperation' type64='Q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fileNameExtensionWasHiddenInLastRunSavePanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='fileType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fileTypeFromLastRunSavePanel'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fileURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='fileWrapperOfType:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSFileWrapper * _Nullable' type64='@'/>
</method>
<method selector='fileWrapperRepresentationOfType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='NSFileWrapper * _Nullable' type64='@'/>
</method>
<method selector='handleCloseScriptCommand:'>
<arg declared_type64='NSCloseCommand * _Nonnull' index='0' name='command' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='handlePrintScriptCommand:'>
<arg declared_type64='NSScriptCommand * _Nonnull' index='0' name='command' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='handleSaveScriptCommand:'>
<arg declared_type64='NSScriptCommand * _Nonnull' index='0' name='command' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='hasUnautosavedChanges'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasUndoManager'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initForURL:withContentsOfURL:ofType:error:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='urlOrNil' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='contentsURL' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfFile:ofType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='absolutePath' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:ofType:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:ofType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithType:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='invalidateRestorableState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isBrowsingVersions'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDocumentEdited'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDraft'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEntireFileLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInViewingMode'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isLocked'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isNativeType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keepBackupFile'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lastComponentOfFileName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='loadDataRepresentation:ofType:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadFileWrapperRepresentation:ofType:'>
<arg declared_type64='NSFileWrapper * _Nonnull' index='0' name='wrapper' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lockDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lockDocumentWithCompletionHandler:'>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lockWithCompletionHandler:'>
<arg declared_type64='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeWindowControllers'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveDocumentToUbiquityContainer:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveDocumentWithCompletionHandler:'>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToURL:completionHandler:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='objectSpecifier'>
<retval declared_type64='NSScriptObjectSpecifier * _Nonnull' type64='@'/>
</method>
<method selector='performActivityWithSynchronousWaiting:usingBlock:'>
<arg declared_type64='BOOL' index='0' name='waitSynchronously' type64='B'/>
<arg declared_type64='void (^ _Nonnull)(void (^ _Nonnull)(void))' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performAsynchronousFileAccessUsingBlock:'>
<arg declared_type64='void (^ _Nonnull)(void (^ _Nonnull)(void))' function_pointer='true' index='0' name='block' type64='@?'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performSynchronousFileAccessUsingBlock:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preparePageLayout:'>
<arg declared_type64='NSPageLayout * _Nonnull' index='0' name='pageLayout' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareSavePanel:'>
<arg declared_type64='NSSavePanel * _Nonnull' index='0' name='savePanel' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareSharingServicePicker:'>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<arg declared_type64='NSWindow * _Nonnull' index='1' name='window' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didPresentSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='preservesVersions'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='printDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='printSettings' type64='@'/>
<arg declared_type64='BOOL' index='1' name='showPrintPanel' type64='B'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didPrintSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='printInfo'>
<retval declared_type64='NSPrintInfo * _Nonnull' type64='@'/>
</method>
<method selector='printOperationWithSettings:error:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='printSettings' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSPrintOperation * _Nullable' type64='@'/>
</method>
<method selector='printShowingPrintPanel:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readFromData:ofType:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readFromFile:ofType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readFromFileWrapper:ofType:error:'>
<arg declared_type64='NSFileWrapper * _Nonnull' index='0' name='fileWrapper' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readFromURL:ofType:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readFromURL:ofType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='readableTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='removeWindowController:'>
<arg declared_type64='NSWindowController * _Nonnull' index='0' name='windowController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renameDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='restorableStateKeyPaths'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='restoreDocumentWindowWithIdentifier:state:completionHandler:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='state' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSWindow * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSWindow * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='restoreStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='revertDocumentToSaved:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='revertToContentsOfURL:ofType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='revertToSavedFromFile:ofType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='revertToSavedFromURL:ofType:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='runModalPageLayoutWithPrintInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='printInfo' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='printInfo' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='didRunSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='3' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runModalPrintOperation:delegate:didRunSelector:contextInfo:'>
<arg declared_type64='NSPrintOperation * _Nonnull' index='0' name='printOperation' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='didRunSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='3' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'>
<arg declared_type64='NSSaveOperationType' index='0' name='saveOperation' type64='Q'/>
<arg declared_type64='id _Nullable' index='1' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='didSaveSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='3' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runPageLayout:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveDocumentAs:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveDocumentTo:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveDocumentToPDF:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveDocumentWithDelegate:didSaveSelector:contextInfo:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='didSaveSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='1' name='saveOperation' type64='Q'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didSaveSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:completionHandler:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperation' type64='Q'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperation' type64='Q'/>
<arg declared_type64='id _Nullable' index='3' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='4' name='didSaveSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='5' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperation' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scheduleAutosaving'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosavedContentsFileURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='autosavedContentsFileURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDisplayName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='displayNameOrNil' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraft:'>
<arg declared_type64='BOOL' index='0' name='draft' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileModificationDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='fileModificationDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='fileName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='fileType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='fileURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasUndoManager:'>
<arg declared_type64='BOOL' index='0' name='hasUndoManager' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLastComponentOfFileName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='lastComponentOfFileName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrintInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='printInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUndoManager:'>
<arg declared_type64='NSUndoManager * _Nullable' index='0' name='undoManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserActivity:'>
<arg declared_type64='NSUserActivity * _Nullable' index='0' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindow:'>
<arg declared_type64='NSWindow * _Nullable' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shareDocumentWithSharingService:completionHandler:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldChangePrintInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='newPrintInfo' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'>
<arg declared_type64='NSWindowController * _Nonnull' index='0' name='windowController' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='shouldCloseSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='3' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldRunSavePanelWithAccessoryView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showWindows'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopBrowsingVersionsWithCompletionHandler:'>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unblockUserInteraction'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='undoManager'>
<retval declared_type64='NSUndoManager * _Nullable' type64='@'/>
</method>
<method selector='unlockDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unlockDocumentWithCompletionHandler:'>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unlockWithCompletionHandler:'>
<arg declared_type64='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateChangeCount:'>
<arg declared_type64='NSDocumentChangeType' index='0' name='change' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateChangeCountWithToken:forSaveOperation:'>
<arg declared_type64='id _Nonnull' index='0' name='changeCountToken' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='1' name='saveOperation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateUserActivityState:'>
<arg declared_type64='NSUserActivity * _Nonnull' index='0' name='activity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userActivity'>
<retval declared_type64='NSUserActivity * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='usesUbiquitousStorage'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='willNotPresentError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willPresentError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='NSError * _Nonnull' type64='@'/>
</method>
<method selector='windowControllerDidLoadNib:'>
<arg declared_type64='NSWindowController * _Nonnull' index='0' name='windowController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowControllerWillLoadNib:'>
<arg declared_type64='NSWindowController * _Nonnull' index='0' name='windowController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowControllers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='windowForSheet'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='windowNibName'>
<retval declared_type64='NSNibName _Nullable' type64='@'/>
</method>
<method class_method='true' selector='writableTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='writableTypesForSaveOperation:'>
<arg declared_type64='NSSaveOperationType' index='0' name='saveOperation' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='writeSafelyToURL:ofType:forSaveOperation:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperation' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeToFile:ofType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeToFile:ofType:originalFile:saveOperation:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullDocumentPath' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='documentTypeName' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='fullOriginalDocumentPath' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='3' name='saveOperationType' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeToURL:ofType:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeToURL:ofType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperation' type64='Q'/>
<arg declared_type64='NSURL * _Nullable' index='3' name='absoluteOriginalContentsURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeWithBackupToFile:ofType:saveOperation:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullDocumentPath' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='documentTypeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperationType' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSDocumentController'>
<method selector='URLsFromRunningOpenPanel'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='addDocument:'>
<arg declared_type64='NSDocument * _Nonnull' index='0' name='document' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsAutomaticShareMenu'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autosavingDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='beginOpenPanel:forTypes:completionHandler:'>
<arg declared_type64='NSOpenPanel * _Nonnull' index='0' name='openPanel' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='inTypes' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSInteger)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginOpenPanelWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(NSArray * _Nullable)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='NSArray * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='clearRecentDocuments:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='didCloseAllSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='currentDirectory'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='currentDocument'>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='defaultType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='displayNameForType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='documentClassForType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='documentClassNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='documentForFileName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='documentForURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='documentForWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='documents'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='duplicateDocumentWithContentsOfURL:copying:displayName:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='BOOL' index='1' name='duplicateByCopying' type64='B'/>
<arg declared_type64='NSString * _Nullable' index='2' name='displayNameOrNil' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='fileExtensionsFromType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='fileNamesFromRunningOpenPanel'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='hasEditedDocuments'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='makeDocumentForURL:withContentsOfURL:ofType:error:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='urlOrNil' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='contentsURL' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='makeDocumentWithContentsOfFile:ofType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='makeDocumentWithContentsOfURL:ofType:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Null_unspecified' index='1' name='type' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='makeDocumentWithContentsOfURL:ofType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='makeUntitledDocumentOfType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='makeUntitledDocumentOfType:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='maximumRecentDocumentCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='newDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='noteNewRecentDocument:'>
<arg declared_type64='NSDocument * _Nonnull' index='0' name='document' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='noteNewRecentDocumentURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='openDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='openDocumentWithContentsOfFile:display:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<arg declared_type64='BOOL' index='1' name='display' type64='B'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='BOOL' index='1' name='display' type64='B'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:completionHandler:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='BOOL' index='1' name='displayDocument' type64='B'/>
<arg declared_type64='void (^ _Nonnull)(NSDocument * _Nullable, BOOL, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSDocument * _Nullable' type64='@'/>
<arg declared_type64='BOOL' type64='B'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='BOOL' index='1' name='displayDocument' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='openUntitledDocumentAndDisplay:error:'>
<arg declared_type64='BOOL' index='0' name='displayDocument' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='__kindof NSDocument * _Nullable' type64='@'/>
</method>
<method selector='openUntitledDocumentOfType:display:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='type' type64='@'/>
<arg declared_type64='BOOL' index='1' name='display' type64='B'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='presentError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<arg declared_type64='NSWindow * _Nonnull' index='1' name='window' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didPresentSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='recentDocumentURLs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='removeDocument:'>
<arg declared_type64='NSDocument * _Nonnull' index='0' name='document' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reopenDocumentForURL:withContentsOfURL:display:completionHandler:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='urlOrNil' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='contentsURL' type64='@'/>
<arg declared_type64='BOOL' index='2' name='displayDocument' type64='B'/>
<arg declared_type64='void (^ _Nonnull)(NSDocument * _Nullable, BOOL, NSError * _Nullable)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<arg declared_type64='NSDocument * _Nullable' type64='@'/>
<arg declared_type64='BOOL' type64='B'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reopenDocumentForURL:withContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='url' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='contentsURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<arg declared_type64='BOOL' index='1' name='cancellable' type64='B'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didReviewAllSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runModalOpenPanel:forTypes:'>
<arg declared_type64='NSOpenPanel * _Nonnull' index='0' name='openPanel' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='types' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='saveAllDocuments:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosavingDelay:'>
<arg declared_type64='NSTimeInterval' index='0' name='autosavingDelay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldCreateUI:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedDocumentController'>
<retval declared_type64='__kindof NSDocumentController * _Nonnull' type64='@'/>
</method>
<method selector='shouldCreateUI'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='standardShareMenuItem'>
<retval declared_type64='NSMenuItem * _Nonnull' type64='@'/>
</method>
<method selector='typeForContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='typeFromFileExtension:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileNameExtensionOrHFSFileType' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='willPresentError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='NSError * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSDraggingImageComponent'>
<method selector='contents'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='draggingImageComponentWithKey:'>
<arg declared_type64='NSDraggingImageComponentKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='NSDraggingImageComponent * _Nonnull' type64='@'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithKey:'>
<arg declared_type64='NSDraggingImageComponentKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='key'>
<retval declared_type64='NSDraggingImageComponentKey _Nonnull' type64='@'/>
</method>
<method selector='setContents:'>
<arg declared_type64='id _Nullable' index='0' name='contents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKey:'>
<arg declared_type64='NSDraggingImageComponentKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSDraggingItem'>
<method selector='draggingFrame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageComponents'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='imageComponentsProvider'>
<retval declared_type64='NSArray * _Nonnull (^ _Nullable)(void)' function_pointer='true' type64='@?'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</retval>
</method>
<method selector='initWithPasteboardWriter:'>
<arg declared_type64='id _Nonnull' index='0' name='pasteboardWriter' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='item'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='setDraggingFrame:'>
<arg declared_type64='NSRect' index='0' name='draggingFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingFrame:contents:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nullable' index='1' name='contents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageComponentsProvider:'>
<arg declared_type64='NSArray * _Nonnull (^ _Nullable)(void)' function_pointer='true' index='0' name='imageComponentsProvider' type64='@?'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSDraggingSession'>
<method selector='animatesToStartingPositionsOnCancelOrFail'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='draggingFormation'>
<retval declared_type64='NSDraggingFormation' type64='q'/>
</method>
<method selector='draggingLeaderIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='draggingLocation'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingPasteboard'>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method selector='draggingSequenceNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'>
<arg declared_type64='NSDraggingItemEnumerationOptions' index='0' name='enumOpts' type64='Q'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='classArray' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='searchOptions' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSDraggingItem * _Nonnull, NSInteger, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type64='@?'>
<arg declared_type64='NSDraggingItem * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimatesToStartingPositionsOnCancelOrFail:'>
<arg declared_type64='BOOL' index='0' name='animatesToStartingPositionsOnCancelOrFail' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingFormation:'>
<arg declared_type64='NSDraggingFormation' index='0' name='draggingFormation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingLeaderIndex:'>
<arg declared_type64='NSInteger' index='0' name='draggingLeaderIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSDrawer'>
<method selector='close'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='close:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='edge'>
<retval declared_type64='NSRectEdge' type64='Q'/>
</method>
<method selector='initWithContentSize:preferredEdge:'>
<arg declared_type64='NSSize' index='0' name='contentSize' type64='{CGSize=dd}'/>
<arg declared_type64='NSRectEdge' index='1' name='edge' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='leadingOffset'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maxContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='minContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='open'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='open:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='openOnEdge:'>
<arg declared_type64='NSRectEdge' index='0' name='edge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='parentWindow'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='preferredEdge'>
<retval declared_type64='NSRectEdge' type64='Q'/>
</method>
<method selector='setContentSize:'>
<arg declared_type64='NSSize' index='0' name='contentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='contentView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeadingOffset:'>
<arg declared_type64='CGFloat' index='0' name='leadingOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxContentSize:'>
<arg declared_type64='NSSize' index='0' name='maxContentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinContentSize:'>
<arg declared_type64='NSSize' index='0' name='minContentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParentWindow:'>
<arg declared_type64='NSWindow * _Nullable' index='0' name='parentWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredEdge:'>
<arg declared_type64='NSRectEdge' index='0' name='preferredEdge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrailingOffset:'>
<arg declared_type64='CGFloat' index='0' name='trailingOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='state'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='toggle:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trailingOffset'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSEPSImageRep'>
<method selector='EPSRepresentation'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='boundingBox'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='imageRepWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='epsData' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='epsData' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='prepareGState'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSEvent'>
<method selector='CGEvent'>
<retval declared_type64='CGEventRef _Nullable' type64='^{__CGEvent=}'/>
</method>
<method selector='absoluteX'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='absoluteY'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='absoluteZ'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='addGlobalMonitorForEventsMatchingMask:handler:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<arg declared_type64='void (^ _Nonnull)(NSEvent * _Nonnull)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='NSEvent * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='addLocalMonitorForEventsMatchingMask:handler:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSEvent * _Nullable (^ _Nonnull)(NSEvent * _Nonnull)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='NSEvent * _Nonnull' type64='@'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</arg>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='allTouches'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='associatedEventsMask'>
<retval declared_type64='NSEventMask' type64='Q'/>
</method>
<method selector='buttonMask'>
<retval declared_type64='NSEventButtonMask' type64='Q'/>
</method>
<method selector='buttonNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='capabilityMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='characters'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='charactersByApplyingModifiers:'>
<arg declared_type64='NSEventModifierFlags' index='0' name='modifiers' type64='Q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='charactersIgnoringModifiers'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='clickCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='coalescedTouchesForTouch:'>
<arg declared_type64='NSTouch * _Nonnull' index='0' name='touch' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='context'>
<retval declared_type64='NSGraphicsContext * _Nullable' type64='@'/>
</method>
<method selector='data1'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='data2'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='deltaX'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='deltaY'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='deltaZ'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='deviceID'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='doubleClickInterval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:'>
<arg declared_type64='NSEventType' index='0' name='type' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSEventModifierFlags' index='2' name='flags' type64='Q'/>
<arg declared_type64='NSTimeInterval' index='3' name='time' type64='d'/>
<arg declared_type64='NSInteger' index='4' name='wNum' type64='q'/>
<arg declared_type64='NSGraphicsContext * _Nullable' index='5' name='unusedPassNil' type64='@'/>
<arg declared_type64='NSInteger' index='6' name='eNum' type64='q'/>
<arg declared_type64='NSInteger' index='7' name='tNum' type64='q'/>
<arg declared_type64='void * _Nullable' index='8' name='data' type64='^v'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method selector='eventNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='eventRef'>
<retval const='true' declared_type64='void * _Nullable' type64='^v'/>
</method>
<method class_method='true' selector='eventWithCGEvent:'>
<arg declared_type64='CGEventRef _Nonnull' index='0' name='cgEvent' type64='^{__CGEvent=}'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='eventWithEventRef:'>
<arg const='true' declared_type64='void * _Nonnull' index='0' name='eventRef' type64='^v'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method selector='hasPreciseScrollingDeltas'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isARepeat'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDirectionInvertedFromDevice'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnteringProximity'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isMouseCoalescingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isSwipeTrackingFromScrollEventsEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyCode'>
<retval declared_type64='unsigned short' type64='S'/>
</method>
<method class_method='true' selector='keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:'>
<arg declared_type64='NSEventType' index='0' name='type' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSEventModifierFlags' index='2' name='flags' type64='Q'/>
<arg declared_type64='NSTimeInterval' index='3' name='time' type64='d'/>
<arg declared_type64='NSInteger' index='4' name='wNum' type64='q'/>
<arg declared_type64='NSGraphicsContext * _Nullable' index='5' name='unusedPassNil' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='6' name='keys' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='7' name='ukeys' type64='@'/>
<arg declared_type64='BOOL' index='8' name='flag' type64='B'/>
<arg declared_type64='unsigned short' index='9' name='code' type64='S'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='keyRepeatDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='keyRepeatInterval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='locationInWindow'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='magnification'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='modifierFlags'>
<retval declared_type64='NSEventModifierFlags' type64='Q'/>
</method>
<method selector='modifierFlags'>
<retval declared_type64='NSEventModifierFlags' type64='Q'/>
</method>
<method selector='momentumPhase'>
<retval declared_type64='NSEventPhase' type64='Q'/>
</method>
<method class_method='true' selector='mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:'>
<arg declared_type64='NSEventType' index='0' name='type' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSEventModifierFlags' index='2' name='flags' type64='Q'/>
<arg declared_type64='NSTimeInterval' index='3' name='time' type64='d'/>
<arg declared_type64='NSInteger' index='4' name='wNum' type64='q'/>
<arg declared_type64='NSGraphicsContext * _Nullable' index='5' name='unusedPassNil' type64='@'/>
<arg declared_type64='NSInteger' index='6' name='eNum' type64='q'/>
<arg declared_type64='NSInteger' index='7' name='cNum' type64='q'/>
<arg declared_type64='float' index='8' name='pressure' type64='f'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='mouseLocation'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:'>
<arg declared_type64='NSEventType' index='0' name='type' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSEventModifierFlags' index='2' name='flags' type64='Q'/>
<arg declared_type64='NSTimeInterval' index='3' name='time' type64='d'/>
<arg declared_type64='NSInteger' index='4' name='wNum' type64='q'/>
<arg declared_type64='NSGraphicsContext * _Nullable' index='5' name='unusedPassNil' type64='@'/>
<arg declared_type64='short' index='6' name='subtype' type64='s'/>
<arg declared_type64='NSInteger' index='7' name='d1' type64='q'/>
<arg declared_type64='NSInteger' index='8' name='d2' type64='q'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method selector='phase'>
<retval declared_type64='NSEventPhase' type64='Q'/>
</method>
<method selector='pointingDeviceID'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='pointingDeviceSerialNumber'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='pointingDeviceType'>
<retval declared_type64='NSPointingDeviceType' type64='Q'/>
</method>
<method class_method='true' selector='pressedMouseButtons'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='pressure'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='pressureBehavior'>
<retval declared_type64='NSPressureBehavior' type64='q'/>
</method>
<method class_method='true' selector='removeMonitor:'>
<arg declared_type64='id _Nonnull' index='0' name='eventMonitor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rotation'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='scrollingDeltaX'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scrollingDeltaY'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='setMouseCoalescingEnabled:'>
<arg declared_type64='BOOL' index='0' name='mouseCoalescingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stage'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='stageTransition'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='startPeriodicEventsAfterDelay:withPeriod:'>
<arg declared_type64='NSTimeInterval' index='0' name='delay' type64='d'/>
<arg declared_type64='NSTimeInterval' index='1' name='period' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='stopPeriodicEvents'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='subtype'>
<retval declared_type64='NSEventSubtype' type64='s'/>
</method>
<method selector='systemTabletID'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='tabletID'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='tangentialPressure'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='tilt'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='timestamp'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='touchesForView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='touchesMatchingPhase:inView:'>
<arg declared_type64='NSTouchPhase' index='0' name='phase' type64='Q'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='trackSwipeEventWithOptions:dampenAmountThresholdMin:max:usingHandler:'>
<arg declared_type64='NSEventSwipeTrackingOptions' index='0' name='options' type64='Q'/>
<arg declared_type64='CGFloat' index='1' name='minDampenThreshold' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='maxDampenThreshold' type64='d'/>
<arg declared_type64='void (^ _Nonnull)(CGFloat, NSEventPhase, BOOL, BOOL * _Nonnull)' function_pointer='true' index='3' name='trackingHandler' type64='@?'>
<arg declared_type64='CGFloat' type64='d'/>
<arg declared_type64='NSEventPhase' type64='Q'/>
<arg declared_type64='BOOL' type64='B'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackingArea'>
<retval declared_type64='NSTrackingArea * _Nullable' type64='@'/>
</method>
<method selector='trackingNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='type'>
<retval declared_type64='NSEventType' type64='Q'/>
</method>
<method selector='uniqueID'>
<retval declared_type64='unsigned long long' type64='Q'/>
</method>
<method selector='userData'>
<retval declared_type64='void * _Nullable' type64='^v'/>
</method>
<method selector='vendorDefined'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='vendorID'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='vendorPointingDeviceType'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='window'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='windowNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSFileManager'>
<method class_method='true' selector='fileManagerWithAuthorization:'>
<arg declared_type64='NSWorkspaceAuthorization * _Nonnull' index='0' name='authorization' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSFilePromiseProvider'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='fileType'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFileType:delegate:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileType' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='delegate' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type64='id _Nullable' index='0' name='userInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userInfo'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='NSFilePromiseReceiver'>
<method selector='fileNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='fileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='readableDraggedTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='receivePromisedFilesAtDestination:options:operationQueue:reader:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='destinationDir' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSOperationQueue * _Nonnull' index='2' name='operationQueue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSURL * _Nonnull, NSError * _Nullable)' function_pointer='true' index='3' name='reader' type64='@?'>
<arg declared_type64='NSURL * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSFileWrapper'>
<method selector='icon'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='setIcon:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='icon' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSFont'>
<method selector='advancementForCGGlyph:'>
<arg declared_type64='CGGlyph' index='0' name='glyph' type64='S'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='advancementForGlyph:'>
<arg declared_type64='NSGlyph' index='0' name='glyph' type64='I'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='ascender'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='boldSystemFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='boundingRectForCGGlyph:'>
<arg declared_type64='CGGlyph' index='0' name='glyph' type64='S'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundingRectForFont'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundingRectForGlyph:'>
<arg declared_type64='NSGlyph' index='0' name='glyph' type64='I'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='capHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='controlContentFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='coveredCharacterSet'>
<retval declared_type64='NSCharacterSet * _Nonnull' type64='@'/>
</method>
<method selector='descender'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='displayName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='familyName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fontDescriptor'>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontWithDescriptor:size:'>
<arg declared_type64='NSFontDescriptor * _Nonnull' index='0' name='fontDescriptor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='fontWithDescriptor:textTransform:'>
<arg declared_type64='NSFontDescriptor * _Nonnull' index='0' name='fontDescriptor' type64='@'/>
<arg declared_type64='NSAffineTransform * _Nullable' index='1' name='textTransform' type64='@'/>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='fontWithName:matrix:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fontName' type64='@'/>
<arg const='true' declared_type64='CGFloat * _Nonnull' index='1' name='fontMatrix' type64='^d'/>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='fontWithName:size:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fontName' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='fontWithSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='getAdvancements:forCGGlyphs:count:'>
<arg declared_type64='NSSizeArray _Nonnull' index='0' name='advancements' type64='^{CGSize=dd}'/>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='1' name='glyphs' type64='^S'/>
<arg declared_type64='NSUInteger' index='2' name='glyphCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getAdvancements:forGlyphs:count:'>
<arg declared_type64='NSSizeArray _Nonnull' index='0' name='advancements' type64='^{CGSize=dd}'/>
<arg const='true' declared_type64='NSGlyph * _Nonnull' index='1' name='glyphs' type64='^I'/>
<arg declared_type64='NSUInteger' index='2' name='glyphCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getAdvancements:forPackedGlyphs:length:'>
<arg declared_type64='NSSizeArray _Nonnull' index='0' name='advancements' type64='^{CGSize=dd}'/>
<arg const='true' declared_type64='void * _Nonnull' index='1' name='packedGlyphs' type64='^v'/>
<arg declared_type64='NSUInteger' index='2' name='length' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getBoundingRects:forCGGlyphs:count:'>
<arg declared_type64='NSRectArray _Nonnull' index='0' name='bounds' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='1' name='glyphs' type64='^S'/>
<arg declared_type64='NSUInteger' index='2' name='glyphCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getBoundingRects:forGlyphs:count:'>
<arg declared_type64='NSRectArray _Nonnull' index='0' name='bounds' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='NSGlyph * _Nonnull' index='1' name='glyphs' type64='^I'/>
<arg declared_type64='NSUInteger' index='2' name='glyphCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='glyphWithName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSGlyph' type64='I'/>
</method>
<method selector='isFixedPitch'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVertical'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='italicAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='labelFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='labelFontSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='leading'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='matrix'>
<retval const='true' declared_type64='CGFloat * _Nonnull' type64='^d'/>
</method>
<method selector='maximumAdvancement'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='menuBarFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='menuFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='messageFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='monospacedDigitSystemFontOfSize:weight:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<arg declared_type64='NSFontWeight' index='1' name='weight' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='monospacedSystemFontOfSize:weight:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<arg declared_type64='NSFontWeight' index='1' name='weight' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='mostCompatibleStringEncoding'>
<retval declared_type64='NSStringEncoding' type64='Q'/>
</method>
<method selector='numberOfGlyphs'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='paletteFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='pointSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='preferredFontForTextStyle:options:'>
<arg declared_type64='NSFontTextStyle _Nonnull' index='0' name='style' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='printerFont'>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='renderingMode'>
<retval declared_type64='NSFontRenderingMode' type64='Q'/>
</method>
<method selector='screenFont'>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='screenFontWithRenderingMode:'>
<arg declared_type64='NSFontRenderingMode' index='0' name='renderingMode' type64='Q'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='set'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInContext:'>
<arg declared_type64='NSGraphicsContext * _Nonnull' index='0' name='graphicsContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setUserFixedPitchFont:'>
<arg declared_type64='NSFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setUserFont:'>
<arg declared_type64='NSFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='smallSystemFontSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='systemFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemFontOfSize:weight:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<arg declared_type64='NSFontWeight' index='1' name='weight' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemFontSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='systemFontSizeForControlSize:'>
<arg declared_type64='NSControlSize' index='0' name='controlSize' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='textTransform'>
<retval declared_type64='NSAffineTransform * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='titleBarFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='toolTipsFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='underlinePosition'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='underlineThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='userFixedPitchFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='userFontOfSize:'>
<arg declared_type64='CGFloat' index='0' name='fontSize' type64='d'/>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='verticalFont'>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='xHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSFontAssetRequest'>
<method selector='downloadFontAssetsWithCompletionHandler:'>
<arg declared_type64='BOOL (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='downloadedFontDescriptors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithFontDescriptors:options:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='fontDescriptors' type64='@'/>
<arg declared_type64='NSFontAssetRequestOptions' index='1' name='options' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='progress'>
<retval declared_type64='NSProgress * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSFontCollection'>
<method class_method='true' selector='allFontCollectionNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='exclusionDescriptors'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithAllAvailableDescriptors'>
<retval declared_type64='NSFontCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithDescriptors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='queryDescriptors' type64='@'/>
<retval declared_type64='NSFontCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithLocale:'>
<arg declared_type64='NSLocale * _Nonnull' index='0' name='locale' type64='@'/>
<retval declared_type64='NSFontCollection * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithName:'>
<arg declared_type64='NSFontCollectionName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSFontCollection * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithName:visibility:'>
<arg declared_type64='NSFontCollectionName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSFontCollectionVisibility' index='1' name='visibility' type64='Q'/>
<retval declared_type64='NSFontCollection * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='hideFontCollectionWithName:visibility:error:'>
<arg declared_type64='NSFontCollectionName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSFontCollectionVisibility' index='1' name='visibility' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='matchingDescriptors'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='matchingDescriptorsForFamily:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='family' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='matchingDescriptorsForFamily:options:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='family' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='matchingDescriptorsWithOptions:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='queryDescriptors'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='renameFontCollectionWithName:visibility:toName:error:'>
<arg declared_type64='NSFontCollectionName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSFontCollectionVisibility' index='1' name='visibility' type64='Q'/>
<arg declared_type64='NSFontCollectionName _Nonnull' index='2' name='name' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='showFontCollection:withName:visibility:error:'>
<arg declared_type64='NSFontCollection * _Nonnull' index='0' name='collection' type64='@'/>
<arg declared_type64='NSFontCollectionName _Nonnull' index='1' name='name' type64='@'/>
<arg declared_type64='NSFontCollectionVisibility' index='2' name='visibility' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSFontDescriptor'>
<method selector='fontAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorByAddingAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithDesign:'>
<arg declared_type64='NSFontDescriptorSystemDesign _Nonnull' index='0' name='design' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='fontDescriptorWithFace:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='newFace' type64='@'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithFamily:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='newFamily' type64='@'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithFontAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='attributes' type64='@'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithMatrix:'>
<arg declared_type64='NSAffineTransform * _Nonnull' index='0' name='matrix' type64='@'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:matrix:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fontName' type64='@'/>
<arg declared_type64='NSAffineTransform * _Nonnull' index='1' name='matrix' type64='@'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:size:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fontName' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='size' type64='d'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithSize:'>
<arg declared_type64='CGFloat' index='0' name='newPointSize' type64='d'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='fontDescriptorWithSymbolicTraits:'>
<arg declared_type64='NSFontDescriptorSymbolicTraits' index='0' name='symbolicTraits' type64='I'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='initWithFontAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='attributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='matchingFontDescriptorWithMandatoryKeys:'>
<arg declared_type64='NSSet * _Nullable' index='0' name='mandatoryKeys' type64='@'/>
<retval declared_type64='NSFontDescriptor * _Nullable' type64='@'/>
</method>
<method selector='matchingFontDescriptorsWithMandatoryKeys:'>
<arg declared_type64='NSSet * _Nullable' index='0' name='mandatoryKeys' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='matrix'>
<retval declared_type64='NSAffineTransform * _Nullable' type64='@'/>
</method>
<method selector='objectForKey:'>
<arg declared_type64='NSFontDescriptorAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='pointSize'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='postscriptName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='preferredFontDescriptorForTextStyle:options:'>
<arg declared_type64='NSFontTextStyle _Nonnull' index='0' name='style' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<retval declared_type64='NSFontDescriptor * _Nonnull' type64='@'/>
</method>
<method selector='requiresFontAssetRequest'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='symbolicTraits'>
<retval declared_type64='NSFontDescriptorSymbolicTraits' type64='I'/>
</method>
</class>
<class name='NSFontManager'>
<method selector='action'>
<retval declared_type64='SEL _Nonnull' type64=':'/>
</method>
<method selector='addCollection:options:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='collectionName' type64='@'/>
<arg declared_type64='NSFontCollectionOptions' index='1' name='collectionOptions' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='addFontDescriptors:toCollection:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='descriptors' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='collectionName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addFontTrait:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='availableFontFamilies'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableFontNamesMatchingFontDescriptor:'>
<arg declared_type64='NSFontDescriptor * _Nonnull' index='0' name='descriptor' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableFontNamesWithTraits:'>
<arg declared_type64='NSFontTraitMask' index='0' name='someTraits' type64='Q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableFonts'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableMembersOfFontFamily:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fam' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='collectionNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='convertAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='convertFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='convertFont:toFace:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeface' type64='@'/>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='convertFont:toFamily:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='family' type64='@'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='convertFont:toHaveTrait:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<arg declared_type64='NSFontTraitMask' index='1' name='trait' type64='Q'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='convertFont:toNotHaveTrait:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<arg declared_type64='NSFontTraitMask' index='1' name='trait' type64='Q'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='convertFont:toSize:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='size' type64='d'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='convertFontTraits:'>
<arg declared_type64='NSFontTraitMask' index='0' name='traits' type64='Q'/>
<retval declared_type64='NSFontTraitMask' type64='Q'/>
</method>
<method selector='convertWeight:ofFont:'>
<arg declared_type64='BOOL' index='0' name='upFlag' type64='B'/>
<arg declared_type64='NSFont * _Nonnull' index='1' name='fontObj' type64='@'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='currentFontAction'>
<retval declared_type64='NSFontAction' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='fontDescriptorsInCollection:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='collectionNames' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='fontMenu:'>
<arg declared_type64='BOOL' index='0' name='create' type64='B'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='fontNamed:hasTraits:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fName' type64='@'/>
<arg declared_type64='NSFontTraitMask' index='1' name='someTraits' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='fontPanel:'>
<arg declared_type64='BOOL' index='0' name='create' type64='B'/>
<retval declared_type64='NSFontPanel * _Nullable' type64='@'/>
</method>
<method selector='fontWithFamily:traits:weight:size:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='family' type64='@'/>
<arg declared_type64='NSFontTraitMask' index='1' name='traits' type64='Q'/>
<arg declared_type64='NSInteger' index='2' name='weight' type64='q'/>
<arg declared_type64='CGFloat' index='3' name='size' type64='d'/>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMultiple'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='localizedNameForFamily:face:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='family' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='faceKey' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='modifyFont:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='modifyFontViaPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontFontPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontStylesPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeCollection:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='collectionName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeFontDescriptor:fromCollection:'>
<arg declared_type64='NSFontDescriptor * _Nonnull' index='0' name='descriptor' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='collection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeFontTrait:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedFont'>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='sendAction'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setFontManagerFactory:'>
<arg declared_type64='Class _Nullable' index='0' name='factoryId' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFontMenu:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='newMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setFontPanelFactory:'>
<arg declared_type64='Class _Nullable' index='0' name='factoryId' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedAttributes:isMultiple:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedFont:isMultiple:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedFontManager'>
<retval declared_type64='NSFontManager * _Nonnull' type64='@'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='traitsOfFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<retval declared_type64='NSFontTraitMask' type64='Q'/>
</method>
<method selector='weightOfFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSFontPanel'>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='panelConvertFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='reloadDefaultFontFamilies'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPanelFont:isMultiple:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWorksWhenModal:'>
<arg declared_type64='BOOL' index='0' name='worksWhenModal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedFontPanel'>
<retval declared_type64='NSFontPanel * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sharedFontPanelExists'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='worksWhenModal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSForm'>
<method selector='addEntry:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='NSFormCell * _Nonnull' type64='@'/>
</method>
<method selector='cellAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='id _Null_unspecified' type64='@'/>
</method>
<method selector='drawCellAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexOfCellWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='insertEntry:atIndex:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='NSFormCell * _Null_unspecified' type64='@'/>
</method>
<method selector='preferredTextFieldWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='removeEntryAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectTextAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEntryWidth:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameSize:'>
<arg declared_type64='NSSize' index='0' name='newSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInterlineSpacing:'>
<arg declared_type64='CGFloat' index='0' name='spacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredTextFieldWidth:'>
<arg declared_type64='CGFloat' index='0' name='preferredWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextBaseWritingDirection:'>
<arg declared_type64='NSWritingDirection' index='0' name='writingDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleBaseWritingDirection:'>
<arg declared_type64='NSWritingDirection' index='0' name='writingDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='fontObj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSFormCell'>
<method selector='attributedTitle'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='initTextCell:'>
<arg declared_type64='NSString * _Nullable' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='preferredTextFieldWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type64='NSString * _Nullable' index='0' name='placeholderString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredTextFieldWidth:'>
<arg declared_type64='CGFloat' index='0' name='preferredTextFieldWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='titleAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleBaseWritingDirection:'>
<arg declared_type64='NSWritingDirection' index='0' name='titleBaseWritingDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='titleFont' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWidth:'>
<arg declared_type64='CGFloat' index='0' name='titleWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='titleAlignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='titleBaseWritingDirection'>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method selector='titleFont'>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='titleWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='titleWidth:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSGestureRecognizer'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='allowedTouchTypes'>
<retval declared_type64='NSTouchTypeMask' type64='Q'/>
</method>
<method selector='canBePreventedByGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='preventingGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPreventGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='preventedGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delaysKeyEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delaysMagnificationEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delaysOtherMouseButtonEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delaysPrimaryMouseButtonEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delaysRotationEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delaysSecondaryMouseButtonEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='flagsChanged:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithTarget:action:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='keyUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='locationInView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='magnifyWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseDragged:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='otherMouseDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='otherMouseDragged:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='otherMouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressureChangeWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressureConfiguration'>
<retval declared_type64='NSPressureConfiguration * _Nonnull' type64='@'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rightMouseDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rightMouseDragged:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rightMouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rotateWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedTouchTypes:'>
<arg declared_type64='NSTouchTypeMask' index='0' name='allowedTouchTypes' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysKeyEvents:'>
<arg declared_type64='BOOL' index='0' name='delaysKeyEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysMagnificationEvents:'>
<arg declared_type64='BOOL' index='0' name='delaysMagnificationEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysOtherMouseButtonEvents:'>
<arg declared_type64='BOOL' index='0' name='delaysOtherMouseButtonEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysPrimaryMouseButtonEvents:'>
<arg declared_type64='BOOL' index='0' name='delaysPrimaryMouseButtonEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysRotationEvents:'>
<arg declared_type64='BOOL' index='0' name='delaysRotationEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelaysSecondaryMouseButtonEvents:'>
<arg declared_type64='BOOL' index='0' name='delaysSecondaryMouseButtonEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPressureConfiguration:'>
<arg declared_type64='NSPressureConfiguration * _Nonnull' index='0' name='pressureConfiguration' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setState:'>
<arg declared_type64='NSGestureRecognizerState' index='0' name='state' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldBeRequiredToFailByGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldRequireFailureOfGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='state'>
<retval declared_type64='NSGestureRecognizerState' type64='q'/>
</method>
<method selector='tabletPoint:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='touchesBeganWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesCancelledWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesEndedWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesMovedWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
</class>
<class name='NSGlyphGenerator'>
<method selector='generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:'>
<arg declared_type64='id _Nonnull' index='0' name='glyphStorage' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='nChars' type64='Q'/>
<arg declared_type64='NSUInteger * _Nullable' index='2' name='glyphIndex' type64='^Q'/>
<arg declared_type64='NSUInteger * _Nullable' index='3' name='charIndex' type64='^Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedGlyphGenerator'>
<retval declared_type64='NSGlyphGenerator * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSGlyphInfo'>
<method selector='baseString'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='characterCollection'>
<retval declared_type64='NSCharacterCollection' type64='Q'/>
</method>
<method selector='characterIdentifier'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphID'>
<retval declared_type64='CGGlyph' type64='S'/>
</method>
<method class_method='true' selector='glyphInfoWithCGGlyph:forFont:baseString:'>
<arg declared_type64='CGGlyph' index='0' name='glyph' type64='S'/>
<arg declared_type64='NSFont * _Nonnull' index='1' name='font' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<retval declared_type64='NSGlyphInfo * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='glyphInfoWithCharacterIdentifier:collection:baseString:'>
<arg declared_type64='NSUInteger' index='0' name='cid' type64='Q'/>
<arg declared_type64='NSCharacterCollection' index='1' name='characterCollection' type64='Q'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<retval declared_type64='NSGlyphInfo * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='glyphInfoWithGlyph:forFont:baseString:'>
<arg declared_type64='NSGlyph' index='0' name='glyph' type64='I'/>
<arg declared_type64='NSFont * _Nonnull' index='1' name='font' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<retval declared_type64='NSGlyphInfo * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='glyphInfoWithGlyphName:forFont:baseString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='glyphName' type64='@'/>
<arg declared_type64='NSFont * _Nonnull' index='1' name='font' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<retval declared_type64='NSGlyphInfo * _Nullable' type64='@'/>
</method>
<method selector='glyphName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='NSGradient'>
<method selector='colorSpace'>
<retval declared_type64='NSColorSpace * _Nonnull' type64='@'/>
</method>
<method selector='drawFromCenter:radius:toCenter:radius:options:'>
<arg declared_type64='NSPoint' index='0' name='startCenter' type64='{CGPoint=dd}'/>
<arg declared_type64='CGFloat' index='1' name='startRadius' type64='d'/>
<arg declared_type64='NSPoint' index='2' name='endCenter' type64='{CGPoint=dd}'/>
<arg declared_type64='CGFloat' index='3' name='endRadius' type64='d'/>
<arg declared_type64='NSGradientDrawingOptions' index='4' name='options' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawFromPoint:toPoint:options:'>
<arg declared_type64='NSPoint' index='0' name='startingPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='1' name='endingPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSGradientDrawingOptions' index='2' name='options' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInBezierPath:angle:'>
<arg declared_type64='NSBezierPath * _Nonnull' index='0' name='path' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='angle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInBezierPath:relativeCenterPosition:'>
<arg declared_type64='NSBezierPath * _Nonnull' index='0' name='path' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='relativeCenterPosition' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:angle:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' index='1' name='angle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:relativeCenterPosition:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' index='1' name='relativeCenterPosition' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getColor:location:atIndex:'>
<arg declared_type64='NSColor * _Nonnull * _Nullable' index='0' name='color' type64='^@'/>
<arg declared_type64='CGFloat * _Nullable' index='1' name='location' type64='^d'/>
<arg declared_type64='NSInteger' index='2' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithColors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='colorArray' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithColors:atLocations:colorSpace:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='colorArray' type64='@'/>
<arg const='true' declared_type64='CGFloat * _Nullable' index='1' name='locations' type64='^d'/>
<arg declared_type64='NSColorSpace * _Nonnull' index='2' name='colorSpace' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithColorsAndLocations:' sentinel='0' variadic='true'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='firstColor' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithStartingColor:endingColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='startingColor' type64='@'/>
<arg declared_type64='NSColor * _Nonnull' index='1' name='endingColor' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='interpolatedColorAtLocation:'>
<arg declared_type64='CGFloat' index='0' name='location' type64='d'/>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='numberOfColorStops'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSGraphicsContext'>
<method selector='CGContext'>
<retval declared_type64='CGContextRef _Nonnull' type64='^{CGContext=}'/>
</method>
<method selector='CIContext'>
<retval declared_type64='CIContext * _Nullable' type64='@'/>
</method>
<method selector='attributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='colorRenderingIntent'>
<retval declared_type64='NSColorRenderingIntent' type64='q'/>
</method>
<method selector='compositingOperation'>
<retval declared_type64='NSCompositingOperation' type64='Q'/>
</method>
<method class_method='true' selector='currentContext'>
<retval declared_type64='NSGraphicsContext * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='currentContextDrawingToScreen'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='flushGraphics'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='focusStack'>
<retval declared_type64='id _Null_unspecified' type64='@'/>
</method>
<method class_method='true' selector='graphicsContextWithAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<retval declared_type64='NSGraphicsContext * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='graphicsContextWithBitmapImageRep:'>
<arg declared_type64='NSBitmapImageRep * _Nonnull' index='0' name='bitmapRep' type64='@'/>
<retval declared_type64='NSGraphicsContext * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='graphicsContextWithCGContext:flipped:'>
<arg declared_type64='CGContextRef _Nonnull' index='0' name='graphicsPort' type64='^{CGContext=}'/>
<arg declared_type64='BOOL' index='1' name='initialFlippedState' type64='B'/>
<retval declared_type64='NSGraphicsContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='graphicsContextWithGraphicsPort:flipped:'>
<arg declared_type64='void * _Nonnull' index='0' name='graphicsPort' type64='^v'/>
<arg declared_type64='BOOL' index='1' name='initialFlippedState' type64='B'/>
<retval declared_type64='NSGraphicsContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='graphicsContextWithWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSGraphicsContext * _Nonnull' type64='@'/>
</method>
<method selector='graphicsPort'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='imageInterpolation'>
<retval declared_type64='NSImageInterpolation' type64='Q'/>
</method>
<method selector='isDrawingToScreen'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlipped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='patternPhase'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='restoreGraphicsState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='restoreGraphicsState'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='saveGraphicsState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveGraphicsState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorRenderingIntent:'>
<arg declared_type64='NSColorRenderingIntent' index='0' name='colorRenderingIntent' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompositingOperation:'>
<arg declared_type64='NSCompositingOperation' index='0' name='compositingOperation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setCurrentContext:'>
<arg declared_type64='NSGraphicsContext * _Nullable' index='0' name='currentContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusStack:'>
<arg declared_type64='id _Null_unspecified' index='0' name='stack' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setGraphicsState:'>
<arg declared_type64='NSInteger' index='0' name='gState' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageInterpolation:'>
<arg declared_type64='NSImageInterpolation' index='0' name='imageInterpolation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPatternPhase:'>
<arg declared_type64='NSPoint' index='0' name='patternPhase' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldAntialias:'>
<arg declared_type64='BOOL' index='0' name='shouldAntialias' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldAntialias'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSGridCell'>
<method selector='column'>
<retval declared_type64='NSGridColumn * _Nullable' type64='@'/>
</method>
<method selector='contentView'>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
<method selector='customPlacementConstraints'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='emptyContentView'>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
<method selector='row'>
<retval declared_type64='NSGridRow * _Nullable' type64='@'/>
</method>
<method selector='rowAlignment'>
<retval declared_type64='NSGridRowAlignment' type64='q'/>
</method>
<method selector='setContentView:'>
<arg declared_type64='__kindof NSView * _Nullable' index='0' name='contentView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomPlacementConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='customPlacementConstraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowAlignment:'>
<arg declared_type64='NSGridRowAlignment' index='0' name='rowAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setXPlacement:'>
<arg declared_type64='NSGridCellPlacement' index='0' name='xPlacement' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setYPlacement:'>
<arg declared_type64='NSGridCellPlacement' index='0' name='yPlacement' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='xPlacement'>
<retval declared_type64='NSGridCellPlacement' type64='q'/>
</method>
<method selector='yPlacement'>
<retval declared_type64='NSGridCellPlacement' type64='q'/>
</method>
</class>
<class name='NSGridColumn'>
<method selector='cellAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSGridCell * _Nonnull' type64='@'/>
</method>
<method selector='gridView'>
<retval declared_type64='NSGridView * _Nullable' type64='@'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='leadingPadding'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='mergeCellsInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfCells'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeadingPadding:'>
<arg declared_type64='CGFloat' index='0' name='leadingPadding' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrailingPadding:'>
<arg declared_type64='CGFloat' index='0' name='trailingPadding' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setXPlacement:'>
<arg declared_type64='NSGridCellPlacement' index='0' name='xPlacement' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trailingPadding'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='width'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='xPlacement'>
<retval declared_type64='NSGridCellPlacement' type64='q'/>
</method>
</class>
<class name='NSGridRow'>
<method selector='bottomPadding'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='cellAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSGridCell * _Nonnull' type64='@'/>
</method>
<method selector='gridView'>
<retval declared_type64='NSGridView * _Nullable' type64='@'/>
</method>
<method selector='height'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mergeCellsInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfCells'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rowAlignment'>
<retval declared_type64='NSGridRowAlignment' type64='q'/>
</method>
<method selector='setBottomPadding:'>
<arg declared_type64='CGFloat' index='0' name='bottomPadding' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='CGFloat' index='0' name='height' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowAlignment:'>
<arg declared_type64='NSGridRowAlignment' index='0' name='rowAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTopPadding:'>
<arg declared_type64='CGFloat' index='0' name='topPadding' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setYPlacement:'>
<arg declared_type64='NSGridCellPlacement' index='0' name='yPlacement' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='topPadding'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='yPlacement'>
<retval declared_type64='NSGridCellPlacement' type64='q'/>
</method>
</class>
<class name='NSGridView'>
<method selector='addColumnWithViews:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='views' type64='@'/>
<retval declared_type64='NSGridColumn * _Nonnull' type64='@'/>
</method>
<method selector='addRowWithViews:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='views' type64='@'/>
<retval declared_type64='NSGridRow * _Nonnull' type64='@'/>
</method>
<method selector='cellAtColumnIndex:rowIndex:'>
<arg declared_type64='NSInteger' index='0' name='columnIndex' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='rowIndex' type64='q'/>
<retval declared_type64='NSGridCell * _Nonnull' type64='@'/>
</method>
<method selector='cellForView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSGridCell * _Nullable' type64='@'/>
</method>
<method selector='columnAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSGridColumn * _Nonnull' type64='@'/>
</method>
<method selector='columnSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='gridViewWithNumberOfColumns:rows:'>
<arg declared_type64='NSInteger' index='0' name='columnCount' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='rowCount' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='gridViewWithViews:'>
<arg declared_type64='NSArray *&gt; * _Nonnull' index='0' name='rows' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='indexOfColumn:'>
<arg declared_type64='NSGridColumn * _Nonnull' index='0' name='column' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfRow:'>
<arg declared_type64='NSGridRow * _Nonnull' index='0' name='row' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertColumnAtIndex:withViews:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='views' type64='@'/>
<retval declared_type64='NSGridColumn * _Nonnull' type64='@'/>
</method>
<method selector='insertRowAtIndex:withViews:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='views' type64='@'/>
<retval declared_type64='NSGridRow * _Nonnull' type64='@'/>
</method>
<method selector='mergeCellsInHorizontalRange:verticalRange:'>
<arg declared_type64='NSRange' index='0' name='hRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='1' name='vRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveColumnAtIndex:toIndex:'>
<arg declared_type64='NSInteger' index='0' name='fromIndex' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='toIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveRowAtIndex:toIndex:'>
<arg declared_type64='NSInteger' index='0' name='fromIndex' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='toIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='removeColumnAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeRowAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rowAlignment'>
<retval declared_type64='NSGridRowAlignment' type64='q'/>
</method>
<method selector='rowAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSGridRow * _Nonnull' type64='@'/>
</method>
<method selector='rowSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setColumnSpacing:'>
<arg declared_type64='CGFloat' index='0' name='columnSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowAlignment:'>
<arg declared_type64='NSGridRowAlignment' index='0' name='rowAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowSpacing:'>
<arg declared_type64='CGFloat' index='0' name='rowSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setXPlacement:'>
<arg declared_type64='NSGridCellPlacement' index='0' name='xPlacement' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setYPlacement:'>
<arg declared_type64='NSGridCellPlacement' index='0' name='yPlacement' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='xPlacement'>
<retval declared_type64='NSGridCellPlacement' type64='q'/>
</method>
<method selector='yPlacement'>
<retval declared_type64='NSGridCellPlacement' type64='q'/>
</method>
</class>
<class name='NSGroupTouchBarItem'>
<method class_method='true' selector='alertStyleGroupItemWithIdentifier:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='effectiveCompressionOptions'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='groupItemWithIdentifier:items:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='groupItemWithIdentifier:items:allowedCompressionOptions:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' index='2' name='allowedCompressionOptions' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='groupTouchBar'>
<retval declared_type64='NSTouchBar * _Nonnull' type64='@'/>
</method>
<method selector='groupUserInterfaceLayoutDirection'>
<retval declared_type64='NSUserInterfaceLayoutDirection' type64='q'/>
</method>
<method selector='preferredItemWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='prefersEqualWidths'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prioritizedCompressionOptions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGroupTouchBar:'>
<arg declared_type64='NSTouchBar * _Nonnull' index='0' name='groupTouchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGroupUserInterfaceLayoutDirection:'>
<arg declared_type64='NSUserInterfaceLayoutDirection' index='0' name='groupUserInterfaceLayoutDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredItemWidth:'>
<arg declared_type64='CGFloat' index='0' name='preferredItemWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrefersEqualWidths:'>
<arg declared_type64='BOOL' index='0' name='prefersEqualWidths' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrioritizedCompressionOptions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedCompressionOptions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSHapticFeedbackManager'>
<method class_method='true' selector='defaultPerformer'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</class>
<class name='NSHelpManager'>
<method selector='contextHelpForObject:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='findString:inBook:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='query' type64='@'/>
<arg declared_type64='NSHelpBookName _Nullable' index='1' name='book' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='isContextHelpModeActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='openHelpAnchor:inBook:'>
<arg declared_type64='NSHelpAnchorName _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='NSHelpBookName _Nullable' index='1' name='book' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerBooksInBundle:'>
<arg declared_type64='NSBundle * _Nonnull' index='0' name='bundle' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeContextHelpForObject:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContextHelp:forObject:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attrString' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setContextHelpModeActive:'>
<arg declared_type64='BOOL' index='0' name='contextHelpModeActive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedHelpManager'>
<retval declared_type64='NSHelpManager * _Nonnull' type64='@'/>
</method>
<method selector='showContextHelpForObject:locationHint:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='pt' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSImage'>
<method selector='CGImageForProposedRect:context:hints:'>
<arg declared_type64='NSRect * _Nullable' index='0' name='proposedDestRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSGraphicsContext * _Nullable' index='1' name='referenceContext' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='hints' type64='@'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='TIFFRepresentation'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='TIFFRepresentationUsingCompression:factor:'>
<arg declared_type64='NSTIFFCompression' index='0' name='comp' type64='Q'/>
<arg declared_type64='float' index='1' name='factor' type64='f'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='accessibilityDescription'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='addRepresentation:'>
<arg declared_type64='NSImageRep * _Nonnull' index='0' name='imageRep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addRepresentations:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='imageReps' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignmentRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='bestRepresentationForDevice:'>
<arg declared_type64='NSDictionary * _Null_unspecified' index='0' name='deviceDescription' type64='@'/>
<retval declared_type64='NSImageRep * _Null_unspecified' type64='@'/>
</method>
<method selector='bestRepresentationForRect:context:hints:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSGraphicsContext * _Nullable' index='1' name='referenceContext' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='hints' type64='@'/>
<retval declared_type64='NSImageRep * _Nullable' type64='@'/>
</method>
<method selector='cacheDepthMatchesImageDepth'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cacheMode'>
<retval declared_type64='NSImageCacheMode' type64='Q'/>
</method>
<method class_method='true' selector='canInitWithPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelIncrementalLoad'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='capInsets'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='compositeToPoint:fromRect:operation:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' index='2' name='op' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositeToPoint:fromRect:operation:fraction:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' index='2' name='op' type64='Q'/>
<arg declared_type64='CGFloat' index='3' name='delta' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositeToPoint:operation:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSCompositingOperation' index='1' name='op' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compositeToPoint:operation:fraction:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSCompositingOperation' index='1' name='op' type64='Q'/>
<arg declared_type64='CGFloat' index='2' name='delta' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='dissolveToPoint:fraction:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='CGFloat' index='1' name='fraction' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dissolveToPoint:fromRect:fraction:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' index='2' name='fraction' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawAtPoint:fromRect:operation:fraction:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' index='2' name='op' type64='Q'/>
<arg declared_type64='CGFloat' index='3' name='delta' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='1' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' index='2' name='op' type64='Q'/>
<arg declared_type64='CGFloat' index='3' name='delta' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:respectFlipped:hints:'>
<arg declared_type64='NSRect' index='0' name='dstSpacePortionRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='1' name='srcSpacePortionRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' index='2' name='op' type64='Q'/>
<arg declared_type64='CGFloat' index='3' name='requestedAlpha' type64='d'/>
<arg declared_type64='BOOL' index='4' name='respectContextIsFlipped' type64='B'/>
<arg declared_type64='NSDictionary * _Nullable' index='5' name='hints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawRepresentation:inRect:'>
<arg declared_type64='NSImageRep * _Nonnull' index='0' name='imageRep' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hitTestRect:withImageDestinationRect:context:hints:flipped:'>
<arg declared_type64='NSRect' index='0' name='testRectDestSpace' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='1' name='imageRectDestSpace' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSGraphicsContext * _Nullable' index='2' name='context' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='hints' type64='@'/>
<arg declared_type64='BOOL' index='4' name='flipped' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='imageFileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageNamed:'>
<arg declared_type64='NSImageName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imagePasteboardTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageUnfilteredFileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageUnfilteredPasteboardTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageUnfilteredTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithSize:flipped:drawingHandler:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='1' name='drawingHandlerShouldBeCalledWithFlippedContext' type64='B'/>
<arg declared_type64='BOOL (^ _Nonnull)(NSRect)' function_pointer='true' index='2' name='drawingHandler' type64='@?'>
<arg declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='imageWithSymbolConfiguration:'>
<arg declared_type64='NSImageSymbolConfiguration * _Nonnull' index='0' name='configuration' type64='@'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageWithSystemSymbolName:accessibilityDescription:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='symbolName' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='description' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initByReferencingFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initByReferencingURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGImage:size:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='cgImage' type64='^{CGImage=}'/>
<arg declared_type64='NSSize' index='1' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileName' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithDataIgnoringOrientation:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithIconRef:'>
<arg declared_type64='IconRef _Nonnull' index='0' name='iconRef' type64='^{OpaqueIconRef=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isCachedSeparately'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDataRetained'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlipped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTemplate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isValid'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layerContentsForContentsScale:'>
<arg declared_type64='CGFloat' index='0' name='layerContentsScale' type64='d'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='lockFocus'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lockFocusFlipped:'>
<arg declared_type64='BOOL' index='0' name='flipped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lockFocusOnRepresentation:'>
<arg declared_type64='NSImageRep * _Null_unspecified' index='0' name='imageRepresentation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='matchesOnMultipleResolution'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='matchesOnlyOnBestFittingAxis'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='name'>
<retval declared_type64='NSImageName _Nullable' type64='@'/>
</method>
<method selector='prefersColorMatch'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='recache'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='recommendedLayerContentsScale:'>
<arg declared_type64='CGFloat' index='0' name='preferredContentsScale' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='removeRepresentation:'>
<arg declared_type64='NSImageRep * _Nonnull' index='0' name='imageRep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='representations'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='resizingMode'>
<retval declared_type64='NSImageResizingMode' type64='q'/>
</method>
<method selector='scalesWhenResized'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAccessibilityDescription:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlignmentRect:'>
<arg declared_type64='NSRect' index='0' name='alignmentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCacheDepthMatchesImageDepth:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCacheMode:'>
<arg declared_type64='NSImageCacheMode' index='0' name='cacheMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCachedSeparately:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCapInsets:'>
<arg declared_type64='NSEdgeInsets' index='0' name='capInsets' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataRetained:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFlipped:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMatchesOnMultipleResolution:'>
<arg declared_type64='BOOL' index='0' name='matchesOnMultipleResolution' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMatchesOnlyOnBestFittingAxis:'>
<arg declared_type64='BOOL' index='0' name='matchesOnlyOnBestFittingAxis' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSImageName _Nullable' index='0' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPrefersColorMatch:'>
<arg declared_type64='BOOL' index='0' name='prefersColorMatch' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResizingMode:'>
<arg declared_type64='NSImageResizingMode' index='0' name='resizingMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScalesWhenResized:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTemplate:'>
<arg declared_type64='BOOL' index='0' name='template' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesEPSOnResolutionMismatch:'>
<arg declared_type64='BOOL' index='0' name='usesEPSOnResolutionMismatch' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='size'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='unlockFocus'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesEPSOnResolutionMismatch'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSImageCell'>
<method selector='imageAlignment'>
<retval declared_type64='NSImageAlignment' type64='Q'/>
</method>
<method selector='imageFrameStyle'>
<retval declared_type64='NSImageFrameStyle' type64='Q'/>
</method>
<method selector='imageScaling'>
<retval declared_type64='NSImageScaling' type64='Q'/>
</method>
<method selector='setImageAlignment:'>
<arg declared_type64='NSImageAlignment' index='0' name='imageAlignment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageFrameStyle:'>
<arg declared_type64='NSImageFrameStyle' index='0' name='imageFrameStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageScaling:'>
<arg declared_type64='NSImageScaling' index='0' name='imageScaling' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSImageRep'>
<method selector='CGImageForProposedRect:context:hints:'>
<arg declared_type64='NSRect * _Nullable' index='0' name='proposedDestRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSGraphicsContext * _Nullable' index='1' name='context' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='hints' type64='@'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='bitsPerSample'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='canInitWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='canInitWithPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='colorSpaceName'>
<retval declared_type64='NSColorSpaceName _Nonnull' type64='@'/>
</method>
<method selector='draw'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:respectFlipped:hints:'>
<arg declared_type64='NSRect' index='0' name='dstSpacePortionRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='1' name='srcSpacePortionRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCompositingOperation' index='2' name='op' type64='Q'/>
<arg declared_type64='CGFloat' index='3' name='requestedAlpha' type64='d'/>
<arg declared_type64='BOOL' index='4' name='respectContextIsFlipped' type64='B'/>
<arg declared_type64='NSDictionary * _Nullable' index='5' name='hints' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasAlpha'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='imageFileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imagePasteboardTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageRepClassForData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method class_method='true' selector='imageRepClassForFileType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method class_method='true' selector='imageRepClassForPasteboardType:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method class_method='true' selector='imageRepClassForType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method class_method='true' selector='imageRepWithContentsOfFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filename' type64='@'/>
<retval declared_type64='NSImageRep * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageRepWithContentsOfURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='NSImageRep * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageRepWithPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='NSImageRep * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageRepsWithContentsOfFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filename' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageRepsWithContentsOfURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageRepsWithPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageUnfilteredFileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageUnfilteredPasteboardTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageUnfilteredTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutDirection'>
<retval declared_type64='NSImageLayoutDirection' type64='q'/>
</method>
<method selector='pixelsHigh'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='pixelsWide'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='registerImageRepClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='imageRepClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='registeredImageRepClasses'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type64='BOOL' index='0' name='alpha' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBitsPerSample:'>
<arg declared_type64='NSInteger' index='0' name='bitsPerSample' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorSpaceName:'>
<arg declared_type64='NSColorSpaceName _Nonnull' index='0' name='colorSpaceName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutDirection:'>
<arg declared_type64='NSImageLayoutDirection' index='0' name='layoutDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type64='BOOL' index='0' name='opaque' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPixelsHigh:'>
<arg declared_type64='NSInteger' index='0' name='pixelsHigh' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPixelsWide:'>
<arg declared_type64='NSInteger' index='0' name='pixelsWide' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='size'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='unregisterImageRepClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='imageRepClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSImageSymbolConfiguration'>
<method class_method='true' selector='configurationWithPointSize:weight:'>
<arg declared_type64='CGFloat' index='0' name='pointSize' type64='d'/>
<arg declared_type64='NSFontWeight' index='1' name='weight' type64='d'/>
<retval declared_type64='NSImageSymbolConfiguration * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='configurationWithPointSize:weight:scale:'>
<arg declared_type64='CGFloat' index='0' name='pointSize' type64='d'/>
<arg declared_type64='NSFontWeight' index='1' name='weight' type64='d'/>
<arg declared_type64='NSImageSymbolScale' index='2' name='scale' type64='q'/>
<retval declared_type64='NSImageSymbolConfiguration * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='configurationWithScale:'>
<arg declared_type64='NSImageSymbolScale' index='0' name='scale' type64='q'/>
<retval declared_type64='NSImageSymbolConfiguration * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='configurationWithTextStyle:'>
<arg declared_type64='NSFontTextStyle _Nonnull' index='0' name='style' type64='@'/>
<retval declared_type64='NSImageSymbolConfiguration * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='configurationWithTextStyle:scale:'>
<arg declared_type64='NSFontTextStyle _Nonnull' index='0' name='style' type64='@'/>
<arg declared_type64='NSImageSymbolScale' index='1' name='scale' type64='q'/>
<retval declared_type64='NSImageSymbolConfiguration * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSImageView'>
<method selector='allowsCutCopyPaste'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='animates'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentTintColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='imageAlignment'>
<retval declared_type64='NSImageAlignment' type64='Q'/>
</method>
<method selector='imageFrameStyle'>
<retval declared_type64='NSImageFrameStyle' type64='Q'/>
</method>
<method selector='imageScaling'>
<retval declared_type64='NSImageScaling' type64='Q'/>
</method>
<method class_method='true' selector='imageViewWithImage:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAllowsCutCopyPaste:'>
<arg declared_type64='BOOL' index='0' name='allowsCutCopyPaste' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimates:'>
<arg declared_type64='BOOL' index='0' name='animates' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentTintColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='contentTintColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageAlignment:'>
<arg declared_type64='NSImageAlignment' index='0' name='imageAlignment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageFrameStyle:'>
<arg declared_type64='NSImageFrameStyle' index='0' name='imageFrameStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageScaling:'>
<arg declared_type64='NSImageScaling' index='0' name='imageScaling' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSymbolConfiguration:'>
<arg declared_type64='NSImageSymbolConfiguration * _Nullable' index='0' name='symbolConfiguration' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='symbolConfiguration'>
<retval declared_type64='NSImageSymbolConfiguration * _Nullable' type64='@'/>
</method>
</class>
<class name='NSIndexPath'>
<method class_method='true' selector='indexPathForItem:inSection:'>
<arg declared_type64='NSInteger' index='0' name='item' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='item'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='section'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSInputManager'>
<method class_method='true' selector='currentInputManager'>
<retval declared_type64='NSInputManager * _Null_unspecified' type64='@'/>
</method>
<method class_method='true' selector='cycleToNextInputLanguage:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='cycleToNextInputServerInLanguage:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='handleMouseEvent:'>
<arg declared_type64='NSEvent * _Null_unspecified' index='0' name='mouseEvent' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Null_unspecified' type64='@'/>
</method>
<method selector='initWithName:host:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='inputServerName' type64='@'/>
<arg declared_type64='NSString * _Null_unspecified' index='1' name='hostName' type64='@'/>
<retval declared_type64='NSInputManager * _Null_unspecified' type64='@'/>
</method>
<method selector='language'>
<retval declared_type64='NSString * _Null_unspecified' type64='@'/>
</method>
<method selector='localizedInputManagerName'>
<retval declared_type64='NSString * _Null_unspecified' type64='@'/>
</method>
<method selector='markedTextAbandoned:'>
<arg declared_type64='id _Null_unspecified' index='0' name='cli' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedTextSelectionChanged:client:'>
<arg declared_type64='NSRange' index='0' name='newSel' type64='{_NSRange=QQ}'/>
<arg declared_type64='id _Null_unspecified' index='1' name='cli' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='server'>
<retval declared_type64='NSInputServer * _Null_unspecified' type64='@'/>
</method>
<method selector='wantsToDelayTextChangeNotifications'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToHandleMouseEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToInterpretAllKeystrokes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSInputServer'>
<method selector='initWithDelegate:name:'>
<arg declared_type64='id _Null_unspecified' index='0' name='delegate' type64='@'/>
<arg declared_type64='NSString * _Null_unspecified' index='1' name='name' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSItemProvider'>
<method selector='containerFrame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='preferredPresentationSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='registerCloudKitShare:container:'>
<arg declared_type64='CKShare * _Nonnull' index='0' name='share' type64='@'/>
<arg declared_type64='CKContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerCloudKitShareWithPreparationHandler:'>
<arg declared_type64='void (^ _Nonnull)(void (^ _Nonnull)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable))' function_pointer='true' index='0' name='preparationHandler' type64='@?'>
<arg declared_type64='void (^ _Nonnull)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable)' function_pointer='true' type64='@?'>
<arg declared_type64='CKShare * _Nullable' type64='@'/>
<arg declared_type64='CKContainer * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourceFrame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSLayoutAnchor'>
<method selector='constraintEqualToAnchor:'>
<arg declared_type64='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintEqualToAnchor:constant:'>
<arg declared_type64='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:'>
<arg declared_type64='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:constant:'>
<arg declared_type64='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:'>
<arg declared_type64='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:constant:'>
<arg declared_type64='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintsAffectingLayout'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='item'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSLayoutConstraint'>
<method class_method='true' selector='activateConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='constant'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:'>
<arg declared_type64='id _Nonnull' index='0' name='view1' type64='@'/>
<arg declared_type64='NSLayoutAttribute' index='1' name='attr1' type64='q'/>
<arg declared_type64='NSLayoutRelation' index='2' name='relation' type64='q'/>
<arg declared_type64='id _Nullable' index='3' name='view2' type64='@'/>
<arg declared_type64='NSLayoutAttribute' index='4' name='attr2' type64='q'/>
<arg declared_type64='CGFloat' index='5' name='multiplier' type64='d'/>
<arg declared_type64='CGFloat' index='6' name='c' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='constraintsWithVisualFormat:options:metrics:views:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='NSLayoutFormatOptions' index='1' name='opts' type64='Q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='metrics' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='views' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='deactivateConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstAnchor'>
<retval declared_type64='NSLayoutAnchor * _Nonnull' type64='@'/>
</method>
<method selector='firstAttribute'>
<retval declared_type64='NSLayoutAttribute' type64='q'/>
</method>
<method selector='firstItem'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='multiplier'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='priority'>
<retval declared_type64='NSLayoutPriority' type64='f'/>
</method>
<method selector='relation'>
<retval declared_type64='NSLayoutRelation' type64='q'/>
</method>
<method selector='secondAnchor'>
<retval declared_type64='NSLayoutAnchor * _Nullable' type64='@'/>
</method>
<method selector='secondAttribute'>
<retval declared_type64='NSLayoutAttribute' type64='q'/>
</method>
<method selector='secondItem'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setActive:'>
<arg declared_type64='BOOL' index='0' name='active' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setConstant:'>
<arg declared_type64='CGFloat' index='0' name='constant' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPriority:'>
<arg declared_type64='NSLayoutPriority' index='0' name='priority' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldBeArchived:'>
<arg declared_type64='BOOL' index='0' name='shouldBeArchived' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldBeArchived'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSLayoutDimension'>
<method selector='constraintEqualToAnchor:multiplier:'>
<arg declared_type64='NSLayoutDimension * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintEqualToAnchor:multiplier:constant:'>
<arg declared_type64='NSLayoutDimension * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintEqualToConstant:'>
<arg declared_type64='CGFloat' index='0' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:multiplier:'>
<arg declared_type64='NSLayoutDimension * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:multiplier:constant:'>
<arg declared_type64='NSLayoutDimension * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToConstant:'>
<arg declared_type64='CGFloat' index='0' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:multiplier:'>
<arg declared_type64='NSLayoutDimension * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:multiplier:constant:'>
<arg declared_type64='NSLayoutDimension * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='m' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToConstant:'>
<arg declared_type64='CGFloat' index='0' name='c' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSLayoutGuide'>
<method selector='bottomAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='centerXAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='centerYAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='constraintsAffectingLayoutForOrientation:'>
<arg declared_type64='NSLayoutConstraintOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='heightAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSUserInterfaceItemIdentifier _Nonnull' type64='@'/>
</method>
<method selector='leadingAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='leftAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='owningView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='rightAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOwningView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='owningView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='topAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='trailingAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='widthAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSLayoutManager'>
<method selector='CGGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='CGGlyph' type64='S'/>
</method>
<method selector='CGGlyphAtIndex:isValidIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='BOOL * _Nullable' index='1' name='isValidIndex' type64='^B'/>
<retval declared_type64='CGGlyph' type64='S'/>
</method>
<method selector='addTemporaryAttribute:value:forCharacterRange:'>
<arg declared_type64='NSAttributedStringKey _Nonnull' index='0' name='attrName' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='value' type64='@'/>
<arg declared_type64='NSRange' index='2' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addTemporaryAttributes:forCharacterRange:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attrs' type64='@'/>
<arg declared_type64='NSRange' index='1' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsNonContiguousLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attachmentSizeForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='backgroundLayoutEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='boundingRectForGlyphRange:inTextContainer:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundsRectForTextBlock:atIndex:effectiveRange:'>
<arg declared_type64='NSTextBlock * _Nonnull' index='0' name='block' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundsRectForTextBlock:glyphRange:'>
<arg declared_type64='NSTextBlock * _Nonnull' index='0' name='block' type64='@'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterIndexForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='partialFraction' type64='^d'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='defaultAttachmentScaling'>
<retval declared_type64='NSImageScaling' type64='Q'/>
</method>
<method selector='defaultBaselineOffsetForFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='theFont' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='defaultLineHeightForFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='theFont' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deleteGlyphsInRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawBackgroundForGlyphRange:atPoint:'>
<arg declared_type64='NSRange' index='0' name='glyphsToShow' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='1' name='origin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawGlyphsForGlyphRange:atPoint:'>
<arg declared_type64='NSRange' index='0' name='glyphsToShow' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='1' name='origin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUnderlineStyle' index='1' name='strikethroughVal' type64='q'/>
<arg declared_type64='CGFloat' index='2' name='baselineOffset' type64='d'/>
<arg declared_type64='NSRect' index='3' name='lineRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='4' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='5' name='containerOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUnderlineStyle' index='1' name='underlineVal' type64='q'/>
<arg declared_type64='CGFloat' index='2' name='baselineOffset' type64='d'/>
<arg declared_type64='NSRect' index='3' name='lineRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='4' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='5' name='containerOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawsOutsideLineFragmentForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='ensureGlyphsForCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureGlyphsForGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureLayoutForBoundingRect:inTextContainer:'>
<arg declared_type64='NSRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureLayoutForCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureLayoutForGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ensureLayoutForTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='textContainer' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSRect, BOOL * _Nonnull)' function_pointer='true' index='3' name='block' type64='@?'>
<arg declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateLineFragmentsForGlyphRange:usingBlock:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='void (^ _Nonnull)(NSRect, NSRect, NSTextContainer * _Nonnull, NSRange, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' type64='@'/>
<arg declared_type64='NSRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extraLineFragmentRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='extraLineFragmentTextContainer'>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method selector='extraLineFragmentUsedRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='fillBackgroundRectArray:count:forCharacterRange:color:'>
<arg const='true' declared_type64='NSRect * _Nonnull' index='0' name='rectArray' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='1' name='rectCount' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSColor * _Nonnull' index='3' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstTextView'>
<retval declared_type64='NSTextView * _Nullable' type64='@'/>
</method>
<method selector='firstUnlaidCharacterIndex'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='firstUnlaidGlyphIndex'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:inTextContainer:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='getFirstUnlaidCharacterIndex:glyphIndex:'>
<arg declared_type64='NSUInteger * _Nullable' index='0' name='charIndex' type64='^Q'/>
<arg declared_type64='NSUInteger * _Nullable' index='1' name='glyphIndex' type64='^Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getGlyphs:range:'>
<arg declared_type64='NSGlyph * _Nullable' index='0' name='glyphArray' type64='^I'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSGlyph * _Nullable' index='1' name='glyphBuffer' type64='^I'/>
<arg declared_type64='NSUInteger * _Nullable' index='2' name='charIndexBuffer' type64='^Q'/>
<arg declared_type64='NSGlyphInscription * _Nullable' index='3' name='inscribeBuffer' type64='^Q'/>
<arg declared_type64='BOOL * _Nullable' index='4' name='elasticBuffer' type64='^B'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSGlyph * _Nullable' index='1' name='glyphBuffer' type64='^I'/>
<arg declared_type64='NSUInteger * _Nullable' index='2' name='charIndexBuffer' type64='^Q'/>
<arg declared_type64='NSGlyphInscription * _Nullable' index='3' name='inscribeBuffer' type64='^Q'/>
<arg declared_type64='BOOL * _Nullable' index='4' name='elasticBuffer' type64='^B'/>
<arg declared_type64='unsigned char * _Nullable' index='5' name='bidiLevelBuffer' type64='*'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='CGGlyph * _Nullable' index='1' name='glyphBuffer' type64='^S'/>
<arg declared_type64='NSGlyphProperty * _Nullable' index='2' name='props' type64='^q'/>
<arg declared_type64='NSUInteger * _Nullable' index='3' name='charIndexBuffer' type64='^Q'/>
<arg declared_type64='unsigned char * _Nullable' index='4' name='bidiLevelBuffer' type64='*'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='aFlag' type64='B'/>
<arg declared_type64='BOOL' index='2' name='dFlag' type64='B'/>
<arg declared_type64='CGFloat * _Nullable' index='3' name='positions' type64='^d'/>
<arg declared_type64='NSUInteger * _Nullable' index='4' name='charIndexes' type64='^Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSGlyph' type64='I'/>
</method>
<method selector='glyphAtIndex:isValidIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='BOOL * _Nullable' index='1' name='isValidIndex' type64='^B'/>
<retval declared_type64='NSGlyph' type64='I'/>
</method>
<method selector='glyphGenerator'>
<retval declared_type64='NSGlyphGenerator * _Nonnull' type64='@'/>
</method>
<method selector='glyphIndexForCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<arg declared_type64='CGFloat * _Nullable' index='2' name='partialFraction' type64='^d'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='glyphRangeForBoundingRect:inTextContainer:'>
<arg declared_type64='NSRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'>
<arg declared_type64='NSRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='container' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='hasNonContiguousLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='insertGlyph:atGlyphIndex:characterIndex:'>
<arg declared_type64='NSGlyph' index='0' name='glyph' type64='I'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
<arg const='true' declared_type64='NSGlyph * _Nonnull' index='0' name='glyphs' type64='^I'/>
<arg declared_type64='NSUInteger' index='1' name='length' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTextContainer:atIndex:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='intAttribute:forGlyphAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='attributeTag' type64='q'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='invalidateDisplayForCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateDisplayForGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='1' name='delta' type64='q'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='actualCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateGlyphsOnLayoutInvalidationForGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateLayoutForCharacterRange:actualCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='actualCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isValidGlyphIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManagerOwnsFirstResponderInWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutRectForTextBlock:atIndex:effectiveRange:'>
<arg declared_type64='NSTextBlock * _Nonnull' index='0' name='block' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutRectForTextBlock:glyphRange:'>
<arg declared_type64='NSTextBlock * _Nonnull' index='0' name='block' type64='@'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='limitsLayoutForSuspiciousContents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='locationForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='notShownAttributeForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='numberOfGlyphs'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='newCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<arg declared_type64='NSRange' index='4' name='invalidatedCharRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='propertyForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSGlyphProperty' type64='q'/>
</method>
<method selector='rangeOfNominallySpacedGlyphsContainingIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='1' name='selCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='container' type64='@'/>
<arg declared_type64='NSUInteger * _Nonnull' index='3' name='rectCount' type64='^Q'/>
<retval declared_type64='NSRectArray _Nullable' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='1' name='selGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='container' type64='@'/>
<arg declared_type64='NSUInteger * _Nonnull' index='3' name='rectCount' type64='^Q'/>
<retval declared_type64='NSRectArray _Nullable' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='removeTemporaryAttribute:forCharacterRange:'>
<arg declared_type64='NSAttributedStringKey _Nonnull' index='0' name='attrName' type64='@'/>
<arg declared_type64='NSRange' index='1' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTextContainerAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceGlyphAtIndex:withGlyph:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSGlyph' index='1' name='newGlyph' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceTextStorage:'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='newTextStorage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSParagraphStyle * _Nonnull' index='1' name='style' type64='@'/>
<arg declared_type64='NSRulerView * _Nonnull' index='2' name='ruler' type64='@'/>
<arg declared_type64='BOOL' index='3' name='isEnabled' type64='B'/>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
<method selector='rulerMarkersForTextView:paragraphStyle:ruler:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSParagraphStyle * _Nonnull' index='1' name='style' type64='@'/>
<arg declared_type64='NSRulerView * _Nonnull' index='2' name='ruler' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setAllowsNonContiguousLayout:'>
<arg declared_type64='BOOL' index='0' name='allowsNonContiguousLayout' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg declared_type64='NSSize' index='0' name='attachmentSize' type64='{CGSize=dd}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundLayoutEnabled:'>
<arg declared_type64='BOOL' index='0' name='backgroundLayoutEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBoundsRect:forTextBlock:glyphRange:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextBlock * _Nonnull' index='1' name='block' type64='@'/>
<arg declared_type64='NSRange' index='2' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCharacterIndex:forGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultAttachmentScaling:'>
<arg declared_type64='NSImageScaling' index='0' name='defaultAttachmentScaling' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphAtIndex:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtraLineFragmentRect:usedRect:textContainer:'>
<arg declared_type64='NSRect' index='0' name='fragmentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='1' name='usedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGlyphGenerator:'>
<arg declared_type64='NSGlyphGenerator * _Nonnull' index='0' name='glyphGenerator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGlyphs:properties:characterIndexes:font:forGlyphRange:'>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='0' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='NSGlyphProperty * _Nonnull' index='1' name='props' type64='^q'/>
<arg const='true' declared_type64='NSUInteger * _Nonnull' index='2' name='charIndexes' type64='^Q'/>
<arg declared_type64='NSFont * _Nonnull' index='3' name='aFont' type64='@'/>
<arg declared_type64='NSRange' index='4' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type64='float' index='0' name='hyphenationFactor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntAttribute:value:forGlyphAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='attributeTag' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='val' type64='q'/>
<arg declared_type64='NSUInteger' index='2' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutRect:forTextBlock:glyphRange:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextBlock * _Nonnull' index='1' name='block' type64='@'/>
<arg declared_type64='NSRange' index='2' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLimitsLayoutForSuspiciousContents:'>
<arg declared_type64='BOOL' index='0' name='limitsLayoutForSuspiciousContents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:'>
<arg declared_type64='NSRect' index='0' name='fragmentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRect' index='2' name='usedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocation:forStartOfGlyphRange:'>
<arg declared_type64='NSPoint' index='0' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocations:startingGlyphIndexes:count:forGlyphRange:'>
<arg declared_type64='NSPointArray _Nonnull' index='0' name='locations' type64='^{CGPoint=dd}'/>
<arg declared_type64='NSUInteger * _Nonnull' index='1' name='glyphIndexes' type64='^Q'/>
<arg declared_type64='NSUInteger' index='2' name='count' type64='Q'/>
<arg declared_type64='NSRange' index='3' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNotShownAttribute:forGlyphAtIndex:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsControlCharacters:'>
<arg declared_type64='BOOL' index='0' name='showsControlCharacters' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsInvisibleCharacters:'>
<arg declared_type64='BOOL' index='0' name='showsInvisibleCharacters' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTemporaryAttributes:forCharacterRange:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attrs' type64='@'/>
<arg declared_type64='NSRange' index='1' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextContainer:forGlyphRange:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextStorage:'>
<arg declared_type64='NSTextStorage * _Nullable' index='0' name='textStorage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTypesetter:'>
<arg declared_type64='__kindof NSTypesetter * _Nonnull' index='0' name='typesetter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg declared_type64='NSTypesetterBehavior' index='0' name='typesetterBehavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesDefaultHyphenation:'>
<arg declared_type64='BOOL' index='0' name='usesDefaultHyphenation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFontLeading:'>
<arg declared_type64='BOOL' index='0' name='usesFontLeading' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesScreenFonts:'>
<arg declared_type64='BOOL' index='0' name='usesScreenFonts' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showAttachmentCell:inRect:characterIndex:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='2' name='attachmentIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showCGGlyphs:positions:count:font:matrix:attributes:inContext:'>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='0' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='NSPoint * _Nonnull' index='1' name='positions' type64='^{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='2' name='glyphCount' type64='Q'/>
<arg declared_type64='NSFont * _Nonnull' index='3' name='font' type64='@'/>
<arg declared_type64='NSAffineTransform * _Nonnull' index='4' name='textMatrix' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='5' name='attributes' type64='@'/>
<arg declared_type64='NSGraphicsContext * _Nonnull' index='6' name='graphicsContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:'>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='0' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='CGPoint * _Nonnull' index='1' name='positions' type64='^{CGPoint=dd}'/>
<arg declared_type64='NSInteger' index='2' name='glyphCount' type64='q'/>
<arg declared_type64='NSFont * _Nonnull' index='3' name='font' type64='@'/>
<arg declared_type64='CGAffineTransform' index='4' name='textMatrix' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='5' name='attributes' type64='@'/>
<arg declared_type64='CGContextRef _Nonnull' index='6' name='CGContext' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:'>
<arg declared_type64='char * _Nonnull' index='0' name='glyphs' type64='*'/>
<arg declared_type64='NSUInteger' index='1' name='glyphLen' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='3' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSFont * _Nonnull' index='4' name='font' type64='@'/>
<arg declared_type64='NSColor * _Nonnull' index='5' name='color' type64='@'/>
<arg declared_type64='NSSize' index='6' name='printingAdjustment' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsControlCharacters'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsInvisibleCharacters'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUnderlineStyle' index='1' name='strikethroughVal' type64='q'/>
<arg declared_type64='NSRect' index='2' name='lineRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='3' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='4' name='containerOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='substituteFontForFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='originalFont' type64='@'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='temporaryAttribute:atCharacterIndex:effectiveRange:'>
<arg declared_type64='NSAttributedStringKey _Nonnull' index='0' name='attrName' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='location' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='range' type64='^{_NSRange=QQ}'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:'>
<arg declared_type64='NSAttributedStringKey _Nonnull' index='0' name='attrName' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='location' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='range' type64='^{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='3' name='rangeLimit' type64='{_NSRange=QQ}'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='temporaryAttributesAtCharacterIndex:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='range' type64='^{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='2' name='rangeLimit' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='textContainerChangedGeometry:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textContainerChangedTextView:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type64='^{_NSRange=QQ}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method selector='textContainers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textStorage'>
<retval declared_type64='NSTextStorage * _Nullable' type64='@'/>
</method>
<method selector='textStorage:edited:range:changeInLength:invalidatedRange:'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='str' type64='@'/>
<arg declared_type64='NSTextStorageEditedOptions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='newCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<arg declared_type64='NSRange' index='4' name='invalidatedCharRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewForBeginningOfSelection'>
<retval declared_type64='NSTextView * _Nullable' type64='@'/>
</method>
<method selector='truncatedGlyphRangeInLineFragmentForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='typesetter'>
<retval declared_type64='__kindof NSTypesetter * _Nonnull' type64='@'/>
</method>
<method selector='typesetterBehavior'>
<retval declared_type64='NSTypesetterBehavior' type64='q'/>
</method>
<method selector='underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSUnderlineStyle' index='1' name='underlineVal' type64='q'/>
<arg declared_type64='NSRect' index='2' name='lineRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='3' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='4' name='containerOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usedRectForTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='container' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='usesDefaultHyphenation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesFontLeading'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesScreenFonts'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSLayoutXAxisAnchor'>
<method selector='anchorWithOffsetToAnchor:'>
<arg declared_type64='NSLayoutXAxisAnchor * _Nonnull' index='0' name='otherAnchor' type64='@'/>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='constraintEqualToSystemSpacingAfterAnchor:multiplier:'>
<arg declared_type64='NSLayoutXAxisAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='multiplier' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:'>
<arg declared_type64='NSLayoutXAxisAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='multiplier' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:'>
<arg declared_type64='NSLayoutXAxisAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='multiplier' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSLayoutYAxisAnchor'>
<method selector='anchorWithOffsetToAnchor:'>
<arg declared_type64='NSLayoutYAxisAnchor * _Nonnull' index='0' name='otherAnchor' type64='@'/>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='constraintEqualToSystemSpacingBelowAnchor:multiplier:'>
<arg declared_type64='NSLayoutYAxisAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='multiplier' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:'>
<arg declared_type64='NSLayoutYAxisAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='multiplier' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
<method selector='constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:'>
<arg declared_type64='NSLayoutYAxisAnchor * _Nonnull' index='0' name='anchor' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='multiplier' type64='d'/>
<retval declared_type64='NSLayoutConstraint * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSLevelIndicator'>
<method selector='criticalFillColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='criticalValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='drawsTieredCapacityLevels'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='fillColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='levelIndicatorStyle'>
<retval declared_type64='NSLevelIndicatorStyle' type64='Q'/>
</method>
<method selector='maxValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='minValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='numberOfMajorTickMarks'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfTickMarks'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='placeholderVisibility'>
<retval declared_type64='NSLevelIndicatorPlaceholderVisibility' type64='q'/>
</method>
<method selector='ratingImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='ratingPlaceholderImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setCriticalFillColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='criticalFillColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCriticalValue:'>
<arg declared_type64='double' index='0' name='criticalValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsTieredCapacityLevels:'>
<arg declared_type64='BOOL' index='0' name='drawsTieredCapacityLevels' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFillColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='fillColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLevelIndicatorStyle:'>
<arg declared_type64='NSLevelIndicatorStyle' index='0' name='levelIndicatorStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type64='double' index='0' name='maxValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type64='double' index='0' name='minValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfMajorTickMarks:'>
<arg declared_type64='NSInteger' index='0' name='numberOfMajorTickMarks' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg declared_type64='NSInteger' index='0' name='numberOfTickMarks' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderVisibility:'>
<arg declared_type64='NSLevelIndicatorPlaceholderVisibility' index='0' name='placeholderVisibility' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRatingImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='ratingImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRatingPlaceholderImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='ratingPlaceholderImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTickMarkPosition:'>
<arg declared_type64='NSTickMarkPosition' index='0' name='tickMarkPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWarningFillColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='warningFillColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWarningValue:'>
<arg declared_type64='double' index='0' name='warningValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tickMarkPosition'>
<retval declared_type64='NSTickMarkPosition' type64='Q'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='warningFillColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='warningValue'>
<retval declared_type64='double' type64='d'/>
</method>
</class>
<class name='NSLevelIndicatorCell'>
<method selector='criticalValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='initWithLevelIndicatorStyle:'>
<arg declared_type64='NSLevelIndicatorStyle' index='0' name='levelIndicatorStyle' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='levelIndicatorStyle'>
<retval declared_type64='NSLevelIndicatorStyle' type64='Q'/>
</method>
<method selector='maxValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='minValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='numberOfMajorTickMarks'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfTickMarks'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setCriticalValue:'>
<arg declared_type64='double' index='0' name='criticalValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLevelIndicatorStyle:'>
<arg declared_type64='NSLevelIndicatorStyle' index='0' name='levelIndicatorStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type64='double' index='0' name='maxValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type64='double' index='0' name='minValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfMajorTickMarks:'>
<arg declared_type64='NSInteger' index='0' name='numberOfMajorTickMarks' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg declared_type64='NSInteger' index='0' name='numberOfTickMarks' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTickMarkPosition:'>
<arg declared_type64='NSTickMarkPosition' index='0' name='tickMarkPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWarningValue:'>
<arg declared_type64='double' index='0' name='warningValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tickMarkPosition'>
<retval declared_type64='NSTickMarkPosition' type64='Q'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='warningValue'>
<retval declared_type64='double' type64='d'/>
</method>
</class>
<class name='NSMagnificationGestureRecognizer'>
<method selector='magnification'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setMagnification:'>
<arg declared_type64='CGFloat' index='0' name='magnification' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSMatrix'>
<method selector='acceptsFirstMouse:'>
<arg declared_type64='NSEvent * _Nullable' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='addColumn'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addColumnWithCells:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='newCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addRow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addRowWithCells:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='newCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autorecalculatesCellSize'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autosizesCells'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='cellAtRow:column:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='col' type64='q'/>
<retval declared_type64='__kindof NSCell * _Nullable' type64='@'/>
</method>
<method selector='cellBackgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='cellClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='cellFrameAtRow:column:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='col' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cellSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='cellWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='__kindof NSCell * _Nullable' type64='@'/>
</method>
<method selector='cells'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deselectAllCells'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deselectSelectedCell'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doubleAction'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='drawCellAtRow:column:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='col' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawsCellBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getNumberOfRows:columns:'>
<arg declared_type64='NSInteger * _Nullable' index='0' name='rowCount' type64='^q'/>
<arg declared_type64='NSInteger * _Nullable' index='1' name='colCount' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getRow:column:forPoint:'>
<arg declared_type64='NSInteger * _Nonnull' index='0' name='row' type64='^q'/>
<arg declared_type64='NSInteger * _Nonnull' index='1' name='col' type64='^q'/>
<arg declared_type64='NSPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getRow:column:ofCell:'>
<arg declared_type64='NSInteger * _Nonnull' index='0' name='row' type64='^q'/>
<arg declared_type64='NSInteger * _Nonnull' index='1' name='col' type64='^q'/>
<arg declared_type64='NSCell * _Nonnull' index='2' name='cell' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='highlightCell:atRow:column:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='col' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSMatrixMode' index='1' name='mode' type64='Q'/>
<arg declared_type64='Class _Nullable' index='2' name='factoryId' type64='#'/>
<arg declared_type64='NSInteger' index='3' name='rowsHigh' type64='q'/>
<arg declared_type64='NSInteger' index='4' name='colsWide' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFrame:mode:prototype:numberOfRows:numberOfColumns:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSMatrixMode' index='1' name='mode' type64='Q'/>
<arg declared_type64='NSCell * _Nonnull' index='2' name='cell' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='rowsHigh' type64='q'/>
<arg declared_type64='NSInteger' index='4' name='colsWide' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertColumn:withCells:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='newCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertRow:withCells:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='newCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='isAutoscroll'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectionByRect'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyCell'>
<retval declared_type64='__kindof NSCell * _Nullable' type64='@'/>
</method>
<method selector='makeCellAtRow:column:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='col' type64='q'/>
<retval declared_type64='NSCell * _Nonnull' type64='@'/>
</method>
<method selector='mode'>
<retval declared_type64='NSMatrixMode' type64='Q'/>
</method>
<method selector='mouseDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseDownFlags'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prototype'>
<retval declared_type64='__kindof NSCell * _Nullable' type64='@'/>
</method>
<method selector='putCell:atRow:column:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='newCell' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='col' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeColumn:'>
<arg declared_type64='NSInteger' index='0' name='col' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renewRows:columns:'>
<arg declared_type64='NSInteger' index='0' name='newRows' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='newCols' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resetCursorRects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollCellToVisibleAtRow:column:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='col' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectCellAtRow:column:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='col' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectCellWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectText:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectTextAtRow:column:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='col' type64='q'/>
<retval declared_type64='__kindof NSCell * _Nullable' type64='@'/>
</method>
<method selector='selectedCell'>
<retval declared_type64='__kindof NSCell * _Nullable' type64='@'/>
</method>
<method selector='selectedCells'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selectedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectedRow'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='sendAction'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sendAction:to:forAllCells:'>
<arg declared_type64='SEL _Nonnull' index='0' name='selector' type64=':'/>
<arg declared_type64='id _Nonnull' index='1' name='object' type64='@'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendDoubleAction'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type64='BOOL' index='0' name='allowsEmptySelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutorecalculatesCellSize:'>
<arg declared_type64='BOOL' index='0' name='autorecalculatesCellSize' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoscroll:'>
<arg declared_type64='BOOL' index='0' name='autoscroll' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosizesCells:'>
<arg declared_type64='BOOL' index='0' name='autosizesCells' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCellBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='cellBackgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCellClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='cellClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCellSize:'>
<arg declared_type64='NSSize' index='0' name='cellSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='doubleAction' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsCellBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsCellBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type64='NSSize' index='0' name='intercellSpacing' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyCell:'>
<arg declared_type64='__kindof NSCell * _Nullable' index='0' name='keyCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMode:'>
<arg declared_type64='NSMatrixMode' index='0' name='mode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrototype:'>
<arg declared_type64='__kindof NSCell * _Nullable' index='0' name='prototype' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollable:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionByRect:'>
<arg declared_type64='BOOL' index='0' name='selectionByRect' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionFrom:to:anchor:highlight:'>
<arg declared_type64='NSInteger' index='0' name='startPos' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='endPos' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='anchorPos' type64='q'/>
<arg declared_type64='BOOL' index='3' name='lit' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setState:atRow:column:'>
<arg declared_type64='NSInteger' index='0' name='value' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='col' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabKeyTraversesCells:'>
<arg declared_type64='BOOL' index='0' name='tabKeyTraversesCells' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:forCell:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTipString' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValidateSize:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeToCells'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg declared_type64='NSInteger (* _Nonnull)(id _Nonnull, id _Nonnull, void * _Nullable)' function_pointer='true' index='0' name='compare' type64='^?'>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='NSInteger' type64='q'/>
</arg>
<arg declared_type64='void * _Nullable' index='1' name='context' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortUsingSelector:'>
<arg declared_type64='SEL _Nonnull' index='0' name='comparator' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabKeyTraversesCells'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textDidBeginEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidEndEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textShouldEndEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='toolTipForCell:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='NSMediaLibraryBrowserController'>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='isVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mediaLibraries'>
<retval declared_type64='NSMediaLibrary' type64='Q'/>
</method>
<method selector='setFrame:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMediaLibraries:'>
<arg declared_type64='NSMediaLibrary' index='0' name='mediaLibraries' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type64='BOOL' index='0' name='visible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedMediaLibraryBrowserController'>
<retval declared_type64='NSMediaLibraryBrowserController * _Nonnull' type64='@'/>
</method>
<method selector='togglePanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSMenu'>
<method selector='addItem:'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='newItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addItemWithTitle:action:keyEquivalent:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='selector' type64=':'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='charCode' type64='@'/>
<retval declared_type64='NSMenuItem * _Nonnull' type64='@'/>
</method>
<method selector='allowsContextMenuPlugIns'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attachedMenu'>
<retval declared_type64='NSMenu * _Null_unspecified' type64='@'/>
</method>
<method selector='autoenablesItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelTracking'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cancelTrackingWithoutAnimation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contextMenuRepresentation'>
<retval declared_type64='id _Null_unspecified' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='font'>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='helpRequested:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='eventPtr' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='highlightedItem'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='indexOfItem:'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='object' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithSubmenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='submenu' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='actionSelector' type64=':'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertItem:atIndex:'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='newItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertItemWithTitle:action:keyEquivalent:atIndex:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='selector' type64=':'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='charCode' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='index' type64='q'/>
<retval declared_type64='NSMenuItem * _Nonnull' type64='@'/>
</method>
<method selector='isAttached'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTornOff'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemArray'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='itemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='itemChanged:'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='itemWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='itemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='locationForSubmenu:'>
<arg declared_type64='NSMenu * _Null_unspecified' index='0' name='submenu' type64='@'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='menuBarHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='menuBarVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='menuChangedMessagesEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='menuRepresentation'>
<retval declared_type64='id _Null_unspecified' type64='@'/>
</method>
<method class_method='true' selector='menuZone'>
<retval declared_type64='NSZone * _Null_unspecified' type64='^{_NSZone=}'/>
</method>
<method selector='minimumWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='numberOfItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='performActionForItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='popUpContextMenu:withEvent:forView:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='popUpContextMenu:withEvent:forView:withFont:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='view' type64='@'/>
<arg declared_type64='NSFont * _Nullable' index='3' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popUpMenuPositioningItem:atLocation:inView:'>
<arg declared_type64='NSMenuItem * _Nullable' index='0' name='item' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='view' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='propertiesToUpdate'>
<retval declared_type64='NSMenuProperties' type64='Q'/>
</method>
<method selector='removeAllItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsContextMenuPlugIns:'>
<arg declared_type64='BOOL' index='0' name='allowsContextMenuPlugIns' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoenablesItems:'>
<arg declared_type64='BOOL' index='0' name='autoenablesItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContextMenuRepresentation:'>
<arg declared_type64='id _Null_unspecified' index='0' name='menuRep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='NSFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='itemArray' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setMenuBarVisible:'>
<arg declared_type64='BOOL' index='0' name='visible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenuChangedMessagesEnabled:'>
<arg declared_type64='BOOL' index='0' name='menuChangedMessagesEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenuRepresentation:'>
<arg declared_type64='id _Null_unspecified' index='0' name='menuRep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setMenuZone:'>
<arg declared_type64='NSZone * _Null_unspecified' index='0' name='zone' type64='^{_NSZone=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumWidth:'>
<arg declared_type64='CGFloat' index='0' name='minimumWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsStateColumn:'>
<arg declared_type64='BOOL' index='0' name='showsStateColumn' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubmenu:forItem:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<arg declared_type64='NSMenuItem * _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupermenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='supermenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTearOffMenuRepresentation:'>
<arg declared_type64='id _Null_unspecified' index='0' name='menuRep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type64='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsStateColumn'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='size'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='sizeToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='submenuAction:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supermenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='tearOffMenuRepresentation'>
<retval declared_type64='id _Null_unspecified' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='update'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type64='NSUserInterfaceLayoutDirection' type64='q'/>
</method>
</class>
<class name='NSMenuItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='allowsKeyEquivalentWhenHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='attributedTitle'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='hasSubmenu'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='indentationLevel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTitle:action:keyEquivalent:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='selector' type64=':'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='charCode' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isAlternate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHiddenOrHasHiddenAncestor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSeparatorItem'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval declared_type64='NSEventModifierFlags' type64='Q'/>
</method>
<method selector='menu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='mixedStateImage'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='mnemonic'>
<retval declared_type64='NSString * _Null_unspecified' type64='@'/>
</method>
<method selector='mnemonicLocation'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='offStateImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='onStateImage'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='parentItem'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='representedObject'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='separatorItem'>
<retval declared_type64='NSMenuItem * _Nonnull' type64='@'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsKeyEquivalentWhenHidden:'>
<arg declared_type64='BOOL' index='0' name='allowsKeyEquivalentWhenHidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternate:'>
<arg declared_type64='BOOL' index='0' name='alternate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndentationLevel:'>
<arg declared_type64='NSInteger' index='0' name='indentationLevel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyEquivalent:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='keyEquivalent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg declared_type64='NSEventModifierFlags' index='0' name='keyEquivalentModifierMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMixedStateImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='mixedStateImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMnemonicLocation:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOffStateImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='offStateImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOnStateImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='onStateImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='representedObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setState:'>
<arg declared_type64='NSControlStateValue' index='0' name='state' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubmenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='submenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringWithAmpersand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTip' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setUsesUserKeyEquivalents:'>
<arg declared_type64='BOOL' index='0' name='usesUserKeyEquivalents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='state'>
<retval declared_type64='NSControlStateValue' type64='q'/>
</method>
<method selector='submenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='toolTip'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='userKeyEquivalent'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='usesUserKeyEquivalents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
</class>
<class name='NSMenuItemCell'>
<method selector='calcSize'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawBorderAndBackgroundWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawImageWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawKeyEquivalentWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawSeparatorItemWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawStateImageWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawTitleWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='imageWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='initTextCell:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='keyEquivalentRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='keyEquivalentWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='menuItem'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='needsDisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='needsSizing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setMenuItem:'>
<arg declared_type64='NSMenuItem * _Nullable' index='0' name='menuItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplay:'>
<arg declared_type64='BOOL' index='0' name='needsDisplay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsSizing:'>
<arg declared_type64='BOOL' index='0' name='needsSizing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stateImageRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='stateImageWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='titleRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='titleWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSMenuToolbarItem'>
<method selector='menu'>
<retval declared_type64='NSMenu * _Nonnull' type64='@'/>
</method>
<method selector='setMenu:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsIndicator:'>
<arg declared_type64='BOOL' index='0' name='showsIndicator' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsIndicator'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSMovie'>
<method selector='QTMovie'>
<retval declared_type64='QTMovie * _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithMovie:'>
<arg declared_type64='QTMovie * _Nonnull' index='0' name='movie' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='applyFontTraits:range:'>
<arg declared_type64='NSFontTraitMask' index='0' name='traitMask' type64='Q'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fixAttachmentAttributeInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fixAttributesInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fixFontAttributeInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fixParagraphStyleAttributeInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readFromData:options:documentAttributes:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readFromData:options:documentAttributes:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='opts' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='options' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='opts' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type64='^@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAlignment:range:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseWritingDirection:range:'>
<arg declared_type64='NSWritingDirection' index='0' name='writingDirection' type64='q'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='subscriptRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='superscriptRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unscriptRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateAttachmentsFromPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSMutableFontCollection'>
<method selector='addQueryForDescriptors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='descriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='exclusionDescriptors'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithAllAvailableDescriptors'>
<retval declared_type64='NSMutableFontCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithDescriptors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='queryDescriptors' type64='@'/>
<retval declared_type64='NSMutableFontCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithLocale:'>
<arg declared_type64='NSLocale * _Nonnull' index='0' name='locale' type64='@'/>
<retval declared_type64='NSMutableFontCollection * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithName:'>
<arg declared_type64='NSFontCollectionName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSMutableFontCollection * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='fontCollectionWithName:visibility:'>
<arg declared_type64='NSFontCollectionName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSFontCollectionVisibility' index='1' name='visibility' type64='Q'/>
<retval declared_type64='NSMutableFontCollection * _Nullable' type64='@'/>
</method>
<method selector='queryDescriptors'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='removeQueryForDescriptors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='descriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExclusionDescriptors:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='exclusionDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setQueryDescriptors:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='queryDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSMutableParagraphStyle'>
<method selector='addTabStop:'>
<arg declared_type64='NSTextTab * _Nonnull' index='0' name='anObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='headIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='headerLevel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='Q'/>
</method>
<method selector='lineBreakStrategy'>
<retval declared_type64='NSLineBreakStrategy' type64='Q'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='removeTabStop:'>
<arg declared_type64='NSTextTab * _Nonnull' index='0' name='anObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type64='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type64='NSWritingDirection' index='0' name='baseWritingDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultTabInterval:'>
<arg declared_type64='CGFloat' index='0' name='defaultTabInterval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFirstLineHeadIndent:'>
<arg declared_type64='CGFloat' index='0' name='firstLineHeadIndent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeadIndent:'>
<arg declared_type64='CGFloat' index='0' name='headIndent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeaderLevel:'>
<arg declared_type64='NSInteger' index='0' name='headerLevel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type64='float' index='0' name='hyphenationFactor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type64='NSLineBreakMode' index='0' name='lineBreakMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakStrategy:'>
<arg declared_type64='NSLineBreakStrategy' index='0' name='lineBreakStrategy' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineHeightMultiple:'>
<arg declared_type64='CGFloat' index='0' name='lineHeightMultiple' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineSpacing:'>
<arg declared_type64='CGFloat' index='0' name='lineSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumLineHeight:'>
<arg declared_type64='CGFloat' index='0' name='maximumLineHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumLineHeight:'>
<arg declared_type64='CGFloat' index='0' name='minimumLineHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphSpacing:'>
<arg declared_type64='CGFloat' index='0' name='paragraphSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphSpacingBefore:'>
<arg declared_type64='CGFloat' index='0' name='paragraphSpacingBefore' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphStyle:'>
<arg declared_type64='NSParagraphStyle * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabStops:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='tabStops' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTailIndent:'>
<arg declared_type64='CGFloat' index='0' name='tailIndent' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextBlocks:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='textBlocks' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextLists:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='textLists' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTighteningFactorForTruncation:'>
<arg declared_type64='float' index='0' name='tighteningFactorForTruncation' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabStops'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='textBlocks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textLists'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tighteningFactorForTruncation'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='NSNib'>
<method selector='initWithContentsOfURL:'>
<arg declared_type64='NSURL * _Null_unspecified' index='0' name='nibFileURL' type64='@'/>
<retval declared_type64='id _Null_unspecified' type64='@'/>
</method>
<method selector='initWithNibData:bundle:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='nibData' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='bundle' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithNibNamed:bundle:'>
<arg declared_type64='NSNibName _Nonnull' index='0' name='nibName' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='bundle' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='instantiateNibWithExternalNameTable:'>
<arg declared_type64='NSDictionary * _Null_unspecified' index='0' name='externalNameTable' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='instantiateNibWithOwner:topLevelObjects:'>
<arg declared_type64='id _Null_unspecified' index='0' name='owner' type64='@'/>
<arg declared_type64='NSArray * _Null_unspecified * _Null_unspecified' index='1' name='topLevelObjects' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='instantiateWithOwner:topLevelObjects:'>
<arg declared_type64='id _Nullable' index='0' name='owner' type64='@'/>
<arg declared_type64='NSArray * _Nullable * _Nullable' index='1' name='topLevelObjects' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSNibConnector'>
<method selector='destination'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='establishConnection'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='label'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='replaceObject:withObject:'>
<arg declared_type64='id _Nonnull' index='0' name='oldObject' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='newObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDestination:'>
<arg declared_type64='id _Nullable' index='0' name='destination' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSource:'>
<arg declared_type64='id _Nullable' index='0' name='source' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='source'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='NSNibControlConnector'>
<method selector='establishConnection'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSNibOutletConnector'>
<method selector='establishConnection'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='accessibilityActionDescription:'>
<arg declared_type64='NSAccessibilityActionName _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityActionNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityActivationPoint'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityAllowedValues'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityApplicationFocusedUIElement'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityArrayAttributeCount:'>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='accessibilityArrayAttributeValues:index:maxCount:'>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='maxCount' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityAttributeNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityAttributeValue:'>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityAttributeValue:forParameter:'>
<arg declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='parameter' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityAttributedStringForRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityCancelButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityCellForColumn:row:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityChildren'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityChildrenInNavigationOrder'>
<retval declared_type64='NSArray&gt; * _Nullable' type64='@'/>
</method>
<method selector='accessibilityClearButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityCloseButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityColumnCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityColumnHeaderUIElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityColumnIndexRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityColumnTitles'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityColumns'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityContents'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityCriticalValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityCustomActions'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityCustomRotors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityDecrementButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityDefaultButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityDisclosedByRow'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityDisclosedRows'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityDisclosureLevel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityDocument'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityElementWithToken:'>
<arg declared_type64='NSAccessibilityLoadingToken _Nonnull' index='0' name='token' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityExtrasMenuBar'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityFilename'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityFocusedUIElement'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='accessibilityFocusedWindow'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityFrame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFrameForRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFullScreenButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityGrowArea'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityHandles'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHeader'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityHeaderGroup'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHelp'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHitTest:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityHorizontalScrollBar'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityHorizontalUnitDescription'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHorizontalUnits'>
<retval declared_type64='NSAccessibilityUnits' type64='q'/>
</method>
<method selector='accessibilityIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityIncrementButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityIndexOfChild:'>
<arg declared_type64='id _Nonnull' index='0' name='child' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='accessibilityInsertionPointLineNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityIsAttributeSettable:'>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityIsIgnored'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityLabel'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLabelUIElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLabelValue'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='accessibilityLayoutPointForScreenPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityLayoutSizeForScreenSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='accessibilityLineForIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityLinkedUIElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityMainWindow'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMarkerGroupUIElement'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMarkerTypeDescription'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityMarkerUIElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityMarkerValues'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMaxValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMenuBar'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMinValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMinimizeButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityNextContents'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityNotifiesWhenDestroyed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityNumberOfCharacters'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityOrientation'>
<retval declared_type64='NSAccessibilityOrientation' type64='q'/>
</method>
<method selector='accessibilityOverflowButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityParameterizedAttributeNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityParent'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityPerformAction:'>
<arg declared_type64='NSAccessibilityActionName _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityPerformCancel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformConfirm'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformDecrement'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformDelete'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformIncrement'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformPick'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformPress'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformRaise'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformShowAlternateUI'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformShowDefaultUI'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformShowMenu'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPlaceholderValue'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityPreviousContents'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityProxy'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityRTFForRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRangeForIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeForLine:'>
<arg declared_type64='NSInteger' index='0' name='line' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeForPosition:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeInTargetElementWithToken:'>
<arg declared_type64='NSAccessibilityLoadingToken _Nonnull' index='0' name='token' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRole'>
<retval declared_type64='NSAccessibilityRole _Nullable' type64='@'/>
</method>
<method selector='accessibilityRoleDescription'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRowCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityRowHeaderUIElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRowIndexRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRows'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRulerMarkerType'>
<retval declared_type64='NSAccessibilityRulerMarkerType' type64='q'/>
</method>
<method selector='accessibilityScreenPointForLayoutPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityScreenSizeForLayoutSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='accessibilitySearchButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilitySearchMenu'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedCells'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedChildren'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedColumns'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedRows'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedText'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedTextRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySelectedTextRanges'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityServesAsTitleForUIElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySetOverrideValue:forAttribute:'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='1' name='attribute' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilitySetValue:forAttribute:'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='1' name='attribute' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilitySharedCharacterRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySharedFocusElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySharedTextUIElements'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityShownMenu'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilitySortDirection'>
<retval declared_type64='NSAccessibilitySortDirection' type64='q'/>
</method>
<method selector='accessibilitySplitters'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityStringForRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityStyleRangeForIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySubrole'>
<retval declared_type64='NSAccessibilitySubrole _Nullable' type64='@'/>
</method>
<method selector='accessibilityTabs'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityTitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityTitleUIElement'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityToolbarButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityTopLevelUIElement'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='accessibilityUnitDescription'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityUnits'>
<retval declared_type64='NSAccessibilityUnits' type64='q'/>
</method>
<method selector='accessibilityValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityValueDescription'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVerticalScrollBar'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityVerticalUnitDescription'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVerticalUnits'>
<retval declared_type64='NSAccessibilityUnits' type64='q'/>
</method>
<method selector='accessibilityVisibleCells'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleCharacterRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityVisibleChildren'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleColumns'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleRows'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityWarningValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityWindow'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityWindows'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityZoomButton'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='activeCompressionOptions'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method selector='activeConversationChanged:toNewConversation:'>
<arg declared_type64='id _Null_unspecified' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='newConversation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='activeConversationWillChange:fromOldConversation:'>
<arg declared_type64='id _Null_unspecified' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='oldConversation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addAnnotations:range:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='annotations' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alertShowHelp:'>
<arg declared_type64='NSAlert * _Nonnull' index='0' name='alert' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='alpha'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='alphaControlAddedOrRemoved:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='anchoringViewForSharingService:showRelativeToRect:preferredEdge:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSRect * _Nonnull' index='1' name='positioningRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRectEdge * _Nonnull' index='2' name='preferredEdge' type64='^Q'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='animateDismissalOfViewController:fromViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='NSViewController * _Nonnull' index='1' name='fromViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animatePresentationOfViewController:fromViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='NSViewController * _Nonnull' index='1' name='fromViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animatesToDestination'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='animation:didReachProgressMark:'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<arg declared_type64='NSAnimationProgress' index='1' name='progress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animation:valueForProgress:'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<arg declared_type64='NSAnimationProgress' index='1' name='progress' type64='f'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='animationDidEnd:'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationDidStop:'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationForKey:'>
<arg declared_type64='NSAnimatablePropertyKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='animationShouldStart:'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='animations'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='animator'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='annotatedSubstringForProposedRange:actualRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='appearance'>
<retval declared_type64='NSAppearance * _Nullable' type64='@'/>
</method>
<method selector='application:continueUserActivity:restorationHandler:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSUserActivity * _Nonnull' index='1' name='userActivity' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSArray&gt; * _Nonnull)' function_pointer='true' index='2' name='restorationHandler' type64='@?'>
<arg declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:delegateHandlesKey:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:didDecodeRestorableState:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='app' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFailToContinueUserActivityWithType:error:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='userActivityType' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didReceiveRemoteNotification:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='userInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='deviceToken' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didUpdateUserActivity:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSUserActivity * _Nonnull' index='1' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:openFile:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:openFileWithoutUI:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:openFiles:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='filenames' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:openTempFile:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:openURLs:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='urls' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:printFile:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:printFiles:withSettings:showPrintPanels:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='fileNames' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='printSettings' type64='@'/>
<arg declared_type64='BOOL' index='3' name='showPrintPanels' type64='B'/>
<retval declared_type64='NSApplicationPrintReply' type64='Q'/>
</method>
<method selector='application:userDidAcceptCloudKitShareWithMetadata:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='CKShareMetadata * _Nonnull' index='1' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:willContinueUserActivityWithType:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='userActivityType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:willEncodeRestorableState:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='app' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:willPresentError:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='NSError * _Nonnull' type64='@'/>
</method>
<method selector='applicationDidBecomeActive:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidChangeOcclusionState:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidChangeScreenParameters:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidFinishLaunching:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidHide:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidResignActive:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidUnhide:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidUpdate:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDockMenu:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='applicationOpenUntitledFile:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationShouldHandleReopen:hasVisibleWindows:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationShouldOpenUntitledFile:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationShouldTerminate:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='NSApplicationTerminateReply' type64='Q'/>
</method>
<method selector='applicationShouldTerminateAfterLastWindowClosed:'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationWillBecomeActive:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillFinishLaunching:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillHide:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillResignActive:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillTerminate:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillUnhide:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillUpdate:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applyLayoutAttributes:'>
<arg declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='attachColorList:'>
<arg declared_type64='NSColorList * _Nonnull' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='attachment'>
<retval declared_type64='NSTextAttachment * _Nullable' type64='@'/>
</method>
<method selector='attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type64='NSTextContainer * _Nullable' index='0' name='textContainer' type64='@'/>
<arg declared_type64='NSRect' index='1' name='lineFrag' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGPoint' index='2' name='position' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='attributedString'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='attributedSubstringForProposedRange:actualRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='attributedSubstringFromRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Null_unspecified' type64='@'/>
</method>
<method selector='autocorrectionType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='awakeFromNib'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='baselineDeltaForCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='anIndex' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='bind:toObject:withKeyPath:options:'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='observable' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='keyPath' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='browser:acceptDrop:atRow:column:dropOperation:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='column' type64='q'/>
<arg declared_type64='NSBrowserDropOperation' index='4' name='dropOperation' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:child:ofItem:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='browser:createRowsForColumn:inMatrix:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<arg declared_type64='NSMatrix * _Nonnull' index='2' name='matrix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browser:didChangeLastColumn:toColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='oldLastColumn' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='4' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='browser:headerViewControllerForItem:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='browser:heightOfRow:inColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='columnIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='browser:isColumnValid:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:isLeafItem:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropDestination' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='2' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='column' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='startRow' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='endRow' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='column' type64='q'/>
<arg declared_type64='NSString * _Nullable' index='4' name='searchString' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='browser:numberOfChildrenOfItem:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='browser:numberOfRowsInColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='browser:objectValueForItem:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='browser:previewViewControllerForLeafItem:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='browser:selectCellWithString:inColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='title' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:selectRow:inColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:selectionIndexesForProposedSelection:inColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='browser:setObjectValue:forItem:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browser:shouldEditItem:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:shouldShowCellExpansionForRow:column:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:shouldSizeColumn:forUserResize:toWidth:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<arg declared_type64='BOOL' index='2' name='forUserResize' type64='B'/>
<arg declared_type64='CGFloat' index='3' name='suggestedWidth' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='searchString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:sizeToFitWidthOfColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='browser:titleOfColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='browser:typeSelectStringForRow:inColumn:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='browser:validateDrop:proposedRow:column:dropOperation:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='NSInteger * _Nonnull' index='2' name='row' type64='^q'/>
<arg declared_type64='NSInteger * _Nonnull' index='3' name='column' type64='^q'/>
<arg declared_type64='NSBrowserDropOperation * _Nonnull' index='4' name='dropOperation' type64='^Q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='browser:willDisplayCell:atRow:column:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='3' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browserColumnConfigurationDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browserDidScroll:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browserWillScroll:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='buttonToolTip'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='canBeDisabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelOperation:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='candidateListTouchBarItem'>
<retval declared_type64='NSCandidateListTouchBarItem * _Nullable' type64='@'/>
</method>
<method selector='candidateListTouchBarItem:beginSelectingCandidateAtIndex:'>
<arg declared_type64='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='candidateListTouchBarItem:changeSelectionFromCandidateAtIndex:toIndex:'>
<arg declared_type64='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='previousIndex' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='candidateListTouchBarItem:changedCandidateListVisibility:'>
<arg declared_type64='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type64='@'/>
<arg declared_type64='BOOL' index='1' name='isVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='candidateListTouchBarItem:endSelectingCandidateAtIndex:'>
<arg declared_type64='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='capitalizeWord:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cellBaselineOffset'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='textContainer' type64='@'/>
<arg declared_type64='NSRect' index='1' name='lineFrag' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' index='2' name='position' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cellSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='center'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='centerSelectionInVisibleArea:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeCaseOfLetter:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeColor:'>
<arg declared_type64='NSColorPanel * _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeFont:'>
<arg declared_type64='NSFontManager * _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeSpelling:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='characterIndexForPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='cloudShareForUserInterfaceItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='CKShare * _Nullable' type64='@'/>
</method>
<method selector='collectionView:acceptDrop:index:dropOperation:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='index' type64='q'/>
<arg declared_type64='NSCollectionViewDropOperation' index='3' name='dropOperation' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:acceptDrop:indexPath:dropOperation:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='NSCollectionViewDropOperation' index='3' name='dropOperation' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexPaths:withEvent:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexes:withEvent:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='indexes' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:cancelPrefetchingForItemsAtIndexPaths:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didChangeItemsAtIndexPaths:toHighlightState:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSCollectionViewItemHighlightState' index='2' name='highlightState' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didDeselectItemsAtIndexPaths:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewItem * _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='2' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='3' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didSelectItemsAtIndexPaths:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexes:withEvent:offset:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='indexes' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:draggingSession:endedAtPoint:dragOperation:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='3' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSSet * _Nonnull' index='3' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='3' name='indexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:itemForRepresentedObjectAtIndexPath:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewItem * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:layout:insetForSectionAtIndex:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='collectionView:layout:minimumInteritemSpacingForSectionAtIndex:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='collectionView:layout:minimumLineSpacingForSectionAtIndex:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='collectionView:layout:referenceSizeForFooterInSection:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:referenceSizeForHeaderInSection:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:sizeForItemAtIndexPath:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropURL' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='2' name='indexPaths' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropURL' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='2' name='indexes' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:numberOfItemsInSection:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndex:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndexPath:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='collectionView:prefetchItemsAtIndexPaths:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:shouldChangeItemsAtIndexPaths:toHighlightState:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSCollectionViewItemHighlightState' index='2' name='highlightState' type64='q'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:shouldDeselectItemsAtIndexPaths:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:shouldSelectItemsAtIndexPaths:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:transitionLayoutForOldLayout:newLayout:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='fromLayout' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='2' name='toLayout' type64='@'/>
<retval declared_type64='NSCollectionViewTransitionLayout * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:updateDraggingItemsForDrag:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:validateDrop:proposedIndex:dropOperation:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<arg declared_type64='NSInteger * _Nonnull' index='2' name='proposedDropIndex' type64='^q'/>
<arg declared_type64='NSCollectionViewDropOperation * _Nonnull' index='3' name='proposedDropOperation' type64='^q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='collectionView:validateDrop:proposedIndexPath:dropOperation:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull * _Nonnull' index='2' name='proposedDropIndexPath' type64='^@'/>
<arg declared_type64='NSCollectionViewDropOperation * _Nonnull' index='3' name='proposedDropOperation' type64='^q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='collectionView:viewForSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='1' name='kind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewItem * _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='2' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='3' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:writeItemsAtIndexPaths:toPasteboard:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:writeItemsAtIndexes:toPasteboard:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='indexes' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='comboBox:completedString:'>
<arg declared_type64='NSComboBox * _Nonnull' index='0' name='comboBox' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='comboBox:indexOfItemWithStringValue:'>
<arg declared_type64='NSComboBox * _Nonnull' index='0' name='comboBox' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='comboBox:objectValueForItemAtIndex:'>
<arg declared_type64='NSComboBox * _Nonnull' index='0' name='comboBox' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='comboBoxCell:completedString:'>
<arg declared_type64='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='uncompletedString' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='comboBoxCell:indexOfItemWithStringValue:'>
<arg declared_type64='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='comboBoxCell:objectValueForItemAtIndex:'>
<arg declared_type64='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='comboBoxSelectionDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='comboBoxSelectionIsChanging:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='comboBoxWillDismiss:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='comboBoxWillPopUp:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='commitEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commitEditingAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='didCommitSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='complete:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='compressWithPrioritizedCompressionOptions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedOptions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='concludeDragOperation:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='confinementRectForMenu:onScreen:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSScreen * _Nullable' index='1' name='screen' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='container'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='contentInsets'>
<retval declared_type64='NSDirectionalEdgeInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='contentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentType'>
<retval declared_type64='NSTextContentType _Nullable' type64='@'/>
</method>
<method selector='contentView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='contentViewAtIndex:effectiveCharacterRange:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSRangePointer _Nonnull' index='1' name='outRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
<method selector='control:didFailToFormatString:errorDescription:'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='error' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='control:didFailToValidatePartialString:errorDescription:'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='control:isValidObject:'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='obj' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='control:textShouldBeginEditing:'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSText * _Nonnull' index='1' name='fieldEditor' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='control:textShouldEndEditing:'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSText * _Nonnull' index='1' name='fieldEditor' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='words' type64='@'/>
<arg declared_type64='NSRange' index='3' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger * _Nonnull' index='4' name='index' type64='^q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='control:textView:doCommandBySelector:'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='2' name='commandSelector' type64=':'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='controlTextDidBeginEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='controlTextDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='controlTextDidEndEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='conversationIdentifier'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='currentMode'>
<retval declared_type64='NSColorPanelMode' type64='q'/>
</method>
<method selector='customWindowsToEnterFullScreenForWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='customWindowsToEnterFullScreenForWindow:onScreen:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSScreen * _Nonnull' index='1' name='screen' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='customWindowsToExitFullScreenForWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='dataDetectionType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='datePickerCell:validateProposedDateValue:timeInterval:'>
<arg declared_type64='NSDatePickerCell * _Nonnull' index='0' name='datePickerCell' type64='@'/>
<arg declared_type64='NSDate * _Nonnull * _Nonnull' index='1' name='proposedDateValue' type64='^@'/>
<arg declared_type64='NSTimeInterval * _Nullable' index='2' name='proposedTimeInterval' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='defaultAnimationForKey:'>
<arg declared_type64='NSAnimatablePropertyKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='defaultPlaceholderForMarker:withBinding:'>
<arg declared_type64='id _Nullable' index='0' name='marker' type64='@'/>
<arg declared_type64='NSBindingName _Nonnull' index='1' name='binding' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deleteBackward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteBackwardByDecomposingPreviousCharacter:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteForward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToBeginningOfLine:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToBeginningOfParagraph:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToEndOfLine:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToEndOfParagraph:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToMark:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteWordBackward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteWordForward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='detachColorList:'>
<arg declared_type64='NSColorList * _Nonnull' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='detachableWindowForPopover:'>
<arg declared_type64='NSPopover * _Nonnull' index='0' name='popover' type64='@'/>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='didBeginInteractingWithScrubber:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didCancelInteractingWithScrubber:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didFinishInteractingWithScrubber:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didReplaceCharacters'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didTransitionFromLayout:toLayout:'>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardEditing'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doCommandBySelector:'>
<arg declared_type64='SEL _Null_unspecified' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doCommandBySelector:client:'>
<arg declared_type64='SEL _Null_unspecified' index='0' name='selector' type64=':'/>
<arg declared_type64='id _Null_unspecified' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dockMenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='draggedImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='draggedImage:beganAt:'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggedImage:endedAt:deposited:'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggedImage:endedAt:operation:'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='2' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggedImage:movedTo:'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggedImageLocation'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingDestinationWindow'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='draggingEnded:'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingEntered:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='draggingExited:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingFormation'>
<retval declared_type64='NSDraggingFormation' type64='q'/>
</method>
<method selector='draggingLocation'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingPasteboard'>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method selector='draggingSequenceNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='draggingSession:endedAtPoint:operation:'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='2' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingSession:movedToPoint:'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingSession:sourceOperationMaskForDraggingContext:'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSDraggingContext' index='1' name='context' type64='q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='draggingSession:willBeginAtPoint:'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='draggingSourceOperationMask'>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='draggingSourceOperationMaskForLocal:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='draggingUpdated:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='drawCharactersInRange:forContentView:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='controlView' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:layoutManager:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='controlView' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<arg declared_type64='NSLayoutManager * _Nonnull' index='3' name='layoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerDidClose:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerDidOpen:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerShouldClose:'>
<arg declared_type64='NSDrawer * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawerShouldOpen:'>
<arg declared_type64='NSDrawer * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawerWillClose:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerWillOpen:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerWillResizeContents:toSize:'>
<arg declared_type64='NSDrawer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSSize' index='1' name='contentSize' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='drawsVerticallyForCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='effectiveAppearance'>
<retval declared_type64='NSAppearance * _Nonnull' type64='@'/>
</method>
<method selector='effectiveContentInsets'>
<retval declared_type64='NSDirectionalEdgeInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='effectiveContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'>
<arg declared_type64='NSDraggingItemEnumerationOptions' index='0' name='enumOpts' type64='Q'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='classArray' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='searchOptions' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSDraggingItem * _Nonnull, NSInteger, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type64='@?'>
<arg declared_type64='NSDraggingItem * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='exposeBinding:'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='exposedBindings'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='filePromiseProvider:fileNameForType:'>
<arg declared_type64='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='fileType' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='filePromiseProvider:writePromiseToURL:completionHandler:'>
<arg declared_type64='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='findBarView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='findBarViewDidChangeHeight'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstRectForCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='firstRectForCharacterRange:actualRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='firstSelectedRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='fontManager:willIncludeFont:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='fontName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gestureRecognizer:shouldAttemptToRecognizeWithEvent:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSTouch * _Nonnull' index='1' name='touch' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldRequireFailureOfGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizerShouldBegin:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='grammarCheckingType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='hasMarkedText'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='highlight:withFrame:inView:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSUserInterfaceItemIdentifier _Nullable' type64='@'/>
</method>
<method selector='ignoreModifierKeysForDraggingSession:'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='ignoreModifierKeysWhileDragging'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='ignoreSpelling:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image:didLoadPartOfRepresentation:withValidRows:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSImageRep * _Nonnull' index='1' name='rep' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='rows' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image:didLoadRepresentation:withStatus:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSImageRep * _Nonnull' index='1' name='rep' type64='@'/>
<arg declared_type64='NSImageLoadStatus' index='2' name='status' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image:didLoadRepresentationHeader:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSImageRep * _Nonnull' index='1' name='rep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image:willLoadRepresentation:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSImageRep * _Nonnull' index='1' name='rep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='imageDidNotDraw:inRect:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='imageForBounds:textContainer:characterIndex:'>
<arg declared_type64='NSRect' index='0' name='imageBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='indent:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexPath'>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='infoForBinding:'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='initWithPasteboardPropertyList:ofType:'>
<arg declared_type64='id _Nonnull' index='0' name='propertyList' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithPickerMask:colorPanel:'>
<arg declared_type64='NSUInteger' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSColorPanel * _Nonnull' index='1' name='owningColorPanel' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='inputClientBecomeActive:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputClientDisabled:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputClientEnabled:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputClientResignActive:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertBacktab:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertContainerBreak:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertDoubleQuoteIgnoringSubstitution:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
<arg const='true' declared_type64='NSGlyph * _Nonnull' index='0' name='glyphs' type64='^I'/>
<arg declared_type64='NSUInteger' index='1' name='length' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertLineBreak:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertNewButtonImage:in:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='newButtonImage' type64='@'/>
<arg declared_type64='NSButtonCell * _Nonnull' index='1' name='buttonCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertNewline:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertNewlineIgnoringFieldEditor:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertParagraphSeparator:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSingleQuoteIgnoringSubstitution:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTab:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTabIgnoringFieldEditor:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertText:'>
<arg declared_type64='id _Null_unspecified' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertText:client:'>
<arg declared_type64='id _Null_unspecified' index='0' name='string' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertText:replacementRange:'>
<arg declared_type64='id _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSRange' index='1' name='replacementRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isAccessibilityAlternateUIVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityDisclosed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityEdited'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityElement'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityExpanded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityFocused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityFrontmost'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityMain'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityMinimized'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityModal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityOrderedByRow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityProtectedContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityRequired'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilitySelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilitySelectorAllowed:'>
<arg declared_type64='SEL _Nonnull' index='0' name='selector' type64=':'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFindBarVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemsForSharingServicePickerToolbarItem:'>
<arg declared_type64='NSSharingServicePickerToolbarItem * _Nonnull' index='0' name='pickerToolbarItem' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='itemsForSharingServicePickerTouchBarItem:'>
<arg declared_type64='NSSharingServicePickerTouchBarItem * _Nonnull' index='0' name='pickerTouchBarItem' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='keyPathsForValuesAffectingPreview'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='layer:shouldInheritContentsScale:fromWindow:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='newScale' type64='d'/>
<arg declared_type64='NSWindow * _Nonnull' index='2' name='window' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='textContainer' type64='@'/>
<arg declared_type64='NSRect' index='3' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' index='4' name='glyphPosition' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='5' name='charIndex' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<arg declared_type64='BOOL' index='2' name='layoutFinishedFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='1' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='NSGlyphProperty * _Nonnull' index='2' name='props' type64='^q'/>
<arg const='true' declared_type64='NSUInteger * _Nonnull' index='3' name='charIndexes' type64='^Q'/>
<arg declared_type64='NSFont * _Nonnull' index='4' name='aFont' type64='@'/>
<arg declared_type64='NSRange' index='5' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSRect * _Nonnull' index='1' name='lineFragmentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect * _Nonnull' index='2' name='lineFragmentUsedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat * _Nonnull' index='3' name='baselineOffset' type64='^d'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='4' name='textContainer' type64='@'/>
<arg declared_type64='NSRange' index='5' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldUseAction:forControlCharacterAtIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSControlCharacterAction' index='1' name='action' type64='q'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSControlCharacterAction' type64='q'/>
</method>
<method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='attrs' type64='@'/>
<arg declared_type64='BOOL' index='2' name='toScreen' type64='B'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='4' name='effectiveCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='layoutManager:textContainer:didChangeGeometryFromSize:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='textContainer' type64='@'/>
<arg declared_type64='NSSize' index='2' name='oldSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutOptions'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='layoutOrientation'>
<retval declared_type64='NSTextLayoutOrientation' type64='q'/>
</method>
<method selector='linkDetectionType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='localizedSummaryItems'>
<retval declared_type64='NSArray *&gt; * _Nonnull' type64='@'/>
</method>
<method selector='localizedTitlesForItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='lowercaseWord:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeBaseWritingDirectionLeftToRight:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeBaseWritingDirectionNatural:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeBaseWritingDirectionRightToLeft:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionNatural:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='markedTextAbandoned:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedTextSelectionChanged:client:'>
<arg declared_type64='NSRange' index='0' name='newSel' type64='{_NSRange=QQ}'/>
<arg declared_type64='id _Null_unspecified' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menu:updateItem:atIndex:shouldCancel:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSMenuItem * _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='index' type64='q'/>
<arg declared_type64='BOOL' index='3' name='shouldCancel' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='menu:willHighlightItem:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSMenuItem * _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuDidClose:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuHasKeyEquivalent:forEvent:target:action:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='id _Nullable * _Nonnull' index='2' name='target' type64='^@'/>
<arg declared_type64='SEL _Nullable * _Nonnull' index='3' name='action' type64='^:'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='menuNeedsUpdate:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuWillOpen:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='minContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='minimumSizeWithPrioritizedCompressionOptions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedOptions' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='2' name='flags' type64='Q'/>
<arg declared_type64='id _Null_unspecified' index='3' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='2' name='flags' type64='Q'/>
<arg declared_type64='id _Null_unspecified' index='3' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='2' name='flags' type64='Q'/>
<arg declared_type64='id _Null_unspecified' index='3' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveBackward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveBackwardAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveDown:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveDownAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveForward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveForwardAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveLeft:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveLeftAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveParagraphBackwardAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveParagraphForwardAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveRight:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveRightAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfDocumentAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfLine:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfLineAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfParagraph:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfParagraphAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfDocumentAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfLine:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfLineAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfParagraph:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfParagraphAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToLeftEndOfLine:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToLeftEndOfLineAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToRightEndOfLine:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToRightEndOfLineAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveUp:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveUpAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordBackward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordBackwardAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordForward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordForwardAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordLeft:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordLeftAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordRight:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordRightAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='namesOfPromisedFilesDroppedAtDestination:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='dropDestination' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='numberOfItemsForScrubber:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfItemsInComboBox:'>
<arg declared_type64='NSComboBox * _Nonnull' index='0' name='comboBox' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfItemsInComboBoxCell:'>
<arg declared_type64='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfItemsInMenu:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfRowsInTableView:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSectionsInCollectionView:'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfValidItemsForDrop'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='objectDidBeginEditing:'>
<arg declared_type64='id _Nonnull' index='0' name='editor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='objectDidEndEditing:'>
<arg declared_type64='id _Nonnull' index='0' name='editor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='operationQueueForFilePromiseProvider:'>
<arg declared_type64='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type64='@'/>
<retval declared_type64='NSOperationQueue * _Nonnull' type64='@'/>
</method>
<method selector='optionDescriptionsForBinding:'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='optionsForSharingService:shareProvider:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='cloudKitSharingService' type64='@'/>
<arg declared_type64='NSItemProvider * _Nonnull' index='1' name='provider' type64='@'/>
<retval declared_type64='NSCloudKitSharingServiceOptions' type64='Q'/>
</method>
<method selector='outlineView:acceptDrop:item:childIndex:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='index' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:child:ofItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='outlineView:dataCellForTableColumn:item:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='NSCell * _Nullable' type64='@'/>
</method>
<method selector='outlineView:didAddRowView:forRow:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableRowView * _Nonnull' index='1' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:didClickTableColumn:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:didDragTableColumn:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:didRemoveRowView:forRow:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableRowView * _Nonnull' index='1' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:draggingSession:endedAtPoint:operation:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='3' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:draggingSession:willBeginAtPoint:forItems:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSArray * _Nonnull' index='3' name='draggedItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:heightOfRowByItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='outlineView:isGroupItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:isItemExpandable:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:itemForPersistentObject:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:mouseDownInHeaderOfTableColumn:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropDestination' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='items' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='startItem' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='endItem' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='searchString' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:numberOfChildrenOfItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='outlineView:objectValueForTableColumn:byItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:pasteboardWriterForItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:persistentObjectForItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:rowViewForItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='NSTableRowView * _Nullable' type64='@'/>
</method>
<method selector='outlineView:selectionIndexesForProposedSelection:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type64='@'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='outlineView:setObjectValue:forTableColumn:byItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:shouldCollapseItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldEditTableColumn:item:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldExpandItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldReorderColumn:toColumn:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='newColumnIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldSelectItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldSelectTableColumn:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldShowCellExpansionForTableColumn:item:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldShowOutlineCellForItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldTrackCell:forTableColumn:item:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='3' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='searchString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:sizeToFitWidthOfColumn:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='outlineView:sortDescriptorsDidChange:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='oldDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:tintConfigurationForItem:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='NSTintConfiguration * _Nullable' type64='@'/>
</method>
<method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRectPointer _Nonnull' index='2' name='rect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTableColumn * _Nullable' index='3' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='4' name='item' type64='@'/>
<arg declared_type64='NSPoint' index='5' name='mouseLocation' type64='{CGPoint=dd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='outlineView:typeSelectStringForTableColumn:item:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='outlineView:updateDraggingItemsForDrag:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='index' type64='q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='outlineView:viewForTableColumn:item:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='outlineView:willDisplayCell:forTableColumn:item:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='3' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='3' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:writeItems:toPasteboard:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineViewColumnDidMove:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewColumnDidResize:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewItemDidCollapse:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewItemDidExpand:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewItemWillCollapse:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewItemWillExpand:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewSelectionDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewSelectionIsChanging:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageController:didTransitionToObject:'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageController:frameForObject:'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='pageController:identifierForObject:'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='NSPageControllerObjectIdentifier _Nonnull' type64='@'/>
</method>
<method selector='pageController:prepareViewController:withObject:'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='NSViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageController:viewControllerForIdentifier:'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='NSPageControllerObjectIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='NSViewController * _Nonnull' type64='@'/>
</method>
<method selector='pageControllerDidEndLiveTransition:'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageControllerWillStartLiveTransition:'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageDown:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageDownAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageUp:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageUpAndModifySelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='panel:compareFilename:with:caseSensitive:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='name1' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='name2' type64='@'/>
<arg declared_type64='BOOL' index='3' name='caseSensitive' type64='B'/>
<retval declared_type64='NSComparisonResult' type64='q'/>
</method>
<method selector='panel:didChangeToDirectoryURL:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSURL * _Nullable' index='1' name='url' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='panel:directoryDidChange:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='path' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='panel:isValidFilename:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='panel:shouldEnableURL:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='panel:shouldShowFilename:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='panel:userEnteredFilename:confirmed:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<arg declared_type64='BOOL' index='2' name='okFlag' type64='B'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='panel:validateURL:error:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='panel:willExpand:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='BOOL' index='1' name='expanding' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='panelSelectionDidChange:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteboard:item:provideDataForType:'>
<arg declared_type64='NSPasteboard * _Nullable' index='0' name='pasteboard' type64='@'/>
<arg declared_type64='NSPasteboardItem * _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='2' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteboard:provideDataForType:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteboardChangedOwner:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteboardFinishedWithDataProvider:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteboardPropertyListForType:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='pathCell:willDisplayOpenPanel:'>
<arg declared_type64='NSPathCell * _Nonnull' index='0' name='pathCell' type64='@'/>
<arg declared_type64='NSOpenPanel * _Nonnull' index='1' name='openPanel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pathCell:willPopUpMenu:'>
<arg declared_type64='NSPathCell * _Nonnull' index='0' name='pathCell' type64='@'/>
<arg declared_type64='NSMenu * _Nonnull' index='1' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pathControl:acceptDrop:'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pathControl:shouldDragItem:withPasteboard:'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='NSPathControlItem * _Nonnull' index='1' name='pathItem' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pathControl:shouldDragPathComponentCell:withPasteboard:'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='NSPathComponentCell * _Nonnull' index='1' name='pathComponentCell' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pathControl:validateDrop:'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='pathControl:willDisplayOpenPanel:'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='NSOpenPanel * _Nonnull' index='1' name='openPanel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pathControl:willPopUpMenu:'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='NSMenu * _Nonnull' index='1' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performActionForItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performDragOperation:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='performFeedbackPattern:performanceTime:'>
<arg declared_type64='NSHapticFeedbackPattern' index='0' name='pattern' type64='q'/>
<arg declared_type64='NSHapticFeedbackPerformanceTime' index='1' name='performanceTime' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performSegueWithIdentifier:sender:'>
<arg declared_type64='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverDidClose:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverDidDetach:'>
<arg declared_type64='NSPopover * _Nonnull' index='0' name='popover' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverDidShow:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverShouldClose:'>
<arg declared_type64='NSPopover * _Nonnull' index='0' name='popover' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='popoverShouldDetach:'>
<arg declared_type64='NSPopover * _Nonnull' index='0' name='popover' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='popoverWillClose:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverWillShow:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredLayoutAttributesFittingAttributes:'>
<arg declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' type64='@'/>
</method>
<method selector='prepareForDragOperation:'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareForInterfaceBuilder'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForSegue:sender:'>
<arg declared_type64='NSStoryboardSegue * _Nonnull' index='0' name='segue' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='provideNewButtonImage'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='provideNewView:'>
<arg declared_type64='BOOL' index='0' name='initialRequest' type64='B'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
<method selector='quickLookPreviewItems:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readSelectionFromPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='readableTypesForPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='readingOptionsForType:pasteboard:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pasteboard' type64='@'/>
<retval declared_type64='NSPasteboardReadingOptions' type64='Q'/>
</method>
<method selector='rectsForCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='removeAnnotation:range:'>
<arg declared_type64='NSAttributedStringKey _Nonnull' index='0' name='annotationName' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceCharactersInRange:withAnnotatedString:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSAttributedString * _Nonnull' index='1' name='annotatedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='representedElementCategory'>
<retval declared_type64='NSCollectionElementCategory' type64='q'/>
</method>
<method selector='representedElementKind'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='resetSpringLoading'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='restoreUserActivityState:'>
<arg declared_type64='NSUserActivity * _Nonnull' index='0' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='restoreWindowWithIdentifier:state:completionHandler:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='state' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSWindow * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSWindow * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rootItemForBrowser:'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='rotor:resultForSearchParameters:'>
<arg declared_type64='NSAccessibilityCustomRotor * _Nonnull' index='0' name='rotor' type64='@'/>
<arg declared_type64='NSAccessibilityCustomRotorSearchParameters * _Nonnull' index='1' name='searchParameters' type64='@'/>
<retval declared_type64='NSAccessibilityCustomRotorItemResult * _Nullable' type64='@'/>
</method>
<method selector='ruleEditor:child:forCriterion:withRowType:'>
<arg declared_type64='NSRuleEditor * _Nonnull' index='0' name='editor' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='criterion' type64='@'/>
<arg declared_type64='NSRuleEditorRowType' index='3' name='rowType' type64='Q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='ruleEditor:displayValueForCriterion:inRow:'>
<arg declared_type64='NSRuleEditor * _Nonnull' index='0' name='editor' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='criterion' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='ruleEditor:numberOfChildrenForCriterion:withRowType:'>
<arg declared_type64='NSRuleEditor * _Nonnull' index='0' name='editor' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='criterion' type64='@'/>
<arg declared_type64='NSRuleEditorRowType' index='2' name='rowType' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:'>
<arg declared_type64='NSRuleEditor * _Nonnull' index='0' name='editor' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='criterion' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='value' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='row' type64='q'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='ruleEditorRowsDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollLineDown:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollLineUp:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollPageDown:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollPageUp:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollToBeginningOfDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollToEndOfDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubber:didChangeVisibleRange:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSRange' index='1' name='visibleRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubber:didHighlightItemAtIndex:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='highlightedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubber:didSelectItemAtIndex:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='selectedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubber:layout:sizeForItemAtIndex:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSScrubberFlowLayout * _Nonnull' index='1' name='layout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='itemIndex' type64='q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='scrubber:viewForItemAtIndex:'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='__kindof NSScrubberItemView * _Nonnull' type64='@'/>
</method>
<method selector='searchFieldDidEndSearching:'>
<arg declared_type64='NSSearchField * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchFieldDidStartSearching:'>
<arg declared_type64='NSSearchField * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchForItemsWithSearchString:resultLimit:matchedItemHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='searchString' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='resultLimit' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='2' name='handleMatchedItems' type64='@?'>
<arg declared_type64='NSArray * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sectionCollapseButton'>
<retval declared_type64='NSButton * _Nullable' type64='@'/>
</method>
<method selector='selectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAndShowRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectLine:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectParagraph:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectToMark:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectWord:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='selectedRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selectionShouldChangeInOutlineView:'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectionShouldChangeInTableView:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAccessibilityActivationPoint:'>
<arg declared_type64='NSPoint' index='0' name='accessibilityActivationPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityAllowedValues:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityAllowedValues' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityAlternateUIVisible:'>
<arg declared_type64='BOOL' index='0' name='accessibilityAlternateUIVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityApplicationFocusedUIElement:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityApplicationFocusedUIElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCancelButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityCancelButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityChildren:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityChildren' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityChildrenInNavigationOrder:'>
<arg declared_type64='NSArray&gt; * _Nullable' index='0' name='accessibilityChildrenInNavigationOrder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityClearButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityClearButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCloseButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityCloseButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumnCount:'>
<arg declared_type64='NSInteger' index='0' name='accessibilityColumnCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumnHeaderUIElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityColumnHeaderUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumnIndexRange:'>
<arg declared_type64='NSRange' index='0' name='accessibilityColumnIndexRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumnTitles:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityColumnTitles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumns:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityColumns' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityContents:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityContents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCriticalValue:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityCriticalValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCustomActions:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityCustomActions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCustomRotors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='accessibilityCustomRotors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDecrementButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityDecrementButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDefaultButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityDefaultButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDisclosed:'>
<arg declared_type64='BOOL' index='0' name='accessibilityDisclosed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDisclosedByRow:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityDisclosedByRow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDisclosedRows:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityDisclosedRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDisclosureLevel:'>
<arg declared_type64='NSInteger' index='0' name='accessibilityDisclosureLevel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDocument:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityDocument' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityEdited:'>
<arg declared_type64='BOOL' index='0' name='accessibilityEdited' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityElement:'>
<arg declared_type64='BOOL' index='0' name='accessibilityElement' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityEnabled:'>
<arg declared_type64='BOOL' index='0' name='accessibilityEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityExpanded:'>
<arg declared_type64='BOOL' index='0' name='accessibilityExpanded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityExtrasMenuBar:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityExtrasMenuBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFilename:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityFilename' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFocused:'>
<arg declared_type64='BOOL' index='0' name='accessibilityFocused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFocusedWindow:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityFocusedWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFrame:'>
<arg declared_type64='NSRect' index='0' name='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFrontmost:'>
<arg declared_type64='BOOL' index='0' name='accessibilityFrontmost' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFullScreenButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityFullScreenButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityGrowArea:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityGrowArea' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHandles:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityHandles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHeader:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityHeader' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHelp:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityHelp' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHidden:'>
<arg declared_type64='BOOL' index='0' name='accessibilityHidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHorizontalScrollBar:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityHorizontalScrollBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHorizontalUnitDescription:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityHorizontalUnitDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHorizontalUnits:'>
<arg declared_type64='NSAccessibilityUnits' index='0' name='accessibilityHorizontalUnits' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityIncrementButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityIncrementButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityIndex:'>
<arg declared_type64='NSInteger' index='0' name='accessibilityIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityInsertionPointLineNumber:'>
<arg declared_type64='NSInteger' index='0' name='accessibilityInsertionPointLineNumber' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabelUIElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityLabelUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabelValue:'>
<arg declared_type64='float' index='0' name='accessibilityLabelValue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLinkedUIElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityLinkedUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMain:'>
<arg declared_type64='BOOL' index='0' name='accessibilityMain' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMainWindow:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMainWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMarkerGroupUIElement:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMarkerGroupUIElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMarkerTypeDescription:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityMarkerTypeDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMarkerUIElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityMarkerUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMarkerValues:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMarkerValues' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMaxValue:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMaxValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMenuBar:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMenuBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMinValue:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMinValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMinimizeButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMinimizeButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMinimized:'>
<arg declared_type64='BOOL' index='0' name='accessibilityMinimized' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityModal:'>
<arg declared_type64='BOOL' index='0' name='accessibilityModal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityNextContents:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityNextContents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityNumberOfCharacters:'>
<arg declared_type64='NSInteger' index='0' name='accessibilityNumberOfCharacters' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityOrderedByRow:'>
<arg declared_type64='BOOL' index='0' name='accessibilityOrderedByRow' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityOrientation:'>
<arg declared_type64='NSAccessibilityOrientation' index='0' name='accessibilityOrientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityOverflowButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityOverflowButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityParent:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityParent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityPlaceholderValue:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityPlaceholderValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityPreviousContents:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityPreviousContents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityProtectedContent:'>
<arg declared_type64='BOOL' index='0' name='accessibilityProtectedContent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityProxy:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityProxy' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRequired:'>
<arg declared_type64='BOOL' index='0' name='accessibilityRequired' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRole:'>
<arg declared_type64='NSAccessibilityRole _Nullable' index='0' name='accessibilityRole' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRoleDescription:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityRoleDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRowCount:'>
<arg declared_type64='NSInteger' index='0' name='accessibilityRowCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRowHeaderUIElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityRowHeaderUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRowIndexRange:'>
<arg declared_type64='NSRange' index='0' name='accessibilityRowIndexRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRows:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRulerMarkerType:'>
<arg declared_type64='NSAccessibilityRulerMarkerType' index='0' name='accessibilityRulerMarkerType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySearchButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilitySearchButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySearchMenu:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilitySearchMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelected:'>
<arg declared_type64='BOOL' index='0' name='accessibilitySelected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedCells:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedChildren:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedChildren' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedColumns:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedColumns' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedRows:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedText:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilitySelectedText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedTextRange:'>
<arg declared_type64='NSRange' index='0' name='accessibilitySelectedTextRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedTextRanges:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedTextRanges' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityServesAsTitleForUIElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityServesAsTitleForUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySharedCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='accessibilitySharedCharacterRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySharedFocusElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySharedFocusElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySharedTextUIElements:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySharedTextUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityShownMenu:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityShownMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySortDirection:'>
<arg declared_type64='NSAccessibilitySortDirection' index='0' name='accessibilitySortDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySplitters:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySplitters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySubrole:'>
<arg declared_type64='NSAccessibilitySubrole _Nullable' index='0' name='accessibilitySubrole' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTabs:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityTabs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTitleUIElement:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityTitleUIElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityToolbarButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityToolbarButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTopLevelUIElement:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityTopLevelUIElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='accessibilityURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityUnitDescription:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityUnitDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityUnits:'>
<arg declared_type64='NSAccessibilityUnits' index='0' name='accessibilityUnits' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityValue:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityValueDescription:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityValueDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVerticalScrollBar:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityVerticalScrollBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVerticalUnitDescription:'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityVerticalUnitDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVerticalUnits:'>
<arg declared_type64='NSAccessibilityUnits' index='0' name='accessibilityVerticalUnits' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleCells:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityVisibleCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='accessibilityVisibleCharacterRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleChildren:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityVisibleChildren' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleColumns:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityVisibleColumns' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleRows:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityVisibleRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityWarningValue:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityWarningValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityWindow:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityWindows:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityWindows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityZoomButton:'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityZoomButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlpha:'>
<arg declared_type64='CGFloat' index='0' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimatesToDestination:'>
<arg declared_type64='BOOL' index='0' name='animatesToDestination' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimations:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='animations' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnnotations:range:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='annotations' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppearance:'>
<arg declared_type64='NSAppearance * _Nullable' index='0' name='appearance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttachment:'>
<arg declared_type64='NSTextAttachment * _Nullable' index='0' name='attachment' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutocorrectionType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='autocorrectionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCenter:'>
<arg declared_type64='NSPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='newColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentType:'>
<arg declared_type64='NSTextContentType _Nullable' index='0' name='contentType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataDetectionType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='dataDetectionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDefaultPlaceholder:forMarker:withBinding:'>
<arg declared_type64='id _Nullable' index='0' name='placeholder' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='marker' type64='@'/>
<arg declared_type64='NSBindingName _Nonnull' index='2' name='binding' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDockTile:'>
<arg declared_type64='NSDockTile * _Nullable' index='0' name='dockTile' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingFormation:'>
<arg declared_type64='NSDraggingFormation' index='0' name='draggingFormation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFindBarView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='findBarView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFindBarVisible:'>
<arg declared_type64='BOOL' index='0' name='findBarVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGrammarCheckingType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='grammarCheckingType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nullable' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntAttribute:value:forGlyphAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='attributeTag' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='val' type64='q'/>
<arg declared_type64='NSUInteger' index='2' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLinkDetectionType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='linkDetectionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMark:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkedText:selectedRange:'>
<arg declared_type64='id _Null_unspecified' index='0' name='string' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkedText:selectedRange:replacementRange:'>
<arg declared_type64='id _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='2' name='replacementRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMode:'>
<arg declared_type64='NSColorPanelMode' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfValidItemsForDrop:'>
<arg declared_type64='NSInteger' index='0' name='numberOfValidItemsForDrop' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionCollapseButton:'>
<arg declared_type64='NSButton * _Nullable' index='0' name='sectionCollapseButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedRanges:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='selectedRanges' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmartDashesType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='smartDashesType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmartInsertDeleteType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='smartInsertDeleteType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmartQuotesType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='smartQuotesType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpellCheckingType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='spellCheckingType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextCompletionType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='textCompletionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextReplacementType:'>
<arg declared_type64='NSTextInputTraitType' index='0' name='textReplacementType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZIndex:'>
<arg declared_type64='NSInteger' index='0' name='zIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:didCompleteForItems:error:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSError * _Nullable' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:didFailToShareItems:error:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:didSaveShare:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='CKShare * _Nonnull' index='1' name='share' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:didShareItems:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:didStopSharing:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='CKShare * _Nonnull' index='1' name='share' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:sourceFrameOnScreenForShareItem:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sharingService:sourceWindowForShareItems:sharingContentScope:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSSharingContentScope * _Nonnull' index='2' name='sharingContentScope' type64='^q'/>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='sharingService:transitionImageForShareItem:contentRect:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSRect * _Nonnull' index='2' name='contentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='sharingService:willShareItems:'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingServicePicker:delegateForSharingService:'>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type64='@'/>
<arg declared_type64='NSSharingService * _Nonnull' index='1' name='sharingService' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='sharingServicePicker:didChooseSharingService:'>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type64='@'/>
<arg declared_type64='NSSharingService * _Nullable' index='1' name='service' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingServicePicker:sharingServicesForItems:proposedSharingServices:'>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='proposedServices' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='shouldPerformSegueWithIdentifier:sender:'>
<arg declared_type64='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldReplaceCharactersInRanges:withStrings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='ranges' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='strings' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showAllHelpTopicsForSearchString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='searchString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='slideDraggedImageTo:'>
<arg declared_type64='NSPoint' index='0' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='smartDashesType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='smartInsertDeleteType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='smartQuotesType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='sound:didFinishPlaying:'>
<arg declared_type64='NSSound * _Nonnull' index='0' name='sound' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechRecognizer:didRecognizeCommand:'>
<arg declared_type64='NSSpeechRecognizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='command' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='characterIndex' type64='Q'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='message' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didEncounterSyncMessage:'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='message' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeaking:'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='BOOL' index='1' name='finishedSpeaking' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:willSpeakPhoneme:'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='short' index='1' name='phonemeOpcode' type64='s'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:willSpeakWord:ofString:'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSRange' index='1' name='characterRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spellCheckingType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='splitView:additionalEffectiveRectOfDividerAtIndex:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='dividerIndex' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:canCollapseSubview:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='subview' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitView:constrainMaxCoordinate:ofSubviewAt:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='proposedMaximumPosition' type64='d'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='splitView:constrainMinCoordinate:ofSubviewAt:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='proposedMinimumPosition' type64='d'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='splitView:constrainSplitPosition:ofSubviewAt:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='proposedPosition' type64='d'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSRect' index='1' name='proposedEffectiveRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='2' name='drawnRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' index='3' name='dividerIndex' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:resizeSubviewsWithOldSize:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSSize' index='1' name='oldSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='splitView:shouldAdjustSizeOfSubview:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='subview' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitView:shouldHideDividerAtIndex:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='dividerIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewDidResizeSubviews:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='splitViewWillResizeSubviews:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingActivated:draggingInfo:'>
<arg declared_type64='BOOL' index='0' name='activated' type64='B'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingEntered:'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='NSSpringLoadingOptions' type64='Q'/>
</method>
<method selector='springLoadingExited:'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingHighlight'>
<retval declared_type64='NSSpringLoadingHighlight' type64='q'/>
</method>
<method selector='springLoadingHighlightChanged:'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingUpdated:'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='NSSpringLoadingOptions' type64='Q'/>
</method>
<method selector='stackView:didReattachViews:'>
<arg declared_type64='NSStackView * _Nonnull' index='0' name='stackView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='views' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stackView:willDetachViews:'>
<arg declared_type64='NSStackView * _Nonnull' index='0' name='stackView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='views' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='string'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='stringAtIndex:effectiveRange:endsWithSearchBoundary:'>
<arg declared_type64='NSUInteger' index='0' name='characterIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nonnull' index='1' name='outRange' type64='^{_NSRange=QQ}'/>
<arg declared_type64='BOOL * _Nonnull' index='2' name='outFlag' type64='^B'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='stringLength'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='supportsMode:'>
<arg declared_type64='NSColorPanelMode' index='0' name='mode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='swapWithMark:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabView:didSelectTabViewItem:'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabView:shouldSelectTabViewItem:'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tabView:willSelectTabViewItem:'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabViewDidChangeNumberOfTabViewItems:'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:acceptDrop:row:dropOperation:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<arg declared_type64='NSTableViewDropOperation' index='3' name='dropOperation' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:dataCellForTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='NSCell * _Nullable' type64='@'/>
</method>
<method selector='tableView:didAddRowView:forRow:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableRowView * _Nonnull' index='1' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didClickTableColumn:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didDragTableColumn:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didRemoveRowView:forRow:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableRowView * _Nonnull' index='1' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:draggingSession:endedAtPoint:operation:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='3' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:draggingSession:willBeginAtPoint:forRowIndexes:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='3' name='rowIndexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:heightOfRow:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:isGroupRow:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:mouseDownInHeaderOfTableColumn:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropDestination' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='2' name='indexSet' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='startRow' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='endRow' type64='q'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='searchString' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tableView:objectValueForTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tableView:pasteboardWriterForRow:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tableView:rowActionsForRow:edge:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSTableRowActionEdge' index='2' name='edge' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tableView:rowViewForRow:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='NSTableRowView * _Nullable' type64='@'/>
</method>
<method selector='tableView:selectionIndexesForProposedSelection:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type64='@'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='tableView:setObjectValue:forTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:shouldEditTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldReorderColumn:toColumn:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='newColumnIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldSelectRow:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldSelectTableColumn:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldShowCellExpansionForTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldTrackCell:forTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='searchString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:sizeToFitWidthOfColumn:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:sortDescriptorsDidChange:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='oldDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRectPointer _Nonnull' index='2' name='rect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTableColumn * _Nullable' index='3' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='4' name='row' type64='q'/>
<arg declared_type64='NSPoint' index='5' name='mouseLocation' type64='{CGPoint=dd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='tableView:typeSelectStringForTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tableView:updateDraggingItemsForDrag:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:validateDrop:proposedRow:proposedDropOperation:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<arg declared_type64='NSTableViewDropOperation' index='3' name='dropOperation' type64='Q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='tableView:viewForTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='tableView:willDisplayCell:forTableColumn:row:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:writeRows:toPasteboard:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='rows' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:writeRowsWithIndexes:toPasteboard:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableViewColumnDidMove:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableViewColumnDidResize:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableViewSelectionDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableViewSelectionIsChanging:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='terminate:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textCompletionType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='textDidBeginEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidEndEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textField:textView:candidates:forSelectedRange:'>
<arg declared_type64='NSTextField * _Nonnull' index='0' name='textField' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='candidates' type64='@'/>
<arg declared_type64='NSRange' index='3' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textField:textView:candidatesForSelectedRange:'>
<arg declared_type64='NSTextField * _Nonnull' index='0' name='textField' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='2' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='textField:textView:shouldSelectCandidateAtIndex:'>
<arg declared_type64='NSTextField * _Nonnull' index='0' name='textField' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='index' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textReplacementType'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textShouldEndEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textStorage:didProcessEditing:range:changeInLength:'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStorage:willProcessEditing:range:changeInLength:'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStorageDidProcessEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStorageWillProcessEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:URLForContentsOfTextAttachment:atIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='textView:candidates:forSelectedRange:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='candidates' type64='@'/>
<arg declared_type64='NSRange' index='2' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:candidatesForSelectedRange:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='textView:clickedOnCell:inRect:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:clickedOnCell:inRect:atIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:clickedOnLink:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='link' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:clickedOnLink:atIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='link' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='words' type64='@'/>
<arg declared_type64='NSRange' index='2' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger * _Nullable' index='3' name='index' type64='^q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:didCheckTextInRange:types:options:results:orthography:wordCount:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextCheckingTypes' index='2' name='checkingTypes' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='options' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='4' name='results' type64='@'/>
<arg declared_type64='NSOrthography * _Nonnull' index='5' name='orthography' type64='@'/>
<arg declared_type64='NSInteger' index='6' name='wordCount' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:doCommandBySelector:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='commandSelector' type64=':'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:atIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:draggedCell:inRect:event:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSEvent * _Null_unspecified' index='3' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:draggedCell:inRect:event:atIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<arg declared_type64='NSUInteger' index='4' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:menu:forEvent:atIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSMenu * _Nonnull' index='1' name='menu' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementString:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='1' name='affectedCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nullable' index='2' name='replacementString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldChangeTextInRanges:replacementStrings:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='affectedRanges' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='2' name='replacementStrings' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldChangeTypingAttributes:toAttributes:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='oldTypingAttributes' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='newTypingAttributes' type64='@'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='textView:shouldSelectCandidateAtIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldSetSpellingState:range:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='value' type64='q'/>
<arg declared_type64='NSRange' index='2' name='affectedCharRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='textView:shouldUpdateTouchBarItemIdentifiers:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='identifiers' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='1' name='oldSelectedCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='2' name='newSelectedCharRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='oldSelectedCharRanges' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='newSelectedCharRanges' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:willCheckTextInRange:options:types:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<arg declared_type64='NSTextCheckingTypes * _Nonnull' index='3' name='checkingTypes' type64='^Q'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='textView:willDisplayToolTip:forCharacterAtIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='tooltip' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='characterIndex' type64='Q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='textView:willShowSharingServicePicker:forItems:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='1' name='servicePicker' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='items' type64='@'/>
<retval declared_type64='NSSharingServicePicker * _Nullable' type64='@'/>
</method>
<method selector='textView:writablePasteboardTypesForCell:atIndex:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:writeCell:atIndex:toPasteboard:type:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='3' name='pboard' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='4' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textViewDidChangeSelection:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewDidChangeTypingAttributes:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='substring' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='tokenIndex' type64='q'/>
<arg declared_type64='NSInteger * _Nullable' index='3' name='selectedIndex' type64='^q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tokenField:displayStringForRepresentedObject:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenField:editingStringForRepresentedObject:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenField:hasMenuForRepresentedObject:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tokenField:menuForRepresentedObject:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='tokenField:readFromPasteboard:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pboard' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tokenField:representedObjectForEditingString:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='editingString' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tokenField:shouldAddObjects:atIndex:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='tokens' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='index' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tokenField:styleForRepresentedObject:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSTokenStyle' type64='Q'/>
</method>
<method selector='tokenField:writeRepresentedObjects:toPasteboard:'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='objects' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='substring' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='tokenIndex' type64='q'/>
<arg declared_type64='NSInteger * _Nonnull' index='3' name='selectedIndex' type64='^q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tokenFieldCell:displayStringForRepresentedObject:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:editingStringForRepresentedObject:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:hasMenuForRepresentedObject:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tokenFieldCell:menuForRepresentedObject:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:readFromPasteboard:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pboard' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:representedObjectForEditingString:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='editingString' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:shouldAddObjects:atIndex:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='tokens' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='index' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tokenFieldCell:styleForRepresentedObject:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSTokenStyle' type64='Q'/>
</method>
<method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='objects' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<arg declared_type64='NSToolbarItemIdentifier _Nonnull' index='1' name='itemIdentifier' type64='@'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='NSToolbarItem * _Nullable' type64='@'/>
</method>
<method selector='toolbarAllowedItemIdentifiers:'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbarDefaultItemIdentifiers:'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbarDidRemoveItem:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toolbarSelectableItemIdentifiers:'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbarWillAddItem:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchBar'>
<retval declared_type64='NSTouchBar * _Nullable' type64='@'/>
</method>
<method selector='touchBar:makeItemForIdentifier:'>
<arg declared_type64='NSTouchBar * _Nonnull' index='0' name='touchBar' type64='@'/>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='NSTouchBarItem * _Nullable' type64='@'/>
</method>
<method selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='theEvent' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='controlView' type64='@'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<arg declared_type64='BOOL' index='4' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='theEvent' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='controlView' type64='@'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='transpose:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transposeWords:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unbind:'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='undoManagerForTextView:'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSUndoManager * _Nullable' type64='@'/>
</method>
<method selector='unmarkText'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateDraggingItemsForDrag:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='uppercaseWord:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validAttributesForMarkedText'>
<retval declared_type64='NSArray * _Null_unspecified' type64='@'/>
</method>
<method selector='validModesForFontPanel:'>
<arg declared_type64='NSFontPanel * _Nonnull' index='0' name='fontPanel' type64='@'/>
<retval declared_type64='NSFontPanelModeMask' type64='Q'/>
</method>
<method selector='validateMenuItem:'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='menuItem' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='validateToolbarItem:'>
<arg declared_type64='NSToolbarItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='valueClassForBinding:'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='view:stringForToolTip:point:userData:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSToolTipTag' index='1' name='tag' type64='q'/>
<arg declared_type64='NSPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='void * _Nullable' index='3' name='data' type64='^v'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='viewForRange:firstRect:actualRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRectPointer _Nullable' index='1' name='firstRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='actualRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='viewSizeChanged:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='visibleCharacterRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='wantsPeriodicDraggingUpdates'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToDelayTextChangeNotifications'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToHandleMouseEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToInterpretAllKeystrokes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToTrackMouse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='theEvent' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='controlView' type64='@'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='willTransitionFromLayout:toLayout:'>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:didDecodeRestorableState:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='state' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='dragImageLocation' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='3' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='window:shouldPopUpDocumentPathMenu:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSMenu * _Nonnull' index='1' name='menu' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSScreen * _Nonnull' index='1' name='screen' type64='@'/>
<arg declared_type64='NSTimeInterval' index='2' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenWithDuration:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:startCustomAnimationToExitFullScreenWithDuration:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:willEncodeRestorableState:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='state' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:willPositionSheet:usingRect:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSWindow * _Nonnull' index='1' name='sheet' type64='@'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSSize' index='1' name='maxPreferredFrameSize' type64='{CGSize=dd}'/>
<arg declared_type64='NSSize' index='2' name='maxAllowedFrameSize' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='window:willUseFullScreenContentSize:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSSize' index='1' name='proposedSize' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='window:willUseFullScreenPresentationOptions:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSApplicationPresentationOptions' index='1' name='proposedOptions' type64='Q'/>
<retval declared_type64='NSApplicationPresentationOptions' type64='Q'/>
</method>
<method selector='windowDidBecomeKey:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidBecomeMain:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidChangeBackingProperties:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidChangeOcclusionState:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidChangeScreen:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidChangeScreenProfile:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidDeminiaturize:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidEndLiveResize:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidEndSheet:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidEnterFullScreen:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidEnterVersionBrowser:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidExitFullScreen:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidExitVersionBrowser:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidExpose:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidFailToEnterFullScreen:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidFailToExitFullScreen:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidMiniaturize:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidMove:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidResignKey:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidResignMain:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidResize:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidUpdate:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowLevel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='windowShouldClose:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='windowShouldZoom:toFrame:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSRect' index='1' name='newFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='windowWillBeginSheet:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillClose:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillEnterFullScreen:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillEnterVersionBrowser:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillExitFullScreen:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillExitVersionBrowser:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillMiniaturize:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillMove:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillResize:toSize:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSSize' index='1' name='frameSize' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='windowWillReturnFieldEditor:toObject:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='client' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='windowWillReturnUndoManager:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSUndoManager * _Nullable' type64='@'/>
</method>
<method selector='windowWillStartLiveResize:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillUseStandardFrame:defaultFrame:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSRect' index='1' name='newFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='writableTypesForPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='writeSelectionToPasteboard:types:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='types' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writingOptionsForType:pasteboard:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pasteboard' type64='@'/>
<retval declared_type64='NSPasteboardWritingOptions' type64='Q'/>
</method>
<method selector='yank:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='zIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSObjectController'>
<method selector='add:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addObject:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='automaticallyPreparesContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canAdd'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canRemove'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='content'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='defaultFetchRequest'>
<retval declared_type64='NSFetchRequest * _Nonnull' type64='@'/>
</method>
<method selector='entityName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fetch:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fetchPredicate'>
<retval declared_type64='NSPredicate * _Nullable' type64='@'/>
</method>
<method selector='fetchWithRequest:merge:error:'>
<arg declared_type64='NSFetchRequest * _Nullable' index='0' name='fetchRequest' type64='@'/>
<arg declared_type64='BOOL' index='1' name='merge' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithContent:'>
<arg declared_type64='id _Nullable' index='0' name='content' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type64='NSManagedObjectContext * _Nullable' type64='@'/>
</method>
<method selector='newObject'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='objectClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='prepareContent'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='remove:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedObjects'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selection'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='setAutomaticallyPreparesContent:'>
<arg declared_type64='BOOL' index='0' name='automaticallyPreparesContent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContent:'>
<arg declared_type64='id _Nullable' index='0' name='content' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEntityName:'>
<arg declared_type64='NSString * _Nullable' index='0' name='entityName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFetchPredicate:'>
<arg declared_type64='NSPredicate * _Nullable' index='0' name='fetchPredicate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type64='NSManagedObjectContext * _Nullable' index='0' name='managedObjectContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObjectClass:'>
<arg declared_type64='Class _Nullable' index='0' name='objectClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesLazyFetching:'>
<arg declared_type64='BOOL' index='0' name='usesLazyFetching' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesLazyFetching'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSOpenGLContext'>
<method selector='CGLContextObj'>
<retval declared_type64='CGLContextObj _Nullable' type64='^{_CGLContextObject=}'/>
</method>
<method class_method='true' selector='clearCurrentContext'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='clearDrawable'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='copyAttributesFromContext:withMask:'>
<arg declared_type64='NSOpenGLContext * _Nonnull' index='0' name='context' type64='@'/>
<arg declared_type64='GLbitfield' index='1' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='createTexture:fromView:internalFormat:'>
<arg declared_type64='GLenum' index='0' name='target' type64='I'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='GLenum' index='2' name='format' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='currentContext'>
<retval declared_type64='NSOpenGLContext * _Nullable' type64='@'/>
</method>
<method selector='currentVirtualScreen'>
<retval declared_type64='GLint' type64='i'/>
</method>
<method selector='flushBuffer'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getValues:forParameter:'>
<arg declared_type64='GLint * _Nonnull' index='0' name='vals' type64='^i'/>
<arg declared_type64='NSOpenGLContextParameter' index='1' name='param' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithCGLContextObj:'>
<arg declared_type64='CGLContextObj _Nonnull' index='0' name='context' type64='^{_CGLContextObject=}'/>
<retval declared_type64='NSOpenGLContext * _Nullable' type64='@'/>
</method>
<method selector='initWithFormat:shareContext:'>
<arg declared_type64='NSOpenGLPixelFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='NSOpenGLContext * _Nullable' index='1' name='share' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='makeCurrentContext'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pixelBuffer'>
<retval declared_type64='NSOpenGLPixelBuffer * _Nullable' type64='@'/>
</method>
<method selector='pixelBufferCubeMapFace'>
<retval declared_type64='GLenum' type64='I'/>
</method>
<method selector='pixelBufferMipMapLevel'>
<retval declared_type64='GLint' type64='i'/>
</method>
<method selector='pixelFormat'>
<retval declared_type64='NSOpenGLPixelFormat * _Nonnull' type64='@'/>
</method>
<method selector='setCurrentVirtualScreen:'>
<arg declared_type64='GLint' index='0' name='currentVirtualScreen' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullScreen'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOffScreen:width:height:rowbytes:'>
<arg declared_type64='void * _Nonnull' index='0' name='baseaddr' type64='^v'/>
<arg declared_type64='GLsizei' index='1' name='width' type64='i'/>
<arg declared_type64='GLsizei' index='2' name='height' type64='i'/>
<arg declared_type64='GLint' index='3' name='rowbytes' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:'>
<arg declared_type64='NSOpenGLPixelBuffer * _Nonnull' index='0' name='pixelBuffer' type64='@'/>
<arg declared_type64='GLenum' index='1' name='face' type64='I'/>
<arg declared_type64='GLint' index='2' name='level' type64='i'/>
<arg declared_type64='GLint' index='3' name='screen' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextureImageToPixelBuffer:colorBuffer:'>
<arg declared_type64='NSOpenGLPixelBuffer * _Nonnull' index='0' name='pixelBuffer' type64='@'/>
<arg declared_type64='GLenum' index='1' name='source' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValues:forParameter:'>
<arg const='true' declared_type64='GLint * _Nonnull' index='0' name='vals' type64='^i'/>
<arg declared_type64='NSOpenGLContextParameter' index='1' name='param' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='update'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
</class>
<class name='NSOpenGLLayer'>
<method selector='canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'>
<arg declared_type64='NSOpenGLContext * _Nonnull' index='0' name='context' type64='@'/>
<arg declared_type64='NSOpenGLPixelFormat * _Nonnull' index='1' name='pixelFormat' type64='@'/>
<arg declared_type64='CFTimeInterval' index='2' name='t' type64='d'/>
<arg const='true' declared_type64='CVTimeStamp * _Nonnull' index='3' name='ts' type64='^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'>
<arg declared_type64='NSOpenGLContext * _Nonnull' index='0' name='context' type64='@'/>
<arg declared_type64='NSOpenGLPixelFormat * _Nonnull' index='1' name='pixelFormat' type64='@'/>
<arg declared_type64='CFTimeInterval' index='2' name='t' type64='d'/>
<arg const='true' declared_type64='CVTimeStamp * _Nonnull' index='3' name='ts' type64='^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='openGLContext'>
<retval declared_type64='NSOpenGLContext * _Nullable' type64='@'/>
</method>
<method selector='openGLContextForPixelFormat:'>
<arg declared_type64='NSOpenGLPixelFormat * _Nonnull' index='0' name='pixelFormat' type64='@'/>
<retval declared_type64='NSOpenGLContext * _Nonnull' type64='@'/>
</method>
<method selector='openGLPixelFormat'>
<retval declared_type64='NSOpenGLPixelFormat * _Nullable' type64='@'/>
</method>
<method selector='openGLPixelFormatForDisplayMask:'>
<arg declared_type64='uint32_t' index='0' name='mask' type64='I'/>
<retval declared_type64='NSOpenGLPixelFormat * _Nonnull' type64='@'/>
</method>
<method selector='setOpenGLContext:'>
<arg declared_type64='NSOpenGLContext * _Nullable' index='0' name='openGLContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpenGLPixelFormat:'>
<arg declared_type64='NSOpenGLPixelFormat * _Nullable' index='0' name='openGLPixelFormat' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
</class>
<class name='NSOpenGLPixelBuffer'>
<method selector='CGLPBufferObj'>
<retval declared_type64='CGLPBufferObj _Nullable' type64='^{_CGLPBufferObject=}'/>
</method>
<method selector='initWithCGLPBufferObj:'>
<arg declared_type64='CGLPBufferObj _Nonnull' index='0' name='pbuffer' type64='^{_CGLPBufferObject=}'/>
<retval declared_type64='NSOpenGLPixelBuffer * _Nullable' type64='@'/>
</method>
<method selector='initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:'>
<arg declared_type64='GLenum' index='0' name='target' type64='I'/>
<arg declared_type64='GLenum' index='1' name='format' type64='I'/>
<arg declared_type64='GLint' index='2' name='maxLevel' type64='i'/>
<arg declared_type64='GLsizei' index='3' name='pixelsWide' type64='i'/>
<arg declared_type64='GLsizei' index='4' name='pixelsHigh' type64='i'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='pixelsHigh'>
<retval declared_type64='GLsizei' type64='i'/>
</method>
<method selector='pixelsWide'>
<retval declared_type64='GLsizei' type64='i'/>
</method>
<method selector='textureInternalFormat'>
<retval declared_type64='GLenum' type64='I'/>
</method>
<method selector='textureMaxMipMapLevel'>
<retval declared_type64='GLint' type64='i'/>
</method>
<method selector='textureTarget'>
<retval declared_type64='GLenum' type64='I'/>
</method>
</class>
<class name='NSOpenGLPixelFormat'>
<method selector='CGLPixelFormatObj'>
<retval declared_type64='CGLPixelFormatObj _Nullable' type64='^{_CGLPixelFormatObject=}'/>
</method>
<method selector='attributes'>
<retval declared_type64='NSData * _Null_unspecified' type64='@'/>
</method>
<method selector='getValues:forAttribute:forVirtualScreen:'>
<arg declared_type64='GLint * _Nonnull' index='0' name='vals' type64='^i'/>
<arg declared_type64='NSOpenGLPixelFormatAttribute' index='1' name='attrib' type64='I'/>
<arg declared_type64='GLint' index='2' name='screen' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithAttributes:'>
<arg const='true' declared_type64='NSOpenGLPixelFormatAttribute * _Nonnull' index='0' name='attribs' type64='^I'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithCGLPixelFormatObj:'>
<arg declared_type64='CGLPixelFormatObj _Nonnull' index='0' name='format' type64='^{_CGLPixelFormatObject=}'/>
<retval declared_type64='NSOpenGLPixelFormat * _Nullable' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Null_unspecified' index='0' name='attribs' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='numberOfVirtualScreens'>
<retval declared_type64='GLint' type64='i'/>
</method>
<method selector='setAttributes:'>
<arg declared_type64='NSData * _Null_unspecified' index='0' name='attribs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSOpenGLView'>
<method selector='clearGLContext'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='defaultPixelFormat'>
<retval declared_type64='NSOpenGLPixelFormat * _Nonnull' type64='@'/>
</method>
<method selector='initWithFrame:pixelFormat:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSOpenGLPixelFormat * _Nullable' index='1' name='format' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='openGLContext'>
<retval declared_type64='NSOpenGLContext * _Nullable' type64='@'/>
</method>
<method selector='pixelFormat'>
<retval declared_type64='NSOpenGLPixelFormat * _Nullable' type64='@'/>
</method>
<method selector='prepareOpenGL'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reshape'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpenGLContext:'>
<arg declared_type64='NSOpenGLContext * _Nullable' index='0' name='openGLContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPixelFormat:'>
<arg declared_type64='NSOpenGLPixelFormat * _Nullable' index='0' name='pixelFormat' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsBestResolutionOpenGLSurface:'>
<arg declared_type64='BOOL' index='0' name='wantsBestResolutionOpenGLSurface' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsExtendedDynamicRangeOpenGLSurface:'>
<arg declared_type64='BOOL' index='0' name='wantsExtendedDynamicRangeOpenGLSurface' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='update'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wantsBestResolutionOpenGLSurface'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsExtendedDynamicRangeOpenGLSurface'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSOpenPanel'>
<method selector='URLs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
<arg declared_type64='NSString * _Nullable' index='0' name='path' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='name' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='2' name='fileTypes' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='4' name='didEndSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='5' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type64='NSString * _Nullable' index='0' name='path' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='name' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='2' name='fileTypes' type64='@'/>
<arg declared_type64='NSWindow * _Nullable' index='3' name='docWindow' type64='@'/>
<arg declared_type64='id _Nullable' index='4' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='5' name='didEndSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='6' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canChooseDirectories'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canChooseFiles'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canDownloadUbiquitousContents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canResolveUbiquitousConflicts'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='filenames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='isAccessoryViewDisclosed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='openPanel'>
<retval declared_type64='NSOpenPanel * _Nonnull' type64='@'/>
</method>
<method selector='resolvesAliases'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='runModalForDirectory:file:types:'>
<arg declared_type64='NSString * _Nullable' index='0' name='path' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='name' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='2' name='fileTypes' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='runModalForTypes:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='fileTypes' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAccessoryViewDisclosed:'>
<arg declared_type64='BOOL' index='0' name='accessoryViewDisclosed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsMultipleSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanChooseDirectories:'>
<arg declared_type64='BOOL' index='0' name='canChooseDirectories' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanChooseFiles:'>
<arg declared_type64='BOOL' index='0' name='canChooseFiles' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanDownloadUbiquitousContents:'>
<arg declared_type64='BOOL' index='0' name='canDownloadUbiquitousContents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanResolveUbiquitousConflicts:'>
<arg declared_type64='BOOL' index='0' name='canResolveUbiquitousConflicts' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResolvesAliases:'>
<arg declared_type64='BOOL' index='0' name='resolvesAliases' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSOutlineView'>
<method selector='autoresizesOutlineColumn'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autosaveExpandedItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='child:ofItem:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='childIndexForItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='collapseItem:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collapseItem:collapseChildren:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<arg declared_type64='BOOL' index='1' name='collapseChildren' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='expandItem:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='expandItem:expandChildren:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<arg declared_type64='BOOL' index='1' name='expandChildren' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='frameOfOutlineCellAtRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indentationMarkerFollowsCell'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='indentationPerLevel'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='insertItemsAtIndexes:inParent:withAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='parent' type64='@'/>
<arg declared_type64='NSTableViewAnimationOptions' index='2' name='animationOptions' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isExpandable:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isItemExpanded:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemAtRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='levelForItem:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='levelForRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='moveItemAtIndex:inParent:toIndex:inParent:'>
<arg declared_type64='NSInteger' index='0' name='fromIndex' type64='q'/>
<arg declared_type64='id _Nullable' index='1' name='oldParent' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='toIndex' type64='q'/>
<arg declared_type64='id _Nullable' index='3' name='newParent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfChildrenOfItem:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='outlineTableColumn'>
<retval declared_type64='NSTableColumn * _Nullable' type64='@'/>
</method>
<method selector='parentForItem:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='reloadItem:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadItem:reloadChildren:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<arg declared_type64='BOOL' index='1' name='reloadChildren' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemsAtIndexes:inParent:withAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='parent' type64='@'/>
<arg declared_type64='NSTableViewAnimationOptions' index='2' name='animationOptions' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rowForItem:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAutoresizesOutlineColumn:'>
<arg declared_type64='BOOL' index='0' name='autoresizesOutlineColumn' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosaveExpandedItems:'>
<arg declared_type64='BOOL' index='0' name='autosaveExpandedItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDropItem:dropChildIndex:'>
<arg declared_type64='id _Nullable' index='0' name='item' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndentationMarkerFollowsCell:'>
<arg declared_type64='BOOL' index='0' name='indentationMarkerFollowsCell' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndentationPerLevel:'>
<arg declared_type64='CGFloat' index='0' name='indentationPerLevel' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutlineTableColumn:'>
<arg declared_type64='NSTableColumn * _Nullable' index='0' name='outlineTableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStronglyReferencesItems:'>
<arg declared_type64='BOOL' index='0' name='stronglyReferencesItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type64='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldCollapseAutoExpandedItemsForDeposited:'>
<arg declared_type64='BOOL' index='0' name='deposited' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stronglyReferencesItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type64='NSUserInterfaceLayoutDirection' type64='q'/>
</method>
</class>
<class name='NSPDFImageRep'>
<method selector='PDFRepresentation'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='bounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='currentPage'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='imageRepWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='pdfData' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='pdfData' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='pageCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setCurrentPage:'>
<arg declared_type64='NSInteger' index='0' name='currentPage' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPDFInfo'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='attributes'>
<retval declared_type64='NSMutableDictionary * _Nonnull' type64='@'/>
</method>
<method selector='isFileExtensionHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='orientation'>
<retval declared_type64='NSPaperOrientation' type64='q'/>
</method>
<method selector='paperSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='setFileExtensionHidden:'>
<arg declared_type64='BOOL' index='0' name='fileExtensionHidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type64='NSPaperOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPaperSize:'>
<arg declared_type64='NSSize' index='0' name='paperSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTagNames:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='tagNames' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='URL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tagNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSPDFPanel'>
<method selector='accessoryController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='beginSheetWithPDFInfo:modalForWindow:completionHandler:'>
<arg declared_type64='NSPDFInfo * _Nonnull' index='0' name='pdfInfo' type64='@'/>
<arg declared_type64='NSWindow * _Nullable' index='1' name='docWindow' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSInteger)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='defaultFileName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='options'>
<retval declared_type64='NSPDFPanelOptions' type64='q'/>
</method>
<method class_method='true' selector='panel'>
<retval declared_type64='NSPDFPanel * _Nonnull' type64='@'/>
</method>
<method selector='setAccessoryController:'>
<arg declared_type64='NSViewController * _Nullable' index='0' name='accessoryController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultFileName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='defaultFileName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOptions:'>
<arg declared_type64='NSPDFPanelOptions' index='0' name='options' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPICTImageRep'>
<method selector='PICTRepresentation'>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='boundingBox'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='imageRepWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='pictData' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='pictData' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='NSPageController'>
<method selector='arrangedObjects'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='completeTransition'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='navigateBack:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='navigateForward:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='navigateForwardToObject:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectedViewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='setArrangedObjects:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='arrangedObjects' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedIndex:'>
<arg declared_type64='NSInteger' index='0' name='selectedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransitionStyle:'>
<arg declared_type64='NSPageControllerTransitionStyle' index='0' name='transitionStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='takeSelectedIndexFrom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transitionStyle'>
<retval declared_type64='NSPageControllerTransitionStyle' type64='q'/>
</method>
</class>
<class name='NSPageLayout'>
<method selector='accessoryControllers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Null_unspecified' type64='@'/>
</method>
<method selector='addAccessoryController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='accessoryController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='printInfo' type64='@'/>
<arg declared_type64='NSWindow * _Nonnull' index='1' name='docWindow' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didEndSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='pageLayout'>
<retval declared_type64='NSPageLayout * _Nonnull' type64='@'/>
</method>
<method selector='printInfo'>
<retval declared_type64='NSPrintInfo * _Nullable' type64='@'/>
</method>
<method selector='readPrintInfo'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAccessoryController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='accessoryController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runModal'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='runModalWithPrintInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='printInfo' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Null_unspecified' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='writePrintInfo'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPanGestureRecognizer'>
<method selector='buttonMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setButtonMask:'>
<arg declared_type64='NSUInteger' index='0' name='buttonMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type64='NSInteger' index='0' name='numberOfTouchesRequired' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTranslation:inView:'>
<arg declared_type64='NSPoint' index='0' name='translation' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='translationInView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='velocityInView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='NSPanel'>
<method selector='becomesKeyOnlyIfNeeded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFloatingPanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setBecomesKeyOnlyIfNeeded:'>
<arg declared_type64='BOOL' index='0' name='becomesKeyOnlyIfNeeded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloatingPanel:'>
<arg declared_type64='BOOL' index='0' name='floatingPanel' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWorksWhenModal:'>
<arg declared_type64='BOOL' index='0' name='worksWhenModal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='worksWhenModal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSParagraphStyle'>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method class_method='true' selector='defaultParagraphStyle'>
<retval declared_type64='NSParagraphStyle * _Nonnull' type64='@'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='defaultWritingDirectionForLanguage:'>
<arg declared_type64='NSString * _Nullable' index='0' name='languageName' type64='@'/>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='headIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='headerLevel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='Q'/>
</method>
<method selector='lineBreakStrategy'>
<retval declared_type64='NSLineBreakStrategy' type64='Q'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tabStops'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='textBlocks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textLists'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tighteningFactorForTruncation'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='NSPasteboard'>
<method selector='addTypes:owner:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='newTypes' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='newOwner' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='availableTypeFromArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='types' type64='@'/>
<retval declared_type64='NSPasteboardType _Nullable' type64='@'/>
</method>
<method selector='canReadItemWithDataConformingToTypes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='types' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canReadObjectForClasses:options:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='classArray' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='changeCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='clearContents'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='dataForType:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='dataType' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='declareTypes:owner:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='newTypes' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='newOwner' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='generalPasteboard'>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method selector='indexOfPasteboardItem:'>
<arg declared_type64='NSPasteboardItem * _Nonnull' index='0' name='pasteboardItem' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='name'>
<retval declared_type64='NSPasteboardName _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pasteboardByFilteringData:ofType:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pasteboardByFilteringFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filename' type64='@'/>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pasteboardByFilteringTypesInPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method selector='pasteboardItems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='pasteboardWithName:'>
<arg declared_type64='NSPasteboardName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pasteboardWithUniqueName'>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method selector='prepareForNewContentsWithOptions:'>
<arg declared_type64='NSPasteboardContentsOptions' index='0' name='options' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='propertyListForType:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='dataType' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='readFileContentsType:toFile:'>
<arg declared_type64='NSPasteboardType _Nullable' index='0' name='type' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='readFileWrapper'>
<retval declared_type64='NSFileWrapper * _Nullable' type64='@'/>
</method>
<method selector='readObjectsForClasses:options:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='classArray' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='releaseGlobally'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setData:forType:'>
<arg declared_type64='NSData * _Nullable' index='0' name='data' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='dataType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPropertyList:forType:'>
<arg declared_type64='id _Nonnull' index='0' name='plist' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='dataType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setString:forType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='dataType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stringForType:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='dataType' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='types'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='typesFilterableTo:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='writeFileContents:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeFileWrapper:'>
<arg declared_type64='NSFileWrapper * _Nonnull' index='0' name='wrapper' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeObjects:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='objects' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSPasteboardItem'>
<method selector='availableTypeFromArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='types' type64='@'/>
<retval declared_type64='NSPasteboardType _Nullable' type64='@'/>
</method>
<method selector='dataForType:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='propertyListForType:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setData:forType:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setDataProvider:forTypes:'>
<arg declared_type64='id _Nonnull' index='0' name='dataProvider' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='types' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPropertyList:forType:'>
<arg declared_type64='id _Nonnull' index='0' name='propertyList' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setString:forType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stringForType:'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='types'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSPathCell'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='allowedTypes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='clickedPathComponentCell'>
<retval declared_type64='NSPathComponentCell * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='doubleAction'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='mouseEntered:withFrame:inView:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='NSRect' index='1' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseExited:withFrame:inView:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='NSRect' index='1' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pathComponentCellAtPoint:withFrame:inView:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='view' type64='@'/>
<retval declared_type64='NSPathComponentCell * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='pathComponentCellClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='pathComponentCells'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='pathStyle'>
<retval declared_type64='NSPathStyle' type64='q'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='rectOfPathComponentCell:withFrame:inView:'>
<arg declared_type64='NSPathComponentCell * _Nonnull' index='0' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='1' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='view' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAllowedTypes:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='allowedTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='doubleAction' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObjectValue:'>
<arg declared_type64='id _Nullable' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPathComponentCells:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='pathComponentCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPathStyle:'>
<arg declared_type64='NSPathStyle' index='0' name='pathStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type64='NSString * _Nullable' index='0' name='placeholderString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='URL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPathComponentCell'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='URL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPathControl'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='allowedTypes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='clickedPathComponentCell'>
<retval declared_type64='NSPathComponentCell * _Nullable' type64='@'/>
</method>
<method selector='clickedPathItem'>
<retval declared_type64='NSPathControlItem * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='doubleAction'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='menu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='pathComponentCells'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='pathItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='pathStyle'>
<retval declared_type64='NSPathStyle' type64='q'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAllowedTypes:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='allowedTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='doubleAction' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg declared_type64='NSDragOperation' index='0' name='mask' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='isLocal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPathComponentCells:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='cells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPathItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='pathItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPathStyle:'>
<arg declared_type64='NSPathStyle' index='0' name='pathStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type64='NSString * _Nullable' index='0' name='placeholderString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='URL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPathControlItem'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSPersistentDocument'>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:error:'>
<arg declared_type64='NSURL * _Null_unspecified' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Null_unspecified' index='1' name='fileType' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='fileType' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='configuration' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='storeOptions' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type64='NSManagedObjectContext * _Nullable' type64='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type64='NSManagedObjectModel * _Nullable' type64='@'/>
</method>
<method selector='persistentStoreTypeForFileType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileType' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='readFromURL:ofType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='absoluteURL' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='revertToContentsOfURL:ofType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='inAbsoluteURL' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='inTypeName' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type64='NSManagedObjectContext * _Nullable' index='0' name='managedObjectContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='absoluteURL' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<arg declared_type64='NSSaveOperationType' index='2' name='saveOperation' type64='Q'/>
<arg declared_type64='NSURL * _Nullable' index='3' name='absoluteOriginalContentsURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSPickerTouchBarItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='collapsedRepresentationImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='collapsedRepresentationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='controlRepresentation'>
<retval declared_type64='NSPickerTouchBarItemControlRepresentation' type64='q'/>
</method>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='imageAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabledAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='labelAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='numberOfOptions'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='pickerTouchBarItemWithIdentifier:images:selectionMode:target:action:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='images' type64='@'/>
<arg declared_type64='NSPickerTouchBarItemSelectionMode' index='2' name='selectionMode' type64='q'/>
<arg declared_type64='id _Nullable' index='3' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='4' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='pickerTouchBarItemWithIdentifier:labels:selectionMode:target:action:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='labels' type64='@'/>
<arg declared_type64='NSPickerTouchBarItemSelectionMode' index='2' name='selectionMode' type64='q'/>
<arg declared_type64='id _Nullable' index='3' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='4' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='selectedIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectionColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='selectionMode'>
<retval declared_type64='NSPickerTouchBarItemSelectionMode' type64='q'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollapsedRepresentationImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='collapsedRepresentationImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollapsedRepresentationLabel:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='collapsedRepresentationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlRepresentation:'>
<arg declared_type64='NSPickerTouchBarItemControlRepresentation' index='0' name='controlRepresentation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:atIndex:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:atIndex:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:atIndex:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='label' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfOptions:'>
<arg declared_type64='NSInteger' index='0' name='numberOfOptions' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedIndex:'>
<arg declared_type64='NSInteger' index='0' name='selectedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='selectionColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionMode:'>
<arg declared_type64='NSPickerTouchBarItemSelectionMode' index='0' name='selectionMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='NSPopUpButton'>
<method selector='addItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addItemsWithTitles:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='itemTitles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='autoenablesItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='indexOfItem:'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='obj' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='actionSelector' type64=':'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initWithFrame:pullsDown:'>
<arg declared_type64='NSRect' index='0' name='buttonFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertItemWithTitle:atIndex:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='itemArray'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='itemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='itemTitleAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='itemTitles'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='itemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='lastItem'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='menu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='numberOfItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='preferredEdge'>
<retval declared_type64='NSRectEdge' type64='Q'/>
</method>
<method selector='pullsDown'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeAllItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItem:'>
<arg declared_type64='NSMenuItem * _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedItem'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='selectedTag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAutoenablesItems:'>
<arg declared_type64='BOOL' index='0' name='autoenablesItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredEdge:'>
<arg declared_type64='NSRectEdge' index='0' name='preferredEdge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPullsDown:'>
<arg declared_type64='BOOL' index='0' name='pullsDown' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='synchronizeTitleAndSelectedItem'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='titleOfSelectedItem'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='NSPopUpButtonCell'>
<method selector='addItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addItemsWithTitles:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='itemTitles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='altersStateOfSelectedItem'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='arrowPosition'>
<retval declared_type64='NSPopUpArrowPosition' type64='Q'/>
</method>
<method selector='attachPopUpWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='autoenablesItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dismissPopUp'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indexOfItem:'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='obj' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='actionSelector' type64=':'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initTextCell:pullsDown:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringValue' type64='@'/>
<arg declared_type64='BOOL' index='1' name='pullDown' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertItemWithTitle:atIndex:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='itemArray'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='itemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='itemTitleAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='itemTitles'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='itemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='lastItem'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='menu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='numberOfItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='performClickWithFrame:inView:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredEdge'>
<retval declared_type64='NSRectEdge' type64='Q'/>
</method>
<method selector='pullsDown'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeAllItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItem:'>
<arg declared_type64='NSMenuItem * _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectItemWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectItemWithTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedItem'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='setAltersStateOfSelectedItem:'>
<arg declared_type64='BOOL' index='0' name='altersStateOfSelectedItem' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setArrowPosition:'>
<arg declared_type64='NSPopUpArrowPosition' index='0' name='arrowPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoenablesItems:'>
<arg declared_type64='BOOL' index='0' name='autoenablesItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredEdge:'>
<arg declared_type64='NSRectEdge' index='0' name='preferredEdge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPullsDown:'>
<arg declared_type64='BOOL' index='0' name='pullsDown' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesItemFromMenu:'>
<arg declared_type64='BOOL' index='0' name='usesItemFromMenu' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='synchronizeTitleAndSelectedItem'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='titleOfSelectedItem'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='usesItemFromMenu'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSPopover'>
<method selector='animates'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='appearance'>
<retval declared_type64='NSPopoverAppearance' type64='q'/>
</method>
<method selector='behavior'>
<retval declared_type64='NSPopoverBehavior' type64='q'/>
</method>
<method selector='close'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentViewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isDetached'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isShown'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='performClose:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='positioningRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAnimates:'>
<arg declared_type64='BOOL' index='0' name='animates' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppearance:'>
<arg declared_type64='NSPopoverAppearance' index='0' name='appearance' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBehavior:'>
<arg declared_type64='NSPopoverBehavior' index='0' name='behavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentSize:'>
<arg declared_type64='NSSize' index='0' name='contentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type64='NSViewController * _Nullable' index='0' name='contentViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPositioningRect:'>
<arg declared_type64='NSRect' index='0' name='positioningRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showRelativeToRect:ofView:preferredEdge:'>
<arg declared_type64='NSRect' index='0' name='positioningRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='positioningView' type64='@'/>
<arg declared_type64='NSRectEdge' index='2' name='preferredEdge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPopoverTouchBarItem'>
<method selector='collapsedRepresentation'>
<retval declared_type64='__kindof NSView * _Nonnull' type64='@'/>
</method>
<method selector='collapsedRepresentationImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='collapsedRepresentationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='dismissPopover:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeStandardActivatePopoverGestureRecognizer'>
<retval declared_type64='NSGestureRecognizer * _Nonnull' type64='@'/>
</method>
<method selector='popoverTouchBar'>
<retval declared_type64='NSTouchBar * _Nonnull' type64='@'/>
</method>
<method selector='pressAndHoldTouchBar'>
<retval declared_type64='NSTouchBar * _Nullable' type64='@'/>
</method>
<method selector='setCollapsedRepresentation:'>
<arg declared_type64='__kindof NSView * _Nonnull' index='0' name='collapsedRepresentation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollapsedRepresentationImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='collapsedRepresentationImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollapsedRepresentationLabel:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='collapsedRepresentationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPopoverTouchBar:'>
<arg declared_type64='NSTouchBar * _Nonnull' index='0' name='popoverTouchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPressAndHoldTouchBar:'>
<arg declared_type64='NSTouchBar * _Nullable' index='0' name='pressAndHoldTouchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsCloseButton:'>
<arg declared_type64='BOOL' index='0' name='showsCloseButton' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showPopover:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsCloseButton'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSPredicateEditor'>
<method selector='rowTemplates'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setRowTemplates:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='rowTemplates' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPredicateEditorRowTemplate'>
<method selector='compoundTypes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='displayableSubpredicatesOfPredicate:'>
<arg declared_type64='NSPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='initWithCompoundTypes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='compoundTypes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='leftExpressions' type64='@'/>
<arg declared_type64='NSAttributeType' index='1' name='attributeType' type64='Q'/>
<arg declared_type64='NSComparisonPredicateModifier' index='2' name='modifier' type64='Q'/>
<arg declared_type64='NSArray * _Nonnull' index='3' name='operators' type64='@'/>
<arg declared_type64='NSUInteger' index='4' name='options' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithLeftExpressions:rightExpressions:modifier:operators:options:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='leftExpressions' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='rightExpressions' type64='@'/>
<arg declared_type64='NSComparisonPredicateModifier' index='2' name='modifier' type64='Q'/>
<arg declared_type64='NSArray * _Nonnull' index='3' name='operators' type64='@'/>
<arg declared_type64='NSUInteger' index='4' name='options' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='leftExpressions'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='matchForPredicate:'>
<arg declared_type64='NSPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='modifier'>
<retval declared_type64='NSComparisonPredicateModifier' type64='Q'/>
</method>
<method selector='operators'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='options'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='predicateWithSubpredicates:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='subpredicates' type64='@'/>
<retval declared_type64='NSPredicate * _Nonnull' type64='@'/>
</method>
<method selector='rightExpressionAttributeType'>
<retval declared_type64='NSAttributeType' type64='Q'/>
</method>
<method selector='rightExpressions'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setPredicate:'>
<arg declared_type64='NSPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='templateViews'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='templatesWithAttributeKeyPaths:inEntityDescription:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='keyPaths' type64='@'/>
<arg declared_type64='NSEntityDescription * _Nonnull' index='1' name='entityDescription' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSPressGestureRecognizer'>
<method selector='allowableMovement'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='buttonMask'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='minimumPressDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAllowableMovement:'>
<arg declared_type64='CGFloat' index='0' name='allowableMovement' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setButtonMask:'>
<arg declared_type64='NSUInteger' index='0' name='buttonMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumPressDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='minimumPressDuration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type64='NSInteger' index='0' name='numberOfTouchesRequired' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPressureConfiguration'>
<method selector='initWithPressureBehavior:'>
<arg declared_type64='NSPressureBehavior' index='0' name='pressureBehavior' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='pressureBehavior'>
<retval declared_type64='NSPressureBehavior' type64='q'/>
</method>
<method selector='set'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPrintInfo'>
<method selector='PMPageFormat'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='PMPrintSession'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='PMPrintSettings'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='bottomMargin'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='defaultPrinter'>
<retval declared_type64='NSPrinter * _Nullable' type64='@'/>
</method>
<method selector='dictionary'>
<retval declared_type64='NSMutableDictionary * _Nonnull' type64='@'/>
</method>
<method selector='horizontalPagination'>
<retval declared_type64='NSPrintingPaginationMode' type64='Q'/>
</method>
<method selector='imageablePageBounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isHorizontallyCentered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectionOnly'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVerticallyCentered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='jobDisposition'>
<retval declared_type64='NSPrintJobDispositionValue _Nonnull' type64='@'/>
</method>
<method selector='leftMargin'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='localizedPaperName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='orientation'>
<retval declared_type64='NSPaperOrientation' type64='q'/>
</method>
<method selector='paperName'>
<retval declared_type64='NSPrinterPaperName _Nullable' type64='@'/>
</method>
<method selector='paperSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='printSettings'>
<retval declared_type64='NSMutableDictionary * _Nonnull' type64='@'/>
</method>
<method selector='printer'>
<retval declared_type64='NSPrinter * _Nonnull' type64='@'/>
</method>
<method selector='rightMargin'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scalingFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setBottomMargin:'>
<arg declared_type64='CGFloat' index='0' name='bottomMargin' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setDefaultPrinter:'>
<arg declared_type64='NSPrinter * _Nullable' index='0' name='printer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontalPagination:'>
<arg declared_type64='NSPrintingPaginationMode' index='0' name='horizontalPagination' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontallyCentered:'>
<arg declared_type64='BOOL' index='0' name='horizontallyCentered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setJobDisposition:'>
<arg declared_type64='NSPrintJobDispositionValue _Nonnull' index='0' name='jobDisposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeftMargin:'>
<arg declared_type64='CGFloat' index='0' name='leftMargin' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type64='NSPaperOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPaperName:'>
<arg declared_type64='NSPrinterPaperName _Nullable' index='0' name='paperName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPaperSize:'>
<arg declared_type64='NSSize' index='0' name='paperSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrinter:'>
<arg declared_type64='NSPrinter * _Nonnull' index='0' name='printer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRightMargin:'>
<arg declared_type64='CGFloat' index='0' name='rightMargin' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScalingFactor:'>
<arg declared_type64='CGFloat' index='0' name='scalingFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionOnly:'>
<arg declared_type64='BOOL' index='0' name='selectionOnly' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setSharedPrintInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='sharedPrintInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTopMargin:'>
<arg declared_type64='CGFloat' index='0' name='topMargin' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUpPrintOperationDefaultValues'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalPagination:'>
<arg declared_type64='NSPrintingPaginationMode' index='0' name='verticalPagination' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticallyCentered:'>
<arg declared_type64='BOOL' index='0' name='verticallyCentered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedPrintInfo'>
<retval declared_type64='NSPrintInfo * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sizeForPaperName:'>
<arg declared_type64='NSPrinterPaperName _Nullable' index='0' name='name' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='takeSettingsFromPDFInfo:'>
<arg declared_type64='NSPDFInfo * _Nonnull' index='0' name='inPDFInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='topMargin'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='updateFromPMPageFormat'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateFromPMPrintSettings'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='verticalPagination'>
<retval declared_type64='NSPrintingPaginationMode' type64='Q'/>
</method>
</class>
<class name='NSPrintOperation'>
<method class_method='true' selector='EPSOperationWithView:insideRect:toData:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSMutableData * _Nullable' index='2' name='data' type64='@'/>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='EPSOperationWithView:insideRect:toData:printInfo:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSMutableData * _Nonnull' index='2' name='data' type64='@'/>
<arg declared_type64='NSPrintInfo * _Nonnull' index='3' name='printInfo' type64='@'/>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='EPSOperationWithView:insideRect:toPath:printInfo:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='path' type64='@'/>
<arg declared_type64='NSPrintInfo * _Nonnull' index='3' name='printInfo' type64='@'/>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='PDFOperationWithView:insideRect:toData:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSMutableData * _Nonnull' index='2' name='data' type64='@'/>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='PDFOperationWithView:insideRect:toData:printInfo:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSMutableData * _Nonnull' index='2' name='data' type64='@'/>
<arg declared_type64='NSPrintInfo * _Nonnull' index='3' name='printInfo' type64='@'/>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='PDFOperationWithView:insideRect:toPath:printInfo:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='path' type64='@'/>
<arg declared_type64='NSPrintInfo * _Nonnull' index='3' name='printInfo' type64='@'/>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method selector='PDFPanel'>
<retval declared_type64='NSPDFPanel * _Nonnull' type64='@'/>
</method>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='canSpawnSeparateThread'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cleanUpOperation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='context'>
<retval declared_type64='NSGraphicsContext * _Nullable' type64='@'/>
</method>
<method selector='createContext'>
<retval declared_type64='NSGraphicsContext * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='currentOperation'>
<retval declared_type64='NSPrintOperation * _Nullable' type64='@'/>
</method>
<method selector='currentPage'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='deliverResult'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='destroyContext'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isCopyingOperation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='jobStyleHint'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='jobTitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='pageOrder'>
<retval declared_type64='NSPrintingPageOrder' type64='q'/>
</method>
<method selector='pageRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='preferredRenderingQuality'>
<retval declared_type64='NSPrintRenderingQuality' type64='q'/>
</method>
<method selector='printInfo'>
<retval declared_type64='NSPrintInfo * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='printOperationWithView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='printOperationWithView:printInfo:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSPrintInfo * _Nonnull' index='1' name='printInfo' type64='@'/>
<retval declared_type64='NSPrintOperation * _Nonnull' type64='@'/>
</method>
<method selector='printPanel'>
<retval declared_type64='NSPrintPanel * _Nonnull' type64='@'/>
</method>
<method selector='runOperation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='runOperationModalForWindow:delegate:didRunSelector:contextInfo:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='docWindow' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='2' name='didRunSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='3' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanSpawnSeparateThread:'>
<arg declared_type64='BOOL' index='0' name='canSpawnSeparateThread' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setCurrentOperation:'>
<arg declared_type64='NSPrintOperation * _Nullable' index='0' name='currentOperation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setJobStyleHint:'>
<arg declared_type64='NSString * _Nullable' index='0' name='hint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setJobTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='jobTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPDFPanel:'>
<arg declared_type64='NSPDFPanel * _Nonnull' index='0' name='PDFPanel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPageOrder:'>
<arg declared_type64='NSPrintingPageOrder' index='0' name='pageOrder' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrintInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='printInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrintPanel:'>
<arg declared_type64='NSPrintPanel * _Nonnull' index='0' name='printPanel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowPanels:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsPrintPanel:'>
<arg declared_type64='BOOL' index='0' name='showsPrintPanel' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsProgressPanel:'>
<arg declared_type64='BOOL' index='0' name='showsProgressPanel' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showPanels'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsPrintPanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsProgressPanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
</class>
<class name='NSPrintPanel'>
<method selector='accessoryControllers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='addAccessoryController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='accessoryController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='printInfo' type64='@'/>
<arg declared_type64='NSWindow * _Nonnull' index='1' name='docWindow' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didEndSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='defaultButtonTitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='finalWritePrintInfo'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='helpAnchor'>
<retval declared_type64='NSHelpAnchorName _Nullable' type64='@'/>
</method>
<method selector='jobStyleHint'>
<retval declared_type64='NSPrintPanelJobStyleHint _Nullable' type64='@'/>
</method>
<method selector='options'>
<retval declared_type64='NSPrintPanelOptions' type64='Q'/>
</method>
<method selector='printInfo'>
<retval declared_type64='NSPrintInfo * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='printPanel'>
<retval declared_type64='NSPrintPanel * _Nonnull' type64='@'/>
</method>
<method selector='removeAccessoryController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='accessoryController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runModal'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='runModalWithPrintInfo:'>
<arg declared_type64='NSPrintInfo * _Nonnull' index='0' name='printInfo' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultButtonTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='defaultButtonTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHelpAnchor:'>
<arg declared_type64='NSHelpAnchorName _Nullable' index='0' name='helpAnchor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setJobStyleHint:'>
<arg declared_type64='NSPrintPanelJobStyleHint _Nullable' index='0' name='jobStyleHint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOptions:'>
<arg declared_type64='NSPrintPanelOptions' index='0' name='options' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateFromPrintInfo'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSPrinter'>
<method selector='acceptsBinary'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='booleanForKey:inTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='table' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='deviceDescription'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='domain'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='floatForKey:inTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='table' type64='@'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='host'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='imageRectForPaper:'>
<arg declared_type64='NSString * _Nullable' index='0' name='paperName' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='intForKey:inTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='table' type64='@'/>
<retval declared_type64='int' type64='i'/>
</method>
<method selector='isColor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFontAvailable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='faceName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isKey:inTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='table' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOutputStackInReverseOrder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageLevel'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='note'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='pageSizeForPaper:'>
<arg declared_type64='NSPrinterPaperName _Nonnull' index='0' name='paperName' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='printerNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='printerTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='printerWithName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSPrinter * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='printerWithName:domain:includeUnavailable:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='domain' type64='@'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='NSPrinter * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='printerWithType:'>
<arg declared_type64='NSPrinterTypeName _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='NSPrinter * _Nullable' type64='@'/>
</method>
<method selector='rectForKey:inTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='table' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sizeForKey:inTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='table' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='statusForTable:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='tableName' type64='@'/>
<retval declared_type64='NSPrinterTableStatus' type64='Q'/>
</method>
<method selector='stringForKey:inTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='table' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='stringListForKey:inTable:'>
<arg declared_type64='NSString * _Nullable' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='table' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='type'>
<retval declared_type64='NSPrinterTypeName _Nonnull' type64='@'/>
</method>
</class>
<class name='NSProgressIndicator'>
<method selector='animate:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='controlSize'>
<retval declared_type64='NSControlSize' type64='Q'/>
</method>
<method selector='controlTint'>
<retval declared_type64='NSControlTint' type64='Q'/>
</method>
<method selector='doubleValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='incrementBy:'>
<arg declared_type64='double' index='0' name='delta' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isBezeled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDisplayedWhenStopped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isIndeterminate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maxValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='minValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='setAnimationDelay:'>
<arg declared_type64='NSTimeInterval' index='0' name='delay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type64='BOOL' index='0' name='bezeled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type64='NSControlSize' index='0' name='controlSize' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlTint:'>
<arg declared_type64='NSControlTint' index='0' name='controlTint' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDisplayedWhenStopped:'>
<arg declared_type64='BOOL' index='0' name='displayedWhenStopped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleValue:'>
<arg declared_type64='double' index='0' name='doubleValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndeterminate:'>
<arg declared_type64='BOOL' index='0' name='indeterminate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type64='double' index='0' name='maxValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type64='double' index='0' name='minValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type64='NSProgressIndicatorStyle' index='0' name='style' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesThreadedAnimation:'>
<arg declared_type64='BOOL' index='0' name='usesThreadedAnimation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startAnimation:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopAnimation:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='style'>
<retval declared_type64='NSProgressIndicatorStyle' type64='Q'/>
</method>
<method selector='usesThreadedAnimation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSResponder'>
<method selector='acceptsFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='becomeFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='beginGestureWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeModeWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cursorUpdate:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:backgroundQueue:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<arg declared_type64='NSOperationQueue * _Nonnull' index='1' name='queue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endGestureWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flagsChanged:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flushBufferedKeyEvents'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='helpRequested:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='eventPtr' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='interfaceStyle'>
<retval declared_type64='NSInterfaceStyle' type64='Q'/>
</method>
<method selector='interpretKeyEvents:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='eventArray' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateRestorableState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='keyDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='keyUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='magnifyWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTouchBar'>
<retval declared_type64='NSTouchBar * _Nullable' type64='@'/>
</method>
<method selector='menu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='mouseDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseDragged:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseEntered:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseExited:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseMoved:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='newWindowForTab:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='nextResponder'>
<retval declared_type64='NSResponder * _Nullable' type64='@'/>
</method>
<method selector='noResponderFor:'>
<arg declared_type64='SEL _Nonnull' index='0' name='eventSelector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='otherMouseDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='otherMouseDragged:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='otherMouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='performMnemonic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='performTextFinderAction:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<arg declared_type64='NSWindow * _Nonnull' index='1' name='window' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='didPresentSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='4' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pressureChangeWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='quickLookWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resignFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='restorableStateKeyPaths'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='restoreStateWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rightMouseDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rightMouseDragged:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rightMouseUp:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rotateWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollWheel:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInterfaceStyle:'>
<arg declared_type64='NSInterfaceStyle' index='0' name='interfaceStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNextResponder:'>
<arg declared_type64='NSResponder * _Nullable' index='0' name='nextResponder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTouchBar:'>
<arg declared_type64='NSTouchBar * _Nullable' index='0' name='touchBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserActivity:'>
<arg declared_type64='NSUserActivity * _Nullable' index='0' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldBeTreatedAsInkEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showContextHelp:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='smartMagnifyWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supplementalTargetForAction:sender:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='swipeWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabletPoint:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabletProximity:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchBar'>
<retval declared_type64='NSTouchBar * _Nullable' type64='@'/>
</method>
<method selector='touchesBeganWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesCancelledWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesEndedWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='touchesMovedWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tryToPerform:with:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='undoManager'>
<retval declared_type64='NSUndoManager * _Nullable' type64='@'/>
</method>
<method selector='updateUserActivityState:'>
<arg declared_type64='NSUserActivity * _Nonnull' index='0' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userActivity'>
<retval declared_type64='NSUserActivity * _Nullable' type64='@'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg declared_type64='NSPasteboardType _Nullable' index='0' name='sendType' type64='@'/>
<arg declared_type64='NSPasteboardType _Nullable' index='1' name='returnType' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='validateProposedFirstResponder:forEvent:'>
<arg declared_type64='NSResponder * _Nonnull' index='0' name='responder' type64='@'/>
<arg declared_type64='NSEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsForwardedScrollEventsForAxis:'>
<arg declared_type64='NSEventGestureAxis' index='0' name='axis' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsScrollEventsForSwipeTrackingOnAxis:'>
<arg declared_type64='NSEventGestureAxis' index='0' name='axis' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='willPresentError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='NSError * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSRotationGestureRecognizer'>
<method selector='rotation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rotationInDegrees'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setRotation:'>
<arg declared_type64='CGFloat' index='0' name='rotation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRotationInDegrees:'>
<arg declared_type64='CGFloat' index='0' name='rotationInDegrees' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSRuleEditor'>
<method selector='addRow:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canRemoveAllRows'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='criteriaForRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='criteriaKeyPath'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='displayValuesForRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='displayValuesKeyPath'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='formattingDictionary'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='formattingStringsFilename'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='insertRowAtIndex:withType:asSubrowOfRow:animate:'>
<arg declared_type64='NSInteger' index='0' name='rowIndex' type64='q'/>
<arg declared_type64='NSRuleEditorRowType' index='1' name='rowType' type64='Q'/>
<arg declared_type64='NSInteger' index='2' name='parentRow' type64='q'/>
<arg declared_type64='BOOL' index='3' name='shouldAnimate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nestingMode'>
<retval declared_type64='NSRuleEditorNestingMode' type64='Q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='parentRowForRow:'>
<arg declared_type64='NSInteger' index='0' name='rowIndex' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='predicate'>
<retval declared_type64='NSPredicate * _Nullable' type64='@'/>
</method>
<method selector='predicateForRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='NSPredicate * _Nullable' type64='@'/>
</method>
<method selector='reloadCriteria'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadPredicate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeRowAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='rowIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeRowsAtIndexes:includeSubrows:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type64='@'/>
<arg declared_type64='BOOL' index='1' name='includeSubrows' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rowClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='rowForDisplayValue:'>
<arg declared_type64='id _Nonnull' index='0' name='displayValue' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rowHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rowTypeForRow:'>
<arg declared_type64='NSInteger' index='0' name='rowIndex' type64='q'/>
<retval declared_type64='NSRuleEditorRowType' type64='Q'/>
</method>
<method selector='rowTypeKeyPath'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='selectRowIndexes:byExtendingSelection:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='BOOL' index='1' name='extend' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedRowIndexes'>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='setCanRemoveAllRows:'>
<arg declared_type64='BOOL' index='0' name='canRemoveAllRows' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCriteria:andDisplayValues:forRowAtIndex:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='criteria' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='values' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='rowIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCriteriaKeyPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='criteriaKeyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDisplayValuesKeyPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='displayValuesKeyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFormattingDictionary:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='formattingDictionary' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFormattingStringsFilename:'>
<arg declared_type64='NSString * _Nullable' index='0' name='formattingStringsFilename' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNestingMode:'>
<arg declared_type64='NSRuleEditorNestingMode' index='0' name='nestingMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowClass:'>
<arg declared_type64='Class _Nonnull' index='0' name='rowClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowHeight:'>
<arg declared_type64='CGFloat' index='0' name='rowHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowTypeKeyPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='rowTypeKeyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubrowsKeyPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='subrowsKeyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='subrowIndexesForRow:'>
<arg declared_type64='NSInteger' index='0' name='rowIndex' type64='q'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='subrowsKeyPath'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSRulerMarker'>
<method selector='drawRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='imageOrigin'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='imageRectInRuler'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRulerView:markerLocation:image:imageOrigin:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='location' type64='d'/>
<arg declared_type64='NSImage * _Nonnull' index='2' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='3' name='imageOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isDragging'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMovable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRemovable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='markerLocation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='representedObject'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='ruler'>
<retval declared_type64='NSRulerView * _Nullable' type64='@'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageOrigin:'>
<arg declared_type64='NSPoint' index='0' name='imageOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkerLocation:'>
<arg declared_type64='CGFloat' index='0' name='markerLocation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovable:'>
<arg declared_type64='BOOL' index='0' name='movable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRemovable:'>
<arg declared_type64='BOOL' index='0' name='removable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='representedObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='thicknessRequiredInRuler'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='trackMouse:adding:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='mouseDownEvent' type64='@'/>
<arg declared_type64='BOOL' index='1' name='isAdding' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSRulerView'>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='addMarker:'>
<arg declared_type64='NSRulerMarker * _Nonnull' index='0' name='marker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='baselineLocation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='clientView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='drawHashMarksAndLabelsInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawMarkersInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithScrollView:orientation:'>
<arg declared_type64='NSScrollView * _Nullable' index='0' name='scrollView' type64='@'/>
<arg declared_type64='NSRulerOrientation' index='1' name='orientation' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='invalidateHashMarks'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isFlipped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='markers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='measurementUnits'>
<retval declared_type64='NSRulerViewUnitName _Nonnull' type64='@'/>
</method>
<method selector='moveRulerlineFromLocation:toLocation:'>
<arg declared_type64='CGFloat' index='0' name='oldLocation' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='newLocation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orientation'>
<retval declared_type64='NSRulerOrientation' type64='Q'/>
</method>
<method selector='originOffset'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:'>
<arg declared_type64='NSRulerViewUnitName _Nonnull' index='0' name='unitName' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='abbreviation' type64='@'/>
<arg declared_type64='CGFloat' index='2' name='conversionFactor' type64='d'/>
<arg declared_type64='NSArray * _Nonnull' index='3' name='stepUpCycle' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='4' name='stepDownCycle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeMarker:'>
<arg declared_type64='NSRulerMarker * _Nonnull' index='0' name='marker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requiredThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='reservedThicknessForAccessoryView'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='reservedThicknessForMarkers'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='ruleThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='scrollView'>
<retval declared_type64='NSScrollView * _Nullable' type64='@'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClientView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='clientView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkers:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='markers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMeasurementUnits:'>
<arg declared_type64='NSRulerViewUnitName _Nonnull' index='0' name='measurementUnits' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type64='NSRulerOrientation' index='0' name='orientation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOriginOffset:'>
<arg declared_type64='CGFloat' index='0' name='originOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReservedThicknessForAccessoryView:'>
<arg declared_type64='CGFloat' index='0' name='reservedThicknessForAccessoryView' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReservedThicknessForMarkers:'>
<arg declared_type64='CGFloat' index='0' name='reservedThicknessForMarkers' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRuleThickness:'>
<arg declared_type64='CGFloat' index='0' name='ruleThickness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollView:'>
<arg declared_type64='NSScrollView * _Nullable' index='0' name='scrollView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackMarker:withMouseEvent:'>
<arg declared_type64='NSRulerMarker * _Nonnull' index='0' name='marker' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSRunningApplication'>
<method selector='activateWithOptions:'>
<arg declared_type64='NSApplicationActivationOptions' index='0' name='options' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='activationPolicy'>
<retval declared_type64='NSApplicationActivationPolicy' type64='q'/>
</method>
<method selector='bundleIdentifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='bundleURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='currentApplication'>
<retval declared_type64='__kindof NSRunningApplication * _Nonnull' type64='@'/>
</method>
<method selector='executableArchitecture'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='executableURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='forceTerminate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hide'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='icon'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFinishedLaunching'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTerminated'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='launchDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='localizedName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='ownsMenuBar'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='processIdentifier'>
<retval declared_type64='pid_t' type64='i'/>
</method>
<method class_method='true' selector='runningApplicationWithProcessIdentifier:'>
<arg declared_type64='pid_t' index='0' name='pid' type64='i'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='runningApplicationsWithBundleIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='bundleIdentifier' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='terminate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='terminateAutomaticallyTerminableApplications'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unhide'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSSavePanel'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='allowedContentTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='allowedFileTypes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='allowsOtherFileTypes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='name' type64='@'/>
<arg declared_type64='NSWindow * _Nullable' index='2' name='docWindow' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='4' name='didEndSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='5' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSheetModalForWindow:completionHandler:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSModalResponse)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='NSModalResponse' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(NSModalResponse)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='NSModalResponse' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canCreateDirectories'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canSelectHiddenExtension'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='directory'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='directoryURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='filename'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='isExpanded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExtensionHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='message'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='nameFieldLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='nameFieldStringValue'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='ok:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prompt'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='requiredFileType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='runModal'>
<retval declared_type64='NSModalResponse' type64='q'/>
</method>
<method selector='runModalForDirectory:file:'>
<arg declared_type64='NSString * _Nullable' index='0' name='path' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='name' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='savePanel'>
<retval declared_type64='NSSavePanel * _Nonnull' type64='@'/>
</method>
<method selector='selectText:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedContentTypes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='allowedContentTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedFileTypes:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='allowedFileTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsOtherFileTypes:'>
<arg declared_type64='BOOL' index='0' name='allowsOtherFileTypes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanCreateDirectories:'>
<arg declared_type64='BOOL' index='0' name='canCreateDirectories' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanSelectHiddenExtension:'>
<arg declared_type64='BOOL' index='0' name='canSelectHiddenExtension' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDirectory:'>
<arg declared_type64='NSString * _Nullable' index='0' name='path' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDirectoryURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='directoryURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtensionHidden:'>
<arg declared_type64='BOOL' index='0' name='extensionHidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMessage:'>
<arg declared_type64='NSString * _Nullable' index='0' name='message' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNameFieldLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='nameFieldLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNameFieldStringValue:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='nameFieldStringValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrompt:'>
<arg declared_type64='NSString * _Nullable' index='0' name='prompt' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRequiredFileType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsHiddenFiles:'>
<arg declared_type64='BOOL' index='0' name='showsHiddenFiles' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsTagField:'>
<arg declared_type64='BOOL' index='0' name='showsTagField' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTagNames:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='tagNames' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTreatsFilePackagesAsDirectories:'>
<arg declared_type64='BOOL' index='0' name='treatsFilePackagesAsDirectories' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsHiddenFiles'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsTagField'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tagNames'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='treatsFilePackagesAsDirectories'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='validateVisibleColumns'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSScreen'>
<method selector='backingAlignedRect:options:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSAlignmentOptions' index='1' name='options' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='backingScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='canRepresentDisplayGamut:'>
<arg declared_type64='NSDisplayGamut' index='0' name='displayGamut' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='colorSpace'>
<retval declared_type64='NSColorSpace * _Nullable' type64='@'/>
</method>
<method selector='convertRectFromBacking:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToBacking:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='deepestScreen'>
<retval declared_type64='NSScreen * _Nullable' type64='@'/>
</method>
<method selector='depth'>
<retval declared_type64='NSWindowDepth' type64='i'/>
</method>
<method selector='deviceDescription'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='localizedName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='mainScreen'>
<retval declared_type64='NSScreen * _Nullable' type64='@'/>
</method>
<method selector='maximumExtendedDynamicRangeColorComponentValue'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumPotentialExtendedDynamicRangeColorComponentValue'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumReferenceExtendedDynamicRangeColorComponentValue'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='screens'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='screensHaveSeparateSpaces'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='supportedWindowDepths'>
<retval const='true' declared_type64='NSWindowDepth * _Nonnull' type64='^i'/>
</method>
<method selector='userSpaceScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='visibleFrame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSScrollView'>
<method selector='addFloatingSubview:forAxis:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSEventGestureAxis' index='1' name='axis' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsMagnification'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autohidesScrollers'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='automaticallyAdjustsContentInsets'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='borderType'>
<retval declared_type64='NSBorderType' type64='Q'/>
</method>
<method selector='contentInsets'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='contentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:'>
<arg declared_type64='NSSize' index='0' name='fSize' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='1' name='hFlag' type64='B'/>
<arg declared_type64='BOOL' index='2' name='vFlag' type64='B'/>
<arg declared_type64='NSBorderType' index='3' name='type' type64='Q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='contentSizeForFrameSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:'>
<arg declared_type64='NSSize' index='0' name='fSize' type64='{CGSize=dd}'/>
<arg declared_type64='Class _Nullable' index='1' name='horizontalScrollerClass' type64='#'/>
<arg declared_type64='Class _Nullable' index='2' name='verticalScrollerClass' type64='#'/>
<arg declared_type64='NSBorderType' index='3' name='type' type64='Q'/>
<arg declared_type64='NSControlSize' index='4' name='controlSize' type64='Q'/>
<arg declared_type64='NSScrollerStyle' index='5' name='scrollerStyle' type64='q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentView'>
<retval declared_type64='NSClipView * _Nonnull' type64='@'/>
</method>
<method selector='documentCursor'>
<retval declared_type64='NSCursor * _Nullable' type64='@'/>
</method>
<method selector='documentView'>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
<method selector='documentVisibleRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='findBarPosition'>
<retval declared_type64='NSScrollViewFindBarPosition' type64='q'/>
</method>
<method selector='flashScrollers'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:'>
<arg declared_type64='NSSize' index='0' name='cSize' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='1' name='hFlag' type64='B'/>
<arg declared_type64='BOOL' index='2' name='vFlag' type64='B'/>
<arg declared_type64='NSBorderType' index='3' name='type' type64='Q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='frameSizeForContentSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:'>
<arg declared_type64='NSSize' index='0' name='cSize' type64='{CGSize=dd}'/>
<arg declared_type64='Class _Nullable' index='1' name='horizontalScrollerClass' type64='#'/>
<arg declared_type64='Class _Nullable' index='2' name='verticalScrollerClass' type64='#'/>
<arg declared_type64='NSBorderType' index='3' name='type' type64='Q'/>
<arg declared_type64='NSControlSize' index='4' name='controlSize' type64='Q'/>
<arg declared_type64='NSScrollerStyle' index='5' name='scrollerStyle' type64='q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='hasHorizontalRuler'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasHorizontalScroller'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasVerticalRuler'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasVerticalScroller'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='horizontalLineScroll'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='horizontalPageScroll'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='horizontalRulerView'>
<retval declared_type64='NSRulerView * _Nullable' type64='@'/>
</method>
<method selector='horizontalScrollElasticity'>
<retval declared_type64='NSScrollElasticity' type64='q'/>
</method>
<method selector='horizontalScroller'>
<retval declared_type64='NSScroller * _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='lineScroll'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='magnification'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='magnifyToFitRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='maxMagnification'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minMagnification'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='pageScroll'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='reflectScrolledClipView:'>
<arg declared_type64='NSClipView * _Nonnull' index='0' name='cView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='rulerViewClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='rulersVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scrollWheel:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollerInsets'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='scrollerKnobStyle'>
<retval declared_type64='NSScrollerKnobStyle' type64='q'/>
</method>
<method selector='scrollerStyle'>
<retval declared_type64='NSScrollerStyle' type64='q'/>
</method>
<method selector='scrollsDynamically'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAllowsMagnification:'>
<arg declared_type64='BOOL' index='0' name='allowsMagnification' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutohidesScrollers:'>
<arg declared_type64='BOOL' index='0' name='autohidesScrollers' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyAdjustsContentInsets:'>
<arg declared_type64='BOOL' index='0' name='automaticallyAdjustsContentInsets' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBorderType:'>
<arg declared_type64='NSBorderType' index='0' name='borderType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentInsets:'>
<arg declared_type64='NSEdgeInsets' index='0' name='contentInsets' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type64='NSClipView * _Nonnull' index='0' name='contentView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDocumentCursor:'>
<arg declared_type64='NSCursor * _Nullable' index='0' name='documentCursor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDocumentView:'>
<arg declared_type64='__kindof NSView * _Nullable' index='0' name='documentView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFindBarPosition:'>
<arg declared_type64='NSScrollViewFindBarPosition' index='0' name='findBarPosition' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasHorizontalRuler:'>
<arg declared_type64='BOOL' index='0' name='hasHorizontalRuler' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg declared_type64='BOOL' index='0' name='hasHorizontalScroller' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasVerticalRuler:'>
<arg declared_type64='BOOL' index='0' name='hasVerticalRuler' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg declared_type64='BOOL' index='0' name='hasVerticalScroller' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontalLineScroll:'>
<arg declared_type64='CGFloat' index='0' name='horizontalLineScroll' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontalPageScroll:'>
<arg declared_type64='CGFloat' index='0' name='horizontalPageScroll' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontalRulerView:'>
<arg declared_type64='NSRulerView * _Nullable' index='0' name='horizontalRulerView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontalScrollElasticity:'>
<arg declared_type64='NSScrollElasticity' index='0' name='horizontalScrollElasticity' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontalScroller:'>
<arg declared_type64='NSScroller * _Nullable' index='0' name='horizontalScroller' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineScroll:'>
<arg declared_type64='CGFloat' index='0' name='lineScroll' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagnification:'>
<arg declared_type64='CGFloat' index='0' name='magnification' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagnification:centeredAtPoint:'>
<arg declared_type64='CGFloat' index='0' name='magnification' type64='d'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxMagnification:'>
<arg declared_type64='CGFloat' index='0' name='maxMagnification' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinMagnification:'>
<arg declared_type64='CGFloat' index='0' name='minMagnification' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPageScroll:'>
<arg declared_type64='CGFloat' index='0' name='pageScroll' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setRulerViewClass:'>
<arg declared_type64='Class _Nullable' index='0' name='rulerViewClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRulersVisible:'>
<arg declared_type64='BOOL' index='0' name='rulersVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollerInsets:'>
<arg declared_type64='NSEdgeInsets' index='0' name='scrollerInsets' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollerKnobStyle:'>
<arg declared_type64='NSScrollerKnobStyle' index='0' name='scrollerKnobStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollerStyle:'>
<arg declared_type64='NSScrollerStyle' index='0' name='scrollerStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollsDynamically:'>
<arg declared_type64='BOOL' index='0' name='scrollsDynamically' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesPredominantAxisScrolling:'>
<arg declared_type64='BOOL' index='0' name='usesPredominantAxisScrolling' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalLineScroll:'>
<arg declared_type64='CGFloat' index='0' name='verticalLineScroll' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalPageScroll:'>
<arg declared_type64='CGFloat' index='0' name='verticalPageScroll' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalRulerView:'>
<arg declared_type64='NSRulerView * _Nullable' index='0' name='verticalRulerView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalScrollElasticity:'>
<arg declared_type64='NSScrollElasticity' index='0' name='verticalScrollElasticity' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalScroller:'>
<arg declared_type64='NSScroller * _Nullable' index='0' name='verticalScroller' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tile'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesPredominantAxisScrolling'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='verticalLineScroll'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='verticalPageScroll'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='verticalRulerView'>
<retval declared_type64='NSRulerView * _Nullable' type64='@'/>
</method>
<method selector='verticalScrollElasticity'>
<retval declared_type64='NSScrollElasticity' type64='q'/>
</method>
<method selector='verticalScroller'>
<retval declared_type64='NSScroller * _Nullable' type64='@'/>
</method>
</class>
<class name='NSScroller'>
<method selector='arrowsPosition'>
<retval declared_type64='NSScrollArrowPosition' type64='Q'/>
</method>
<method selector='checkSpaceForParts'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='controlSize'>
<retval declared_type64='NSControlSize' type64='Q'/>
</method>
<method selector='controlTint'>
<retval declared_type64='NSControlTint' type64='Q'/>
</method>
<method selector='drawArrow:highlight:'>
<arg declared_type64='NSScrollerArrow' index='0' name='whichArrow' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawKnob'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawKnobSlotInRect:highlight:'>
<arg declared_type64='NSRect' index='0' name='slotRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawParts'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='highlight:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hitPart'>
<retval declared_type64='NSScrollerPart' type64='Q'/>
</method>
<method class_method='true' selector='isCompatibleWithOverlayScrollers'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='knobProportion'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='knobStyle'>
<retval declared_type64='NSScrollerKnobStyle' type64='q'/>
</method>
<method class_method='true' selector='preferredScrollerStyle'>
<retval declared_type64='NSScrollerStyle' type64='q'/>
</method>
<method selector='rectForPart:'>
<arg declared_type64='NSScrollerPart' index='0' name='partCode' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='scrollerStyle'>
<retval declared_type64='NSScrollerStyle' type64='q'/>
</method>
<method class_method='true' selector='scrollerWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='scrollerWidthForControlSize:'>
<arg declared_type64='NSControlSize' index='0' name='controlSize' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='scrollerWidthForControlSize:scrollerStyle:'>
<arg declared_type64='NSControlSize' index='0' name='controlSize' type64='Q'/>
<arg declared_type64='NSScrollerStyle' index='1' name='scrollerStyle' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setArrowsPosition:'>
<arg declared_type64='NSScrollArrowPosition' index='0' name='arrowsPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type64='NSControlSize' index='0' name='controlSize' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlTint:'>
<arg declared_type64='NSControlTint' index='0' name='controlTint' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloatValue:knobProportion:'>
<arg declared_type64='float' index='0' name='value' type64='f'/>
<arg declared_type64='CGFloat' index='1' name='proportion' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKnobProportion:'>
<arg declared_type64='CGFloat' index='0' name='proportion' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKnobStyle:'>
<arg declared_type64='NSScrollerKnobStyle' index='0' name='knobStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrollerStyle:'>
<arg declared_type64='NSScrollerStyle' index='0' name='scrollerStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='testPart:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSScrollerPart' type64='Q'/>
</method>
<method selector='trackKnob:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackScrollButtons:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usableParts'>
<retval declared_type64='NSUsableScrollerParts' type64='Q'/>
</method>
</class>
<class name='NSScrubber'>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='backgroundView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='floatsSelectionViews'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='highlightedIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertItemsAtIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isContinuous'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemAlignment'>
<retval declared_type64='NSScrubberAlignment' type64='q'/>
</method>
<method selector='itemViewForItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='__kindof NSScrubberItemView * _Nullable' type64='@'/>
</method>
<method selector='makeItemWithIdentifier:owner:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='itemIdentifier' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='owner' type64='@'/>
<retval declared_type64='__kindof NSScrubberItemView * _Nullable' type64='@'/>
</method>
<method selector='mode'>
<retval declared_type64='NSScrubberMode' type64='q'/>
</method>
<method selector='moveItemAtIndex:toIndex:'>
<arg declared_type64='NSInteger' index='0' name='oldIndex' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='newIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='performSequentialBatchUpdates:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='updateBlock' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerClass:forItemIdentifier:'>
<arg declared_type64='Class _Nullable' index='0' name='itemViewClass' type64='#'/>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='itemIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerNib:forItemIdentifier:'>
<arg declared_type64='NSNib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='itemIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadItemsAtIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItemsAtIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollItemAtIndex:toAlignment:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<arg declared_type64='NSScrubberAlignment' index='1' name='alignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubberLayout'>
<retval declared_type64='__kindof NSScrubberLayout * _Nonnull' type64='@'/>
</method>
<method selector='selectedIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectionBackgroundStyle'>
<retval declared_type64='NSScrubberSelectionStyle * _Nullable' type64='@'/>
</method>
<method selector='selectionOverlayStyle'>
<retval declared_type64='NSScrubberSelectionStyle * _Nullable' type64='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='backgroundView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type64='BOOL' index='0' name='continuous' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloatsSelectionViews:'>
<arg declared_type64='BOOL' index='0' name='floatsSelectionViews' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemAlignment:'>
<arg declared_type64='NSScrubberAlignment' index='0' name='itemAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMode:'>
<arg declared_type64='NSScrubberMode' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScrubberLayout:'>
<arg declared_type64='__kindof NSScrubberLayout * _Nonnull' index='0' name='scrubberLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedIndex:'>
<arg declared_type64='NSInteger' index='0' name='selectedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionBackgroundStyle:'>
<arg declared_type64='NSScrubberSelectionStyle * _Nullable' index='0' name='selectionBackgroundStyle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionOverlayStyle:'>
<arg declared_type64='NSScrubberSelectionStyle * _Nullable' index='0' name='selectionOverlayStyle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsAdditionalContentIndicators:'>
<arg declared_type64='BOOL' index='0' name='showsAdditionalContentIndicators' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsArrowButtons:'>
<arg declared_type64='BOOL' index='0' name='showsArrowButtons' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsAdditionalContentIndicators'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsArrowButtons'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSScrubberArrangedView'>
<method selector='applyLayoutAttributes:'>
<arg declared_type64='__kindof NSScrubberLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isHighlighted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type64='BOOL' index='0' name='highlighted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSScrubberFlowLayout'>
<method selector='invalidateLayoutForItemsAtIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='invalidItemIndexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='itemSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='itemSpacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setItemSize:'>
<arg declared_type64='NSSize' index='0' name='itemSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemSpacing:'>
<arg declared_type64='CGFloat' index='0' name='itemSpacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSScrubberImageItemView'>
<method selector='image'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='imageAlignment'>
<retval declared_type64='NSImageAlignment' type64='Q'/>
</method>
<method selector='imageView'>
<retval declared_type64='NSImageView * _Nonnull' type64='@'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageAlignment:'>
<arg declared_type64='NSImageAlignment' index='0' name='imageAlignment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSScrubberLayout'>
<method selector='automaticallyMirrorsInRightToLeftLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='invalidateLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='layoutAttributesClass'>
<retval declared_type64='Class _Nonnull' type64='#'/>
</method>
<method selector='layoutAttributesForItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='__kindof NSScrubberLayoutAttributes * _Nullable' type64='@'/>
</method>
<method selector='layoutAttributesForItemsInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='prepareLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubber'>
<retval declared_type64='NSScrubber * _Nullable' type64='@'/>
</method>
<method selector='scrubberContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='shouldInvalidateLayoutForChangeFromVisibleRect:toVisibleRect:'>
<arg declared_type64='NSRect' index='0' name='fromVisibleRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='1' name='toVisibleRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldInvalidateLayoutForHighlightChange'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldInvalidateLayoutForSelectionChange'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='visibleRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSScrubberLayoutAttributes'>
<method selector='alpha'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='itemIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='layoutAttributesForItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type64='CGFloat' index='0' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItemIndex:'>
<arg declared_type64='NSInteger' index='0' name='itemIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSScrubberProportionalLayout'>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithNumberOfVisibleItems:'>
<arg declared_type64='NSInteger' index='0' name='numberOfVisibleItems' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='numberOfVisibleItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setNumberOfVisibleItems:'>
<arg declared_type64='NSInteger' index='0' name='numberOfVisibleItems' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSScrubberSelectionStyle'>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='makeSelectionView'>
<retval declared_type64='__kindof NSScrubberSelectionView * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='outlineOverlayStyle'>
<retval declared_type64='NSScrubberSelectionStyle * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='roundedBackgroundStyle'>
<retval declared_type64='NSScrubberSelectionStyle * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSScrubberTextItemView'>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textField'>
<retval declared_type64='NSTextField * _Nonnull' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSSearchField'>
<method selector='cancelButtonBounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='centersPlaceholder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='maximumRecents'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='recentSearches'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='recentsAutosaveName'>
<retval declared_type64='NSSearchFieldRecentsAutosaveName _Nullable' type64='@'/>
</method>
<method selector='rectForCancelButtonWhenCentered:'>
<arg declared_type64='BOOL' index='0' name='isCentered' type64='B'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForSearchButtonWhenCentered:'>
<arg declared_type64='BOOL' index='0' name='isCentered' type64='B'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForSearchTextWhenCentered:'>
<arg declared_type64='BOOL' index='0' name='isCentered' type64='B'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='searchButtonBounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='searchMenuTemplate'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='searchTextBounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sendsSearchStringImmediately'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sendsWholeSearchString'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setCentersPlaceholder:'>
<arg declared_type64='BOOL' index='0' name='centersPlaceholder' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumRecents:'>
<arg declared_type64='NSInteger' index='0' name='maximumRecents' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRecentSearches:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='recentSearches' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRecentsAutosaveName:'>
<arg declared_type64='NSSearchFieldRecentsAutosaveName _Nullable' index='0' name='recentsAutosaveName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchMenuTemplate:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='searchMenuTemplate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSendsSearchStringImmediately:'>
<arg declared_type64='BOOL' index='0' name='sendsSearchStringImmediately' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSendsWholeSearchString:'>
<arg declared_type64='BOOL' index='0' name='sendsWholeSearchString' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSearchFieldCell'>
<method selector='cancelButtonCell'>
<retval declared_type64='NSButtonCell * _Nullable' type64='@'/>
</method>
<method selector='cancelButtonRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initTextCell:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumRecents'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='recentSearches'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='recentsAutosaveName'>
<retval declared_type64='NSSearchFieldRecentsAutosaveName _Nullable' type64='@'/>
</method>
<method selector='resetCancelButtonCell'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resetSearchButtonCell'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchButtonCell'>
<retval declared_type64='NSButtonCell * _Nullable' type64='@'/>
</method>
<method selector='searchButtonRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='searchMenuTemplate'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='searchTextRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sendsSearchStringImmediately'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sendsWholeSearchString'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setCancelButtonCell:'>
<arg declared_type64='NSButtonCell * _Nullable' index='0' name='cancelButtonCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumRecents:'>
<arg declared_type64='NSInteger' index='0' name='maximumRecents' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRecentSearches:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='recentSearches' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRecentsAutosaveName:'>
<arg declared_type64='NSSearchFieldRecentsAutosaveName _Nullable' index='0' name='recentsAutosaveName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchButtonCell:'>
<arg declared_type64='NSButtonCell * _Nullable' index='0' name='searchButtonCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchMenuTemplate:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='searchMenuTemplate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSendsSearchStringImmediately:'>
<arg declared_type64='BOOL' index='0' name='sendsSearchStringImmediately' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSendsWholeSearchString:'>
<arg declared_type64='BOOL' index='0' name='sendsWholeSearchString' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSearchToolbarItem'>
<method selector='beginSearchInteraction'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endSearchInteraction'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredWidthForSearchField'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='resignsFirstResponderWithCancel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='searchField'>
<retval declared_type64='NSSearchField * _Nonnull' type64='@'/>
</method>
<method selector='setPreferredWidthForSearchField:'>
<arg declared_type64='CGFloat' index='0' name='preferredWidthForSearchField' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResignsFirstResponderWithCancel:'>
<arg declared_type64='BOOL' index='0' name='resignsFirstResponderWithCancel' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSearchField:'>
<arg declared_type64='NSSearchField * _Nonnull' index='0' name='searchField' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSecureTextFieldCell'>
<method selector='echosBullets'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setEchosBullets:'>
<arg declared_type64='BOOL' index='0' name='echosBullets' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSegmentedCell'>
<method selector='drawSegment:inFrame:withView:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<arg declared_type64='NSRect' index='1' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='imageForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='imageScalingForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSImageScaling' type64='Q'/>
</method>
<method selector='interiorBackgroundStyleForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSBackgroundStyle' type64='q'/>
</method>
<method selector='isEnabledForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectedForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='labelForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='makeNextSegmentKey'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makePreviousSegmentKey'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='segmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='segmentStyle'>
<retval declared_type64='NSSegmentStyle' type64='q'/>
</method>
<method selector='selectSegmentWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectedSegment'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setEnabled:forSegment:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:forSegment:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageScaling:forSegment:'>
<arg declared_type64='NSImageScaling' index='0' name='scaling' type64='Q'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:forSegment:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='label' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:forSegment:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='segmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSegmentStyle:'>
<arg declared_type64='NSSegmentStyle' index='0' name='segmentStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:forSegment:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedSegment:'>
<arg declared_type64='NSInteger' index='0' name='selectedSegment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:forSegment:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:forSegment:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTip' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackingMode:'>
<arg declared_type64='NSSegmentSwitchTracking' index='0' name='trackingMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:forSegment:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tagForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='toolTipForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='trackingMode'>
<retval declared_type64='NSSegmentSwitchTracking' type64='Q'/>
</method>
<method selector='widthForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSSegmentedControl'>
<method selector='activeCompressionOptions'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method selector='alignmentForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='compressWithPrioritizedCompressionOptions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedOptions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doubleValueForSelectedSegment'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='imageForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='imageScalingForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSImageScaling' type64='Q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='isEnabledForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectedForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSpringLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='labelForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='menuForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='minimumSizeWithPrioritizedCompressionOptions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedOptions' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='segmentCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='segmentDistribution'>
<retval declared_type64='NSSegmentDistribution' type64='q'/>
</method>
<method selector='segmentStyle'>
<retval declared_type64='NSSegmentStyle' type64='q'/>
</method>
<method class_method='true' selector='segmentedControlWithImages:trackingMode:target:action:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='images' type64='@'/>
<arg declared_type64='NSSegmentSwitchTracking' index='1' name='trackingMode' type64='Q'/>
<arg declared_type64='id _Nullable' index='2' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='segmentedControlWithLabels:trackingMode:target:action:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='labels' type64='@'/>
<arg declared_type64='NSSegmentSwitchTracking' index='1' name='trackingMode' type64='Q'/>
<arg declared_type64='id _Nullable' index='2' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='3' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='selectSegmentWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectedSegment'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectedSegmentBezelColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='setAlignment:forSegment:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:forSegment:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:forSegment:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageScaling:forSegment:'>
<arg declared_type64='NSImageScaling' index='0' name='scaling' type64='Q'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:forSegment:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='label' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:forSegment:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSegmentCount:'>
<arg declared_type64='NSInteger' index='0' name='segmentCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSegmentDistribution:'>
<arg declared_type64='NSSegmentDistribution' index='0' name='segmentDistribution' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSegmentStyle:'>
<arg declared_type64='NSSegmentStyle' index='0' name='segmentStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:forSegment:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedSegment:'>
<arg declared_type64='NSInteger' index='0' name='selectedSegment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedSegmentBezelColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='selectedSegmentBezelColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsMenuIndicator:forSegment:'>
<arg declared_type64='BOOL' index='0' name='showsMenuIndicator' type64='B'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpringLoaded:'>
<arg declared_type64='BOOL' index='0' name='springLoaded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:forSegment:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:forSegment:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTip' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackingMode:'>
<arg declared_type64='NSSegmentSwitchTracking' index='0' name='trackingMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:forSegment:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<arg declared_type64='NSInteger' index='1' name='segment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsMenuIndicatorForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tagForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='toolTipForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='trackingMode'>
<retval declared_type64='NSSegmentSwitchTracking' type64='Q'/>
</method>
<method selector='widthForSegment:'>
<arg declared_type64='NSInteger' index='0' name='segment' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSSet'>
<method selector='enumerateIndexPathsWithOptions:usingBlock:'>
<arg declared_type64='NSEnumerationOptions' index='0' name='opts' type64='Q'/>
<arg declared_type64='void (^ _Nonnull)(NSIndexPath * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='NSIndexPath * _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setWithCollectionViewIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='setWithCollectionViewIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSShadow'>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='set'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowBlurRadius:'>
<arg declared_type64='CGFloat' index='0' name='shadowBlurRadius' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='shadowColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type64='NSSize' index='0' name='shadowOffset' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shadowBlurRadius'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='shadowColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='shadowOffset'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSSharingService'>
<method selector='accountName'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='alternateImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='attachmentFileURLs'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='canPerformWithItems:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='items' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='initWithTitle:image:alternateImage:handler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='NSImage * _Nonnull' index='1' name='image' type64='@'/>
<arg declared_type64='NSImage * _Nullable' index='2' name='alternateImage' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='menuItemTitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='messageBody'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='performWithItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='permanentLink'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='recipients'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenuItemTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='menuItemTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRecipients:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='recipients' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubject:'>
<arg declared_type64='NSString * _Nullable' index='0' name='subject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharingServiceNamed:'>
<arg declared_type64='NSSharingServiceName _Nonnull' index='0' name='serviceName' type64='@'/>
<retval declared_type64='NSSharingService * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='sharingServicesForItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='subject'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSSharingServicePicker'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showRelativeToRect:ofView:preferredEdge:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSRectEdge' index='2' name='preferredEdge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSharingServicePickerToolbarItem'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSharingServicePickerTouchBarItem'>
<method selector='buttonImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='buttonTitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setButtonImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='buttonImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setButtonTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='buttonTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSlider'>
<method selector='acceptsFirstMouse:'>
<arg declared_type64='NSEvent * _Nullable' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsTickMarkValuesOnly'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='altIncrementValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='closestTickMarkValueToValue:'>
<arg declared_type64='double' index='0' name='value' type64='d'/>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Null_unspecified' type64='@'/>
</method>
<method selector='indexOfTickMarkAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='isVertical'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='knobThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maxValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='minValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='numberOfTickMarks'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAllowsTickMarkValuesOnly:'>
<arg declared_type64='BOOL' index='0' name='allowsTickMarkValuesOnly' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAltIncrementValue:'>
<arg declared_type64='double' index='0' name='altIncrementValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='backgroundImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKnobThickness:'>
<arg declared_type64='CGFloat' index='0' name='thickness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type64='double' index='0' name='maxValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type64='double' index='0' name='minValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg declared_type64='NSInteger' index='0' name='numberOfTickMarks' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSliderType:'>
<arg declared_type64='NSSliderType' index='0' name='sliderType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTickMarkPosition:'>
<arg declared_type64='NSTickMarkPosition' index='0' name='tickMarkPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleCell:'>
<arg declared_type64='NSCell * _Null_unspecified' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleColor:'>
<arg declared_type64='NSColor * _Null_unspecified' index='0' name='newColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type64='NSFont * _Null_unspecified' index='0' name='fontObj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackFillColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='trackFillColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVertical:'>
<arg declared_type64='BOOL' index='0' name='vertical' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sliderType'>
<retval declared_type64='NSSliderType' type64='Q'/>
</method>
<method class_method='true' selector='sliderWithTarget:action:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sliderWithValue:minValue:maxValue:target:action:'>
<arg declared_type64='double' index='0' name='value' type64='d'/>
<arg declared_type64='double' index='1' name='minValue' type64='d'/>
<arg declared_type64='double' index='2' name='maxValue' type64='d'/>
<arg declared_type64='id _Nullable' index='3' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='4' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='tickMarkPosition'>
<retval declared_type64='NSTickMarkPosition' type64='Q'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Null_unspecified' type64='@'/>
</method>
<method selector='titleCell'>
<retval declared_type64='id _Null_unspecified' type64='@'/>
</method>
<method selector='titleColor'>
<retval declared_type64='NSColor * _Null_unspecified' type64='@'/>
</method>
<method selector='titleFont'>
<retval declared_type64='NSFont * _Null_unspecified' type64='@'/>
</method>
<method selector='trackFillColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
</class>
<class name='NSSliderAccessory'>
<method class_method='true' selector='accessoryWithImage:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='NSSliderAccessory * _Nonnull' type64='@'/>
</method>
<method selector='behavior'>
<retval declared_type64='NSSliderAccessoryBehavior * _Nonnull' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setBehavior:'>
<arg declared_type64='NSSliderAccessoryBehavior * _Nonnull' index='0' name='behavior' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSliderAccessoryBehavior'>
<method class_method='true' selector='automaticBehavior'>
<retval declared_type64='NSSliderAccessoryBehavior * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='behaviorWithHandler:'>
<arg declared_type64='void (^ _Nonnull)(NSSliderAccessory * _Nonnull)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='NSSliderAccessory * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='NSSliderAccessoryBehavior * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='behaviorWithTarget:action:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='action' type64=':'/>
<retval declared_type64='NSSliderAccessoryBehavior * _Nonnull' type64='@'/>
</method>
<method selector='handleAction:'>
<arg declared_type64='NSSliderAccessory * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='valueResetBehavior'>
<retval declared_type64='NSSliderAccessoryBehavior * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueStepBehavior'>
<retval declared_type64='NSSliderAccessoryBehavior * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSSliderCell'>
<method selector='allowsTickMarkValuesOnly'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='altIncrementValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='barRectFlipped:'>
<arg declared_type64='BOOL' index='0' name='flipped' type64='B'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='closestTickMarkValueToValue:'>
<arg declared_type64='double' index='0' name='value' type64='d'/>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='drawBarInside:flipped:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='flipped' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawKnob'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawKnob:'>
<arg declared_type64='NSRect' index='0' name='knobRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawTickMarks'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Null_unspecified' type64='@'/>
</method>
<method selector='indexOfTickMarkAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='isVertical'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='knobRectFlipped:'>
<arg declared_type64='BOOL' index='0' name='flipped' type64='B'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='knobThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maxValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='minValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='numberOfTickMarks'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='prefersTrackingUntilMouseUp'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAllowsTickMarkValuesOnly:'>
<arg declared_type64='BOOL' index='0' name='allowsTickMarkValuesOnly' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAltIncrementValue:'>
<arg declared_type64='double' index='0' name='altIncrementValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='backgroundImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKnobThickness:'>
<arg declared_type64='CGFloat' index='0' name='thickness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type64='double' index='0' name='maxValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type64='double' index='0' name='minValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg declared_type64='NSInteger' index='0' name='numberOfTickMarks' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSliderType:'>
<arg declared_type64='NSSliderType' index='0' name='sliderType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTickMarkPosition:'>
<arg declared_type64='NSTickMarkPosition' index='0' name='tickMarkPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleCell:'>
<arg declared_type64='NSCell * _Null_unspecified' index='0' name='cell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleColor:'>
<arg declared_type64='NSColor * _Null_unspecified' index='0' name='newColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type64='NSFont * _Null_unspecified' index='0' name='fontObj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVertical:'>
<arg declared_type64='BOOL' index='0' name='vertical' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sliderType'>
<retval declared_type64='NSSliderType' type64='Q'/>
</method>
<method selector='tickMarkPosition'>
<retval declared_type64='NSTickMarkPosition' type64='Q'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Null_unspecified' type64='@'/>
</method>
<method selector='titleCell'>
<retval declared_type64='id _Null_unspecified' type64='@'/>
</method>
<method selector='titleColor'>
<retval declared_type64='NSColor * _Null_unspecified' type64='@'/>
</method>
<method selector='titleFont'>
<retval declared_type64='NSFont * _Null_unspecified' type64='@'/>
</method>
<method selector='trackRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSSliderTouchBarItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='label'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='maximumSliderWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='maximumValueAccessory'>
<retval declared_type64='NSSliderAccessory * _Nullable' type64='@'/>
</method>
<method selector='minimumSliderWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumValueAccessory'>
<retval declared_type64='NSSliderAccessory * _Nullable' type64='@'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleValue:'>
<arg declared_type64='double' index='0' name='doubleValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumSliderWidth:'>
<arg declared_type64='CGFloat' index='0' name='maximumSliderWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumValueAccessory:'>
<arg declared_type64='NSSliderAccessory * _Nullable' index='0' name='maximumValueAccessory' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumSliderWidth:'>
<arg declared_type64='CGFloat' index='0' name='minimumSliderWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumValueAccessory:'>
<arg declared_type64='NSSliderAccessory * _Nullable' index='0' name='minimumValueAccessory' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSlider:'>
<arg declared_type64='NSSlider * _Nonnull' index='0' name='slider' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValueAccessoryWidth:'>
<arg declared_type64='NSSliderAccessoryWidth' index='0' name='valueAccessoryWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='slider'>
<retval declared_type64='NSSlider * _Nonnull' type64='@'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='valueAccessoryWidth'>
<retval declared_type64='NSSliderAccessoryWidth' type64='d'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSSound'>
<method class_method='true' selector='canInitWithPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='channelMapping'>
<retval declared_type64='NSArray * _Null_unspecified' type64='@'/>
</method>
<method selector='currentTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='initWithContentsOfFile:byReference:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<arg declared_type64='BOOL' index='1' name='byRef' type64='B'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:byReference:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='BOOL' index='1' name='byRef' type64='B'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loops'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='name'>
<retval declared_type64='NSSoundName _Nullable' type64='@'/>
</method>
<method selector='pause'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='play'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='playbackDeviceIdentifier'>
<retval declared_type64='NSSoundPlaybackDeviceIdentifier _Nullable' type64='@'/>
</method>
<method selector='resume'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setChannelMapping:'>
<arg declared_type64='NSArray * _Null_unspecified' index='0' name='channelMapping' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoops:'>
<arg declared_type64='BOOL' index='0' name='loops' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSSoundName _Nullable' index='0' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setPlaybackDeviceIdentifier:'>
<arg declared_type64='NSSoundPlaybackDeviceIdentifier _Nullable' index='0' name='playbackDeviceIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='soundNamed:'>
<arg declared_type64='NSSoundName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='NSSound * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='soundUnfilteredFileTypes'>
<retval declared_type64='NSArray * _Null_unspecified' type64='@'/>
</method>
<method class_method='true' selector='soundUnfilteredPasteboardTypes'>
<retval declared_type64='NSArray * _Null_unspecified' type64='@'/>
</method>
<method class_method='true' selector='soundUnfilteredTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='stop'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='writeToPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSpeechRecognizer'>
<method selector='blocksOtherRecognizers'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commands'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='displayedCommandsTitle'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='listensInForegroundOnly'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setBlocksOtherRecognizers:'>
<arg declared_type64='BOOL' index='0' name='blocksOtherRecognizers' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCommands:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='commands' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDisplayedCommandsTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='displayedCommandsTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setListensInForegroundOnly:'>
<arg declared_type64='BOOL' index='0' name='listensInForegroundOnly' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startListening'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopListening'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSpeechSynthesizer'>
<method selector='addSpeechDictionary:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='speechDictionary' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='attributesForVoice:'>
<arg declared_type64='NSSpeechSynthesizerVoiceName _Nonnull' index='0' name='voice' type64='@'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='availableVoices'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='continueSpeaking'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='defaultVoice'>
<retval declared_type64='NSSpeechSynthesizerVoiceName _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithVoice:'>
<arg declared_type64='NSSpeechSynthesizerVoiceName _Nullable' index='0' name='voice' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='isAnyApplicationSpeaking'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSpeaking'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='objectForProperty:error:'>
<arg declared_type64='NSSpeechPropertyKey _Nonnull' index='0' name='property' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='pauseSpeakingAtBoundary:'>
<arg declared_type64='NSSpeechBoundary' index='0' name='boundary' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='phonemesFromText:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='text' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObject:forProperty:error:'>
<arg declared_type64='id _Nullable' index='0' name='object' type64='@'/>
<arg declared_type64='NSSpeechPropertyKey _Nonnull' index='1' name='property' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFeedbackWindow:'>
<arg declared_type64='BOOL' index='0' name='usesFeedbackWindow' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVoice:'>
<arg declared_type64='NSSpeechSynthesizerVoiceName _Nullable' index='0' name='voice' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startSpeakingString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='startSpeakingString:toURL:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stopSpeaking'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopSpeakingAtBoundary:'>
<arg declared_type64='NSSpeechBoundary' index='0' name='boundary' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesFeedbackWindow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='voice'>
<retval declared_type64='NSSpeechSynthesizerVoiceName _Nullable' type64='@'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='NSSpellChecker'>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='automaticallyIdentifiesLanguages'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='availableLanguages'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringToCheck' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='startingOffset' type64='q'/>
<arg declared_type64='NSString * _Nullable' index='2' name='language' type64='@'/>
<arg declared_type64='BOOL' index='3' name='wrapFlag' type64='B'/>
<arg declared_type64='NSInteger' index='4' name='tag' type64='q'/>
<arg declared_type64='NSArray *&gt; * _Nullable * _Nullable' index='5' name='details' type64='^@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='checkSpellingOfString:startingAt:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringToCheck' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='startingOffset' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringToCheck' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='startingOffset' type64='q'/>
<arg declared_type64='NSString * _Nullable' index='2' name='language' type64='@'/>
<arg declared_type64='BOOL' index='3' name='wrapFlag' type64='B'/>
<arg declared_type64='NSInteger' index='4' name='tag' type64='q'/>
<arg declared_type64='NSInteger * _Nullable' index='5' name='wordCount' type64='^q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringToCheck' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextCheckingTypes' index='2' name='checkingTypes' type64='Q'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<arg declared_type64='NSInteger' index='4' name='tag' type64='q'/>
<arg declared_type64='NSOrthography * _Nullable * _Nullable' index='5' name='orthography' type64='^@'/>
<arg declared_type64='NSInteger * _Nullable' index='6' name='wordCount' type64='^q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='closeSpellDocumentWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='language' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='tag' type64='q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='correctionForWordRange:inString:language:inSpellDocumentWithTag:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='language' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='tag' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='countWordsInString:language:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringToCount' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='language' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='deletesAutospaceBetweenString:andString:language:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='precedingString' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='followingString' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='language' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dismissCorrectionIndicatorForView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='forgetWord:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='word' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='guessesForWord:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='word' type64='@'/>
<retval declared_type64='NSArray * _Null_unspecified' type64='@'/>
</method>
<method selector='guessesForWordRange:inString:language:inSpellDocumentWithTag:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='language' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='tag' type64='q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='hasLearnedWord:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='word' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='ignoreWord:inSpellDocumentWithTag:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='wordToIgnore' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ignoredWordsInSpellDocumentWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='isAutomaticCapitalizationEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isAutomaticDashSubstitutionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isAutomaticPeriodSubstitutionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isAutomaticQuoteSubstitutionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isAutomaticSpellingCorrectionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isAutomaticTextCompletionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='isAutomaticTextReplacementEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='language'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='languageForWordRange:inString:orthography:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSOrthography * _Nullable' index='2' name='orthography' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='learnWord:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='word' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuForResult:string:options:atLocation:inView:'>
<arg declared_type64='NSTextCheckingResult * _Nonnull' index='0' name='result' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='checkedString' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<arg declared_type64='NSPoint' index='3' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nonnull' index='4' name='view' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='preventsAutocorrectionBeforeString:language:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='language' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='recordResponse:toCorrection:forWord:language:inSpellDocumentWithTag:'>
<arg declared_type64='NSCorrectionResponse' index='0' name='response' type64='q'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='correction' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='word' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='3' name='language' type64='@'/>
<arg declared_type64='NSInteger' index='4' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requestCandidatesForSelectedRange:inString:types:options:inSpellDocumentWithTag:completionHandler:'>
<arg declared_type64='NSRange' index='0' name='selectedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='stringToCheck' type64='@'/>
<arg declared_type64='NSTextCheckingTypes' index='2' name='checkingTypes' type64='Q'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<arg declared_type64='NSInteger' index='4' name='tag' type64='q'/>
<arg declared_type64='void (^ _Nullable)(NSInteger, NSArray * _Nonnull)' function_pointer='true' index='5' name='completionHandler' type64='@?'>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='NSArray * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringToCheck' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextCheckingTypes' index='2' name='checkingTypes' type64='Q'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<arg declared_type64='NSInteger' index='4' name='tag' type64='q'/>
<arg declared_type64='void (^ _Nullable)(NSInteger, NSArray * _Nonnull, NSOrthography * _Nonnull, NSInteger)' function_pointer='true' index='5' name='completionHandler' type64='@?'>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='NSArray * _Nonnull' type64='@'/>
<arg declared_type64='NSOrthography * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticallyIdentifiesLanguages:'>
<arg declared_type64='BOOL' index='0' name='automaticallyIdentifiesLanguages' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIgnoredWords:inSpellDocumentWithTag:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='words' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguage:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setSubstitutionsPanelAccessoryViewController:'>
<arg declared_type64='NSViewController * _Nullable' index='0' name='substitutionsPanelAccessoryViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWordFieldStringValue:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedSpellChecker'>
<retval declared_type64='NSSpellChecker * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sharedSpellCheckerExists'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showCorrectionIndicatorOfType:primaryString:alternativeStrings:forStringInRect:view:completionHandler:'>
<arg declared_type64='NSCorrectionIndicatorType' index='0' name='type' type64='q'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='primaryString' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='alternativeStrings' type64='@'/>
<arg declared_type64='NSRect' index='3' name='rectOfTypedString' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='4' name='view' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSString * _Null_unspecified)' function_pointer='true' index='5' name='completionBlock' type64='@?'>
<arg declared_type64='NSString * _Null_unspecified' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spellingPanel'>
<retval declared_type64='NSPanel * _Nonnull' type64='@'/>
</method>
<method selector='substitutionsPanel'>
<retval declared_type64='NSPanel * _Nonnull' type64='@'/>
</method>
<method selector='substitutionsPanelAccessoryViewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='uniqueSpellDocumentTag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='unlearnWord:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='word' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updatePanels'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateSpellingPanelWithGrammarString:detail:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='detail' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateSpellingPanelWithMisspelledWord:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='word' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userPreferredLanguages'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='userQuotesArrayForLanguage:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='language' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='userReplacementsDictionary'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSSplitView'>
<method selector='addArrangedSubview:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='adjustSubviews'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='arrangedSubviews'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='arrangesAllSubviews'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autosaveName'>
<retval declared_type64='NSSplitViewAutosaveName _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='dividerColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='dividerStyle'>
<retval declared_type64='NSSplitViewDividerStyle' type64='q'/>
</method>
<method selector='dividerThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='drawDividerInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='holdingPriorityForSubviewAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='subviewIndex' type64='q'/>
<retval declared_type64='NSLayoutPriority' type64='f'/>
</method>
<method selector='insertArrangedSubview:atIndex:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isPaneSplitter'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSubviewCollapsed:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='subview' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVertical'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maxPossiblePositionOfDividerAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='dividerIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minPossiblePositionOfDividerAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='dividerIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='removeArrangedSubview:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setArrangesAllSubviews:'>
<arg declared_type64='BOOL' index='0' name='arrangesAllSubviews' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosaveName:'>
<arg declared_type64='NSSplitViewAutosaveName _Nullable' index='0' name='autosaveName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDividerStyle:'>
<arg declared_type64='NSSplitViewDividerStyle' index='0' name='dividerStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHoldingPriority:forSubviewAtIndex:'>
<arg declared_type64='NSLayoutPriority' index='0' name='priority' type64='f'/>
<arg declared_type64='NSInteger' index='1' name='subviewIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIsPaneSplitter:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPosition:ofDividerAtIndex:'>
<arg declared_type64='CGFloat' index='0' name='position' type64='d'/>
<arg declared_type64='NSInteger' index='1' name='dividerIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVertical:'>
<arg declared_type64='BOOL' index='0' name='vertical' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSplitViewController'>
<method selector='addSplitViewItem:'>
<arg declared_type64='NSSplitViewItem * _Nonnull' index='0' name='splitViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSplitViewItem:atIndex:'>
<arg declared_type64='NSSplitViewItem * _Nonnull' index='0' name='splitViewItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='minimumThicknessForInlineSidebars'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='removeSplitViewItem:'>
<arg declared_type64='NSSplitViewItem * _Nonnull' index='0' name='splitViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumThicknessForInlineSidebars:'>
<arg declared_type64='CGFloat' index='0' name='minimumThicknessForInlineSidebars' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSplitView:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSplitViewItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='splitViewItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='splitView'>
<retval declared_type64='NSSplitView * _Nonnull' type64='@'/>
</method>
<method selector='splitView:additionalEffectiveRectOfDividerAtIndex:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='dividerIndex' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:canCollapseSubview:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='subview' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSRect' index='1' name='proposedEffectiveRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='2' name='drawnRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' index='3' name='dividerIndex' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='subview' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitView:shouldHideDividerAtIndex:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='dividerIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewItemForViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='NSSplitViewItem * _Nullable' type64='@'/>
</method>
<method selector='splitViewItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toggleSidebar:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='viewDidLoad'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSSplitViewItem'>
<method selector='allowsFullHeightLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='automaticMaximumThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='behavior'>
<retval declared_type64='NSSplitViewItemBehavior' type64='q'/>
</method>
<method selector='canCollapse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collapseBehavior'>
<retval declared_type64='NSSplitViewItemCollapseBehavior' type64='q'/>
</method>
<method class_method='true' selector='contentListWithViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='holdingPriority'>
<retval declared_type64='NSLayoutPriority' type64='f'/>
</method>
<method selector='isCollapsed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSpringLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maximumThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumThickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='preferredThicknessFraction'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setAllowsFullHeightLayout:'>
<arg declared_type64='BOOL' index='0' name='allowsFullHeightLayout' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticMaximumThickness:'>
<arg declared_type64='CGFloat' index='0' name='automaticMaximumThickness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanCollapse:'>
<arg declared_type64='BOOL' index='0' name='canCollapse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollapseBehavior:'>
<arg declared_type64='NSSplitViewItemCollapseBehavior' index='0' name='collapseBehavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollapsed:'>
<arg declared_type64='BOOL' index='0' name='collapsed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHoldingPriority:'>
<arg declared_type64='NSLayoutPriority' index='0' name='holdingPriority' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumThickness:'>
<arg declared_type64='CGFloat' index='0' name='maximumThickness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinimumThickness:'>
<arg declared_type64='CGFloat' index='0' name='minimumThickness' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredThicknessFraction:'>
<arg declared_type64='CGFloat' index='0' name='preferredThicknessFraction' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpringLoaded:'>
<arg declared_type64='BOOL' index='0' name='springLoaded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitlebarSeparatorStyle:'>
<arg declared_type64='NSTitlebarSeparatorStyle' index='0' name='titlebarSeparatorStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sidebarWithViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='splitViewItemWithViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='titlebarSeparatorStyle'>
<retval declared_type64='NSTitlebarSeparatorStyle' type64='q'/>
</method>
<method selector='viewController'>
<retval declared_type64='NSViewController * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSStackView'>
<method selector='addArrangedSubview:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addView:inGravity:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSStackViewGravity' index='1' name='gravity' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignment'>
<retval declared_type64='NSLayoutAttribute' type64='q'/>
</method>
<method selector='arrangedSubviews'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='clippingResistancePriorityForOrientation:'>
<arg declared_type64='NSLayoutConstraintOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='NSLayoutPriority' type64='f'/>
</method>
<method selector='customSpacingAfterView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='detachedViews'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='detachesHiddenViews'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='distribution'>
<retval declared_type64='NSStackViewDistribution' type64='q'/>
</method>
<method selector='edgeInsets'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='hasEqualSpacing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='huggingPriorityForOrientation:'>
<arg declared_type64='NSLayoutConstraintOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='NSLayoutPriority' type64='f'/>
</method>
<method selector='insertArrangedSubview:atIndex:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertView:atIndex:inGravity:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<arg declared_type64='NSStackViewGravity' index='2' name='gravity' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orientation'>
<retval declared_type64='NSUserInterfaceLayoutOrientation' type64='q'/>
</method>
<method selector='removeArrangedSubview:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type64='NSLayoutAttribute' index='0' name='alignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClippingResistancePriority:forOrientation:'>
<arg declared_type64='NSLayoutPriority' index='0' name='clippingResistancePriority' type64='f'/>
<arg declared_type64='NSLayoutConstraintOrientation' index='1' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomSpacing:afterView:'>
<arg declared_type64='CGFloat' index='0' name='spacing' type64='d'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDetachesHiddenViews:'>
<arg declared_type64='BOOL' index='0' name='detachesHiddenViews' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDistribution:'>
<arg declared_type64='NSStackViewDistribution' index='0' name='distribution' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEdgeInsets:'>
<arg declared_type64='NSEdgeInsets' index='0' name='edgeInsets' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHasEqualSpacing:'>
<arg declared_type64='BOOL' index='0' name='hasEqualSpacing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHuggingPriority:forOrientation:'>
<arg declared_type64='NSLayoutPriority' index='0' name='huggingPriority' type64='f'/>
<arg declared_type64='NSLayoutConstraintOrientation' index='1' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type64='NSUserInterfaceLayoutOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpacing:'>
<arg declared_type64='CGFloat' index='0' name='spacing' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViews:inGravity:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='views' type64='@'/>
<arg declared_type64='NSStackViewGravity' index='1' name='gravity' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVisibilityPriority:forView:'>
<arg declared_type64='NSStackViewVisibilityPriority' index='0' name='priority' type64='f'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spacing'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='stackViewWithViews:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='views' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='views'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='viewsInGravity:'>
<arg declared_type64='NSStackViewGravity' index='0' name='gravity' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='visibilityPriorityForView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSStackViewVisibilityPriority' type64='f'/>
</method>
</class>
<class name='NSStatusBar'>
<method selector='isVertical'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeStatusItem:'>
<arg declared_type64='NSStatusItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='statusItemWithLength:'>
<arg declared_type64='CGFloat' index='0' name='length' type64='d'/>
<retval declared_type64='NSStatusItem * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='systemStatusBar'>
<retval declared_type64='NSStatusBar * _Nonnull' type64='@'/>
</method>
<method selector='thickness'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSStatusBarButton'>
<method selector='appearsDisabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAppearsDisabled:'>
<arg declared_type64='BOOL' index='0' name='appearsDisabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSStatusItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='alternateImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='autosaveName'>
<retval declared_type64='NSStatusItemAutosaveName _Nonnull' type64='@'/>
</method>
<method selector='behavior'>
<retval declared_type64='NSStatusItemBehavior' type64='Q'/>
</method>
<method selector='button'>
<retval declared_type64='NSStatusBarButton * _Nullable' type64='@'/>
</method>
<method selector='doubleAction'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='drawStatusBarBackgroundInRect:withHighlight:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='highlight' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='highlightMode'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='length'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='menu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='popUpStatusItemMenu:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendActionOn:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='alternateImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosaveName:'>
<arg declared_type64='NSStatusItemAutosaveName _Nullable' index='0' name='autosaveName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBehavior:'>
<arg declared_type64='NSStatusItemBehavior' index='0' name='behavior' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='doubleAction' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlightMode:'>
<arg declared_type64='BOOL' index='0' name='highlightMode' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLength:'>
<arg declared_type64='CGFloat' index='0' name='length' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type64='NSMenu * _Nullable' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTip' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type64='BOOL' index='0' name='visible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='statusBar'>
<retval declared_type64='NSStatusBar * _Nullable' type64='@'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='toolTip'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
</class>
<class name='NSStepper'>
<method selector='autorepeat'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='increment'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='maxValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='minValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='setAutorepeat:'>
<arg declared_type64='BOOL' index='0' name='autorepeat' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncrement:'>
<arg declared_type64='double' index='0' name='increment' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type64='double' index='0' name='maxValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type64='double' index='0' name='minValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValueWraps:'>
<arg declared_type64='BOOL' index='0' name='valueWraps' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='valueWraps'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSStepperCell'>
<method selector='autorepeat'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='increment'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='maxValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='minValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='setAutorepeat:'>
<arg declared_type64='BOOL' index='0' name='autorepeat' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncrement:'>
<arg declared_type64='double' index='0' name='increment' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type64='double' index='0' name='maxValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type64='double' index='0' name='minValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValueWraps:'>
<arg declared_type64='BOOL' index='0' name='valueWraps' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='valueWraps'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSStepperTouchBarItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='increment'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='maxValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='minValue'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='customizationLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncrement:'>
<arg declared_type64='double' index='0' name='increment' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type64='double' index='0' name='maxValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type64='double' index='0' name='minValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:'>
<arg declared_type64='double' index='0' name='value' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='stepperTouchBarItemWithIdentifier:drawingHandler:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSRect, double)' function_pointer='true' index='1' name='drawingHandler' type64='@?'>
<arg declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='double' type64='d'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='stepperTouchBarItemWithIdentifier:formatter:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSFormatter * _Nonnull' index='1' name='formatter' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='value'>
<retval declared_type64='double' type64='d'/>
</method>
</class>
<class name='NSStoryboard'>
<method selector='instantiateControllerWithIdentifier:'>
<arg declared_type64='NSStoryboardSceneIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='instantiateControllerWithIdentifier:creator:'>
<arg declared_type64='NSStoryboardSceneIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSStoryboardControllerCreator _Nullable' function_pointer='true' index='1' name='block' type64='@?'>
<arg declared_type64='NSCoder * _Nonnull' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</arg>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='instantiateInitialController'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='instantiateInitialControllerWithCreator:'>
<arg declared_type64='NSStoryboardControllerCreator _Nullable' function_pointer='true' index='0' name='block' type64='@?'>
<arg declared_type64='NSCoder * _Nonnull' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</arg>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='mainStoryboard'>
<retval declared_type64='NSStoryboard * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='storyboardWithName:bundle:'>
<arg declared_type64='NSStoryboardName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='storyboardBundleOrNil' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSStoryboardSegue'>
<method selector='destinationController'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSStoryboardSegueIdentifier _Nullable' type64='@'/>
</method>
<method selector='initWithIdentifier:source:destination:'>
<arg declared_type64='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='sourceController' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='destinationController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='perform'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='segueWithIdentifier:source:destination:performHandler:'>
<arg declared_type64='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='sourceController' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='destinationController' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='performHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='sourceController'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</class>
<class name='NSString'>
<method selector='boundingRectWithSize:options:attributes:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='attributes' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundingRectWithSize:options:attributes:context:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='attributes' type64='@'/>
<arg declared_type64='NSStringDrawingContext * _Nullable' index='3' name='context' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='drawAtPoint:withAttributes:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='attrs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawInRect:withAttributes:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='attrs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithRect:options:attributes:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='attributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithRect:options:attributes:context:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSStringDrawingOptions' index='1' name='options' type64='q'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='attributes' type64='@'/>
<arg declared_type64='NSStringDrawingContext * _Nullable' index='3' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeWithAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='attrs' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSStringDrawingContext'>
<method selector='actualScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minimumScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setMinimumScaleFactor:'>
<arg declared_type64='CGFloat' index='0' name='minimumScaleFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='totalBounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSSwitch'>
<method selector='setState:'>
<arg declared_type64='NSControlStateValue' index='0' name='state' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='state'>
<retval declared_type64='NSControlStateValue' type64='q'/>
</method>
</class>
<class name='NSTabView'>
<method selector='addTabViewItem:'>
<arg declared_type64='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsTruncatedLabels'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='controlSize'>
<retval declared_type64='NSControlSize' type64='Q'/>
</method>
<method selector='controlTint'>
<retval declared_type64='NSControlTint' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='font'>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='indexOfTabViewItem:'>
<arg declared_type64='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='indexOfTabViewItemWithIdentifier:'>
<arg declared_type64='id _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='insertTabViewItem:atIndex:'>
<arg declared_type64='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='minimumSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='numberOfTabViewItems'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='removeTabViewItem:'>
<arg declared_type64='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectFirstTabViewItem:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectLastTabViewItem:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectNextTabViewItem:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectPreviousTabViewItem:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectTabViewItem:'>
<arg declared_type64='NSTabViewItem * _Nullable' index='0' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectTabViewItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectTabViewItemWithIdentifier:'>
<arg declared_type64='id _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedTabViewItem'>
<retval declared_type64='NSTabViewItem * _Nullable' type64='@'/>
</method>
<method selector='setAllowsTruncatedLabels:'>
<arg declared_type64='BOOL' index='0' name='allowsTruncatedLabels' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type64='NSControlSize' index='0' name='controlSize' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlTint:'>
<arg declared_type64='NSControlTint' index='0' name='controlTint' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabPosition:'>
<arg declared_type64='NSTabPosition' index='0' name='tabPosition' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabViewBorderType:'>
<arg declared_type64='NSTabViewBorderType' index='0' name='tabViewBorderType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabViewItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='tabViewItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabViewType:'>
<arg declared_type64='NSTabViewType' index='0' name='tabViewType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabPosition'>
<retval declared_type64='NSTabPosition' type64='Q'/>
</method>
<method selector='tabViewBorderType'>
<retval declared_type64='NSTabViewBorderType' type64='Q'/>
</method>
<method selector='tabViewItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSTabViewItem * _Nonnull' type64='@'/>
</method>
<method selector='tabViewItemAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSTabViewItem * _Nullable' type64='@'/>
</method>
<method selector='tabViewItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tabViewType'>
<retval declared_type64='NSTabViewType' type64='Q'/>
</method>
<method selector='takeSelectedTabViewItemFromSender:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSTabViewController'>
<method selector='addTabViewItem:'>
<arg declared_type64='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canPropagateSelectedChildViewControllerTitle'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='insertTabViewItem:atIndex:'>
<arg declared_type64='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTabViewItem:'>
<arg declared_type64='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedTabViewItemIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setCanPropagateSelectedChildViewControllerTitle:'>
<arg declared_type64='BOOL' index='0' name='canPropagateSelectedChildViewControllerTitle' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedTabViewItemIndex:'>
<arg declared_type64='NSInteger' index='0' name='selectedTabViewItemIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabStyle:'>
<arg declared_type64='NSTabViewControllerTabStyle' index='0' name='tabStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabView:'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabViewItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='tabViewItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransitionOptions:'>
<arg declared_type64='NSViewControllerTransitionOptions' index='0' name='transitionOptions' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabStyle'>
<retval declared_type64='NSTabViewControllerTabStyle' type64='q'/>
</method>
<method selector='tabView'>
<retval declared_type64='NSTabView * _Nonnull' type64='@'/>
</method>
<method selector='tabView:didSelectTabViewItem:'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabView:shouldSelectTabViewItem:'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tabView:willSelectTabViewItem:'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabViewItemForViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='NSTabViewItem * _Nullable' type64='@'/>
</method>
<method selector='tabViewItems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<arg declared_type64='NSToolbarItemIdentifier _Nonnull' index='1' name='itemIdentifier' type64='@'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='NSToolbarItem * _Nullable' type64='@'/>
</method>
<method selector='toolbarAllowedItemIdentifiers:'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbarDefaultItemIdentifiers:'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbarSelectableItemIdentifiers:'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='transitionOptions'>
<retval declared_type64='NSViewControllerTransitionOptions' type64='Q'/>
</method>
<method selector='viewDidLoad'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSTabViewItem'>
<method selector='color'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='drawLabel:inRect:'>
<arg declared_type64='BOOL' index='0' name='shouldTruncateLabel' type64='B'/>
<arg declared_type64='NSRect' index='1' name='labelRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='identifier'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type64='id _Nullable' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initialFirstResponder'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='label'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='setColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='id _Nullable' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInitialFirstResponder:'>
<arg declared_type64='NSView * _Nullable' index='0' name='initialFirstResponder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTip' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewController:'>
<arg declared_type64='NSViewController * _Nullable' index='0' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeOfLabel:'>
<arg declared_type64='BOOL' index='0' name='computeMin' type64='B'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='tabState'>
<retval declared_type64='NSTabState' type64='Q'/>
</method>
<method selector='tabView'>
<retval declared_type64='NSTabView * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='tabViewItemWithViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='toolTip'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='viewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
</class>
<class name='NSTableCellView'>
<method selector='backgroundStyle'>
<retval declared_type64='NSBackgroundStyle' type64='q'/>
</method>
<method selector='draggingImageComponents'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='imageView'>
<retval declared_type64='NSImageView * _Nullable' type64='@'/>
</method>
<method selector='objectValue'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='rowSizeStyle'>
<retval declared_type64='NSTableViewRowSizeStyle' type64='q'/>
</method>
<method selector='setBackgroundStyle:'>
<arg declared_type64='NSBackgroundStyle' index='0' name='backgroundStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImageView:'>
<arg declared_type64='NSImageView * _Nullable' index='0' name='imageView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setObjectValue:'>
<arg declared_type64='id _Nullable' index='0' name='objectValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowSizeStyle:'>
<arg declared_type64='NSTableViewRowSizeStyle' index='0' name='rowSizeStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextField:'>
<arg declared_type64='NSTextField * _Nullable' index='0' name='textField' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textField'>
<retval declared_type64='NSTextField * _Nullable' type64='@'/>
</method>
</class>
<class name='NSTableColumn'>
<method selector='dataCell'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='dataCellForRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='headerCell'>
<retval declared_type64='__kindof NSTableHeaderCell * _Nonnull' type64='@'/>
</method>
<method selector='headerToolTip'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSUserInterfaceItemIdentifier _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isResizable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maxWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='resizingMask'>
<retval declared_type64='NSTableColumnResizingOptions' type64='Q'/>
</method>
<method selector='setDataCell:'>
<arg declared_type64='id _Nonnull' index='0' name='dataCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeaderCell:'>
<arg declared_type64='__kindof NSTableHeaderCell * _Nonnull' index='0' name='headerCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeaderToolTip:'>
<arg declared_type64='NSString * _Nullable' index='0' name='headerToolTip' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxWidth:'>
<arg declared_type64='CGFloat' index='0' name='maxWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinWidth:'>
<arg declared_type64='CGFloat' index='0' name='minWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResizable:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResizingMask:'>
<arg declared_type64='NSTableColumnResizingOptions' index='0' name='resizingMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSortDescriptorPrototype:'>
<arg declared_type64='NSSortDescriptor * _Nullable' index='0' name='sortDescriptorPrototype' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTableView:'>
<arg declared_type64='NSTableView * _Nullable' index='0' name='tableView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type64='CGFloat' index='0' name='width' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortDescriptorPrototype'>
<retval declared_type64='NSSortDescriptor * _Nullable' type64='@'/>
</method>
<method selector='tableView'>
<retval declared_type64='NSTableView * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='width'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='NSTableHeaderCell'>
<method selector='drawSortIndicatorWithFrame:inView:ascending:priority:'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<arg declared_type64='BOOL' index='2' name='ascending' type64='B'/>
<arg declared_type64='NSInteger' index='3' name='priority' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortIndicatorRectForBounds:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSTableHeaderView'>
<method selector='columnAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='draggedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='draggedDistance'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='headerRectOfColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='resizedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setTableView:'>
<arg declared_type64='NSTableView * _Nullable' index='0' name='tableView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView'>
<retval declared_type64='NSTableView * _Nullable' type64='@'/>
</method>
</class>
<class name='NSTableRowView'>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='draggingDestinationFeedbackStyle'>
<retval declared_type64='NSTableViewDraggingDestinationFeedbackStyle' type64='q'/>
</method>
<method selector='drawBackgroundInRect:'>
<arg declared_type64='NSRect' index='0' name='dirtyRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawDraggingDestinationFeedbackInRect:'>
<arg declared_type64='NSRect' index='0' name='dirtyRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawSelectionInRect:'>
<arg declared_type64='NSRect' index='0' name='dirtyRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawSeparatorInRect:'>
<arg declared_type64='NSRect' index='0' name='dirtyRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indentationForDropOperation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='interiorBackgroundStyle'>
<retval declared_type64='NSBackgroundStyle' type64='q'/>
</method>
<method selector='isEmphasized'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFloating'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isGroupRowStyle'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isNextRowSelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPreviousRowSelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTargetForDropOperation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectionHighlightStyle'>
<retval declared_type64='NSTableViewSelectionHighlightStyle' type64='q'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingDestinationFeedbackStyle:'>
<arg declared_type64='NSTableViewDraggingDestinationFeedbackStyle' index='0' name='draggingDestinationFeedbackStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmphasized:'>
<arg declared_type64='BOOL' index='0' name='emphasized' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloating:'>
<arg declared_type64='BOOL' index='0' name='floating' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGroupRowStyle:'>
<arg declared_type64='BOOL' index='0' name='groupRowStyle' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndentationForDropOperation:'>
<arg declared_type64='CGFloat' index='0' name='indentationForDropOperation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNextRowSelected:'>
<arg declared_type64='BOOL' index='0' name='nextRowSelected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreviousRowSelected:'>
<arg declared_type64='BOOL' index='0' name='previousRowSelected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionHighlightStyle:'>
<arg declared_type64='NSTableViewSelectionHighlightStyle' index='0' name='selectionHighlightStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTargetForDropOperation:'>
<arg declared_type64='BOOL' index='0' name='targetForDropOperation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewAtColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='NSTableView'>
<method selector='addTableColumn:'>
<arg declared_type64='NSTableColumn * _Nonnull' index='0' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowsColumnReordering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsColumnResizing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsColumnSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsTypeSelect'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autoresizesAllColumnsToFit'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autosaveName'>
<retval declared_type64='NSTableViewAutosaveName _Nullable' type64='@'/>
</method>
<method selector='autosaveTableColumns'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='beginUpdates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canDragRowsWithIndexes:atPoint:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='mouseDownPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='clickedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='clickedRow'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='columnAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='columnAutoresizingStyle'>
<retval declared_type64='NSTableViewColumnAutoresizingStyle' type64='Q'/>
</method>
<method selector='columnForView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='columnIndexesInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='columnWithIdentifier:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='columnsInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='cornerView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='dataSource'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deselectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deselectColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deselectRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didAddRowView:forRow:'>
<arg declared_type64='NSTableRowView * _Nonnull' index='0' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didRemoveRowView:forRow:'>
<arg declared_type64='NSTableRowView * _Nonnull' index='0' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doubleAction'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='dragImageForRows:event:dragImageOffset:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='dragRows' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='dragEvent' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='2' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='dragImageForRowsWithIndexes:tableColumns:event:offset:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='dragRows' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='tableColumns' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='dragEvent' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='draggingDestinationFeedbackStyle'>
<retval declared_type64='NSTableViewDraggingDestinationFeedbackStyle' type64='q'/>
</method>
<method selector='drawBackgroundInClipRect:'>
<arg declared_type64='NSRect' index='0' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawGridInClipRect:'>
<arg declared_type64='NSRect' index='0' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawRow:clipRect:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSRect' index='1' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawsGrid'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='editColumn:row:withEvent:select:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSEvent * _Nullable' index='2' name='event' type64='@'/>
<arg declared_type64='BOOL' index='3' name='select' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='editedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='editedRow'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='effectiveRowSizeStyle'>
<retval declared_type64='NSTableViewRowSizeStyle' type64='q'/>
</method>
<method selector='effectiveStyle'>
<retval declared_type64='NSTableViewStyle' type64='q'/>
</method>
<method selector='endUpdates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enumerateAvailableRowViewsUsingBlock:'>
<arg declared_type64='void (^ _Nonnull)(__kindof NSTableRowView * _Nonnull, NSInteger)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='__kindof NSTableRowView * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='floatsGroupRows'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='focusedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='frameOfCellAtColumn:row:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gridColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='gridStyleMask'>
<retval declared_type64='NSTableViewGridLineStyle' type64='Q'/>
</method>
<method selector='headerView'>
<retval declared_type64='NSTableHeaderView * _Nullable' type64='@'/>
</method>
<method selector='hiddenRowIndexes'>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='hideRowsAtIndexes:withAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='NSTableViewAnimationOptions' index='1' name='rowAnimation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='highlightSelectionInClipRect:'>
<arg declared_type64='NSRect' index='0' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='highlightedTableColumn'>
<retval declared_type64='NSTableColumn * _Nullable' type64='@'/>
</method>
<method selector='indicatorImageInTableColumn:'>
<arg declared_type64='NSTableColumn * _Nonnull' index='0' name='tableColumn' type64='@'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertRowsAtIndexes:withAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='NSTableViewAnimationOptions' index='1' name='animationOptions' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='isColumnSelected:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRowSelected:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='makeViewWithIdentifier:owner:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='owner' type64='@'/>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
<method selector='moveColumn:toColumn:'>
<arg declared_type64='NSInteger' index='0' name='oldIndex' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='newIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveRowAtIndex:toIndex:'>
<arg declared_type64='NSInteger' index='0' name='oldIndex' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='newIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='noteHeightOfRowsWithIndexesChanged:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexSet' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='noteNumberOfRowsChanged'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSelectedColumns'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSelectedRows'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='performClickOnCellAtColumn:row:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preparedCellAtColumn:row:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='NSCell * _Nullable' type64='@'/>
</method>
<method selector='rectOfColumn:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectOfRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='registerNib:forIdentifier:'>
<arg declared_type64='NSNib * _Nullable' index='0' name='nib' type64='@'/>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registeredNibsByIdentifier'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='reloadData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reloadDataForRowIndexes:columnIndexes:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='columnIndexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeRowsAtIndexes:withAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='NSTableViewAnimationOptions' index='1' name='animationOptions' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTableColumn:'>
<arg declared_type64='NSTableColumn * _Nonnull' index='0' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rowActionsVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rowAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rowForView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rowHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rowSizeStyle'>
<retval declared_type64='NSTableViewRowSizeStyle' type64='q'/>
</method>
<method selector='rowViewAtRow:makeIfNecessary:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='BOOL' index='1' name='makeIfNecessary' type64='B'/>
<retval declared_type64='__kindof NSTableRowView * _Nullable' type64='@'/>
</method>
<method selector='rowsInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='scrollColumnToVisible:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollRowToVisible:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectColumn:byExtendingSelection:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='BOOL' index='1' name='extend' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectColumnIndexes:byExtendingSelection:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='BOOL' index='1' name='extend' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectRow:byExtendingSelection:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='BOOL' index='1' name='extend' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectRowIndexes:byExtendingSelection:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='BOOL' index='1' name='extend' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectedColumnEnumerator'>
<retval declared_type64='NSEnumerator * _Nonnull' type64='@'/>
</method>
<method selector='selectedColumnIndexes'>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='selectedRow'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectedRowEnumerator'>
<retval declared_type64='NSEnumerator * _Nonnull' type64='@'/>
</method>
<method selector='selectedRowIndexes'>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='selectionHighlightStyle'>
<retval declared_type64='NSTableViewSelectionHighlightStyle' type64='q'/>
</method>
<method selector='setAllowsColumnReordering:'>
<arg declared_type64='BOOL' index='0' name='allowsColumnReordering' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsColumnResizing:'>
<arg declared_type64='BOOL' index='0' name='allowsColumnResizing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsColumnSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsColumnSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type64='BOOL' index='0' name='allowsEmptySelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type64='BOOL' index='0' name='allowsMultipleSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsTypeSelect:'>
<arg declared_type64='BOOL' index='0' name='allowsTypeSelect' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoresizesAllColumnsToFit:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosaveName:'>
<arg declared_type64='NSTableViewAutosaveName _Nullable' index='0' name='autosaveName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosaveTableColumns:'>
<arg declared_type64='BOOL' index='0' name='autosaveTableColumns' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColumnAutoresizingStyle:'>
<arg declared_type64='NSTableViewColumnAutoresizingStyle' index='0' name='columnAutoresizingStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCornerView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='cornerView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type64='id _Nullable' index='0' name='dataSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='doubleAction' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingDestinationFeedbackStyle:'>
<arg declared_type64='NSTableViewDraggingDestinationFeedbackStyle' index='0' name='draggingDestinationFeedbackStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg declared_type64='NSDragOperation' index='0' name='mask' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='isLocal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsGrid:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDropRow:dropOperation:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<arg declared_type64='NSTableViewDropOperation' index='1' name='dropOperation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFloatsGroupRows:'>
<arg declared_type64='BOOL' index='0' name='floatsGroupRows' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusedColumn:'>
<arg declared_type64='NSInteger' index='0' name='focusedColumn' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGridColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='gridColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGridStyleMask:'>
<arg declared_type64='NSTableViewGridLineStyle' index='0' name='gridStyleMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeaderView:'>
<arg declared_type64='NSTableHeaderView * _Nullable' index='0' name='headerView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHighlightedTableColumn:'>
<arg declared_type64='NSTableColumn * _Nullable' index='0' name='highlightedTableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIndicatorImage:inTableColumn:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type64='NSSize' index='0' name='intercellSpacing' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowActionsVisible:'>
<arg declared_type64='BOOL' index='0' name='rowActionsVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowHeight:'>
<arg declared_type64='CGFloat' index='0' name='rowHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowSizeStyle:'>
<arg declared_type64='NSTableViewRowSizeStyle' index='0' name='rowSizeStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionHighlightStyle:'>
<arg declared_type64='NSTableViewSelectionHighlightStyle' index='0' name='selectionHighlightStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sortDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type64='NSTableViewStyle' index='0' name='style' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type64='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesAlternatingRowBackgroundColors:'>
<arg declared_type64='BOOL' index='0' name='usesAlternatingRowBackgroundColors' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesAutomaticRowHeights:'>
<arg declared_type64='BOOL' index='0' name='usesAutomaticRowHeights' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesStaticContents:'>
<arg declared_type64='BOOL' index='0' name='usesStaticContents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalMotionCanBeginDrag:'>
<arg declared_type64='BOOL' index='0' name='verticalMotionCanBeginDrag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldFocusCell:atColumn:row:'>
<arg declared_type64='NSCell * _Nonnull' index='0' name='cell' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sizeLastColumnToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortDescriptors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='style'>
<retval declared_type64='NSTableViewStyle' type64='q'/>
</method>
<method selector='tableColumnWithIdentifier:'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='NSTableColumn * _Nullable' type64='@'/>
</method>
<method selector='tableColumns'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textDidBeginEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidEndEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textShouldEndEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tile'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unhideRowsAtIndexes:withAnimation:'>
<arg declared_type64='NSIndexSet * _Nonnull' index='0' name='indexes' type64='@'/>
<arg declared_type64='NSTableViewAnimationOptions' index='1' name='rowAnimation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type64='NSUserInterfaceLayoutDirection' type64='q'/>
</method>
<method selector='usesAlternatingRowBackgroundColors'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesAutomaticRowHeights'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesStaticContents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='verticalMotionCanBeginDrag'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='viewAtColumn:row:makeIfNecessary:'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='BOOL' index='2' name='makeIfNecessary' type64='B'/>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
</class>
<class name='NSTableViewDiffableDataSource'>
<method selector='applySnapshot:animatingDifferences:'>
<arg declared_type64='NSDiffableDataSourceSnapshot * _Nonnull' index='0' name='snapshot' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animatingDifferences' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applySnapshot:animatingDifferences:completion:'>
<arg declared_type64='NSDiffableDataSourceSnapshot * _Nonnull' index='0' name='snapshot' type64='@'/>
<arg declared_type64='BOOL' index='1' name='animatingDifferences' type64='B'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='2' name='completion' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='defaultRowAnimation'>
<retval declared_type64='NSTableViewAnimationOptions' type64='Q'/>
</method>
<method selector='initWithTableView:cellProvider:'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableViewDiffableDataSourceCellProvider _Nonnull' function_pointer='true' index='1' name='cellProvider' type64='@?'>
<arg declared_type64='NSTableView * _Nonnull' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='itemIdentifierForRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='ItemIdentifierType _Nullable' type64='@'/>
</method>
<method selector='rowForItemIdentifier:'>
<arg declared_type64='ItemIdentifierType _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rowForSectionIdentifier:'>
<arg declared_type64='SectionIdentifierType _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='rowViewProvider'>
<retval declared_type64='NSTableViewDiffableDataSourceRowProvider _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='NSTableView * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='NSTableRowView * _Nonnull' type64='@'/>
</retval>
</method>
<method selector='sectionHeaderViewProvider'>
<retval declared_type64='NSTableViewDiffableDataSourceSectionHeaderViewProvider _Nullable' function_pointer='true' type64='@?'>
<arg declared_type64='NSTableView * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</retval>
</method>
<method selector='sectionIdentifierForRow:'>
<arg declared_type64='NSInteger' index='0' name='row' type64='q'/>
<retval declared_type64='SectionIdentifierType _Nullable' type64='@'/>
</method>
<method selector='setDefaultRowAnimation:'>
<arg declared_type64='NSTableViewAnimationOptions' index='0' name='defaultRowAnimation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRowViewProvider:'>
<arg declared_type64='NSTableViewDiffableDataSourceRowProvider _Nullable' function_pointer='true' index='0' name='rowViewProvider' type64='@?'>
<arg declared_type64='NSTableView * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='NSTableRowView * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSectionHeaderViewProvider:'>
<arg declared_type64='NSTableViewDiffableDataSourceSectionHeaderViewProvider _Nullable' function_pointer='true' index='0' name='sectionHeaderViewProvider' type64='@?'>
<arg declared_type64='NSTableView * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='id _Nonnull' type64='@'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='snapshot'>
<retval declared_type64='NSDiffableDataSourceSnapshot * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTableViewRowAction'>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='rowActionWithStyle:title:handler:'>
<arg declared_type64='NSTableViewRowActionStyle' index='0' name='style' type64='q'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='title' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSTableViewRowAction * _Nonnull, NSInteger)' function_pointer='true' index='2' name='handler' type64='@?'>
<arg declared_type64='NSTableViewRowAction * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='style'>
<retval declared_type64='NSTableViewRowActionStyle' type64='q'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSText'>
<method selector='RTFDFromRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='RTFFromRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='alignCenter:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignLeft:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignRight:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type64='NSWritingDirection' type64='q'/>
</method>
<method selector='changeFont:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='checkSpelling:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='copy:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='copyFont:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='copyRuler:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cut:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delete:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='font'>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='importsGraphics'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFieldEditor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHorizontallyResizable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRichText'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRulerVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVerticallyResizable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maxSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='minSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='paste:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteFont:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteRuler:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readRTFDFromFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='replaceCharactersInRange:withRTF:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='rtfData' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceCharactersInRange:withRTFD:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='rtfdData' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='setAlignment:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type64='NSWritingDirection' index='0' name='baseWritingDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFieldEditor:'>
<arg declared_type64='BOOL' index='0' name='fieldEditor' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='NSFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:range:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='font' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontallyResizable:'>
<arg declared_type64='BOOL' index='0' name='horizontallyResizable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImportsGraphics:'>
<arg declared_type64='BOOL' index='0' name='importsGraphics' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxSize:'>
<arg declared_type64='NSSize' index='0' name='maxSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type64='NSSize' index='0' name='minSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRichText:'>
<arg declared_type64='BOOL' index='0' name='richText' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type64='BOOL' index='0' name='selectable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedRange:'>
<arg declared_type64='NSRange' index='0' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='textColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:range:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='color' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFontPanel:'>
<arg declared_type64='BOOL' index='0' name='usesFontPanel' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticallyResizable:'>
<arg declared_type64='BOOL' index='0' name='verticallyResizable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showGuessPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='string'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='subscript:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='superscript:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='toggleRuler:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='underline:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unscript:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesFontPanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeRTFDToFile:atomically:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSTextAlternatives'>
<method selector='alternativeStrings'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithPrimaryString:alternativeStrings:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='primaryString' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='alternativeStrings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='noteSelectedAlternativeString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='alternativeString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='primaryString'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTextAttachment'>
<method selector='attachmentCell'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='bounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contents'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='fileType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='fileWrapper'>
<retval declared_type64='NSFileWrapper * _Nullable' type64='@'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='initWithData:ofType:'>
<arg declared_type64='NSData * _Nullable' index='0' name='contentData' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='uti' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFileWrapper:'>
<arg declared_type64='NSFileWrapper * _Nullable' index='0' name='fileWrapper' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAttachmentCell:'>
<arg declared_type64='id _Nullable' index='0' name='attachmentCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type64='NSRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContents:'>
<arg declared_type64='NSData * _Nullable' index='0' name='contents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='fileType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFileWrapper:'>
<arg declared_type64='NSFileWrapper * _Nullable' index='0' name='fileWrapper' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSTextBlock'>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='borderColorForEdge:'>
<arg declared_type64='NSRectEdge' index='0' name='edge' type64='Q'/>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='boundsRectForContentRect:inRect:textContainer:characterRange:'>
<arg declared_type64='NSRect' index='0' name='contentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='textContainer' type64='@'/>
<arg declared_type64='NSRange' index='3' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='contentWidthValueType'>
<retval declared_type64='NSTextBlockValueType' type64='Q'/>
</method>
<method selector='drawBackgroundWithFrame:inView:characterRange:layoutManager:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='controlView' type64='@'/>
<arg declared_type64='NSRange' index='2' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSLayoutManager * _Nonnull' index='3' name='layoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='rectForLayoutAtPoint:inRect:textContainer:characterRange:'>
<arg declared_type64='NSPoint' index='0' name='startingPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='textContainer' type64='@'/>
<arg declared_type64='NSRange' index='3' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='color' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBorderColor:forEdge:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='color' type64='@'/>
<arg declared_type64='NSRectEdge' index='1' name='edge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentWidth:type:'>
<arg declared_type64='CGFloat' index='0' name='val' type64='d'/>
<arg declared_type64='NSTextBlockValueType' index='1' name='type' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:type:forDimension:'>
<arg declared_type64='CGFloat' index='0' name='val' type64='d'/>
<arg declared_type64='NSTextBlockValueType' index='1' name='type' type64='Q'/>
<arg declared_type64='NSTextBlockDimension' index='2' name='dimension' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalAlignment:'>
<arg declared_type64='NSTextBlockVerticalAlignment' index='0' name='verticalAlignment' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:type:forLayer:'>
<arg declared_type64='CGFloat' index='0' name='val' type64='d'/>
<arg declared_type64='NSTextBlockValueType' index='1' name='type' type64='Q'/>
<arg declared_type64='NSTextBlockLayer' index='2' name='layer' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:type:forLayer:edge:'>
<arg declared_type64='CGFloat' index='0' name='val' type64='d'/>
<arg declared_type64='NSTextBlockValueType' index='1' name='type' type64='Q'/>
<arg declared_type64='NSTextBlockLayer' index='2' name='layer' type64='q'/>
<arg declared_type64='NSRectEdge' index='3' name='edge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='valueForDimension:'>
<arg declared_type64='NSTextBlockDimension' index='0' name='dimension' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='valueTypeForDimension:'>
<arg declared_type64='NSTextBlockDimension' index='0' name='dimension' type64='Q'/>
<retval declared_type64='NSTextBlockValueType' type64='Q'/>
</method>
<method selector='verticalAlignment'>
<retval declared_type64='NSTextBlockVerticalAlignment' type64='Q'/>
</method>
<method selector='widthForLayer:edge:'>
<arg declared_type64='NSTextBlockLayer' index='0' name='layer' type64='q'/>
<arg declared_type64='NSRectEdge' index='1' name='edge' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='widthValueTypeForLayer:edge:'>
<arg declared_type64='NSTextBlockLayer' index='0' name='layer' type64='q'/>
<arg declared_type64='NSRectEdge' index='1' name='edge' type64='Q'/>
<retval declared_type64='NSTextBlockValueType' type64='Q'/>
</method>
</class>
<class name='NSTextCheckingController'>
<method selector='changeSpelling:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='checkSpelling:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='checkTextInDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='checkTextInRange:types:options:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextCheckingTypes' index='1' name='checkingTypes' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='checkTextInSelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='client'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='considerTextCheckingForRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didChangeSelectedRange'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didChangeTextInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ignoreSpelling:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithClient:'>
<arg declared_type64='id _Nonnull' index='0' name='client' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertedTextInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuAtIndex:clickedOnSelection:effectiveRange:'>
<arg declared_type64='NSUInteger' index='0' name='location' type64='Q'/>
<arg declared_type64='BOOL' index='1' name='clickedOnSelection' type64='B'/>
<arg declared_type64='NSRangePointer _Nonnull' index='2' name='effectiveRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='orderFrontSubstitutionsPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpellCheckerDocumentTag:'>
<arg declared_type64='NSInteger' index='0' name='spellCheckerDocumentTag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showGuessPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spellCheckerDocumentTag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='updateCandidates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validAnnotations'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTextContainer'>
<method selector='containerSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='containsPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='exclusionPaths'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='heightTracksTextView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithContainerSize:'>
<arg declared_type64='NSSize' index='0' name='aContainerSize' type64='{CGSize=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isSimpleRectangularTextContainer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager'>
<retval declared_type64='NSLayoutManager * _Nullable' type64='@'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type64='NSLineBreakMode' type64='Q'/>
</method>
<method selector='lineFragmentPadding'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:'>
<arg declared_type64='NSRect' index='0' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='1' name='characterIndex' type64='Q'/>
<arg declared_type64='NSWritingDirection' index='2' name='baseWritingDirection' type64='q'/>
<arg declared_type64='NSRect * _Nullable' index='3' name='remainingRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:'>
<arg declared_type64='NSRect' index='0' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSLineSweepDirection' index='1' name='sweepDirection' type64='Q'/>
<arg declared_type64='NSLineMovementDirection' index='2' name='movementDirection' type64='Q'/>
<arg declared_type64='NSRectPointer _Nullable' index='3' name='remainingRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='maximumNumberOfLines'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='replaceLayoutManager:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='newLayoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContainerSize:'>
<arg declared_type64='NSSize' index='0' name='containerSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExclusionPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='exclusionPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeightTracksTextView:'>
<arg declared_type64='BOOL' index='0' name='heightTracksTextView' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutManager:'>
<arg declared_type64='NSLayoutManager * _Nullable' index='0' name='layoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type64='NSLineBreakMode' index='0' name='lineBreakMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg declared_type64='CGFloat' index='0' name='lineFragmentPadding' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumNumberOfLines:'>
<arg declared_type64='NSUInteger' index='0' name='maximumNumberOfLines' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextView:'>
<arg declared_type64='NSTextView * _Nullable' index='0' name='textView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidthTracksTextView:'>
<arg declared_type64='BOOL' index='0' name='widthTracksTextView' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='size'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='textView'>
<retval declared_type64='NSTextView * _Nullable' type64='@'/>
</method>
<method selector='widthTracksTextView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSTextField'>
<method selector='acceptsFirstResponder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsCharacterPickerTouchBarItem'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='bezelStyle'>
<retval declared_type64='NSTextFieldBezelStyle' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='importsGraphics'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticTextCompletionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isBezeled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isBordered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='labelWithAttributedString:'>
<arg declared_type64='NSAttributedString * _Nonnull' index='0' name='attributedStringValue' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='labelWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringValue' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='lineBreakStrategy'>
<retval declared_type64='NSLineBreakStrategy' type64='Q'/>
</method>
<method selector='maximumNumberOfLines'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='preferredMaxLayoutWidth'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='selectText:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsCharacterPickerTouchBarItem:'>
<arg declared_type64='BOOL' index='0' name='allowsCharacterPickerTouchBarItem' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type64='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg declared_type64='BOOL' index='0' name='allowsEditingTextAttributes' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticTextCompletionEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticTextCompletionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezelStyle:'>
<arg declared_type64='NSTextFieldBezelStyle' index='0' name='bezelStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type64='BOOL' index='0' name='bezeled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type64='BOOL' index='0' name='bordered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImportsGraphics:'>
<arg declared_type64='BOOL' index='0' name='importsGraphics' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineBreakStrategy:'>
<arg declared_type64='NSLineBreakStrategy' index='0' name='lineBreakStrategy' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumNumberOfLines:'>
<arg declared_type64='NSInteger' index='0' name='maximumNumberOfLines' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type64='NSString * _Nullable' index='0' name='placeholderString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMaxLayoutWidth:'>
<arg declared_type64='CGFloat' index='0' name='preferredMaxLayoutWidth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type64='BOOL' index='0' name='selectable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='textColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type64='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='textDidBeginEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidChange:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidEndEditing:'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='textFieldWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringValue' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textShouldEndEditing:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='wrappingLabelWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='stringValue' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTextFieldCell'>
<method selector='allowedInputSourceLocales'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='bezelStyle'>
<retval declared_type64='NSTextFieldBezelStyle' type64='Q'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initTextCell:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='allowedInputSourceLocales' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBezelStyle:'>
<arg declared_type64='NSTextFieldBezelStyle' index='0' name='bezelStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type64='NSString * _Nullable' index='0' name='placeholderString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='textColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUpFieldEditorAttributes:'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObj' type64='@'/>
<retval declared_type64='NSText * _Nonnull' type64='@'/>
</method>
<method selector='setWantsNotificationForMarkedText:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
</class>
<class name='NSTextFinder'>
<method selector='cancelFindIndicator'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='client'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='drawIncrementalMatchHighlightInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='findBarContainer'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='findIndicatorNeedsUpdate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='incrementalMatchRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='incrementalSearchingShouldDimContentView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isIncrementalSearchingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='noteClientStringWillChange'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performAction:'>
<arg declared_type64='NSTextFinderAction' index='0' name='op' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClient:'>
<arg declared_type64='id _Nullable' index='0' name='client' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFindBarContainer:'>
<arg declared_type64='id _Nullable' index='0' name='findBarContainer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFindIndicatorNeedsUpdate:'>
<arg declared_type64='BOOL' index='0' name='findIndicatorNeedsUpdate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncrementalSearchingEnabled:'>
<arg declared_type64='BOOL' index='0' name='incrementalSearchingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncrementalSearchingShouldDimContentView:'>
<arg declared_type64='BOOL' index='0' name='incrementalSearchingShouldDimContentView' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validateAction:'>
<arg declared_type64='NSTextFinderAction' index='0' name='op' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSTextInputContext'>
<method selector='acceptsGlyphInfo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='activate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowedInputSourceLocales'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='client'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='currentInputContext'>
<retval declared_type64='NSTextInputContext * _Nullable' type64='@'/>
</method>
<method selector='deactivate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardMarkedText'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='handleEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithClient:'>
<arg declared_type64='id _Nonnull' index='0' name='client' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='invalidateCharacterCoordinates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='keyboardInputSources'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='localizedNameForInputSource:'>
<arg declared_type64='NSTextInputSourceIdentifier _Nonnull' index='0' name='inputSourceIdentifier' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='selectedKeyboardInputSource'>
<retval declared_type64='NSTextInputSourceIdentifier _Nullable' type64='@'/>
</method>
<method selector='setAcceptsGlyphInfo:'>
<arg declared_type64='BOOL' index='0' name='acceptsGlyphInfo' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='allowedInputSourceLocales' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedKeyboardInputSource:'>
<arg declared_type64='NSTextInputSourceIdentifier _Nullable' index='0' name='selectedKeyboardInputSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSTextList'>
<method selector='initWithMarkerFormat:options:'>
<arg declared_type64='NSTextListMarkerFormat _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='mask' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='listOptions'>
<retval declared_type64='NSTextListOptions' type64='Q'/>
</method>
<method selector='markerForItemNumber:'>
<arg declared_type64='NSInteger' index='0' name='itemNum' type64='q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='markerFormat'>
<retval declared_type64='NSTextListMarkerFormat _Nonnull' type64='@'/>
</method>
<method selector='setStartingItemNumber:'>
<arg declared_type64='NSInteger' index='0' name='startingItemNumber' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startingItemNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</class>
<class name='NSTextStorage'>
<method selector='addLayoutManager:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='aLayoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='attributeRuns'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='changeInLength'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='characters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='edited:range:changeInLength:'>
<arg declared_type64='NSTextStorageEditActions' index='0' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='1' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='2' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='editedMask'>
<retval declared_type64='NSTextStorageEditActions' type64='Q'/>
</method>
<method selector='editedRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='ensureAttributesAreFixedInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fixesAttributesLazily'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='font'>
<retval declared_type64='NSFont * _Nullable' type64='@'/>
</method>
<method selector='foregroundColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method selector='invalidateAttributesInRange:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManagers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='paragraphs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='processEditing'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeLayoutManager:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='aLayoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributeRuns:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='attributeRuns' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCharacters:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='characters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFont:'>
<arg declared_type64='NSFont * _Nullable' index='0' name='font' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setForegroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='foregroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphs:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='paragraphs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWords:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='words' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='words'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTextTab'>
<method selector='alignment'>
<retval declared_type64='NSTextAlignment' type64='q'/>
</method>
<method class_method='true' selector='columnTerminatorsForLocale:'>
<arg declared_type64='NSLocale * _Nullable' index='0' name='aLocale' type64='@'/>
<retval declared_type64='NSCharacterSet * _Nonnull' type64='@'/>
</method>
<method selector='initWithTextAlignment:location:options:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<arg declared_type64='CGFloat' index='1' name='loc' type64='d'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithType:location:'>
<arg declared_type64='NSTextTabType' index='0' name='type' type64='Q'/>
<arg declared_type64='CGFloat' index='1' name='loc' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='location'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='options'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='tabStopType'>
<retval declared_type64='NSTextTabType' type64='Q'/>
</method>
</class>
<class name='NSTextTable'>
<method selector='boundsRectForBlock:contentRect:inRect:textContainer:characterRange:'>
<arg declared_type64='NSTextTableBlock * _Nonnull' index='0' name='block' type64='@'/>
<arg declared_type64='NSRect' index='1' name='contentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='3' name='textContainer' type64='@'/>
<arg declared_type64='NSRange' index='4' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='collapsesBorders'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:'>
<arg declared_type64='NSTextTableBlock * _Nonnull' index='0' name='block' type64='@'/>
<arg declared_type64='NSRect' index='1' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='controlView' type64='@'/>
<arg declared_type64='NSRange' index='3' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSLayoutManager * _Nonnull' index='4' name='layoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hidesEmptyCells'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutAlgorithm'>
<retval declared_type64='NSTextTableLayoutAlgorithm' type64='Q'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:'>
<arg declared_type64='NSTextTableBlock * _Nonnull' index='0' name='block' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='startingPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='3' name='textContainer' type64='@'/>
<arg declared_type64='NSRange' index='4' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setCollapsesBorders:'>
<arg declared_type64='BOOL' index='0' name='collapsesBorders' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidesEmptyCells:'>
<arg declared_type64='BOOL' index='0' name='hidesEmptyCells' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutAlgorithm:'>
<arg declared_type64='NSTextTableLayoutAlgorithm' index='0' name='layoutAlgorithm' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfColumns:'>
<arg declared_type64='NSUInteger' index='0' name='numberOfColumns' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSTextTableBlock'>
<method selector='columnSpan'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='initWithTable:startingRow:rowSpan:startingColumn:columnSpan:'>
<arg declared_type64='NSTextTable * _Nonnull' index='0' name='table' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='rowSpan' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='col' type64='q'/>
<arg declared_type64='NSInteger' index='4' name='colSpan' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='rowSpan'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='startingColumn'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='startingRow'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='table'>
<retval declared_type64='NSTextTable * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTextView'>
<method selector='acceptableDragTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='acceptsGlyphInfo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='alignJustified:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowedInputSourceLocales'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='allowsCharacterPickerTouchBarItem'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsDocumentBackgroundColorChange'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsImageEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsUndo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='breakUndoCoalescing'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='candidateListTouchBarItem'>
<retval declared_type64='NSCandidateListTouchBarItem * _Nullable' type64='@'/>
</method>
<method selector='changeAttributes:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeColor:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeDocumentBackgroundColor:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeLayoutOrientation:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='characterIndexForInsertionAtPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='checkTextInDocument:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='checkTextInRange:types:options:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextCheckingTypes' index='1' name='checkingTypes' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='checkTextInSelection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cleanUpAfterDragOperation'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='clickedOnLink:atIndex:'>
<arg declared_type64='id _Nonnull' index='0' name='link' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='complete:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='completionsForPartialWordRange:indexOfSelectedItem:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger * _Nonnull' index='1' name='index' type64='^q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='defaultParagraphStyle'>
<retval declared_type64='NSParagraphStyle * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='didChangeText'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displaysLinkToolTips'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dragImageForSelectionWithEvent:origin:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nullable' index='1' name='origin' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='dragOperationForDraggingInfo:type:'>
<arg declared_type64='id _Nonnull' index='0' name='dragInfo' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='dragSelectionWithEvent:offset:slideBack:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='NSSize' index='1' name='mouseOffset' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='2' name='slideBack' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawInsertionPointInRect:color:turnedOn:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSColor * _Nonnull' index='1' name='color' type64='@'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawViewBackgroundInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawsBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='enabledTextCheckingTypes'>
<retval declared_type64='NSTextCheckingTypes' type64='Q'/>
</method>
<method class_method='true' selector='fieldEditor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='handleTextCheckingResults:forRange:types:options:orthography:wordCount:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='results' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextCheckingTypes' index='2' name='checkingTypes' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='options' type64='@'/>
<arg declared_type64='NSOrthography * _Nonnull' index='4' name='orthography' type64='@'/>
<arg declared_type64='NSInteger' index='5' name='wordCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='importsGraphics'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFrame:textContainer:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='container' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertCompletion:forPartialWordRange:movement:isFinal:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='word' type64='@'/>
<arg declared_type64='NSRange' index='1' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='2' name='movement' type64='q'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertText:'>
<arg declared_type64='id _Nonnull' index='0' name='insertString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertionPointColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='invalidateTextContainerOrigin'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isAutomaticDashSubstitutionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticDataDetectionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticLinkDetectionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticQuoteSubstitutionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticSpellingCorrectionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticTextCompletionEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAutomaticTextReplacementEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCoalescingUndo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isContinuousSpellCheckingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEditable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFieldEditor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isGrammarCheckingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isIncrementalSearchingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRichText'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRulerVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager'>
<retval declared_type64='NSLayoutManager * _Nullable' type64='@'/>
</method>
<method selector='linkTextAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='loosenKerning:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lowerBaseline:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedTextAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='orderFrontLinkPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontListPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontSharingServicePicker:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontSpacingPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontSubstitutionsPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontTablePanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outline:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteAsPlainText:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteAsRichText:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performFindPanelAction:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performValidatedReplacementInRange:withAttributedString:'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSAttributedString * _Nonnull' index='1' name='attributedString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preferredPasteboardTypeFromArray:restrictedToTypesFromArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='availableTypes' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='allowedTypes' type64='@'/>
<retval declared_type64='NSPasteboardType _Nullable' type64='@'/>
</method>
<method selector='quickLookPreviewableItemsInRanges:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='ranges' type64='@'/>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='raiseBaseline:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rangeForUserCharacterAttributeChange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeForUserCompletion'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeForUserParagraphAttributeChange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeForUserTextChange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangesForUserCharacterAttributeChange'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='rangesForUserParagraphAttributeChange'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='rangesForUserTextChange'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='readSelectionFromPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readSelectionFromPasteboard:type:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readablePasteboardTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='registerForServices'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceTextContainer:'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='newContainer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:didAddMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:didMoveMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:didRemoveMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:handleMouseDown:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:shouldAddMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rulerView:shouldMoveMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rulerView:shouldRemoveMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rulerView:willAddMarker:atLocation:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<arg declared_type64='CGFloat' index='2' name='location' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rulerView:willMoveMarker:toLocation:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<arg declared_type64='CGFloat' index='2' name='location' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='scrollableDocumentContentTextView'>
<retval declared_type64='NSScrollView * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='scrollablePlainDocumentContentTextView'>
<retval declared_type64='NSScrollView * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='scrollableTextView'>
<retval declared_type64='NSScrollView * _Nonnull' type64='@'/>
</method>
<method selector='selectedRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selectedTextAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='selectionAffinity'>
<retval declared_type64='NSSelectionAffinity' type64='Q'/>
</method>
<method selector='selectionGranularity'>
<retval declared_type64='NSSelectionGranularity' type64='Q'/>
</method>
<method selector='selectionRangeForProposedRange:granularity:'>
<arg declared_type64='NSRange' index='0' name='proposedCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSSelectionGranularity' index='1' name='granularity' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='setAcceptsGlyphInfo:'>
<arg declared_type64='BOOL' index='0' name='acceptsGlyphInfo' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlignment:range:'>
<arg declared_type64='NSTextAlignment' index='0' name='alignment' type64='q'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='allowedInputSourceLocales' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsCharacterPickerTouchBarItem:'>
<arg declared_type64='BOOL' index='0' name='allowsCharacterPickerTouchBarItem' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsDocumentBackgroundColorChange:'>
<arg declared_type64='BOOL' index='0' name='allowsDocumentBackgroundColorChange' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsImageEditing:'>
<arg declared_type64='BOOL' index='0' name='allowsImageEditing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsUndo:'>
<arg declared_type64='BOOL' index='0' name='allowsUndo' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticDashSubstitutionEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticDashSubstitutionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticDataDetectionEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticDataDetectionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticLinkDetectionEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticLinkDetectionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticQuoteSubstitutionEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticQuoteSubstitutionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticSpellingCorrectionEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticSpellingCorrectionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticTextCompletionEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticTextCompletionEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutomaticTextReplacementEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticTextReplacementEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBaseWritingDirection:range:'>
<arg declared_type64='NSWritingDirection' index='0' name='writingDirection' type64='q'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setConstrainedFrameSize:'>
<arg declared_type64='NSSize' index='0' name='desiredSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContinuousSpellCheckingEnabled:'>
<arg declared_type64='BOOL' index='0' name='continuousSpellCheckingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultParagraphStyle:'>
<arg declared_type64='NSParagraphStyle * _Nullable' index='0' name='defaultParagraphStyle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDisplaysLinkToolTips:'>
<arg declared_type64='BOOL' index='0' name='displaysLinkToolTips' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type64='BOOL' index='0' name='drawsBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type64='BOOL' index='0' name='editable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabledTextCheckingTypes:'>
<arg declared_type64='NSTextCheckingTypes' index='0' name='enabledTextCheckingTypes' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFieldEditor:'>
<arg declared_type64='BOOL' index='0' name='fieldEditor' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGrammarCheckingEnabled:'>
<arg declared_type64='BOOL' index='0' name='grammarCheckingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImportsGraphics:'>
<arg declared_type64='BOOL' index='0' name='importsGraphics' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIncrementalSearchingEnabled:'>
<arg declared_type64='BOOL' index='0' name='incrementalSearchingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInsertionPointColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='insertionPointColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutOrientation:'>
<arg declared_type64='NSTextLayoutOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLinkTextAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='linkTextAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarkedTextAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='markedTextAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplayInRect:avoidAdditionalLayout:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRichText:'>
<arg declared_type64='BOOL' index='0' name='richText' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRulerVisible:'>
<arg declared_type64='BOOL' index='0' name='rulerVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type64='BOOL' index='0' name='selectable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedRange:affinity:stillSelecting:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSSelectionAffinity' index='1' name='affinity' type64='Q'/>
<arg declared_type64='BOOL' index='2' name='stillSelectingFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedRanges:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='selectedRanges' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedRanges:affinity:stillSelecting:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='ranges' type64='@'/>
<arg declared_type64='NSSelectionAffinity' index='1' name='affinity' type64='Q'/>
<arg declared_type64='BOOL' index='2' name='stillSelectingFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedTextAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='selectedTextAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionGranularity:'>
<arg declared_type64='NSSelectionGranularity' index='0' name='selectionGranularity' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmartInsertDeleteEnabled:'>
<arg declared_type64='BOOL' index='0' name='smartInsertDeleteEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpellingState:range:'>
<arg declared_type64='NSInteger' index='0' name='value' type64='q'/>
<arg declared_type64='NSRange' index='1' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextContainer:'>
<arg declared_type64='NSTextContainer * _Nullable' index='0' name='textContainer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextContainerInset:'>
<arg declared_type64='NSSize' index='0' name='textContainerInset' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTypingAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='typingAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesAdaptiveColorMappingForDarkAppearance:'>
<arg declared_type64='BOOL' index='0' name='usesAdaptiveColorMappingForDarkAppearance' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFindBar:'>
<arg declared_type64='BOOL' index='0' name='usesFindBar' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFindPanel:'>
<arg declared_type64='BOOL' index='0' name='usesFindPanel' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFontPanel:'>
<arg declared_type64='BOOL' index='0' name='usesFontPanel' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesInspectorBar:'>
<arg declared_type64='BOOL' index='0' name='usesInspectorBar' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesRolloverButtonForSelection:'>
<arg declared_type64='BOOL' index='0' name='usesRolloverButtonForSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesRuler:'>
<arg declared_type64='BOOL' index='0' name='usesRuler' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldChangeTextInRange:replacementString:'>
<arg declared_type64='NSRange' index='0' name='affectedCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nullable' index='1' name='replacementString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldChangeTextInRanges:replacementStrings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='affectedRanges' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='replacementStrings' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldDrawInsertionPoint'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showFindIndicatorForRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='smartDeleteRangeForProposedRange:'>
<arg declared_type64='NSRange' index='0' name='proposedCharRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='smartInsertAfterStringForString:replacingRange:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='pasteString' type64='@'/>
<arg declared_type64='NSRange' index='1' name='charRangeToReplace' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='smartInsertBeforeStringForString:replacingRange:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='pasteString' type64='@'/>
<arg declared_type64='NSRange' index='1' name='charRangeToReplace' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='smartInsertDeleteEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='smartInsertForString:replacingRange:beforeString:afterString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='pasteString' type64='@'/>
<arg declared_type64='NSRange' index='1' name='charRangeToReplace' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nullable * _Nullable' index='2' name='beforeString' type64='^@'/>
<arg declared_type64='NSString * _Nullable * _Nullable' index='3' name='afterString' type64='^@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='spellCheckerDocumentTag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='startSpeaking:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopSpeaking:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='stronglyReferencesTextStorage'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textContainer'>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method selector='textContainerInset'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='textContainerOrigin'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='textStorage'>
<retval declared_type64='NSTextStorage * _Nullable' type64='@'/>
</method>
<method selector='tightenKerning:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleAutomaticDashSubstitution:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleAutomaticDataDetection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleAutomaticLinkDetection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleAutomaticQuoteSubstitution:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleAutomaticSpellingCorrection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleAutomaticTextCompletion:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleAutomaticTextReplacement:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleBaseWritingDirection:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleContinuousSpellChecking:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleGrammarChecking:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleQuickLookPreviewPanel:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleSmartInsertDelete:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleTraditionalCharacterShape:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='turnOffKerning:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='turnOffLigatures:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='typingAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='updateCandidates'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateDragTypeRegistration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateFontPanel'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateInsertionPointStateAndRestartTimer:'>
<arg declared_type64='BOOL' index='0' name='restartFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateQuickLookPreviewPanel'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateRuler'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateTextTouchBarItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateTouchBarItemIdentifiers'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='useAllLigatures:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='useStandardKerning:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='useStandardLigatures:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='usesAdaptiveColorMappingForDarkAppearance'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesFindBar'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesFindPanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesFontPanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesInspectorBar'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesRolloverButtonForSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='usesRuler'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg declared_type64='NSPasteboardType _Nullable' index='0' name='sendType' type64='@'/>
<arg declared_type64='NSPasteboardType _Nullable' index='1' name='returnType' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='writablePasteboardTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='writeSelectionToPasteboard:type:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeSelectionToPasteboard:types:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='types' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSTintConfiguration'>
<method selector='adaptsToUserAccentColor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='baseTintColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='defaultTintConfiguration'>
<retval declared_type64='NSTintConfiguration * _Nonnull' type64='@'/>
</method>
<method selector='equivalentContentTintColor'>
<retval declared_type64='NSColor * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='monochromeTintConfiguration'>
<retval declared_type64='NSTintConfiguration * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='tintConfigurationWithFixedColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='tintConfigurationWithPreferredColor:'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTitlebarAccessoryViewController'>
<method selector='automaticallyAdjustsSize'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='fullScreenMinHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutAttribute'>
<retval declared_type64='NSLayoutAttribute' type64='q'/>
</method>
<method selector='setAutomaticallyAdjustsSize:'>
<arg declared_type64='BOOL' index='0' name='automaticallyAdjustsSize' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullScreenMinHeight:'>
<arg declared_type64='CGFloat' index='0' name='fullScreenMinHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayoutAttribute:'>
<arg declared_type64='NSLayoutAttribute' index='0' name='layoutAttribute' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidAppear'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidDisappear'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillAppear'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSTokenField'>
<method selector='completionDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='defaultCompletionDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='defaultTokenizingCharacterSet'>
<retval declared_type64='NSCharacterSet * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setCompletionDelay:'>
<arg declared_type64='NSTimeInterval' index='0' name='completionDelay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTokenStyle:'>
<arg declared_type64='NSTokenStyle' index='0' name='tokenStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTokenizingCharacterSet:'>
<arg declared_type64='NSCharacterSet * _Nullable' index='0' name='tokenizingCharacterSet' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tokenStyle'>
<retval declared_type64='NSTokenStyle' type64='Q'/>
</method>
<method selector='tokenizingCharacterSet'>
<retval declared_type64='NSCharacterSet * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTokenFieldCell'>
<method selector='completionDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='defaultCompletionDelay'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='defaultTokenizingCharacterSet'>
<retval declared_type64='NSCharacterSet * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setCompletionDelay:'>
<arg declared_type64='NSTimeInterval' index='0' name='completionDelay' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTokenStyle:'>
<arg declared_type64='NSTokenStyle' index='0' name='tokenStyle' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTokenizingCharacterSet:'>
<arg declared_type64='NSCharacterSet * _Nullable' index='0' name='tokenizingCharacterSet' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tokenStyle'>
<retval declared_type64='NSTokenStyle' type64='Q'/>
</method>
<method selector='tokenizingCharacterSet'>
<retval declared_type64='NSCharacterSet * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSToolbar'>
<method selector='allowsExtensionItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsUserCustomization'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autosavesConfiguration'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='centeredItemIdentifier'>
<retval declared_type64='NSToolbarItemIdentifier _Nullable' type64='@'/>
</method>
<method selector='configurationDictionary'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='customizationPaletteIsRunning'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='displayMode'>
<retval declared_type64='NSToolbarDisplayMode' type64='Q'/>
</method>
<method selector='fullScreenAccessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='fullScreenAccessoryViewMaxHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='fullScreenAccessoryViewMinHeight'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSToolbarIdentifier _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type64='NSToolbarIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertItemWithItemIdentifier:atIndex:'>
<arg declared_type64='NSToolbarItemIdentifier _Nonnull' index='0' name='itemIdentifier' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runCustomizationPalette:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedItemIdentifier'>
<retval declared_type64='NSToolbarItemIdentifier _Nullable' type64='@'/>
</method>
<method selector='setAllowsExtensionItems:'>
<arg declared_type64='BOOL' index='0' name='allowsExtensionItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsUserCustomization:'>
<arg declared_type64='BOOL' index='0' name='allowsUserCustomization' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutosavesConfiguration:'>
<arg declared_type64='BOOL' index='0' name='autosavesConfiguration' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCenteredItemIdentifier:'>
<arg declared_type64='NSToolbarItemIdentifier _Nullable' index='0' name='centeredItemIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setConfigurationFromDictionary:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='configDict' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDisplayMode:'>
<arg declared_type64='NSToolbarDisplayMode' index='0' name='displayMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullScreenAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='fullScreenAccessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullScreenAccessoryViewMaxHeight:'>
<arg declared_type64='CGFloat' index='0' name='fullScreenAccessoryViewMaxHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFullScreenAccessoryViewMinHeight:'>
<arg declared_type64='CGFloat' index='0' name='fullScreenAccessoryViewMinHeight' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedItemIdentifier:'>
<arg declared_type64='NSToolbarItemIdentifier _Nullable' index='0' name='selectedItemIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsBaselineSeparator:'>
<arg declared_type64='BOOL' index='0' name='showsBaselineSeparator' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSizeMode:'>
<arg declared_type64='NSToolbarSizeMode' index='0' name='sizeMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type64='BOOL' index='0' name='visible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showsBaselineSeparator'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sizeMode'>
<retval declared_type64='NSToolbarSizeMode' type64='Q'/>
</method>
<method selector='validateVisibleItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='visibleItems'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='NSToolbarItem'>
<method selector='action'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='allowsDuplicatesInToolbar'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autovalidates'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='image'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='initWithItemIdentifier:'>
<arg declared_type64='NSToolbarItemIdentifier _Nonnull' index='0' name='itemIdentifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isBordered'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isNavigational'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemIdentifier'>
<retval declared_type64='NSToolbarItemIdentifier _Nonnull' type64='@'/>
</method>
<method selector='label'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='maxSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='menuFormRepresentation'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='minSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='paletteLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='setAction:'>
<arg declared_type64='SEL _Nullable' index='0' name='action' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutovalidates:'>
<arg declared_type64='BOOL' index='0' name='autovalidates' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type64='BOOL' index='0' name='bordered' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxSize:'>
<arg declared_type64='NSSize' index='0' name='maxSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMenuFormRepresentation:'>
<arg declared_type64='NSMenuItem * _Nullable' index='0' name='menuFormRepresentation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type64='NSSize' index='0' name='minSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNavigational:'>
<arg declared_type64='BOOL' index='0' name='navigational' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPaletteLabel:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='paletteLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type64='id _Nullable' index='0' name='target' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTip' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVisibilityPriority:'>
<arg declared_type64='NSToolbarItemVisibilityPriority' index='0' name='visibilityPriority' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='target'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='toolTip'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='toolbar'>
<retval declared_type64='NSToolbar * _Nullable' type64='@'/>
</method>
<method selector='validate'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='visibilityPriority'>
<retval declared_type64='NSToolbarItemVisibilityPriority' type64='q'/>
</method>
</class>
<class name='NSToolbarItemGroup'>
<method selector='controlRepresentation'>
<retval declared_type64='NSToolbarItemGroupControlRepresentation' type64='q'/>
</method>
<method class_method='true' selector='groupWithItemIdentifier:images:selectionMode:labels:target:action:'>
<arg declared_type64='NSToolbarItemIdentifier _Nonnull' index='0' name='itemIdentifier' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='images' type64='@'/>
<arg declared_type64='NSToolbarItemGroupSelectionMode' index='2' name='selectionMode' type64='q'/>
<arg declared_type64='NSArray * _Nullable' index='3' name='labels' type64='@'/>
<arg declared_type64='id _Nullable' index='4' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='5' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='groupWithItemIdentifier:titles:selectionMode:labels:target:action:'>
<arg declared_type64='NSToolbarItemIdentifier _Nonnull' index='0' name='itemIdentifier' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='titles' type64='@'/>
<arg declared_type64='NSToolbarItemGroupSelectionMode' index='2' name='selectionMode' type64='q'/>
<arg declared_type64='NSArray * _Nullable' index='3' name='labels' type64='@'/>
<arg declared_type64='id _Nullable' index='4' name='target' type64='@'/>
<arg declared_type64='SEL _Nullable' index='5' name='action' type64=':'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isSelectedAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectedIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='selectionMode'>
<retval declared_type64='NSToolbarItemGroupSelectionMode' type64='q'/>
</method>
<method selector='setControlRepresentation:'>
<arg declared_type64='NSToolbarItemGroupControlRepresentation' index='0' name='controlRepresentation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelected:atIndex:'>
<arg declared_type64='BOOL' index='0' name='selected' type64='B'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedIndex:'>
<arg declared_type64='NSInteger' index='0' name='selectedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionMode:'>
<arg declared_type64='NSToolbarItemGroupSelectionMode' index='0' name='selectionMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubitems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='subitems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='subitems'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTouch'>
<method selector='device'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deviceSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='identity'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='isResting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='locationInView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='normalizedPosition'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='phase'>
<retval declared_type64='NSTouchPhase' type64='Q'/>
</method>
<method selector='previousLocationInView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='view' type64='@'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='type'>
<retval declared_type64='NSTouchType' type64='q'/>
</method>
</class>
<class name='NSTouchBar'>
<method selector='customizationAllowedItemIdentifiers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='customizationIdentifier'>
<retval declared_type64='NSTouchBarCustomizationIdentifier _Nullable' type64='@'/>
</method>
<method selector='customizationRequiredItemIdentifiers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='defaultItemIdentifiers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='escapeKeyReplacementItemIdentifier'>
<retval declared_type64='NSTouchBarItemIdentifier _Nullable' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='isAutomaticCustomizeTouchBarMenuItemEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='itemForIdentifier:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='__kindof NSTouchBarItem * _Nullable' type64='@'/>
</method>
<method selector='itemIdentifiers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='principalItemIdentifier'>
<retval declared_type64='NSTouchBarItemIdentifier _Nullable' type64='@'/>
</method>
<method class_method='true' selector='setAutomaticCustomizeTouchBarMenuItemEnabled:'>
<arg declared_type64='BOOL' index='0' name='automaticCustomizeTouchBarMenuItemEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationAllowedItemIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='customizationAllowedItemIdentifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationIdentifier:'>
<arg declared_type64='NSTouchBarCustomizationIdentifier _Nullable' index='0' name='customizationIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomizationRequiredItemIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='customizationRequiredItemIdentifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultItemIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='defaultItemIdentifiers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEscapeKeyReplacementItemIdentifier:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nullable' index='0' name='escapeKeyReplacementItemIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrincipalItemIdentifier:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nullable' index='0' name='principalItemIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTemplateItems:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='templateItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='templateItems'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTouchBarItem'>
<method selector='customizationLabel'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSTouchBarItemIdentifier _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setVisibilityPriority:'>
<arg declared_type64='NSTouchBarItemPriority' index='0' name='visibilityPriority' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='viewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='visibilityPriority'>
<retval declared_type64='NSTouchBarItemPriority' type64='f'/>
</method>
</class>
<class name='NSTrackingArea'>
<method selector='initWithRect:options:owner:userInfo:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTrackingAreaOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='id _Nullable' index='2' name='owner' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='userInfo' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='options'>
<retval declared_type64='NSTrackingAreaOptions' type64='Q'/>
</method>
<method selector='owner'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='rect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='userInfo'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</class>
<class name='NSTrackingSeparatorToolbarItem'>
<method selector='dividerIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setDividerIndex:'>
<arg declared_type64='NSInteger' index='0' name='dividerIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSplitView:'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='splitView'>
<retval declared_type64='NSSplitView * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='trackingSeparatorToolbarItemWithIdentifier:splitView:dividerIndex:'>
<arg declared_type64='NSToolbarItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSSplitView * _Nonnull' index='1' name='splitView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTreeController'>
<method selector='add:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addChild:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addSelectionIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='alwaysUsesMultipleValuesMarker'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='arrangedObjects'>
<retval declared_type64='NSTreeNode * _Nonnull' type64='@'/>
</method>
<method selector='avoidsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canAddChild'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canInsert'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canInsertChild'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='childrenKeyPath'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='childrenKeyPathForNode:'>
<arg declared_type64='NSTreeNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='content'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='countKeyPath'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='countKeyPathForNode:'>
<arg declared_type64='NSTreeNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='insert:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertChild:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertObject:atArrangedObjectIndexPath:'>
<arg declared_type64='id _Nullable' index='0' name='object' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertObjects:atArrangedObjectIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='objects' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='leafKeyPath'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='leafKeyPathForNode:'>
<arg declared_type64='NSTreeNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='moveNode:toIndexPath:'>
<arg declared_type64='NSTreeNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveNodes:toIndexPath:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='nodes' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='startingIndexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preservesSelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rearrangeObjects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='remove:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeObjectAtArrangedObjectIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeObjectsAtArrangedObjectIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeSelectionIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectedNodes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selectedObjects'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selectionIndexPath'>
<retval declared_type64='NSIndexPath * _Nullable' type64='@'/>
</method>
<method selector='selectionIndexPaths'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selectsInsertedObjects'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAlwaysUsesMultipleValuesMarker:'>
<arg declared_type64='BOOL' index='0' name='alwaysUsesMultipleValuesMarker' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAvoidsEmptySelection:'>
<arg declared_type64='BOOL' index='0' name='avoidsEmptySelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setChildrenKeyPath:'>
<arg declared_type64='NSString * _Nullable' index='0' name='childrenKeyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContent:'>
<arg declared_type64='id _Nullable' index='0' name='content' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCountKeyPath:'>
<arg declared_type64='NSString * _Nullable' index='0' name='countKeyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLeafKeyPath:'>
<arg declared_type64='NSString * _Nullable' index='0' name='leafKeyPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreservesSelection:'>
<arg declared_type64='BOOL' index='0' name='preservesSelection' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectionIndexPath:'>
<arg declared_type64='NSIndexPath * _Nullable' index='0' name='indexPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setSelectionIndexPaths:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='indexPaths' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setSelectsInsertedObjects:'>
<arg declared_type64='BOOL' index='0' name='selectsInsertedObjects' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sortDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortDescriptors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTreeNode'>
<method selector='childNodes'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='descendantNodeAtIndexPath:'>
<arg declared_type64='NSIndexPath * _Nonnull' index='0' name='indexPath' type64='@'/>
<retval declared_type64='NSTreeNode * _Nullable' type64='@'/>
</method>
<method selector='indexPath'>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='initWithRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='modelObject' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isLeaf'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mutableChildNodes'>
<retval declared_type64='NSMutableArray * _Nonnull' type64='@'/>
</method>
<method selector='parentNode'>
<retval declared_type64='NSTreeNode * _Nullable' type64='@'/>
</method>
<method selector='representedObject'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='sortWithSortDescriptors:recursively:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='sortDescriptors' type64='@'/>
<arg declared_type64='BOOL' index='1' name='recursively' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='treeNodeWithRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='modelObject' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSTypesetter'>
<method selector='actionForControlCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='NSTypesetterControlCharacterAction' type64='Q'/>
</method>
<method selector='attributedString'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='attributesForExtraLineFragment'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='baselineOffsetInLayoutManager:glyphIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutMgr' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='beginLineWithGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginParagraph'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bidiProcessingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='textContainer' type64='@'/>
<arg declared_type64='NSRect' index='2' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' index='3' name='glyphPosition' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='4' name='charIndex' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualGlyphRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='currentParagraphStyle'>
<retval declared_type64='NSParagraphStyle * _Nullable' type64='@'/>
</method>
<method selector='currentTextContainer'>
<retval declared_type64='NSTextContainer * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='defaultTypesetterBehavior'>
<retval declared_type64='NSTypesetterBehavior' type64='q'/>
</method>
<method selector='deleteGlyphsInRange:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endLineWithGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='lineGlyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endParagraph'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
<arg declared_type64='NSRange' index='0' name='glyphsRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSGlyph * _Null_unspecified' index='1' name='glyphBuffer' type64='^I'/>
<arg declared_type64='NSUInteger * _Null_unspecified' index='2' name='charIndexBuffer' type64='^Q'/>
<arg declared_type64='NSGlyphInscription * _Null_unspecified' index='3' name='inscribeBuffer' type64='^Q'/>
<arg declared_type64='BOOL * _Null_unspecified' index='4' name='elasticBuffer' type64='^B'/>
<arg declared_type64='unsigned char * _Null_unspecified' index='5' name='bidiLevelBuffer' type64='*'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
<arg declared_type64='NSRectPointer _Nonnull' index='0' name='lineFragmentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRectPointer _Nonnull' index='1' name='lineFragmentUsedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='2' name='paragraphSeparatorGlyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSPoint' index='3' name='lineOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:'>
<arg declared_type64='NSRectPointer _Null_unspecified' index='0' name='lineFragmentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRectPointer _Null_unspecified' index='1' name='lineFragmentUsedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRectPointer _Null_unspecified' index='2' name='remainingRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='3' name='startingGlyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='4' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' index='5' name='lineSpacing' type64='d'/>
<arg declared_type64='CGFloat' index='6' name='paragraphSpacingBefore' type64='d'/>
<arg declared_type64='CGFloat' index='7' name='paragraphSpacingAfter' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg declared_type64='NSRange' index='0' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='hyphenCharacterForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='UTF32Char' type64='I'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='hyphenationFactorForGlyphAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='insertGlyph:atGlyphIndex:characterIndex:'>
<arg declared_type64='NSGlyph' index='0' name='glyph' type64='I'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='characterIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:'>
<arg declared_type64='NSRange' index='0' name='characterRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSLayoutManager * _Nonnull' index='1' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='maxNumLines' type64='Q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='startGlyphIndex' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='maxNumLines' type64='Q'/>
<arg declared_type64='NSUInteger * _Nonnull' index='3' name='nextGlyph' type64='^Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManager'>
<retval declared_type64='NSLayoutManager * _Nullable' type64='@'/>
</method>
<method selector='layoutParagraphAtPoint:'>
<arg declared_type64='NSPointPointer _Nonnull' index='0' name='lineFragmentOrigin' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='lineFragmentPadding'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphCharacterRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphGlyphRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSeparatorCharacterRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSeparatorGlyphRange'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type64='NSUInteger' index='0' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutMgr' type64='@'/>
<arg declared_type64='NSRange' index='1' name='nominallySpacedGlyphsRange' type64='{_NSRange=QQ}'/>
<arg const='true' declared_type64='unsigned char * _Nonnull' index='2' name='packedGlyphs' type64='*'/>
<arg declared_type64='NSUInteger' index='3' name='packedGlyphsCount' type64='Q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg declared_type64='NSSize' index='0' name='attachmentSize' type64='{CGSize=dd}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedString:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBidiLevels:forGlyphRange:'>
<arg const='true' declared_type64='uint8_t * _Null_unspecified' index='0' name='levels' type64='*'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBidiProcessingEnabled:'>
<arg declared_type64='BOOL' index='0' name='bidiProcessingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHardInvalidation:forGlyphRange:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type64='float' index='0' name='hyphenationFactor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg declared_type64='CGFloat' index='0' name='lineFragmentPadding' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg declared_type64='NSRect' index='0' name='fragmentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRect' index='2' name='usedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat' index='3' name='baselineOffset' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
<arg declared_type64='NSPoint' index='0' name='location' type64='{CGPoint=dd}'/>
<arg const='true' declared_type64='CGFloat * _Null_unspecified' index='1' name='advancements' type64='^d'/>
<arg declared_type64='NSRange' index='2' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNotShownAttribute:forGlyphRange:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParagraphGlyphRange:separatorGlyphRange:'>
<arg declared_type64='NSRange' index='0' name='paragraphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='1' name='paragraphSeparatorRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg declared_type64='NSTypesetterBehavior' index='0' name='typesetterBehavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsesFontLeading:'>
<arg declared_type64='BOOL' index='0' name='usesFontLeading' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedSystemTypesetter'>
<retval declared_type64='__kindof NSTypesetter * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sharedSystemTypesetterForBehavior:'>
<arg declared_type64='NSTypesetterBehavior' index='0' name='behavior' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='substituteFontForFont:'>
<arg declared_type64='NSFont * _Nonnull' index='0' name='originalFont' type64='@'/>
<retval declared_type64='NSFont * _Nonnull' type64='@'/>
</method>
<method selector='substituteGlyphsInRange:withGlyphs:'>
<arg declared_type64='NSRange' index='0' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSGlyph * _Null_unspecified' index='1' name='glyphs' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textContainers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
<arg declared_type64='CGFloat' index='0' name='glyphLocation' type64='d'/>
<arg declared_type64='NSWritingDirection' index='1' name='direction' type64='q'/>
<arg declared_type64='CGFloat' index='2' name='maxLocation' type64='d'/>
<retval declared_type64='NSTextTab * _Nullable' type64='@'/>
</method>
<method selector='typesetterBehavior'>
<retval declared_type64='NSTypesetterBehavior' type64='q'/>
</method>
<method selector='usesFontLeading'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg declared_type64='NSRectPointer _Nonnull' index='0' name='lineRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRange' index='1' name='glyphRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRectPointer _Nonnull' index='2' name='usedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat * _Nonnull' index='3' name='baselineOffset' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSURL'>
<method class_method='true' selector='URLFromPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteBoard' type64='@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='writeToPasteboard:'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteBoard' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSUserDefaultsController'>
<method selector='appliesImmediately'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='defaults'>
<retval declared_type64='NSUserDefaults * _Nonnull' type64='@'/>
</method>
<method selector='hasUnappliedChanges'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithDefaults:initialValues:'>
<arg declared_type64='NSUserDefaults * _Nullable' index='0' name='defaults' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='initialValues' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initialValues'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='revert:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='revertToInitialValues:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='save:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppliesImmediately:'>
<arg declared_type64='BOOL' index='0' name='appliesImmediately' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInitialValues:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='initialValues' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='sharedUserDefaultsController'>
<retval declared_type64='NSUserDefaultsController * _Nonnull' type64='@'/>
</method>
<method selector='values'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</class>
<class name='NSUserInterfaceCompressionOptions'>
<method class_method='true' selector='breakEqualWidthsOption'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method selector='containsOptions:'>
<arg declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' index='0' name='options' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='hideImagesOption'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='hideTextOption'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCompressionOptions:'>
<arg declared_type64='NSSet * _Nonnull' index='0' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='intersectsOptions:'>
<arg declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' index='0' name='options' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='optionsByAddingOptions:'>
<arg declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' index='0' name='options' type64='@'/>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method selector='optionsByRemovingOptions:'>
<arg declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' index='0' name='options' type64='@'/>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='reduceMetricsOption'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='standardOptions'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSView'>
<method selector='acceptsFirstMouse:'>
<arg declared_type64='NSEvent * _Nullable' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='acceptsTouchEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='addConstraint:'>
<arg declared_type64='NSLayoutConstraint * _Nonnull' index='0' name='constraint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addCursorRect:cursor:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCursor * _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addLayoutGuide:'>
<arg declared_type64='NSLayoutGuide * _Nonnull' index='0' name='guide' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addSubview:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addSubview:positioned:relativeTo:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSWindowOrderingMode' index='1' name='place' type64='q'/>
<arg declared_type64='NSView * _Nullable' index='2' name='otherView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addToolTipRect:owner:userData:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='1' name='owner' type64='@'/>
<arg declared_type64='void * _Nullable' index='2' name='data' type64='^v'/>
<retval declared_type64='NSToolTipTag' type64='q'/>
</method>
<method selector='addTrackingArea:'>
<arg declared_type64='NSTrackingArea * _Nonnull' index='0' name='trackingArea' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addTrackingRect:owner:userData:assumeInside:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='1' name='owner' type64='@'/>
<arg declared_type64='void * _Nullable' index='2' name='data' type64='^v'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<retval declared_type64='NSTrackingRectTag' type64='q'/>
</method>
<method selector='additionalSafeAreaInsets'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='adjustPageHeightNew:top:bottom:limit:'>
<arg declared_type64='CGFloat * _Nonnull' index='0' name='newBottom' type64='^d'/>
<arg declared_type64='CGFloat' index='1' name='oldTop' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='oldBottom' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='bottomLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='adjustPageWidthNew:left:right:limit:'>
<arg declared_type64='CGFloat * _Nonnull' index='0' name='newRight' type64='^d'/>
<arg declared_type64='CGFloat' index='1' name='oldLeft' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='oldRight' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='rightLimit' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='adjustScroll:'>
<arg declared_type64='NSRect' index='0' name='newVisible' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='alignmentRectForFrame:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='alignmentRectInsets'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='allocateGState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='allowedTouchTypes'>
<retval declared_type64='NSTouchTypeMask' type64='Q'/>
</method>
<method selector='allowsVibrancy'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='alphaValue'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='ancestorSharedWithView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='autoresizesSubviews'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autoresizingMask'>
<retval declared_type64='NSAutoresizingMaskOptions' type64='Q'/>
</method>
<method selector='autoscroll:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundFilters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='backingAlignedRect:options:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSAlignmentOptions' index='1' name='options' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='baselineOffsetFromBottom'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='beginDocument'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginDraggingSessionWithItems:event:source:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='source' type64='@'/>
<retval declared_type64='NSDraggingSession * _Nonnull' type64='@'/>
</method>
<method selector='beginPageInRect:atPlacement:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' index='1' name='location' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='bitmapImageRepForCachingDisplayInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSBitmapImageRep * _Nullable' type64='@'/>
</method>
<method selector='bottomAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='bounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundsRotation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='cacheDisplayInRect:toBitmapImageRep:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSBitmapImageRep * _Nonnull' index='1' name='bitmapImageRep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canBecomeKeyView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canDraw'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canDrawConcurrently'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canDrawSubviewsIntoLayer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='candidateListTouchBarItem'>
<retval declared_type64='NSCandidateListTouchBarItem * _Nullable' type64='@'/>
</method>
<method selector='centerScanRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='centerXAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='centerYAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='compositingFilter'>
<retval declared_type64='CIFilter * _Nullable' type64='@'/>
</method>
<method selector='constraints'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='constraintsAffectingLayoutForOrientation:'>
<arg declared_type64='NSLayoutConstraintOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='contentCompressionResistancePriorityForOrientation:'>
<arg declared_type64='NSLayoutConstraintOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='NSLayoutPriority' type64='f'/>
</method>
<method selector='contentFilters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='contentHuggingPriorityForOrientation:'>
<arg declared_type64='NSLayoutConstraintOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='NSLayoutPriority' type64='f'/>
</method>
<method selector='convertPoint:fromView:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toView:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointFromBacking:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointFromBase:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointFromLayer:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointToBacking:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointToBase:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointToLayer:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromView:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toView:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectFromBacking:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectFromBase:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectFromLayer:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToBacking:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToBase:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToLayer:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertSize:fromView:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='convertSize:toView:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeFromBacking:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeFromBase:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeFromLayer:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeToBacking:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeToBase:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeToLayer:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='dataWithEPSInsideRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='dataWithPDFInsideRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='defaultFocusRingType'>
<retval declared_type64='NSFocusRingType' type64='Q'/>
</method>
<method class_method='true' selector='defaultMenu'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='didAddSubview:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='subview' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didCloseMenu:withEvent:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSEvent * _Nullable' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardCursorRects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='display'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayIfNeededIgnoringOpacity'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayIfNeededInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayIfNeededInRectIgnoringOpacity:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayRectIgnoringOpacity:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayRectIgnoringOpacity:inContext:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSGraphicsContext * _Nonnull' index='1' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dragFile:fromRect:slideBack:event:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filename' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='viewLocation' type64='{CGPoint=dd}'/>
<arg declared_type64='NSSize' index='2' name='initialOffset' type64='{CGSize=dd}'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='4' name='pboard' type64='@'/>
<arg declared_type64='id _Nonnull' index='5' name='sourceObj' type64='@'/>
<arg declared_type64='BOOL' index='6' name='slideFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dragPromisedFilesOfTypes:fromRect:source:slideBack:event:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='typeArray' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='id _Nonnull' index='2' name='sourceObject' type64='@'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<arg declared_type64='NSEvent * _Nonnull' index='4' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawFocusRingMask'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawPageBorderWithSize:'>
<arg declared_type64='NSSize' index='0' name='borderSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawRect:'>
<arg declared_type64='NSRect' index='0' name='dirtyRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawSheetBorderWithSize:'>
<arg declared_type64='NSSize' index='0' name='borderSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enclosingMenuItem'>
<retval declared_type64='NSMenuItem * _Nullable' type64='@'/>
</method>
<method selector='enclosingScrollView'>
<retval declared_type64='NSScrollView * _Nullable' type64='@'/>
</method>
<method selector='endDocument'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endPage'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enterFullScreenMode:withOptions:'>
<arg declared_type64='NSScreen * _Nonnull' index='0' name='screen' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='exerciseAmbiguityInLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='exitFullScreenModeWithOptions:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='options' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstBaselineAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='firstBaselineOffsetFromTop'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='fittingSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='focusRingMaskBounds'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='focusRingType'>
<retval declared_type64='NSFocusRingType' type64='Q'/>
</method>
<method class_method='true' selector='focusView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameCenterRotation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='frameForAlignmentRect:'>
<arg declared_type64='NSRect' index='0' name='alignmentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameRotation'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='gState'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='getRectsBeingDrawn:count:'>
<arg const='true' declared_type64='NSRect * _Nullable * _Nullable' index='0' name='rects' type64='^^{CGRect}'/>
<arg declared_type64='NSInteger * _Nullable' index='1' name='count' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='getRectsExposedDuringLiveResize:count:'>
<arg declared_type64='NSRect*' index='0' name='exposedRects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger * _Nonnull' index='1' name='count' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='heightAdjustLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='heightAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='hitTest:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='inLiveResize'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputContext'>
<retval declared_type64='NSTextInputContext * _Nullable' type64='@'/>
</method>
<method selector='intrinsicContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='invalidateIntrinsicContentSize'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='isCompatibleWithResponsiveScrolling'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDescendantOf:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDrawingFindIndicator'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlipped'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHidden'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHiddenOrHasHiddenAncestor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isHorizontalContentSizeConstraintActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInFullScreenMode'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRotatedFromBase'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRotatedOrScaledFromBase'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVerticalContentSizeConstraintActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='knowsPageRange:'>
<arg declared_type64='NSRangePointer _Nonnull' index='0' name='range' type64='^{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lastBaselineAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='lastBaselineOffsetFromBottom'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layer'>
<retval declared_type64='CALayer * _Nullable' type64='@'/>
</method>
<method selector='layerContentsPlacement'>
<retval declared_type64='NSViewLayerContentsPlacement' type64='q'/>
</method>
<method selector='layerContentsRedrawPolicy'>
<retval declared_type64='NSViewLayerContentsRedrawPolicy' type64='q'/>
</method>
<method selector='layerUsesCoreImageFilters'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutGuides'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='layoutMarginsGuide'>
<retval declared_type64='NSLayoutGuide * _Nonnull' type64='@'/>
</method>
<method selector='layoutSubtreeIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='leadingAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='leftAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='locationOfPrintRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='lockFocus'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lockFocusIfCanDraw'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lockFocusIfCanDrawInContext:'>
<arg declared_type64='NSGraphicsContext * _Nonnull' index='0' name='context' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='makeBackingLayer'>
<retval declared_type64='CALayer * _Nonnull' type64='@'/>
</method>
<method selector='menuForEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='mouse:inRect:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mouseDownCanMoveWindow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='needsDisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='needsLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='needsPanelToBecomeKey'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='needsToDrawRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='needsUpdateConstraints'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nextKeyView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='nextValidKeyView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='noteFocusRingMaskChanged'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='opaqueAncestor'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='pageFooter'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='pageHeader'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='performMnemonic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='postsBoundsChangedNotifications'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='postsFrameChangedNotifications'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareContentInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preparedContentRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='preservesContentDuringLiveResize'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pressureConfiguration'>
<retval declared_type64='NSPressureConfiguration * _Nullable' type64='@'/>
</method>
<method selector='previousKeyView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='previousValidKeyView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='print:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='printJobTitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='rectForPage:'>
<arg declared_type64='NSInteger' index='0' name='page' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForSmartMagnificationAtPoint:inRect:'>
<arg declared_type64='NSPoint' index='0' name='location' type64='{CGPoint=dd}'/>
<arg declared_type64='NSRect' index='1' name='visibleRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectPreservedDuringLiveResize'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='reflectScrolledClipView:'>
<arg declared_type64='NSClipView * _Nonnull' index='0' name='clipView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerForDraggedTypes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='newTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registeredDraggedTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='releaseGState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeAllToolTips'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeConstraint:'>
<arg declared_type64='NSLayoutConstraint * _Nonnull' index='0' name='constraint' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeConstraints:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeCursorRect:cursor:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSCursor * _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeFromSuperview'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeFromSuperviewWithoutNeedingDisplay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeGestureRecognizer:'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeLayoutGuide:'>
<arg declared_type64='NSLayoutGuide * _Nonnull' index='0' name='guide' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeToolTip:'>
<arg declared_type64='NSToolTipTag' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTrackingArea:'>
<arg declared_type64='NSTrackingArea * _Nonnull' index='0' name='trackingArea' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTrackingRect:'>
<arg declared_type64='NSTrackingRectTag' index='0' name='tag' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renewGState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceSubview:with:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='oldView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='newView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='requiresConstraintBasedLayout'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resetCursorRects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resizeSubviewsWithOldSize:'>
<arg declared_type64='NSSize' index='0' name='oldSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resizeWithOldSuperviewSize:'>
<arg declared_type64='NSSize' index='0' name='oldSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rightAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='rotateByAngle:'>
<arg declared_type64='CGFloat' index='0' name='angle' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:didAddMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:didMoveMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:didRemoveMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:handleMouseDown:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rulerView:locationForPoint:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rulerView:pointForLocation:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='point' type64='d'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='rulerView:shouldAddMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rulerView:shouldMoveMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rulerView:shouldRemoveMarker:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rulerView:willAddMarker:atLocation:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<arg declared_type64='CGFloat' index='2' name='location' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rulerView:willMoveMarker:toLocation:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSRulerMarker * _Nonnull' index='1' name='marker' type64='@'/>
<arg declared_type64='CGFloat' index='2' name='location' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='rulerView:willSetClientView:'>
<arg declared_type64='NSRulerView * _Nonnull' index='0' name='ruler' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='newClient' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='safeAreaInsets'>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='safeAreaLayoutGuide'>
<retval declared_type64='NSLayoutGuide * _Nonnull' type64='@'/>
</method>
<method selector='safeAreaRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='scaleUnitSquareToSize:'>
<arg declared_type64='NSSize' index='0' name='newUnitSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollClipView:toPoint:'>
<arg declared_type64='NSClipView * _Nonnull' index='0' name='clipView' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollRect:by:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSSize' index='1' name='delta' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollRectToVisible:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAcceptsTouchEvents:'>
<arg declared_type64='BOOL' index='0' name='acceptsTouchEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAdditionalSafeAreaInsets:'>
<arg declared_type64='NSEdgeInsets' index='0' name='additionalSafeAreaInsets' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowedTouchTypes:'>
<arg declared_type64='NSTouchTypeMask' index='0' name='allowedTouchTypes' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlphaValue:'>
<arg declared_type64='CGFloat' index='0' name='alphaValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoresizesSubviews:'>
<arg declared_type64='BOOL' index='0' name='autoresizesSubviews' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutoresizingMask:'>
<arg declared_type64='NSAutoresizingMaskOptions' index='0' name='autoresizingMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundFilters:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='backgroundFilters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type64='NSRect' index='0' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBoundsOrigin:'>
<arg declared_type64='NSPoint' index='0' name='newOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBoundsRotation:'>
<arg declared_type64='CGFloat' index='0' name='boundsRotation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBoundsSize:'>
<arg declared_type64='NSSize' index='0' name='newSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanDrawConcurrently:'>
<arg declared_type64='BOOL' index='0' name='canDrawConcurrently' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanDrawSubviewsIntoLayer:'>
<arg declared_type64='BOOL' index='0' name='canDrawSubviewsIntoLayer' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCompositingFilter:'>
<arg declared_type64='CIFilter * _Nullable' index='0' name='compositingFilter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentCompressionResistancePriority:forOrientation:'>
<arg declared_type64='NSLayoutPriority' index='0' name='priority' type64='f'/>
<arg declared_type64='NSLayoutConstraintOrientation' index='1' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentFilters:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='contentFilters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentHuggingPriority:forOrientation:'>
<arg declared_type64='NSLayoutPriority' index='0' name='priority' type64='f'/>
<arg declared_type64='NSLayoutConstraintOrientation' index='1' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusRingType:'>
<arg declared_type64='NSFocusRingType' index='0' name='focusRingType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type64='NSRect' index='0' name='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameCenterRotation:'>
<arg declared_type64='CGFloat' index='0' name='frameCenterRotation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameOrigin:'>
<arg declared_type64='NSPoint' index='0' name='newOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameRotation:'>
<arg declared_type64='CGFloat' index='0' name='frameRotation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameSize:'>
<arg declared_type64='NSSize' index='0' name='newSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGestureRecognizers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='gestureRecognizers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHorizontalContentSizeConstraintActive:'>
<arg declared_type64='BOOL' index='0' name='horizontalContentSizeConstraintActive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeyboardFocusRingNeedsDisplayInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayer:'>
<arg declared_type64='CALayer * _Nullable' index='0' name='layer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayerContentsPlacement:'>
<arg declared_type64='NSViewLayerContentsPlacement' index='0' name='layerContentsPlacement' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayerContentsRedrawPolicy:'>
<arg declared_type64='NSViewLayerContentsRedrawPolicy' index='0' name='layerContentsRedrawPolicy' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayerUsesCoreImageFilters:'>
<arg declared_type64='BOOL' index='0' name='layerUsesCoreImageFilters' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplay:'>
<arg declared_type64='BOOL' index='0' name='needsDisplay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsDisplayInRect:'>
<arg declared_type64='NSRect' index='0' name='invalidRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsLayout:'>
<arg declared_type64='BOOL' index='0' name='needsLayout' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNeedsUpdateConstraints:'>
<arg declared_type64='BOOL' index='0' name='needsUpdateConstraints' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNextKeyView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='nextKeyView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPostsBoundsChangedNotifications:'>
<arg declared_type64='BOOL' index='0' name='postsBoundsChangedNotifications' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPostsFrameChangedNotifications:'>
<arg declared_type64='BOOL' index='0' name='postsFrameChangedNotifications' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreparedContentRect:'>
<arg declared_type64='NSRect' index='0' name='preparedContentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPressureConfiguration:'>
<arg declared_type64='NSPressureConfiguration * _Nullable' index='0' name='pressureConfiguration' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShadow:'>
<arg declared_type64='NSShadow * _Nullable' index='0' name='shadow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubviews:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='subviews' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTip' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTranslatesAutoresizingMaskIntoConstraints:'>
<arg declared_type64='BOOL' index='0' name='translatesAutoresizingMaskIntoConstraints' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUpGState'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type64='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVerticalContentSizeConstraintActive:'>
<arg declared_type64='BOOL' index='0' name='verticalContentSizeConstraintActive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsBestResolutionOpenGLSurface:'>
<arg declared_type64='BOOL' index='0' name='wantsBestResolutionOpenGLSurface' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsExtendedDynamicRangeOpenGLSurface:'>
<arg declared_type64='BOOL' index='0' name='wantsExtendedDynamicRangeOpenGLSurface' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsLayer:'>
<arg declared_type64='BOOL' index='0' name='wantsLayer' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWantsRestingTouches:'>
<arg declared_type64='BOOL' index='0' name='wantsRestingTouches' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shadow'>
<retval declared_type64='NSShadow * _Nullable' type64='@'/>
</method>
<method selector='shouldDelayWindowOrderingForEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldDrawColor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showDefinitionForAttributedString:atPoint:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attrString' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='textBaselineOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showDefinitionForAttributedString:range:options:baselineOriginProvider:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attrString' type64='@'/>
<arg declared_type64='NSRange' index='1' name='targetRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<arg declared_type64='NSPoint (^ _Nullable)(NSRange)' function_pointer='true' index='3' name='originProvider' type64='@?'>
<arg declared_type64='NSRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sortSubviewsUsingFunction:context:'>
<arg declared_type64='NSComparisonResult (* _Nonnull)(__kindof NSView * _Nonnull, __kindof NSView * _Nonnull, void * _Nullable)' function_pointer='true' index='0' name='compare' type64='^?'>
<arg declared_type64='__kindof NSView * _Nonnull' type64='@'/>
<arg declared_type64='__kindof NSView * _Nonnull' type64='@'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='NSComparisonResult' type64='q'/>
</arg>
<arg declared_type64='void * _Nullable' index='1' name='context' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='subviews'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='superview'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='tag'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='toolTip'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='topAnchor'>
<retval declared_type64='NSLayoutYAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='trackingAreas'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='trailingAnchor'>
<retval declared_type64='NSLayoutXAxisAnchor * _Nonnull' type64='@'/>
</method>
<method selector='translateOriginToPoint:'>
<arg declared_type64='NSPoint' index='0' name='translation' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='translateRectsNeedingDisplayInRect:by:'>
<arg declared_type64='NSRect' index='0' name='clipRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSSize' index='1' name='delta' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='translatesAutoresizingMaskIntoConstraints'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='unlockFocus'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unregisterDraggedTypes'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateConstraints'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateConstraintsForSubtreeIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateLayer'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateTrackingAreas'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type64='NSUserInterfaceLayoutDirection' type64='q'/>
</method>
<method selector='viewDidChangeBackingProperties'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidChangeEffectiveAppearance'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidEndLiveResize'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidHide'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidMoveToSuperview'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidMoveToWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidUnhide'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillDraw'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillMoveToSuperview:'>
<arg declared_type64='NSView * _Nullable' index='0' name='newSuperview' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillMoveToWindow:'>
<arg declared_type64='NSWindow * _Nullable' index='0' name='newWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillStartLiveResize'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWithTag:'>
<arg declared_type64='NSInteger' index='0' name='tag' type64='q'/>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
<method selector='visibleRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='wantsBestResolutionOpenGLSurface'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsDefaultClipping'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsExtendedDynamicRangeOpenGLSurface'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsLayer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsRestingTouches'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsUpdateLayer'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='widthAdjustLimit'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='widthAnchor'>
<retval declared_type64='NSLayoutDimension * _Nonnull' type64='@'/>
</method>
<method selector='willOpenMenu:withEvent:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willRemoveSubview:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='subview' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='writeEPSInsideRect:toPasteboard:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pasteboard' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='writePDFInsideRect:toPasteboard:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pasteboard' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSViewAnimation'>
<method selector='initWithViewAnimations:'>
<arg declared_type64='NSArray *&gt; * _Nonnull' index='0' name='viewAnimations' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setViewAnimations:'>
<arg declared_type64='NSArray *&gt; * _Nonnull' index='0' name='viewAnimations' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewAnimations'>
<retval declared_type64='NSArray *&gt; * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSViewController'>
<method selector='addChildViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='childViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='childViewControllers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='commitEditing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='didCommitSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardEditing'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dismissController:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='dismissViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extensionContext'>
<retval declared_type64='NSExtensionContext * _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg declared_type64='NSNibName _Nullable' index='0' name='nibNameOrNil' type64='@'/>
<arg declared_type64='NSBundle * _Nullable' index='1' name='nibBundleOrNil' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertChildViewController:atIndex:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='childViewController' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isViewLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadView'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='nibBundle'>
<retval declared_type64='NSBundle * _Nullable' type64='@'/>
</method>
<method selector='nibName'>
<retval declared_type64='NSNibName _Nullable' type64='@'/>
</method>
<method selector='parentViewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='preferredContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='preferredContentSizeDidChangeForViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredMaximumSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='preferredMinimumSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='preferredScreenOrigin'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='presentViewController:animator:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='animator' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentViewController:asPopoverRelativeToRect:ofView:preferredEdge:behavior:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='NSRect' index='1' name='positioningRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nonnull' index='2' name='positioningView' type64='@'/>
<arg declared_type64='NSRectEdge' index='3' name='preferredEdge' type64='Q'/>
<arg declared_type64='NSPopoverBehavior' index='4' name='behavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentViewControllerAsModalWindow:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentViewControllerAsSheet:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='presentedViewControllers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='presentingViewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='removeChildViewControllerAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeFromParentViewController'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='representedObject'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setChildViewControllers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='childViewControllers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredContentSize:'>
<arg declared_type64='NSSize' index='0' name='preferredContentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredScreenOrigin:'>
<arg declared_type64='NSPoint' index='0' name='preferredScreenOrigin' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepresentedObject:'>
<arg declared_type64='id _Nullable' index='0' name='representedObject' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceItemView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='sourceItemView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourceItemView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='storyboard'>
<retval declared_type64='NSStoryboard * _Nullable' type64='@'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='transitionFromViewController:toViewController:options:completionHandler:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='fromViewController' type64='@'/>
<arg declared_type64='NSViewController * _Nonnull' index='1' name='toViewController' type64='@'/>
<arg declared_type64='NSViewControllerTransitionOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='3' name='completion' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateViewConstraints'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='view'>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
<method selector='viewDidAppear'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidDisappear'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewDidLoad'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillAppear'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillDisappear'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillLayout'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillTransitionToSize:'>
<arg declared_type64='NSSize' index='0' name='newSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSVisualEffectView'>
<method selector='blendingMode'>
<retval declared_type64='NSVisualEffectBlendingMode' type64='q'/>
</method>
<method selector='interiorBackgroundStyle'>
<retval declared_type64='NSBackgroundStyle' type64='q'/>
</method>
<method selector='isEmphasized'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maskImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='material'>
<retval declared_type64='NSVisualEffectMaterial' type64='q'/>
</method>
<method selector='setBlendingMode:'>
<arg declared_type64='NSVisualEffectBlendingMode' index='0' name='blendingMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEmphasized:'>
<arg declared_type64='BOOL' index='0' name='emphasized' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaskImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='maskImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaterial:'>
<arg declared_type64='NSVisualEffectMaterial' index='0' name='material' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setState:'>
<arg declared_type64='NSVisualEffectState' index='0' name='state' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='state'>
<retval declared_type64='NSVisualEffectState' type64='q'/>
</method>
<method selector='viewDidMoveToWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewWillMoveToWindow:'>
<arg declared_type64='NSWindow * _Nullable' index='0' name='newWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSWindow'>
<method selector='acceptsMouseMovedEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='addChildWindow:ordered:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='childWin' type64='@'/>
<arg declared_type64='NSWindowOrderingMode' index='1' name='place' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addTabbedWindow:ordered:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSWindowOrderingMode' index='1' name='ordered' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addTitlebarAccessoryViewController:'>
<arg declared_type64='NSTitlebarAccessoryViewController * _Nonnull' index='0' name='childViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='allowsAutomaticWindowTabbing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsConcurrentViewDrawing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsToolTipsWhenApplicationIsInactive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='alphaValue'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='anchorAttributeForOrientation:'>
<arg declared_type64='NSLayoutConstraintOrientation' index='0' name='orientation' type64='q'/>
<retval declared_type64='NSLayoutAttribute' type64='q'/>
</method>
<method selector='animationBehavior'>
<retval declared_type64='NSWindowAnimationBehavior' type64='q'/>
</method>
<method selector='animationResizeTime:'>
<arg declared_type64='NSRect' index='0' name='newFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='appearanceSource'>
<retval declared_type64='NSObject * _Nonnull' type64='@'/>
</method>
<method selector='areCursorRectsEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='aspectRatio'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='attachedSheet'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='autorecalculatesContentBorderThicknessForEdge:'>
<arg declared_type64='NSRectEdge' index='0' name='edge' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='autorecalculatesKeyViewLoop'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type64='NSColor * _Nonnull' type64='@'/>
</method>
<method selector='backingAlignedRect:options:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSAlignmentOptions' index='1' name='options' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='backingLocation'>
<retval declared_type64='NSWindowBackingLocation' type64='Q'/>
</method>
<method selector='backingScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='backingType'>
<retval declared_type64='NSBackingStoreType' type64='Q'/>
</method>
<method selector='becomeKeyWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='becomeMainWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginCriticalSheet:completionHandler:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sheetWindow' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSModalResponse)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='NSModalResponse' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginSheet:completionHandler:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sheetWindow' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSModalResponse)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='NSModalResponse' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cacheImageInRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canBecomeKeyWindow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canBecomeMainWindow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canBecomeVisibleWithoutLogin'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canHide'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canRepresentDisplayGamut:'>
<arg declared_type64='NSDisplayGamut' index='0' name='displayGamut' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canStoreColor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cascadeTopLeftFromPoint:'>
<arg declared_type64='NSPoint' index='0' name='topLeftPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='center'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='childWindows'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='close'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionBehavior'>
<retval declared_type64='NSWindowCollectionBehavior' type64='Q'/>
</method>
<method selector='colorSpace'>
<retval declared_type64='NSColorSpace * _Nullable' type64='@'/>
</method>
<method selector='constrainFrameRect:toScreen:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSScreen * _Nullable' index='1' name='screen' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentAspectRatio'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentBorderThicknessForEdge:'>
<arg declared_type64='NSRectEdge' index='0' name='edge' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='contentLayoutGuide'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='contentLayoutRect'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentMaxSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentMinSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentRectForFrameRect:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='contentRectForFrameRect:styleMask:'>
<arg declared_type64='NSRect' index='0' name='fRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSWindowStyleMask' index='1' name='style' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentResizeIncrements'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='contentView'>
<retval declared_type64='__kindof NSView * _Nullable' type64='@'/>
</method>
<method selector='contentViewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='convertBaseToScreen:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointFromBacking:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointFromScreen:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointToBacking:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointToScreen:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRectFromBacking:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectFromScreen:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToBacking:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToScreen:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertScreenToBase:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='currentEvent'>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method selector='dataWithEPSInsideRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='dataWithPDFInsideRect:'>
<arg declared_type64='NSRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='deepestScreen'>
<retval declared_type64='NSScreen * _Nullable' type64='@'/>
</method>
<method selector='defaultButtonCell'>
<retval declared_type64='NSButtonCell * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='defaultDepthLimit'>
<retval declared_type64='NSWindowDepth' type64='i'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deminiaturize:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='depthLimit'>
<retval declared_type64='NSWindowDepth' type64='i'/>
</method>
<method selector='deviceDescription'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='disableCursorRects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disableFlushWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disableKeyEquivalentForDefaultButtonCell'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disableScreenUpdatesUntilFlush'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disableSnapshotRestoration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardCachedImage'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardCursorRects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardEventsMatchingMask:beforeEvent:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSEvent * _Nullable' index='1' name='lastEvent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='display'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displayIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='displaysWhenScreenProfileChanges'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dockTile'>
<retval declared_type64='NSDockTile * _Nonnull' type64='@'/>
</method>
<method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='baseLocation' type64='{CGPoint=dd}'/>
<arg declared_type64='NSSize' index='2' name='initialOffset' type64='{CGSize=dd}'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='4' name='pboard' type64='@'/>
<arg declared_type64='id _Nonnull' index='5' name='sourceObj' type64='@'/>
<arg declared_type64='BOOL' index='6' name='slideFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawers'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='enableCursorRects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enableFlushWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enableKeyEquivalentForDefaultButtonCell'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='enableSnapshotRestoration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endEditingFor:'>
<arg declared_type64='id _Nullable' index='0' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endSheet:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sheetWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='endSheet:returnCode:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sheetWindow' type64='@'/>
<arg declared_type64='NSModalResponse' index='1' name='returnCode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='fieldEditor:forObject:'>
<arg declared_type64='BOOL' index='0' name='createFlag' type64='B'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<retval declared_type64='NSText * _Nullable' type64='@'/>
</method>
<method selector='firstResponder'>
<retval declared_type64='NSResponder * _Nullable' type64='@'/>
</method>
<method selector='flushWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flushWindowIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='frame'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameAutosaveName'>
<retval declared_type64='NSWindowFrameAutosaveName _Nonnull' type64='@'/>
</method>
<method selector='frameRectForContentRect:'>
<arg declared_type64='NSRect' index='0' name='contentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='frameRectForContentRect:styleMask:'>
<arg declared_type64='NSRect' index='0' name='cRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSWindowStyleMask' index='1' name='style' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gState'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='graphicsContext'>
<retval declared_type64='NSGraphicsContext * _Nullable' type64='@'/>
</method>
<method selector='handleCloseScriptCommand:'>
<arg declared_type64='NSCloseCommand * _Nonnull' index='0' name='command' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='handlePrintScriptCommand:'>
<arg declared_type64='NSScriptCommand * _Nonnull' index='0' name='command' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='handleSaveScriptCommand:'>
<arg declared_type64='NSScriptCommand * _Nonnull' index='0' name='command' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='hasCloseBox'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasDynamicDepthLimit'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasShadow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasTitleBar'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hidesOnDeactivate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='ignoresMouseEvents'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='inLiveResize'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithContentRect:styleMask:backing:defer:'>
<arg declared_type64='NSRect' index='0' name='contentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSWindowStyleMask' index='1' name='style' type64='Q'/>
<arg declared_type64='NSBackingStoreType' index='2' name='backingStoreType' type64='Q'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithContentRect:styleMask:backing:defer:screen:'>
<arg declared_type64='NSRect' index='0' name='contentRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSWindowStyleMask' index='1' name='style' type64='Q'/>
<arg declared_type64='NSBackingStoreType' index='2' name='backingStoreType' type64='Q'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<arg declared_type64='NSScreen * _Nullable' index='4' name='screen' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithWindowRef:'>
<arg declared_type64='void * _Nonnull' index='0' name='windowRef' type64='^v'/>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='initialFirstResponder'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='insertTitlebarAccessoryViewController:atIndex:'>
<arg declared_type64='NSTitlebarAccessoryViewController * _Nonnull' index='0' name='childViewController' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateCursorRectsForView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='invalidateShadow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isAutodisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isDocumentEdited'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExcludedFromWindowsMenu'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFloatingPanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlushWindowDisabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isKeyWindow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMainWindow'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMiniaturizable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMiniaturized'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isModalPanel'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMovable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMovableByWindowBackground'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOnActiveSpace'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOneShot'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isReleasedWhenClosed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isResizable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRestorable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSheet'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isZoomable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isZoomed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='keyDown:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='keyViewSelectionDirection'>
<retval declared_type64='NSSelectionDirection' type64='Q'/>
</method>
<method selector='layoutIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='level'>
<retval declared_type64='NSWindowLevel' type64='q'/>
</method>
<method selector='makeFirstResponder:'>
<arg declared_type64='NSResponder * _Nullable' index='0' name='responder' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='makeKeyAndOrderFront:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeKeyWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeMainWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='maxFullScreenContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='maxSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='menuChanged:'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mergeAllWindows:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='minFrameWidthWithTitle:styleMask:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<arg declared_type64='NSWindowStyleMask' index='1' name='style' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='minFullScreenContentSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='minSize'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='miniaturize:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='miniwindowImage'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='miniwindowTitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='mouseLocationOutsideOfEventStream'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='moveTabToNewWindow:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='nextEventMatchingMask:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSDate * _Nullable' index='1' name='expiration' type64='@'/>
<arg declared_type64='NSRunLoopMode _Nonnull' index='2' name='mode' type64='@'/>
<arg declared_type64='BOOL' index='3' name='deqFlag' type64='B'/>
<retval declared_type64='NSEvent * _Nullable' type64='@'/>
</method>
<method selector='occlusionState'>
<retval declared_type64='NSWindowOcclusionState' type64='Q'/>
</method>
<method selector='orderBack:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFront:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderFrontRegardless'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderOut:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderWindow:relativeTo:'>
<arg declared_type64='NSWindowOrderingMode' index='0' name='place' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='otherWin' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='orderedIndex'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='parentWindow'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='performClose:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performMiniaturize:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performWindowDragWithEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='performZoom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='postEvent:atStart:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredBackingLocation'>
<retval declared_type64='NSWindowBackingLocation' type64='Q'/>
</method>
<method selector='preservesContentDuringLiveResize'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preventsApplicationTerminationWhenModal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='print:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='recalculateKeyViewLoop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='registerForDraggedTypes:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='newTypes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeChildWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='childWin' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='removeFrameUsingName:'>
<arg declared_type64='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTitlebarAccessoryViewControllerAtIndex:'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='representedFilename'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='representedURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='resetCursorRects'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resignKeyWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resignMainWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resizeFlags'>
<retval declared_type64='NSEventModifierFlags' type64='Q'/>
</method>
<method selector='resizeIncrements'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='restorationClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='restoreCachedImage'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runToolbarCustomizationPalette:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='saveFrameUsingName:'>
<arg declared_type64='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='screen'>
<retval declared_type64='NSScreen * _Nullable' type64='@'/>
</method>
<method selector='selectKeyViewFollowingView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectKeyViewPrecedingView:'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectNextKeyView:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectNextTab:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectPreviousKeyView:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectPreviousTab:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendEvent:'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAcceptsMouseMovedEvents:'>
<arg declared_type64='BOOL' index='0' name='acceptsMouseMovedEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='setAllowsAutomaticWindowTabbing:'>
<arg declared_type64='BOOL' index='0' name='allowsAutomaticWindowTabbing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsConcurrentViewDrawing:'>
<arg declared_type64='BOOL' index='0' name='allowsConcurrentViewDrawing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsToolTipsWhenApplicationIsInactive:'>
<arg declared_type64='BOOL' index='0' name='allowsToolTipsWhenApplicationIsInactive' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlphaValue:'>
<arg declared_type64='CGFloat' index='0' name='alphaValue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnchorAttribute:forOrientation:'>
<arg declared_type64='NSLayoutAttribute' index='0' name='attr' type64='q'/>
<arg declared_type64='NSLayoutConstraintOrientation' index='1' name='orientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimationBehavior:'>
<arg declared_type64='NSWindowAnimationBehavior' index='0' name='animationBehavior' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppearanceSource:'>
<arg declared_type64='NSObject * _Nullable' index='0' name='appearanceSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAspectRatio:'>
<arg declared_type64='NSSize' index='0' name='aspectRatio' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutodisplay:'>
<arg declared_type64='BOOL' index='0' name='autodisplay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutorecalculatesContentBorderThickness:forEdge:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSRectEdge' index='1' name='edge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAutorecalculatesKeyViewLoop:'>
<arg declared_type64='BOOL' index='0' name='autorecalculatesKeyViewLoop' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='NSColor * _Nullable' index='0' name='backgroundColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBackingType:'>
<arg declared_type64='NSBackingStoreType' index='0' name='backingType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanBecomeVisibleWithoutLogin:'>
<arg declared_type64='BOOL' index='0' name='canBecomeVisibleWithoutLogin' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanHide:'>
<arg declared_type64='BOOL' index='0' name='canHide' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCollectionBehavior:'>
<arg declared_type64='NSWindowCollectionBehavior' index='0' name='collectionBehavior' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setColorSpace:'>
<arg declared_type64='NSColorSpace * _Nullable' index='0' name='colorSpace' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentAspectRatio:'>
<arg declared_type64='NSSize' index='0' name='contentAspectRatio' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentBorderThickness:forEdge:'>
<arg declared_type64='CGFloat' index='0' name='thickness' type64='d'/>
<arg declared_type64='NSRectEdge' index='1' name='edge' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentMaxSize:'>
<arg declared_type64='NSSize' index='0' name='contentMaxSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentMinSize:'>
<arg declared_type64='NSSize' index='0' name='contentMinSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentResizeIncrements:'>
<arg declared_type64='NSSize' index='0' name='contentResizeIncrements' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentSize:'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type64='__kindof NSView * _Nullable' index='0' name='contentView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type64='NSViewController * _Nullable' index='0' name='contentViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultButtonCell:'>
<arg declared_type64='NSButtonCell * _Nullable' index='0' name='defaultButtonCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDepthLimit:'>
<arg declared_type64='NSWindowDepth' index='0' name='depthLimit' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDisplaysWhenScreenProfileChanges:'>
<arg declared_type64='BOOL' index='0' name='displaysWhenScreenProfileChanges' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDocumentEdited:'>
<arg declared_type64='BOOL' index='0' name='documentEdited' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDynamicDepthLimit:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExcludedFromWindowsMenu:'>
<arg declared_type64='BOOL' index='0' name='excludedFromWindowsMenu' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:display:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrame:display:animate:'>
<arg declared_type64='NSRect' index='0' name='frameRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='BOOL' index='1' name='displayFlag' type64='B'/>
<arg declared_type64='BOOL' index='2' name='animateFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameAutosaveName:'>
<arg declared_type64='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setFrameFromString:'>
<arg declared_type64='NSWindowPersistableFrameDescriptor _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameOrigin:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameTopLeftPoint:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameUsingName:'>
<arg declared_type64='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setFrameUsingName:force:'>
<arg declared_type64='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='BOOL' index='1' name='force' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setHasShadow:'>
<arg declared_type64='BOOL' index='0' name='hasShadow' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidesOnDeactivate:'>
<arg declared_type64='BOOL' index='0' name='hidesOnDeactivate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIgnoresMouseEvents:'>
<arg declared_type64='BOOL' index='0' name='ignoresMouseEvents' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInitialFirstResponder:'>
<arg declared_type64='NSView * _Nullable' index='0' name='initialFirstResponder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIsMiniaturized:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIsVisible:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIsZoomed:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLevel:'>
<arg declared_type64='NSWindowLevel' index='0' name='level' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxFullScreenContentSize:'>
<arg declared_type64='NSSize' index='0' name='maxFullScreenContentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxSize:'>
<arg declared_type64='NSSize' index='0' name='maxSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinFullScreenContentSize:'>
<arg declared_type64='NSSize' index='0' name='minFullScreenContentSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type64='NSSize' index='0' name='minSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMiniwindowImage:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='miniwindowImage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMiniwindowTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='miniwindowTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovable:'>
<arg declared_type64='BOOL' index='0' name='movable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovableByWindowBackground:'>
<arg declared_type64='BOOL' index='0' name='movableByWindowBackground' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOneShot:'>
<arg declared_type64='BOOL' index='0' name='oneShot' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type64='BOOL' index='0' name='opaque' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOrderedIndex:'>
<arg declared_type64='NSInteger' index='0' name='orderedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setParentWindow:'>
<arg declared_type64='NSWindow * _Nullable' index='0' name='parentWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredBackingLocation:'>
<arg declared_type64='NSWindowBackingLocation' index='0' name='preferredBackingLocation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreservesContentDuringLiveResize:'>
<arg declared_type64='BOOL' index='0' name='preservesContentDuringLiveResize' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreventsApplicationTerminationWhenModal:'>
<arg declared_type64='BOOL' index='0' name='preventsApplicationTerminationWhenModal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReleasedWhenClosed:'>
<arg declared_type64='BOOL' index='0' name='releasedWhenClosed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepresentedFilename:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='representedFilename' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRepresentedURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='representedURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResizeIncrements:'>
<arg declared_type64='NSSize' index='0' name='resizeIncrements' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRestorable:'>
<arg declared_type64='BOOL' index='0' name='restorable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRestorationClass:'>
<arg declared_type64='Class _Nullable' index='0' name='restorationClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSharingType:'>
<arg declared_type64='NSWindowSharingType' index='0' name='sharingType' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsResizeIndicator:'>
<arg declared_type64='BOOL' index='0' name='showsResizeIndicator' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShowsToolbarButton:'>
<arg declared_type64='BOOL' index='0' name='showsToolbarButton' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStyleMask:'>
<arg declared_type64='NSWindowStyleMask' index='0' name='styleMask' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSubtitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='subtitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabbingIdentifier:'>
<arg declared_type64='NSWindowTabbingIdentifier _Nonnull' index='0' name='tabbingIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTabbingMode:'>
<arg declared_type64='NSWindowTabbingMode' index='0' name='tabbingMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleVisibility:'>
<arg declared_type64='NSWindowTitleVisibility' index='0' name='titleVisibility' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitleWithRepresentedFilename:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filename' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitlebarAccessoryViewControllers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='titlebarAccessoryViewControllers' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitlebarAppearsTransparent:'>
<arg declared_type64='BOOL' index='0' name='titlebarAppearsTransparent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitlebarSeparatorStyle:'>
<arg declared_type64='NSTitlebarSeparatorStyle' index='0' name='titlebarSeparatorStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolbar:'>
<arg declared_type64='NSToolbar * _Nullable' index='0' name='toolbar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolbarStyle:'>
<arg declared_type64='NSWindowToolbarStyle' index='0' name='toolbarStyle' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setViewsNeedDisplay:'>
<arg declared_type64='BOOL' index='0' name='viewsNeedDisplay' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindowController:'>
<arg declared_type64='__kindof NSWindowController * _Nullable' index='0' name='windowController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingType'>
<retval declared_type64='NSWindowSharingType' type64='Q'/>
</method>
<method selector='sheetParent'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='sheets'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='showsResizeIndicator'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showsToolbarButton'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='standardWindowButton:'>
<arg declared_type64='NSWindowButton' index='0' name='b' type64='Q'/>
<retval declared_type64='NSButton * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='standardWindowButton:forStyleMask:'>
<arg declared_type64='NSWindowButton' index='0' name='b' type64='Q'/>
<arg declared_type64='NSWindowStyleMask' index='1' name='styleMask' type64='Q'/>
<retval declared_type64='NSButton * _Nullable' type64='@'/>
</method>
<method selector='stringWithSavedFrame'>
<retval declared_type64='NSWindowPersistableFrameDescriptor _Nonnull' type64='@'/>
</method>
<method selector='styleMask'>
<retval declared_type64='NSWindowStyleMask' type64='Q'/>
</method>
<method selector='subtitle'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='tab'>
<retval declared_type64='NSWindowTab * _Nonnull' type64='@'/>
</method>
<method selector='tabGroup'>
<retval declared_type64='NSWindowTabGroup * _Nullable' type64='@'/>
</method>
<method selector='tabbedWindows'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tabbingIdentifier'>
<retval declared_type64='NSWindowTabbingIdentifier _Nonnull' type64='@'/>
</method>
<method selector='tabbingMode'>
<retval declared_type64='NSWindowTabbingMode' type64='q'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='titleVisibility'>
<retval declared_type64='NSWindowTitleVisibility' type64='q'/>
</method>
<method selector='titlebarAccessoryViewControllers'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='titlebarAppearsTransparent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='titlebarSeparatorStyle'>
<retval declared_type64='NSTitlebarSeparatorStyle' type64='q'/>
</method>
<method selector='toggleFullScreen:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleTabBar:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleTabOverview:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toggleToolbarShown:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toolbar'>
<retval declared_type64='NSToolbar * _Nullable' type64='@'/>
</method>
<method selector='toolbarStyle'>
<retval declared_type64='NSWindowToolbarStyle' type64='q'/>
</method>
<method selector='trackEventsMatchingMask:timeout:mode:handler:'>
<arg declared_type64='NSEventMask' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSTimeInterval' index='1' name='timeout' type64='d'/>
<arg declared_type64='NSRunLoopMode _Nonnull' index='2' name='mode' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSEvent * _Nullable, BOOL * _Nonnull)' function_pointer='true' index='3' name='trackingHandler' type64='@?'>
<arg declared_type64='NSEvent * _Nullable' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tryToPerform:with:'>
<arg declared_type64='SEL _Nonnull' index='0' name='action' type64=':'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='unregisterDraggedTypes'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='update'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateConstraintsIfNeeded'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='useOptimizedDrawing:'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='userSpaceScaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='userTabbingPreference'>
<retval declared_type64='NSWindowUserTabbingPreference' type64='q'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg declared_type64='NSPasteboardType _Nullable' index='0' name='sendType' type64='@'/>
<arg declared_type64='NSPasteboardType _Nullable' index='1' name='returnType' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='viewsNeedDisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='visualizeConstraints:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='constraints' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowController'>
<retval declared_type64='__kindof NSWindowController * _Nullable' type64='@'/>
</method>
<method selector='windowNumber'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='windowNumberAtPoint:belowWindowWithWindowNumber:'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSInteger' index='1' name='windowNumber' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method class_method='true' selector='windowNumbersWithOptions:'>
<arg declared_type64='NSWindowNumberListOptions' index='0' name='options' type64='Q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='windowRef'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='windowTitlebarLayoutDirection'>
<retval declared_type64='NSUserInterfaceLayoutDirection' type64='q'/>
</method>
<method class_method='true' selector='windowWithContentViewController:'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='contentViewController' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='worksWhenModal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='zoom:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSWindowController'>
<method selector='close'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentViewController'>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='dismissController:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='document'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='coder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithWindow:'>
<arg declared_type64='NSWindow * _Nullable' index='0' name='window' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithWindowNibName:'>
<arg declared_type64='NSNibName _Nonnull' index='0' name='windowNibName' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithWindowNibName:owner:'>
<arg declared_type64='NSNibName _Nonnull' index='0' name='windowNibName' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='owner' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithWindowNibPath:owner:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='windowNibPath' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='owner' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isWindowLoaded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadWindow'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='owner'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type64='NSViewController * _Nullable' index='0' name='contentViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDocument:'>
<arg declared_type64='id _Nullable' index='0' name='document' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDocumentEdited:'>
<arg declared_type64='BOOL' index='0' name='dirtyFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldCascadeWindows:'>
<arg declared_type64='BOOL' index='0' name='shouldCascadeWindows' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldCloseDocument:'>
<arg declared_type64='BOOL' index='0' name='shouldCloseDocument' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindow:'>
<arg declared_type64='NSWindow * _Nullable' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWindowFrameAutosaveName:'>
<arg declared_type64='NSWindowFrameAutosaveName _Nonnull' index='0' name='windowFrameAutosaveName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldCascadeWindows'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldCloseDocument'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='showWindow:'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='storyboard'>
<retval declared_type64='NSStoryboard * _Nullable' type64='@'/>
</method>
<method selector='synchronizeWindowTitleWithDocumentName'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='windowDidLoad'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowFrameAutosaveName'>
<retval declared_type64='NSWindowFrameAutosaveName _Nonnull' type64='@'/>
</method>
<method selector='windowNibName'>
<retval declared_type64='NSNibName _Nullable' type64='@'/>
</method>
<method selector='windowNibPath'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='windowTitleForDocumentDisplayName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='displayName' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='windowWillLoad'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSWindowTab'>
<method selector='accessoryView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type64='NSView * _Nullable' index='0' name='accessoryView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type64='NSAttributedString * _Nullable' index='0' name='attributedTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type64='NSString * _Nullable' index='0' name='title' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type64='NSString * _Nullable' index='0' name='toolTip' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='title'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='toolTip'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSWindowTabGroup'>
<method selector='addWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSWindowTabbingIdentifier _Nonnull' type64='@'/>
</method>
<method selector='insertWindow:atIndex:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isOverviewVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTabBarVisible'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='removeWindow:'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedWindow'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='setOverviewVisible:'>
<arg declared_type64='BOOL' index='0' name='overviewVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSelectedWindow:'>
<arg declared_type64='NSWindow * _Nullable' index='0' name='selectedWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windows'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSWorkspace'>
<method selector='URLForApplicationToOpenURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='URLForApplicationWithBundleIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='bundleIdentifier' type64='@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='absolutePathForAppBundleWithIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='bundleIdentifier' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityDisplayShouldDifferentiateWithoutColor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityDisplayShouldIncreaseContrast'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityDisplayShouldInvertColors'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityDisplayShouldReduceMotion'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityDisplayShouldReduceTransparency'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='activateFileViewerSelectingURLs:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='fileURLs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='activeApplication'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='checkForRemovableMedia'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='desktopImageOptionsForScreen:'>
<arg declared_type64='NSScreen * _Nonnull' index='0' name='screen' type64='@'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='desktopImageURLForScreen:'>
<arg declared_type64='NSScreen * _Nonnull' index='0' name='screen' type64='@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='duplicateURLs:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='URLs' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSDictionary * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='NSDictionary * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extendPowerOffBy:'>
<arg declared_type64='NSInteger' index='0' name='requested' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='fileLabelColors'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='fileLabels'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='fileSystemChanged'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='filenameExtension:isValidForType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filenameExtension' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='typeName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='findApplications'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='frontmostApplication'>
<retval declared_type64='NSRunningApplication * _Nullable' type64='@'/>
</method>
<method selector='fullPathForApplication:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='appName' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<arg declared_type64='BOOL * _Nullable' index='1' name='removableFlag' type64='^B'/>
<arg declared_type64='BOOL * _Nullable' index='2' name='writableFlag' type64='^B'/>
<arg declared_type64='BOOL * _Nullable' index='3' name='unmountableFlag' type64='^B'/>
<arg declared_type64='NSString * _Nullable * _Nullable' index='4' name='description' type64='^@'/>
<arg declared_type64='NSString * _Nullable * _Nullable' index='5' name='fileSystemType' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getInfoForFile:application:type:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<arg declared_type64='NSString * _Nullable * _Nullable' index='1' name='appName' type64='^@'/>
<arg declared_type64='NSString * _Nullable * _Nullable' index='2' name='type' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hideOtherApplications'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='iconForContentType:'>
<arg declared_type64='UTType * _Nonnull' index='0' name='contentType' type64='@'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='iconForFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='iconForFileType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileType' type64='@'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='iconForFiles:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='fullPaths' type64='@'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='isFilePackageAtPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSwitchControlEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVoiceOverEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='bundleIdentifier' type64='@'/>
<arg declared_type64='NSWorkspaceLaunchOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSAppleEventDescriptor * _Nullable' index='2' name='descriptor' type64='@'/>
<arg declared_type64='NSNumber * _Nullable * _Nullable' index='3' name='identifier' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='launchApplication:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='appName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='launchApplication:showIcon:autolaunch:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='appName' type64='@'/>
<arg declared_type64='BOOL' index='1' name='showIcon' type64='B'/>
<arg declared_type64='BOOL' index='2' name='autolaunch' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='launchApplicationAtURL:options:configuration:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSWorkspaceLaunchOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='configuration' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='NSRunningApplication * _Nullable' type64='@'/>
</method>
<method selector='launchedApplications'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='localizedDescriptionForType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='menuBarOwningApplication'>
<retval declared_type64='NSRunningApplication * _Nullable' type64='@'/>
</method>
<method selector='mountNewRemovableMedia'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='mountedLocalVolumePaths'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='mountedRemovableMedia'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='noteFileSystemChanged'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='noteFileSystemChanged:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='noteUserDefaultsChanged'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='notificationCenter'>
<retval declared_type64='NSNotificationCenter * _Nonnull' type64='@'/>
</method>
<method selector='openApplicationAtURL:configuration:completionHandler:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='applicationURL' type64='@'/>
<arg declared_type64='NSWorkspaceOpenConfiguration * _Nonnull' index='1' name='configuration' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSRunningApplication * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSRunningApplication * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='openFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='openFile:fromImage:at:inView:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<arg declared_type64='NSImage * _Nullable' index='1' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSView * _Nullable' index='3' name='view' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='openFile:withApplication:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='appName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='openFile:withApplication:andDeactivate:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='appName' type64='@'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='openTempFile:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fullPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='openURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='openURL:configuration:completionHandler:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSWorkspaceOpenConfiguration * _Nonnull' index='1' name='configuration' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSRunningApplication * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSRunningApplication * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='openURL:options:configuration:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSWorkspaceLaunchOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='configuration' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='NSRunningApplication * _Nullable' type64='@'/>
</method>
<method selector='openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='urls' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='bundleIdentifier' type64='@'/>
<arg declared_type64='NSWorkspaceLaunchOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='NSAppleEventDescriptor * _Nullable' index='3' name='descriptor' type64='@'/>
<arg declared_type64='NSArray * _Nullable * _Nullable' index='4' name='identifiers' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='openURLs:withApplicationAtURL:configuration:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='urls' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='applicationURL' type64='@'/>
<arg declared_type64='NSWorkspaceOpenConfiguration * _Nonnull' index='2' name='configuration' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSRunningApplication * _Nullable, NSError * _Nullable)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<arg declared_type64='NSRunningApplication * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='openURLs:withApplicationAtURL:options:configuration:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='urls' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='applicationURL' type64='@'/>
<arg declared_type64='NSWorkspaceLaunchOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='configuration' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='error' type64='^@'/>
<retval declared_type64='NSRunningApplication * _Nullable' type64='@'/>
</method>
<method selector='performFileOperation:source:destination:files:tag:'>
<arg declared_type64='NSWorkspaceFileOperationName _Nonnull' index='0' name='operation' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='source' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='destination' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='3' name='files' type64='@'/>
<arg declared_type64='NSInteger * _Nullable' index='4' name='tag' type64='^q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preferredFilenameExtensionForType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='typeName' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='recycleURLs:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='URLs' type64='@'/>
<arg declared_type64='void (^ _Nullable)(NSDictionary * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='NSDictionary * _Nonnull' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requestAuthorizationOfType:completionHandler:'>
<arg declared_type64='NSWorkspaceAuthorizationType' index='0' name='type' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(NSWorkspaceAuthorization * _Nullable, NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='NSWorkspaceAuthorization * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='runningApplications'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='selectFile:inFileViewerRootedAtPath:'>
<arg declared_type64='NSString * _Nullable' index='0' name='fullPath' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='rootFullPath' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setDesktopImageURL:forScreen:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSScreen * _Nonnull' index='1' name='screen' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setIcon:forFile:options:'>
<arg declared_type64='NSImage * _Nullable' index='0' name='image' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='fullPath' type64='@'/>
<arg declared_type64='NSWorkspaceIconCreationOptions' index='2' name='options' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='sharedWorkspace'>
<retval declared_type64='NSWorkspace * _Nonnull' type64='@'/>
</method>
<method selector='showSearchResultsForQueryString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='queryString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='slideImage:from:to:'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='fromPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPoint' index='2' name='toPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='type:conformsToType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='firstTypeName' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='secondTypeName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='typeOfFile:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='absoluteFilePath' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='unmountAndEjectDeviceAtPath:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='path' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='unmountAndEjectDeviceAtURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='userDefaultsChanged'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='NSWorkspaceOpenConfiguration'>
<method selector='activates'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='addsToRecentItems'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='allowsRunningApplicationSubstitution'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='appleEvent'>
<retval declared_type64='NSAppleEventDescriptor * _Nullable' type64='@'/>
</method>
<method selector='architecture'>
<retval declared_type64='cpu_type_t' type64='i'/>
</method>
<method selector='arguments'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='configuration'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='createsNewApplicationInstance'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='environment'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='hides'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hidesOthers'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isForPrinting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='promptsUserIfNeeded'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='requiresUniversalLinks'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setActivates:'>
<arg declared_type64='BOOL' index='0' name='activates' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAddsToRecentItems:'>
<arg declared_type64='BOOL' index='0' name='addsToRecentItems' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsRunningApplicationSubstitution:'>
<arg declared_type64='BOOL' index='0' name='allowsRunningApplicationSubstitution' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppleEvent:'>
<arg declared_type64='NSAppleEventDescriptor * _Nullable' index='0' name='appleEvent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setArchitecture:'>
<arg declared_type64='cpu_type_t' index='0' name='architecture' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setArguments:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='arguments' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCreatesNewApplicationInstance:'>
<arg declared_type64='BOOL' index='0' name='createsNewApplicationInstance' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnvironment:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='environment' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setForPrinting:'>
<arg declared_type64='BOOL' index='0' name='forPrinting' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHides:'>
<arg declared_type64='BOOL' index='0' name='hides' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidesOthers:'>
<arg declared_type64='BOOL' index='0' name='hidesOthers' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPromptsUserIfNeeded:'>
<arg declared_type64='BOOL' index='0' name='promptsUserIfNeeded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRequiresUniversalLinks:'>
<arg declared_type64='BOOL' index='0' name='requiresUniversalLinks' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<informal_protocol name='NSAccessibility'>
<method selector='accessibilityActionDescription:' type64='@24@0:8@16'>
<arg declared_type64='NSAccessibilityActionName _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityActionNames' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityActivationPoint' type64='{CGPoint=dd}16@0:8'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityAllowedValues' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityApplicationFocusedUIElement' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityArrayAttributeCount:' type64='Q24@0:8@16'>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='accessibilityArrayAttributeValues:index:maxCount:' type64='@40@0:8@16Q24Q32'>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='maxCount' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityAttributeNames' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityAttributeValue:' type64='@24@0:8@16'>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityAttributeValue:forParameter:' type64='@32@0:8@16@24'>
<arg declared_type64='NSAccessibilityParameterizedAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='parameter' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityAttributedStringForRange:' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityCancelButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityCellForColumn:row:' type64='@32@0:8q16q24'>
<arg declared_type64='NSInteger' index='0' name='column' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityChildren' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityChildrenInNavigationOrder' type64='@16@0:8'>
<retval declared_type64='NSArray&gt; * _Nullable' type64='@'/>
</method>
<method selector='accessibilityClearButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityCloseButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityColumnCount' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityColumnHeaderUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityColumnIndexRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityColumnTitles' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityColumns' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityContents' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityCriticalValue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityCustomActions' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityCustomRotors' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityDecrementButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityDefaultButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityDisclosedByRow' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityDisclosedRows' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityDisclosureLevel' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityDocument' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityExtrasMenuBar' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityFilename' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityFocusedUIElement' type64='@16@0:8'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='accessibilityFocusedWindow' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFrameForRange:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFullScreenButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityGrowArea' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityHandles' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHeader' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityHelp' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHitTest:' type64='@32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityHorizontalScrollBar' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityHorizontalUnitDescription' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHorizontalUnits' type64='q16@0:8'>
<retval declared_type64='NSAccessibilityUnits' type64='q'/>
</method>
<method selector='accessibilityIdentifier' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityIncrementButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityIndex' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityIndexOfChild:' type64='Q24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='child' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='accessibilityInsertionPointLineNumber' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityIsAttributeSettable:' type64='B24@0:8@16'>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityIsIgnored' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityLabel' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLabelUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLabelValue' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='accessibilityLayoutPointForScreenPoint:' type64='{CGPoint=dd}32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityLayoutSizeForScreenSize:' type64='{CGSize=dd}32@0:8{CGSize=dd}16'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='accessibilityLineForIndex:' type64='q24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityLinkedUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityMainWindow' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMarkerGroupUIElement' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMarkerTypeDescription' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityMarkerUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityMarkerValues' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMaxValue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMenuBar' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMinValue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityMinimizeButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityNextContents' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityNotifiesWhenDestroyed' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityNumberOfCharacters' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityOrientation' type64='q16@0:8'>
<retval declared_type64='NSAccessibilityOrientation' type64='q'/>
</method>
<method selector='accessibilityOverflowButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityParameterizedAttributeNames' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='accessibilityParent' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityPerformAction:' type64='v24@0:8@16'>
<arg declared_type64='NSAccessibilityActionName _Nonnull' index='0' name='action' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilityPerformCancel' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformConfirm' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformDecrement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformDelete' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformIncrement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformPick' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformPress' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformRaise' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformShowAlternateUI' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformShowDefaultUI' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformShowMenu' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPlaceholderValue' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityPreviousContents' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityProxy' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityRTFForRange:' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRangeForIndex:' type64='{_NSRange=QQ}24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeForLine:' type64='{_NSRange=QQ}24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='line' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeForPosition:' type64='{_NSRange=QQ}32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRole' type64='@16@0:8'>
<retval declared_type64='NSAccessibilityRole _Nullable' type64='@'/>
</method>
<method selector='accessibilityRoleDescription' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRowCount' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityRowHeaderUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRowIndexRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRows' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRulerMarkerType' type64='q16@0:8'>
<retval declared_type64='NSAccessibilityRulerMarkerType' type64='q'/>
</method>
<method selector='accessibilityScreenPointForLayoutPoint:' type64='{CGPoint=dd}32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityScreenSizeForLayoutSize:' type64='{CGSize=dd}32@0:8{CGSize=dd}16'>
<arg declared_type64='NSSize' index='0' name='size' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='accessibilitySearchButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilitySearchMenu' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedCells' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedChildren' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedColumns' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedRows' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedText' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedTextRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySelectedTextRanges' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityServesAsTitleForUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySetValue:forAttribute:' type64='v32@0:8@16@24'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='1' name='attribute' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='accessibilitySharedCharacterRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySharedFocusElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySharedTextUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityShownMenu' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilitySortDirection' type64='q16@0:8'>
<retval declared_type64='NSAccessibilitySortDirection' type64='q'/>
</method>
<method selector='accessibilitySplitters' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityStringForRange:' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityStyleRangeForIndex:' type64='{_NSRange=QQ}24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySubrole' type64='@16@0:8'>
<retval declared_type64='NSAccessibilitySubrole _Nullable' type64='@'/>
</method>
<method selector='accessibilityTabs' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityTitle' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityTitleUIElement' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityToolbarButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityTopLevelUIElement' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityURL' type64='@16@0:8'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='accessibilityUnitDescription' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityUnits' type64='q16@0:8'>
<retval declared_type64='NSAccessibilityUnits' type64='q'/>
</method>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityValueDescription' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVerticalScrollBar' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityVerticalUnitDescription' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVerticalUnits' type64='q16@0:8'>
<retval declared_type64='NSAccessibilityUnits' type64='q'/>
</method>
<method selector='accessibilityVisibleCells' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleCharacterRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityVisibleChildren' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleColumns' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleRows' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityWarningValue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityWindow' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityWindows' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityZoomButton' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isAccessibilityAlternateUIVisible' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityDisclosed' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityEdited' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityElement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityEnabled' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityExpanded' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityFocused' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityFrontmost' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityHidden' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityMain' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityMinimized' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityModal' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityOrderedByRow' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityProtectedContent' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityRequired' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilitySelected' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilitySelectorAllowed:' type64='B24@0:8:16'>
<arg declared_type64='SEL _Nonnull' index='0' name='selector' type64=':'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setAccessibilityActivationPoint:' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='accessibilityActivationPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityAllowedValues:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityAllowedValues' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityAlternateUIVisible:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityAlternateUIVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityApplicationFocusedUIElement:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityApplicationFocusedUIElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCancelButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityCancelButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityChildren:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityChildren' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityChildrenInNavigationOrder:' type64='v24@0:8@16'>
<arg declared_type64='NSArray&gt; * _Nullable' index='0' name='accessibilityChildrenInNavigationOrder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityClearButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityClearButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCloseButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityCloseButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumnCount:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='accessibilityColumnCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumnHeaderUIElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityColumnHeaderUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumnIndexRange:' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='accessibilityColumnIndexRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumnTitles:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityColumnTitles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityColumns:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityColumns' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityContents:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityContents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCriticalValue:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityCriticalValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCustomActions:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityCustomActions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityCustomRotors:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='accessibilityCustomRotors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDecrementButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityDecrementButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDefaultButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityDefaultButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDisclosed:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityDisclosed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDisclosedByRow:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityDisclosedByRow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDisclosedRows:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityDisclosedRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDisclosureLevel:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='accessibilityDisclosureLevel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityDocument:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityDocument' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityEdited:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityEdited' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityElement:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityElement' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityEnabled:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityExpanded:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityExpanded' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityExtrasMenuBar:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityExtrasMenuBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFilename:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityFilename' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFocused:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityFocused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFocusedWindow:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityFocusedWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFrame:' type64='v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type64='NSRect' index='0' name='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFrontmost:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityFrontmost' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityFullScreenButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityFullScreenButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityGrowArea:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityGrowArea' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHandles:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityHandles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHeader:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityHeader' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHelp:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityHelp' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHidden:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityHidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHorizontalScrollBar:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityHorizontalScrollBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHorizontalUnitDescription:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityHorizontalUnitDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityHorizontalUnits:' type64='v24@0:8q16'>
<arg declared_type64='NSAccessibilityUnits' index='0' name='accessibilityHorizontalUnits' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityIdentifier:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityIdentifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityIncrementButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityIncrementButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityIndex:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='accessibilityIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityInsertionPointLineNumber:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='accessibilityInsertionPointLineNumber' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabel:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityLabel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabelUIElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityLabelUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLabelValue:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='accessibilityLabelValue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityLinkedUIElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityLinkedUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMain:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityMain' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMainWindow:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMainWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMarkerGroupUIElement:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMarkerGroupUIElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMarkerTypeDescription:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityMarkerTypeDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMarkerUIElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityMarkerUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMarkerValues:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMarkerValues' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMaxValue:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMaxValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMenuBar:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMenuBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMinValue:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMinValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMinimizeButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityMinimizeButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityMinimized:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityMinimized' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityModal:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityModal' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityNextContents:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityNextContents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityNumberOfCharacters:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='accessibilityNumberOfCharacters' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityOrderedByRow:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityOrderedByRow' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityOrientation:' type64='v24@0:8q16'>
<arg declared_type64='NSAccessibilityOrientation' index='0' name='accessibilityOrientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityOverflowButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityOverflowButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityParent:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityParent' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityPlaceholderValue:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityPlaceholderValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityPreviousContents:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityPreviousContents' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityProtectedContent:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityProtectedContent' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityProxy:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityProxy' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRequired:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilityRequired' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRole:' type64='v24@0:8@16'>
<arg declared_type64='NSAccessibilityRole _Nullable' index='0' name='accessibilityRole' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRoleDescription:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityRoleDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRowCount:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='accessibilityRowCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRowHeaderUIElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityRowHeaderUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRowIndexRange:' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='accessibilityRowIndexRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRows:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityRulerMarkerType:' type64='v24@0:8q16'>
<arg declared_type64='NSAccessibilityRulerMarkerType' index='0' name='accessibilityRulerMarkerType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySearchButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilitySearchButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySearchMenu:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilitySearchMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelected:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='accessibilitySelected' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedCells:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedChildren:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedChildren' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedColumns:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedColumns' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedRows:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedText:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilitySelectedText' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedTextRange:' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='accessibilitySelectedTextRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySelectedTextRanges:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedTextRanges' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityServesAsTitleForUIElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityServesAsTitleForUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySharedCharacterRange:' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='accessibilitySharedCharacterRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySharedFocusElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySharedFocusElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySharedTextUIElements:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySharedTextUIElements' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityShownMenu:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityShownMenu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySortDirection:' type64='v24@0:8q16'>
<arg declared_type64='NSAccessibilitySortDirection' index='0' name='accessibilitySortDirection' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySplitters:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySplitters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilitySubrole:' type64='v24@0:8@16'>
<arg declared_type64='NSAccessibilitySubrole _Nullable' index='0' name='accessibilitySubrole' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTabs:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityTabs' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTitle:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityTitle' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTitleUIElement:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityTitleUIElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityToolbarButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityToolbarButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityTopLevelUIElement:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityTopLevelUIElement' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityURL:' type64='v24@0:8@16'>
<arg declared_type64='NSURL * _Nullable' index='0' name='accessibilityURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityUnitDescription:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityUnitDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityUnits:' type64='v24@0:8q16'>
<arg declared_type64='NSAccessibilityUnits' index='0' name='accessibilityUnits' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityValue:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityValueDescription:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityValueDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVerticalScrollBar:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityVerticalScrollBar' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVerticalUnitDescription:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nullable' index='0' name='accessibilityVerticalUnitDescription' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVerticalUnits:' type64='v24@0:8q16'>
<arg declared_type64='NSAccessibilityUnits' index='0' name='accessibilityVerticalUnits' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleCells:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityVisibleCells' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleCharacterRange:' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='accessibilityVisibleCharacterRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleChildren:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityVisibleChildren' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleColumns:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityVisibleColumns' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityVisibleRows:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityVisibleRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityWarningValue:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityWarningValue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityWindow:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityWindow' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityWindows:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilityWindows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAccessibilityZoomButton:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='accessibilityZoomButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityAdditions'>
<method selector='accessibilitySetOverrideValue:forAttribute:' type64='B32@0:8@16@24'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<arg declared_type64='NSAccessibilityAttributeName _Nonnull' index='1' name='attribute' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityButton'>
<method selector='accessibilityLabel' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityPerformPress' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityCheckBox'>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='NSNumber * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityColor'>
<method selector='accessibilityName' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityContainsTransientUI'>
<method selector='accessibilityPerformShowAlternateUI' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformShowDefaultUI' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAccessibilityAlternateUIVisible' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityCustomRotorItemSearchDelegate'>
<method selector='rotor:resultForSearchParameters:' type64='@32@0:8@16@24'>
<arg declared_type64='NSAccessibilityCustomRotor * _Nonnull' index='0' name='rotor' type64='@'/>
<arg declared_type64='NSAccessibilityCustomRotorSearchParameters * _Nonnull' index='1' name='searchParameters' type64='@'/>
<retval declared_type64='NSAccessibilityCustomRotorItemResult * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityElement'>
<method selector='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityIdentifier' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityParent' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='isAccessibilityFocused' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityElementLoading'>
<method selector='accessibilityElementWithToken:' type64='@24@0:8@16'>
<arg declared_type64='NSAccessibilityLoadingToken _Nonnull' index='0' name='token' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='accessibilityRangeInTargetElementWithToken:' type64='{_NSRange=QQ}24@0:8@16'>
<arg declared_type64='NSAccessibilityLoadingToken _Nonnull' index='0' name='token' type64='@'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityImage'>
<method selector='accessibilityLabel' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityLayoutArea'>
<method selector='accessibilityChildren' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityFocusedUIElement' type64='@16@0:8'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='accessibilityLabel' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='accessibilitySelectedChildren' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityLayoutItem'>
<method selector='setAccessibilityFrame:' type64='v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type64='NSRect' index='0' name='accessibilityFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityNavigableStaticText'>
<method selector='accessibilityFrameForRange:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityLineForIndex:' type64='q24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='index' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityRangeForLine:' type64='{_NSRange=QQ}24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='line' type64='q'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityStringForRange:' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityProgressIndicator'>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='NSNumber * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityRadioButton'>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='NSNumber * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityRow'>
<method selector='accessibilityDisclosureLevel' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='accessibilityIndex' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilitySlider'>
<method selector='accessibilityLabel' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityPerformDecrement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformIncrement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityStaticText'>
<method selector='accessibilityAttributedStringForRange:' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleCharacterRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityStepper'>
<method selector='accessibilityLabel' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityPerformDecrement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformIncrement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilitySwitch'>
<method selector='accessibilityPerformDecrement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityPerformIncrement' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='accessibilityValue' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityTable'>
<method selector='accessibilityColumnHeaderUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityColumns' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityHeaderGroup' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityLabel' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRowHeaderUIElements' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityRows' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedCells' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedColumns' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilitySelectedRows' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleCells' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleColumns' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='accessibilityVisibleRows' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='setAccessibilitySelectedRows:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nullable' index='0' name='accessibilitySelectedRows' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSAlertDelegate'>
<method selector='alertShowHelp:' type64='B24@0:8@16'>
<arg declared_type64='NSAlert * _Nonnull' index='0' name='alert' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAnimatablePropertyContainer'>
<method selector='animationForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSAnimatablePropertyKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='animations' type64='@16@0:8'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='animator' type64='@16@0:8'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='defaultAnimationForKey:' type64='@24@0:8@16'>
<arg declared_type64='NSAnimatablePropertyKey _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='setAnimations:' type64='v24@0:8@16'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='animations' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSAnimationDelegate'>
<method selector='animation:didReachProgressMark:' type64='v28@0:8@16f24'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<arg declared_type64='NSAnimationProgress' index='1' name='progress' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animation:valueForProgress:' type64='f28@0:8@16f24'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<arg declared_type64='NSAnimationProgress' index='1' name='progress' type64='f'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='animationDidEnd:' type64='v24@0:8@16'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationDidStop:' type64='v24@0:8@16'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animationShouldStart:' type64='B24@0:8@16'>
<arg declared_type64='NSAnimation * _Nonnull' index='0' name='animation' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAppearanceCustomization'>
<method selector='appearance' type64='@16@0:8'>
<retval declared_type64='NSAppearance * _Nullable' type64='@'/>
</method>
<method selector='effectiveAppearance' type64='@16@0:8'>
<retval declared_type64='NSAppearance * _Nonnull' type64='@'/>
</method>
<method selector='setAppearance:' type64='v24@0:8@16'>
<arg declared_type64='NSAppearance * _Nullable' index='0' name='appearance' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSApplicationDelegate'>
<method selector='application:continueUserActivity:restorationHandler:' type64='B40@0:8@16@24@?32'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSUserActivity * _Nonnull' index='1' name='userActivity' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSArray&gt; * _Nonnull)' function_pointer='true' index='2' name='restorationHandler' type64='@?'>
<arg declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:delegateHandlesKey:' type64='B32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:didDecodeRestorableState:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='app' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFailToContinueUserActivityWithType:error:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='userActivityType' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didReceiveRemoteNotification:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='userInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='deviceToken' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:didUpdateUserActivity:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSUserActivity * _Nonnull' index='1' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:openFile:' type64='B32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:openFileWithoutUI:' type64='B32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:openFiles:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='filenames' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:openTempFile:' type64='B32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:openURLs:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='urls' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:printFile:' type64='B32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:printFiles:withSettings:showPrintPanels:' type64='Q44@0:8@16@24@32B40'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='fileNames' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='printSettings' type64='@'/>
<arg declared_type64='BOOL' index='3' name='showPrintPanels' type64='B'/>
<retval declared_type64='NSApplicationPrintReply' type64='Q'/>
</method>
<method selector='application:userDidAcceptCloudKitShareWithMetadata:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='CKShareMetadata * _Nonnull' index='1' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:willContinueUserActivityWithType:' type64='B32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='userActivityType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='application:willEncodeRestorableState:' type64='v32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='app' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='coder' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='application:willPresentError:' type64='@32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='application' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='1' name='error' type64='@'/>
<retval declared_type64='NSError * _Nonnull' type64='@'/>
</method>
<method selector='applicationDidBecomeActive:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidChangeOcclusionState:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidChangeScreenParameters:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidFinishLaunching:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidHide:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidResignActive:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidUnhide:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDidUpdate:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationDockMenu:' type64='@24@0:8@16'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='applicationOpenUntitledFile:' type64='B24@0:8@16'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationShouldHandleReopen:hasVisibleWindows:' type64='B28@0:8@16B24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationShouldOpenUntitledFile:' type64='B24@0:8@16'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationShouldTerminate:' type64='Q24@0:8@16'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='NSApplicationTerminateReply' type64='Q'/>
</method>
<method selector='applicationShouldTerminateAfterLastWindowClosed:' type64='B24@0:8@16'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='applicationWillBecomeActive:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillFinishLaunching:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillHide:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillResignActive:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillTerminate:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillUnhide:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='applicationWillUpdate:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSApplicationScriptingDelegation'>
<method selector='application:delegateHandlesKey:' type64='B32@0:8@16@24'>
<arg declared_type64='NSApplication * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSBrowserDelegate'>
<method selector='browser:acceptDrop:atRow:column:dropOperation:' type64='B56@0:8@16@24q32q40Q48'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='column' type64='q'/>
<arg declared_type64='NSBrowserDropOperation' index='4' name='dropOperation' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:' type64='B48@0:8@16@24q32@40'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:child:ofItem:' type64='@40@0:8@16q24@32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='browser:createRowsForColumn:inMatrix:' type64='v40@0:8@16q24@32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<arg declared_type64='NSMatrix * _Nonnull' index='2' name='matrix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browser:didChangeLastColumn:toColumn:' type64='v40@0:8@16q24q32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='oldLastColumn' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:' type64='@56@0:8@16@24q32@40^{CGPoint=dd}48'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='4' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='browser:headerViewControllerForItem:' type64='@32@0:8@16@24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='browser:heightOfRow:inColumn:' type64='d40@0:8@16q24q32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='columnIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='browser:isColumnValid:' type64='B32@0:8@16q24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:isLeafItem:' type64='B32@0:8@16@24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:' type64='@48@0:8@16@24@32q40'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropDestination' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='2' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='column' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:' type64='q56@0:8@16q24q32q40@48'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='startRow' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='endRow' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='column' type64='q'/>
<arg declared_type64='NSString * _Nullable' index='4' name='searchString' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='browser:numberOfChildrenOfItem:' type64='q32@0:8@16@24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='browser:numberOfRowsInColumn:' type64='q32@0:8@16q24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='browser:objectValueForItem:' type64='@32@0:8@16@24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='browser:previewViewControllerForLeafItem:' type64='@32@0:8@16@24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='NSViewController * _Nullable' type64='@'/>
</method>
<method selector='browser:selectCellWithString:inColumn:' type64='B40@0:8@16@24q32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='title' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:selectRow:inColumn:' type64='B40@0:8@16q24q32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:selectionIndexesForProposedSelection:inColumn:' type64='@40@0:8@16@24q32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='browser:setObjectValue:forItem:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browser:shouldEditItem:' type64='B32@0:8@16@24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:shouldShowCellExpansionForRow:column:' type64='B40@0:8@16q24q32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:shouldSizeColumn:forUserResize:toWidth:' type64='d44@0:8@16q24B32d36'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<arg declared_type64='BOOL' index='2' name='forUserResize' type64='B'/>
<arg declared_type64='CGFloat' index='3' name='suggestedWidth' type64='d'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='searchString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browser:sizeToFitWidthOfColumn:' type64='d32@0:8@16q24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='browser:titleOfColumn:' type64='@32@0:8@16q24'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='browser:typeSelectStringForRow:inColumn:' type64='@40@0:8@16q24q32'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='browser:validateDrop:proposedRow:column:dropOperation:' type64='Q56@0:8@16@24^q32^q40^Q48'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='NSInteger * _Nonnull' index='2' name='row' type64='^q'/>
<arg declared_type64='NSInteger * _Nonnull' index='3' name='column' type64='^q'/>
<arg declared_type64='NSBrowserDropOperation * _Nonnull' index='4' name='dropOperation' type64='^Q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='browser:willDisplayCell:atRow:column:' type64='v48@0:8@16@24q32q40'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<arg declared_type64='NSInteger' index='3' name='column' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:' type64='B48@0:8@16@24q32@40'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='column' type64='q'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='3' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='browserColumnConfigurationDidChange:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browserDidScroll:' type64='v24@0:8@16'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='browserWillScroll:' type64='v24@0:8@16'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rootItemForBrowser:' type64='@24@0:8@16'>
<arg declared_type64='NSBrowser * _Nonnull' index='0' name='browser' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSCandidateListTouchBarItemDelegate'>
<method selector='candidateListTouchBarItem:beginSelectingCandidateAtIndex:' type64='v32@0:8@16q24'>
<arg declared_type64='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='candidateListTouchBarItem:changeSelectionFromCandidateAtIndex:toIndex:' type64='v40@0:8@16q24q32'>
<arg declared_type64='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='previousIndex' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='candidateListTouchBarItem:changedCandidateListVisibility:' type64='v28@0:8@16B24'>
<arg declared_type64='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type64='@'/>
<arg declared_type64='BOOL' index='1' name='isVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='candidateListTouchBarItem:endSelectingCandidateAtIndex:' type64='v32@0:8@16q24'>
<arg declared_type64='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSChangeSpelling'>
<method selector='changeSpelling:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSCloudSharingServiceDelegate'>
<method selector='optionsForSharingService:shareProvider:' type64='Q32@0:8@16@24'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='cloudKitSharingService' type64='@'/>
<arg declared_type64='NSItemProvider * _Nonnull' index='1' name='provider' type64='@'/>
<retval declared_type64='NSCloudKitSharingServiceOptions' type64='Q'/>
</method>
<method selector='sharingService:didCompleteForItems:error:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSError * _Nullable' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:didSaveShare:' type64='v32@0:8@16@24'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='CKShare * _Nonnull' index='1' name='share' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:didStopSharing:' type64='v32@0:8@16@24'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='CKShare * _Nonnull' index='1' name='share' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSCloudSharingValidation'>
<method selector='cloudShareForUserInterfaceItem:' type64='@24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='CKShare * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionLayoutContainer'>
<method selector='contentInsets' type64='{NSDirectionalEdgeInsets=dddd}16@0:8'>
<retval declared_type64='NSDirectionalEdgeInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='contentSize' type64='{CGSize=dd}16@0:8'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='effectiveContentInsets' type64='{NSDirectionalEdgeInsets=dddd}16@0:8'>
<retval declared_type64='NSDirectionalEdgeInsets' type64='{NSDirectionalEdgeInsets=dddd}'/>
</method>
<method selector='effectiveContentSize' type64='{CGSize=dd}16@0:8'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionLayoutEnvironment'>
<method selector='container' type64='@16@0:8'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionLayoutVisibleItem'>
<method selector='alpha' type64='d16@0:8'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='center' type64='{CGPoint=dd}16@0:8'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='frame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indexPath' type64='@16@0:8'>
<retval declared_type64='NSIndexPath * _Nonnull' type64='@'/>
</method>
<method selector='isHidden' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='name' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='representedElementCategory' type64='q16@0:8'>
<retval declared_type64='NSCollectionElementCategory' type64='q'/>
</method>
<method selector='representedElementKind' type64='@16@0:8'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAlpha:' type64='v24@0:8d16'>
<arg declared_type64='CGFloat' index='0' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCenter:' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='center' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHidden:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='hidden' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setZIndex:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='zIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='zIndex' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewDataSource'>
<method selector='collectionView:itemForRepresentedObjectAtIndexPath:' type64='@32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='NSCollectionViewItem * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:numberOfItemsInSection:' type64='q32@0:8@16q24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='section' type64='q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='collectionView:viewForSupplementaryElementOfKind:atIndexPath:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='1' name='kind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
<method selector='numberOfSectionsInCollectionView:' type64='q24@0:8@16'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewDelegate'>
<method selector='collectionView:acceptDrop:index:dropOperation:' type64='B48@0:8@16@24q32q40'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='index' type64='q'/>
<arg declared_type64='NSCollectionViewDropOperation' index='3' name='dropOperation' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:acceptDrop:indexPath:dropOperation:' type64='B48@0:8@16@24@32q40'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<arg declared_type64='NSCollectionViewDropOperation' index='3' name='dropOperation' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexPaths:withEvent:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexes:withEvent:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='indexes' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:didChangeItemsAtIndexPaths:toHighlightState:' type64='v40@0:8@16@24q32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSCollectionViewItemHighlightState' index='2' name='highlightState' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didDeselectItemsAtIndexPaths:' type64='v32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewItem * _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='2' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='3' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:didSelectItemsAtIndexPaths:' type64='v32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:' type64='@48@0:8@16@24@32^{CGPoint=dd}40'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexes:withEvent:offset:' type64='@48@0:8@16@24@32^{CGPoint=dd}40'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='indexes' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<arg declared_type64='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type64='^{CGPoint=dd}'/>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:draggingSession:endedAtPoint:dragOperation:' type64='v56@0:8@16@24{CGPoint=dd}32Q48'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='3' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:' type64='v56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSSet * _Nonnull' index='3' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:' type64='v56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='3' name='indexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropURL' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='2' name='indexPaths' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropURL' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='2' name='indexes' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndex:' type64='@32@0:8@16Q24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndexPath:' type64='@32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='1' name='indexPath' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='collectionView:shouldChangeItemsAtIndexPaths:toHighlightState:' type64='@40@0:8@16@24q32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSCollectionViewItemHighlightState' index='2' name='highlightState' type64='q'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:shouldDeselectItemsAtIndexPaths:' type64='@32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:shouldSelectItemsAtIndexPaths:' type64='@32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:transitionLayoutForOldLayout:newLayout:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='fromLayout' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='2' name='toLayout' type64='@'/>
<retval declared_type64='NSCollectionViewTransitionLayout * _Nonnull' type64='@'/>
</method>
<method selector='collectionView:updateDraggingItemsForDrag:' type64='v32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:validateDrop:proposedIndex:dropOperation:' type64='Q48@0:8@16@24^q32^q40'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<arg declared_type64='NSInteger * _Nonnull' index='2' name='proposedDropIndex' type64='^q'/>
<arg declared_type64='NSCollectionViewDropOperation * _Nonnull' index='3' name='proposedDropOperation' type64='^q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='collectionView:validateDrop:proposedIndexPath:dropOperation:' type64='Q48@0:8@16@24^@32^q40'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull * _Nonnull' index='2' name='proposedDropIndexPath' type64='^@'/>
<arg declared_type64='NSCollectionViewDropOperation * _Nonnull' index='3' name='proposedDropOperation' type64='^q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewItem * _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<arg declared_type64='NSCollectionViewSupplementaryElementKind _Nonnull' index='2' name='elementKind' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='3' name='indexPath' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:writeItemsAtIndexPaths:toPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSSet * _Nonnull' index='1' name='indexPaths' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='collectionView:writeItemsAtIndexes:toPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='indexes' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewDelegateFlowLayout'>
<method selector='collectionView:layout:insetForSectionAtIndex:' type64='{NSEdgeInsets=dddd}40@0:8@16@24q32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='NSEdgeInsets' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='collectionView:layout:minimumInteritemSpacingForSectionAtIndex:' type64='d40@0:8@16@24q32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='collectionView:layout:minimumLineSpacingForSectionAtIndex:' type64='d40@0:8@16@24q32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='collectionView:layout:referenceSizeForFooterInSection:' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:referenceSizeForHeaderInSection:' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='section' type64='q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:sizeForItemAtIndexPath:' type64='{CGSize=dd}40@0:8@16@24@32'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type64='@'/>
<arg declared_type64='NSIndexPath * _Nonnull' index='2' name='indexPath' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewElement'>
<method selector='applyLayoutAttributes:' type64='v24@0:8@16'>
<arg declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didTransitionFromLayout:toLayout:' type64='v32@0:8@16@24'>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preferredLayoutAttributesFittingAttributes:' type64='@24@0:8@16'>
<arg declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type64='@'/>
<retval declared_type64='NSCollectionViewLayoutAttributes * _Nonnull' type64='@'/>
</method>
<method selector='prepareForReuse' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='willTransitionFromLayout:toLayout:' type64='v32@0:8@16@24'>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type64='@'/>
<arg declared_type64='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewPrefetching'>
<method selector='collectionView:cancelPrefetchingForItemsAtIndexPaths:' type64='v32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='collectionView:prefetchItemsAtIndexPaths:' type64='v32@0:8@16@24'>
<arg declared_type64='NSCollectionView * _Nonnull' index='0' name='collectionView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='indexPaths' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewSectionHeaderView'>
<method selector='sectionCollapseButton' type64='@16@0:8'>
<retval declared_type64='NSButton * _Nullable' type64='@'/>
</method>
<method selector='setSectionCollapseButton:' type64='v24@0:8@16'>
<arg declared_type64='NSButton * _Nullable' index='0' name='sectionCollapseButton' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorChanging'>
<method selector='changeColor:' type64='v24@0:8@16'>
<arg declared_type64='NSColorPanel * _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPanelResponderMethod'>
<method selector='changeColor:' type64='v24@0:8@16'>
<arg declared_type64='NSColorPanel * _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPickingCustom'>
<method selector='currentMode' type64='q16@0:8'>
<retval declared_type64='NSColorPanelMode' type64='q'/>
</method>
<method selector='provideNewView:' type64='@20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='initialRequest' type64='B'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
<method selector='setColor:' type64='v24@0:8@16'>
<arg declared_type64='NSColor * _Nonnull' index='0' name='newColor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsMode:' type64='B24@0:8q16'>
<arg declared_type64='NSColorPanelMode' index='0' name='mode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPickingDefault'>
<method selector='alphaControlAddedOrRemoved:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='attachColorList:' type64='v24@0:8@16'>
<arg declared_type64='NSColorList * _Nonnull' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='buttonToolTip' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='detachColorList:' type64='v24@0:8@16'>
<arg declared_type64='NSColorList * _Nonnull' index='0' name='colorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithPickerMask:colorPanel:' type64='@32@0:8Q16@24'>
<arg declared_type64='NSUInteger' index='0' name='mask' type64='Q'/>
<arg declared_type64='NSColorPanel * _Nonnull' index='1' name='owningColorPanel' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='insertNewButtonImage:in:' type64='v32@0:8@16@24'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='newButtonImage' type64='@'/>
<arg declared_type64='NSButtonCell * _Nonnull' index='1' name='buttonCell' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='minContentSize' type64='{CGSize=dd}16@0:8'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='provideNewButtonImage' type64='@16@0:8'>
<retval declared_type64='NSImage * _Nonnull' type64='@'/>
</method>
<method selector='setMode:' type64='v24@0:8q16'>
<arg declared_type64='NSColorPanelMode' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewSizeChanged:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxCellDataSource'>
<method selector='comboBoxCell:completedString:' type64='@32@0:8@16@24'>
<arg declared_type64='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='uncompletedString' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='comboBoxCell:indexOfItemWithStringValue:' type64='Q32@0:8@16@24'>
<arg declared_type64='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='comboBoxCell:objectValueForItemAtIndex:' type64='@32@0:8@16q24'>
<arg declared_type64='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='numberOfItemsInComboBoxCell:' type64='q24@0:8@16'>
<arg declared_type64='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxDataSource'>
<method selector='comboBox:completedString:' type64='@32@0:8@16@24'>
<arg declared_type64='NSComboBox * _Nonnull' index='0' name='comboBox' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='comboBox:indexOfItemWithStringValue:' type64='Q32@0:8@16@24'>
<arg declared_type64='NSComboBox * _Nonnull' index='0' name='comboBox' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='comboBox:objectValueForItemAtIndex:' type64='@32@0:8@16q24'>
<arg declared_type64='NSComboBox * _Nonnull' index='0' name='comboBox' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='numberOfItemsInComboBox:' type64='q24@0:8@16'>
<arg declared_type64='NSComboBox * _Nonnull' index='0' name='comboBox' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxDelegate'>
<method selector='comboBoxSelectionDidChange:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='comboBoxSelectionIsChanging:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='comboBoxWillDismiss:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='comboBoxWillPopUp:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSControlSubclassNotifications'>
<method selector='controlTextDidBeginEditing:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='controlTextDidChange:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='controlTextDidEndEditing:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSControlTextEditingDelegate'>
<method selector='control:didFailToFormatString:errorDescription:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='error' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='control:didFailToValidatePartialString:errorDescription:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='control:isValidObject:' type64='B32@0:8@16@24'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='obj' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='control:textShouldBeginEditing:' type64='B32@0:8@16@24'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSText * _Nonnull' index='1' name='fieldEditor' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='control:textShouldEndEditing:' type64='B32@0:8@16@24'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSText * _Nonnull' index='1' name='fieldEditor' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:' type64='@64@0:8@16@24@32{_NSRange=QQ}40^q56'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='words' type64='@'/>
<arg declared_type64='NSRange' index='3' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger * _Nonnull' index='4' name='index' type64='^q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='control:textView:doCommandBySelector:' type64='B40@0:8@16@24:32'>
<arg declared_type64='NSControl * _Nonnull' index='0' name='control' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='2' name='commandSelector' type64=':'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='controlTextDidBeginEditing:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='controlTextDidChange:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='controlTextDidEndEditing:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='obj' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSDatePickerCellDelegate'>
<method selector='datePickerCell:validateProposedDateValue:timeInterval:' type64='v40@0:8@16^@24^d32'>
<arg declared_type64='NSDatePickerCell * _Nonnull' index='0' name='datePickerCell' type64='@'/>
<arg declared_type64='NSDate * _Nonnull * _Nonnull' index='1' name='proposedDateValue' type64='^@'/>
<arg declared_type64='NSTimeInterval * _Nullable' index='2' name='proposedTimeInterval' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedTextStorageDelegateInterface'>
<method selector='textStorageDidProcessEditing:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStorageWillProcessEditing:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSDockTilePlugIn'>
<method selector='dockMenu' type64='@16@0:8'>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='setDockTile:' type64='v24@0:8@16'>
<arg declared_type64='NSDockTile * _Nullable' index='0' name='dockTile' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingDestination'>
<method selector='concludeDragOperation:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingEnded:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingEntered:' type64='Q24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='draggingExited:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingUpdated:' type64='Q24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='performDragOperation:' type64='B24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareForDragOperation:' type64='B24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='updateDraggingItemsForDrag:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wantsPeriodicDraggingUpdates' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingInfo'>
<method selector='animatesToDestination' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='draggedImage' type64='@16@0:8'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='draggedImageLocation' type64='{CGPoint=dd}16@0:8'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingDestinationWindow' type64='@16@0:8'>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='draggingFormation' type64='q16@0:8'>
<retval declared_type64='NSDraggingFormation' type64='q'/>
</method>
<method selector='draggingLocation' type64='{CGPoint=dd}16@0:8'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingPasteboard' type64='@16@0:8'>
<retval declared_type64='NSPasteboard * _Nonnull' type64='@'/>
</method>
<method selector='draggingSequenceNumber' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='draggingSource' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='draggingSourceOperationMask' type64='Q16@0:8'>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:' type64='v56@0:8Q16@24@32@40@?48'>
<arg declared_type64='NSDraggingItemEnumerationOptions' index='0' name='enumOpts' type64='Q'/>
<arg declared_type64='NSView * _Nullable' index='1' name='view' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='classArray' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='searchOptions' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSDraggingItem * _Nonnull, NSInteger, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type64='@?'>
<arg declared_type64='NSDraggingItem * _Nonnull' type64='@'/>
<arg declared_type64='NSInteger' type64='q'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='namesOfPromisedFilesDroppedAtDestination:' type64='@24@0:8@16'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='dropDestination' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='numberOfValidItemsForDrop' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='resetSpringLoading' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnimatesToDestination:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='animatesToDestination' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDraggingFormation:' type64='v24@0:8q16'>
<arg declared_type64='NSDraggingFormation' index='0' name='draggingFormation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfValidItemsForDrop:' type64='v24@0:8q16'>
<arg declared_type64='NSInteger' index='0' name='numberOfValidItemsForDrop' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='slideDraggedImageTo:' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingHighlight' type64='q16@0:8'>
<retval declared_type64='NSSpringLoadingHighlight' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingSource'>
<method selector='draggingSession:endedAtPoint:operation:' type64='v48@0:8@16{CGPoint=dd}24Q40'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='2' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingSession:movedToPoint:' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingSession:sourceOperationMaskForDraggingContext:' type64='Q32@0:8@16q24'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSDraggingContext' index='1' name='context' type64='q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='draggingSession:willBeginAtPoint:' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='ignoreModifierKeysForDraggingSession:' type64='B24@0:8@16'>
<arg declared_type64='NSDraggingSession * _Nonnull' index='0' name='session' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingSourceDeprecated'>
<method selector='draggedImage:beganAt:' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggedImage:endedAt:deposited:' type64='v44@0:8@16{CGPoint=dd}24B40'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggedImage:endedAt:operation:' type64='v48@0:8@16{CGPoint=dd}24Q40'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='2' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggedImage:movedTo:' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type64='NSImage * _Null_unspecified' index='0' name='image' type64='@'/>
<arg declared_type64='NSPoint' index='1' name='screenPoint' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='draggingSourceOperationMaskForLocal:' type64='Q20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='ignoreModifierKeysWhileDragging' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='namesOfPromisedFilesDroppedAtDestination:' type64='@24@0:8@16'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='dropDestination' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSDrawerDelegate'>
<method selector='drawerDidClose:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerDidOpen:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerShouldClose:' type64='B24@0:8@16'>
<arg declared_type64='NSDrawer * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawerShouldOpen:' type64='B24@0:8@16'>
<arg declared_type64='NSDrawer * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='drawerWillClose:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerWillOpen:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawerWillResizeContents:toSize:' type64='{CGSize=dd}40@0:8@16{CGSize=dd}24'>
<arg declared_type64='NSDrawer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSSize' index='1' name='contentSize' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSEditor'>
<method selector='commitEditing' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commitEditingAndReturnError:' type64='B24@0:8^@16'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:' type64='v40@0:8@16:24^v32'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='SEL _Nullable' index='1' name='didCommitSelector' type64=':'/>
<arg declared_type64='void * _Nullable' index='2' name='contextInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='discardEditing' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSEditorRegistration'>
<method selector='objectDidBeginEditing:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='editor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='objectDidEndEditing:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='editor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSFilePromiseProviderDelegate'>
<method selector='filePromiseProvider:fileNameForType:' type64='@32@0:8@16@24'>
<arg declared_type64='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='fileType' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='filePromiseProvider:writePromiseToURL:completionHandler:' type64='v40@0:8@16@24@?32'>
<arg declared_type64='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='operationQueueForFilePromiseProvider:' type64='@24@0:8@16'>
<arg declared_type64='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type64='@'/>
<retval declared_type64='NSOperationQueue * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontChanging'>
<method selector='changeFont:' type64='v24@0:8@16'>
<arg declared_type64='NSFontManager * _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validModesForFontPanel:' type64='Q24@0:8@16'>
<arg declared_type64='NSFontPanel * _Nonnull' index='0' name='fontPanel' type64='@'/>
<retval declared_type64='NSFontPanelModeMask' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontManagerDelegate'>
<method selector='fontManager:willIncludeFont:' type64='B32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='fontName' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontManagerResponderMethod'>
<method selector='changeFont:' type64='v24@0:8@16'>
<arg declared_type64='NSFontManager * _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontPanelValidationAdditions'>
<method selector='validModesForFontPanel:' type64='Q24@0:8@16'>
<arg declared_type64='NSFontPanel * _Nonnull' index='0' name='fontPanel' type64='@'/>
<retval declared_type64='NSFontPanelModeMask' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSGestureRecognizerDelegate'>
<method selector='gestureRecognizer:shouldAttemptToRecognizeWithEvent:' type64='B32@0:8@16@24'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:' type64='B32@0:8@16@24'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:' type64='B32@0:8@16@24'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSTouch * _Nonnull' index='1' name='touch' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:' type64='B32@0:8@16@24'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizer:shouldRequireFailureOfGestureRecognizer:' type64='B32@0:8@16@24'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='gestureRecognizerShouldBegin:' type64='B24@0:8@16'>
<arg declared_type64='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSGlyphStorage'>
<method selector='attributedString' type64='@16@0:8'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:' type64='v48@0:8r^I16Q24Q32Q40'>
<arg const='true' declared_type64='NSGlyph * _Nonnull' index='0' name='glyphs' type64='^I'/>
<arg declared_type64='NSUInteger' index='1' name='length' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutOptions' type64='Q16@0:8'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='setIntAttribute:value:forGlyphAtIndex:' type64='v40@0:8q16q24Q32'>
<arg declared_type64='NSInteger' index='0' name='attributeTag' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='val' type64='q'/>
<arg declared_type64='NSUInteger' index='2' name='glyphIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSHapticFeedbackPerformer'>
<method selector='performFeedbackPattern:performanceTime:' type64='v32@0:8q16Q24'>
<arg declared_type64='NSHapticFeedbackPattern' index='0' name='pattern' type64='q'/>
<arg declared_type64='NSHapticFeedbackPerformanceTime' index='1' name='performanceTime' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSIgnoreMisspelledWords'>
<method selector='ignoreSpelling:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSImageDelegate'>
<method selector='image:didLoadPartOfRepresentation:withValidRows:' type64='v40@0:8@16@24q32'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSImageRep * _Nonnull' index='1' name='rep' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='rows' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image:didLoadRepresentation:withStatus:' type64='v40@0:8@16@24Q32'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSImageRep * _Nonnull' index='1' name='rep' type64='@'/>
<arg declared_type64='NSImageLoadStatus' index='2' name='status' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image:didLoadRepresentationHeader:' type64='v32@0:8@16@24'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSImageRep * _Nonnull' index='1' name='rep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='image:willLoadRepresentation:' type64='v32@0:8@16@24'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSImageRep * _Nonnull' index='1' name='rep' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='imageDidNotDraw:inRect:' type64='@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type64='NSImage * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSInputServerMouseTracker'>
<method selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:' type64='B56@0:8Q16{CGPoint=dd}24Q40@48'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='2' name='flags' type64='Q'/>
<arg declared_type64='id _Null_unspecified' index='3' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:' type64='B56@0:8Q16{CGPoint=dd}24Q40@48'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='2' name='flags' type64='Q'/>
<arg declared_type64='id _Null_unspecified' index='3' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:' type64='v56@0:8Q16{CGPoint=dd}24Q40@48'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSPoint' index='1' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='2' name='flags' type64='Q'/>
<arg declared_type64='id _Null_unspecified' index='3' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSInputServiceProvider'>
<method selector='activeConversationChanged:toNewConversation:' type64='v32@0:8@16q24'>
<arg declared_type64='id _Null_unspecified' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='newConversation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='activeConversationWillChange:fromOldConversation:' type64='v32@0:8@16q24'>
<arg declared_type64='id _Null_unspecified' index='0' name='sender' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='oldConversation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canBeDisabled' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='doCommandBySelector:client:' type64='v32@0:8:16@24'>
<arg declared_type64='SEL _Null_unspecified' index='0' name='selector' type64=':'/>
<arg declared_type64='id _Null_unspecified' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputClientBecomeActive:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputClientDisabled:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputClientEnabled:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputClientResignActive:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertText:client:' type64='v32@0:8@16@24'>
<arg declared_type64='id _Null_unspecified' index='0' name='string' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedTextAbandoned:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedTextSelectionChanged:client:' type64='v40@0:8{_NSRange=QQ}16@32'>
<arg declared_type64='NSRange' index='0' name='newSel' type64='{_NSRange=QQ}'/>
<arg declared_type64='id _Null_unspecified' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='terminate:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wantsToDelayTextChangeNotifications' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToHandleMouseEvents' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToInterpretAllKeystrokes' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueBindingCreation'>
<method selector='bind:toObject:withKeyPath:options:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='observable' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='keyPath' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='exposeBinding:' type64='v24@0:8@16'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='exposedBindings' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='infoForBinding:' type64='@24@0:8@16'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='optionDescriptionsForBinding:' type64='@24@0:8@16'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='unbind:' type64='v24@0:8@16'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='valueClassForBinding:' type64='#24@0:8@16'>
<arg declared_type64='NSBindingName _Nonnull' index='0' name='binding' type64='@'/>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
</informal_protocol>
<informal_protocol name='NSLayerDelegateContentsScaleUpdating'>
<method selector='layer:shouldInheritContentsScale:fromWindow:' type64='B40@0:8@16d24@32'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='newScale' type64='d'/>
<arg declared_type64='NSWindow * _Nonnull' index='2' name='window' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSLayoutManagerDelegate'>
<method selector='layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16Q24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGPoint=dd}72Q88'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='2' name='textContainer' type64='@'/>
<arg declared_type64='NSRect' index='3' name='proposedRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' index='4' name='glyphPosition' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='5' name='charIndex' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:' type64='v36@0:8@16@24B32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<arg declared_type64='BOOL' index='2' name='layoutFinishedFlag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='glyphIndex' type64='Q'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:' type64='B32@0:8@16Q24'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:' type64='B32@0:8@16Q24'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:' type64='Q72@0:8@16r^S24r^q32r^Q40@48{_NSRange=QQ}56'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg const='true' declared_type64='CGGlyph * _Nonnull' index='1' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='NSGlyphProperty * _Nonnull' index='2' name='props' type64='^q'/>
<arg const='true' declared_type64='NSUInteger * _Nonnull' index='3' name='charIndexes' type64='^Q'/>
<arg declared_type64='NSFont * _Nonnull' index='4' name='aFont' type64='@'/>
<arg declared_type64='NSRange' index='5' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:' type64='B72@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^{CGRect={CGPoint=dd}{CGSize=dd}}32N^d40@48{_NSRange=QQ}56'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSRect * _Nonnull' index='1' name='lineFragmentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect * _Nonnull' index='2' name='lineFragmentUsedRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGFloat * _Nonnull' index='3' name='baselineOffset' type64='^d'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='4' name='textContainer' type64='@'/>
<arg declared_type64='NSRange' index='5' name='glyphRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layoutManager:shouldUseAction:forControlCharacterAtIndex:' type64='q40@0:8@16q24Q32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSControlCharacterAction' index='1' name='action' type64='q'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSControlCharacterAction' type64='q'/>
</method>
<method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:' type64='@52@0:8@16@24B32Q36^{_NSRange=QQ}44'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='attrs' type64='@'/>
<arg declared_type64='BOOL' index='2' name='toScreen' type64='B'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nullable' index='4' name='effectiveCharRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='layoutManager:textContainer:didChangeGeometryFromSize:' type64='v48@0:8@16@24{CGSize=dd}32'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type64='@'/>
<arg declared_type64='NSTextContainer * _Nonnull' index='1' name='textContainer' type64='@'/>
<arg declared_type64='NSSize' index='2' name='oldSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:' type64='v24@0:8@16'>
<arg declared_type64='NSLayoutManager * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSMenuDelegate'>
<method selector='confinementRectForMenu:onScreen:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSScreen * _Nullable' index='1' name='screen' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='menu:updateItem:atIndex:shouldCancel:' type64='B44@0:8@16@24q32B40'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSMenuItem * _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='index' type64='q'/>
<arg declared_type64='BOOL' index='3' name='shouldCancel' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='menu:willHighlightItem:' type64='v32@0:8@16@24'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSMenuItem * _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuDidClose:' type64='v24@0:8@16'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuHasKeyEquivalent:forEvent:target:action:' type64='B48@0:8@16@24^@32^:40'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='id _Nullable * _Nonnull' index='2' name='target' type64='^@'/>
<arg declared_type64='SEL _Nullable * _Nonnull' index='3' name='action' type64='^:'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='menuNeedsUpdate:' type64='v24@0:8@16'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='menuWillOpen:' type64='v24@0:8@16'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='numberOfItemsInMenu:' type64='q24@0:8@16'>
<arg declared_type64='NSMenu * _Nonnull' index='0' name='menu' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSMenuItemValidation'>
<method selector='validateMenuItem:' type64='B24@0:8@16'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='menuItem' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSMenuValidation'>
<method selector='validateMenuItem:' type64='B24@0:8@16'>
<arg declared_type64='NSMenuItem * _Nonnull' index='0' name='menuItem' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSNibAwaking'>
<method selector='awakeFromNib' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForInterfaceBuilder' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSOpenSavePanelDelegate'>
<method selector='panel:didChangeToDirectoryURL:' type64='v32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSURL * _Nullable' index='1' name='url' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='panel:shouldEnableURL:' type64='B32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='panel:userEnteredFilename:confirmed:' type64='@36@0:8@16@24B32'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<arg declared_type64='BOOL' index='2' name='okFlag' type64='B'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='panel:validateURL:error:' type64='B40@0:8@16@24^@32'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='panel:willExpand:' type64='v28@0:8@16B24'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='BOOL' index='1' name='expanding' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='panelSelectionDidChange:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSOutlineViewDataSource'>
<method selector='outlineView:acceptDrop:item:childIndex:' type64='B48@0:8@16@24@32q40'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='index' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:child:ofItem:' type64='@40@0:8@16q24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='outlineView:draggingSession:endedAtPoint:operation:' type64='v56@0:8@16@24{CGPoint=dd}32Q48'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='3' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:draggingSession:willBeginAtPoint:forItems:' type64='v56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSArray * _Nonnull' index='3' name='draggedItems' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:isItemExpandable:' type64='B32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:itemForPersistentObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropDestination' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='items' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outlineView:numberOfChildrenOfItem:' type64='q32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='outlineView:objectValueForTableColumn:byItem:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:pasteboardWriterForItem:' type64='@32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:persistentObjectForItem:' type64='@32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='item' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:setObjectValue:forTableColumn:byItem:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nullable' index='3' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:sortDescriptorsDidChange:' type64='v32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='oldDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:updateDraggingItemsForDrag:' type64='v32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:' type64='Q48@0:8@16@24@32q40'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='item' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='index' type64='q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='outlineView:writeItems:toPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSOutlineViewDelegate'>
<method selector='outlineView:dataCellForTableColumn:item:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='NSCell * _Nullable' type64='@'/>
</method>
<method selector='outlineView:didAddRowView:forRow:' type64='v40@0:8@16@24q32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableRowView * _Nonnull' index='1' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:didClickTableColumn:' type64='v32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:didDragTableColumn:' type64='v32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:didRemoveRowView:forRow:' type64='v40@0:8@16@24q32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableRowView * _Nonnull' index='1' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:heightOfRowByItem:' type64='d32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='outlineView:isGroupItem:' type64='B32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:mouseDownInHeaderOfTableColumn:' type64='v32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:' type64='@48@0:8@16@24@32@40'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='startItem' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='endItem' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='searchString' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='outlineView:rowViewForItem:' type64='@32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='NSTableRowView * _Nullable' type64='@'/>
</method>
<method selector='outlineView:selectionIndexesForProposedSelection:' type64='@32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type64='@'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='outlineView:shouldCollapseItem:' type64='B32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldEditTableColumn:item:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldExpandItem:' type64='B32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldReorderColumn:toColumn:' type64='B40@0:8@16q24q32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='newColumnIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldSelectItem:' type64='B32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldSelectTableColumn:' type64='B32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldShowCellExpansionForTableColumn:item:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldShowOutlineCellForItem:' type64='B32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldTrackCell:forTableColumn:item:' type64='B48@0:8@16@24@32@40'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='3' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='searchString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='outlineView:sizeToFitWidthOfColumn:' type64='d32@0:8@16q24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='outlineView:tintConfigurationForItem:' type64='@32@0:8@16@24'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='NSTintConfiguration * _Nullable' type64='@'/>
</method>
<method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:' type64='@72@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32@40@48{CGPoint=dd}56'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRectPointer _Nonnull' index='2' name='rect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTableColumn * _Nullable' index='3' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='4' name='item' type64='@'/>
<arg declared_type64='NSPoint' index='5' name='mouseLocation' type64='{CGPoint=dd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='outlineView:typeSelectStringForTableColumn:item:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='outlineView:viewForTableColumn:item:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='item' type64='@'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='outlineView:willDisplayCell:forTableColumn:item:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='3' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='id _Nonnull' index='3' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewColumnDidMove:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewColumnDidResize:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewItemDidCollapse:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewItemDidExpand:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewItemWillCollapse:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewItemWillExpand:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewSelectionDidChange:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outlineViewSelectionIsChanging:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectionShouldChangeInOutlineView:' type64='B24@0:8@16'>
<arg declared_type64='NSOutlineView * _Nonnull' index='0' name='outlineView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSPageControllerDelegate'>
<method selector='pageController:didTransitionToObject:' type64='v32@0:8@16@24'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageController:frameForObject:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='pageController:identifierForObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='object' type64='@'/>
<retval declared_type64='NSPageControllerObjectIdentifier _Nonnull' type64='@'/>
</method>
<method selector='pageController:prepareViewController:withObject:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='NSViewController * _Nonnull' index='1' name='viewController' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='object' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageController:viewControllerForIdentifier:' type64='@32@0:8@16@24'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<arg declared_type64='NSPageControllerObjectIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='NSViewController * _Nonnull' type64='@'/>
</method>
<method selector='pageControllerDidEndLiveTransition:' type64='v24@0:8@16'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageControllerWillStartLiveTransition:' type64='v24@0:8@16'>
<arg declared_type64='NSPageController * _Nonnull' index='0' name='pageController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardItemDataProvider'>
<method selector='pasteboard:item:provideDataForType:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSPasteboard * _Nullable' index='0' name='pasteboard' type64='@'/>
<arg declared_type64='NSPasteboardItem * _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='2' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteboardFinishedWithDataProvider:' type64='v24@0:8@16'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardOwner'>
<method selector='pasteboard:provideDataForType:' type64='v32@0:8@16@24'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteboardChangedOwner:' type64='v24@0:8@16'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardReading'>
<method selector='initWithPasteboardPropertyList:ofType:' type64='@32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='propertyList' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='readableTypesForPasteboard:' type64='@24@0:8@16'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='readingOptionsForType:pasteboard:' type64='Q32@0:8@16@24'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pasteboard' type64='@'/>
<retval declared_type64='NSPasteboardReadingOptions' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardTypeOwner'>
<method selector='pasteboard:provideDataForType:' type64='v32@0:8@16@24'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='1' name='type' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pasteboardChangedOwner:' type64='v24@0:8@16'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardWriting'>
<method selector='pasteboardPropertyListForType:' type64='@24@0:8@16'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='writableTypesForPasteboard:' type64='@24@0:8@16'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pasteboard' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='writingOptionsForType:pasteboard:' type64='Q32@0:8@16@24'>
<arg declared_type64='NSPasteboardType _Nonnull' index='0' name='type' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pasteboard' type64='@'/>
<retval declared_type64='NSPasteboardWritingOptions' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSPathCellDelegate'>
<method selector='pathCell:willDisplayOpenPanel:' type64='v32@0:8@16@24'>
<arg declared_type64='NSPathCell * _Nonnull' index='0' name='pathCell' type64='@'/>
<arg declared_type64='NSOpenPanel * _Nonnull' index='1' name='openPanel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pathCell:willPopUpMenu:' type64='v32@0:8@16@24'>
<arg declared_type64='NSPathCell * _Nonnull' index='0' name='pathCell' type64='@'/>
<arg declared_type64='NSMenu * _Nonnull' index='1' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPathControlDelegate'>
<method selector='pathControl:acceptDrop:' type64='B32@0:8@16@24'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pathControl:shouldDragItem:withPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='NSPathControlItem * _Nonnull' index='1' name='pathItem' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pathControl:shouldDragPathComponentCell:withPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='NSPathComponentCell * _Nonnull' index='1' name='pathComponentCell' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pathControl:validateDrop:' type64='Q32@0:8@16@24'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='pathControl:willDisplayOpenPanel:' type64='v32@0:8@16@24'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='NSOpenPanel * _Nonnull' index='1' name='openPanel' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pathControl:willPopUpMenu:' type64='v32@0:8@16@24'>
<arg declared_type64='NSPathControl * _Nonnull' index='0' name='pathControl' type64='@'/>
<arg declared_type64='NSMenu * _Nonnull' index='1' name='menu' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPlaceholders'>
<method class_method='true' selector='defaultPlaceholderForMarker:withBinding:' type64='@32@0:8@16@24'>
<arg declared_type64='id _Nullable' index='0' name='marker' type64='@'/>
<arg declared_type64='NSBindingName _Nonnull' index='1' name='binding' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='setDefaultPlaceholder:forMarker:withBinding:' type64='v40@0:8@16@24@32'>
<arg declared_type64='id _Nullable' index='0' name='placeholder' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='marker' type64='@'/>
<arg declared_type64='NSBindingName _Nonnull' index='2' name='binding' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPopoverDelegate'>
<method selector='detachableWindowForPopover:' type64='@24@0:8@16'>
<arg declared_type64='NSPopover * _Nonnull' index='0' name='popover' type64='@'/>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='popoverDidClose:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverDidDetach:' type64='v24@0:8@16'>
<arg declared_type64='NSPopover * _Nonnull' index='0' name='popover' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverDidShow:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverShouldClose:' type64='B24@0:8@16'>
<arg declared_type64='NSPopover * _Nonnull' index='0' name='popover' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='popoverShouldDetach:' type64='B24@0:8@16'>
<arg declared_type64='NSPopover * _Nonnull' index='0' name='popover' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='popoverWillClose:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='popoverWillShow:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPrintPanelAccessorizing'>
<method selector='keyPathsForValuesAffectingPreview' type64='@16@0:8'>
<retval declared_type64='NSSet * _Nonnull' type64='@'/>
</method>
<method selector='localizedSummaryItems' type64='@16@0:8'>
<retval declared_type64='NSArray *&gt; * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSRuleEditorDelegate'>
<method selector='ruleEditor:child:forCriterion:withRowType:' type64='@48@0:8@16q24@32Q40'>
<arg declared_type64='NSRuleEditor * _Nonnull' index='0' name='editor' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<arg declared_type64='id _Nullable' index='2' name='criterion' type64='@'/>
<arg declared_type64='NSRuleEditorRowType' index='3' name='rowType' type64='Q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='ruleEditor:displayValueForCriterion:inRow:' type64='@40@0:8@16@24q32'>
<arg declared_type64='NSRuleEditor * _Nonnull' index='0' name='editor' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='criterion' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='ruleEditor:numberOfChildrenForCriterion:withRowType:' type64='q40@0:8@16@24Q32'>
<arg declared_type64='NSRuleEditor * _Nonnull' index='0' name='editor' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='criterion' type64='@'/>
<arg declared_type64='NSRuleEditorRowType' index='2' name='rowType' type64='Q'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:' type64='@48@0:8@16@24@32q40'>
<arg declared_type64='NSRuleEditor * _Nonnull' index='0' name='editor' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='criterion' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='value' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='row' type64='q'/>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='ruleEditorRowsDidChange:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSavePanelDelegateDeprecated'>
<method selector='panel:compareFilename:with:caseSensitive:' type64='q44@0:8@16@24@32B40'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='name1' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='name2' type64='@'/>
<arg declared_type64='BOOL' index='3' name='caseSensitive' type64='B'/>
<retval declared_type64='NSComparisonResult' type64='q'/>
</method>
<method selector='panel:directoryDidChange:' type64='v32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='path' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='panel:isValidFilename:' type64='B32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='panel:shouldShowFilename:' type64='B32@0:8@16@24'>
<arg declared_type64='id _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='filename' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSScrubberDataSource'>
<method selector='numberOfItemsForScrubber:' type64='q24@0:8@16'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='scrubber:viewForItemAtIndex:' type64='@32@0:8@16q24'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='index' type64='q'/>
<retval declared_type64='__kindof NSScrubberItemView * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSScrubberDelegate'>
<method selector='didBeginInteractingWithScrubber:' type64='v24@0:8@16'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didCancelInteractingWithScrubber:' type64='v24@0:8@16'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='didFinishInteractingWithScrubber:' type64='v24@0:8@16'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubber:didChangeVisibleRange:' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSRange' index='1' name='visibleRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubber:didHighlightItemAtIndex:' type64='v32@0:8@16q24'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='highlightedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrubber:didSelectItemAtIndex:' type64='v32@0:8@16q24'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='selectedIndex' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSScrubberFlowLayoutDelegate'>
<method selector='scrubber:layout:sizeForItemAtIndex:' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type64='NSScrubber * _Nonnull' index='0' name='scrubber' type64='@'/>
<arg declared_type64='NSScrubberFlowLayout * _Nonnull' index='1' name='layout' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='itemIndex' type64='q'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSSearchFieldDelegate'>
<method selector='searchFieldDidEndSearching:' type64='v24@0:8@16'>
<arg declared_type64='NSSearchField * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchFieldDidStartSearching:' type64='v24@0:8@16'>
<arg declared_type64='NSSearchField * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSeguePerforming'>
<method selector='performSegueWithIdentifier:sender:' type64='v32@0:8@16@24'>
<arg declared_type64='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareForSegue:sender:' type64='v32@0:8@16@24'>
<arg declared_type64='NSStoryboardSegue * _Nonnull' index='0' name='segue' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldPerformSegueWithIdentifier:sender:' type64='B32@0:8@16@24'>
<arg declared_type64='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSServicesMenuRequestor'>
<method selector='readSelectionFromPasteboard:' type64='B24@0:8@16'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeSelectionToPasteboard:types:' type64='B32@0:8@16@24'>
<arg declared_type64='NSPasteboard * _Nonnull' index='0' name='pboard' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='types' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServiceDelegate'>
<method selector='anchoringViewForSharingService:showRelativeToRect:preferredEdge:' type64='@40@0:8@16^{CGRect={CGPoint=dd}{CGSize=dd}}24^Q32'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSRect * _Nonnull' index='1' name='positioningRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRectEdge * _Nonnull' index='2' name='preferredEdge' type64='^Q'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='sharingService:didFailToShareItems:error:' type64='v40@0:8@16@24@32'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSError * _Nonnull' index='2' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:didShareItems:' type64='v32@0:8@16@24'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingService:sourceFrameOnScreenForShareItem:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sharingService:sourceWindowForShareItems:sharingContentScope:' type64='@40@0:8@16@24^q32'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSSharingContentScope * _Nonnull' index='2' name='sharingContentScope' type64='^q'/>
<retval declared_type64='NSWindow * _Nullable' type64='@'/>
</method>
<method selector='sharingService:transitionImageForShareItem:contentRect:' type64='@40@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='item' type64='@'/>
<arg declared_type64='NSRect * _Nonnull' index='2' name='contentRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='sharingService:willShareItems:' type64='v32@0:8@16@24'>
<arg declared_type64='NSSharingService * _Nonnull' index='0' name='sharingService' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServicePickerDelegate'>
<method selector='sharingServicePicker:delegateForSharingService:' type64='@32@0:8@16@24'>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type64='@'/>
<arg declared_type64='NSSharingService * _Nonnull' index='1' name='sharingService' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='sharingServicePicker:didChooseSharingService:' type64='v32@0:8@16@24'>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type64='@'/>
<arg declared_type64='NSSharingService * _Nullable' index='1' name='service' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sharingServicePicker:sharingServicesForItems:proposedSharingServices:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='items' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='proposedServices' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServicePickerToolbarItemDelegate'>
<method selector='itemsForSharingServicePickerToolbarItem:' type64='@24@0:8@16'>
<arg declared_type64='NSSharingServicePickerToolbarItem * _Nonnull' index='0' name='pickerToolbarItem' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServicePickerTouchBarItemDelegate'>
<method selector='itemsForSharingServicePickerTouchBarItem:' type64='@24@0:8@16'>
<arg declared_type64='NSSharingServicePickerTouchBarItem * _Nonnull' index='0' name='pickerTouchBarItem' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSSoundDelegate'>
<method selector='sound:didFinishPlaying:' type64='v28@0:8@16B24'>
<arg declared_type64='NSSound * _Nonnull' index='0' name='sound' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpeechRecognizerDelegate'>
<method selector='speechRecognizer:didRecognizeCommand:' type64='v32@0:8@16@24'>
<arg declared_type64='NSSpeechRecognizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='command' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpeechSynthesizerDelegate'>
<method selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:' type64='v48@0:8@16Q24@32@40'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='characterIndex' type64='Q'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='message' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didEncounterSyncMessage:' type64='v32@0:8@16@24'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='message' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeaking:' type64='v28@0:8@16B24'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='BOOL' index='1' name='finishedSpeaking' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:willSpeakPhoneme:' type64='v28@0:8@16s24'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='short' index='1' name='phonemeOpcode' type64='s'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='speechSynthesizer:willSpeakWord:ofString:' type64='v48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type64='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSRange' index='1' name='characterRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='2' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSplitViewDelegate'>
<method selector='splitView:additionalEffectiveRectOfDividerAtIndex:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16q24'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='dividerIndex' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:canCollapseSubview:' type64='B32@0:8@16@24'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='subview' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitView:constrainMaxCoordinate:ofSubviewAt:' type64='d40@0:8@16d24q32'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='proposedMaximumPosition' type64='d'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='splitView:constrainMinCoordinate:ofSubviewAt:' type64='d40@0:8@16d24q32'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='proposedMinimumPosition' type64='d'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='splitView:constrainSplitPosition:ofSubviewAt:' type64='d40@0:8@16d24q32'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='proposedPosition' type64='d'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56q88'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSRect' index='1' name='proposedEffectiveRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRect' index='2' name='drawnRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSInteger' index='3' name='dividerIndex' type64='q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:resizeSubviewsWithOldSize:' type64='v40@0:8@16{CGSize=dd}24'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSSize' index='1' name='oldSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='splitView:shouldAdjustSizeOfSubview:' type64='B32@0:8@16@24'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:' type64='B40@0:8@16@24q32'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='subview' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='dividerIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitView:shouldHideDividerAtIndex:' type64='B32@0:8@16q24'>
<arg declared_type64='NSSplitView * _Nonnull' index='0' name='splitView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='dividerIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='splitViewDidResizeSubviews:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='splitViewWillResizeSubviews:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpringLoadingDestination'>
<method selector='draggingEnded:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingActivated:draggingInfo:' type64='v28@0:8B16@20'>
<arg declared_type64='BOOL' index='0' name='activated' type64='B'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingEntered:' type64='Q24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='NSSpringLoadingOptions' type64='Q'/>
</method>
<method selector='springLoadingExited:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingHighlightChanged:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='springLoadingUpdated:' type64='Q24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='draggingInfo' type64='@'/>
<retval declared_type64='NSSpringLoadingOptions' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSStackViewDelegate'>
<method selector='stackView:didReattachViews:' type64='v32@0:8@16@24'>
<arg declared_type64='NSStackView * _Nonnull' index='0' name='stackView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='views' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stackView:willDetachViews:' type64='v32@0:8@16@24'>
<arg declared_type64='NSStackView * _Nonnull' index='0' name='stackView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='views' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSStandardKeyBindingResponding'>
<method selector='cancelOperation:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='capitalizeWord:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='centerSelectionInVisibleArea:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='changeCaseOfLetter:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='complete:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteBackward:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteBackwardByDecomposingPreviousCharacter:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteForward:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToBeginningOfLine:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToBeginningOfParagraph:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToEndOfLine:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToEndOfParagraph:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteToMark:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteWordBackward:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='deleteWordForward:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='doCommandBySelector:' type64='v24@0:8:16'>
<arg declared_type64='SEL _Null_unspecified' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='indent:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertBacktab:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertContainerBreak:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertDoubleQuoteIgnoringSubstitution:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertLineBreak:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertNewline:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertNewlineIgnoringFieldEditor:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertParagraphSeparator:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertSingleQuoteIgnoringSubstitution:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTab:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTabIgnoringFieldEditor:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertText:' type64='v24@0:8@16'>
<arg declared_type64='id _Null_unspecified' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lowercaseWord:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeBaseWritingDirectionLeftToRight:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeBaseWritingDirectionNatural:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeBaseWritingDirectionRightToLeft:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionNatural:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveBackward:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveBackwardAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveDown:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveDownAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveForward:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveForwardAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveLeft:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveLeftAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveParagraphBackwardAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveParagraphForwardAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveRight:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveRightAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfDocument:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfDocumentAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfLine:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfLineAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfParagraph:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToBeginningOfParagraphAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfDocument:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfDocumentAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfLine:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfLineAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfParagraph:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToEndOfParagraphAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToLeftEndOfLine:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToLeftEndOfLineAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToRightEndOfLine:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveToRightEndOfLineAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveUp:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveUpAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordBackward:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordBackwardAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordForward:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordForwardAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordLeft:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordLeftAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordRight:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='moveWordRightAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageDown:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageDownAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageUp:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pageUpAndModifySelection:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='quickLookPreviewItems:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollLineDown:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollLineUp:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollPageDown:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollPageUp:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollToBeginningOfDocument:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollToEndOfDocument:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAll:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectLine:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectParagraph:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectToMark:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectWord:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMark:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='swapWithMark:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transpose:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='transposeWords:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='uppercaseWord:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='yank:' type64='v24@0:8@16'>
<arg declared_type64='id _Nullable' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTabViewDelegate'>
<method selector='tabView:didSelectTabViewItem:' type64='v32@0:8@16@24'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabView:shouldSelectTabViewItem:' type64='B32@0:8@16@24'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tabView:willSelectTabViewItem:' type64='v32@0:8@16@24'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<arg declared_type64='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tabViewDidChangeNumberOfTabViewItems:' type64='v24@0:8@16'>
<arg declared_type64='NSTabView * _Nonnull' index='0' name='tabView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDataSource'>
<method selector='numberOfRowsInTableView:' type64='q24@0:8@16'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tableView:acceptDrop:row:dropOperation:' type64='B48@0:8@16@24q32Q40'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<arg declared_type64='NSTableViewDropOperation' index='3' name='dropOperation' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:draggingSession:endedAtPoint:operation:' type64='v56@0:8@16@24{CGPoint=dd}32Q48'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSDragOperation' index='3' name='operation' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:draggingSession:willBeginAtPoint:forRowIndexes:' type64='v56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSDraggingSession * _Nonnull' index='1' name='session' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='screenPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='3' name='rowIndexes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='dropDestination' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='2' name='indexSet' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tableView:objectValueForTableColumn:row:' type64='@40@0:8@16@24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tableView:pasteboardWriterForRow:' type64='@32@0:8@16q24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tableView:setObjectValue:forTableColumn:row:' type64='v48@0:8@16@24@32q40'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='object' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:sortDescriptorsDidChange:' type64='v32@0:8@16@24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='oldDescriptors' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:updateDraggingItemsForDrag:' type64='v32@0:8@16@24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='draggingInfo' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:validateDrop:proposedRow:proposedDropOperation:' type64='Q48@0:8@16@24q32Q40'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='info' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<arg declared_type64='NSTableViewDropOperation' index='3' name='dropOperation' type64='Q'/>
<retval declared_type64='NSDragOperation' type64='Q'/>
</method>
<method selector='tableView:writeRowsWithIndexes:toPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDataSourceDeprecated'>
<method selector='tableView:writeRows:toPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='rows' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDelegate'>
<method selector='selectionShouldChangeInTableView:' type64='B24@0:8@16'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:dataCellForTableColumn:row:' type64='@40@0:8@16@24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='NSCell * _Nullable' type64='@'/>
</method>
<method selector='tableView:didAddRowView:forRow:' type64='v40@0:8@16@24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableRowView * _Nonnull' index='1' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didClickTableColumn:' type64='v32@0:8@16@24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didDragTableColumn:' type64='v32@0:8@16@24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:didRemoveRowView:forRow:' type64='v40@0:8@16@24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableRowView * _Nonnull' index='1' name='rowView' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:heightOfRow:' type64='d32@0:8@16q24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:isGroupRow:' type64='B32@0:8@16q24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:mouseDownInHeaderOfTableColumn:' type64='v32@0:8@16@24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nonnull' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:' type64='q48@0:8@16q24q32@40'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='startRow' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='endRow' type64='q'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='searchString' type64='@'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='tableView:rowActionsForRow:edge:' type64='@40@0:8@16q24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<arg declared_type64='NSTableRowActionEdge' index='2' name='edge' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tableView:rowViewForRow:' type64='@32@0:8@16q24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='NSTableRowView * _Nullable' type64='@'/>
</method>
<method selector='tableView:selectionIndexesForProposedSelection:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type64='@'/>
<retval declared_type64='NSIndexSet * _Nonnull' type64='@'/>
</method>
<method selector='tableView:shouldEditTableColumn:row:' type64='B40@0:8@16@24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldReorderColumn:toColumn:' type64='B40@0:8@16q24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='columnIndex' type64='q'/>
<arg declared_type64='NSInteger' index='2' name='newColumnIndex' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldSelectRow:' type64='B32@0:8@16q24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldSelectTableColumn:' type64='B32@0:8@16@24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldShowCellExpansionForTableColumn:row:' type64='B40@0:8@16@24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldTrackCell:forTableColumn:row:' type64='B48@0:8@16@24@32q40'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='row' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='searchString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tableView:sizeToFitWidthOfColumn:' type64='d32@0:8@16q24'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='column' type64='q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:' type64='@72@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32@40q48{CGPoint=dd}56'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSCell * _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRectPointer _Nonnull' index='2' name='rect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTableColumn * _Nullable' index='3' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='4' name='row' type64='q'/>
<arg declared_type64='NSPoint' index='5' name='mouseLocation' type64='{CGPoint=dd}'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='tableView:typeSelectStringForTableColumn:row:' type64='@40@0:8@16@24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tableView:viewForTableColumn:row:' type64='@40@0:8@16@24q32'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='1' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='row' type64='q'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='tableView:willDisplayCell:forTableColumn:row:' type64='v48@0:8@16@24@32q40'>
<arg declared_type64='NSTableView * _Nonnull' index='0' name='tableView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSTableColumn * _Nullable' index='2' name='tableColumn' type64='@'/>
<arg declared_type64='NSInteger' index='3' name='row' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableViewColumnDidMove:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableViewColumnDidResize:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableViewSelectionDidChange:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tableViewSelectionIsChanging:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextAttachmentCell'>
<method selector='attachment' type64='@16@0:8'>
<retval declared_type64='NSTextAttachment * _Nullable' type64='@'/>
</method>
<method selector='cellBaselineOffset' type64='{CGPoint=dd}16@0:8'>
<retval declared_type64='NSPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGPoint=dd}56Q72'>
<arg declared_type64='NSTextContainer * _Nonnull' index='0' name='textContainer' type64='@'/>
<arg declared_type64='NSRect' index='1' name='lineFrag' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSPoint' index='2' name='position' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cellSize' type64='{CGSize=dd}16@0:8'>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='drawWithFrame:inView:' type64='v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:' type64='v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='controlView' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:layoutManager:' type64='v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56@64'>
<arg declared_type64='NSRect' index='0' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='1' name='controlView' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<arg declared_type64='NSLayoutManager * _Nonnull' index='3' name='layoutManager' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='highlight:withFrame:inView:' type64='v60@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20@52'>
<arg declared_type64='BOOL' index='0' name='flag' type64='B'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='controlView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttachment:' type64='v24@0:8@16'>
<arg declared_type64='NSTextAttachment * _Nullable' index='0' name='attachment' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:' type64='B76@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64B72'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='theEvent' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='controlView' type64='@'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<arg declared_type64='BOOL' index='4' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:' type64='B68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56B64'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='theEvent' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='controlView' type64='@'/>
<arg declared_type64='BOOL' index='3' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToTrackMouse' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:' type64='B72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64'>
<arg declared_type64='NSEvent * _Nonnull' index='0' name='theEvent' type64='@'/>
<arg declared_type64='NSRect' index='1' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSView * _Nullable' index='2' name='controlView' type64='@'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextAttachmentContainer'>
<method selector='attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGPoint=dd}56Q72'>
<arg declared_type64='NSTextContainer * _Nullable' index='0' name='textContainer' type64='@'/>
<arg declared_type64='NSRect' index='1' name='lineFrag' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGPoint' index='2' name='position' type64='{CGPoint=dd}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageForBounds:textContainer:characterIndex:' type64='@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56'>
<arg declared_type64='NSRect' index='0' name='imageBounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSTextContainer * _Nullable' index='1' name='textContainer' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextCheckingClient'>
<method selector='addAnnotations:range:' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='annotations' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='annotatedSubstringForProposedRange:actualRange:' type64='@40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='candidateListTouchBarItem' type64='@16@0:8'>
<retval declared_type64='NSCandidateListTouchBarItem * _Nullable' type64='@'/>
</method>
<method selector='removeAnnotation:range:' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type64='NSAttributedStringKey _Nonnull' index='0' name='annotationName' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceCharactersInRange:withAnnotatedString:' type64='v40@0:8{_NSRange=QQ}16@32'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSAttributedString * _Nonnull' index='1' name='annotatedString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectAndShowRange:' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAnnotations:range:' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='annotations' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='viewForRange:firstRect:actualRange:' type64='@48@0:8{_NSRange=QQ}16^{CGRect={CGPoint=dd}{CGSize=dd}}32^{_NSRange=QQ}40'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRectPointer _Nullable' index='1' name='firstRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSRangePointer _Nullable' index='2' name='actualRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextContent'>
<method selector='contentType' type64='@16@0:8'>
<retval declared_type64='NSTextContentType _Nullable' type64='@'/>
</method>
<method selector='setContentType:' type64='v24@0:8@16'>
<arg declared_type64='NSTextContentType _Nullable' index='0' name='contentType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextDelegate'>
<method selector='textDidBeginEditing:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidChange:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textDidEndEditing:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textShouldBeginEditing:' type64='B24@0:8@16'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textShouldEndEditing:' type64='B24@0:8@16'>
<arg declared_type64='NSText * _Nonnull' index='0' name='textObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextFieldDelegate'>
<method selector='textField:textView:candidates:forSelectedRange:' type64='@56@0:8@16@24@32{_NSRange=QQ}40'>
<arg declared_type64='NSTextField * _Nonnull' index='0' name='textField' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='candidates' type64='@'/>
<arg declared_type64='NSRange' index='3' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textField:textView:candidatesForSelectedRange:' type64='@48@0:8@16@24{_NSRange=QQ}32'>
<arg declared_type64='NSTextField * _Nonnull' index='0' name='textField' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='2' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='textField:textView:shouldSelectCandidateAtIndex:' type64='B40@0:8@16@24Q32'>
<arg declared_type64='NSTextField * _Nonnull' index='0' name='textField' type64='@'/>
<arg declared_type64='NSTextView * _Nonnull' index='1' name='textView' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='index' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextFinderBarContainer'>
<method selector='contentView' type64='@16@0:8'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='findBarView' type64='@16@0:8'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='findBarViewDidChangeHeight' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isFindBarVisible' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setFindBarView:' type64='v24@0:8@16'>
<arg declared_type64='NSView * _Nullable' index='0' name='findBarView' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFindBarVisible:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='findBarVisible' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextFinderClient'>
<method selector='allowsMultipleSelection' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='contentViewAtIndex:effectiveCharacterRange:' type64='@32@0:8Q16^{_NSRange=QQ}24'>
<arg declared_type64='NSUInteger' index='0' name='index' type64='Q'/>
<arg declared_type64='NSRangePointer _Nonnull' index='1' name='outRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSView * _Nonnull' type64='@'/>
</method>
<method selector='didReplaceCharacters' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawCharactersInRange:forContentView:' type64='v40@0:8{_NSRange=QQ}16@32'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSView * _Nonnull' index='1' name='view' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstSelectedRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='isEditable' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelectable' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rectsForCharacterRange:' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='replaceCharactersInRange:withString:' type64='v40@0:8{_NSRange=QQ}16@32'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scrollRangeToVisible:' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedRanges' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setSelectedRanges:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='selectedRanges' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldReplaceCharactersInRanges:withStrings:' type64='B32@0:8@16@24'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='ranges' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='strings' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='string' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='stringAtIndex:effectiveRange:endsWithSearchBoundary:' type64='@40@0:8Q16^{_NSRange=QQ}24^B32'>
<arg declared_type64='NSUInteger' index='0' name='characterIndex' type64='Q'/>
<arg declared_type64='NSRangePointer _Nonnull' index='1' name='outRange' type64='^{_NSRange=QQ}'/>
<arg declared_type64='BOOL * _Nonnull' index='2' name='outFlag' type64='^B'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='stringLength' type64='Q16@0:8'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='visibleCharacterRanges' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextInput'>
<method selector='attributedSubstringFromRange:' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Null_unspecified' type64='@'/>
</method>
<method selector='characterIndexForPoint:' type64='Q32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='conversationIdentifier' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='doCommandBySelector:' type64='v24@0:8:16'>
<arg declared_type64='SEL _Null_unspecified' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='firstRectForCharacterRange:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='hasMarkedText' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='insertText:' type64='v24@0:8@16'>
<arg declared_type64='id _Null_unspecified' index='0' name='string' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='selectedRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='setMarkedText:selectedRange:' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type64='id _Null_unspecified' index='0' name='string' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unmarkText' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validAttributesForMarkedText' type64='@16@0:8'>
<retval declared_type64='NSArray * _Null_unspecified' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextInputClient'>
<method selector='attributedString' type64='@16@0:8'>
<retval declared_type64='NSAttributedString * _Nonnull' type64='@'/>
</method>
<method selector='attributedSubstringForProposedRange:actualRange:' type64='@40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSAttributedString * _Nullable' type64='@'/>
</method>
<method selector='baselineDeltaForCharacterAtIndex:' type64='d24@0:8Q16'>
<arg declared_type64='NSUInteger' index='0' name='anIndex' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='characterIndexForPoint:' type64='Q32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='doCommandBySelector:' type64='v24@0:8:16'>
<arg declared_type64='SEL _Nonnull' index='0' name='selector' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawsVerticallyForCharacterAtIndex:' type64='B24@0:8Q16'>
<arg declared_type64='NSUInteger' index='0' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='firstRectForCharacterRange:actualRange:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32'>
<arg declared_type64='NSRange' index='0' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRangePointer _Nullable' index='1' name='actualRange' type64='^{_NSRange=QQ}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:' type64='d32@0:8{CGPoint=dd}16'>
<arg declared_type64='NSPoint' index='0' name='point' type64='{CGPoint=dd}'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='hasMarkedText' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='insertText:replacementRange:' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type64='id _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSRange' index='1' name='replacementRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markedRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='selectedRange' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='setMarkedText:selectedRange:replacementRange:' type64='v56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40'>
<arg declared_type64='id _Nonnull' index='0' name='string' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='2' name='replacementRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='unmarkText' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validAttributesForMarkedText' type64='@16@0:8'>
<retval declared_type64='NSArray * _Null_unspecified' type64='@'/>
</method>
<method selector='windowLevel' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextInputTraits'>
<method selector='autocorrectionType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='dataDetectionType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='grammarCheckingType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='linkDetectionType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='setAutocorrectionType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='autocorrectionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDataDetectionType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='dataDetectionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGrammarCheckingType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='grammarCheckingType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLinkDetectionType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='linkDetectionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmartDashesType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='smartDashesType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmartInsertDeleteType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='smartInsertDeleteType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSmartQuotesType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='smartQuotesType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSpellCheckingType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='spellCheckingType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextCompletionType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='textCompletionType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextReplacementType:' type64='v24@0:8q16'>
<arg declared_type64='NSTextInputTraitType' index='0' name='textReplacementType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='smartDashesType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='smartInsertDeleteType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='smartQuotesType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='spellCheckingType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='textCompletionType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
<method selector='textReplacementType' type64='q16@0:8'>
<retval declared_type64='NSTextInputTraitType' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextLayoutOrientationProvider'>
<method selector='layoutOrientation' type64='q16@0:8'>
<retval declared_type64='NSTextLayoutOrientation' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextStorageDelegate'>
<method selector='textStorage:didProcessEditing:range:changeInLength:' type64='v56@0:8@16Q24{_NSRange=QQ}32q48'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStorage:willProcessEditing:range:changeInLength:' type64='v56@0:8@16Q24{_NSRange=QQ}32q48'>
<arg declared_type64='NSTextStorage * _Nonnull' index='0' name='textStorage' type64='@'/>
<arg declared_type64='NSTextStorageEditActions' index='1' name='editedMask' type64='Q'/>
<arg declared_type64='NSRange' index='2' name='editedRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger' index='3' name='delta' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextViewDelegate'>
<method selector='textView:URLForContentsOfTextAttachment:atIndex:' type64='@40@0:8@16@24Q32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='textView:candidates:forSelectedRange:' type64='@48@0:8@16@24{_NSRange=QQ}32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='candidates' type64='@'/>
<arg declared_type64='NSRange' index='2' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:candidatesForSelectedRange:' type64='@40@0:8@16{_NSRange=QQ}24'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='1' name='selectedRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='textView:clickedOnCell:inRect:' type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:clickedOnCell:inRect:atIndex:' type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:clickedOnLink:' type64='B32@0:8@16@24'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='link' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:clickedOnLink:atIndex:' type64='B40@0:8@16@24Q32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='link' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:' type64='@56@0:8@16@24{_NSRange=QQ}32^q48'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='words' type64='@'/>
<arg declared_type64='NSRange' index='2' name='charRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSInteger * _Nullable' index='3' name='index' type64='^q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:didCheckTextInRange:types:options:results:orthography:wordCount:' type64='@80@0:8@16{_NSRange=QQ}24Q40@48@56@64q72'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSTextCheckingTypes' index='2' name='checkingTypes' type64='Q'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='options' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='4' name='results' type64='@'/>
<arg declared_type64='NSOrthography * _Nonnull' index='5' name='orthography' type64='@'/>
<arg declared_type64='NSInteger' index='6' name='wordCount' type64='q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:doCommandBySelector:' type64='B32@0:8@16:24'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='SEL _Nonnull' index='1' name='commandSelector' type64=':'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:' type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:atIndex:' type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='cellFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:draggedCell:inRect:event:' type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='id _Null_unspecified' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSEvent * _Null_unspecified' index='3' name='event' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:draggedCell:inRect:event:atIndex:' type64='v80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64Q72'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSEvent * _Nonnull' index='3' name='event' type64='@'/>
<arg declared_type64='NSUInteger' index='4' name='charIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textView:menu:forEvent:atIndex:' type64='@48@0:8@16@24@32Q40'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSMenu * _Nonnull' index='1' name='menu' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='2' name='event' type64='@'/>
<arg declared_type64='NSUInteger' index='3' name='charIndex' type64='Q'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementString:' type64='B48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='1' name='affectedCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSString * _Nullable' index='2' name='replacementString' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldChangeTextInRanges:replacementStrings:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='affectedRanges' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='2' name='replacementStrings' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldChangeTypingAttributes:toAttributes:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='oldTypingAttributes' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='newTypingAttributes' type64='@'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='textView:shouldSelectCandidateAtIndex:' type64='B32@0:8@16Q24'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='index' type64='Q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textView:shouldSetSpellingState:range:' type64='q48@0:8@16q24{_NSRange=QQ}32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='value' type64='q'/>
<arg declared_type64='NSRange' index='2' name='affectedCharRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='textView:shouldUpdateTouchBarItemIdentifiers:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='identifiers' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:' type64='{_NSRange=QQ}56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSRange' index='1' name='oldSelectedCharRange' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSRange' index='2' name='newSelectedCharRange' type64='{_NSRange=QQ}'/>
<retval declared_type64='NSRange' type64='{_NSRange=QQ}'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='oldSelectedCharRanges' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='newSelectedCharRanges' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:willCheckTextInRange:options:types:' type64='@56@0:8@16{_NSRange=QQ}24@40^Q48'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSRange' index='1' name='range' type64='{_NSRange=QQ}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<arg declared_type64='NSTextCheckingTypes * _Nonnull' index='3' name='checkingTypes' type64='^Q'/>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='textView:willDisplayToolTip:forCharacterAtIndex:' type64='@40@0:8@16@24Q32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='tooltip' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='characterIndex' type64='Q'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='textView:willShowSharingServicePicker:forItems:' type64='@40@0:8@16@24@32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='textView' type64='@'/>
<arg declared_type64='NSSharingServicePicker * _Nonnull' index='1' name='servicePicker' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='items' type64='@'/>
<retval declared_type64='NSSharingServicePicker * _Nullable' type64='@'/>
</method>
<method selector='textView:writablePasteboardTypesForCell:atIndex:' type64='@40@0:8@16@24Q32'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='textView:writeCell:atIndex:toPasteboard:type:' type64='B56@0:8@16@24Q32@40@48'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='cell' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='charIndex' type64='Q'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='3' name='pboard' type64='@'/>
<arg declared_type64='NSPasteboardType _Nonnull' index='4' name='type' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='textViewDidChangeSelection:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textViewDidChangeTypingAttributes:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='undoManagerForTextView:' type64='@24@0:8@16'>
<arg declared_type64='NSTextView * _Nonnull' index='0' name='view' type64='@'/>
<retval declared_type64='NSUndoManager * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTokenFieldCellDelegate'>
<method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type64='@48@0:8@16@24q32^q40'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='substring' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='tokenIndex' type64='q'/>
<arg declared_type64='NSInteger * _Nonnull' index='3' name='selectedIndex' type64='^q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tokenFieldCell:displayStringForRepresentedObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:editingStringForRepresentedObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:hasMenuForRepresentedObject:' type64='B32@0:8@16@24'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tokenFieldCell:menuForRepresentedObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:readFromPasteboard:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pboard' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:representedObjectForEditingString:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='editingString' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tokenFieldCell:shouldAddObjects:atIndex:' type64='@40@0:8@16@24Q32'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='tokens' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='index' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tokenFieldCell:styleForRepresentedObject:' type64='Q32@0:8@16@24'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSTokenStyle' type64='Q'/>
</method>
<method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='objects' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTokenFieldDelegate'>
<method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type64='@48@0:8@16@24q32^q40'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='substring' type64='@'/>
<arg declared_type64='NSInteger' index='2' name='tokenIndex' type64='q'/>
<arg declared_type64='NSInteger * _Nullable' index='3' name='selectedIndex' type64='^q'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tokenField:displayStringForRepresentedObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenField:editingStringForRepresentedObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='tokenField:hasMenuForRepresentedObject:' type64='B32@0:8@16@24'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='tokenField:menuForRepresentedObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSMenu * _Nullable' type64='@'/>
</method>
<method selector='tokenField:readFromPasteboard:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='1' name='pboard' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tokenField:representedObjectForEditingString:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='editingString' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='tokenField:shouldAddObjects:atIndex:' type64='@40@0:8@16@24Q32'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='tokens' type64='@'/>
<arg declared_type64='NSUInteger' index='2' name='index' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tokenField:styleForRepresentedObject:' type64='Q32@0:8@16@24'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='representedObject' type64='@'/>
<retval declared_type64='NSTokenStyle' type64='Q'/>
</method>
<method selector='tokenField:writeRepresentedObjects:toPasteboard:' type64='B40@0:8@16@24@32'>
<arg declared_type64='NSTokenField * _Nonnull' index='0' name='tokenField' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='objects' type64='@'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='2' name='pboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolTipOwner'>
<method selector='view:stringForToolTip:point:userData:' type64='@56@0:8@16q24{CGPoint=dd}32^v48'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSToolTipTag' index='1' name='tag' type64='q'/>
<arg declared_type64='NSPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='void * _Nullable' index='3' name='data' type64='^v'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolbarDelegate'>
<method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:' type64='@36@0:8@16@24B32'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<arg declared_type64='NSToolbarItemIdentifier _Nonnull' index='1' name='itemIdentifier' type64='@'/>
<arg declared_type64='BOOL' index='2' name='flag' type64='B'/>
<retval declared_type64='NSToolbarItem * _Nullable' type64='@'/>
</method>
<method selector='toolbarAllowedItemIdentifiers:' type64='@24@0:8@16'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbarDefaultItemIdentifiers:' type64='@24@0:8@16'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbarDidRemoveItem:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='toolbarSelectableItemIdentifiers:' type64='@24@0:8@16'>
<arg declared_type64='NSToolbar * _Nonnull' index='0' name='toolbar' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='toolbarWillAddItem:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolbarItemValidation'>
<method selector='validateToolbarItem:' type64='B24@0:8@16'>
<arg declared_type64='NSToolbarItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTouchBarDelegate'>
<method selector='touchBar:makeItemForIdentifier:' type64='@32@0:8@16@24'>
<arg declared_type64='NSTouchBar * _Nonnull' index='0' name='touchBar' type64='@'/>
<arg declared_type64='NSTouchBarItemIdentifier _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='NSTouchBarItem * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTouchBarProvider'>
<method selector='touchBar' type64='@16@0:8'>
<retval declared_type64='NSTouchBar * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserActivityRestoring'>
<method selector='restoreUserActivityState:' type64='v24@0:8@16'>
<arg declared_type64='NSUserActivity * _Nonnull' index='0' name='userActivity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceCompression'>
<method selector='activeCompressionOptions' type64='@16@0:8'>
<retval declared_type64='NSUserInterfaceCompressionOptions * _Nonnull' type64='@'/>
</method>
<method selector='compressWithPrioritizedCompressionOptions:' type64='v24@0:8@16'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedOptions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='minimumSizeWithPrioritizedCompressionOptions:' type64='{CGSize=dd}24@0:8@16'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='prioritizedOptions' type64='@'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceItemIdentification'>
<method selector='identifier' type64='@16@0:8'>
<retval declared_type64='NSUserInterfaceItemIdentifier _Nullable' type64='@'/>
</method>
<method selector='setIdentifier:' type64='v24@0:8@16'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nullable' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceItemSearching'>
<method selector='localizedTitlesForItem:' type64='@24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='performActionForItem:' type64='v24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='searchForItemsWithSearchString:resultLimit:matchedItemHandler:' type64='v40@0:8@16q24@?32'>
<arg declared_type64='NSString * _Nonnull' index='0' name='searchString' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='resultLimit' type64='q'/>
<arg declared_type64='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='2' name='handleMatchedItems' type64='@?'>
<arg declared_type64='NSArray * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='showAllHelpTopicsForSearchString:' type64='v24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='searchString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceValidations'>
<method selector='validateUserInterfaceItem:' type64='B24@0:8@16'>
<arg declared_type64='id _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSValidatedUserInterfaceItem'>
<method selector='action' type64=':16@0:8'>
<retval declared_type64='SEL _Nullable' type64=':'/>
</method>
<method selector='tag' type64='q16@0:8'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSViewControllerPresentationAnimator'>
<method selector='animateDismissalOfViewController:fromViewController:' type64='v32@0:8@16@24'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='NSViewController * _Nonnull' index='1' name='fromViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='animatePresentationOfViewController:fromViewController:' type64='v32@0:8@16@24'>
<arg declared_type64='NSViewController * _Nonnull' index='0' name='viewController' type64='@'/>
<arg declared_type64='NSViewController * _Nonnull' index='1' name='fromViewController' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSViewLayerContentScaleDelegate'>
<method selector='layer:shouldInheritContentsScale:fromWindow:' type64='B40@0:8@16d24@32'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CGFloat' index='1' name='newScale' type64='d'/>
<arg declared_type64='NSWindow * _Nonnull' index='2' name='window' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSViewToolTipOwner'>
<method selector='view:stringForToolTip:point:userData:' type64='@56@0:8@16q24{CGPoint=dd}32^v48'>
<arg declared_type64='NSView * _Nonnull' index='0' name='view' type64='@'/>
<arg declared_type64='NSToolTipTag' index='1' name='tag' type64='q'/>
<arg declared_type64='NSPoint' index='2' name='point' type64='{CGPoint=dd}'/>
<arg declared_type64='void * _Nullable' index='3' name='data' type64='^v'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSWindowDelegate'>
<method selector='customWindowsToEnterFullScreenForWindow:' type64='@24@0:8@16'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='customWindowsToEnterFullScreenForWindow:onScreen:' type64='@32@0:8@16@24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSScreen * _Nonnull' index='1' name='screen' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='customWindowsToExitFullScreenForWindow:' type64='@24@0:8@16'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='window:didDecodeRestorableState:' type64='v32@0:8@16@24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='state' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:' type64='B56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSEvent * _Nonnull' index='1' name='event' type64='@'/>
<arg declared_type64='NSPoint' index='2' name='dragImageLocation' type64='{CGPoint=dd}'/>
<arg declared_type64='NSPasteboard * _Nonnull' index='3' name='pasteboard' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='window:shouldPopUpDocumentPathMenu:' type64='B32@0:8@16@24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSMenu * _Nonnull' index='1' name='menu' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:' type64='v40@0:8@16@24d32'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSScreen * _Nonnull' index='1' name='screen' type64='@'/>
<arg declared_type64='NSTimeInterval' index='2' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenWithDuration:' type64='v32@0:8@16d24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:startCustomAnimationToExitFullScreenWithDuration:' type64='v32@0:8@16d24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='duration' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:willEncodeRestorableState:' type64='v32@0:8@16@24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='state' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='window:willPositionSheet:usingRect:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSWindow * _Nonnull' index='1' name='sheet' type64='@'/>
<arg declared_type64='NSRect' index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:' type64='{CGSize=dd}56@0:8@16{CGSize=dd}24{CGSize=dd}40'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSSize' index='1' name='maxPreferredFrameSize' type64='{CGSize=dd}'/>
<arg declared_type64='NSSize' index='2' name='maxAllowedFrameSize' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='window:willUseFullScreenContentSize:' type64='{CGSize=dd}40@0:8@16{CGSize=dd}24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSSize' index='1' name='proposedSize' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='window:willUseFullScreenPresentationOptions:' type64='Q32@0:8@16Q24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSApplicationPresentationOptions' index='1' name='proposedOptions' type64='Q'/>
<retval declared_type64='NSApplicationPresentationOptions' type64='Q'/>
</method>
<method selector='windowDidBecomeKey:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidBecomeMain:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidChangeBackingProperties:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidChangeOcclusionState:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidChangeScreen:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidChangeScreenProfile:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidDeminiaturize:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidEndLiveResize:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidEndSheet:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidEnterFullScreen:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidEnterVersionBrowser:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidExitFullScreen:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidExitVersionBrowser:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidExpose:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidFailToEnterFullScreen:' type64='v24@0:8@16'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidFailToExitFullScreen:' type64='v24@0:8@16'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidMiniaturize:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidMove:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidResignKey:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidResignMain:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidResize:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowDidUpdate:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowShouldClose:' type64='B24@0:8@16'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='windowShouldZoom:toFrame:' type64='B56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSRect' index='1' name='newFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='windowWillBeginSheet:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillClose:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillEnterFullScreen:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillEnterVersionBrowser:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillExitFullScreen:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillExitVersionBrowser:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillMiniaturize:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillMove:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillResize:toSize:' type64='{CGSize=dd}40@0:8@16{CGSize=dd}24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='NSSize' index='1' name='frameSize' type64='{CGSize=dd}'/>
<retval declared_type64='NSSize' type64='{CGSize=dd}'/>
</method>
<method selector='windowWillReturnFieldEditor:toObject:' type64='@32@0:8@16@24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='sender' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='client' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='windowWillReturnUndoManager:' type64='@24@0:8@16'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<retval declared_type64='NSUndoManager * _Nullable' type64='@'/>
</method>
<method selector='windowWillStartLiveResize:' type64='v24@0:8@16'>
<arg declared_type64='NSNotification * _Nonnull' index='0' name='notification' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='windowWillUseStandardFrame:defaultFrame:' type64='{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type64='NSWindow * _Nonnull' index='0' name='window' type64='@'/>
<arg declared_type64='NSRect' index='1' name='newFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</informal_protocol>
<informal_protocol name='NSWindowRestoration'>
<method class_method='true' selector='restoreWindowWithIdentifier:state:completionHandler:' type64='v40@0:8@16@24@?32'>
<arg declared_type64='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type64='@'/>
<arg declared_type64='NSCoder * _Nonnull' index='1' name='state' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(NSWindow * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='NSWindow * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
</signatures>
