<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<depends_on path='/System/Library/Frameworks/ColorSync.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/IOSurface.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATSUI.framework'/>
<depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<struct name='ATSFSSpec' type64='{ATSFSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}'>
<field declared_type64='FSVolumeRefNum' name='vRefNum' type64='s'/>
<field declared_type64='SInt32' name='parID' type64='i'/>
<field declared_type64='StrFileName' name='name' type64='[64C]'/>
</struct>
<struct name='ATSFontFilter' type64='{ATSFontFilter=&quot;version&quot;I&quot;filterSelector&quot;i&quot;filter&quot;(?=&quot;generationFilter&quot;I&quot;fontFamilyFilter&quot;I&quot;fontFamilyApplierFunctionFilter&quot;^?&quot;fontApplierFunctionFilter&quot;^?&quot;fontFileRefFilter&quot;^{FSRef})}'>
<field declared_type64='UInt32' name='version' type64='I'/>
<field declared_type64='ATSFontFilterSelector' name='filterSelector' type64='i'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk/System/Library/Frameworks/ApplicationServices.framework/Frameworks/ATS.framework/Headers/ATSFont.h:121:3)' name='filter' type64='(?=&quot;generationFilter&quot;I&quot;fontFamilyFilter&quot;I&quot;fontFamilyApplierFunctionFilter&quot;^?&quot;fontApplierFunctionFilter&quot;^?&quot;fontFileRefFilter&quot;^{FSRef})'/>
</struct>
<struct name='ATSFontMetrics' type64='{ATSFontMetrics=&quot;version&quot;I&quot;ascent&quot;d&quot;descent&quot;d&quot;leading&quot;d&quot;avgAdvanceWidth&quot;d&quot;maxAdvanceWidth&quot;d&quot;minLeftSideBearing&quot;d&quot;minRightSideBearing&quot;d&quot;stemWidth&quot;d&quot;stemHeight&quot;d&quot;capHeight&quot;d&quot;xHeight&quot;d&quot;italicAngle&quot;d&quot;underlinePosition&quot;d&quot;underlineThickness&quot;d}'>
<field declared_type64='UInt32' name='version' type64='I'/>
<field declared_type64='CGFloat' name='ascent' type64='d'/>
<field declared_type64='CGFloat' name='descent' type64='d'/>
<field declared_type64='CGFloat' name='leading' type64='d'/>
<field declared_type64='CGFloat' name='avgAdvanceWidth' type64='d'/>
<field declared_type64='CGFloat' name='maxAdvanceWidth' type64='d'/>
<field declared_type64='CGFloat' name='minLeftSideBearing' type64='d'/>
<field declared_type64='CGFloat' name='minRightSideBearing' type64='d'/>
<field declared_type64='CGFloat' name='stemWidth' type64='d'/>
<field declared_type64='CGFloat' name='stemHeight' type64='d'/>
<field declared_type64='CGFloat' name='capHeight' type64='d'/>
<field declared_type64='CGFloat' name='xHeight' type64='d'/>
<field declared_type64='CGFloat' name='italicAngle' type64='d'/>
<field declared_type64='CGFloat' name='underlinePosition' type64='d'/>
<field declared_type64='CGFloat' name='underlineThickness' type64='d'/>
</struct>
<struct name='ATSFontQuerySourceContext' type64='{ATSFontQuerySourceContext=&quot;version&quot;I&quot;refCon&quot;^v&quot;retain&quot;^?&quot;release&quot;^?}'>
<field declared_type64='UInt32' name='version' type64='I'/>
<field declared_type64='void*' name='refCon' type64='^v'/>
<field declared_type64='CFAllocatorRetainCallBack' function_pointer='true' name='retain' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval const='true' declared_type64='void*' type64='^v'/>
</field>
<field declared_type64='CFAllocatorReleaseCallBack' function_pointer='true' name='release' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='ATSGlyphIdealMetrics' type64='{ATSGlyphIdealMetrics=&quot;advance&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;sideBearing&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;otherSideBearing&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}'>
<field declared_type64='ATSPoint' name='advance' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<field declared_type64='ATSPoint' name='sideBearing' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<field declared_type64='ATSPoint' name='otherSideBearing' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
</struct>
<struct name='ATSGlyphScreenMetrics' type64='{ATSGlyphScreenMetrics=&quot;deviceAdvance&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;topLeft&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;height&quot;I&quot;width&quot;I&quot;sideBearing&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;otherSideBearing&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}'>
<field declared_type64='ATSPoint' name='deviceAdvance' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<field declared_type64='ATSPoint' name='topLeft' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<field declared_type64='UInt32' name='height' type64='I'/>
<field declared_type64='UInt32' name='width' type64='I'/>
<field declared_type64='ATSPoint' name='sideBearing' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<field declared_type64='ATSPoint' name='otherSideBearing' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
</struct>
<struct name='ATSJustWidthDeltaEntryOverride' type64='{ATSJustWidthDeltaEntryOverride=&quot;beforeGrowLimit&quot;i&quot;beforeShrinkLimit&quot;i&quot;afterGrowLimit&quot;i&quot;afterShrinkLimit&quot;i&quot;growFlags&quot;S&quot;shrinkFlags&quot;S}'>
<field declared_type64='Fixed' name='beforeGrowLimit' type64='i'/>
<field declared_type64='Fixed' name='beforeShrinkLimit' type64='i'/>
<field declared_type64='Fixed' name='afterGrowLimit' type64='i'/>
<field declared_type64='Fixed' name='afterShrinkLimit' type64='i'/>
<field declared_type64='JustificationFlags' name='growFlags' type64='S'/>
<field declared_type64='JustificationFlags' name='shrinkFlags' type64='S'/>
</struct>
<struct name='ATSLayoutRecord' type64='{ATSLayoutRecord=&quot;glyphID&quot;S&quot;flags&quot;I&quot;originalOffset&quot;Q&quot;realPos&quot;i}'>
<field declared_type64='ATSGlyphRef' name='glyphID' type64='S'/>
<field declared_type64='ATSGlyphInfoFlags' name='flags' type64='I'/>
<field declared_type64='ByteCount' name='originalOffset' type64='Q'/>
<field declared_type64='Fixed' name='realPos' type64='i'/>
</struct>
<struct name='ATSPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'>
<field declared_type64='CGFloat' name='x' type64='d'/>
<field declared_type64='CGFloat' name='y' type64='d'/>
</struct>
<struct name='ATSTrapezoid' type64='{ATSTrapezoid=&quot;upperLeft&quot;{FixedPoint=&quot;x&quot;i&quot;y&quot;i}&quot;upperRight&quot;{FixedPoint=&quot;x&quot;i&quot;y&quot;i}&quot;lowerRight&quot;{FixedPoint=&quot;x&quot;i&quot;y&quot;i}&quot;lowerLeft&quot;{FixedPoint=&quot;x&quot;i&quot;y&quot;i}}'>
<field declared_type64='FixedPoint' name='upperLeft' type64='{FixedPoint=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='FixedPoint' name='upperRight' type64='{FixedPoint=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='FixedPoint' name='lowerRight' type64='{FixedPoint=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='FixedPoint' name='lowerLeft' type64='{FixedPoint=&quot;x&quot;i&quot;y&quot;i}'/>
</struct>
<struct name='ATSUCurvePath' type64='{ATSUCurvePath=&quot;vectors&quot;I&quot;controlBits&quot;[1I]&quot;vector&quot;[1{CGPoint=&quot;x&quot;d&quot;y&quot;d}]}'>
<field declared_type64='UInt32' name='vectors' type64='I'/>
<field declared_type64='UInt32*' name='controlBits' type64='[1I]'/>
<field declared_type64='ATSPoint*' name='vector' type64='[1{CGPoint=&quot;x&quot;d&quot;y&quot;d}]'/>
</struct>
<struct name='ATSUCurvePaths' type64='{ATSUCurvePaths=&quot;contours&quot;I&quot;contour&quot;[1{ATSUCurvePath=&quot;vectors&quot;I&quot;controlBits&quot;[1I]&quot;vector&quot;[1{CGPoint=&quot;x&quot;d&quot;y&quot;d}]}]}'>
<field declared_type64='UInt32' name='contours' type64='I'/>
<field declared_type64='ATSUCurvePath*' name='contour' type64='[1{ATSUCurvePath=&quot;vectors&quot;I&quot;controlBits&quot;[1I]&quot;vector&quot;[1{CGPoint=&quot;x&quot;d&quot;y&quot;d}]}]'/>
</struct>
<struct name='ATSULayoutOperationOverrideSpecifier' type64='{ATSULayoutOperationOverrideSpecifier=&quot;operationSelector&quot;I&quot;overrideUPP&quot;^?}'>
<field declared_type64='ATSULayoutOperationSelector' name='operationSelector' type64='I'/>
<field declared_type64='ATSUDirectLayoutOperationOverrideUPP' function_pointer='true' name='overrideUPP' type64='^?'>
<arg declared_type64='ATSULayoutOperationSelector' type64='I'/>
<arg declared_type64='ATSULineRef' type64='^{ATSGlyphVector=}'/>
<arg declared_type64='URefCon' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ATSULayoutOperationCallbackStatus*' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
</struct>
<struct name='FMFilter' type64='{FMFilter=&quot;format&quot;I&quot;selector&quot;I&quot;filter&quot;(?=&quot;fontTechnologyFilter&quot;I&quot;fontContainerFilter&quot;{ATSFSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}&quot;generationFilter&quot;I&quot;fontFamilyCallbackFilter&quot;^?&quot;fontCallbackFilter&quot;^?&quot;fontDirectoryFilter&quot;{FMFontDirectoryFilter=&quot;fontFolderDomain&quot;s&quot;reserved&quot;[2I]}&quot;fontFileRefFilter&quot;^{FSRef})}'>
<field declared_type64='UInt32' name='format' type64='I'/>
<field declared_type64='FMFilterSelector' name='selector' type64='I'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk/System/Library/Frameworks/ApplicationServices.framework/Frameworks/ATS.framework/Headers/ATSTypes.h:262:3)' name='filter' type64='(?=&quot;fontTechnologyFilter&quot;I&quot;fontContainerFilter&quot;{ATSFSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}&quot;generationFilter&quot;I&quot;fontFamilyCallbackFilter&quot;^?&quot;fontCallbackFilter&quot;^?&quot;fontDirectoryFilter&quot;{FMFontDirectoryFilter=&quot;fontFolderDomain&quot;s&quot;reserved&quot;[2I]}&quot;fontFileRefFilter&quot;^{FSRef})'/>
</struct>
<struct name='FMFontDirectoryFilter' type64='{FMFontDirectoryFilter=&quot;fontFolderDomain&quot;s&quot;reserved&quot;[2I]}'>
<field declared_type64='SInt16' name='fontFolderDomain' type64='s'/>
<field declared_type64='UInt32*' name='reserved' type64='[2I]'/>
</struct>
<struct name='FMFontFamilyInstance' type64='{FMFontFamilyInstance=&quot;fontFamily&quot;s&quot;fontStyle&quot;s}'>
<field declared_type64='FMFontFamily' name='fontFamily' type64='s'/>
<field declared_type64='FMFontStyle' name='fontStyle' type64='s'/>
</struct>
<struct name='FMFontFamilyInstanceIterator' type64='{FMFontFamilyInstanceIterator=&quot;reserved&quot;[16I]}'>
<field declared_type64='UInt32*' name='reserved' type64='[16I]'/>
</struct>
<struct name='FMFontFamilyIterator' type64='{FMFontFamilyIterator=&quot;reserved&quot;[16I]}'>
<field declared_type64='UInt32*' name='reserved' type64='[16I]'/>
</struct>
<struct name='FMFontIterator' type64='{FMFontIterator=&quot;reserved&quot;[16I]}'>
<field declared_type64='UInt32*' name='reserved' type64='[16I]'/>
</struct>
<cftype name='ATSFontFamilyIterator' type64='^{ATSFontFamilyIterator_=}'/>
<cftype name='ATSFontIterator' type64='^{ATSFontIterator_=}'/>
<cftype name='ATSFontNotificationInfoRef' type64='^{ATSFontNotificationInfoRef_=}'/>
<cftype name='ATSFontNotificationRef' type64='^{ATSFontNotificationRef_=}'/>
<cftype name='ATSULineRef' type64='^{ATSGlyphVector=}'/>
<string_constant name='kATSFontNameTableBytes' nsstring='true' value='font name table bytes'/>
<string_constant name='kATSFontNameTableCode' nsstring='true' value='font name code'/>
<string_constant name='kATSFontNameTableLanguage' nsstring='true' value='font language code'/>
<string_constant name='kATSFontNameTablePlatform' nsstring='true' value='font platform code'/>
<string_constant name='kATSFontNameTableScript' nsstring='true' value='font script code'/>
<string_constant name='kATSQueryClientPID' nsstring='true' value='ATS client pid'/>
<string_constant name='kATSQueryFontName' nsstring='true' value='font name'/>
<string_constant name='kATSQueryFontNameTableEntries' nsstring='true' value='font name table entries'/>
<string_constant name='kATSQueryFontPostScriptName' nsstring='true' value='font PS name'/>
<string_constant name='kATSQueryQDFamilyName' nsstring='true' value='font family name'/>
<enum name='ATSFONTREF_DEFINED' value64='1'/>
<enum name='ATS_LEGACY_API' value64='1'/>
<enum name='kATSBoldQDStretch' value64='98304'/>
<enum name='kATSCubicCurveType' value64='1'/>
<enum name='kATSDeletedGlyphcode' value64='65535'/>
<enum name='kATSFileReferenceFilterSelector' value64='10'/>
<enum name='kATSFontAutoActivationAsk' value64='4'/>
<enum name='kATSFontAutoActivationDefault' value64='0'/>
<enum name='kATSFontAutoActivationDisabled' value64='1'/>
<enum name='kATSFontAutoActivationEnabled' value64='2'/>
<enum name='kATSFontContainerRefUnspecified' value64='0'/>
<enum name='kATSFontContextGlobal' value64='1'/>
<enum name='kATSFontContextLocal' value64='2'/>
<enum name='kATSFontContextUnspecified' value64='0'/>
<enum name='kATSFontFamilyRefUnspecified' value64='0'/>
<enum name='kATSFontFilterCurrentVersion' value64='0'/>
<enum name='kATSFontFilterSelectorFontApplierFunction' value64='9'/>
<enum name='kATSFontFilterSelectorFontFamily' value64='7'/>
<enum name='kATSFontFilterSelectorFontFamilyApplierFunction' value64='8'/>
<enum name='kATSFontFilterSelectorGeneration' value64='3'/>
<enum name='kATSFontFilterSelectorUnspecified' value64='0'/>
<enum name='kATSFontFormatUnspecified' value64='0'/>
<enum name='kATSFontNotifyActionDirectoriesChanged' value64='2'/>
<enum name='kATSFontNotifyActionFontsChanged' value64='1'/>
<enum name='kATSFontNotifyOptionDefault' value64='0'/>
<enum name='kATSFontNotifyOptionReceiveWhileSuspended' value64='1'/>
<enum name='kATSFontRefUnspecified' value64='0'/>
<enum name='kATSGenerationUnspecified' value64='0'/>
<enum name='kATSGlyphInfoAppleReserved' value64='536608744'/>
<enum name='kATSGlyphInfoByteSizeMask' value64='7'/>
<enum name='kATSGlyphInfoHasImposedWidth' value64='16'/>
<enum name='kATSGlyphInfoIsAttachment' value64='2147483648'/>
<enum name='kATSGlyphInfoIsLTHanger' value64='1073741824'/>
<enum name='kATSGlyphInfoIsRBHanger' value64='536870912'/>
<enum name='kATSGlyphInfoIsWhiteSpace' value64='262144'/>
<enum name='kATSGlyphInfoTerminatorGlyph' value64='524288'/>
<enum name='kATSInvalidFontAccess' value64='-982'/>
<enum name='kATSInvalidFontContainerAccess' value64='-985'/>
<enum name='kATSInvalidFontFamilyAccess' value64='-981'/>
<enum name='kATSInvalidFontTableAccess' value64='-984'/>
<enum name='kATSInvalidGlyphAccess' value64='-986'/>
<enum name='kATSItalicQDSkew' value64='16384'/>
<enum name='kATSIterationCompleted' value64='-980'/>
<enum name='kATSIterationScopeModified' value64='-983'/>
<enum name='kATSLineAppleReserved' value64='4242538496'/>
<enum name='kATSLineApplyAntiAliasing' value64='2048'/>
<enum name='kATSLineBreakToNearestCharacter' value64='33554432'/>
<enum name='kATSLineDisableAllBaselineAdjustments' value64='524288'/>
<enum name='kATSLineDisableAllGlyphMorphing' value64='131072'/>
<enum name='kATSLineDisableAllJustification' value64='65536'/>
<enum name='kATSLineDisableAllKerningAdjustments' value64='262144'/>
<enum name='kATSLineDisableAllLayoutOperations' value64='2031616'/>
<enum name='kATSLineDisableAllTrackingAdjustments' value64='1048576'/>
<enum name='kATSLineDisableAutoAdjustDisplayPos' value64='16384'/>
<enum name='kATSLineDisableNegativeJustification' value64='8192'/>
<enum name='kATSLineFillOutToWidth' value64='256'/>
<enum name='kATSLineFractDisable' value64='64'/>
<enum name='kATSLineHasNoHangers' value64='2'/>
<enum name='kATSLineHasNoOpticalAlignment' value64='4'/>
<enum name='kATSLineIgnoreFontLeading' value64='1024'/>
<enum name='kATSLineImposeNoAngleForEnds' value64='128'/>
<enum name='kATSLineIsDisplayOnly' value64='1'/>
<enum name='kATSLineKeepSpacesOutOfMargin' value64='8'/>
<enum name='kATSLineLastNoJustification' value64='32'/>
<enum name='kATSLineNoAntiAliasing' value64='4096'/>
<enum name='kATSLineNoLayoutOptions' value64='0'/>
<enum name='kATSLineNoSpecialJustification' value64='16'/>
<enum name='kATSLineTabAdjustEnabled' value64='512'/>
<enum name='kATSLineUseDeviceMetrics' value64='16777216'/>
<enum name='kATSLineUseQDRendering' value64='32768'/>
<enum name='kATSNoTracking' value64='-2147483648'/>
<enum name='kATSOptionFlagsActivateDisabled' value64='32'/>
<enum name='kATSOptionFlagsComposeFontPostScriptName' value64='1'/>
<enum name='kATSOptionFlagsDefault' value64='0'/>
<enum name='kATSOptionFlagsDefaultScope' value64='0'/>
<enum name='kATSOptionFlagsDoNotNotify' value64='128'/>
<enum name='kATSOptionFlagsIncludeDisabledMask' value64='128'/>
<enum name='kATSOptionFlagsIterateByPrecedenceMask' value64='32'/>
<enum name='kATSOptionFlagsIterationScopeMask' value64='28672'/>
<enum name='kATSOptionFlagsProcessSubdirectories' value64='64'/>
<enum name='kATSOptionFlagsRecordPersistently' value64='262144'/>
<enum name='kATSOptionFlagsRestrictedScope' value64='8192'/>
<enum name='kATSOptionFlagsUnRestrictedScope' value64='4096'/>
<enum name='kATSOptionFlagsUseDataFork' value64='768'/>
<enum name='kATSOptionFlagsUseDataForkAsResourceFork' value64='256'/>
<enum name='kATSOptionFlagsUseResourceFork' value64='512'/>
<enum name='kATSOtherCurveType' value64='3'/>
<enum name='kATSQuadCurveType' value64='2'/>
<enum name='kATSQueryActivateFontMessage' value64='1635021665'/>
<enum name='kATSRadiansFactor' value64='1144'/>
<enum name='kATSStyleAppleReserved' value64='4294967288'/>
<enum name='kATSStyleApplyAntiAliasing' value64='2'/>
<enum name='kATSStyleApplyHints' value64='0'/>
<enum name='kATSStyleNoAntiAliasing' value64='4'/>
<enum name='kATSStyleNoHinting' value64='1'/>
<enum name='kATSStyleNoOptions' value64='0'/>
<enum name='kATSULayoutOperationAppleReserved' value64='4294967232'/>
<enum name='kATSULayoutOperationBaselineAdjustment' value64='8'/>
<enum name='kATSULayoutOperationCallbackStatusContinue' value64='1'/>
<enum name='kATSULayoutOperationCallbackStatusHandled' value64='0'/>
<enum name='kATSULayoutOperationJustification' value64='1'/>
<enum name='kATSULayoutOperationKerningAdjustment' value64='4'/>
<enum name='kATSULayoutOperationMorph' value64='2'/>
<enum name='kATSULayoutOperationNone' value64='0'/>
<enum name='kATSULayoutOperationPostLayoutAdjustment' value64='32'/>
<enum name='kATSULayoutOperationTrackingAdjustment' value64='16'/>
<enum name='kATSUseCaretOrigins' value64='0'/>
<enum name='kATSUseDeviceOrigins' value64='1'/>
<enum name='kATSUseFractionalOrigins' value64='2'/>
<enum name='kATSUseGlyphAdvance' value64='2147483647'/>
<enum name='kATSUseLineHeight' value64='2147483647'/>
<enum name='kATSUseOriginFlags' value64='3'/>
<enum name='kFMCurrentFilterFormat' value64='0'/>
<enum name='kFMFontCallbackFilterSelector' value64='5'/>
<enum name='kFMFontContainerFilterSelector' value64='2'/>
<enum name='kFMFontDirectoryFilterSelector' value64='6'/>
<enum name='kFMFontFamilyCallbackFilterSelector' value64='4'/>
<enum name='kFMFontFileRefFilterSelector' value64='10'/>
<enum name='kFMFontTechnologyFilterSelector' value64='1'/>
<enum name='kFMGenerationFilterSelector' value64='3'/>
<enum name='kFMPostScriptFontTechnology' value64='1954115633'/>
<enum name='kFMTrueTypeFontTechnology' value64='1953658213'/>
<enum name='kFontNoLanguage' value64='4294967295'/>
<enum name='kFontNoName' value64='4294967295'/>
<enum name='kFontNoPlatform' value64='4294967295'/>
<enum name='kFontNoScript' value64='4294967295'/>
<enum name='kInvalidFont' value64='0'/>
<enum name='kInvalidFontFamily' value64='-1'/>
<enum name='kInvalidGeneration' value64='0'/>
<function name='ATSCreateFontQueryRunLoopSource'>
<arg declared_type64='CFIndex' name='queryOrder' type64='q'/>
<arg declared_type64='CFIndex' name='sourceOrder' type64='q'/>
<arg declared_type64='ATSFontQueryCallback' function_pointer='true' name='callout' type64='^?'>
<arg declared_type64='ATSFontQueryMessageID' type64='i'/>
<arg declared_type64='CFPropertyListRef' type64='@'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='CFPropertyListRef' type64='@'/>
</arg>
<arg const='true' declared_type64='ATSFontQuerySourceContext*' name='context' type64='^{ATSFontQuerySourceContext=I^v^?^?}'/>
<retval already_retained='true' declared_type64='CFRunLoopSourceRef' type64='^{__CFRunLoopSource=}'/>
</function>
<function name='ATSFontActivateFromFileReference'>
<arg const='true' declared_type64='FSRef*' name='iFile' type64='^{FSRef=[80C]}'/>
<arg declared_type64='ATSFontContext' name='iContext' type64='I'/>
<arg declared_type64='ATSFontFormat' name='iFormat' type64='I'/>
<arg declared_type64='void*' name='iRefCon' type64='^v'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontContainerRef*' name='oContainer' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontActivateFromMemory'>
<arg declared_type64='LogicalAddress' name='iData' type64='^v'/>
<arg declared_type64='ByteCount' name='iLength' type64='Q'/>
<arg declared_type64='ATSFontContext' name='iContext' type64='I'/>
<arg declared_type64='ATSFontFormat' name='iFormat' type64='I'/>
<arg declared_type64='void*' name='iReserved' type64='^v'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontContainerRef*' name='oContainer' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontApplyFunction'>
<arg declared_type64='ATSFontApplierFunction' function_pointer='true' name='iFunction' type64='^?'>
<arg declared_type64='ATSFontRef' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void*' name='iRefCon' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontDeactivate'>
<arg declared_type64='ATSFontContainerRef' name='iContainer' type64='I'/>
<arg declared_type64='void*' name='iRefCon' type64='^v'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFamilyApplyFunction'>
<arg declared_type64='ATSFontFamilyApplierFunction' function_pointer='true' name='iFunction' type64='^?'>
<arg declared_type64='ATSFontFamilyRef' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void*' name='iRefCon' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFamilyFindFromName'>
<arg declared_type64='CFStringRef' name='iName' type64='^{__CFString=}'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<retval declared_type64='ATSFontFamilyRef' type64='I'/>
</function>
<function name='ATSFontFamilyFindFromQuickDrawName'>
<arg declared_type64='ConstStr255Param' name='iName' type64='*'/>
<retval declared_type64='ATSFontFamilyRef' type64='I'/>
</function>
<function name='ATSFontFamilyGetEncoding'>
<arg declared_type64='ATSFontFamilyRef' name='iFamily' type64='I'/>
<retval declared_type64='TextEncoding' type64='I'/>
</function>
<function name='ATSFontFamilyGetGeneration'>
<arg declared_type64='ATSFontFamilyRef' name='iFamily' type64='I'/>
<retval declared_type64='ATSGeneration' type64='I'/>
</function>
<function name='ATSFontFamilyGetName'>
<arg declared_type64='ATSFontFamilyRef' name='iFamily' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='CFStringRef*' name='oName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFamilyGetQuickDrawName'>
<arg declared_type64='ATSFontFamilyRef' name='iFamily' type64='I'/>
<arg declared_type64='unsigned char*' name='oName' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFamilyIteratorCreate'>
<arg declared_type64='ATSFontContext' name='iContext' type64='I'/>
<arg const='true' declared_type64='ATSFontFilter*' name='iFilter' type64='^{ATSFontFilter=Ii(?=II^?^?^{FSRef})}'/>
<arg declared_type64='void*' name='iRefCon' type64='^v'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontFamilyIterator*' name='ioIterator' type64='^^{ATSFontFamilyIterator_}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFamilyIteratorNext'>
<arg declared_type64='ATSFontFamilyIterator' name='iIterator' type64='^{ATSFontFamilyIterator_=}'/>
<arg declared_type64='ATSFontFamilyRef*' name='oFamily' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFamilyIteratorRelease'>
<arg declared_type64='ATSFontFamilyIterator*' name='ioIterator' type64='^^{ATSFontFamilyIterator_}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFamilyIteratorReset'>
<arg declared_type64='ATSFontContext' name='iContext' type64='I'/>
<arg const='true' declared_type64='ATSFontFilter*' name='iFilter' type64='^{ATSFontFilter=Ii(?=II^?^?^{FSRef})}'/>
<arg declared_type64='void*' name='iRefCon' type64='^v'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontFamilyIterator*' name='ioIterator' type64='^^{ATSFontFamilyIterator_}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFindFromContainer'>
<arg declared_type64='ATSFontContainerRef' name='iContainer' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ItemCount' name='iCount' type64='Q'/>
<arg declared_type64='ATSFontRef*' name='ioArray' type64='^I'/>
<arg declared_type64='ItemCount*' name='oCount' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontFindFromName'>
<arg declared_type64='CFStringRef' name='iName' type64='^{__CFString=}'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<retval declared_type64='ATSFontRef' type64='I'/>
</function>
<function name='ATSFontFindFromPostScriptName'>
<arg declared_type64='CFStringRef' name='iName' type64='^{__CFString=}'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<retval declared_type64='ATSFontRef' type64='I'/>
</function>
<function name='ATSFontGetAutoActivationSettingForApplication'>
<arg declared_type64='CFURLRef' name='iApplicationFileURL' type64='^{__CFURL=}'/>
<retval declared_type64='ATSFontAutoActivationSetting' type64='I'/>
</function>
<function name='ATSFontGetContainer'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontContainerRef*' name='oContainer' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetContainerFromFileReference'>
<arg const='true' declared_type64='FSRef*' name='iFile' type64='^{FSRef=[80C]}'/>
<arg declared_type64='ATSFontContext' name='iContext' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontContainerRef*' name='oContainer' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetFileReference'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='FSRef*' name='oFile' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetFontFamilyResource'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='ByteCount' name='iBufferSize' type64='Q'/>
<arg declared_type64='void*' name='ioBuffer' type64='^v'/>
<arg declared_type64='ByteCount*' name='oSize' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetGeneration'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<retval declared_type64='ATSGeneration' type64='I'/>
</function>
<function name='ATSFontGetGlobalAutoActivationSetting'>
<retval declared_type64='ATSFontAutoActivationSetting' type64='I'/>
</function>
<function name='ATSFontGetHorizontalMetrics'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontMetrics*' name='oMetrics' type64='^{ATSFontMetrics=Idddddddddddddd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetName'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='CFStringRef*' name='oName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetPostScriptName'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='CFStringRef*' name='oName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetTable'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='FourCharCode' name='iTag' type64='I'/>
<arg declared_type64='ByteOffset' name='iOffset' type64='Q'/>
<arg declared_type64='ByteCount' name='iBufferSize' type64='Q'/>
<arg declared_type64='void*' name='ioBuffer' type64='^v'/>
<arg declared_type64='ByteCount*' name='oSize' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetTableDirectory'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='ByteCount' name='iBufferSize' type64='Q'/>
<arg declared_type64='void*' name='ioBuffer' type64='^v'/>
<arg declared_type64='ByteCount*' name='oSize' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontGetVerticalMetrics'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontMetrics*' name='oMetrics' type64='^{ATSFontMetrics=Idddddddddddddd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontIsEnabled'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='ATSFontIteratorCreate'>
<arg declared_type64='ATSFontContext' name='iContext' type64='I'/>
<arg const='true' declared_type64='ATSFontFilter*' name='iFilter' type64='^{ATSFontFilter=Ii(?=II^?^?^{FSRef})}'/>
<arg declared_type64='void*' name='iRefCon' type64='^v'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontIterator*' name='ioIterator' type64='^^{ATSFontIterator_}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontIteratorNext'>
<arg declared_type64='ATSFontIterator' name='iIterator' type64='^{ATSFontIterator_=}'/>
<arg declared_type64='ATSFontRef*' name='oFont' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontIteratorRelease'>
<arg declared_type64='ATSFontIterator*' name='ioIterator' type64='^^{ATSFontIterator_}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontIteratorReset'>
<arg declared_type64='ATSFontContext' name='iContext' type64='I'/>
<arg const='true' declared_type64='ATSFontFilter*' name='iFilter' type64='^{ATSFontFilter=Ii(?=II^?^?^{FSRef})}'/>
<arg declared_type64='void*' name='iRefCon' type64='^v'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='ATSFontIterator*' name='ioIterator' type64='^^{ATSFontIterator_}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontNotificationSubscribe'>
<arg declared_type64='ATSNotificationCallback' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='ATSFontNotificationInfoRef' type64='^{ATSFontNotificationInfoRef_=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ATSFontNotifyOption' name='options' type64='i'/>
<arg declared_type64='void*' name='iRefcon' type64='^v'/>
<arg declared_type64='ATSFontNotificationRef*' name='oNotificationRef' type64='^^{ATSFontNotificationRef_}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontNotificationUnsubscribe'>
<arg declared_type64='ATSFontNotificationRef' name='notificationRef' type64='^{ATSFontNotificationRef_=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontNotify'>
<arg declared_type64='ATSFontNotifyAction' name='action' type64='i'/>
<arg declared_type64='void*' name='info' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontSetAutoActivationSettingForApplication'>
<arg declared_type64='ATSFontAutoActivationSetting' name='iSetting' type64='I'/>
<arg declared_type64='CFURLRef' name='iApplicationFileURL' type64='^{__CFURL=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontSetEnabled'>
<arg declared_type64='ATSFontRef' name='iFont' type64='I'/>
<arg declared_type64='ATSOptionFlags' name='iOptions' type64='I'/>
<arg declared_type64='Boolean' name='iEnabled' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSFontSetGlobalAutoActivationSetting'>
<arg declared_type64='ATSFontAutoActivationSetting' name='iSetting' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ATSGetGeneration'>
<retval declared_type64='ATSGeneration' type64='I'/>
</function>
<struct name='ATSFlatDataFontNameDataHeader' type64='{ATSFlatDataFontNameDataHeader=&quot;nameSpecifierType&quot;I&quot;nameSpecifierSize&quot;I}'>
<field declared_type64='ATSFlatDataFontSpeciferType' name='nameSpecifierType' type64='I'/>
<field declared_type64='UInt32' name='nameSpecifierSize' type64='I'/>
</struct>
<struct name='ATSFlatDataFontSpecRawNameData' type64='{ATSFlatDataFontSpecRawNameData=&quot;fontNameType&quot;I&quot;fontNamePlatform&quot;I&quot;fontNameScript&quot;I&quot;fontNameLanguage&quot;I&quot;fontNameLength&quot;I}'>
<field declared_type64='FontNameCode' name='fontNameType' type64='I'/>
<field declared_type64='FontPlatformCode' name='fontNamePlatform' type64='I'/>
<field declared_type64='FontScriptCode' name='fontNameScript' type64='I'/>
<field declared_type64='FontLanguageCode' name='fontNameLanguage' type64='I'/>
<field declared_type64='UInt32' name='fontNameLength' type64='I'/>
</struct>
<struct name='ATSFlatDataFontSpecRawNameDataHeader' type64='{ATSFlatDataFontSpecRawNameDataHeader=&quot;numberOfFlattenedNames&quot;I&quot;nameDataArray&quot;[1{ATSFlatDataFontSpecRawNameData=&quot;fontNameType&quot;I&quot;fontNamePlatform&quot;I&quot;fontNameScript&quot;I&quot;fontNameLanguage&quot;I&quot;fontNameLength&quot;I}]}'>
<field declared_type64='UInt32' name='numberOfFlattenedNames' type64='I'/>
<field declared_type64='ATSFlatDataFontSpecRawNameData*' name='nameDataArray' type64='[1{ATSFlatDataFontSpecRawNameData=&quot;fontNameType&quot;I&quot;fontNamePlatform&quot;I&quot;fontNameScript&quot;I&quot;fontNameLanguage&quot;I&quot;fontNameLength&quot;I}]'/>
</struct>
<struct name='ATSFlatDataLayoutControlsDataHeader' type64='{ATSFlatDataLayoutControlsDataHeader=&quot;numberOfLayoutControls&quot;I&quot;controlArray&quot;[1{ATSUAttributeInfo=&quot;fTag&quot;I&quot;fValueSize&quot;Q}]}'>
<field declared_type64='UInt32' name='numberOfLayoutControls' type64='I'/>
<field declared_type64='ATSUAttributeInfo*' name='controlArray' type64='[1{ATSUAttributeInfo=&quot;fTag&quot;I&quot;fValueSize&quot;Q}]'/>
</struct>
<struct name='ATSFlatDataLineInfoData' type64='{ATSFlatDataLineInfoData=&quot;lineLength&quot;I&quot;numberOfLineControls&quot;I}'>
<field declared_type64='UInt32' name='lineLength' type64='I'/>
<field declared_type64='UInt32' name='numberOfLineControls' type64='I'/>
</struct>
<struct name='ATSFlatDataLineInfoHeader' type64='{ATSFlatDataLineInfoHeader=&quot;numberOfLines&quot;I&quot;lineInfoArray&quot;[1{ATSFlatDataLineInfoData=&quot;lineLength&quot;I&quot;numberOfLineControls&quot;I}]}'>
<field declared_type64='UInt32' name='numberOfLines' type64='I'/>
<field declared_type64='ATSFlatDataLineInfoData*' name='lineInfoArray' type64='[1{ATSFlatDataLineInfoData=&quot;lineLength&quot;I&quot;numberOfLineControls&quot;I}]'/>
</struct>
<struct name='ATSFlatDataMainHeaderBlock' type64='{ATSFlatDataMainHeaderBlock=&quot;version&quot;I&quot;sizeOfDataBlock&quot;I&quot;offsetToTextLayouts&quot;I&quot;offsetToStyleRuns&quot;I&quot;offsetToStyleList&quot;I}'>
<field declared_type64='UInt32' name='version' type64='I'/>
<field declared_type64='UInt32' name='sizeOfDataBlock' type64='I'/>
<field declared_type64='UInt32' name='offsetToTextLayouts' type64='I'/>
<field declared_type64='UInt32' name='offsetToStyleRuns' type64='I'/>
<field declared_type64='UInt32' name='offsetToStyleList' type64='I'/>
</struct>
<struct name='ATSFlatDataStyleListFeatureData' type64='{ATSFlatDataStyleListFeatureData=&quot;theFeatureType&quot;S&quot;theFeatureSelector&quot;S}'>
<field declared_type64='ATSUFontFeatureType' name='theFeatureType' type64='S'/>
<field declared_type64='ATSUFontFeatureSelector' name='theFeatureSelector' type64='S'/>
</struct>
<struct name='ATSFlatDataStyleListHeader' type64='{ATSFlatDataStyleListHeader=&quot;numberOfStyles&quot;I&quot;styleDataArray&quot;[1{ATSFlatDataStyleListStyleDataHeader=&quot;sizeOfStyleInfo&quot;I&quot;numberOfSetAttributes&quot;I&quot;numberOfSetFeatures&quot;I&quot;numberOfSetVariations&quot;I}]}'>
<field declared_type64='UInt32' name='numberOfStyles' type64='I'/>
<field declared_type64='ATSFlatDataStyleListStyleDataHeader*' name='styleDataArray' type64='[1{ATSFlatDataStyleListStyleDataHeader=&quot;sizeOfStyleInfo&quot;I&quot;numberOfSetAttributes&quot;I&quot;numberOfSetFeatures&quot;I&quot;numberOfSetVariations&quot;I}]'/>
</struct>
<struct name='ATSFlatDataStyleListStyleDataHeader' type64='{ATSFlatDataStyleListStyleDataHeader=&quot;sizeOfStyleInfo&quot;I&quot;numberOfSetAttributes&quot;I&quot;numberOfSetFeatures&quot;I&quot;numberOfSetVariations&quot;I}'>
<field declared_type64='UInt32' name='sizeOfStyleInfo' type64='I'/>
<field declared_type64='UInt32' name='numberOfSetAttributes' type64='I'/>
<field declared_type64='UInt32' name='numberOfSetFeatures' type64='I'/>
<field declared_type64='UInt32' name='numberOfSetVariations' type64='I'/>
</struct>
<struct name='ATSFlatDataStyleListVariationData' type64='{ATSFlatDataStyleListVariationData=&quot;theVariationAxis&quot;I&quot;theVariationValue&quot;i}'>
<field declared_type64='ATSUFontVariationAxis' name='theVariationAxis' type64='I'/>
<field declared_type64='ATSUFontVariationValue' name='theVariationValue' type64='i'/>
</struct>
<struct name='ATSFlatDataStyleRunDataHeader' type64='{ATSFlatDataStyleRunDataHeader=&quot;numberOfStyleRuns&quot;I&quot;styleRunArray&quot;[1{ATSUStyleRunInfo=&quot;runLength&quot;I&quot;styleObjectIndex&quot;I}]}'>
<field declared_type64='UInt32' name='numberOfStyleRuns' type64='I'/>
<field declared_type64='ATSUStyleRunInfo*' name='styleRunArray' type64='[1{ATSUStyleRunInfo=&quot;runLength&quot;I&quot;styleObjectIndex&quot;I}]'/>
</struct>
<struct name='ATSFlatDataTextLayoutDataHeader' type64='{ATSFlatDataTextLayoutDataHeader=&quot;sizeOfLayoutData&quot;I&quot;textLayoutLength&quot;I&quot;offsetToLayoutControls&quot;I&quot;offsetToLineInfo&quot;I}'>
<field declared_type64='UInt32' name='sizeOfLayoutData' type64='I'/>
<field declared_type64='UInt32' name='textLayoutLength' type64='I'/>
<field declared_type64='UInt32' name='offsetToLayoutControls' type64='I'/>
<field declared_type64='UInt32' name='offsetToLineInfo' type64='I'/>
</struct>
<struct name='ATSFlatDataTextLayoutHeader' type64='{ATSFlatDataTextLayoutHeader=&quot;numFlattenedTextLayouts&quot;I&quot;flattenedTextLayouts&quot;[1{ATSFlatDataTextLayoutDataHeader=&quot;sizeOfLayoutData&quot;I&quot;textLayoutLength&quot;I&quot;offsetToLayoutControls&quot;I&quot;offsetToLineInfo&quot;I}]}'>
<field declared_type64='UInt32' name='numFlattenedTextLayouts' type64='I'/>
<field declared_type64='ATSFlatDataTextLayoutDataHeader*' name='flattenedTextLayouts' type64='[1{ATSFlatDataTextLayoutDataHeader=&quot;sizeOfLayoutData&quot;I&quot;textLayoutLength&quot;I&quot;offsetToLayoutControls&quot;I&quot;offsetToLineInfo&quot;I}]'/>
</struct>
<struct name='ATSUAttributeInfo' type64='{ATSUAttributeInfo=&quot;fTag&quot;I&quot;fValueSize&quot;Q}'>
<field declared_type64='ATSUAttributeTag' name='fTag' type64='I'/>
<field declared_type64='ByteCount' name='fValueSize' type64='Q'/>
</struct>
<struct name='ATSUBackgroundColor' type64='{ATSURGBAlphaColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}'>
<field declared_type64='float' name='red' type64='f'/>
<field declared_type64='float' name='green' type64='f'/>
<field declared_type64='float' name='blue' type64='f'/>
<field declared_type64='float' name='alpha' type64='f'/>
</struct>
<struct name='ATSUCaret' type64='{ATSUCaret=&quot;fX&quot;i&quot;fY&quot;i&quot;fDeltaX&quot;i&quot;fDeltaY&quot;i}'>
<field declared_type64='Fixed' name='fX' type64='i'/>
<field declared_type64='Fixed' name='fY' type64='i'/>
<field declared_type64='Fixed' name='fDeltaX' type64='i'/>
<field declared_type64='Fixed' name='fDeltaY' type64='i'/>
</struct>
<struct name='ATSUGlyphInfo' type64='{ATSUGlyphInfo=&quot;glyphID&quot;S&quot;reserved&quot;S&quot;layoutFlags&quot;I&quot;charIndex&quot;Q&quot;style&quot;^{OpaqueATSUStyle}&quot;deltaY&quot;f&quot;idealX&quot;f&quot;screenX&quot;s&quot;caretX&quot;s}'>
<field declared_type64='GlyphID' name='glyphID' type64='S'/>
<field declared_type64='UInt16' name='reserved' type64='S'/>
<field declared_type64='UInt32' name='layoutFlags' type64='I'/>
<field declared_type64='UniCharArrayOffset' name='charIndex' type64='Q'/>
<field declared_type64='ATSUStyle' name='style' type64='^{OpaqueATSUStyle=}'/>
<field declared_type64='Float32' name='deltaY' type64='f'/>
<field declared_type64='Float32' name='idealX' type64='f'/>
<field declared_type64='SInt16' name='screenX' type64='s'/>
<field declared_type64='SInt16' name='caretX' type64='s'/>
</struct>
<struct name='ATSUGlyphInfoArray' type64='{ATSUGlyphInfoArray=&quot;layout&quot;^{OpaqueATSUTextLayout}&quot;numGlyphs&quot;Q&quot;glyphs&quot;[1{ATSUGlyphInfo=&quot;glyphID&quot;S&quot;reserved&quot;S&quot;layoutFlags&quot;I&quot;charIndex&quot;Q&quot;style&quot;^{OpaqueATSUStyle}&quot;deltaY&quot;f&quot;idealX&quot;f&quot;screenX&quot;s&quot;caretX&quot;s}]}'>
<field declared_type64='ATSUTextLayout' name='layout' type64='^{OpaqueATSUTextLayout=}'/>
<field declared_type64='ItemCount' name='numGlyphs' type64='Q'/>
<field declared_type64='ATSUGlyphInfo*' name='glyphs' type64='[1{ATSUGlyphInfo=&quot;glyphID&quot;S&quot;reserved&quot;S&quot;layoutFlags&quot;I&quot;charIndex&quot;Q&quot;style&quot;^{OpaqueATSUStyle}&quot;deltaY&quot;f&quot;idealX&quot;f&quot;screenX&quot;s&quot;caretX&quot;s}]'/>
</struct>
<struct name='ATSUGlyphSelector' type64='{ATSUGlyphSelector=&quot;collection&quot;S&quot;glyphID&quot;S}'>
<field declared_type64='GlyphCollection' name='collection' type64='S'/>
<field declared_type64='GlyphID' name='glyphID' type64='S'/>
</struct>
<struct name='ATSURGBAlphaColor' type64='{ATSURGBAlphaColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}'>
<field declared_type64='float' name='red' type64='f'/>
<field declared_type64='float' name='green' type64='f'/>
<field declared_type64='float' name='blue' type64='f'/>
<field declared_type64='float' name='alpha' type64='f'/>
</struct>
<struct name='ATSUStyleRunInfo' type64='{ATSUStyleRunInfo=&quot;runLength&quot;I&quot;styleObjectIndex&quot;I}'>
<field declared_type64='UInt32' name='runLength' type64='I'/>
<field declared_type64='UInt32' name='styleObjectIndex' type64='I'/>
</struct>
<struct name='ATSUTab' type64='{ATSUTab=&quot;tabPosition&quot;i&quot;tabType&quot;S}'>
<field declared_type64='ATSUTextMeasurement' name='tabPosition' type64='i'/>
<field declared_type64='ATSUTabType' name='tabType' type64='S'/>
</struct>
<struct name='ATSUUnhighlightData' type64='{ATSUUnhighlightData=&quot;dataType&quot;I&quot;unhighlightData&quot;(ATSUBackgroundData=&quot;backgroundColor&quot;{ATSURGBAlphaColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}&quot;backgroundUPP&quot;^?)}'>
<field declared_type64='ATSUBackgroundDataType' name='dataType' type64='I'/>
<field declared_type64='ATSUBackgroundData' name='unhighlightData' type64='(ATSUBackgroundData=&quot;backgroundColor&quot;{ATSURGBAlphaColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}&quot;backgroundUPP&quot;^?)'/>
</struct>
<cftype name='ATSUFontFallbacks' type64='^{OpaqueATSUFontFallbacks=}'/>
<cftype name='ATSUStyle' type64='^{OpaqueATSUStyle=}'/>
<cftype name='ATSUStyleSettingRef' type64='^{LLCStyleInfo=}'/>
<cftype name='ATSUTextLayout' type64='^{OpaqueATSUTextLayout=}'/>
<enum name='kATSFlatDataUstlCurrentVersion' value64='2'/>
<enum name='kATSFlatDataUstlVersion0' value64='0'/>
<enum name='kATSFlatDataUstlVersion1' value64='1'/>
<enum name='kATSFlatDataUstlVersion2' value64='2'/>
<enum name='kATSFlattenedFontSpecifierRawNameData' value64='1851878756'/>
<enum name='kATSUAfterWithStreamShiftTag' value64='268'/>
<enum name='kATSUAscentTag' value64='284'/>
<enum name='kATSUBackgroundCallback' value64='1'/>
<enum name='kATSUBackgroundColor' value64='0'/>
<enum name='kATSUBaselineClassTag' value64='274'/>
<enum name='kATSUBeforeWithStreamShiftTag' value64='267'/>
<enum name='kATSUByCharacter' value64='0'/>
<enum name='kATSUByCharacterCluster' value64='3'/>
<enum name='kATSUByCluster' value64='1'/>
<enum name='kATSUByTypographicCluster' value64='1'/>
<enum name='kATSUByWord' value64='2'/>
<enum name='kATSUCGContextTag' value64='32767'/>
<enum name='kATSUCenterAlignment' value64='536870912'/>
<enum name='kATSUCenterTab' value64='1'/>
<enum name='kATSUClearAll' value64='4294967295'/>
<enum name='kATSUColorTag' value64='263'/>
<enum name='kATSUCrossStreamShiftTag' value64='269'/>
<enum name='kATSUDataStreamUnicodeStyledText' value64='1970500716'/>
<enum name='kATSUDecimalTab' value64='3'/>
<enum name='kATSUDecompositionFactorTag' value64='273'/>
<enum name='kATSUDefaultFontFallbacks' value64='0'/>
<enum name='kATSUDescentTag' value64='285'/>
<enum name='kATSUDirectDataAdvanceDeltaFixedArray' value64='0'/>
<enum name='kATSUDirectDataBaselineDeltaFixedArray' value64='1'/>
<enum name='kATSUDirectDataDeviceDeltaSInt16Array' value64='2'/>
<enum name='kATSUDirectDataLayoutRecordATSLayoutRecordCurrent' value64='100'/>
<enum name='kATSUDirectDataLayoutRecordATSLayoutRecordVersion1' value64='100'/>
<enum name='kATSUDirectDataStyleIndexUInt16Array' value64='3'/>
<enum name='kATSUDirectDataStyleSettingATSUStyleSettingRefArray' value64='4'/>
<enum name='kATSUEndAlignment' value64='1073741824'/>
<enum name='kATSUFlattenOptionNoOptionsMask' value64='0'/>
<enum name='kATSUFontMatrixTag' value64='289'/>
<enum name='kATSUFontTag' value64='261'/>
<enum name='kATSUForceHangingTag' value64='280'/>
<enum name='kATSUFromFollowingLayout' value64='4294967293'/>
<enum name='kATSUFromPreviousLayout' value64='4294967294'/>
<enum name='kATSUFromTextBeginning' value64='4294967295'/>
<enum name='kATSUFullJustification' value64='1073741824'/>
<enum name='kATSUGlyphSelectorTag' value64='287'/>
<enum name='kATSUHangingInhibitFactorTag' value64='271'/>
<enum name='kATSUImposeWidthTag' value64='266'/>
<enum name='kATSUInvalidFontID' value64='0'/>
<enum name='kATSUKerningInhibitFactorTag' value64='272'/>
<enum name='kATSULangRegionTag' value64='264'/>
<enum name='kATSULanguageTag' value64='264'/>
<enum name='kATSULastResortOnlyFallback' value64='1'/>
<enum name='kATSULayoutOperationOverrideTag' value64='15'/>
<enum name='kATSULeadingTag' value64='286'/>
<enum name='kATSULeftTab' value64='0'/>
<enum name='kATSULeftToRightBaseDirection' value64='0'/>
<enum name='kATSULineAscentTag' value64='8'/>
<enum name='kATSULineBaselineValuesTag' value64='6'/>
<enum name='kATSULineDecimalTabCharacterTag' value64='14'/>
<enum name='kATSULineDescentTag' value64='9'/>
<enum name='kATSULineDirectionTag' value64='3'/>
<enum name='kATSULineFlushFactorTag' value64='5'/>
<enum name='kATSULineFontFallbacksTag' value64='13'/>
<enum name='kATSULineHighlightCGColorTag' value64='17'/>
<enum name='kATSULineJustificationFactorTag' value64='4'/>
<enum name='kATSULineLangRegionTag' value64='10'/>
<enum name='kATSULineLanguageTag' value64='10'/>
<enum name='kATSULineLayoutOptionsTag' value64='7'/>
<enum name='kATSULineRotationTag' value64='2'/>
<enum name='kATSULineTextLocatorTag' value64='11'/>
<enum name='kATSULineTruncationTag' value64='12'/>
<enum name='kATSULineWidthTag' value64='1'/>
<enum name='kATSUMaxATSUITagValue' value64='65535'/>
<enum name='kATSUMaxLineTag' value64='18'/>
<enum name='kATSUMaxStyleTag' value64='299'/>
<enum name='kATSUNoCaretAngleTag' value64='277'/>
<enum name='kATSUNoJustification' value64='0'/>
<enum name='kATSUNoLigatureSplitTag' value64='276'/>
<enum name='kATSUNoOpticalAlignmentTag' value64='279'/>
<enum name='kATSUNoSelector' value64='65535'/>
<enum name='kATSUNoSpecialJustificationTag' value64='281'/>
<enum name='kATSUNumberTabTypes' value64='4'/>
<enum name='kATSUPriorityJustOverrideTag' value64='275'/>
<enum name='kATSUQDBoldfaceTag' value64='256'/>
<enum name='kATSUQDCondensedTag' value64='259'/>
<enum name='kATSUQDExtendedTag' value64='260'/>
<enum name='kATSUQDItalicTag' value64='257'/>
<enum name='kATSUQDUnderlineTag' value64='258'/>
<enum name='kATSURGBAlphaColorTag' value64='288'/>
<enum name='kATSURightTab' value64='2'/>
<enum name='kATSURightToLeftBaseDirection' value64='1'/>
<enum name='kATSUSequentialFallbacksExclusive' value64='3'/>
<enum name='kATSUSequentialFallbacksPreferred' value64='2'/>
<enum name='kATSUSizeTag' value64='262'/>
<enum name='kATSUStartAlignment' value64='0'/>
<enum name='kATSUStronglyHorizontal' value64='0'/>
<enum name='kATSUStronglyVertical' value64='1'/>
<enum name='kATSUStyleContainedBy' value64='3'/>
<enum name='kATSUStyleContains' value64='1'/>
<enum name='kATSUStyleDoubleLineCount' value64='2'/>
<enum name='kATSUStyleDropShadowBlurOptionTag' value64='296'/>
<enum name='kATSUStyleDropShadowColorOptionTag' value64='298'/>
<enum name='kATSUStyleDropShadowOffsetOptionTag' value64='297'/>
<enum name='kATSUStyleDropShadowTag' value64='295'/>
<enum name='kATSUStyleEquals' value64='2'/>
<enum name='kATSUStyleRenderingOptionsTag' value64='283'/>
<enum name='kATSUStyleSingleLineCount' value64='1'/>
<enum name='kATSUStyleStrikeThroughColorOptionTag' value64='294'/>
<enum name='kATSUStyleStrikeThroughCountOptionTag' value64='293'/>
<enum name='kATSUStyleStrikeThroughTag' value64='292'/>
<enum name='kATSUStyleTextLocatorTag' value64='282'/>
<enum name='kATSUStyleUnderlineColorOptionTag' value64='291'/>
<enum name='kATSUStyleUnderlineCountOptionTag' value64='290'/>
<enum name='kATSUStyleUnequal' value64='0'/>
<enum name='kATSUSuppressCrossKerningTag' value64='278'/>
<enum name='kATSUToTextEnd' value64='4294967295'/>
<enum name='kATSUTrackingTag' value64='270'/>
<enum name='kATSUTruncFeatNoSquishing' value64='8'/>
<enum name='kATSUTruncateEnd' value64='2'/>
<enum name='kATSUTruncateMiddle' value64='3'/>
<enum name='kATSUTruncateNone' value64='0'/>
<enum name='kATSUTruncateSpecificationMask' value64='7'/>
<enum name='kATSUTruncateStart' value64='1'/>
<enum name='kATSUUnFlattenOptionNoOptionsMask' value64='0'/>
<enum name='kATSUUseGrafPortPenLoc' value64='4294967295'/>
<enum name='kATSUUseLineControlWidth' value64='2147483647'/>
<enum name='kATSUVerticalCharacterTag' value64='265'/>
<enum name='kGlyphCollectionAdobeCNS1' value64='1'/>
<enum name='kGlyphCollectionAdobeGB1' value64='2'/>
<enum name='kGlyphCollectionAdobeJapan1' value64='3'/>
<enum name='kGlyphCollectionAdobeJapan2' value64='4'/>
<enum name='kGlyphCollectionAdobeKorea1' value64='5'/>
<enum name='kGlyphCollectionGID' value64='0'/>
<enum name='kGlyphCollectionUnspecified' value64='255'/>
<enum name='kInvertHighlighting' value64='0'/>
<enum name='kRedrawHighlighting' value64='1'/>
<struct name='ColorSyncMD5' type64='{_ColorSyncMD5=&quot;digest&quot;[16C]}'>
<field declared_type64='uint8_t*' name='digest' type64='[16C]'/>
</struct>
<cftype gettypeid_func='ColorSyncCMMGetTypeID' name='ColorSyncCMMRef' type64='^{ColorSyncCMM=}'/>
<cftype gettypeid_func='ColorSyncProfileGetTypeID' name='ColorSyncMutableProfileRef' type64='^{ColorSyncProfile=}'/>
<cftype gettypeid_func='ColorSyncProfileGetTypeID' name='ColorSyncProfileRef' type64='^{ColorSyncProfile=}'/>
<cftype gettypeid_func='ColorSyncTransformGetTypeID' name='ColorSyncTransformRef' type64='^{ColorSyncTransform=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kCMMApplyTransformProcName' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kCMMCreateTransformPropertyProcName' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kCMMInitializeLinkProfileProcName' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kCMMInitializeTransformProcName' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncACESCGLinearProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncAdobeRGB1998Profile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncBestQuality' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncBlackPointCompensation' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncCameraDeviceClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversion1DLut' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversion3DLut' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionBPC' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionChannelID' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionGridPoints' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionInpChan' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionMatrix' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionNDLut' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionOutChan' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionParamCurve0' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionParamCurve1' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionParamCurve2' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionParamCurve3' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConversionParamCurve4' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncConvertQuality' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncCustomProfiles' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDCIP3Profile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceDefaultProfileID' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceDescription' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceDescriptions' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceHostScope' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceID' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceModeDescription' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceModeDescriptions' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceProfileID' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceProfileIsCurrent' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceProfileIsDefault' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceProfileIsFactory' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceProfileURL' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceProfilesNotification' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceRegisteredNotification' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceUnregisteredNotification' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDeviceUserScope' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDisplayDeviceClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDisplayDeviceProfilesNotification' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDisplayP3Profile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncDraftQuality' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncExtendedRange' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncFactoryProfiles' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncFixedPointRange' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncGenericCMYKProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncGenericGrayGamma22Profile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncGenericGrayProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncGenericLabProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncGenericRGBProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncGenericXYZProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncITUR2020Profile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncITUR709Profile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncNormalQuality' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncPreferredCMM' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncPrinterDeviceClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileCacheSeed' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileColorSpace' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileComputerDomain' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileDescription' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileHeader' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileHostScope' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileMD5Digest' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfilePCS' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileRepositoryChangeNotification' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileURL' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileUserDomain' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncProfileUserScope' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncROMMRGBProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncRegistrationUpdateWindowServer' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncRenderingIntent' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncRenderingIntentAbsolute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncRenderingIntentPerceptual' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncRenderingIntentRelative' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncRenderingIntentSaturation' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncRenderingIntentUseProfileHeader' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSRGBProfile' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncScannerDeviceClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigAToB0Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigAToB1Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigAToB2Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigAbstractClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigBToA0Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigBToA1Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigBToA2Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigBlueColorantTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigBlueTRCTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigCmykData' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigColorSpaceClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigCopyrightTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigDeviceMfgDescTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigDeviceModelDescTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigDisplayClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigGamutTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigGrayData' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigGrayTRCTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigGreenColorantTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigGreenTRCTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigInputClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigLabData' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigLinkClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigMediaBlackPointTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigMediaWhitePointTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigNamedColor2Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigNamedColorClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigOutputClass' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigPreview0Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigPreview1Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigPreview2Tag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigProfileDescriptionTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigProfileSequenceDescTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigRedColorantTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigRedTRCTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigRgbData' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigTechnologyTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigViewingCondDescTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigViewingConditionsTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncSigXYZData' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformCodeFragmentMD5' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformCodeFragmentType' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformCreator' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformDeviceToDevice' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformDeviceToPCS' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformDstSpace' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformFullConversionData' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformGamutCheck' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformInfo' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformPCSToDevice' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformPCSToPCS' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformParametricConversionData' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformSimplifiedConversionData' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformSrcSpace' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncTransformTag' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kColorSyncWaitForCacheReply' type64='^{__CFString=}'/>
<string_constant name='COLORSYNC_PROFILE_INSTALL_ENTITLEMENT' value='com.apple.developer.ColorSync.profile.install'/>
<enum name='COLORSYNC_MD5_LENGTH' value64='16'/>
<enum name='kColorSync10BitInteger' value64='8'/>
<enum name='kColorSync16BitFloat' value64='4'/>
<enum name='kColorSync16BitInteger' value64='3'/>
<enum name='kColorSync1BitGamut' value64='1'/>
<enum name='kColorSync32BitFloat' value64='7'/>
<enum name='kColorSync32BitInteger' value64='5'/>
<enum name='kColorSync32BitNamedColorIndex' value64='6'/>
<enum name='kColorSync8BitInteger' value64='2'/>
<enum name='kColorSyncAlphaFirst' value64='4'/>
<enum name='kColorSyncAlphaInfoMask' value64='31'/>
<enum name='kColorSyncAlphaLast' value64='3'/>
<enum name='kColorSyncAlphaNone' value64='0'/>
<enum name='kColorSyncAlphaNoneSkipFirst' value64='6'/>
<enum name='kColorSyncAlphaNoneSkipLast' value64='5'/>
<enum name='kColorSyncAlphaPremultipliedFirst' value64='2'/>
<enum name='kColorSyncAlphaPremultipliedLast' value64='1'/>
<enum name='kColorSyncByteOrder16Big' value64='12288'/>
<enum name='kColorSyncByteOrder16Little' value64='4096'/>
<enum name='kColorSyncByteOrder32Big' value64='16384'/>
<enum name='kColorSyncByteOrder32Little' value64='8192'/>
<enum name='kColorSyncByteOrderDefault' value64='0'/>
<enum name='kColorSyncByteOrderMask' value64='28672'/>
<function name='CGDisplayCreateUUIDFromDisplayID'>
<arg declared_type64='uint32_t' name='displayID' type64='I'/>
<retval declared_type64='CFUUIDRef _Nonnull' type64='^{__CFUUID=}'/>
</function>
<function name='CGDisplayGetDisplayIDFromUUID'>
<arg declared_type64='CFUUIDRef _Nonnull' name='uuid' type64='^{__CFUUID=}'/>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='ColorSyncCMMCopyCMMIdentifier'>
<arg declared_type64='ColorSyncCMMRef _Nonnull' type64='^{ColorSyncCMM=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='ColorSyncCMMCopyLocalizedName'>
<arg declared_type64='ColorSyncCMMRef _Nonnull' type64='^{ColorSyncCMM=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='ColorSyncCMMCreate'>
<arg declared_type64='CFBundleRef _Nonnull' name='cmmBundle' type64='^{__CFBundle=}'/>
<retval declared_type64='ColorSyncCMMRef _Nullable' type64='^{ColorSyncCMM=}'/>
</function>
<function name='ColorSyncCMMGetBundle'>
<arg declared_type64='ColorSyncCMMRef _Nonnull' type64='^{ColorSyncCMM=}'/>
<retval declared_type64='CFBundleRef _Nullable' type64='^{__CFBundle=}'/>
</function>
<function name='ColorSyncCMMGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='ColorSyncCreateCodeFragment'>
<arg declared_type64='CFArrayRef _Nonnull' name='profileSequence' type64='^{__CFArray=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFTypeRef _Nonnull' type64='@'/>
</function>
<function name='ColorSyncDeviceCopyDeviceInfo'>
<arg declared_type64='CFStringRef _Nonnull' name='deviceClass' type64='^{__CFString=}'/>
<arg declared_type64='CFUUIDRef _Nonnull' name='devID' type64='^{__CFUUID=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='ColorSyncDeviceSetCustomProfiles'>
<arg declared_type64='CFStringRef _Nonnull' name='deviceClass' type64='^{__CFString=}'/>
<arg declared_type64='CFUUIDRef _Nonnull' name='deviceID' type64='^{__CFUUID=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='profileInfo' type64='^{__CFDictionary=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncIterateDeviceProfiles'>
<arg declared_type64='ColorSyncDeviceProfileIterateCallback _Nonnull' function_pointer='true' name='callBack' type64='^?'>
<arg declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<arg declared_type64='void * _Nullable' name='userInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ColorSyncIterateInstalledCMMs'>
<arg declared_type64='ColorSyncCMMIterateCallback _Nonnull' function_pointer='true' name='callBack' type64='^?'>
<arg declared_type64='ColorSyncCMMRef _Nonnull' type64='^{ColorSyncCMM=}'/>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<arg declared_type64='void * _Nullable' name='userInfo' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ColorSyncIterateInstalledProfiles'>
<arg declared_type64='ColorSyncProfileIterateCallback _Nullable' function_pointer='true' name='callBack' type64='^?'>
<arg declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<arg declared_type64='uint32_t * _Nullable' name='seed' type64='^I'/>
<arg declared_type64='void * _Nullable' name='userInfo' type64='^v'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ColorSyncIterateInstalledProfilesWithOptions'>
<arg declared_type64='ColorSyncProfileIterateCallback _Nullable' function_pointer='true' name='callBack' type64='^?'>
<arg declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<arg declared_type64='uint32_t * _Nullable' name='seed' type64='^I'/>
<arg declared_type64='void * _Nullable' name='userInfo' type64='^v'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ColorSyncProfileContainsTag'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='signature' type64='^{__CFString=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncProfileCopyData'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFDataRef _Nonnull' type64='^{__CFData=}'/>
</function>
<function name='ColorSyncProfileCopyDescriptionString'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='ColorSyncProfileCopyHeader'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<retval declared_type64='CFDataRef _Nonnull' type64='^{__CFData=}'/>
</function>
<function name='ColorSyncProfileCopyTag'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='signature' type64='^{__CFString=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='ColorSyncProfileCopyTagSignatures'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='ColorSyncProfileCreate'>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='ColorSyncProfileRef _Nullable' type64='^{ColorSyncProfile=}'/>
</function>
<function name='ColorSyncProfileCreateDeviceProfile'>
<arg declared_type64='CFStringRef _Nonnull' name='deviceClass' type64='^{__CFString=}'/>
<arg declared_type64='CFUUIDRef _Nonnull' name='deviceID' type64='^{__CFUUID=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='profileID' type64='@'/>
<retval declared_type64='ColorSyncProfileRef _Nullable' type64='^{ColorSyncProfile=}'/>
</function>
<function name='ColorSyncProfileCreateDisplayTransferTablesFromVCGT'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='profile' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='size_t * _Nonnull' name='nSamplesPerChannel' type64='^Q'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='ColorSyncProfileCreateLink'>
<arg declared_type64='CFArrayRef _Nonnull' name='profileInfo' type64='^{__CFArray=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='ColorSyncProfileRef _Nullable' type64='^{ColorSyncProfile=}'/>
</function>
<function name='ColorSyncProfileCreateMutable'>
<retval declared_type64='ColorSyncMutableProfileRef _Nullable' type64='^{ColorSyncProfile=}'/>
</function>
<function name='ColorSyncProfileCreateMutableCopy'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<retval declared_type64='ColorSyncMutableProfileRef _Nullable' type64='^{ColorSyncProfile=}'/>
</function>
<function name='ColorSyncProfileCreateWithDisplayID'>
<arg declared_type64='uint32_t' name='displayID' type64='I'/>
<retval declared_type64='ColorSyncProfileRef _Nullable' type64='^{ColorSyncProfile=}'/>
</function>
<function name='ColorSyncProfileCreateWithName'>
<arg declared_type64='CFStringRef _Nonnull' name='name' type64='^{__CFString=}'/>
<retval declared_type64='ColorSyncProfileRef _Nullable' type64='^{ColorSyncProfile=}'/>
</function>
<function name='ColorSyncProfileCreateWithURL'>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='ColorSyncProfileRef _Nullable' type64='^{ColorSyncProfile=}'/>
</function>
<function name='ColorSyncProfileEstimateGamma'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='float' type64='f'/>
</function>
<function name='ColorSyncProfileEstimateGammaWithDisplayID'>
<arg const='true' declared_type64='int32_t' name='displayID' type64='i'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='float' type64='f'/>
</function>
<function name='ColorSyncProfileGetDisplayTransferFormulaFromVCGT'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='profile' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='float * _Nonnull' name='redMin' type64='^f'/>
<arg declared_type64='float * _Nonnull' name='redMax' type64='^f'/>
<arg declared_type64='float * _Nonnull' name='redGamma' type64='^f'/>
<arg declared_type64='float * _Nonnull' name='greenMin' type64='^f'/>
<arg declared_type64='float * _Nonnull' name='greenMax' type64='^f'/>
<arg declared_type64='float * _Nonnull' name='greenGamma' type64='^f'/>
<arg declared_type64='float * _Nonnull' name='blueMin' type64='^f'/>
<arg declared_type64='float * _Nonnull' name='blueMax' type64='^f'/>
<arg declared_type64='float * _Nonnull' name='blueGamma' type64='^f'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncProfileGetMD5'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<retval declared_type64='ColorSyncMD5' type64='{_ColorSyncMD5=[16C]}'/>
</function>
<function name='ColorSyncProfileGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='ColorSyncProfileGetURL'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='CFURLRef _Nonnull' type64='^{__CFURL=}'/>
</function>
<function name='ColorSyncProfileInstall'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='profile' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='domain' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='subpath' type64='^{__CFString=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncProfileIsMatrixBased'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' type64='^{ColorSyncProfile=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncProfileIsWideGamut'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' type64='^{ColorSyncProfile=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncProfileRemoveTag'>
<arg declared_type64='ColorSyncMutableProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='signature' type64='^{__CFString=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ColorSyncProfileSetHeader'>
<arg declared_type64='ColorSyncMutableProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='header' type64='^{__CFData=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ColorSyncProfileSetTag'>
<arg declared_type64='ColorSyncMutableProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='signature' type64='^{__CFString=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ColorSyncProfileUninstall'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='profile' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncProfileVerify'>
<arg declared_type64='ColorSyncProfileRef _Nonnull' name='prof' type64='^{ColorSyncProfile=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='errors' type64='^^{__CFError}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='warnings' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncRegisterDevice'>
<arg declared_type64='CFStringRef _Nonnull' name='deviceClass' type64='^{__CFString=}'/>
<arg declared_type64='CFUUIDRef _Nonnull' name='deviceID' type64='^{__CFUUID=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='deviceInfo' type64='^{__CFDictionary=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncTransformConvert'>
<arg declared_type64='ColorSyncTransformRef _Nonnull' name='transform' type64='^{ColorSyncTransform=}'/>
<arg declared_type64='size_t' name='width' type64='Q'/>
<arg declared_type64='size_t' name='height' type64='Q'/>
<arg declared_type64='void * _Nonnull' name='dst' type64='^v'/>
<arg declared_type64='ColorSyncDataDepth' name='dstDepth' type64='i'/>
<arg declared_type64='ColorSyncDataLayout' name='dstLayout' type64='I'/>
<arg declared_type64='size_t' name='dstBytesPerRow' type64='Q'/>
<arg const='true' declared_type64='void * _Nonnull' name='src' type64='^v'/>
<arg declared_type64='ColorSyncDataDepth' name='srcDepth' type64='i'/>
<arg declared_type64='ColorSyncDataLayout' name='srcLayout' type64='I'/>
<arg declared_type64='size_t' name='srcBytesPerRow' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='ColorSyncTransformCopyProperty'>
<arg declared_type64='ColorSyncTransformRef _Nonnull' name='transform' type64='^{ColorSyncTransform=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='key' type64='@'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFTypeRef _Nullable' type64='@'/>
</function>
<function name='ColorSyncTransformCreate'>
<arg declared_type64='CFArrayRef _Nullable' name='profileSequence' type64='^{__CFArray=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='ColorSyncTransformRef _Nullable' type64='^{ColorSyncTransform=}'/>
</function>
<function name='ColorSyncTransformGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='ColorSyncTransformSetProperty'>
<arg declared_type64='ColorSyncTransformRef _Nonnull' name='transform' type64='^{ColorSyncTransform=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='key' type64='@'/>
<arg declared_type64='CFTypeRef _Nullable' name='property' type64='@'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ColorSyncUnregisterDevice'>
<arg declared_type64='CFStringRef _Nonnull' name='deviceClass' type64='^{__CFString=}'/>
<arg declared_type64='CFUUIDRef _Nonnull' name='deviceID' type64='^{__CFUUID=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<struct name='ALMXGlyphEntry' type64='{ALMXGlyphEntry=&quot;GlyphIndexOffset&quot;s&quot;HorizontalAdvance&quot;s&quot;XOffsetToHOrigin&quot;s&quot;VerticalAdvance&quot;s&quot;YOffsetToVOrigin&quot;s}'>
<field declared_type64='SInt16' name='GlyphIndexOffset' type64='s'/>
<field declared_type64='SInt16' name='HorizontalAdvance' type64='s'/>
<field declared_type64='SInt16' name='XOffsetToHOrigin' type64='s'/>
<field declared_type64='SInt16' name='VerticalAdvance' type64='s'/>
<field declared_type64='SInt16' name='YOffsetToVOrigin' type64='s'/>
</struct>
<struct name='ALMXHeader' type64='{ALMXHeader=&quot;Version&quot;i&quot;Flags&quot;S&quot;NMasters&quot;S&quot;FirstGlyph&quot;S&quot;LastGlyph&quot;S&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='Fixed' name='Version' type64='i'/>
<field declared_type64='UInt16' name='Flags' type64='S'/>
<field declared_type64='UInt16' name='NMasters' type64='S'/>
<field declared_type64='UInt16' name='FirstGlyph' type64='S'/>
<field declared_type64='UInt16' name='LastGlyph' type64='S'/>
<field declared_type64='SFNTLookupTable' name='lookup' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='AnchorPoint' type64='{AnchorPoint=&quot;x&quot;s&quot;y&quot;s}'>
<field declared_type64='SInt16' name='x' type64='s'/>
<field declared_type64='SInt16' name='y' type64='s'/>
</struct>
<struct name='AnchorPointTable' type64='{AnchorPointTable=&quot;nPoints&quot;I&quot;points&quot;[1{AnchorPoint=&quot;x&quot;s&quot;y&quot;s}]}'>
<field declared_type64='UInt32' name='nPoints' type64='I'/>
<field declared_type64='AnchorPoint*' name='points' type64='[1{AnchorPoint=&quot;x&quot;s&quot;y&quot;s}]'/>
</struct>
<struct name='AnkrTable' type64='{AnkrTable=&quot;version&quot;S&quot;flags&quot;S&quot;lookupTableOffset&quot;I&quot;anchorPointTableOffset&quot;I}'>
<field declared_type64='UInt16' name='version' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt32' name='lookupTableOffset' type64='I'/>
<field declared_type64='UInt32' name='anchorPointTableOffset' type64='I'/>
</struct>
<struct name='BslnFormat0Part' type64='{BslnFormat0Part=&quot;deltas&quot;[32s]}'>
<field declared_type64='SInt16*' name='deltas' type64='[32s]'/>
</struct>
<struct name='BslnFormat1Part' type64='{BslnFormat1Part=&quot;deltas&quot;[32s]&quot;mappingData&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='SInt16*' name='deltas' type64='[32s]'/>
<field declared_type64='SFNTLookupTable' name='mappingData' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='BslnFormat2Part' type64='{BslnFormat2Part=&quot;stdGlyph&quot;S&quot;ctlPoints&quot;[32s]}'>
<field declared_type64='UInt16' name='stdGlyph' type64='S'/>
<field declared_type64='SInt16*' name='ctlPoints' type64='[32s]'/>
</struct>
<struct name='BslnFormat3Part' type64='{BslnFormat3Part=&quot;stdGlyph&quot;S&quot;ctlPoints&quot;[32s]&quot;mappingData&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='UInt16' name='stdGlyph' type64='S'/>
<field declared_type64='SInt16*' name='ctlPoints' type64='[32s]'/>
<field declared_type64='SFNTLookupTable' name='mappingData' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='BslnTable' type64='{BslnTable=&quot;version&quot;i&quot;format&quot;S&quot;defaultBaseline&quot;S&quot;parts&quot;(BslnFormatUnion=&quot;fmt0Part&quot;{BslnFormat0Part=&quot;deltas&quot;[32s]}&quot;fmt1Part&quot;{BslnFormat1Part=&quot;deltas&quot;[32s]&quot;mappingData&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}&quot;fmt2Part&quot;{BslnFormat2Part=&quot;stdGlyph&quot;S&quot;ctlPoints&quot;[32s]}&quot;fmt3Part&quot;{BslnFormat3Part=&quot;stdGlyph&quot;S&quot;ctlPoints&quot;[32s]&quot;mappingData&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}})}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='BslnTableFormat' name='format' type64='S'/>
<field declared_type64='UInt16' name='defaultBaseline' type64='S'/>
<field declared_type64='BslnFormatUnion' name='parts' type64='(BslnFormatUnion=&quot;fmt0Part&quot;{BslnFormat0Part=&quot;deltas&quot;[32s]}&quot;fmt1Part&quot;{BslnFormat1Part=&quot;deltas&quot;[32s]&quot;mappingData&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}&quot;fmt2Part&quot;{BslnFormat2Part=&quot;stdGlyph&quot;S&quot;ctlPoints&quot;[32s]}&quot;fmt3Part&quot;{BslnFormat3Part=&quot;stdGlyph&quot;S&quot;ctlPoints&quot;[32s]&quot;mappingData&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}})'/>
</struct>
<struct name='CTParagraphStyleSetting' type64='{CTParagraphStyleSetting=&quot;spec&quot;I&quot;valueSize&quot;Q&quot;value&quot;^v}'>
<field declared_type64='CTParagraphStyleSpecifier' name='spec' type64='I'/>
<field declared_type64='size_t' name='valueSize' type64='Q'/>
<field const='true' declared_type64='void * _Nonnull' name='value' type64='^v'/>
</struct>
<struct name='CTRunDelegateCallbacks' type64='{_CTRunDelegateCallbacks=&quot;version&quot;q&quot;dealloc&quot;^?&quot;getAscent&quot;^?&quot;getDescent&quot;^?&quot;getWidth&quot;^?}'>
<field declared_type64='CFIndex' name='version' type64='q'/>
<field declared_type64='CTRunDelegateDeallocateCallback _Nonnull' function_pointer='true' name='dealloc' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='CTRunDelegateGetAscentCallback _Nonnull' function_pointer='true' name='getAscent' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='CGFloat' type64='d'/>
</field>
<field declared_type64='CTRunDelegateGetDescentCallback _Nonnull' function_pointer='true' name='getDescent' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='CGFloat' type64='d'/>
</field>
<field declared_type64='CTRunDelegateGetWidthCallback _Nonnull' function_pointer='true' name='getWidth' type64='^?'>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='CGFloat' type64='d'/>
</field>
</struct>
<struct name='FontVariation' type64='{FontVariation=&quot;name&quot;I&quot;value&quot;i}'>
<field declared_type64='FourCharCode' name='name' type64='I'/>
<field declared_type64='Fixed' name='value' type64='i'/>
</struct>
<struct name='JustDirectionTable' type64='{JustDirectionTable=&quot;justClass&quot;S&quot;widthDeltaClusters&quot;S&quot;postcomp&quot;S&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='UInt16' name='justClass' type64='S'/>
<field declared_type64='UInt16' name='widthDeltaClusters' type64='S'/>
<field declared_type64='UInt16' name='postcomp' type64='S'/>
<field declared_type64='SFNTLookupTable' name='lookup' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='JustPCAction' type64='{JustPCAction=&quot;actionCount&quot;I&quot;actions&quot;[1{JustPCActionSubrecord=&quot;theClass&quot;S&quot;theType&quot;S&quot;length&quot;I&quot;data&quot;I}]}'>
<field declared_type64='UInt32' name='actionCount' type64='I'/>
<field declared_type64='JustPCActionSubrecord*' name='actions' type64='[1{JustPCActionSubrecord=&quot;theClass&quot;S&quot;theType&quot;S&quot;length&quot;I&quot;data&quot;I}]'/>
</struct>
<struct name='JustPCActionSubrecord' type64='{JustPCActionSubrecord=&quot;theClass&quot;S&quot;theType&quot;S&quot;length&quot;I&quot;data&quot;I}'>
<field declared_type64='UInt16' name='theClass' type64='S'/>
<field declared_type64='JustPCActionType' name='theType' type64='S'/>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='UInt32' name='data' type64='I'/>
</struct>
<struct name='JustPCConditionalAddAction' type64='{JustPCConditionalAddAction=&quot;substThreshold&quot;i&quot;addGlyph&quot;S&quot;substGlyph&quot;S}'>
<field declared_type64='Fixed' name='substThreshold' type64='i'/>
<field declared_type64='UInt16' name='addGlyph' type64='S'/>
<field declared_type64='UInt16' name='substGlyph' type64='S'/>
</struct>
<struct name='JustPCDecompositionAction' type64='{JustPCDecompositionAction=&quot;lowerLimit&quot;i&quot;upperLimit&quot;i&quot;order&quot;S&quot;count&quot;S&quot;glyphs&quot;[1S]}'>
<field declared_type64='Fixed' name='lowerLimit' type64='i'/>
<field declared_type64='Fixed' name='upperLimit' type64='i'/>
<field declared_type64='UInt16' name='order' type64='S'/>
<field declared_type64='UInt16' name='count' type64='S'/>
<field declared_type64='UInt16*' name='glyphs' type64='[1S]'/>
</struct>
<struct name='JustPCDuctilityAction' type64='{JustPCDuctilityAction=&quot;ductilityAxis&quot;I&quot;minimumLimit&quot;i&quot;noStretchValue&quot;i&quot;maximumLimit&quot;i}'>
<field declared_type64='UInt32' name='ductilityAxis' type64='I'/>
<field declared_type64='Fixed' name='minimumLimit' type64='i'/>
<field declared_type64='Fixed' name='noStretchValue' type64='i'/>
<field declared_type64='Fixed' name='maximumLimit' type64='i'/>
</struct>
<struct name='JustPCGlyphRepeatAddAction' type64='{JustPCGlyphRepeatAddAction=&quot;flags&quot;S&quot;glyph&quot;S}'>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt16' name='glyph' type64='S'/>
</struct>
<struct name='JustPostcompTable' type64='{JustPostcompTable=&quot;lookupTable&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='SFNTLookupTable' name='lookupTable' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='JustTable' type64='{JustTable=&quot;version&quot;i&quot;format&quot;S&quot;horizHeaderOffset&quot;S&quot;vertHeaderOffset&quot;S}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='UInt16' name='format' type64='S'/>
<field declared_type64='UInt16' name='horizHeaderOffset' type64='S'/>
<field declared_type64='UInt16' name='vertHeaderOffset' type64='S'/>
</struct>
<struct name='JustWidthDeltaEntry' type64='{JustWidthDeltaEntry=&quot;justClass&quot;I&quot;beforeGrowLimit&quot;i&quot;beforeShrinkLimit&quot;i&quot;afterGrowLimit&quot;i&quot;afterShrinkLimit&quot;i&quot;growFlags&quot;S&quot;shrinkFlags&quot;S}'>
<field declared_type64='UInt32' name='justClass' type64='I'/>
<field declared_type64='Fixed' name='beforeGrowLimit' type64='i'/>
<field declared_type64='Fixed' name='beforeShrinkLimit' type64='i'/>
<field declared_type64='Fixed' name='afterGrowLimit' type64='i'/>
<field declared_type64='Fixed' name='afterShrinkLimit' type64='i'/>
<field declared_type64='JustificationFlags' name='growFlags' type64='S'/>
<field declared_type64='JustificationFlags' name='shrinkFlags' type64='S'/>
</struct>
<struct name='JustWidthDeltaGroup' type64='{JustWidthDeltaGroup=&quot;count&quot;I&quot;entries&quot;[1{JustWidthDeltaEntry=&quot;justClass&quot;I&quot;beforeGrowLimit&quot;i&quot;beforeShrinkLimit&quot;i&quot;afterGrowLimit&quot;i&quot;afterShrinkLimit&quot;i&quot;growFlags&quot;S&quot;shrinkFlags&quot;S}]}'>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='JustWidthDeltaEntry*' name='entries' type64='[1{JustWidthDeltaEntry=&quot;justClass&quot;I&quot;beforeGrowLimit&quot;i&quot;beforeShrinkLimit&quot;i&quot;afterGrowLimit&quot;i&quot;afterShrinkLimit&quot;i&quot;growFlags&quot;S&quot;shrinkFlags&quot;S}]'/>
</struct>
<struct name='KernIndexArrayHeader' type64='{KernIndexArrayHeader=&quot;glyphCount&quot;S&quot;kernValueCount&quot;C&quot;leftClassCount&quot;C&quot;rightClassCount&quot;C&quot;flags&quot;C&quot;kernValue&quot;[1s]&quot;leftClass&quot;[1C]&quot;rightClass&quot;[1C]&quot;kernIndex&quot;[1C]}'>
<field declared_type64='UInt16' name='glyphCount' type64='S'/>
<field declared_type64='UInt8' name='kernValueCount' type64='C'/>
<field declared_type64='UInt8' name='leftClassCount' type64='C'/>
<field declared_type64='UInt8' name='rightClassCount' type64='C'/>
<field declared_type64='UInt8' name='flags' type64='C'/>
<field declared_type64='SInt16*' name='kernValue' type64='[1s]'/>
<field declared_type64='UInt8*' name='leftClass' type64='[1C]'/>
<field declared_type64='UInt8*' name='rightClass' type64='[1C]'/>
<field declared_type64='UInt8*' name='kernIndex' type64='[1C]'/>
</struct>
<struct name='KernKerningPair' type64='{KernKerningPair=&quot;left&quot;S&quot;right&quot;S}'>
<field declared_type64='UInt16' name='left' type64='S'/>
<field declared_type64='UInt16' name='right' type64='S'/>
</struct>
<struct name='KernOffsetTable' type64='{KernOffsetTable=&quot;firstGlyph&quot;S&quot;nGlyphs&quot;S&quot;offsetTable&quot;[1S]}'>
<field declared_type64='UInt16' name='firstGlyph' type64='S'/>
<field declared_type64='UInt16' name='nGlyphs' type64='S'/>
<field declared_type64='KernArrayOffset*' name='offsetTable' type64='[1S]'/>
</struct>
<struct name='KernOrderedListEntry' type64='{KernOrderedListEntry=&quot;pair&quot;{KernKerningPair=&quot;left&quot;S&quot;right&quot;S}&quot;value&quot;s}'>
<field declared_type64='KernKerningPair' name='pair' type64='{KernKerningPair=&quot;left&quot;S&quot;right&quot;S}'/>
<field declared_type64='KernKerningValue' name='value' type64='s'/>
</struct>
<struct name='KernOrderedListHeader' type64='{KernOrderedListHeader=&quot;nPairs&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S&quot;table&quot;[1S]}'>
<field declared_type64='UInt16' name='nPairs' type64='S'/>
<field declared_type64='UInt16' name='searchRange' type64='S'/>
<field declared_type64='UInt16' name='entrySelector' type64='S'/>
<field declared_type64='UInt16' name='rangeShift' type64='S'/>
<field declared_type64='UInt16*' name='table' type64='[1S]'/>
</struct>
<struct name='KernSimpleArrayHeader' type64='{KernSimpleArrayHeader=&quot;rowWidth&quot;S&quot;leftOffsetTable&quot;S&quot;rightOffsetTable&quot;S&quot;theArray&quot;S&quot;firstTable&quot;[1S]}'>
<field declared_type64='UInt16' name='rowWidth' type64='S'/>
<field declared_type64='UInt16' name='leftOffsetTable' type64='S'/>
<field declared_type64='UInt16' name='rightOffsetTable' type64='S'/>
<field declared_type64='KernArrayOffset' name='theArray' type64='S'/>
<field declared_type64='UInt16*' name='firstTable' type64='[1S]'/>
</struct>
<struct name='KernStateEntry' type64='{KernStateEntry=&quot;newState&quot;S&quot;flags&quot;S}'>
<field declared_type64='UInt16' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
</struct>
<struct name='KernStateHeader' type64='{KernStateHeader=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;valueTable&quot;S&quot;firstTable&quot;[1C]}'>
<field declared_type64='STHeader' name='header' type64='{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}'/>
<field declared_type64='UInt16' name='valueTable' type64='S'/>
<field declared_type64='UInt8*' name='firstTable' type64='[1C]'/>
</struct>
<struct name='KernSubtableHeader' type64='{KernSubtableHeader=&quot;length&quot;i&quot;stInfo&quot;S&quot;tupleIndex&quot;s&quot;fsHeader&quot;(KernFormatSpecificHeader=&quot;orderedList&quot;{KernOrderedListHeader=&quot;nPairs&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S&quot;table&quot;[1S]}&quot;stateTable&quot;{KernStateHeader=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;valueTable&quot;S&quot;firstTable&quot;[1C]}&quot;simpleArray&quot;{KernSimpleArrayHeader=&quot;rowWidth&quot;S&quot;leftOffsetTable&quot;S&quot;rightOffsetTable&quot;S&quot;theArray&quot;S&quot;firstTable&quot;[1S]}&quot;indexArray&quot;{KernIndexArrayHeader=&quot;glyphCount&quot;S&quot;kernValueCount&quot;C&quot;leftClassCount&quot;C&quot;rightClassCount&quot;C&quot;flags&quot;C&quot;kernValue&quot;[1s]&quot;leftClass&quot;[1C]&quot;rightClass&quot;[1C]&quot;kernIndex&quot;[1C]})}'>
<field declared_type64='SInt32' name='length' type64='i'/>
<field declared_type64='KernSubtableInfo' name='stInfo' type64='S'/>
<field declared_type64='SInt16' name='tupleIndex' type64='s'/>
<field declared_type64='KernFormatSpecificHeader' name='fsHeader' type64='(KernFormatSpecificHeader=&quot;orderedList&quot;{KernOrderedListHeader=&quot;nPairs&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S&quot;table&quot;[1S]}&quot;stateTable&quot;{KernStateHeader=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;valueTable&quot;S&quot;firstTable&quot;[1C]}&quot;simpleArray&quot;{KernSimpleArrayHeader=&quot;rowWidth&quot;S&quot;leftOffsetTable&quot;S&quot;rightOffsetTable&quot;S&quot;theArray&quot;S&quot;firstTable&quot;[1S]}&quot;indexArray&quot;{KernIndexArrayHeader=&quot;glyphCount&quot;S&quot;kernValueCount&quot;C&quot;leftClassCount&quot;C&quot;rightClassCount&quot;C&quot;flags&quot;C&quot;kernValue&quot;[1s]&quot;leftClass&quot;[1C]&quot;rightClass&quot;[1C]&quot;kernIndex&quot;[1C]})'/>
</struct>
<struct name='KernTableHeader' type64='{KernTableHeader=&quot;version&quot;i&quot;nTables&quot;i&quot;firstSubtable&quot;[1S]}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='SInt32' name='nTables' type64='i'/>
<field declared_type64='UInt16*' name='firstSubtable' type64='[1S]'/>
</struct>
<struct name='KernVersion0Header' type64='{KernVersion0Header=&quot;version&quot;S&quot;nTables&quot;S&quot;firstSubtable&quot;[1S]}'>
<field declared_type64='UInt16' name='version' type64='S'/>
<field declared_type64='UInt16' name='nTables' type64='S'/>
<field declared_type64='UInt16*' name='firstSubtable' type64='[1S]'/>
</struct>
<struct name='KernVersion0SubtableHeader' type64='{KernVersion0SubtableHeader=&quot;version&quot;S&quot;length&quot;S&quot;stInfo&quot;S&quot;fsHeader&quot;(KernFormatSpecificHeader=&quot;orderedList&quot;{KernOrderedListHeader=&quot;nPairs&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S&quot;table&quot;[1S]}&quot;stateTable&quot;{KernStateHeader=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;valueTable&quot;S&quot;firstTable&quot;[1C]}&quot;simpleArray&quot;{KernSimpleArrayHeader=&quot;rowWidth&quot;S&quot;leftOffsetTable&quot;S&quot;rightOffsetTable&quot;S&quot;theArray&quot;S&quot;firstTable&quot;[1S]}&quot;indexArray&quot;{KernIndexArrayHeader=&quot;glyphCount&quot;S&quot;kernValueCount&quot;C&quot;leftClassCount&quot;C&quot;rightClassCount&quot;C&quot;flags&quot;C&quot;kernValue&quot;[1s]&quot;leftClass&quot;[1C]&quot;rightClass&quot;[1C]&quot;kernIndex&quot;[1C]})}'>
<field declared_type64='UInt16' name='version' type64='S'/>
<field declared_type64='UInt16' name='length' type64='S'/>
<field declared_type64='KernSubtableInfo' name='stInfo' type64='S'/>
<field declared_type64='KernFormatSpecificHeader' name='fsHeader' type64='(KernFormatSpecificHeader=&quot;orderedList&quot;{KernOrderedListHeader=&quot;nPairs&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S&quot;table&quot;[1S]}&quot;stateTable&quot;{KernStateHeader=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;valueTable&quot;S&quot;firstTable&quot;[1C]}&quot;simpleArray&quot;{KernSimpleArrayHeader=&quot;rowWidth&quot;S&quot;leftOffsetTable&quot;S&quot;rightOffsetTable&quot;S&quot;theArray&quot;S&quot;firstTable&quot;[1S]}&quot;indexArray&quot;{KernIndexArrayHeader=&quot;glyphCount&quot;S&quot;kernValueCount&quot;C&quot;leftClassCount&quot;C&quot;rightClassCount&quot;C&quot;flags&quot;C&quot;kernValue&quot;[1s]&quot;leftClass&quot;[1C]&quot;rightClass&quot;[1C]&quot;kernIndex&quot;[1C]})'/>
</struct>
<struct name='KerxAnchorPointAction' type64='{KerxAnchorPointAction=&quot;markAnchorPoint&quot;S&quot;currAnchorPoint&quot;S}'>
<field declared_type64='UInt16' name='markAnchorPoint' type64='S'/>
<field declared_type64='UInt16' name='currAnchorPoint' type64='S'/>
</struct>
<struct name='KerxControlPointAction' type64='{KerxControlPointAction=&quot;markControlPoint&quot;S&quot;currControlPoint&quot;S}'>
<field declared_type64='UInt16' name='markControlPoint' type64='S'/>
<field declared_type64='UInt16' name='currControlPoint' type64='S'/>
</struct>
<struct name='KerxControlPointEntry' type64='{KerxControlPointEntry=&quot;newState&quot;S&quot;flags&quot;S&quot;actionIndex&quot;S}'>
<field declared_type64='UInt16' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt16' name='actionIndex' type64='S'/>
</struct>
<struct name='KerxControlPointHeader' type64='{KerxControlPointHeader=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;flags&quot;I&quot;firstTable&quot;[1C]}'>
<field declared_type64='STXHeader' name='header' type64='{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}'/>
<field declared_type64='UInt32' name='flags' type64='I'/>
<field declared_type64='UInt8*' name='firstTable' type64='[1C]'/>
</struct>
<struct name='KerxCoordinateAction' type64='{KerxCoordinateAction=&quot;markX&quot;S&quot;markY&quot;S&quot;currX&quot;S&quot;currY&quot;S}'>
<field declared_type64='UInt16' name='markX' type64='S'/>
<field declared_type64='UInt16' name='markY' type64='S'/>
<field declared_type64='UInt16' name='currX' type64='S'/>
<field declared_type64='UInt16' name='currY' type64='S'/>
</struct>
<struct name='KerxIndexArrayHeader' type64='{KerxIndexArrayHeader=&quot;flags&quot;I&quot;rowCount&quot;S&quot;columnCount&quot;S&quot;rowIndexTableOffset&quot;I&quot;columnIndexTableOffset&quot;I&quot;kerningArrayOffset&quot;I&quot;kerningVectorOffset&quot;I}'>
<field declared_type64='UInt32' name='flags' type64='I'/>
<field declared_type64='UInt16' name='rowCount' type64='S'/>
<field declared_type64='UInt16' name='columnCount' type64='S'/>
<field declared_type64='UInt32' name='rowIndexTableOffset' type64='I'/>
<field declared_type64='UInt32' name='columnIndexTableOffset' type64='I'/>
<field declared_type64='UInt32' name='kerningArrayOffset' type64='I'/>
<field declared_type64='UInt32' name='kerningVectorOffset' type64='I'/>
</struct>
<struct name='KerxKerningPair' type64='{KerxKerningPair=&quot;left&quot;S&quot;right&quot;S}'>
<field declared_type64='UInt16' name='left' type64='S'/>
<field declared_type64='UInt16' name='right' type64='S'/>
</struct>
<struct name='KerxOrderedListEntry' type64='{KerxOrderedListEntry=&quot;pair&quot;{KerxKerningPair=&quot;left&quot;S&quot;right&quot;S}&quot;value&quot;s}'>
<field declared_type64='KerxKerningPair' name='pair' type64='{KerxKerningPair=&quot;left&quot;S&quot;right&quot;S}'/>
<field declared_type64='KernKerningValue' name='value' type64='s'/>
</struct>
<struct name='KerxOrderedListHeader' type64='{KerxOrderedListHeader=&quot;nPairs&quot;I&quot;searchRange&quot;I&quot;entrySelector&quot;I&quot;rangeShift&quot;I&quot;table&quot;[1I]}'>
<field declared_type64='UInt32' name='nPairs' type64='I'/>
<field declared_type64='UInt32' name='searchRange' type64='I'/>
<field declared_type64='UInt32' name='entrySelector' type64='I'/>
<field declared_type64='UInt32' name='rangeShift' type64='I'/>
<field declared_type64='UInt32*' name='table' type64='[1I]'/>
</struct>
<struct name='KerxSimpleArrayHeader' type64='{KerxSimpleArrayHeader=&quot;rowWidth&quot;I&quot;leftOffsetTable&quot;I&quot;rightOffsetTable&quot;I&quot;theArray&quot;I&quot;firstTable&quot;[1I]}'>
<field declared_type64='UInt32' name='rowWidth' type64='I'/>
<field declared_type64='UInt32' name='leftOffsetTable' type64='I'/>
<field declared_type64='UInt32' name='rightOffsetTable' type64='I'/>
<field declared_type64='KerxArrayOffset' name='theArray' type64='I'/>
<field declared_type64='UInt32*' name='firstTable' type64='[1I]'/>
</struct>
<struct name='KerxStateEntry' type64='{KerxStateEntry=&quot;newState&quot;S&quot;flags&quot;S&quot;valueIndex&quot;S}'>
<field declared_type64='UInt16' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt16' name='valueIndex' type64='S'/>
</struct>
<struct name='KerxStateHeader' type64='{KerxStateHeader=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;valueTable&quot;I&quot;firstTable&quot;[1C]}'>
<field declared_type64='STXHeader' name='header' type64='{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}'/>
<field declared_type64='UInt32' name='valueTable' type64='I'/>
<field declared_type64='UInt8*' name='firstTable' type64='[1C]'/>
</struct>
<struct name='KerxSubtableHeader' type64='{KerxSubtableHeader=&quot;length&quot;I&quot;stInfo&quot;I&quot;tupleCount&quot;I&quot;fsHeader&quot;(KerxFormatSpecificHeader=&quot;orderedList&quot;{KerxOrderedListHeader=&quot;nPairs&quot;I&quot;searchRange&quot;I&quot;entrySelector&quot;I&quot;rangeShift&quot;I&quot;table&quot;[1I]}&quot;stateTable&quot;{KerxStateHeader=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;valueTable&quot;I&quot;firstTable&quot;[1C]}&quot;simpleArray&quot;{KerxSimpleArrayHeader=&quot;rowWidth&quot;I&quot;leftOffsetTable&quot;I&quot;rightOffsetTable&quot;I&quot;theArray&quot;I&quot;firstTable&quot;[1I]}&quot;indexArray&quot;{KerxIndexArrayHeader=&quot;flags&quot;I&quot;rowCount&quot;S&quot;columnCount&quot;S&quot;rowIndexTableOffset&quot;I&quot;columnIndexTableOffset&quot;I&quot;kerningArrayOffset&quot;I&quot;kerningVectorOffset&quot;I}&quot;controlPoint&quot;{KerxControlPointHeader=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;flags&quot;I&quot;firstTable&quot;[1C]})}'>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='KerxSubtableCoverage' name='stInfo' type64='I'/>
<field declared_type64='UInt32' name='tupleCount' type64='I'/>
<field declared_type64='KerxFormatSpecificHeader' name='fsHeader' type64='(KerxFormatSpecificHeader=&quot;orderedList&quot;{KerxOrderedListHeader=&quot;nPairs&quot;I&quot;searchRange&quot;I&quot;entrySelector&quot;I&quot;rangeShift&quot;I&quot;table&quot;[1I]}&quot;stateTable&quot;{KerxStateHeader=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;valueTable&quot;I&quot;firstTable&quot;[1C]}&quot;simpleArray&quot;{KerxSimpleArrayHeader=&quot;rowWidth&quot;I&quot;leftOffsetTable&quot;I&quot;rightOffsetTable&quot;I&quot;theArray&quot;I&quot;firstTable&quot;[1I]}&quot;indexArray&quot;{KerxIndexArrayHeader=&quot;flags&quot;I&quot;rowCount&quot;S&quot;columnCount&quot;S&quot;rowIndexTableOffset&quot;I&quot;columnIndexTableOffset&quot;I&quot;kerningArrayOffset&quot;I&quot;kerningVectorOffset&quot;I}&quot;controlPoint&quot;{KerxControlPointHeader=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;flags&quot;I&quot;firstTable&quot;[1C]})'/>
</struct>
<struct name='KerxTableHeader' type64='{KerxTableHeader=&quot;version&quot;i&quot;nTables&quot;I&quot;firstSubtable&quot;[1I]}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='UInt32' name='nTables' type64='I'/>
<field declared_type64='UInt32*' name='firstSubtable' type64='[1I]'/>
</struct>
<struct name='LcarCaretClassEntry' type64='{LcarCaretClassEntry=&quot;count&quot;S&quot;partials&quot;[1S]}'>
<field declared_type64='UInt16' name='count' type64='S'/>
<field declared_type64='UInt16*' name='partials' type64='[1S]'/>
</struct>
<struct name='LcarCaretTable' type64='{LcarCaretTable=&quot;version&quot;i&quot;format&quot;S&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='UInt16' name='format' type64='S'/>
<field declared_type64='SFNTLookupTable' name='lookup' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='LtagStringRange' type64='{LtagStringRange=&quot;offset&quot;S&quot;length&quot;S}'>
<field declared_type64='UInt16' name='offset' type64='S'/>
<field declared_type64='UInt16' name='length' type64='S'/>
</struct>
<struct name='LtagTable' type64='{LtagTable=&quot;version&quot;I&quot;flags&quot;I&quot;numTags&quot;I&quot;tagRange&quot;[1{LtagStringRange=&quot;offset&quot;S&quot;length&quot;S}]}'>
<field declared_type64='UInt32' name='version' type64='I'/>
<field declared_type64='UInt32' name='flags' type64='I'/>
<field declared_type64='UInt32' name='numTags' type64='I'/>
<field declared_type64='LtagStringRange*' name='tagRange' type64='[1{LtagStringRange=&quot;offset&quot;S&quot;length&quot;S}]'/>
</struct>
<struct name='MortChain' type64='{MortChain=&quot;defaultFlags&quot;I&quot;length&quot;I&quot;nFeatures&quot;S&quot;nSubtables&quot;S&quot;featureEntries&quot;[1{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}]}'>
<field declared_type64='MortSubtableMaskFlags' name='defaultFlags' type64='I'/>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='UInt16' name='nFeatures' type64='S'/>
<field declared_type64='UInt16' name='nSubtables' type64='S'/>
<field declared_type64='MortFeatureEntry*' name='featureEntries' type64='[1{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}]'/>
</struct>
<struct name='MortContextualSubtable' type64='{MortContextualSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;substitutionTableOffset&quot;S}'>
<field declared_type64='STHeader' name='header' type64='{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}'/>
<field declared_type64='UInt16' name='substitutionTableOffset' type64='S'/>
</struct>
<struct name='MortFeatureEntry' type64='{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}'>
<field declared_type64='UInt16' name='featureType' type64='S'/>
<field declared_type64='UInt16' name='featureSelector' type64='S'/>
<field declared_type64='MortSubtableMaskFlags' name='enableFlags' type64='I'/>
<field declared_type64='MortSubtableMaskFlags' name='disableFlags' type64='I'/>
</struct>
<struct name='MortInsertionSubtable' type64='{MortInsertionSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}}'>
<field declared_type64='STHeader' name='header' type64='{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}'/>
</struct>
<struct name='MortLigatureSubtable' type64='{MortLigatureSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;ligatureActionTableOffset&quot;S&quot;componentTableOffset&quot;S&quot;ligatureTableOffset&quot;S}'>
<field declared_type64='STHeader' name='header' type64='{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}'/>
<field declared_type64='UInt16' name='ligatureActionTableOffset' type64='S'/>
<field declared_type64='UInt16' name='componentTableOffset' type64='S'/>
<field declared_type64='UInt16' name='ligatureTableOffset' type64='S'/>
</struct>
<struct name='MortRearrangementSubtable' type64='{MortRearrangementSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}}'>
<field declared_type64='STHeader' name='header' type64='{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}'/>
</struct>
<struct name='MortSubtable' type64='{MortSubtable=&quot;length&quot;S&quot;coverage&quot;S&quot;flags&quot;I&quot;u&quot;(MortSpecificSubtable=&quot;rearrangement&quot;{MortRearrangementSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}}&quot;contextual&quot;{MortContextualSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;substitutionTableOffset&quot;S}&quot;ligature&quot;{MortLigatureSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;ligatureActionTableOffset&quot;S&quot;componentTableOffset&quot;S&quot;ligatureTableOffset&quot;S}&quot;swash&quot;{MortSwashSubtable=&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}&quot;insertion&quot;{MortInsertionSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}})}'>
<field declared_type64='UInt16' name='length' type64='S'/>
<field declared_type64='UInt16' name='coverage' type64='S'/>
<field declared_type64='MortSubtableMaskFlags' name='flags' type64='I'/>
<field declared_type64='MortSpecificSubtable' name='u' type64='(MortSpecificSubtable=&quot;rearrangement&quot;{MortRearrangementSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}}&quot;contextual&quot;{MortContextualSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;substitutionTableOffset&quot;S}&quot;ligature&quot;{MortLigatureSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}&quot;ligatureActionTableOffset&quot;S&quot;componentTableOffset&quot;S&quot;ligatureTableOffset&quot;S}&quot;swash&quot;{MortSwashSubtable=&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}&quot;insertion&quot;{MortInsertionSubtable=&quot;header&quot;{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}})'/>
</struct>
<struct name='MortSwashSubtable' type64='{MortSwashSubtable=&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='SFNTLookupTable' name='lookup' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='MortTable' type64='{MortTable=&quot;version&quot;i&quot;nChains&quot;I&quot;chains&quot;[1{MortChain=&quot;defaultFlags&quot;I&quot;length&quot;I&quot;nFeatures&quot;S&quot;nSubtables&quot;S&quot;featureEntries&quot;[1{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}]}]}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='UInt32' name='nChains' type64='I'/>
<field declared_type64='MortChain*' name='chains' type64='[1{MortChain=&quot;defaultFlags&quot;I&quot;length&quot;I&quot;nFeatures&quot;S&quot;nSubtables&quot;S&quot;featureEntries&quot;[1{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}]}]'/>
</struct>
<struct name='MorxChain' type64='{MorxChain=&quot;defaultFlags&quot;I&quot;length&quot;I&quot;nFeatures&quot;I&quot;nSubtables&quot;I&quot;featureEntries&quot;[1{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}]}'>
<field declared_type64='MortSubtableMaskFlags' name='defaultFlags' type64='I'/>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='UInt32' name='nFeatures' type64='I'/>
<field declared_type64='UInt32' name='nSubtables' type64='I'/>
<field declared_type64='MortFeatureEntry*' name='featureEntries' type64='[1{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}]'/>
</struct>
<struct name='MorxContextualSubtable' type64='{MorxContextualSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;substitutionTableOffset&quot;I}'>
<field declared_type64='STXHeader' name='header' type64='{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}'/>
<field declared_type64='UInt32' name='substitutionTableOffset' type64='I'/>
</struct>
<struct name='MorxInsertionSubtable' type64='{MorxInsertionSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;insertionGlyphTableOffset&quot;I}'>
<field declared_type64='STXHeader' name='header' type64='{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}'/>
<field declared_type64='UInt32' name='insertionGlyphTableOffset' type64='I'/>
</struct>
<struct name='MorxLigatureSubtable' type64='{MorxLigatureSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;ligatureActionTableOffset&quot;I&quot;componentTableOffset&quot;I&quot;ligatureTableOffset&quot;I}'>
<field declared_type64='STXHeader' name='header' type64='{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}'/>
<field declared_type64='UInt32' name='ligatureActionTableOffset' type64='I'/>
<field declared_type64='UInt32' name='componentTableOffset' type64='I'/>
<field declared_type64='UInt32' name='ligatureTableOffset' type64='I'/>
</struct>
<struct name='MorxRearrangementSubtable' type64='{MorxRearrangementSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}}'>
<field declared_type64='STXHeader' name='header' type64='{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}'/>
</struct>
<struct name='MorxSubtable' type64='{MorxSubtable=&quot;length&quot;I&quot;coverage&quot;I&quot;flags&quot;I&quot;u&quot;(MorxSpecificSubtable=&quot;rearrangement&quot;{MorxRearrangementSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}}&quot;contextual&quot;{MorxContextualSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;substitutionTableOffset&quot;I}&quot;ligature&quot;{MorxLigatureSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;ligatureActionTableOffset&quot;I&quot;componentTableOffset&quot;I&quot;ligatureTableOffset&quot;I}&quot;swash&quot;{MortSwashSubtable=&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}&quot;insertion&quot;{MorxInsertionSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;insertionGlyphTableOffset&quot;I})}'>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='UInt32' name='coverage' type64='I'/>
<field declared_type64='MortSubtableMaskFlags' name='flags' type64='I'/>
<field declared_type64='MorxSpecificSubtable' name='u' type64='(MorxSpecificSubtable=&quot;rearrangement&quot;{MorxRearrangementSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}}&quot;contextual&quot;{MorxContextualSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;substitutionTableOffset&quot;I}&quot;ligature&quot;{MorxLigatureSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;ligatureActionTableOffset&quot;I&quot;componentTableOffset&quot;I&quot;ligatureTableOffset&quot;I}&quot;swash&quot;{MortSwashSubtable=&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}&quot;insertion&quot;{MorxInsertionSubtable=&quot;header&quot;{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}&quot;insertionGlyphTableOffset&quot;I})'/>
</struct>
<struct name='MorxTable' type64='{MorxTable=&quot;version&quot;i&quot;nChains&quot;I&quot;chains&quot;[1{MorxChain=&quot;defaultFlags&quot;I&quot;length&quot;I&quot;nFeatures&quot;I&quot;nSubtables&quot;I&quot;featureEntries&quot;[1{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}]}]}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='UInt32' name='nChains' type64='I'/>
<field declared_type64='MorxChain*' name='chains' type64='[1{MorxChain=&quot;defaultFlags&quot;I&quot;length&quot;I&quot;nFeatures&quot;I&quot;nSubtables&quot;I&quot;featureEntries&quot;[1{MortFeatureEntry=&quot;featureType&quot;S&quot;featureSelector&quot;S&quot;enableFlags&quot;I&quot;disableFlags&quot;I}]}]'/>
</struct>
<struct name='OpbdSideValues' type64='{OpbdSideValues=&quot;leftSideShift&quot;s&quot;topSideShift&quot;s&quot;rightSideShift&quot;s&quot;bottomSideShift&quot;s}'>
<field declared_type64='SInt16' name='leftSideShift' type64='s'/>
<field declared_type64='SInt16' name='topSideShift' type64='s'/>
<field declared_type64='SInt16' name='rightSideShift' type64='s'/>
<field declared_type64='SInt16' name='bottomSideShift' type64='s'/>
</struct>
<struct name='OpbdTable' type64='{OpbdTable=&quot;version&quot;i&quot;format&quot;S&quot;lookupTable&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='OpbdTableFormat' name='format' type64='S'/>
<field declared_type64='SFNTLookupTable' name='lookupTable' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='PropLookupSegment' type64='{PropLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;S}'>
<field declared_type64='UInt16' name='lastGlyph' type64='S'/>
<field declared_type64='UInt16' name='firstGlyph' type64='S'/>
<field declared_type64='UInt16' name='value' type64='S'/>
</struct>
<struct name='PropLookupSingle' type64='{PropLookupSingle=&quot;glyph&quot;S&quot;props&quot;S}'>
<field declared_type64='UInt16' name='glyph' type64='S'/>
<field declared_type64='PropCharProperties' name='props' type64='S'/>
</struct>
<struct name='PropTable' type64='{PropTable=&quot;version&quot;i&quot;format&quot;S&quot;defaultProps&quot;S&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='UInt16' name='format' type64='S'/>
<field declared_type64='PropCharProperties' name='defaultProps' type64='S'/>
<field declared_type64='SFNTLookupTable' name='lookup' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='ROTAGlyphEntry' type64='{ROTAGlyphEntry=&quot;GlyphIndexOffset&quot;s&quot;HBaselineOffset&quot;s&quot;VBaselineOffset&quot;s}'>
<field declared_type64='SInt16' name='GlyphIndexOffset' type64='s'/>
<field declared_type64='SInt16' name='HBaselineOffset' type64='s'/>
<field declared_type64='SInt16' name='VBaselineOffset' type64='s'/>
</struct>
<struct name='ROTAHeader' type64='{ROTAHeader=&quot;Version&quot;i&quot;Flags&quot;S&quot;NMasters&quot;S&quot;FirstGlyph&quot;S&quot;LastGlyph&quot;S&quot;lookup&quot;{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}}'>
<field declared_type64='Fixed' name='Version' type64='i'/>
<field declared_type64='UInt16' name='Flags' type64='S'/>
<field declared_type64='UInt16' name='NMasters' type64='S'/>
<field declared_type64='UInt16' name='FirstGlyph' type64='S'/>
<field declared_type64='UInt16' name='LastGlyph' type64='S'/>
<field declared_type64='SFNTLookupTable' name='lookup' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'/>
</struct>
<struct name='SFNTLookupArrayHeader' type64='{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}'>
<field declared_type64='SFNTLookupValue*' name='lookupValues' type64='[1S]'/>
</struct>
<struct name='SFNTLookupBinarySearchHeader' type64='{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}'>
<field declared_type64='UInt16' name='unitSize' type64='S'/>
<field declared_type64='UInt16' name='nUnits' type64='S'/>
<field declared_type64='UInt16' name='searchRange' type64='S'/>
<field declared_type64='UInt16' name='entrySelector' type64='S'/>
<field declared_type64='UInt16' name='rangeShift' type64='S'/>
</struct>
<struct name='SFNTLookupSegment' type64='{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}'>
<field declared_type64='UInt16' name='lastGlyph' type64='S'/>
<field declared_type64='UInt16' name='firstGlyph' type64='S'/>
<field declared_type64='UInt16*' name='value' type64='[1S]'/>
</struct>
<struct name='SFNTLookupSegmentHeader' type64='{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}'>
<field declared_type64='SFNTLookupBinarySearchHeader' name='binSearch' type64='{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}'/>
<field declared_type64='SFNTLookupSegment*' name='segments' type64='[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]'/>
</struct>
<struct name='SFNTLookupSingle' type64='{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}'>
<field declared_type64='UInt16' name='glyph' type64='S'/>
<field declared_type64='UInt16*' name='value' type64='[1S]'/>
</struct>
<struct name='SFNTLookupSingleHeader' type64='{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}'>
<field declared_type64='SFNTLookupBinarySearchHeader' name='binSearch' type64='{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}'/>
<field declared_type64='SFNTLookupSingle*' name='entries' type64='[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]'/>
</struct>
<struct name='SFNTLookupTable' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'>
<field declared_type64='SFNTLookupTableFormat' name='format' type64='S'/>
<field declared_type64='SFNTLookupFormatSpecificHeader' name='fsHeader' type64='(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})'/>
</struct>
<struct name='SFNTLookupTrimmedArrayHeader' type64='{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}'>
<field declared_type64='UInt16' name='firstGlyph' type64='S'/>
<field declared_type64='UInt16' name='count' type64='S'/>
<field declared_type64='SFNTLookupValue*' name='valueArray' type64='[1S]'/>
</struct>
<struct name='SFNTLookupVectorHeader' type64='{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]}'>
<field declared_type64='UInt16' name='valueSize' type64='S'/>
<field declared_type64='UInt16' name='firstGlyph' type64='S'/>
<field declared_type64='UInt16' name='count' type64='S'/>
<field declared_type64='UInt8*' name='values' type64='[1C]'/>
</struct>
<struct name='STClassTable' type64='{STClassTable=&quot;firstGlyph&quot;S&quot;nGlyphs&quot;S&quot;classes&quot;[1C]}'>
<field declared_type64='UInt16' name='firstGlyph' type64='S'/>
<field declared_type64='UInt16' name='nGlyphs' type64='S'/>
<field declared_type64='STClass*' name='classes' type64='[1C]'/>
</struct>
<struct name='STEntryOne' type64='{STEntryOne=&quot;newState&quot;S&quot;flags&quot;S&quot;offset1&quot;S}'>
<field declared_type64='UInt16' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt16' name='offset1' type64='S'/>
</struct>
<struct name='STEntryTwo' type64='{STEntryTwo=&quot;newState&quot;S&quot;flags&quot;S&quot;offset1&quot;S&quot;offset2&quot;S}'>
<field declared_type64='UInt16' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt16' name='offset1' type64='S'/>
<field declared_type64='UInt16' name='offset2' type64='S'/>
</struct>
<struct name='STEntryZero' type64='{STEntryZero=&quot;newState&quot;S&quot;flags&quot;S}'>
<field declared_type64='UInt16' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
</struct>
<struct name='STHeader' type64='{STHeader=&quot;filler&quot;C&quot;nClasses&quot;C&quot;classTableOffset&quot;S&quot;stateArrayOffset&quot;S&quot;entryTableOffset&quot;S}'>
<field declared_type64='UInt8' name='filler' type64='C'/>
<field declared_type64='STClass' name='nClasses' type64='C'/>
<field declared_type64='UInt16' name='classTableOffset' type64='S'/>
<field declared_type64='UInt16' name='stateArrayOffset' type64='S'/>
<field declared_type64='UInt16' name='entryTableOffset' type64='S'/>
</struct>
<struct name='STXClassTable' type64='{SFNTLookupTable=&quot;format&quot;S&quot;fsHeader&quot;(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})}'>
<field declared_type64='SFNTLookupTableFormat' name='format' type64='S'/>
<field declared_type64='SFNTLookupFormatSpecificHeader' name='fsHeader' type64='(SFNTLookupFormatSpecificHeader=&quot;theArray&quot;{SFNTLookupArrayHeader=&quot;lookupValues&quot;[1S]}&quot;segment&quot;{SFNTLookupSegmentHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;segments&quot;[1{SFNTLookupSegment=&quot;lastGlyph&quot;S&quot;firstGlyph&quot;S&quot;value&quot;[1S]}]}&quot;single&quot;{SFNTLookupSingleHeader=&quot;binSearch&quot;{SFNTLookupBinarySearchHeader=&quot;unitSize&quot;S&quot;nUnits&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S}&quot;entries&quot;[1{SFNTLookupSingle=&quot;glyph&quot;S&quot;value&quot;[1S]}]}&quot;trimmedArray&quot;{SFNTLookupTrimmedArrayHeader=&quot;firstGlyph&quot;S&quot;count&quot;S&quot;valueArray&quot;[1S]}&quot;vector&quot;{SFNTLookupVectorHeader=&quot;valueSize&quot;S&quot;firstGlyph&quot;S&quot;count&quot;S&quot;values&quot;[1C]})'/>
</struct>
<struct name='STXEntryOne' type64='{STXEntryOne=&quot;newState&quot;S&quot;flags&quot;S&quot;index1&quot;S}'>
<field declared_type64='STXStateIndex' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt16' name='index1' type64='S'/>
</struct>
<struct name='STXEntryTwo' type64='{STXEntryTwo=&quot;newState&quot;S&quot;flags&quot;S&quot;index1&quot;S&quot;index2&quot;S}'>
<field declared_type64='STXStateIndex' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt16' name='index1' type64='S'/>
<field declared_type64='UInt16' name='index2' type64='S'/>
</struct>
<struct name='STXEntryZero' type64='{STXEntryZero=&quot;newState&quot;S&quot;flags&quot;S}'>
<field declared_type64='STXStateIndex' name='newState' type64='S'/>
<field declared_type64='UInt16' name='flags' type64='S'/>
</struct>
<struct name='STXHeader' type64='{STXHeader=&quot;nClasses&quot;I&quot;classTableOffset&quot;I&quot;stateArrayOffset&quot;I&quot;entryTableOffset&quot;I}'>
<field declared_type64='UInt32' name='nClasses' type64='I'/>
<field declared_type64='UInt32' name='classTableOffset' type64='I'/>
<field declared_type64='UInt32' name='stateArrayOffset' type64='I'/>
<field declared_type64='UInt32' name='entryTableOffset' type64='I'/>
</struct>
<struct name='TrakTable' type64='{TrakTable=&quot;version&quot;i&quot;format&quot;S&quot;horizOffset&quot;S&quot;vertOffset&quot;S}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='UInt16' name='format' type64='S'/>
<field declared_type64='UInt16' name='horizOffset' type64='S'/>
<field declared_type64='UInt16' name='vertOffset' type64='S'/>
</struct>
<struct name='TrakTableData' type64='{TrakTableData=&quot;nTracks&quot;S&quot;nSizes&quot;S&quot;sizeTableOffset&quot;I&quot;trakTable&quot;[1{TrakTableEntry=&quot;track&quot;i&quot;nameTableIndex&quot;S&quot;sizesOffset&quot;S}]}'>
<field declared_type64='UInt16' name='nTracks' type64='S'/>
<field declared_type64='UInt16' name='nSizes' type64='S'/>
<field declared_type64='UInt32' name='sizeTableOffset' type64='I'/>
<field declared_type64='TrakTableEntry*' name='trakTable' type64='[1{TrakTableEntry=&quot;track&quot;i&quot;nameTableIndex&quot;S&quot;sizesOffset&quot;S}]'/>
</struct>
<struct name='TrakTableEntry' type64='{TrakTableEntry=&quot;track&quot;i&quot;nameTableIndex&quot;S&quot;sizesOffset&quot;S}'>
<field declared_type64='Fixed' name='track' type64='i'/>
<field declared_type64='UInt16' name='nameTableIndex' type64='S'/>
<field declared_type64='UInt16' name='sizesOffset' type64='S'/>
</struct>
<struct name='sfntCMapEncoding' type64='{sfntCMapEncoding=&quot;platformID&quot;S&quot;scriptID&quot;S&quot;offset&quot;I}'>
<field declared_type64='UInt16' name='platformID' type64='S'/>
<field declared_type64='UInt16' name='scriptID' type64='S'/>
<field declared_type64='UInt32' name='offset' type64='I'/>
</struct>
<struct name='sfntCMapExtendedSubHeader' type64='{sfntCMapExtendedSubHeader=&quot;format&quot;S&quot;reserved&quot;S&quot;length&quot;I&quot;language&quot;I}'>
<field declared_type64='UInt16' name='format' type64='S'/>
<field declared_type64='UInt16' name='reserved' type64='S'/>
<field declared_type64='UInt32' name='length' type64='I'/>
<field declared_type64='UInt32' name='language' type64='I'/>
</struct>
<struct name='sfntCMapHeader' type64='{sfntCMapHeader=&quot;version&quot;S&quot;numTables&quot;S&quot;encoding&quot;[1{sfntCMapEncoding=&quot;platformID&quot;S&quot;scriptID&quot;S&quot;offset&quot;I}]}'>
<field declared_type64='UInt16' name='version' type64='S'/>
<field declared_type64='UInt16' name='numTables' type64='S'/>
<field declared_type64='sfntCMapEncoding*' name='encoding' type64='[1{sfntCMapEncoding=&quot;platformID&quot;S&quot;scriptID&quot;S&quot;offset&quot;I}]'/>
</struct>
<struct name='sfntCMapSubHeader' type64='{sfntCMapSubHeader=&quot;format&quot;S&quot;length&quot;S&quot;languageID&quot;S}'>
<field declared_type64='UInt16' name='format' type64='S'/>
<field declared_type64='UInt16' name='length' type64='S'/>
<field declared_type64='UInt16' name='languageID' type64='S'/>
</struct>
<struct name='sfntDescriptorHeader' type64='{sfntDescriptorHeader=&quot;version&quot;i&quot;descriptorCount&quot;i&quot;descriptor&quot;[1{sfntFontDescriptor=&quot;name&quot;I&quot;value&quot;i}]}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='SInt32' name='descriptorCount' type64='i'/>
<field declared_type64='sfntFontDescriptor*' name='descriptor' type64='[1{sfntFontDescriptor=&quot;name&quot;I&quot;value&quot;i}]'/>
</struct>
<struct name='sfntDirectory' type64='{sfntDirectory=&quot;format&quot;I&quot;numOffsets&quot;S&quot;searchRange&quot;S&quot;entrySelector&quot;S&quot;rangeShift&quot;S&quot;table&quot;[1{sfntDirectoryEntry=&quot;tableTag&quot;I&quot;checkSum&quot;I&quot;offset&quot;I&quot;length&quot;I}]}'>
<field declared_type64='FourCharCode' name='format' type64='I'/>
<field declared_type64='UInt16' name='numOffsets' type64='S'/>
<field declared_type64='UInt16' name='searchRange' type64='S'/>
<field declared_type64='UInt16' name='entrySelector' type64='S'/>
<field declared_type64='UInt16' name='rangeShift' type64='S'/>
<field declared_type64='sfntDirectoryEntry*' name='table' type64='[1{sfntDirectoryEntry=&quot;tableTag&quot;I&quot;checkSum&quot;I&quot;offset&quot;I&quot;length&quot;I}]'/>
</struct>
<struct name='sfntDirectoryEntry' type64='{sfntDirectoryEntry=&quot;tableTag&quot;I&quot;checkSum&quot;I&quot;offset&quot;I&quot;length&quot;I}'>
<field declared_type64='FourCharCode' name='tableTag' type64='I'/>
<field declared_type64='UInt32' name='checkSum' type64='I'/>
<field declared_type64='UInt32' name='offset' type64='I'/>
<field declared_type64='UInt32' name='length' type64='I'/>
</struct>
<struct name='sfntFeatureHeader' type64='{sfntFeatureHeader=&quot;version&quot;i&quot;featureNameCount&quot;S&quot;featureSetCount&quot;S&quot;reserved&quot;i&quot;names&quot;[1{sfntFeatureName=&quot;featureType&quot;S&quot;settingCount&quot;S&quot;offsetToSettings&quot;i&quot;featureFlags&quot;S&quot;nameID&quot;s}]&quot;settings&quot;[1{sfntFontFeatureSetting=&quot;setting&quot;S&quot;nameID&quot;s}]&quot;runs&quot;[1{sfntFontRunFeature=&quot;featureType&quot;S&quot;setting&quot;S}]}'>
<field declared_type64='SInt32' name='version' type64='i'/>
<field declared_type64='UInt16' name='featureNameCount' type64='S'/>
<field declared_type64='UInt16' name='featureSetCount' type64='S'/>
<field declared_type64='SInt32' name='reserved' type64='i'/>
<field declared_type64='sfntFeatureName*' name='names' type64='[1{sfntFeatureName=&quot;featureType&quot;S&quot;settingCount&quot;S&quot;offsetToSettings&quot;i&quot;featureFlags&quot;S&quot;nameID&quot;s}]'/>
<field declared_type64='sfntFontFeatureSetting*' name='settings' type64='[1{sfntFontFeatureSetting=&quot;setting&quot;S&quot;nameID&quot;s}]'/>
<field declared_type64='sfntFontRunFeature*' name='runs' type64='[1{sfntFontRunFeature=&quot;featureType&quot;S&quot;setting&quot;S}]'/>
</struct>
<struct name='sfntFeatureName' type64='{sfntFeatureName=&quot;featureType&quot;S&quot;settingCount&quot;S&quot;offsetToSettings&quot;i&quot;featureFlags&quot;S&quot;nameID&quot;s}'>
<field declared_type64='UInt16' name='featureType' type64='S'/>
<field declared_type64='UInt16' name='settingCount' type64='S'/>
<field declared_type64='SInt32' name='offsetToSettings' type64='i'/>
<field declared_type64='UInt16' name='featureFlags' type64='S'/>
<field declared_type64='SInt16' name='nameID' type64='s'/>
</struct>
<struct name='sfntFontDescriptor' type64='{sfntFontDescriptor=&quot;name&quot;I&quot;value&quot;i}'>
<field declared_type64='FourCharCode' name='name' type64='I'/>
<field declared_type64='Fixed' name='value' type64='i'/>
</struct>
<struct name='sfntFontFeatureSetting' type64='{sfntFontFeatureSetting=&quot;setting&quot;S&quot;nameID&quot;s}'>
<field declared_type64='UInt16' name='setting' type64='S'/>
<field declared_type64='SInt16' name='nameID' type64='s'/>
</struct>
<struct name='sfntFontRunFeature' type64='{sfntFontRunFeature=&quot;featureType&quot;S&quot;setting&quot;S}'>
<field declared_type64='UInt16' name='featureType' type64='S'/>
<field declared_type64='UInt16' name='setting' type64='S'/>
</struct>
<struct name='sfntInstance' type64='{sfntInstance=&quot;nameID&quot;s&quot;flags&quot;s&quot;coord&quot;[1i]}'>
<field declared_type64='SInt16' name='nameID' type64='s'/>
<field declared_type64='SInt16' name='flags' type64='s'/>
<field declared_type64='Fixed*' name='coord' type64='[1i]'/>
</struct>
<struct name='sfntNameHeader' type64='{sfntNameHeader=&quot;format&quot;S&quot;count&quot;S&quot;stringOffset&quot;S&quot;rec&quot;[1{sfntNameRecord=&quot;platformID&quot;S&quot;scriptID&quot;S&quot;languageID&quot;S&quot;nameID&quot;S&quot;length&quot;S&quot;offset&quot;S}]}'>
<field declared_type64='UInt16' name='format' type64='S'/>
<field declared_type64='UInt16' name='count' type64='S'/>
<field declared_type64='UInt16' name='stringOffset' type64='S'/>
<field declared_type64='sfntNameRecord*' name='rec' type64='[1{sfntNameRecord=&quot;platformID&quot;S&quot;scriptID&quot;S&quot;languageID&quot;S&quot;nameID&quot;S&quot;length&quot;S&quot;offset&quot;S}]'/>
</struct>
<struct name='sfntNameRecord' type64='{sfntNameRecord=&quot;platformID&quot;S&quot;scriptID&quot;S&quot;languageID&quot;S&quot;nameID&quot;S&quot;length&quot;S&quot;offset&quot;S}'>
<field declared_type64='UInt16' name='platformID' type64='S'/>
<field declared_type64='UInt16' name='scriptID' type64='S'/>
<field declared_type64='UInt16' name='languageID' type64='S'/>
<field declared_type64='UInt16' name='nameID' type64='S'/>
<field declared_type64='UInt16' name='length' type64='S'/>
<field declared_type64='UInt16' name='offset' type64='S'/>
</struct>
<struct name='sfntVariationAxis' type64='{sfntVariationAxis=&quot;axisTag&quot;I&quot;minValue&quot;i&quot;defaultValue&quot;i&quot;maxValue&quot;i&quot;flags&quot;s&quot;nameID&quot;s}'>
<field declared_type64='FourCharCode' name='axisTag' type64='I'/>
<field declared_type64='Fixed' name='minValue' type64='i'/>
<field declared_type64='Fixed' name='defaultValue' type64='i'/>
<field declared_type64='Fixed' name='maxValue' type64='i'/>
<field declared_type64='SInt16' name='flags' type64='s'/>
<field declared_type64='SInt16' name='nameID' type64='s'/>
</struct>
<struct name='sfntVariationHeader' type64='{sfntVariationHeader=&quot;version&quot;i&quot;offsetToData&quot;S&quot;countSizePairs&quot;S&quot;axisCount&quot;S&quot;axisSize&quot;S&quot;instanceCount&quot;S&quot;instanceSize&quot;S&quot;axis&quot;[1{sfntVariationAxis=&quot;axisTag&quot;I&quot;minValue&quot;i&quot;defaultValue&quot;i&quot;maxValue&quot;i&quot;flags&quot;s&quot;nameID&quot;s}]&quot;instance&quot;[1{sfntInstance=&quot;nameID&quot;s&quot;flags&quot;s&quot;coord&quot;[1i]}]}'>
<field declared_type64='Fixed' name='version' type64='i'/>
<field declared_type64='UInt16' name='offsetToData' type64='S'/>
<field declared_type64='UInt16' name='countSizePairs' type64='S'/>
<field declared_type64='UInt16' name='axisCount' type64='S'/>
<field declared_type64='UInt16' name='axisSize' type64='S'/>
<field declared_type64='UInt16' name='instanceCount' type64='S'/>
<field declared_type64='UInt16' name='instanceSize' type64='S'/>
<field declared_type64='sfntVariationAxis*' name='axis' type64='[1{sfntVariationAxis=&quot;axisTag&quot;I&quot;minValue&quot;i&quot;defaultValue&quot;i&quot;maxValue&quot;i&quot;flags&quot;s&quot;nameID&quot;s}]'/>
<field declared_type64='sfntInstance*' name='instance' type64='[1{sfntInstance=&quot;nameID&quot;s&quot;flags&quot;s&quot;coord&quot;[1i]}]'/>
</struct>
<cftype gettypeid_func='CTFontCollectionGetTypeID' name='CTFontCollectionRef' type64='^{__CTFontCollection=}'/>
<cftype gettypeid_func='CTFontDescriptorGetTypeID' name='CTFontDescriptorRef' type64='^{__CTFontDescriptor=}'/>
<cftype gettypeid_func='CTFontGetTypeID' name='CTFontRef' type64='^{__CTFont=}'/>
<cftype gettypeid_func='CTFrameGetTypeID' name='CTFrameRef' type64='^{__CTFrame=}'/>
<cftype gettypeid_func='CTFramesetterGetTypeID' name='CTFramesetterRef' type64='^{__CTFramesetter=}'/>
<cftype gettypeid_func='CTGlyphInfoGetTypeID' name='CTGlyphInfoRef' type64='^{__CTGlyphInfo=}'/>
<cftype gettypeid_func='CTLineGetTypeID' name='CTLineRef' type64='^{__CTLine=}'/>
<cftype gettypeid_func='CTFontCollectionGetTypeID' name='CTMutableFontCollectionRef' type64='^{__CTFontCollection=}'/>
<cftype gettypeid_func='CTParagraphStyleGetTypeID' name='CTParagraphStyleRef' type64='^{__CTParagraphStyle=}'/>
<cftype gettypeid_func='CTRubyAnnotationGetTypeID' name='CTRubyAnnotationRef' type64='^{__CTRubyAnnotation=}'/>
<cftype gettypeid_func='CTRunDelegateGetTypeID' name='CTRunDelegateRef' type64='^{__CTRunDelegate=}'/>
<cftype gettypeid_func='CTRunGetTypeID' name='CTRunRef' type64='^{__CTRun=}'/>
<cftype gettypeid_func='CTTextTabGetTypeID' name='CTTextTabRef' type64='^{__CTTextTab=}'/>
<cftype gettypeid_func='CTTypesetterGetTypeID' name='CTTypesetterRef' type64='^{__CTTypesetter=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBackgroundColorAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineClassAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineClassHanging' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineClassIdeographicCentered' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineClassIdeographicHigh' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineClassIdeographicLow' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineClassMath' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineClassRoman' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineInfoAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineOffsetAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineOriginalFont' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineReferenceFont' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTBaselineReferenceInfoAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTCharacterShapeAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontBaselineAdjustAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontCascadeListAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontCharacterSetAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontCollectionDisallowAutoActivationOption' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontCollectionIncludeDisabledFontsOption' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontCollectionRemoveDuplicatesOption' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontCopyrightNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptionNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptorMatchingCurrentAssetSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptorMatchingDescriptors' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptorMatchingError' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptorMatchingPercentage' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptorMatchingResult' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptorMatchingSourceDescriptor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptorMatchingTotalAssetSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDescriptorMatchingTotalDownloadedSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDesignerNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDesignerURLNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDisplayNameAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDownloadableAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontDownloadedAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontEnabledAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFamilyNameAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFamilyNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureSampleTextKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureSelectorDefaultKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureSelectorIdentifierKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureSelectorNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureSelectorSettingKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureSettingsAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureTooltipTextKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureTypeExclusiveKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureTypeIdentifierKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureTypeNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeatureTypeSelectorsKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFeaturesAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFixedAdvanceAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFormatAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontFullNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontLanguagesAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontLicenseNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontLicenseURLNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontMacintoshEncodingsAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontManagerBundleIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontManagerErrorDomain' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontManagerErrorFontURLsKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontManagerRegisteredFontsChangedNotification' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontManufacturerNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontMatrixAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontNameAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontOpenTypeFeatureTag' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontOpenTypeFeatureValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontOpticalSizeAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontOrientationAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontPostScriptCIDNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontPostScriptNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontPriorityAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontRegistrationScopeAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontSampleTextNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontSizeAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontSlantTrait' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontStyleNameAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontStyleNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontSubFamilyNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontSymbolicTrait' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontTrademarkNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontTraitsAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontURLAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontUniqueNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVariationAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVariationAxesAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVariationAxisDefaultValueKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVariationAxisHiddenKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVariationAxisIdentifierKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVariationAxisMaximumValueKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVariationAxisMinimumValueKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVariationAxisNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVendorURLNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontVersionNameKey' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontWeightTrait' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFontWidthTrait' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTForegroundColorAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTForegroundColorFromContextAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFrameClippingPathsAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFramePathClippingPathAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFramePathFillRuleAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFramePathWidthAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTFrameProgressionAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTGlyphInfoAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTHorizontalInVerticalFormsAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTKernAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTLanguageAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTLigatureAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTParagraphStyleAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTRubyAnnotationAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTRubyAnnotationScaleToFitAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTRubyAnnotationSizeFactorAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTRunDelegateAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTStrokeColorAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTStrokeWidthAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTSuperscriptAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTTabColumnTerminatorsAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTTrackingAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTTypesetterOptionAllowUnboundedLayout' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTTypesetterOptionDisableBidiProcessing' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTTypesetterOptionForcedEmbeddingLevel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTUnderlineColorAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTUnderlineStyleAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTVerticalFormsAttributeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCTWritingDirectionAttributeName' type64='^{__CFString=}'/>
<enum name='cmapFontTableTag' value64='1668112752'/>
<enum name='descriptorFontTableTag' value64='1717859171'/>
<enum name='featureFontTableTag' value64='1717920116'/>
<enum name='kANKRCurrentVersion' value64='0'/>
<enum name='kAbbrevSquaredLigaturesOffSelector' value64='15'/>
<enum name='kAbbrevSquaredLigaturesOnSelector' value64='14'/>
<enum name='kAllCapsSelector' value64='1'/>
<enum name='kAllLowerCaseSelector' value64='2'/>
<enum name='kAllTypeFeaturesOffSelector' value64='1'/>
<enum name='kAllTypeFeaturesOnSelector' value64='0'/>
<enum name='kAllTypographicFeaturesType' value64='0'/>
<enum name='kAltHalfWidthTextSelector' value64='6'/>
<enum name='kAltProportionalTextSelector' value64='5'/>
<enum name='kAlternateHorizKanaOffSelector' value64='1'/>
<enum name='kAlternateHorizKanaOnSelector' value64='0'/>
<enum name='kAlternateKanaType' value64='34'/>
<enum name='kAlternateVertKanaOffSelector' value64='3'/>
<enum name='kAlternateVertKanaOnSelector' value64='2'/>
<enum name='kAnnotationType' value64='24'/>
<enum name='kAsteriskToMultiplyOffSelector' value64='3'/>
<enum name='kAsteriskToMultiplyOnSelector' value64='2'/>
<enum name='kBSLNControlPointFormatNoMap' value64='2'/>
<enum name='kBSLNControlPointFormatWithMap' value64='3'/>
<enum name='kBSLNCurrentVersion' value64='65536'/>
<enum name='kBSLNDistanceFormatNoMap' value64='0'/>
<enum name='kBSLNDistanceFormatWithMap' value64='1'/>
<enum name='kBSLNHangingBaseline' value64='3'/>
<enum name='kBSLNIdeographicCenterBaseline' value64='1'/>
<enum name='kBSLNIdeographicHighBaseline' value64='5'/>
<enum name='kBSLNIdeographicLowBaseline' value64='2'/>
<enum name='kBSLNLastBaseline' value64='31'/>
<enum name='kBSLNMathBaseline' value64='4'/>
<enum name='kBSLNNoBaseline' value64='255'/>
<enum name='kBSLNNoBaselineOverride' value64='255'/>
<enum name='kBSLNNumBaselineClasses' value64='32'/>
<enum name='kBSLNRomanBaseline' value64='0'/>
<enum name='kBSLNTag' value64='1651731566'/>
<enum name='kBoxAnnotationSelector' value64='1'/>
<enum name='kCJKItalicRomanOffSelector' value64='3'/>
<enum name='kCJKItalicRomanOnSelector' value64='2'/>
<enum name='kCJKItalicRomanSelector' value64='1'/>
<enum name='kCJKRomanSpacingType' value64='103'/>
<enum name='kCJKSymbolAltFiveSelector' value64='5'/>
<enum name='kCJKSymbolAltFourSelector' value64='4'/>
<enum name='kCJKSymbolAltOneSelector' value64='1'/>
<enum name='kCJKSymbolAltThreeSelector' value64='3'/>
<enum name='kCJKSymbolAltTwoSelector' value64='2'/>
<enum name='kCJKSymbolAlternativesType' value64='29'/>
<enum name='kCJKVerticalRomanCenteredSelector' value64='0'/>
<enum name='kCJKVerticalRomanHBaselineSelector' value64='1'/>
<enum name='kCJKVerticalRomanPlacementType' value64='31'/>
<enum name='kCTAdobeCNS1CharacterCollection' value64='1'/>
<enum name='kCTAdobeGB1CharacterCollection' value64='2'/>
<enum name='kCTAdobeJapan1CharacterCollection' value64='3'/>
<enum name='kCTAdobeJapan2CharacterCollection' value64='4'/>
<enum name='kCTAdobeKorea1CharacterCollection' value64='5'/>
<enum name='kCTCenterTextAlignment' value64='2'/>
<enum name='kCTCharacterCollectionAdobeCNS1' value64='1'/>
<enum name='kCTCharacterCollectionAdobeGB1' value64='2'/>
<enum name='kCTCharacterCollectionAdobeJapan1' value64='3'/>
<enum name='kCTCharacterCollectionAdobeJapan2' value64='4'/>
<enum name='kCTCharacterCollectionAdobeKorea1' value64='5'/>
<enum name='kCTCharacterCollectionIdentityMapping' value64='0'/>
<enum name='kCTFontAlertHeaderFontType' value64='18'/>
<enum name='kCTFontApplicationFontType' value64='9'/>
<enum name='kCTFontBoldTrait' value64='2'/>
<enum name='kCTFontClarendonSerifsClass' value64='1073741824'/>
<enum name='kCTFontClassClarendonSerifs' value64='1073741824'/>
<enum name='kCTFontClassFreeformSerifs' value64='1879048192'/>
<enum name='kCTFontClassMaskShift' value64='28'/>
<enum name='kCTFontClassMaskTrait' value64='4026531840'/>
<enum name='kCTFontClassModernSerifs' value64='805306368'/>
<enum name='kCTFontClassOldStyleSerifs' value64='268435456'/>
<enum name='kCTFontClassOrnamentals' value64='2415919104'/>
<enum name='kCTFontClassSansSerif' value64='2147483648'/>
<enum name='kCTFontClassScripts' value64='2684354560'/>
<enum name='kCTFontClassSlabSerifs' value64='1342177280'/>
<enum name='kCTFontClassSymbolic' value64='3221225472'/>
<enum name='kCTFontClassTransitionalSerifs' value64='536870912'/>
<enum name='kCTFontClassUnknown' value64='0'/>
<enum name='kCTFontCollectionCopyDefaultOptions' value64='0'/>
<enum name='kCTFontCollectionCopyStandardSort' value64='2'/>
<enum name='kCTFontCollectionCopyUnique' value64='1'/>
<enum name='kCTFontColorGlyphsTrait' value64='8192'/>
<enum name='kCTFontCompositeTrait' value64='16384'/>
<enum name='kCTFontCondensedTrait' value64='64'/>
<enum name='kCTFontControlContentFontType' value64='26'/>
<enum name='kCTFontDefaultOrientation' value64='0'/>
<enum name='kCTFontDescriptorMatchingDidBegin' value64='0'/>
<enum name='kCTFontDescriptorMatchingDidFailWithError' value64='8'/>
<enum name='kCTFontDescriptorMatchingDidFinish' value64='1'/>
<enum name='kCTFontDescriptorMatchingDidFinishDownloading' value64='6'/>
<enum name='kCTFontDescriptorMatchingDidMatch' value64='7'/>
<enum name='kCTFontDescriptorMatchingDownloading' value64='5'/>
<enum name='kCTFontDescriptorMatchingStalled' value64='3'/>
<enum name='kCTFontDescriptorMatchingWillBeginDownloading' value64='4'/>
<enum name='kCTFontDescriptorMatchingWillBeginQuerying' value64='2'/>
<enum name='kCTFontEmphasizedSystemDetailFontType' value64='20'/>
<enum name='kCTFontEmphasizedSystemFontType' value64='3'/>
<enum name='kCTFontExpandedTrait' value64='32'/>
<enum name='kCTFontFormatBitmap' value64='5'/>
<enum name='kCTFontFormatOpenTypePostScript' value64='1'/>
<enum name='kCTFontFormatOpenTypeTrueType' value64='2'/>
<enum name='kCTFontFormatPostScript' value64='4'/>
<enum name='kCTFontFormatTrueType' value64='3'/>
<enum name='kCTFontFormatUnrecognized' value64='0'/>
<enum name='kCTFontFreeformSerifsClass' value64='1879048192'/>
<enum name='kCTFontHorizontalOrientation' value64='1'/>
<enum name='kCTFontItalicTrait' value64='1'/>
<enum name='kCTFontLabelFontType' value64='10'/>
<enum name='kCTFontManagerAutoActivationDefault' value64='0'/>
<enum name='kCTFontManagerAutoActivationDisabled' value64='1'/>
<enum name='kCTFontManagerAutoActivationEnabled' value64='2'/>
<enum name='kCTFontManagerAutoActivationPromptUser' value64='3'/>
<enum name='kCTFontManagerErrorAlreadyRegistered' value64='105'/>
<enum name='kCTFontManagerErrorAssetNotFound' value64='107'/>
<enum name='kCTFontManagerErrorCancelledByUser' value64='304'/>
<enum name='kCTFontManagerErrorDuplicatedName' value64='305'/>
<enum name='kCTFontManagerErrorExceededResourceLimit' value64='106'/>
<enum name='kCTFontManagerErrorFileNotFound' value64='101'/>
<enum name='kCTFontManagerErrorInUse' value64='202'/>
<enum name='kCTFontManagerErrorInsufficientInfo' value64='303'/>
<enum name='kCTFontManagerErrorInsufficientPermissions' value64='102'/>
<enum name='kCTFontManagerErrorInvalidFilePath' value64='306'/>
<enum name='kCTFontManagerErrorInvalidFontData' value64='104'/>
<enum name='kCTFontManagerErrorMissingEntitlement' value64='302'/>
<enum name='kCTFontManagerErrorNotRegistered' value64='201'/>
<enum name='kCTFontManagerErrorRegistrationFailed' value64='301'/>
<enum name='kCTFontManagerErrorSystemRequired' value64='203'/>
<enum name='kCTFontManagerErrorUnrecognizedFormat' value64='103'/>
<enum name='kCTFontManagerErrorUnsupportedScope' value64='307'/>
<enum name='kCTFontManagerScopeNone' value64='0'/>
<enum name='kCTFontManagerScopePersistent' value64='2'/>
<enum name='kCTFontManagerScopeProcess' value64='1'/>
<enum name='kCTFontManagerScopeSession' value64='3'/>
<enum name='kCTFontManagerScopeUser' value64='2'/>
<enum name='kCTFontMenuItemCmdKeyFontType' value64='14'/>
<enum name='kCTFontMenuItemFontType' value64='12'/>
<enum name='kCTFontMenuItemMarkFontType' value64='13'/>
<enum name='kCTFontMenuTitleFontType' value64='11'/>
<enum name='kCTFontMessageFontType' value64='23'/>
<enum name='kCTFontMiniEmphasizedSystemFontType' value64='7'/>
<enum name='kCTFontMiniSystemFontType' value64='6'/>
<enum name='kCTFontModernSerifsClass' value64='805306368'/>
<enum name='kCTFontMonoSpaceTrait' value64='1024'/>
<enum name='kCTFontNoFontType' value64='4294967295'/>
<enum name='kCTFontOldStyleSerifsClass' value64='268435456'/>
<enum name='kCTFontOptionsDefault' value64='0'/>
<enum name='kCTFontOptionsPreferSystemFont' value64='4'/>
<enum name='kCTFontOptionsPreventAutoActivation' value64='1'/>
<enum name='kCTFontOrientationDefault' value64='0'/>
<enum name='kCTFontOrientationHorizontal' value64='1'/>
<enum name='kCTFontOrientationVertical' value64='2'/>
<enum name='kCTFontOrnamentalsClass' value64='2415919104'/>
<enum name='kCTFontPaletteFontType' value64='24'/>
<enum name='kCTFontPriorityComputer' value64='30000'/>
<enum name='kCTFontPriorityDynamic' value64='50000'/>
<enum name='kCTFontPriorityNetwork' value64='20000'/>
<enum name='kCTFontPriorityProcess' value64='60000'/>
<enum name='kCTFontPrioritySystem' value64='10000'/>
<enum name='kCTFontPriorityUser' value64='40000'/>
<enum name='kCTFontPushButtonFontType' value64='16'/>
<enum name='kCTFontSansSerifClass' value64='2147483648'/>
<enum name='kCTFontScriptsClass' value64='2684354560'/>
<enum name='kCTFontSlabSerifsClass' value64='1342177280'/>
<enum name='kCTFontSmallEmphasizedSystemFontType' value64='5'/>
<enum name='kCTFontSmallSystemFontType' value64='4'/>
<enum name='kCTFontSmallToolbarFontType' value64='22'/>
<enum name='kCTFontSymbolicClass' value64='3221225472'/>
<enum name='kCTFontSystemDetailFontType' value64='19'/>
<enum name='kCTFontSystemFontType' value64='2'/>
<enum name='kCTFontTableAcnt' value64='1633906292'/>
<enum name='kCTFontTableAnkr' value64='1634626418'/>
<enum name='kCTFontTableAvar' value64='1635148146'/>
<enum name='kCTFontTableBASE' value64='1111577413'/>
<enum name='kCTFontTableBdat' value64='1650745716'/>
<enum name='kCTFontTableBhed' value64='1651008868'/>
<enum name='kCTFontTableBloc' value64='1651273571'/>
<enum name='kCTFontTableBsln' value64='1651731566'/>
<enum name='kCTFontTableCBDT' value64='1128416340'/>
<enum name='kCTFontTableCBLC' value64='1128418371'/>
<enum name='kCTFontTableCFF' value64='1128678944'/>
<enum name='kCTFontTableCFF2' value64='1128678962'/>
<enum name='kCTFontTableCOLR' value64='1129270354'/>
<enum name='kCTFontTableCPAL' value64='1129333068'/>
<enum name='kCTFontTableCidg' value64='1667851367'/>
<enum name='kCTFontTableCmap' value64='1668112752'/>
<enum name='kCTFontTableCvar' value64='1668702578'/>
<enum name='kCTFontTableCvt' value64='1668707360'/>
<enum name='kCTFontTableDSIG' value64='1146308935'/>
<enum name='kCTFontTableEBDT' value64='1161970772'/>
<enum name='kCTFontTableEBLC' value64='1161972803'/>
<enum name='kCTFontTableEBSC' value64='1161974595'/>
<enum name='kCTFontTableFdsc' value64='1717859171'/>
<enum name='kCTFontTableFeat' value64='1717920116'/>
<enum name='kCTFontTableFmtx' value64='1718449272'/>
<enum name='kCTFontTableFond' value64='1718578788'/>
<enum name='kCTFontTableFpgm' value64='1718642541'/>
<enum name='kCTFontTableFvar' value64='1719034226'/>
<enum name='kCTFontTableGDEF' value64='1195656518'/>
<enum name='kCTFontTableGPOS' value64='1196445523'/>
<enum name='kCTFontTableGSUB' value64='1196643650'/>
<enum name='kCTFontTableGasp' value64='1734439792'/>
<enum name='kCTFontTableGlyf' value64='1735162214'/>
<enum name='kCTFontTableGvar' value64='1735811442'/>
<enum name='kCTFontTableHVAR' value64='1213612370'/>
<enum name='kCTFontTableHdmx' value64='1751412088'/>
<enum name='kCTFontTableHead' value64='1751474532'/>
<enum name='kCTFontTableHhea' value64='1751672161'/>
<enum name='kCTFontTableHmtx' value64='1752003704'/>
<enum name='kCTFontTableHsty' value64='1752396921'/>
<enum name='kCTFontTableJSTF' value64='1246975046'/>
<enum name='kCTFontTableJust' value64='1786082164'/>
<enum name='kCTFontTableKern' value64='1801810542'/>
<enum name='kCTFontTableKerx' value64='1801810552'/>
<enum name='kCTFontTableLTSH' value64='1280594760'/>
<enum name='kCTFontTableLcar' value64='1818452338'/>
<enum name='kCTFontTableLoca' value64='1819239265'/>
<enum name='kCTFontTableLtag' value64='1819566439'/>
<enum name='kCTFontTableMATH' value64='1296127048'/>
<enum name='kCTFontTableMERG' value64='1296388679'/>
<enum name='kCTFontTableMVAR' value64='1297498450'/>
<enum name='kCTFontTableMaxp' value64='1835104368'/>
<enum name='kCTFontTableMeta' value64='1835365473'/>
<enum name='kCTFontTableMort' value64='1836020340'/>
<enum name='kCTFontTableMorx' value64='1836020344'/>
<enum name='kCTFontTableName' value64='1851878757'/>
<enum name='kCTFontTableOS2' value64='1330851634'/>
<enum name='kCTFontTableOpbd' value64='1869636196'/>
<enum name='kCTFontTableOptionExcludeSynthetic' value64='1'/>
<enum name='kCTFontTableOptionNoOptions' value64='0'/>
<enum name='kCTFontTablePCLT' value64='1346587732'/>
<enum name='kCTFontTablePost' value64='1886352244'/>
<enum name='kCTFontTablePrep' value64='1886545264'/>
<enum name='kCTFontTableProp' value64='1886547824'/>
<enum name='kCTFontTableSTAT' value64='1398030676'/>
<enum name='kCTFontTableSVG' value64='1398163232'/>
<enum name='kCTFontTableSbit' value64='1935829364'/>
<enum name='kCTFontTableSbix' value64='1935829368'/>
<enum name='kCTFontTableTrak' value64='1953653099'/>
<enum name='kCTFontTableVDMX' value64='1447316824'/>
<enum name='kCTFontTableVORG' value64='1448038983'/>
<enum name='kCTFontTableVVAR' value64='1448493394'/>
<enum name='kCTFontTableVhea' value64='1986553185'/>
<enum name='kCTFontTableVmtx' value64='1986884728'/>
<enum name='kCTFontTableXref' value64='2020762982'/>
<enum name='kCTFontTableZapf' value64='1516335206'/>
<enum name='kCTFontToolTipFontType' value64='25'/>
<enum name='kCTFontToolbarFontType' value64='21'/>
<enum name='kCTFontTraitBold' value64='2'/>
<enum name='kCTFontTraitClassMask' value64='4026531840'/>
<enum name='kCTFontTraitColorGlyphs' value64='8192'/>
<enum name='kCTFontTraitComposite' value64='16384'/>
<enum name='kCTFontTraitCondensed' value64='64'/>
<enum name='kCTFontTraitExpanded' value64='32'/>
<enum name='kCTFontTraitItalic' value64='1'/>
<enum name='kCTFontTraitMonoSpace' value64='1024'/>
<enum name='kCTFontTraitUIOptimized' value64='4096'/>
<enum name='kCTFontTraitVertical' value64='2048'/>
<enum name='kCTFontTransitionalSerifsClass' value64='536870912'/>
<enum name='kCTFontUIFontAlertHeader' value64='18'/>
<enum name='kCTFontUIFontApplication' value64='9'/>
<enum name='kCTFontUIFontControlContent' value64='26'/>
<enum name='kCTFontUIFontEmphasizedSystem' value64='3'/>
<enum name='kCTFontUIFontEmphasizedSystemDetail' value64='20'/>
<enum name='kCTFontUIFontLabel' value64='10'/>
<enum name='kCTFontUIFontMenuItem' value64='12'/>
<enum name='kCTFontUIFontMenuItemCmdKey' value64='14'/>
<enum name='kCTFontUIFontMenuItemMark' value64='13'/>
<enum name='kCTFontUIFontMenuTitle' value64='11'/>
<enum name='kCTFontUIFontMessage' value64='23'/>
<enum name='kCTFontUIFontMiniEmphasizedSystem' value64='7'/>
<enum name='kCTFontUIFontMiniSystem' value64='6'/>
<enum name='kCTFontUIFontNone' value64='4294967295'/>
<enum name='kCTFontUIFontPalette' value64='24'/>
<enum name='kCTFontUIFontPushButton' value64='16'/>
<enum name='kCTFontUIFontSmallEmphasizedSystem' value64='5'/>
<enum name='kCTFontUIFontSmallSystem' value64='4'/>
<enum name='kCTFontUIFontSmallToolbar' value64='22'/>
<enum name='kCTFontUIFontSystem' value64='2'/>
<enum name='kCTFontUIFontSystemDetail' value64='19'/>
<enum name='kCTFontUIFontToolTip' value64='25'/>
<enum name='kCTFontUIFontToolbar' value64='21'/>
<enum name='kCTFontUIFontUser' value64='0'/>
<enum name='kCTFontUIFontUserFixedPitch' value64='1'/>
<enum name='kCTFontUIFontUtilityWindowTitle' value64='17'/>
<enum name='kCTFontUIFontViews' value64='8'/>
<enum name='kCTFontUIFontWindowTitle' value64='15'/>
<enum name='kCTFontUIOptimizedTrait' value64='4096'/>
<enum name='kCTFontUnknownClass' value64='0'/>
<enum name='kCTFontUserFixedPitchFontType' value64='1'/>
<enum name='kCTFontUserFontType' value64='0'/>
<enum name='kCTFontUtilityWindowTitleFontType' value64='17'/>
<enum name='kCTFontVerticalOrientation' value64='2'/>
<enum name='kCTFontVerticalTrait' value64='2048'/>
<enum name='kCTFontViewsFontType' value64='8'/>
<enum name='kCTFontWindowTitleFontType' value64='15'/>
<enum name='kCTFramePathFillEvenOdd' value64='0'/>
<enum name='kCTFramePathFillWindingNumber' value64='1'/>
<enum name='kCTFrameProgressionLeftToRight' value64='2'/>
<enum name='kCTFrameProgressionRightToLeft' value64='1'/>
<enum name='kCTFrameProgressionTopToBottom' value64='0'/>
<enum name='kCTIdentityMappingCharacterCollection' value64='0'/>
<enum name='kCTJustifiedTextAlignment' value64='3'/>
<enum name='kCTLeftTextAlignment' value64='0'/>
<enum name='kCTLineBoundsExcludeTypographicLeading' value64='1'/>
<enum name='kCTLineBoundsExcludeTypographicShifts' value64='2'/>
<enum name='kCTLineBoundsIncludeLanguageExtents' value64='32'/>
<enum name='kCTLineBoundsUseGlyphPathBounds' value64='8'/>
<enum name='kCTLineBoundsUseHangingPunctuation' value64='4'/>
<enum name='kCTLineBoundsUseOpticalBounds' value64='16'/>
<enum name='kCTLineBreakByCharWrapping' value64='1'/>
<enum name='kCTLineBreakByClipping' value64='2'/>
<enum name='kCTLineBreakByTruncatingHead' value64='3'/>
<enum name='kCTLineBreakByTruncatingMiddle' value64='5'/>
<enum name='kCTLineBreakByTruncatingTail' value64='4'/>
<enum name='kCTLineBreakByWordWrapping' value64='0'/>
<enum name='kCTLineTruncationEnd' value64='1'/>
<enum name='kCTLineTruncationMiddle' value64='2'/>
<enum name='kCTLineTruncationStart' value64='0'/>
<enum name='kCTNaturalTextAlignment' value64='4'/>
<enum name='kCTParagraphStyleSpecifierAlignment' value64='0'/>
<enum name='kCTParagraphStyleSpecifierBaseWritingDirection' value64='13'/>
<enum name='kCTParagraphStyleSpecifierCount' value64='18'/>
<enum name='kCTParagraphStyleSpecifierDefaultTabInterval' value64='5'/>
<enum name='kCTParagraphStyleSpecifierFirstLineHeadIndent' value64='1'/>
<enum name='kCTParagraphStyleSpecifierHeadIndent' value64='2'/>
<enum name='kCTParagraphStyleSpecifierLineBoundsOptions' value64='17'/>
<enum name='kCTParagraphStyleSpecifierLineBreakMode' value64='6'/>
<enum name='kCTParagraphStyleSpecifierLineHeightMultiple' value64='7'/>
<enum name='kCTParagraphStyleSpecifierLineSpacing' value64='10'/>
<enum name='kCTParagraphStyleSpecifierLineSpacingAdjustment' value64='16'/>
<enum name='kCTParagraphStyleSpecifierMaximumLineHeight' value64='8'/>
<enum name='kCTParagraphStyleSpecifierMaximumLineSpacing' value64='14'/>
<enum name='kCTParagraphStyleSpecifierMinimumLineHeight' value64='9'/>
<enum name='kCTParagraphStyleSpecifierMinimumLineSpacing' value64='15'/>
<enum name='kCTParagraphStyleSpecifierParagraphSpacing' value64='11'/>
<enum name='kCTParagraphStyleSpecifierParagraphSpacingBefore' value64='12'/>
<enum name='kCTParagraphStyleSpecifierTabStops' value64='4'/>
<enum name='kCTParagraphStyleSpecifierTailIndent' value64='3'/>
<enum name='kCTRightTextAlignment' value64='1'/>
<enum name='kCTRubyAlignmentAuto' value64='0'/>
<enum name='kCTRubyAlignmentCenter' value64='2'/>
<enum name='kCTRubyAlignmentDistributeLetter' value64='4'/>
<enum name='kCTRubyAlignmentDistributeSpace' value64='5'/>
<enum name='kCTRubyAlignmentEnd' value64='3'/>
<enum name='kCTRubyAlignmentInvalid' value64='255'/>
<enum name='kCTRubyAlignmentLineEdge' value64='6'/>
<enum name='kCTRubyAlignmentStart' value64='1'/>
<enum name='kCTRubyOverhangAuto' value64='0'/>
<enum name='kCTRubyOverhangEnd' value64='2'/>
<enum name='kCTRubyOverhangInvalid' value64='255'/>
<enum name='kCTRubyOverhangNone' value64='3'/>
<enum name='kCTRubyOverhangStart' value64='1'/>
<enum name='kCTRubyPositionAfter' value64='1'/>
<enum name='kCTRubyPositionBefore' value64='0'/>
<enum name='kCTRubyPositionCount' value64='4'/>
<enum name='kCTRubyPositionInline' value64='3'/>
<enum name='kCTRubyPositionInterCharacter' value64='2'/>
<enum name='kCTRunDelegateCurrentVersion' value64='1'/>
<enum name='kCTRunDelegateVersion1' value64='1'/>
<enum name='kCTRunStatusHasNonIdentityMatrix' value64='4'/>
<enum name='kCTRunStatusNoStatus' value64='0'/>
<enum name='kCTRunStatusNonMonotonic' value64='2'/>
<enum name='kCTRunStatusRightToLeft' value64='1'/>
<enum name='kCTTextAlignmentCenter' value64='2'/>
<enum name='kCTTextAlignmentJustified' value64='3'/>
<enum name='kCTTextAlignmentLeft' value64='0'/>
<enum name='kCTTextAlignmentNatural' value64='4'/>
<enum name='kCTTextAlignmentRight' value64='1'/>
<enum name='kCTUnderlinePatternDash' value64='512'/>
<enum name='kCTUnderlinePatternDashDot' value64='768'/>
<enum name='kCTUnderlinePatternDashDotDot' value64='1024'/>
<enum name='kCTUnderlinePatternDot' value64='256'/>
<enum name='kCTUnderlinePatternSolid' value64='0'/>
<enum name='kCTUnderlineStyleDouble' value64='9'/>
<enum name='kCTUnderlineStyleNone' value64='0'/>
<enum name='kCTUnderlineStyleSingle' value64='1'/>
<enum name='kCTUnderlineStyleThick' value64='2'/>
<enum name='kCTVersionNumber10_10' value64='458752'/>
<enum name='kCTVersionNumber10_11' value64='524288'/>
<enum name='kCTVersionNumber10_12' value64='589824'/>
<enum name='kCTVersionNumber10_13' value64='655360'/>
<enum name='kCTVersionNumber10_14' value64='720896'/>
<enum name='kCTVersionNumber10_15' value64='786432'/>
<enum name='kCTVersionNumber10_5' value64='131072'/>
<enum name='kCTVersionNumber10_5_2' value64='131073'/>
<enum name='kCTVersionNumber10_5_3' value64='131074'/>
<enum name='kCTVersionNumber10_5_5' value64='131075'/>
<enum name='kCTVersionNumber10_6' value64='196608'/>
<enum name='kCTVersionNumber10_7' value64='262144'/>
<enum name='kCTVersionNumber10_8' value64='327680'/>
<enum name='kCTVersionNumber10_9' value64='393216'/>
<enum name='kCTVersionNumber11_0' value64='851968'/>
<enum name='kCTWritingDirectionEmbedding' value64='0'/>
<enum name='kCTWritingDirectionLeftToRight' value64='0'/>
<enum name='kCTWritingDirectionNatural' value64='-1'/>
<enum name='kCTWritingDirectionOverride' value64='2'/>
<enum name='kCTWritingDirectionRightToLeft' value64='1'/>
<enum name='kCanonicalCompositionOffSelector' value64='1'/>
<enum name='kCanonicalCompositionOnSelector' value64='0'/>
<enum name='kCaseSensitiveLayoutOffSelector' value64='1'/>
<enum name='kCaseSensitiveLayoutOnSelector' value64='0'/>
<enum name='kCaseSensitiveLayoutType' value64='33'/>
<enum name='kCaseSensitiveSpacingOffSelector' value64='3'/>
<enum name='kCaseSensitiveSpacingOnSelector' value64='2'/>
<enum name='kCharacterAlternativesType' value64='17'/>
<enum name='kCharacterShapeType' value64='20'/>
<enum name='kCircleAnnotationSelector' value64='3'/>
<enum name='kCommonLigaturesOffSelector' value64='3'/>
<enum name='kCommonLigaturesOnSelector' value64='2'/>
<enum name='kCompatibilityCompositionOffSelector' value64='3'/>
<enum name='kCompatibilityCompositionOnSelector' value64='2'/>
<enum name='kContextualAlternatesOffSelector' value64='1'/>
<enum name='kContextualAlternatesOnSelector' value64='0'/>
<enum name='kContextualAlternatesType' value64='36'/>
<enum name='kContextualLigaturesOffSelector' value64='19'/>
<enum name='kContextualLigaturesOnSelector' value64='18'/>
<enum name='kContextualSwashAlternatesOffSelector' value64='5'/>
<enum name='kContextualSwashAlternatesOnSelector' value64='4'/>
<enum name='kCursiveConnectionType' value64='2'/>
<enum name='kCursiveSelector' value64='2'/>
<enum name='kDecomposeDiacriticsSelector' value64='2'/>
<enum name='kDecorativeBordersSelector' value64='4'/>
<enum name='kDefaultCJKRomanSelector' value64='2'/>
<enum name='kDefaultLowerCaseSelector' value64='0'/>
<enum name='kDefaultUpperCaseSelector' value64='0'/>
<enum name='kDesignComplexityType' value64='18'/>
<enum name='kDesignLevel1Selector' value64='0'/>
<enum name='kDesignLevel2Selector' value64='1'/>
<enum name='kDesignLevel3Selector' value64='2'/>
<enum name='kDesignLevel4Selector' value64='3'/>
<enum name='kDesignLevel5Selector' value64='4'/>
<enum name='kDiacriticsType' value64='9'/>
<enum name='kDiagonalFractionsSelector' value64='2'/>
<enum name='kDiamondAnnotationSelector' value64='8'/>
<enum name='kDingbatsSelector' value64='1'/>
<enum name='kDiphthongLigaturesOffSelector' value64='11'/>
<enum name='kDiphthongLigaturesOnSelector' value64='10'/>
<enum name='kDisplayTextSelector' value64='1'/>
<enum name='kEngravedTextSelector' value64='2'/>
<enum name='kExpertCharactersSelector' value64='10'/>
<enum name='kExponentsOffSelector' value64='9'/>
<enum name='kExponentsOnSelector' value64='8'/>
<enum name='kFleuronsSelector' value64='3'/>
<enum name='kFontAlbanianLanguage' value64='36'/>
<enum name='kFontAmharicLanguage' value64='85'/>
<enum name='kFontAmharicScript' value64='28'/>
<enum name='kFontArabicLanguage' value64='12'/>
<enum name='kFontArabicScript' value64='4'/>
<enum name='kFontArmenianLanguage' value64='51'/>
<enum name='kFontArmenianScript' value64='24'/>
<enum name='kFontAssameseLanguage' value64='68'/>
<enum name='kFontAymaraLanguage' value64='134'/>
<enum name='kFontAzerbaijanArLanguage' value64='50'/>
<enum name='kFontAzerbaijaniLanguage' value64='49'/>
<enum name='kFontBasqueLanguage' value64='129'/>
<enum name='kFontBengaliLanguage' value64='67'/>
<enum name='kFontBengaliScript' value64='13'/>
<enum name='kFontBulgarianLanguage' value64='44'/>
<enum name='kFontBurmeseLanguage' value64='77'/>
<enum name='kFontBurmeseScript' value64='19'/>
<enum name='kFontByelorussianLanguage' value64='46'/>
<enum name='kFontCatalanLanguage' value64='130'/>
<enum name='kFontChewaLanguage' value64='92'/>
<enum name='kFontChineseScript' value64='2'/>
<enum name='kFontCopyrightName' value64='0'/>
<enum name='kFontCroatianLanguage' value64='18'/>
<enum name='kFontCustom16BitScript' value64='2'/>
<enum name='kFontCustom816BitScript' value64='1'/>
<enum name='kFontCustom8BitScript' value64='0'/>
<enum name='kFontCustomPlatform' value64='4'/>
<enum name='kFontCyrillicScript' value64='7'/>
<enum name='kFontCzechLanguage' value64='38'/>
<enum name='kFontDanishLanguage' value64='7'/>
<enum name='kFontDescriptionName' value64='10'/>
<enum name='kFontDesignerName' value64='9'/>
<enum name='kFontDesignerURLName' value64='12'/>
<enum name='kFontDevanagariScript' value64='9'/>
<enum name='kFontDutchLanguage' value64='4'/>
<enum name='kFontDzongkhaLanguage' value64='137'/>
<enum name='kFontEastEuropeanRomanScript' value64='29'/>
<enum name='kFontEnglishLanguage' value64='0'/>
<enum name='kFontEsperantoLanguage' value64='94'/>
<enum name='kFontEstonianLanguage' value64='27'/>
<enum name='kFontEthiopicScript' value64='28'/>
<enum name='kFontExtendedArabicScript' value64='31'/>
<enum name='kFontFaeroeseLanguage' value64='30'/>
<enum name='kFontFamilyName' value64='1'/>
<enum name='kFontFarsiLanguage' value64='31'/>
<enum name='kFontFinnishLanguage' value64='13'/>
<enum name='kFontFlemishLanguage' value64='34'/>
<enum name='kFontFrenchLanguage' value64='1'/>
<enum name='kFontFullName' value64='4'/>
<enum name='kFontGallaLanguage' value64='87'/>
<enum name='kFontGeezScript' value64='28'/>
<enum name='kFontGeorgianLanguage' value64='52'/>
<enum name='kFontGeorgianScript' value64='23'/>
<enum name='kFontGermanLanguage' value64='2'/>
<enum name='kFontGreekLanguage' value64='14'/>
<enum name='kFontGreekScript' value64='6'/>
<enum name='kFontGuaraniLanguage' value64='133'/>
<enum name='kFontGujaratiLanguage' value64='69'/>
<enum name='kFontGujaratiScript' value64='11'/>
<enum name='kFontGurmukhiScript' value64='10'/>
<enum name='kFontHebrewLanguage' value64='10'/>
<enum name='kFontHebrewScript' value64='5'/>
<enum name='kFontHindiLanguage' value64='21'/>
<enum name='kFontHungarianLanguage' value64='26'/>
<enum name='kFontISO10646_1993Semantics' value64='2'/>
<enum name='kFontIcelandicLanguage' value64='15'/>
<enum name='kFontIndonesianLanguage' value64='81'/>
<enum name='kFontIrishLanguage' value64='35'/>
<enum name='kFontItalianLanguage' value64='3'/>
<enum name='kFontJapaneseLanguage' value64='11'/>
<enum name='kFontJapaneseScript' value64='1'/>
<enum name='kFontJavaneseRomLanguage' value64='138'/>
<enum name='kFontKannadaLanguage' value64='73'/>
<enum name='kFontKannadaScript' value64='16'/>
<enum name='kFontKashmiriLanguage' value64='61'/>
<enum name='kFontKazakhLanguage' value64='48'/>
<enum name='kFontKhmerLanguage' value64='78'/>
<enum name='kFontKhmerScript' value64='20'/>
<enum name='kFontKirghizLanguage' value64='54'/>
<enum name='kFontKoreanLanguage' value64='23'/>
<enum name='kFontKoreanScript' value64='3'/>
<enum name='kFontKurdishLanguage' value64='60'/>
<enum name='kFontLaoLanguage' value64='79'/>
<enum name='kFontLaotianScript' value64='22'/>
<enum name='kFontLappishLanguage' value64='29'/>
<enum name='kFontLastReservedName' value64='255'/>
<enum name='kFontLatinLanguage' value64='131'/>
<enum name='kFontLatvianLanguage' value64='28'/>
<enum name='kFontLettishLanguage' value64='28'/>
<enum name='kFontLicenseDescriptionName' value64='13'/>
<enum name='kFontLicenseInfoURLName' value64='14'/>
<enum name='kFontLithuanianLanguage' value64='24'/>
<enum name='kFontMacCompatibleFullName' value64='18'/>
<enum name='kFontMacedonianLanguage' value64='43'/>
<enum name='kFontMacintoshPlatform' value64='1'/>
<enum name='kFontMalagasyLanguage' value64='93'/>
<enum name='kFontMalayArabicLanguage' value64='84'/>
<enum name='kFontMalayRomanLanguage' value64='83'/>
<enum name='kFontMalayalamLanguage' value64='72'/>
<enum name='kFontMalayalamScript' value64='17'/>
<enum name='kFontMalteseLanguage' value64='16'/>
<enum name='kFontManufacturerName' value64='8'/>
<enum name='kFontMarathiLanguage' value64='66'/>
<enum name='kFontMicrosoftPlatform' value64='3'/>
<enum name='kFontMicrosoftStandardScript' value64='1'/>
<enum name='kFontMicrosoftSymbolScript' value64='0'/>
<enum name='kFontMicrosoftUCS4Script' value64='10'/>
<enum name='kFontMoldavianLanguage' value64='53'/>
<enum name='kFontMongolianCyrLanguage' value64='58'/>
<enum name='kFontMongolianLanguage' value64='57'/>
<enum name='kFontMongolianScript' value64='27'/>
<enum name='kFontNepaliLanguage' value64='64'/>
<enum name='kFontNoLanguageCode' value64='4294967295'/>
<enum name='kFontNoNameCode' value64='4294967295'/>
<enum name='kFontNoPlatformCode' value64='4294967295'/>
<enum name='kFontNoScriptCode' value64='4294967295'/>
<enum name='kFontNorwegianLanguage' value64='9'/>
<enum name='kFontOriyaLanguage' value64='71'/>
<enum name='kFontOriyaScript' value64='12'/>
<enum name='kFontOromoLanguage' value64='87'/>
<enum name='kFontPashtoLanguage' value64='59'/>
<enum name='kFontPersianLanguage' value64='31'/>
<enum name='kFontPolishLanguage' value64='25'/>
<enum name='kFontPortugueseLanguage' value64='8'/>
<enum name='kFontPostScriptCIDName' value64='20'/>
<enum name='kFontPostscriptName' value64='6'/>
<enum name='kFontPreferredFamilyName' value64='16'/>
<enum name='kFontPreferredSubfamilyName' value64='17'/>
<enum name='kFontPunjabiLanguage' value64='70'/>
<enum name='kFontQuechuaLanguage' value64='132'/>
<enum name='kFontRSymbolScript' value64='8'/>
<enum name='kFontReservedPlatform' value64='2'/>
<enum name='kFontRomanScript' value64='0'/>
<enum name='kFontRomanianLanguage' value64='37'/>
<enum name='kFontRuandaLanguage' value64='90'/>
<enum name='kFontRundiLanguage' value64='91'/>
<enum name='kFontRussian' value64='7'/>
<enum name='kFontRussianLanguage' value64='32'/>
<enum name='kFontSaamiskLanguage' value64='29'/>
<enum name='kFontSampleTextName' value64='19'/>
<enum name='kFontSanskritLanguage' value64='65'/>
<enum name='kFontSerbianLanguage' value64='42'/>
<enum name='kFontSimpChineseLanguage' value64='33'/>
<enum name='kFontSimpleChineseScript' value64='25'/>
<enum name='kFontSindhiLanguage' value64='62'/>
<enum name='kFontSindhiScript' value64='31'/>
<enum name='kFontSinhaleseLanguage' value64='76'/>
<enum name='kFontSinhaleseScript' value64='18'/>
<enum name='kFontSlavicScript' value64='29'/>
<enum name='kFontSlovakLanguage' value64='39'/>
<enum name='kFontSlovenianLanguage' value64='40'/>
<enum name='kFontSomaliLanguage' value64='88'/>
<enum name='kFontSpanishLanguage' value64='6'/>
<enum name='kFontStyleName' value64='2'/>
<enum name='kFontSundaneseRomLanguage' value64='139'/>
<enum name='kFontSwahiliLanguage' value64='89'/>
<enum name='kFontSwedishLanguage' value64='5'/>
<enum name='kFontTagalogLanguage' value64='82'/>
<enum name='kFontTajikiLanguage' value64='55'/>
<enum name='kFontTamilLanguage' value64='74'/>
<enum name='kFontTamilScript' value64='14'/>
<enum name='kFontTatarLanguage' value64='135'/>
<enum name='kFontTeluguLanguage' value64='75'/>
<enum name='kFontTeluguScript' value64='15'/>
<enum name='kFontThaiLanguage' value64='22'/>
<enum name='kFontThaiScript' value64='21'/>
<enum name='kFontTibetanLanguage' value64='63'/>
<enum name='kFontTibetanScript' value64='26'/>
<enum name='kFontTigrinyaLanguage' value64='86'/>
<enum name='kFontTradChineseLanguage' value64='19'/>
<enum name='kFontTrademarkName' value64='7'/>
<enum name='kFontTraditionalChineseScript' value64='2'/>
<enum name='kFontTurkishLanguage' value64='17'/>
<enum name='kFontTurkmenLanguage' value64='56'/>
<enum name='kFontUighurLanguage' value64='136'/>
<enum name='kFontUkrainianLanguage' value64='45'/>
<enum name='kFontUnicodeDefaultSemantics' value64='0'/>
<enum name='kFontUnicodePlatform' value64='0'/>
<enum name='kFontUnicodeV1_1Semantics' value64='1'/>
<enum name='kFontUnicodeV2_0BMPOnlySemantics' value64='3'/>
<enum name='kFontUnicodeV2_0FullCoverageSemantics' value64='4'/>
<enum name='kFontUnicodeV4_0VariationSequenceSemantics' value64='5'/>
<enum name='kFontUnicode_FullRepertoire' value64='6'/>
<enum name='kFontUninterpretedScript' value64='32'/>
<enum name='kFontUniqueName' value64='3'/>
<enum name='kFontUrduLanguage' value64='20'/>
<enum name='kFontUzbekLanguage' value64='47'/>
<enum name='kFontVendorURLName' value64='11'/>
<enum name='kFontVersionName' value64='5'/>
<enum name='kFontVietnameseLanguage' value64='80'/>
<enum name='kFontVietnameseScript' value64='30'/>
<enum name='kFontWelshLanguage' value64='128'/>
<enum name='kFontYiddishLanguage' value64='41'/>
<enum name='kFormInterrobangOffSelector' value64='7'/>
<enum name='kFormInterrobangOnSelector' value64='6'/>
<enum name='kFractionsType' value64='11'/>
<enum name='kFullWidthCJKRomanSelector' value64='3'/>
<enum name='kFullWidthIdeographsSelector' value64='0'/>
<enum name='kFullWidthKanaSelector' value64='0'/>
<enum name='kHalfWidthCJKRomanSelector' value64='0'/>
<enum name='kHalfWidthIdeographsSelector' value64='2'/>
<enum name='kHalfWidthTextSelector' value64='2'/>
<enum name='kHanjaToHangulAltOneSelector' value64='7'/>
<enum name='kHanjaToHangulAltThreeSelector' value64='9'/>
<enum name='kHanjaToHangulAltTwoSelector' value64='8'/>
<enum name='kHanjaToHangulSelector' value64='1'/>
<enum name='kHideDiacriticsSelector' value64='1'/>
<enum name='kHiraganaToKatakanaSelector' value64='2'/>
<enum name='kHistoricalLigaturesOffSelector' value64='21'/>
<enum name='kHistoricalLigaturesOnSelector' value64='20'/>
<enum name='kHojoCharactersSelector' value64='12'/>
<enum name='kHyphenToEnDashOffSelector' value64='3'/>
<enum name='kHyphenToEnDashOnSelector' value64='2'/>
<enum name='kHyphenToMinusOffSelector' value64='1'/>
<enum name='kHyphenToMinusOnSelector' value64='0'/>
<enum name='kHyphensToEmDashOffSelector' value64='1'/>
<enum name='kHyphensToEmDashOnSelector' value64='0'/>
<enum name='kIdeographicAltFiveSelector' value64='5'/>
<enum name='kIdeographicAltFourSelector' value64='4'/>
<enum name='kIdeographicAltOneSelector' value64='1'/>
<enum name='kIdeographicAltThreeSelector' value64='3'/>
<enum name='kIdeographicAltTwoSelector' value64='2'/>
<enum name='kIdeographicAlternativesType' value64='30'/>
<enum name='kIdeographicSpacingType' value64='26'/>
<enum name='kIlluminatedCapsSelector' value64='3'/>
<enum name='kInequalityLigaturesOffSelector' value64='7'/>
<enum name='kInequalityLigaturesOnSelector' value64='6'/>
<enum name='kInferiorsSelector' value64='2'/>
<enum name='kInitialCapsAndSmallCapsSelector' value64='5'/>
<enum name='kInitialCapsSelector' value64='4'/>
<enum name='kInternationalSymbolsSelector' value64='5'/>
<enum name='kInvertedBoxAnnotationSelector' value64='9'/>
<enum name='kInvertedCircleAnnotationSelector' value64='4'/>
<enum name='kInvertedRoundedBoxAnnotationSelector' value64='10'/>
<enum name='kItalicCJKRomanType' value64='32'/>
<enum name='kJIS1978CharactersSelector' value64='2'/>
<enum name='kJIS1983CharactersSelector' value64='3'/>
<enum name='kJIS1990CharactersSelector' value64='4'/>
<enum name='kJIS2004CharactersSelector' value64='11'/>
<enum name='kJUSTCurrentVersion' value64='65536'/>
<enum name='kJUSTKashidaPriority' value64='0'/>
<enum name='kJUSTLetterPriority' value64='2'/>
<enum name='kJUSTNullPriority' value64='3'/>
<enum name='kJUSTOverrideLimits' value64='16384'/>
<enum name='kJUSTOverridePriority' value64='32768'/>
<enum name='kJUSTOverrideUnlimited' value64='8192'/>
<enum name='kJUSTPriorityCount' value64='4'/>
<enum name='kJUSTPriorityMask' value64='3'/>
<enum name='kJUSTSpacePriority' value64='1'/>
<enum name='kJUSTStandardFormat' value64='0'/>
<enum name='kJUSTTag' value64='1786082164'/>
<enum name='kJUSTUnlimited' value64='4096'/>
<enum name='kJUSTnoGlyphcode' value64='65535'/>
<enum name='kJUSTpcConditionalAddAction' value64='2'/>
<enum name='kJUSTpcDecompositionAction' value64='0'/>
<enum name='kJUSTpcDuctilityAction' value64='4'/>
<enum name='kJUSTpcGlyphRepeatAddAction' value64='5'/>
<enum name='kJUSTpcGlyphStretchAction' value64='3'/>
<enum name='kJUSTpcUnconditionalAddAction' value64='1'/>
<enum name='kKERNCrossStream' value64='16384'/>
<enum name='kKERNCrossStreamResetNote' value64='2'/>
<enum name='kKERNCurrentVersion' value64='65536'/>
<enum name='kKERNFormatMask' value64='255'/>
<enum name='kKERNIndexArray' value64='3'/>
<enum name='kKERNLineEndKerning' value64='2'/>
<enum name='kKERNLineStart' value64='1'/>
<enum name='kKERNNoCrossKerning' value64='4'/>
<enum name='kKERNNoStakeNote' value64='1'/>
<enum name='kKERNNotApplied' value64='1'/>
<enum name='kKERNNotesRequested' value64='8'/>
<enum name='kKERNOrderedList' value64='0'/>
<enum name='kKERNResetCrossStream' value64='32768'/>
<enum name='kKERNSimpleArray' value64='2'/>
<enum name='kKERNStateTable' value64='1'/>
<enum name='kKERNTag' value64='1801810542'/>
<enum name='kKERNUnusedBits' value64='7936'/>
<enum name='kKERNVariation' value64='8192'/>
<enum name='kKERNVertical' value64='32768'/>
<enum name='kKERXActionOffsetMask' value64='16777215'/>
<enum name='kKERXActionTypeAnchorPoints' value64='1073741824'/>
<enum name='kKERXActionTypeControlPoints' value64='0'/>
<enum name='kKERXActionTypeCoordinates' value64='2147483648'/>
<enum name='kKERXActionTypeMask' value64='3221225472'/>
<enum name='kKERXControlPoint' value64='4'/>
<enum name='kKERXCrossStream' value64='1073741824'/>
<enum name='kKERXCrossStreamResetNote' value64='2'/>
<enum name='kKERXCurrentVersion' value64='131072'/>
<enum name='kKERXDescending' value64='268435456'/>
<enum name='kKERXFormatMask' value64='255'/>
<enum name='kKERXIndexArray' value64='6'/>
<enum name='kKERXLineEndKerning' value64='2'/>
<enum name='kKERXLineStart' value64='1'/>
<enum name='kKERXNoCrossKerning' value64='4'/>
<enum name='kKERXNoStakeNote' value64='1'/>
<enum name='kKERXNotApplied' value64='1'/>
<enum name='kKERXNotesRequested' value64='8'/>
<enum name='kKERXOrderedList' value64='0'/>
<enum name='kKERXResetCrossStream' value64='32768'/>
<enum name='kKERXSimpleArray' value64='2'/>
<enum name='kKERXStateTable' value64='1'/>
<enum name='kKERXTag' value64='1801810552'/>
<enum name='kKERXUnusedBits' value64='268435200'/>
<enum name='kKERXUnusedFlags' value64='1056964608'/>
<enum name='kKERXValuesAreLong' value64='1'/>
<enum name='kKERXVariation' value64='536870912'/>
<enum name='kKERXVertical' value64='-2147483648'/>
<enum name='kKanaSpacingType' value64='25'/>
<enum name='kKanaToRomanizationSelector' value64='4'/>
<enum name='kKatakanaToHiraganaSelector' value64='3'/>
<enum name='kLCARCtlPointFormat' value64='1'/>
<enum name='kLCARCurrentVersion' value64='65536'/>
<enum name='kLCARLinearFormat' value64='0'/>
<enum name='kLCARTag' value64='1818452338'/>
<enum name='kLTAGCurrentVersion' value64='1'/>
<enum name='kLanguageTagType' value64='39'/>
<enum name='kLastFeatureType' value64='-1'/>
<enum name='kLetterCaseType' value64='3'/>
<enum name='kLigaturesType' value64='1'/>
<enum name='kLineFinalSwashesOffSelector' value64='7'/>
<enum name='kLineFinalSwashesOnSelector' value64='6'/>
<enum name='kLineInitialSwashesOffSelector' value64='5'/>
<enum name='kLineInitialSwashesOnSelector' value64='4'/>
<enum name='kLinguisticRearrangementOffSelector' value64='1'/>
<enum name='kLinguisticRearrangementOnSelector' value64='0'/>
<enum name='kLinguisticRearrangementType' value64='5'/>
<enum name='kLogosOffSelector' value64='7'/>
<enum name='kLogosOnSelector' value64='6'/>
<enum name='kLowerCaseNumbersSelector' value64='0'/>
<enum name='kLowerCasePetiteCapsSelector' value64='2'/>
<enum name='kLowerCaseSmallCapsSelector' value64='1'/>
<enum name='kLowerCaseType' value64='37'/>
<enum name='kMORTContextualType' value64='1'/>
<enum name='kMORTCoverDescending' value64='16384'/>
<enum name='kMORTCoverIgnoreVertical' value64='8192'/>
<enum name='kMORTCoverTypeMask' value64='15'/>
<enum name='kMORTCoverVertical' value64='32768'/>
<enum name='kMORTCurrInsertBefore' value64='2048'/>
<enum name='kMORTCurrInsertCountMask' value64='992'/>
<enum name='kMORTCurrInsertCountShift' value64='5'/>
<enum name='kMORTCurrInsertKashidaLike' value64='8192'/>
<enum name='kMORTCurrJustTableCountMask' value64='127'/>
<enum name='kMORTCurrJustTableCountShift' value64='0'/>
<enum name='kMORTCurrentVersion' value64='65536'/>
<enum name='kMORTDoInsertionsBefore' value64='128'/>
<enum name='kMORTInsertionType' value64='5'/>
<enum name='kMORTInsertionsCountMask' value64='63'/>
<enum name='kMORTIsSplitVowelPiece' value64='64'/>
<enum name='kMORTLigFormOffsetMask' value64='1073741823'/>
<enum name='kMORTLigFormOffsetShift' value64='2'/>
<enum name='kMORTLigLastAction' value64='-2147483648'/>
<enum name='kMORTLigStoreLigature' value64='1073741824'/>
<enum name='kMORTLigatureType' value64='2'/>
<enum name='kMORTMarkInsertBefore' value64='1024'/>
<enum name='kMORTMarkInsertCountMask' value64='31'/>
<enum name='kMORTMarkInsertCountShift' value64='0'/>
<enum name='kMORTMarkInsertKashidaLike' value64='4096'/>
<enum name='kMORTMarkJustTableCountMask' value64='16256'/>
<enum name='kMORTMarkJustTableCountShift' value64='7'/>
<enum name='kMORTRearrangementType' value64='0'/>
<enum name='kMORTSwashType' value64='4'/>
<enum name='kMORTTag' value64='1836020340'/>
<enum name='kMORTraCDx' value64='6'/>
<enum name='kMORTraCDxA' value64='8'/>
<enum name='kMORTraCDxAB' value64='12'/>
<enum name='kMORTraCDxBA' value64='13'/>
<enum name='kMORTraDCx' value64='7'/>
<enum name='kMORTraDCxA' value64='9'/>
<enum name='kMORTraDCxAB' value64='14'/>
<enum name='kMORTraDCxBA' value64='15'/>
<enum name='kMORTraDx' value64='2'/>
<enum name='kMORTraDxA' value64='3'/>
<enum name='kMORTraDxAB' value64='10'/>
<enum name='kMORTraDxBA' value64='11'/>
<enum name='kMORTraNoAction' value64='0'/>
<enum name='kMORTraxA' value64='1'/>
<enum name='kMORTraxAB' value64='4'/>
<enum name='kMORTraxBA' value64='5'/>
<enum name='kMORXCoverDescending' value64='1073741824'/>
<enum name='kMORXCoverIgnoreVertical' value64='536870912'/>
<enum name='kMORXCoverLogicalOrder' value64='268435456'/>
<enum name='kMORXCoverTypeMask' value64='255'/>
<enum name='kMORXCoverVertical' value64='-2147483648'/>
<enum name='kMORXCurrentVersion' value64='131072'/>
<enum name='kMORXTag' value64='1836020344'/>
<enum name='kMathSymbolsSelector' value64='6'/>
<enum name='kMathematicalExtrasType' value64='15'/>
<enum name='kMathematicalGreekOffSelector' value64='11'/>
<enum name='kMathematicalGreekOnSelector' value64='10'/>
<enum name='kMonospacedNumbersSelector' value64='0'/>
<enum name='kMonospacedTextSelector' value64='1'/>
<enum name='kNLCCharactersSelector' value64='13'/>
<enum name='kNoAlternatesSelector' value64='0'/>
<enum name='kNoAnnotationSelector' value64='0'/>
<enum name='kNoCJKItalicRomanSelector' value64='0'/>
<enum name='kNoCJKSymbolAlternativesSelector' value64='0'/>
<enum name='kNoFractionsSelector' value64='0'/>
<enum name='kNoIdeographicAlternativesSelector' value64='0'/>
<enum name='kNoOrnamentsSelector' value64='0'/>
<enum name='kNoRubyKanaSelector' value64='0'/>
<enum name='kNoStyleOptionsSelector' value64='0'/>
<enum name='kNoStylisticAlternatesSelector' value64='0'/>
<enum name='kNoTransliterationSelector' value64='0'/>
<enum name='kNonFinalSwashesOffSelector' value64='9'/>
<enum name='kNonFinalSwashesOnSelector' value64='8'/>
<enum name='kNormalPositionSelector' value64='0'/>
<enum name='kNumberCaseType' value64='21'/>
<enum name='kNumberSpacingType' value64='6'/>
<enum name='kOPBDControlPointFormat' value64='1'/>
<enum name='kOPBDCurrentVersion' value64='65536'/>
<enum name='kOPBDDistanceFormat' value64='0'/>
<enum name='kOPBDTag' value64='1869636196'/>
<enum name='kOrdinalsSelector' value64='3'/>
<enum name='kOrnamentSetsType' value64='16'/>
<enum name='kOverlappingCharactersType' value64='13'/>
<enum name='kPROPALDirectionClass' value64='2'/>
<enum name='kPROPANDirectionClass' value64='6'/>
<enum name='kPROPBNDirectionClass' value64='19'/>
<enum name='kPROPCSDirectionClass' value64='7'/>
<enum name='kPROPCanHangLTMask' value64='16384'/>
<enum name='kPROPCanHangRBMask' value64='8192'/>
<enum name='kPROPCurrentVersion' value64='196608'/>
<enum name='kPROPDirectionMask' value64='31'/>
<enum name='kPROPENDirectionClass' value64='3'/>
<enum name='kPROPESDirectionClass' value64='4'/>
<enum name='kPROPETDirectionClass' value64='5'/>
<enum name='kPROPIsFloaterMask' value64='32768'/>
<enum name='kPROPLDirectionClass' value64='0'/>
<enum name='kPROPLREDirectionClass' value64='13'/>
<enum name='kPROPLRODirectionClass' value64='14'/>
<enum name='kPROPNSMDirectionClass' value64='18'/>
<enum name='kPROPNumDirectionClasses' value64='20'/>
<enum name='kPROPONDirectionClass' value64='11'/>
<enum name='kPROPPDFDirectionClass' value64='17'/>
<enum name='kPROPPSDirectionClass' value64='8'/>
<enum name='kPROPPairOffsetMask' value64='3840'/>
<enum name='kPROPPairOffsetShift' value64='8'/>
<enum name='kPROPPairOffsetSign' value64='7'/>
<enum name='kPROPRDirectionClass' value64='1'/>
<enum name='kPROPRLEDirectionClass' value64='15'/>
<enum name='kPROPRLODirectionClass' value64='16'/>
<enum name='kPROPRightConnectMask' value64='128'/>
<enum name='kPROPSDirectionClass' value64='9'/>
<enum name='kPROPSENDirectionClass' value64='12'/>
<enum name='kPROPTag' value64='1886547824'/>
<enum name='kPROPUseRLPairMask' value64='4096'/>
<enum name='kPROPWSDirectionClass' value64='10'/>
<enum name='kPROPZeroReserved' value64='96'/>
<enum name='kParenthesisAnnotationSelector' value64='5'/>
<enum name='kPartiallyConnectedSelector' value64='1'/>
<enum name='kPeriodAnnotationSelector' value64='6'/>
<enum name='kPeriodsToEllipsisOffSelector' value64='11'/>
<enum name='kPeriodsToEllipsisOnSelector' value64='10'/>
<enum name='kPiCharactersSelector' value64='2'/>
<enum name='kPreventOverlapOffSelector' value64='1'/>
<enum name='kPreventOverlapOnSelector' value64='0'/>
<enum name='kProportionalCJKRomanSelector' value64='1'/>
<enum name='kProportionalIdeographsSelector' value64='1'/>
<enum name='kProportionalKanaSelector' value64='1'/>
<enum name='kProportionalNumbersSelector' value64='1'/>
<enum name='kProportionalTextSelector' value64='0'/>
<enum name='kQuarterWidthNumbersSelector' value64='3'/>
<enum name='kQuarterWidthTextSelector' value64='4'/>
<enum name='kRareLigaturesOffSelector' value64='5'/>
<enum name='kRareLigaturesOnSelector' value64='4'/>
<enum name='kRebusPicturesOffSelector' value64='9'/>
<enum name='kRebusPicturesOnSelector' value64='8'/>
<enum name='kRequiredLigaturesOffSelector' value64='1'/>
<enum name='kRequiredLigaturesOnSelector' value64='0'/>
<enum name='kRomanNumeralAnnotationSelector' value64='7'/>
<enum name='kRomanizationToHiraganaSelector' value64='5'/>
<enum name='kRomanizationToKatakanaSelector' value64='6'/>
<enum name='kRoundedBoxAnnotationSelector' value64='2'/>
<enum name='kRubyKanaOffSelector' value64='3'/>
<enum name='kRubyKanaOnSelector' value64='2'/>
<enum name='kRubyKanaSelector' value64='1'/>
<enum name='kRubyKanaType' value64='28'/>
<enum name='kSFNTLookupSegmentArray' value64='4'/>
<enum name='kSFNTLookupSegmentSingle' value64='2'/>
<enum name='kSFNTLookupSimpleArray' value64='0'/>
<enum name='kSFNTLookupSingleTable' value64='6'/>
<enum name='kSFNTLookupTrimmedArray' value64='8'/>
<enum name='kSFNTLookupVector' value64='10'/>
<enum name='kSTClassDeletedGlyph' value64='2'/>
<enum name='kSTClassEndOfLine' value64='3'/>
<enum name='kSTClassEndOfText' value64='0'/>
<enum name='kSTClassOutOfBounds' value64='1'/>
<enum name='kSTKCrossStreamReset' value64='8192'/>
<enum name='kSTLigActionMask' value64='16383'/>
<enum name='kSTMarkEnd' value64='8192'/>
<enum name='kSTNoAdvance' value64='16384'/>
<enum name='kSTRearrVerbMask' value64='15'/>
<enum name='kSTSetMark' value64='32768'/>
<enum name='kSTXHasLigAction' value64='8192'/>
<enum name='kScientificInferiorsSelector' value64='4'/>
<enum name='kShowDiacriticsSelector' value64='0'/>
<enum name='kSimplifiedCharactersSelector' value64='1'/>
<enum name='kSlashToDivideOffSelector' value64='5'/>
<enum name='kSlashToDivideOnSelector' value64='4'/>
<enum name='kSlashedZeroOffSelector' value64='5'/>
<enum name='kSlashedZeroOnSelector' value64='4'/>
<enum name='kSmallCapsSelector' value64='3'/>
<enum name='kSmartQuotesOffSelector' value64='9'/>
<enum name='kSmartQuotesOnSelector' value64='8'/>
<enum name='kSmartSwashType' value64='8'/>
<enum name='kSquaredLigaturesOffSelector' value64='13'/>
<enum name='kSquaredLigaturesOnSelector' value64='12'/>
<enum name='kStyleOptionsType' value64='19'/>
<enum name='kStylisticAltEightOffSelector' value64='17'/>
<enum name='kStylisticAltEightOnSelector' value64='16'/>
<enum name='kStylisticAltEighteenOffSelector' value64='37'/>
<enum name='kStylisticAltEighteenOnSelector' value64='36'/>
<enum name='kStylisticAltElevenOffSelector' value64='23'/>
<enum name='kStylisticAltElevenOnSelector' value64='22'/>
<enum name='kStylisticAltFifteenOffSelector' value64='31'/>
<enum name='kStylisticAltFifteenOnSelector' value64='30'/>
<enum name='kStylisticAltFiveOffSelector' value64='11'/>
<enum name='kStylisticAltFiveOnSelector' value64='10'/>
<enum name='kStylisticAltFourOffSelector' value64='9'/>
<enum name='kStylisticAltFourOnSelector' value64='8'/>
<enum name='kStylisticAltFourteenOffSelector' value64='29'/>
<enum name='kStylisticAltFourteenOnSelector' value64='28'/>
<enum name='kStylisticAltNineOffSelector' value64='19'/>
<enum name='kStylisticAltNineOnSelector' value64='18'/>
<enum name='kStylisticAltNineteenOffSelector' value64='39'/>
<enum name='kStylisticAltNineteenOnSelector' value64='38'/>
<enum name='kStylisticAltOneOffSelector' value64='3'/>
<enum name='kStylisticAltOneOnSelector' value64='2'/>
<enum name='kStylisticAltSevenOffSelector' value64='15'/>
<enum name='kStylisticAltSevenOnSelector' value64='14'/>
<enum name='kStylisticAltSeventeenOffSelector' value64='35'/>
<enum name='kStylisticAltSeventeenOnSelector' value64='34'/>
<enum name='kStylisticAltSixOffSelector' value64='13'/>
<enum name='kStylisticAltSixOnSelector' value64='12'/>
<enum name='kStylisticAltSixteenOffSelector' value64='33'/>
<enum name='kStylisticAltSixteenOnSelector' value64='32'/>
<enum name='kStylisticAltTenOffSelector' value64='21'/>
<enum name='kStylisticAltTenOnSelector' value64='20'/>
<enum name='kStylisticAltThirteenOffSelector' value64='27'/>
<enum name='kStylisticAltThirteenOnSelector' value64='26'/>
<enum name='kStylisticAltThreeOffSelector' value64='7'/>
<enum name='kStylisticAltThreeOnSelector' value64='6'/>
<enum name='kStylisticAltTwelveOffSelector' value64='25'/>
<enum name='kStylisticAltTwelveOnSelector' value64='24'/>
<enum name='kStylisticAltTwentyOffSelector' value64='41'/>
<enum name='kStylisticAltTwentyOnSelector' value64='40'/>
<enum name='kStylisticAltTwoOffSelector' value64='5'/>
<enum name='kStylisticAltTwoOnSelector' value64='4'/>
<enum name='kStylisticAlternativesType' value64='35'/>
<enum name='kSubstituteVerticalFormsOffSelector' value64='1'/>
<enum name='kSubstituteVerticalFormsOnSelector' value64='0'/>
<enum name='kSuperiorsSelector' value64='1'/>
<enum name='kSwashAlternatesOffSelector' value64='3'/>
<enum name='kSwashAlternatesOnSelector' value64='2'/>
<enum name='kSymbolLigaturesOffSelector' value64='17'/>
<enum name='kSymbolLigaturesOnSelector' value64='16'/>
<enum name='kTRAKCurrentVersion' value64='65536'/>
<enum name='kTRAKTag' value64='1953653099'/>
<enum name='kTRAKUniformFormat' value64='0'/>
<enum name='kTallCapsSelector' value64='5'/>
<enum name='kTextSpacingType' value64='22'/>
<enum name='kThirdWidthNumbersSelector' value64='2'/>
<enum name='kThirdWidthTextSelector' value64='3'/>
<enum name='kTitlingCapsSelector' value64='4'/>
<enum name='kTraditionalAltFiveSelector' value64='9'/>
<enum name='kTraditionalAltFourSelector' value64='8'/>
<enum name='kTraditionalAltOneSelector' value64='5'/>
<enum name='kTraditionalAltThreeSelector' value64='7'/>
<enum name='kTraditionalAltTwoSelector' value64='6'/>
<enum name='kTraditionalCharactersSelector' value64='0'/>
<enum name='kTraditionalNamesCharactersSelector' value64='14'/>
<enum name='kTranscodingCompositionOffSelector' value64='5'/>
<enum name='kTranscodingCompositionOnSelector' value64='4'/>
<enum name='kTransliterationType' value64='23'/>
<enum name='kTypographicExtrasType' value64='14'/>
<enum name='kUnconnectedSelector' value64='0'/>
<enum name='kUnicodeDecompositionType' value64='27'/>
<enum name='kUpperAndLowerCaseSelector' value64='0'/>
<enum name='kUpperCaseNumbersSelector' value64='1'/>
<enum name='kUpperCasePetiteCapsSelector' value64='2'/>
<enum name='kUpperCaseSmallCapsSelector' value64='1'/>
<enum name='kUpperCaseType' value64='38'/>
<enum name='kVerticalFractionsSelector' value64='1'/>
<enum name='kVerticalPositionType' value64='10'/>
<enum name='kVerticalSubstitutionType' value64='4'/>
<enum name='kWordFinalSwashesOffSelector' value64='3'/>
<enum name='kWordFinalSwashesOnSelector' value64='2'/>
<enum name='kWordInitialSwashesOffSelector' value64='1'/>
<enum name='kWordInitialSwashesOnSelector' value64='0'/>
<enum name='nameFontTableTag' value64='1851878757'/>
<enum name='nonGlyphID' value64='65535'/>
<enum name='os2FontTableTag' value64='1330851634'/>
<enum name='sizeof_sfntCMapEncoding' value64='8'/>
<enum name='sizeof_sfntCMapExtendedSubHeader' value64='12'/>
<enum name='sizeof_sfntCMapHeader' value64='4'/>
<enum name='sizeof_sfntCMapSubHeader' value64='6'/>
<enum name='sizeof_sfntDescriptorHeader' value64='8'/>
<enum name='sizeof_sfntDirectory' value64='12'/>
<enum name='sizeof_sfntInstance' value64='4'/>
<enum name='sizeof_sfntNameHeader' value64='6'/>
<enum name='sizeof_sfntNameRecord' value64='12'/>
<enum name='sizeof_sfntVariationAxis' value64='20'/>
<enum name='sizeof_sfntVariationHeader' value64='16'/>
<enum name='variationFontTableTag' value64='1719034226'/>
<function name='CTFontCollectionCopyExclusionDescriptors'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCollectionCopyFontAttribute'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attributeName' type64='^{__CFString=}'/>
<arg declared_type64='CTFontCollectionCopyOptions' name='options' type64='I'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCollectionCopyFontAttributes'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<arg declared_type64='CFSetRef _Nonnull' name='attributeNames' type64='^{__CFSet=}'/>
<arg declared_type64='CTFontCollectionCopyOptions' name='options' type64='I'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCollectionCopyQueryDescriptors'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCollectionCreateCopyWithFontDescriptors'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='original' type64='^{__CTFontCollection=}'/>
<arg declared_type64='CFArrayRef _Nullable' name='queryDescriptors' type64='^{__CFArray=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTFontCollectionRef _Nonnull' type64='^{__CTFontCollection=}'/>
</function>
<function name='CTFontCollectionCreateFromAvailableFonts'>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTFontCollectionRef _Nonnull' type64='^{__CTFontCollection=}'/>
</function>
<function name='CTFontCollectionCreateMatchingFontDescriptors'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCollectionCreateMatchingFontDescriptorsForFamily'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='familyName' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCollectionCreateMatchingFontDescriptorsSortedWithCallback'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<arg declared_type64='CTFontCollectionSortDescriptorsCallback _Nullable' function_pointer='true' name='sortCallback' type64='^?'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CTFontDescriptorRef _Nonnull' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='void * _Nonnull' type64='^v'/>
<retval declared_type64='CFComparisonResult' type64='q'/>
</arg>
<arg declared_type64='void * _Nullable' name='refCon' type64='^v'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCollectionCreateMatchingFontDescriptorsWithOptions'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCollectionCreateMutableCopy'>
<arg declared_type64='CTFontCollectionRef _Nonnull' name='original' type64='^{__CTFontCollection=}'/>
<retval declared_type64='CTMutableFontCollectionRef _Nonnull' type64='^{__CTFontCollection=}'/>
</function>
<function name='CTFontCollectionCreateWithFontDescriptors'>
<arg declared_type64='CFArrayRef _Nullable' name='queryDescriptors' type64='^{__CFArray=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTFontCollectionRef _Nonnull' type64='^{__CTFontCollection=}'/>
</function>
<function name='CTFontCollectionGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTFontCollectionSetExclusionDescriptors'>
<arg declared_type64='CTMutableFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<arg declared_type64='CFArrayRef _Nullable' name='descriptors' type64='^{__CFArray=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontCollectionSetQueryDescriptors'>
<arg declared_type64='CTMutableFontCollectionRef _Nonnull' name='collection' type64='^{__CTFontCollection=}'/>
<arg declared_type64='CFArrayRef _Nullable' name='descriptors' type64='^{__CFArray=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontCopyAttribute'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attribute' type64='^{__CFString=}'/>
<retval declared_type64='CFTypeRef _Nullable' type64='@'/>
</function>
<function name='CTFontCopyAvailableTables'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CTFontTableOptions' name='options' type64='I'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCopyCharacterSet'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFCharacterSetRef _Nonnull' type64='^{__CFCharacterSet=}'/>
</function>
<function name='CTFontCopyDefaultCascadeListForLanguages'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CFArrayRef _Nullable' name='languagePrefList' type64='^{__CFArray=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCopyDisplayName'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CTFontCopyFamilyName'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CTFontCopyFeatureSettings'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCopyFeatures'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCopyFontDescriptor'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CTFontDescriptorRef _Nonnull' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontCopyFullName'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CTFontCopyGraphicsFont'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CTFontDescriptorRef _Nullable * _Nullable' name='attributes' type64='^^{__CTFontDescriptor}'/>
<retval declared_type64='CGFontRef _Nonnull' type64='^{CGFont=}'/>
</function>
<function name='CTFontCopyLocalizedName'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='nameKey' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nullable' name='actualLanguage' type64='^^{__CFString}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CTFontCopyName'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='nameKey' type64='^{__CFString=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CTFontCopyNameForGlyph'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CGGlyph' name='glyph' type64='S'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CTFontCopyPostScriptName'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
</function>
<function name='CTFontCopySupportedLanguages'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCopyTable'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CTFontTableTag' name='table' type64='I'/>
<arg declared_type64='CTFontTableOptions' name='options' type64='I'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='CTFontCopyTraits'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
</function>
<function name='CTFontCopyVariation'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CTFontCopyVariationAxes'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontCreateCopyWithAttributes'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CTFontDescriptorRef _Nullable' name='attributes' type64='^{__CTFontDescriptor=}'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateCopyWithFamily'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CFStringRef _Nonnull' name='family' type64='^{__CFString=}'/>
<retval declared_type64='CTFontRef _Nullable' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateCopyWithSymbolicTraits'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CTFontSymbolicTraits' name='symTraitValue' type64='I'/>
<arg declared_type64='CTFontSymbolicTraits' name='symTraitMask' type64='I'/>
<retval declared_type64='CTFontRef _Nullable' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateForString'>
<arg declared_type64='CTFontRef _Nonnull' name='currentFont' type64='^{__CTFont=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='string' type64='^{__CFString=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateForStringWithLanguage'>
<arg declared_type64='CTFontRef _Nonnull' name='currentFont' type64='^{__CTFont=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='string' type64='^{__CFString=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<arg declared_type64='CFStringRef _Nullable' name='language' type64='^{__CFString=}'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreatePathForGlyph'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CGGlyph' name='glyph' type64='S'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<retval declared_type64='CGPathRef _Nullable' type64='^{CGPath=}'/>
</function>
<function name='CTFontCreateUIFontForLanguage'>
<arg declared_type64='CTFontUIFontType' name='uiType' type64='I'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg declared_type64='CFStringRef _Nullable' name='language' type64='^{__CFString=}'/>
<retval declared_type64='CTFontRef _Nullable' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateWithFontDescriptor'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='descriptor' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateWithFontDescriptorAndOptions'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='descriptor' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CTFontOptions' name='options' type64='Q'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateWithGraphicsFont'>
<arg declared_type64='CGFontRef _Nonnull' name='graphicsFont' type64='^{CGFont=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CTFontDescriptorRef _Nullable' name='attributes' type64='^{__CTFontDescriptor=}'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateWithName'>
<arg declared_type64='CFStringRef _Nonnull' name='name' type64='^{__CFString=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateWithNameAndOptions'>
<arg declared_type64='CFStringRef _Nonnull' name='name' type64='^{__CFString=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CTFontOptions' name='options' type64='Q'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateWithPlatformFont'>
<arg declared_type64='ATSFontRef' name='platformFont' type64='I'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<arg const='true' declared_type64='CGAffineTransform * _Nullable' name='matrix' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CTFontDescriptorRef _Nullable' name='attributes' type64='^{__CTFontDescriptor=}'/>
<retval declared_type64='CTFontRef _Nullable' type64='^{__CTFont=}'/>
</function>
<function name='CTFontCreateWithQuickdrawInstance'>
<arg declared_type64='ConstStr255Param _Nullable' name='name' type64='*'/>
<arg declared_type64='int16_t' name='identifier' type64='s'/>
<arg declared_type64='uint8_t' name='style' type64='C'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<retval declared_type64='CTFontRef _Nonnull' type64='^{__CTFont=}'/>
</function>
<function name='CTFontDescriptorCopyAttribute'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='descriptor' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attribute' type64='^{__CFString=}'/>
<retval declared_type64='CFTypeRef _Nullable' type64='@'/>
</function>
<function name='CTFontDescriptorCopyAttributes'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='descriptor' type64='^{__CTFontDescriptor=}'/>
<retval declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
</function>
<function name='CTFontDescriptorCopyLocalizedAttribute'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='descriptor' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attribute' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nullable' name='language' type64='^^{__CFString}'/>
<retval declared_type64='CFTypeRef _Nullable' type64='@'/>
</function>
<function name='CTFontDescriptorCreateCopyWithAttributes'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='original' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='attributes' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTFontDescriptorRef _Nonnull' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontDescriptorCreateCopyWithFamily'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='original' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='family' type64='^{__CFString=}'/>
<retval declared_type64='CTFontDescriptorRef _Nullable' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontDescriptorCreateCopyWithFeature'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='original' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CFNumberRef _Nonnull' name='featureTypeIdentifier' type64='^{__CFNumber=}'/>
<arg declared_type64='CFNumberRef _Nonnull' name='featureSelectorIdentifier' type64='^{__CFNumber=}'/>
<retval declared_type64='CTFontDescriptorRef _Nonnull' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontDescriptorCreateCopyWithSymbolicTraits'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='original' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CTFontSymbolicTraits' name='symTraitValue' type64='I'/>
<arg declared_type64='CTFontSymbolicTraits' name='symTraitMask' type64='I'/>
<retval declared_type64='CTFontDescriptorRef _Nullable' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontDescriptorCreateCopyWithVariation'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='original' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CFNumberRef _Nonnull' name='variationIdentifier' type64='^{__CFNumber=}'/>
<arg declared_type64='CGFloat' name='variationValue' type64='d'/>
<retval declared_type64='CTFontDescriptorRef _Nonnull' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontDescriptorCreateMatchingFontDescriptor'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='descriptor' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CFSetRef _Nullable' name='mandatoryAttributes' type64='^{__CFSet=}'/>
<retval declared_type64='CTFontDescriptorRef _Nullable' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontDescriptorCreateMatchingFontDescriptors'>
<arg declared_type64='CTFontDescriptorRef _Nonnull' name='descriptor' type64='^{__CTFontDescriptor=}'/>
<arg declared_type64='CFSetRef _Nullable' name='mandatoryAttributes' type64='^{__CFSet=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontDescriptorCreateWithAttributes'>
<arg declared_type64='CFDictionaryRef _Nonnull' name='attributes' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTFontDescriptorRef _Nonnull' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontDescriptorCreateWithNameAndSize'>
<arg declared_type64='CFStringRef _Nonnull' name='name' type64='^{__CFString=}'/>
<arg declared_type64='CGFloat' name='size' type64='d'/>
<retval declared_type64='CTFontDescriptorRef _Nonnull' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontDescriptorGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTFontDescriptorMatchFontDescriptorsWithProgressHandler'>
<arg declared_type64='CFArrayRef _Nonnull' name='descriptors' type64='^{__CFArray=}'/>
<arg declared_type64='CFSetRef _Nullable' name='mandatoryAttributes' type64='^{__CFSet=}'/>
<arg declared_type64='CTFontDescriptorProgressHandler _Nonnull' function_pointer='true' name='progressBlock' type64='@?'>
<arg declared_type64='CTFontDescriptorMatchingState' type64='I'/>
<arg declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFontDrawGlyphs'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg const='true' declared_type64='CGGlyph*' name='glyphs' type64='^S'/>
<arg const='true' declared_type64='CGPoint*' name='positions' type64='^{CGPoint=dd}'/>
<arg declared_type64='size_t' name='count' type64='Q'/>
<arg declared_type64='CGContextRef _Nonnull' name='context' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontGetAdvancesForGlyphs'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CTFontOrientation' name='orientation' type64='I'/>
<arg const='true' declared_type64='CGGlyph*' name='glyphs' type64='^S'/>
<arg declared_type64='CGSize*' name='advances' type64='^{CGSize=dd}'/>
<arg declared_type64='CFIndex' name='count' type64='q'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='CTFontGetAscent'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontGetBoundingBox'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CTFontGetBoundingRectsForGlyphs'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CTFontOrientation' name='orientation' type64='I'/>
<arg const='true' declared_type64='CGGlyph*' name='glyphs' type64='^S'/>
<arg declared_type64='CGRect*' name='boundingRects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CFIndex' name='count' type64='q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CTFontGetCapHeight'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontGetDescent'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontGetGlyphCount'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CTFontGetGlyphWithName'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='glyphName' type64='^{__CFString=}'/>
<retval declared_type64='CGGlyph' type64='S'/>
</function>
<function name='CTFontGetGlyphsForCharacters'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg const='true' declared_type64='UniChar*' name='characters' type64='^S'/>
<arg declared_type64='CGGlyph*' name='glyphs' type64='^S'/>
<arg declared_type64='CFIndex' name='count' type64='q'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFontGetLeading'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontGetLigatureCaretPositions'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CGGlyph' name='glyph' type64='S'/>
<arg declared_type64='CGFloat*' name='positions' type64='^d'/>
<arg declared_type64='CFIndex' name='maxPositions' type64='q'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CTFontGetMatrix'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CTFontGetOpticalBoundsForGlyphs'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg const='true' declared_type64='CGGlyph*' name='glyphs' type64='^S'/>
<arg declared_type64='CGRect*' name='boundingRects' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CFIndex' name='count' type64='q'/>
<arg declared_type64='CFOptionFlags' name='options' type64='Q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CTFontGetPlatformFont'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CTFontDescriptorRef _Nullable * _Nullable' name='attributes' type64='^^{__CTFontDescriptor}'/>
<retval declared_type64='ATSFontRef' type64='I'/>
</function>
<function name='CTFontGetSize'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontGetSlantAngle'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontGetStringEncoding'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CFStringEncoding' type64='I'/>
</function>
<function name='CTFontGetSymbolicTraits'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CTFontSymbolicTraits' type64='I'/>
</function>
<function name='CTFontGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTFontGetUnderlinePosition'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontGetUnderlineThickness'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontGetUnitsPerEm'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='unsigned int' type64='I'/>
</function>
<function name='CTFontGetVerticalTranslationsForGlyphs'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg const='true' declared_type64='CGGlyph*' name='glyphs' type64='^S'/>
<arg declared_type64='CGSize*' name='translations' type64='^{CGSize=dd}'/>
<arg declared_type64='CFIndex' name='count' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontGetXHeight'>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTFontManagerCompareFontFamilyNames'>
<arg const='true' declared_type64='void * _Nonnull' name='family1' type64='^v'/>
<arg const='true' declared_type64='void * _Nonnull' name='family2' type64='^v'/>
<arg declared_type64='void * _Nullable' name='context' type64='^v'/>
<retval declared_type64='CFComparisonResult' type64='q'/>
</function>
<function name='CTFontManagerCopyAvailableFontFamilyNames'>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTFontManagerCopyAvailableFontURLs'>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTFontManagerCopyAvailablePostScriptNames'>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTFontManagerCreateFontDescriptorFromData'>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<retval declared_type64='CTFontDescriptorRef _Nullable' type64='^{__CTFontDescriptor=}'/>
</function>
<function name='CTFontManagerCreateFontDescriptorsFromData'>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTFontManagerCreateFontDescriptorsFromURL'>
<arg declared_type64='CFURLRef _Nonnull' name='fileURL' type64='^{__CFURL=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CTFontManagerCreateFontRequestRunLoopSource'>
<arg declared_type64='CFIndex' name='sourceOrder' type64='q'/>
<arg declared_type64='CFArrayRef _Nonnull (^ _Nonnull)(CFDictionaryRef _Nonnull, pid_t)' function_pointer='true' name='createMatchesCallback' type64='@?'>
<arg declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
<arg declared_type64='pid_t' type64='i'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</arg>
<retval declared_type64='CFRunLoopSourceRef _Nullable' type64='^{__CFRunLoopSource=}'/>
</function>
<function name='CTFontManagerEnableFontDescriptors'>
<arg declared_type64='CFArrayRef _Nonnull' name='descriptors' type64='^{__CFArray=}'/>
<arg declared_type64='_Bool' name='enable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontManagerGetAutoActivationSetting'>
<arg declared_type64='CFStringRef _Nullable' name='bundleIdentifier' type64='^{__CFString=}'/>
<retval declared_type64='CTFontManagerAutoActivationSetting' type64='I'/>
</function>
<function name='CTFontManagerGetScopeForURL'>
<arg declared_type64='CFURLRef _Nonnull' name='fontURL' type64='^{__CFURL=}'/>
<retval declared_type64='CTFontManagerScope' type64='I'/>
</function>
<function name='CTFontManagerIsSupportedFont'>
<arg declared_type64='CFURLRef _Nonnull' name='fontURL' type64='^{__CFURL=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFontManagerRegisterFontDescriptors'>
<arg declared_type64='CFArrayRef _Nonnull' name='fontDescriptors' type64='^{__CFArray=}'/>
<arg declared_type64='CTFontManagerScope' name='scope' type64='I'/>
<arg declared_type64='_Bool' name='enabled' type64='B'/>
<arg declared_type64='_Bool (^ _Nullable)(CFArrayRef _Nonnull, _Bool)' function_pointer='true' name='registrationHandler' type64='@?'>
<arg declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontManagerRegisterFontURLs'>
<arg declared_type64='CFArrayRef _Nonnull' name='fontURLs' type64='^{__CFArray=}'/>
<arg declared_type64='CTFontManagerScope' name='scope' type64='I'/>
<arg declared_type64='_Bool' name='enabled' type64='B'/>
<arg declared_type64='_Bool (^ _Nullable)(CFArrayRef _Nonnull, _Bool)' function_pointer='true' name='registrationHandler' type64='@?'>
<arg declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontManagerRegisterFontsForURL'>
<arg declared_type64='CFURLRef _Nonnull' name='fontURL' type64='^{__CFURL=}'/>
<arg declared_type64='CTFontManagerScope' name='scope' type64='I'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFontManagerRegisterFontsForURLs'>
<arg declared_type64='CFArrayRef _Nonnull' name='fontURLs' type64='^{__CFArray=}'/>
<arg declared_type64='CTFontManagerScope' name='scope' type64='I'/>
<arg declared_type64='CFArrayRef _Nullable * _Nullable' name='errors' type64='^^{__CFArray}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFontManagerRegisterGraphicsFont'>
<arg declared_type64='CGFontRef _Nonnull' name='font' type64='^{CGFont=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFontManagerSetAutoActivationSetting'>
<arg declared_type64='CFStringRef _Nullable' name='bundleIdentifier' type64='^{__CFString=}'/>
<arg declared_type64='CTFontManagerAutoActivationSetting' name='setting' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontManagerUnregisterFontDescriptors'>
<arg declared_type64='CFArrayRef _Nonnull' name='fontDescriptors' type64='^{__CFArray=}'/>
<arg declared_type64='CTFontManagerScope' name='scope' type64='I'/>
<arg declared_type64='_Bool (^ _Nullable)(CFArrayRef _Nonnull, _Bool)' function_pointer='true' name='registrationHandler' type64='@?'>
<arg declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontManagerUnregisterFontURLs'>
<arg declared_type64='CFArrayRef _Nonnull' name='fontURLs' type64='^{__CFArray=}'/>
<arg declared_type64='CTFontManagerScope' name='scope' type64='I'/>
<arg declared_type64='_Bool (^ _Nullable)(CFArrayRef _Nonnull, _Bool)' function_pointer='true' name='registrationHandler' type64='@?'>
<arg declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
<arg declared_type64='_Bool' type64='B'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFontManagerUnregisterFontsForURL'>
<arg declared_type64='CFURLRef _Nonnull' name='fontURL' type64='^{__CFURL=}'/>
<arg declared_type64='CTFontManagerScope' name='scope' type64='I'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFontManagerUnregisterFontsForURLs'>
<arg declared_type64='CFArrayRef _Nonnull' name='fontURLs' type64='^{__CFArray=}'/>
<arg declared_type64='CTFontManagerScope' name='scope' type64='I'/>
<arg declared_type64='CFArrayRef _Nullable * _Nullable' name='errors' type64='^^{__CFArray}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFontManagerUnregisterGraphicsFont'>
<arg declared_type64='CGFontRef _Nonnull' name='font' type64='^{CGFont=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='error' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTFrameDraw'>
<arg declared_type64='CTFrameRef _Nonnull' name='frame' type64='^{__CTFrame=}'/>
<arg declared_type64='CGContextRef _Nonnull' name='context' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFrameGetFrameAttributes'>
<arg declared_type64='CTFrameRef _Nonnull' name='frame' type64='^{__CTFrame=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CTFrameGetLineOrigins'>
<arg declared_type64='CTFrameRef _Nonnull' name='frame' type64='^{__CTFrame=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<arg declared_type64='CGPoint*' name='origins' type64='^{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTFrameGetLines'>
<arg declared_type64='CTFrameRef _Nonnull' name='frame' type64='^{__CTFrame=}'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTFrameGetPath'>
<arg declared_type64='CTFrameRef _Nonnull' name='frame' type64='^{__CTFrame=}'/>
<retval declared_type64='CGPathRef _Nonnull' type64='^{CGPath=}'/>
</function>
<function name='CTFrameGetStringRange'>
<arg declared_type64='CTFrameRef _Nonnull' name='frame' type64='^{__CTFrame=}'/>
<retval declared_type64='CFRange' type64='{_CFRange=qq}'/>
</function>
<function name='CTFrameGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTFrameGetVisibleStringRange'>
<arg declared_type64='CTFrameRef _Nonnull' name='frame' type64='^{__CTFrame=}'/>
<retval declared_type64='CFRange' type64='{_CFRange=qq}'/>
</function>
<function name='CTFramesetterCreateFrame'>
<arg declared_type64='CTFramesetterRef _Nonnull' name='framesetter' type64='^{__CTFramesetter=}'/>
<arg declared_type64='CFRange' name='stringRange' type64='{_CFRange=qq}'/>
<arg declared_type64='CGPathRef _Nonnull' name='path' type64='^{CGPath=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='frameAttributes' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTFrameRef _Nonnull' type64='^{__CTFrame=}'/>
</function>
<function name='CTFramesetterCreateWithAttributedString'>
<arg declared_type64='CFAttributedStringRef _Nonnull' name='attrString' type64='^{__CFAttributedString=}'/>
<retval declared_type64='CTFramesetterRef _Nonnull' type64='^{__CTFramesetter=}'/>
</function>
<function name='CTFramesetterCreateWithTypesetter'>
<arg declared_type64='CTTypesetterRef _Nonnull' name='typesetter' type64='^{__CTTypesetter=}'/>
<retval declared_type64='CTFramesetterRef _Nonnull' type64='^{__CTFramesetter=}'/>
</function>
<function name='CTFramesetterGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTFramesetterGetTypesetter'>
<arg declared_type64='CTFramesetterRef _Nonnull' name='framesetter' type64='^{__CTFramesetter=}'/>
<retval declared_type64='CTTypesetterRef _Nonnull' type64='^{__CTTypesetter=}'/>
</function>
<function name='CTFramesetterSuggestFrameSizeWithConstraints'>
<arg declared_type64='CTFramesetterRef _Nonnull' name='framesetter' type64='^{__CTFramesetter=}'/>
<arg declared_type64='CFRange' name='stringRange' type64='{_CFRange=qq}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='frameAttributes' type64='^{__CFDictionary=}'/>
<arg declared_type64='CGSize' name='constraints' type64='{CGSize=dd}'/>
<arg declared_type64='CFRange * _Nullable' name='fitRange' type64='^{_CFRange=qq}'/>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</function>
<function name='CTGetCoreTextVersion'>
<retval declared_type64='uint32_t' type64='I'/>
</function>
<function name='CTGlyphInfoCreateWithCharacterIdentifier'>
<arg declared_type64='CGFontIndex' name='cid' type64='S'/>
<arg declared_type64='CTCharacterCollection' name='collection' type64='S'/>
<arg declared_type64='CFStringRef _Nonnull' name='baseString' type64='^{__CFString=}'/>
<retval declared_type64='CTGlyphInfoRef _Nullable' type64='^{__CTGlyphInfo=}'/>
</function>
<function name='CTGlyphInfoCreateWithGlyph'>
<arg declared_type64='CGGlyph' name='glyph' type64='S'/>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='baseString' type64='^{__CFString=}'/>
<retval declared_type64='CTGlyphInfoRef _Nullable' type64='^{__CTGlyphInfo=}'/>
</function>
<function name='CTGlyphInfoCreateWithGlyphName'>
<arg declared_type64='CFStringRef _Nonnull' name='glyphName' type64='^{__CFString=}'/>
<arg declared_type64='CTFontRef _Nonnull' name='font' type64='^{__CTFont=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='baseString' type64='^{__CFString=}'/>
<retval declared_type64='CTGlyphInfoRef _Nullable' type64='^{__CTGlyphInfo=}'/>
</function>
<function name='CTGlyphInfoGetCharacterCollection'>
<arg declared_type64='CTGlyphInfoRef _Nonnull' name='glyphInfo' type64='^{__CTGlyphInfo=}'/>
<retval declared_type64='CTCharacterCollection' type64='S'/>
</function>
<function name='CTGlyphInfoGetCharacterIdentifier'>
<arg declared_type64='CTGlyphInfoRef _Nonnull' name='glyphInfo' type64='^{__CTGlyphInfo=}'/>
<retval declared_type64='CGFontIndex' type64='S'/>
</function>
<function name='CTGlyphInfoGetGlyph'>
<arg declared_type64='CTGlyphInfoRef _Nonnull' name='glyphInfo' type64='^{__CTGlyphInfo=}'/>
<retval declared_type64='CGGlyph' type64='S'/>
</function>
<function name='CTGlyphInfoGetGlyphName'>
<arg declared_type64='CTGlyphInfoRef _Nonnull' name='glyphInfo' type64='^{__CTGlyphInfo=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CTGlyphInfoGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTLineCreateJustifiedLine'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='CGFloat' name='justificationFactor' type64='d'/>
<arg declared_type64='double' name='justificationWidth' type64='d'/>
<retval declared_type64='CTLineRef _Nullable' type64='^{__CTLine=}'/>
</function>
<function name='CTLineCreateTruncatedLine'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='double' name='width' type64='d'/>
<arg declared_type64='CTLineTruncationType' name='truncationType' type64='I'/>
<arg declared_type64='CTLineRef _Nullable' name='truncationToken' type64='^{__CTLine=}'/>
<retval declared_type64='CTLineRef _Nullable' type64='^{__CTLine=}'/>
</function>
<function name='CTLineCreateWithAttributedString'>
<arg declared_type64='CFAttributedStringRef _Nonnull' name='attrString' type64='^{__CFAttributedString=}'/>
<retval declared_type64='CTLineRef _Nonnull' type64='^{__CTLine=}'/>
</function>
<function name='CTLineDraw'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='CGContextRef _Nonnull' name='context' type64='^{CGContext=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTLineEnumerateCaretOffsets'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='void (^ _Nonnull)(double, CFIndex, _Bool, _Bool * _Nonnull)' function_pointer='true' name='block' type64='@?'>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='CFIndex' type64='q'/>
<arg declared_type64='_Bool' type64='B'/>
<arg declared_type64='_Bool * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTLineGetBoundsWithOptions'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='CTLineBoundsOptions' name='options' type64='Q'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CTLineGetGlyphCount'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CTLineGetGlyphRuns'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CTLineGetImageBounds'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='CGContextRef _Nullable' name='context' type64='^{CGContext=}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CTLineGetOffsetForStringIndex'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='CFIndex' name='charIndex' type64='q'/>
<arg declared_type64='CGFloat * _Nullable' name='secondaryOffset' type64='^d'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTLineGetPenOffsetForFlush'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='CGFloat' name='flushFactor' type64='d'/>
<arg declared_type64='double' name='flushWidth' type64='d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='CTLineGetStringIndexForPosition'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='CGPoint' name='position' type64='{CGPoint=dd}'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CTLineGetStringRange'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<retval declared_type64='CFRange' type64='{_CFRange=qq}'/>
</function>
<function name='CTLineGetTrailingWhitespaceWidth'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='CTLineGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTLineGetTypographicBounds'>
<arg declared_type64='CTLineRef _Nonnull' name='line' type64='^{__CTLine=}'/>
<arg declared_type64='CGFloat * _Nullable' name='ascent' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' name='descent' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' name='leading' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='CTParagraphStyleCreate'>
<arg const='true' declared_type64='CTParagraphStyleSetting * _Nullable' name='settings' type64='^{CTParagraphStyleSetting=IQ^v}'/>
<arg declared_type64='size_t' name='settingCount' type64='Q'/>
<retval declared_type64='CTParagraphStyleRef _Nonnull' type64='^{__CTParagraphStyle=}'/>
</function>
<function name='CTParagraphStyleCreateCopy'>
<arg declared_type64='CTParagraphStyleRef _Nonnull' name='paragraphStyle' type64='^{__CTParagraphStyle=}'/>
<retval declared_type64='CTParagraphStyleRef _Nonnull' type64='^{__CTParagraphStyle=}'/>
</function>
<function name='CTParagraphStyleGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTParagraphStyleGetValueForSpecifier'>
<arg declared_type64='CTParagraphStyleRef _Nonnull' name='paragraphStyle' type64='^{__CTParagraphStyle=}'/>
<arg declared_type64='CTParagraphStyleSpecifier' name='spec' type64='I'/>
<arg declared_type64='size_t' name='valueBufferSize' type64='Q'/>
<arg declared_type64='void * _Nonnull' name='valueBuffer' type64='^v'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CTRubyAnnotationCreate'>
<arg declared_type64='CTRubyAlignment' name='alignment' type64='C'/>
<arg declared_type64='CTRubyOverhang' name='overhang' type64='C'/>
<arg declared_type64='CGFloat' name='sizeFactor' type64='d'/>
<arg declared_type64='CFStringRef _Nullable*' name='text' type64='^^{__CFString}'/>
<retval declared_type64='CTRubyAnnotationRef _Nonnull' type64='^{__CTRubyAnnotation=}'/>
</function>
<function name='CTRubyAnnotationCreateCopy'>
<arg declared_type64='CTRubyAnnotationRef _Nonnull' name='rubyAnnotation' type64='^{__CTRubyAnnotation=}'/>
<retval declared_type64='CTRubyAnnotationRef _Nonnull' type64='^{__CTRubyAnnotation=}'/>
</function>
<function name='CTRubyAnnotationCreateWithAttributes'>
<arg declared_type64='CTRubyAlignment' name='alignment' type64='C'/>
<arg declared_type64='CTRubyOverhang' name='overhang' type64='C'/>
<arg declared_type64='CTRubyPosition' name='position' type64='C'/>
<arg declared_type64='CFStringRef _Nonnull' name='string' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='attributes' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTRubyAnnotationRef _Nonnull' type64='^{__CTRubyAnnotation=}'/>
</function>
<function name='CTRubyAnnotationGetAlignment'>
<arg declared_type64='CTRubyAnnotationRef _Nonnull' name='rubyAnnotation' type64='^{__CTRubyAnnotation=}'/>
<retval declared_type64='CTRubyAlignment' type64='C'/>
</function>
<function name='CTRubyAnnotationGetOverhang'>
<arg declared_type64='CTRubyAnnotationRef _Nonnull' name='rubyAnnotation' type64='^{__CTRubyAnnotation=}'/>
<retval declared_type64='CTRubyOverhang' type64='C'/>
</function>
<function name='CTRubyAnnotationGetSizeFactor'>
<arg declared_type64='CTRubyAnnotationRef _Nonnull' name='rubyAnnotation' type64='^{__CTRubyAnnotation=}'/>
<retval declared_type64='CGFloat' type64='d'/>
</function>
<function name='CTRubyAnnotationGetTextForPosition'>
<arg declared_type64='CTRubyAnnotationRef _Nonnull' name='rubyAnnotation' type64='^{__CTRubyAnnotation=}'/>
<arg declared_type64='CTRubyPosition' name='position' type64='C'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CTRubyAnnotationGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTRunDelegateCreate'>
<arg const='true' declared_type64='CTRunDelegateCallbacks * _Nonnull' name='callbacks' type64='^{_CTRunDelegateCallbacks=q^?^?^?^?}'/>
<arg declared_type64='void * _Nullable' name='refCon' type64='^v'/>
<retval declared_type64='CTRunDelegateRef _Nullable' type64='^{__CTRunDelegate=}'/>
</function>
<function name='CTRunDelegateGetRefCon'>
<arg declared_type64='CTRunDelegateRef _Nonnull' name='runDelegate' type64='^{__CTRunDelegate=}'/>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</function>
<function name='CTRunDelegateGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTRunDraw'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<arg declared_type64='CGContextRef _Nonnull' name='context' type64='^{CGContext=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTRunGetAdvances'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<arg declared_type64='CGSize*' name='buffer' type64='^{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTRunGetAdvancesPtr'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval const='true' declared_type64='CGSize * _Nullable' type64='^{CGSize=dd}'/>
</function>
<function name='CTRunGetAttributes'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
</function>
<function name='CTRunGetBaseAdvancesAndOrigins'>
<arg declared_type64='CTRunRef _Nonnull' name='runRef' type64='^{__CTRun=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<arg declared_type64='CGSize*' name='advancesBuffer' type64='^{CGSize=dd}'/>
<arg declared_type64='CGPoint*' name='originsBuffer' type64='^{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTRunGetGlyphCount'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CTRunGetGlyphs'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<arg declared_type64='CGGlyph*' name='buffer' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTRunGetGlyphsPtr'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval const='true' declared_type64='CGGlyph * _Nullable' type64='^S'/>
</function>
<function name='CTRunGetImageBounds'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<arg declared_type64='CGContextRef _Nullable' name='context' type64='^{CGContext=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='CTRunGetPositions'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<arg declared_type64='CGPoint*' name='buffer' type64='^{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTRunGetPositionsPtr'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval const='true' declared_type64='CGPoint * _Nullable' type64='^{CGPoint=dd}'/>
</function>
<function name='CTRunGetStatus'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval declared_type64='CTRunStatus' type64='I'/>
</function>
<function name='CTRunGetStringIndices'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<arg declared_type64='CFIndex*' name='buffer' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CTRunGetStringIndicesPtr'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval const='true' declared_type64='CFIndex * _Nullable' type64='^q'/>
</function>
<function name='CTRunGetStringRange'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval declared_type64='CFRange' type64='{_CFRange=qq}'/>
</function>
<function name='CTRunGetTextMatrix'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</function>
<function name='CTRunGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTRunGetTypographicBounds'>
<arg declared_type64='CTRunRef _Nonnull' name='run' type64='^{__CTRun=}'/>
<arg declared_type64='CFRange' name='range' type64='{_CFRange=qq}'/>
<arg declared_type64='CGFloat * _Nullable' name='ascent' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' name='descent' type64='^d'/>
<arg declared_type64='CGFloat * _Nullable' name='leading' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='CTTextTabCreate'>
<arg declared_type64='CTTextAlignment' name='alignment' type64='C'/>
<arg declared_type64='double' name='location' type64='d'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTTextTabRef _Nonnull' type64='^{__CTTextTab=}'/>
</function>
<function name='CTTextTabGetAlignment'>
<arg declared_type64='CTTextTabRef _Nonnull' name='tab' type64='^{__CTTextTab=}'/>
<retval declared_type64='CTTextAlignment' type64='C'/>
</function>
<function name='CTTextTabGetLocation'>
<arg declared_type64='CTTextTabRef _Nonnull' name='tab' type64='^{__CTTextTab=}'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='CTTextTabGetOptions'>
<arg declared_type64='CTTextTabRef _Nonnull' name='tab' type64='^{__CTTextTab=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CTTextTabGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTTypesetterCreateLine'>
<arg declared_type64='CTTypesetterRef _Nonnull' name='typesetter' type64='^{__CTTypesetter=}'/>
<arg declared_type64='CFRange' name='stringRange' type64='{_CFRange=qq}'/>
<retval declared_type64='CTLineRef _Nonnull' type64='^{__CTLine=}'/>
</function>
<function name='CTTypesetterCreateLineWithOffset'>
<arg declared_type64='CTTypesetterRef _Nonnull' name='typesetter' type64='^{__CTTypesetter=}'/>
<arg declared_type64='CFRange' name='stringRange' type64='{_CFRange=qq}'/>
<arg declared_type64='double' name='offset' type64='d'/>
<retval declared_type64='CTLineRef _Nonnull' type64='^{__CTLine=}'/>
</function>
<function name='CTTypesetterCreateWithAttributedString'>
<arg declared_type64='CFAttributedStringRef _Nonnull' name='string' type64='^{__CFAttributedString=}'/>
<retval declared_type64='CTTypesetterRef _Nonnull' type64='^{__CTTypesetter=}'/>
</function>
<function name='CTTypesetterCreateWithAttributedStringAndOptions'>
<arg declared_type64='CFAttributedStringRef _Nonnull' name='string' type64='^{__CFAttributedString=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CTTypesetterRef _Nullable' type64='^{__CTTypesetter=}'/>
</function>
<function name='CTTypesetterGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CTTypesetterSuggestClusterBreak'>
<arg declared_type64='CTTypesetterRef _Nonnull' name='typesetter' type64='^{__CTTypesetter=}'/>
<arg declared_type64='CFIndex' name='startIndex' type64='q'/>
<arg declared_type64='double' name='width' type64='d'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CTTypesetterSuggestClusterBreakWithOffset'>
<arg declared_type64='CTTypesetterRef _Nonnull' name='typesetter' type64='^{__CTTypesetter=}'/>
<arg declared_type64='CFIndex' name='startIndex' type64='q'/>
<arg declared_type64='double' name='width' type64='d'/>
<arg declared_type64='double' name='offset' type64='d'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CTTypesetterSuggestLineBreak'>
<arg declared_type64='CTTypesetterRef _Nonnull' name='typesetter' type64='^{__CTTypesetter=}'/>
<arg declared_type64='CFIndex' name='startIndex' type64='q'/>
<arg declared_type64='double' name='width' type64='d'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<function name='CTTypesetterSuggestLineBreakWithOffset'>
<arg declared_type64='CTTypesetterRef _Nonnull' name='typesetter' type64='^{__CTTypesetter=}'/>
<arg declared_type64='CFIndex' name='startIndex' type64='q'/>
<arg declared_type64='double' name='width' type64='d'/>
<arg declared_type64='double' name='offset' type64='d'/>
<retval declared_type64='CFIndex' type64='q'/>
</function>
<struct name='AppParameters' type64='{AppParameters=&quot;theMsgEvent&quot;{?=&quot;what&quot;S&quot;message&quot;I&quot;when&quot;I&quot;where&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;modifiers&quot;S}&quot;eventRefCon&quot;I&quot;messageLength&quot;I}'>
<field declared_type64='struct (anonymous struct at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk/System/Library/Frameworks/ApplicationServices.framework/Frameworks/HIServices.framework/Headers/Processes.h:57:3)' name='theMsgEvent' type64='{_structanonymousstructatApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX110sdkSystemLibraryFrameworksApplicationServicesframeworkFrameworksHIServicesframeworkHeadersProcessesh573=&quot;what&quot;S&quot;message&quot;I&quot;when&quot;I&quot;where&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;modifiers&quot;S}'/>
<field declared_type64='UInt32' name='eventRefCon' type64='I'/>
<field declared_type64='UInt32' name='messageLength' type64='I'/>
</struct>
<struct name='ICAppSpec' type64='{ICAppSpec=&quot;fCreator&quot;I&quot;name&quot;[64C]}'>
<field declared_type64='OSType' name='fCreator' type64='I'/>
<field declared_type64='Str63' name='name' type64='[64C]'/>
</struct>
<struct name='ICAppSpecList' type64='{ICAppSpecList=&quot;numberOfItems&quot;s&quot;appSpecs&quot;[1{ICAppSpec=&quot;fCreator&quot;I&quot;name&quot;[64C]}]}'>
<field declared_type64='SInt16' name='numberOfItems' type64='s'/>
<field declared_type64='ICAppSpec*' name='appSpecs' type64='[1{ICAppSpec=&quot;fCreator&quot;I&quot;name&quot;[64C]}]'/>
</struct>
<struct name='ICCharTable' type64='{ICCharTable=&quot;netToMac&quot;[256C]&quot;macToNet&quot;[256C]}'>
<field declared_type64='unsigned char*' name='netToMac' type64='[256C]'/>
<field declared_type64='unsigned char*' name='macToNet' type64='[256C]'/>
</struct>
<struct name='ICFileSpec' type64='{ICFileSpec=&quot;volName&quot;[32C]&quot;volCreationDate&quot;i&quot;fss&quot;{FSSpec=&quot;hidden&quot;[70C]}&quot;alias&quot;{AliasRecord=&quot;hidden&quot;[6C]}}'>
<field declared_type64='Str31' name='volName' type64='[32C]'/>
<field declared_type64='SInt32' name='volCreationDate' type64='i'/>
<field declared_type64='FSSpec' name='fss' type64='{FSSpec=&quot;hidden&quot;[70C]}'/>
<field declared_type64='AliasRecord' name='alias' type64='{AliasRecord=&quot;hidden&quot;[6C]}'/>
</struct>
<struct name='ICFontRecord' type64='{ICFontRecord=&quot;size&quot;s&quot;face&quot;C&quot;pad&quot;c&quot;font&quot;[256C]}'>
<field declared_type64='SInt16' name='size' type64='s'/>
<field declared_type64='Style' name='face' type64='C'/>
<field declared_type64='char' name='pad' type64='c'/>
<field declared_type64='Str255' name='font' type64='[256C]'/>
</struct>
<struct name='ICMapEntry' type64='{ICMapEntry=&quot;totalLength&quot;s&quot;fixedLength&quot;s&quot;version&quot;s&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;postCreator&quot;I&quot;flags&quot;i&quot;extension&quot;[256C]&quot;creatorAppName&quot;[256C]&quot;postAppName&quot;[256C]&quot;MIMEType&quot;[256C]&quot;entryName&quot;[256C]}'>
<field declared_type64='SInt16' name='totalLength' type64='s'/>
<field declared_type64='ICFixedLength' name='fixedLength' type64='s'/>
<field declared_type64='SInt16' name='version' type64='s'/>
<field declared_type64='OSType' name='fileType' type64='I'/>
<field declared_type64='OSType' name='fileCreator' type64='I'/>
<field declared_type64='OSType' name='postCreator' type64='I'/>
<field declared_type64='ICMapEntryFlags' name='flags' type64='i'/>
<field declared_type64='Str255' name='extension' type64='[256C]'/>
<field declared_type64='Str255' name='creatorAppName' type64='[256C]'/>
<field declared_type64='Str255' name='postAppName' type64='[256C]'/>
<field declared_type64='Str255' name='MIMEType' type64='[256C]'/>
<field declared_type64='Str255' name='entryName' type64='[256C]'/>
</struct>
<struct name='ICServiceEntry' type64='{ICServiceEntry=&quot;name&quot;[256C]&quot;port&quot;s&quot;flags&quot;s}'>
<field declared_type64='Str255' name='name' type64='[256C]'/>
<field declared_type64='SInt16' name='port' type64='s'/>
<field declared_type64='ICServiceEntryFlags' name='flags' type64='s'/>
</struct>
<struct name='ICServices' type64='{ICServices=&quot;count&quot;s&quot;services&quot;[1{ICServiceEntry=&quot;name&quot;[256C]&quot;port&quot;s&quot;flags&quot;s}]}'>
<field declared_type64='SInt16' name='count' type64='s'/>
<field declared_type64='ICServiceEntry*' name='services' type64='[1{ICServiceEntry=&quot;name&quot;[256C]&quot;port&quot;s&quot;flags&quot;s}]'/>
</struct>
<struct name='LaunchParamBlockRec' type64='{LaunchParamBlockRec=&quot;reserved1&quot;I&quot;reserved2&quot;S&quot;launchBlockID&quot;S&quot;launchEPBLength&quot;I&quot;launchFileFlags&quot;S&quot;launchControlFlags&quot;S&quot;launchAppRef&quot;^{FSRef}&quot;launchProcessSN&quot;{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}&quot;launchPreferredSize&quot;I&quot;launchMinimumSize&quot;I&quot;launchAvailableSize&quot;I&quot;launchAppParameters&quot;^{AppParameters}}'>
<field declared_type64='UInt32' name='reserved1' type64='I'/>
<field declared_type64='UInt16' name='reserved2' type64='S'/>
<field declared_type64='UInt16' name='launchBlockID' type64='S'/>
<field declared_type64='UInt32' name='launchEPBLength' type64='I'/>
<field declared_type64='UInt16' name='launchFileFlags' type64='S'/>
<field declared_type64='LaunchFlags' name='launchControlFlags' type64='S'/>
<field declared_type64='FSRefPtr' name='launchAppRef' type64='^{FSRef=[80C]}'/>
<field declared_type64='ProcessSerialNumber' name='launchProcessSN' type64='{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}'/>
<field declared_type64='UInt32' name='launchPreferredSize' type64='I'/>
<field declared_type64='UInt32' name='launchMinimumSize' type64='I'/>
<field declared_type64='UInt32' name='launchAvailableSize' type64='I'/>
<field declared_type64='AppParametersPtr' name='launchAppParameters' type64='^{AppParameters={?=SII{Point=ss}S}II}'/>
</struct>
<struct name='ProcessInfoExtendedRec' type64='{ProcessInfoExtendedRec=&quot;processInfoLength&quot;I&quot;processName&quot;*&quot;processNumber&quot;{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}&quot;processType&quot;I&quot;processSignature&quot;I&quot;processMode&quot;I&quot;processLocation&quot;*&quot;processSize&quot;I&quot;processFreeMem&quot;I&quot;processLauncher&quot;{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}&quot;processLaunchDate&quot;I&quot;processActiveTime&quot;I&quot;processAppRef&quot;^{FSRef}&quot;processTempMemTotal&quot;I&quot;processPurgeableTempMemTotal&quot;I}'>
<field declared_type64='UInt32' name='processInfoLength' type64='I'/>
<field declared_type64='StringPtr' name='processName' type64='*'/>
<field declared_type64='ProcessSerialNumber' name='processNumber' type64='{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}'/>
<field declared_type64='UInt32' name='processType' type64='I'/>
<field declared_type64='OSType' name='processSignature' type64='I'/>
<field declared_type64='UInt32' name='processMode' type64='I'/>
<field declared_type64='Ptr' name='processLocation' type64='*'/>
<field declared_type64='UInt32' name='processSize' type64='I'/>
<field declared_type64='UInt32' name='processFreeMem' type64='I'/>
<field declared_type64='ProcessSerialNumber' name='processLauncher' type64='{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}'/>
<field declared_type64='UInt32' name='processLaunchDate' type64='I'/>
<field declared_type64='UInt32' name='processActiveTime' type64='I'/>
<field declared_type64='FSRefPtr' name='processAppRef' type64='^{FSRef=[80C]}'/>
<field declared_type64='UInt32' name='processTempMemTotal' type64='I'/>
<field declared_type64='UInt32' name='processPurgeableTempMemTotal' type64='I'/>
</struct>
<struct name='ProcessInfoRec' type64='{ProcessInfoRec=&quot;processInfoLength&quot;I&quot;processName&quot;*&quot;processNumber&quot;{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}&quot;processType&quot;I&quot;processSignature&quot;I&quot;processMode&quot;I&quot;processLocation&quot;*&quot;processSize&quot;I&quot;processFreeMem&quot;I&quot;processLauncher&quot;{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}&quot;processLaunchDate&quot;I&quot;processActiveTime&quot;I&quot;processAppRef&quot;^{FSRef}}'>
<field declared_type64='UInt32' name='processInfoLength' type64='I'/>
<field declared_type64='StringPtr' name='processName' type64='*'/>
<field declared_type64='ProcessSerialNumber' name='processNumber' type64='{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}'/>
<field declared_type64='UInt32' name='processType' type64='I'/>
<field declared_type64='OSType' name='processSignature' type64='I'/>
<field declared_type64='UInt32' name='processMode' type64='I'/>
<field declared_type64='Ptr' name='processLocation' type64='*'/>
<field declared_type64='UInt32' name='processSize' type64='I'/>
<field declared_type64='UInt32' name='processFreeMem' type64='I'/>
<field declared_type64='ProcessSerialNumber' name='processLauncher' type64='{ProcessSerialNumber=&quot;highLongOfPSN&quot;I&quot;lowLongOfPSN&quot;I}'/>
<field declared_type64='UInt32' name='processLaunchDate' type64='I'/>
<field declared_type64='UInt32' name='processActiveTime' type64='I'/>
<field declared_type64='FSRefPtr' name='processAppRef' type64='^{FSRef=[80C]}'/>
</struct>
<struct name='SizeResourceRec' type64='{SizeResourceRec=&quot;flags&quot;S&quot;preferredHeapSize&quot;I&quot;minimumHeapSize&quot;I}'>
<field declared_type64='UInt16' name='flags' type64='S'/>
<field declared_type64='UInt32' name='preferredHeapSize' type64='I'/>
<field declared_type64='UInt32' name='minimumHeapSize' type64='I'/>
</struct>
<cftype gettypeid_func='AXObserverGetTypeID' name='AXObserverRef' type64='^{__AXObserver=}'/>
<cftype gettypeid_func='AXUIElementGetTypeID' name='AXUIElementRef' type64='^{__AXUIElement=}'/>
<cftype gettypeid_func='AXValueGetTypeID' name='AXValueRef' type64='^{__AXValue=}'/>
<cftype gettypeid_func='HIShapeGetTypeID' name='HIMutableShapeRef' type64='^{__HIShape=}'/>
<cftype gettypeid_func='HIShapeGetTypeID' name='HIShapeRef' type64='^{__HIShape=}'/>
<cftype gettypeid_func='PasteboardGetTypeID' name='PasteboardRef' type64='^{OpaquePasteboardRef=}'/>
<cftype gettypeid_func='TranslationGetTypeID' name='TranslationRef' type64='^{OpaqueTranslationRef=}'/>
<cftype name='ICInstance' type64='^{OpaqueICInstance=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXAttachmentTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXAutocorrectedTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXBackgroundColorTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXFontFamilyKey' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXFontNameKey' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXFontSizeKey' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXFontTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXForegoundColorTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXForegroundColorTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXLinkTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXListItemIndexTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXListItemLevelTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXListItemPrefixTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXMarkedMisspelledTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXMisspelledTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXNaturalLanguageTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXReplacementStringTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXShadowTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXStrikethroughColorTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXStrikethroughTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXSuperscriptTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXTrustedCheckOptionPrompt' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXUnderlineColorTextAttribute' type64='^{__CFString=}'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXUnderlineTextAttribute' type64='^{__CFString=}'/>
<constant const='true' declared_type64='UInt32' name='kAXValueAXErrorType' type64='I'/>
<constant const='true' declared_type64='UInt32' name='kAXValueCFRangeType' type64='I'/>
<constant const='true' declared_type64='UInt32' name='kAXValueCGPointType' type64='I'/>
<constant const='true' declared_type64='UInt32' name='kAXValueCGRectType' type64='I'/>
<constant const='true' declared_type64='UInt32' name='kAXValueCGSizeType' type64='I'/>
<constant const='true' declared_type64='UInt32' name='kAXValueIllegalType' type64='I'/>
<constant declared_type64='CFStringRef _Nonnull' name='kAXVisibleNameKey' type64='^{__CFString=}'/>
<string_constant name='kAXAMPMFieldAttribute' nsstring='true' value='AXAMPMField'/>
<string_constant name='kAXAllowedValuesAttribute' nsstring='true' value='AXAllowedValues'/>
<string_constant name='kAXAlternateUIVisibleAttribute' nsstring='true' value='AXAlternateUIVisible'/>
<string_constant name='kAXAnnouncementKey' nsstring='true' value='AXAnnouncementKey'/>
<string_constant name='kAXAnnouncementRequestedNotification' nsstring='true' value='AXAnnouncementRequested'/>
<string_constant name='kAXApplicationActivatedNotification' nsstring='true' value='AXApplicationActivated'/>
<string_constant name='kAXApplicationDeactivatedNotification' nsstring='true' value='AXApplicationDeactivated'/>
<string_constant name='kAXApplicationDockItemSubrole' nsstring='true' value='AXApplicationDockItem'/>
<string_constant name='kAXApplicationHiddenNotification' nsstring='true' value='AXApplicationHidden'/>
<string_constant name='kAXApplicationRole' nsstring='true' value='AXApplication'/>
<string_constant name='kAXApplicationShownNotification' nsstring='true' value='AXApplicationShown'/>
<string_constant name='kAXAscendingSortDirectionValue' nsstring='true' value='AXAscendingSortDirection'/>
<string_constant name='kAXAttributedStringForRangeParameterizedAttribute' nsstring='true' value='AXAttributedStringForRange'/>
<string_constant name='kAXBoundsForRangeParameterizedAttribute' nsstring='true' value='AXBoundsForRange'/>
<string_constant name='kAXBrowserRole' nsstring='true' value='AXBrowser'/>
<string_constant name='kAXBusyIndicatorRole' nsstring='true' value='AXBusyIndicator'/>
<string_constant name='kAXButtonRole' nsstring='true' value='AXButton'/>
<string_constant name='kAXCancelAction' nsstring='true' value='AXCancel'/>
<string_constant name='kAXCancelButtonAttribute' nsstring='true' value='AXCancelButton'/>
<string_constant name='kAXCellForColumnAndRowParameterizedAttribute' nsstring='true' value='AXCellForColumnAndRow'/>
<string_constant name='kAXCellRole' nsstring='true' value='AXCell'/>
<string_constant name='kAXCheckBoxRole' nsstring='true' value='AXCheckBox'/>
<string_constant name='kAXChildrenAttribute' nsstring='true' value='AXChildren'/>
<string_constant name='kAXClearButtonAttribute' nsstring='true' value='AXClearButton'/>
<string_constant name='kAXCloseButtonAttribute' nsstring='true' value='AXCloseButton'/>
<string_constant name='kAXCloseButtonSubrole' nsstring='true' value='AXCloseButton'/>
<string_constant name='kAXColorWellRole' nsstring='true' value='AXColorWell'/>
<string_constant name='kAXColumnCountAttribute' nsstring='true' value='AXColumnCount'/>
<string_constant name='kAXColumnHeaderUIElementsAttribute' nsstring='true' value='AXColumnHeaderUIElements'/>
<string_constant name='kAXColumnIndexRangeAttribute' nsstring='true' value='AXColumnIndexRange'/>
<string_constant name='kAXColumnRole' nsstring='true' value='AXColumn'/>
<string_constant name='kAXColumnTitleAttribute' nsstring='true' value='AXColumnTitles'/>
<string_constant name='kAXColumnTitlesAttribute' nsstring='true' value='AXColumnTitles'/>
<string_constant name='kAXColumnsAttribute' nsstring='true' value='AXColumns'/>
<string_constant name='kAXComboBoxRole' nsstring='true' value='AXComboBox'/>
<string_constant name='kAXConfirmAction' nsstring='true' value='AXConfirm'/>
<string_constant name='kAXContentListSubrole' nsstring='true' value='AXContentList'/>
<string_constant name='kAXContentsAttribute' nsstring='true' value='AXContents'/>
<string_constant name='kAXCreatedNotification' nsstring='true' value='AXCreated'/>
<string_constant name='kAXCriticalValueAttribute' nsstring='true' value='AXCriticalValue'/>
<string_constant name='kAXDateFieldRole' nsstring='true' value='AXDateField'/>
<string_constant name='kAXDayFieldAttribute' nsstring='true' value='AXDayField'/>
<string_constant name='kAXDecorativeSubrole' nsstring='true' value='AXDecorative'/>
<string_constant name='kAXDecrementAction' nsstring='true' value='AXDecrement'/>
<string_constant name='kAXDecrementArrowSubrole' nsstring='true' value='AXDecrementArrow'/>
<string_constant name='kAXDecrementButtonAttribute' nsstring='true' value='AXDecrementButton'/>
<string_constant name='kAXDecrementPageSubrole' nsstring='true' value='AXDecrementPage'/>
<string_constant name='kAXDefaultButtonAttribute' nsstring='true' value='AXDefaultButton'/>
<string_constant name='kAXDefinitionListSubrole' nsstring='true' value='AXDefinitionList'/>
<string_constant name='kAXDescendingSortDirectionValue' nsstring='true' value='AXDescendingSortDirection'/>
<string_constant name='kAXDescription' nsstring='true' value='AXDescription'/>
<string_constant name='kAXDescriptionAttribute' nsstring='true' value='AXDescription'/>
<string_constant name='kAXDescriptionListSubrole' nsstring='true' value='AXDescriptionList'/>
<string_constant name='kAXDialogSubrole' nsstring='true' value='AXDialog'/>
<string_constant name='kAXDisclosedByRowAttribute' nsstring='true' value='AXDisclosedByRow'/>
<string_constant name='kAXDisclosedRowsAttribute' nsstring='true' value='AXDisclosedRows'/>
<string_constant name='kAXDisclosingAttribute' nsstring='true' value='AXDisclosing'/>
<string_constant name='kAXDisclosureLevelAttribute' nsstring='true' value='AXDisclosureLevel'/>
<string_constant name='kAXDisclosureTriangleRole' nsstring='true' value='AXDisclosureTriangle'/>
<string_constant name='kAXDockExtraDockItemSubrole' nsstring='true' value='AXDockExtraDockItem'/>
<string_constant name='kAXDockItemRole' nsstring='true' value='AXDockItem'/>
<string_constant name='kAXDocumentAttribute' nsstring='true' value='AXDocument'/>
<string_constant name='kAXDocumentDockItemSubrole' nsstring='true' value='AXDocumentDockItem'/>
<string_constant name='kAXDrawerCreatedNotification' nsstring='true' value='AXDrawerCreated'/>
<string_constant name='kAXDrawerRole' nsstring='true' value='AXDrawer'/>
<string_constant name='kAXEditedAttribute' nsstring='true' value='AXEdited'/>
<string_constant name='kAXElementBusyAttribute' nsstring='true' value='AXElementBusy'/>
<string_constant name='kAXElementBusyChangedNotification' nsstring='true' value='AXElementBusyChanged'/>
<string_constant name='kAXEnabledAttribute' nsstring='true' value='AXEnabled'/>
<string_constant name='kAXExpandedAttribute' nsstring='true' value='AXExpanded'/>
<string_constant name='kAXExtrasMenuBarAttribute' nsstring='true' value='AXExtrasMenuBar'/>
<string_constant name='kAXFilenameAttribute' nsstring='true' value='AXFilename'/>
<string_constant name='kAXFloatingWindowSubrole' nsstring='true' value='AXFloatingWindow'/>
<string_constant name='kAXFocusedApplicationAttribute' nsstring='true' value='AXFocusedApplication'/>
<string_constant name='kAXFocusedAttribute' nsstring='true' value='AXFocused'/>
<string_constant name='kAXFocusedUIElementAttribute' nsstring='true' value='AXFocusedUIElement'/>
<string_constant name='kAXFocusedUIElementChangedNotification' nsstring='true' value='AXFocusedUIElementChanged'/>
<string_constant name='kAXFocusedWindowAttribute' nsstring='true' value='AXFocusedWindow'/>
<string_constant name='kAXFocusedWindowChangedNotification' nsstring='true' value='AXFocusedWindowChanged'/>
<string_constant name='kAXFolderDockItemSubrole' nsstring='true' value='AXFolderDockItem'/>
<string_constant name='kAXFrontmostAttribute' nsstring='true' value='AXFrontmost'/>
<string_constant name='kAXFullScreenButtonAttribute' nsstring='true' value='AXFullScreenButton'/>
<string_constant name='kAXFullScreenButtonSubrole' nsstring='true' value='AXFullScreenButton'/>
<string_constant name='kAXGridRole' nsstring='true' value='AXGrid'/>
<string_constant name='kAXGroupRole' nsstring='true' value='AXGroup'/>
<string_constant name='kAXGrowAreaAttribute' nsstring='true' value='AXGrowArea'/>
<string_constant name='kAXGrowAreaRole' nsstring='true' value='AXGrowArea'/>
<string_constant name='kAXHandleRole' nsstring='true' value='AXHandle'/>
<string_constant name='kAXHandlesAttribute' nsstring='true' value='AXHandles'/>
<string_constant name='kAXHeaderAttribute' nsstring='true' value='AXHeader'/>
<string_constant name='kAXHelpAttribute' nsstring='true' value='AXHelp'/>
<string_constant name='kAXHelpTagCreatedNotification' nsstring='true' value='AXHelpTagCreated'/>
<string_constant name='kAXHelpTagRole' nsstring='true' value='AXHelpTag'/>
<string_constant name='kAXHiddenAttribute' nsstring='true' value='AXHidden'/>
<string_constant name='kAXHorizontalOrientationValue' nsstring='true' value='AXHorizontalOrientation'/>
<string_constant name='kAXHorizontalScrollBarAttribute' nsstring='true' value='AXHorizontalScrollBar'/>
<string_constant name='kAXHorizontalUnitDescriptionAttribute' nsstring='true' value='AXHorizontalUnitDescription'/>
<string_constant name='kAXHorizontalUnitsAttribute' nsstring='true' value='AXHorizontalUnits'/>
<string_constant name='kAXHourFieldAttribute' nsstring='true' value='AXHourField'/>
<string_constant name='kAXIdentifierAttribute' nsstring='true' value='AXIdentifier'/>
<string_constant name='kAXImageRole' nsstring='true' value='AXImage'/>
<string_constant name='kAXIncrementAction' nsstring='true' value='AXIncrement'/>
<string_constant name='kAXIncrementArrowSubrole' nsstring='true' value='AXIncrementArrow'/>
<string_constant name='kAXIncrementButtonAttribute' nsstring='true' value='AXIncrementButton'/>
<string_constant name='kAXIncrementPageSubrole' nsstring='true' value='AXIncrementPage'/>
<string_constant name='kAXIncrementorAttribute' nsstring='true' value='AXIncrementor'/>
<string_constant name='kAXIncrementorRole' nsstring='true' value='AXIncrementor'/>
<string_constant name='kAXIndexAttribute' nsstring='true' value='AXIndex'/>
<string_constant name='kAXInsertionPointLineNumberAttribute' nsstring='true' value='AXInsertionPointLineNumber'/>
<string_constant name='kAXIsApplicationRunningAttribute' nsstring='true' value='AXIsApplicationRunning'/>
<string_constant name='kAXIsEditableAttribute' nsstring='true' value='AXIsEditable'/>
<string_constant name='kAXLabelUIElementsAttribute' nsstring='true' value='AXLabelUIElements'/>
<string_constant name='kAXLabelValueAttribute' nsstring='true' value='AXLabelValue'/>
<string_constant name='kAXLayoutAreaRole' nsstring='true' value='AXLayoutArea'/>
<string_constant name='kAXLayoutChangedNotification' nsstring='true' value='AXLayoutChanged'/>
<string_constant name='kAXLayoutItemRole' nsstring='true' value='AXLayoutItem'/>
<string_constant name='kAXLayoutPointForScreenPointParameterizedAttribute' nsstring='true' value='AXLayoutPointForScreenPoint'/>
<string_constant name='kAXLayoutSizeForScreenSizeParameterizedAttribute' nsstring='true' value='AXLayoutSizeForScreenSize'/>
<string_constant name='kAXLevelIndicatorRole' nsstring='true' value='AXLevelIndicator'/>
<string_constant name='kAXLineForIndexParameterizedAttribute' nsstring='true' value='AXLineForIndex'/>
<string_constant name='kAXLinkedUIElementsAttribute' nsstring='true' value='AXLinkedUIElements'/>
<string_constant name='kAXListRole' nsstring='true' value='AXList'/>
<string_constant name='kAXMainAttribute' nsstring='true' value='AXMain'/>
<string_constant name='kAXMainWindowAttribute' nsstring='true' value='AXMainWindow'/>
<string_constant name='kAXMainWindowChangedNotification' nsstring='true' value='AXMainWindowChanged'/>
<string_constant name='kAXMarkerTypeAttribute' nsstring='true' value='AXMarkerType'/>
<string_constant name='kAXMarkerTypeDescriptionAttribute' nsstring='true' value='AXMarkerTypeDescription'/>
<string_constant name='kAXMarkerUIElementsAttribute' nsstring='true' value='AXMarkerUIElements'/>
<string_constant name='kAXMatteContentUIElementAttribute' nsstring='true' value='AXMatteContentUIElement'/>
<string_constant name='kAXMatteHoleAttribute' nsstring='true' value='AXMatteHole'/>
<string_constant name='kAXMatteRole' nsstring='true' value='AXMatte'/>
<string_constant name='kAXMaxValueAttribute' nsstring='true' value='AXMaxValue'/>
<string_constant name='kAXMenuBarAttribute' nsstring='true' value='AXMenuBar'/>
<string_constant name='kAXMenuBarItemRole' nsstring='true' value='AXMenuBarItem'/>
<string_constant name='kAXMenuBarRole' nsstring='true' value='AXMenuBar'/>
<string_constant name='kAXMenuButtonRole' nsstring='true' value='AXMenuButton'/>
<string_constant name='kAXMenuClosedNotification' nsstring='true' value='AXMenuClosed'/>
<string_constant name='kAXMenuItemCmdCharAttribute' nsstring='true' value='AXMenuItemCmdChar'/>
<string_constant name='kAXMenuItemCmdGlyphAttribute' nsstring='true' value='AXMenuItemCmdGlyph'/>
<string_constant name='kAXMenuItemCmdModifiersAttribute' nsstring='true' value='AXMenuItemCmdModifiers'/>
<string_constant name='kAXMenuItemCmdVirtualKeyAttribute' nsstring='true' value='AXMenuItemCmdVirtualKey'/>
<string_constant name='kAXMenuItemMarkCharAttribute' nsstring='true' value='AXMenuItemMarkChar'/>
<string_constant name='kAXMenuItemPrimaryUIElementAttribute' nsstring='true' value='AXMenuItemPrimaryUIElement'/>
<string_constant name='kAXMenuItemRole' nsstring='true' value='AXMenuItem'/>
<string_constant name='kAXMenuItemSelectedNotification' nsstring='true' value='AXMenuItemSelected'/>
<string_constant name='kAXMenuOpenedNotification' nsstring='true' value='AXMenuOpened'/>
<string_constant name='kAXMenuRole' nsstring='true' value='AXMenu'/>
<string_constant name='kAXMinValueAttribute' nsstring='true' value='AXMinValue'/>
<string_constant name='kAXMinimizeButtonAttribute' nsstring='true' value='AXMinimizeButton'/>
<string_constant name='kAXMinimizeButtonSubrole' nsstring='true' value='AXMinimizeButton'/>
<string_constant name='kAXMinimizedAttribute' nsstring='true' value='AXMinimized'/>
<string_constant name='kAXMinimizedWindowDockItemSubrole' nsstring='true' value='AXMinimizedWindowDockItem'/>
<string_constant name='kAXMinuteFieldAttribute' nsstring='true' value='AXMinuteField'/>
<string_constant name='kAXModalAttribute' nsstring='true' value='AXModal'/>
<string_constant name='kAXMonthFieldAttribute' nsstring='true' value='AXMonthField'/>
<string_constant name='kAXMovedNotification' nsstring='true' value='AXMoved'/>
<string_constant name='kAXNextContentsAttribute' nsstring='true' value='AXNextContents'/>
<string_constant name='kAXNumberOfCharactersAttribute' nsstring='true' value='AXNumberOfCharacters'/>
<string_constant name='kAXOrderedByRowAttribute' nsstring='true' value='AXOrderedByRow'/>
<string_constant name='kAXOrientationAttribute' nsstring='true' value='AXOrientation'/>
<string_constant name='kAXOutlineRole' nsstring='true' value='AXOutline'/>
<string_constant name='kAXOutlineRowSubrole' nsstring='true' value='AXOutlineRow'/>
<string_constant name='kAXOverflowButtonAttribute' nsstring='true' value='AXOverflowButton'/>
<string_constant name='kAXParentAttribute' nsstring='true' value='AXParent'/>
<string_constant name='kAXPickAction' nsstring='true' value='AXPick'/>
<string_constant name='kAXPlaceholderValueAttribute' nsstring='true' value='AXPlaceholderValue'/>
<string_constant name='kAXPopUpButtonRole' nsstring='true' value='AXPopUpButton'/>
<string_constant name='kAXPopoverRole' nsstring='true' value='AXPopover'/>
<string_constant name='kAXPositionAttribute' nsstring='true' value='AXPosition'/>
<string_constant name='kAXPressAction' nsstring='true' value='AXPress'/>
<string_constant name='kAXPreviousContentsAttribute' nsstring='true' value='AXPreviousContents'/>
<string_constant name='kAXPriorityKey' nsstring='true' value='AXPriorityKey'/>
<string_constant name='kAXProcessSwitcherListSubrole' nsstring='true' value='AXProcessSwitcherList'/>
<string_constant name='kAXProgressIndicatorRole' nsstring='true' value='AXProgressIndicator'/>
<string_constant name='kAXProxyAttribute' nsstring='true' value='AXProxy'/>
<string_constant name='kAXRTFForRangeParameterizedAttribute' nsstring='true' value='AXRTFForRange'/>
<string_constant name='kAXRadioButtonRole' nsstring='true' value='AXRadioButton'/>
<string_constant name='kAXRadioGroupRole' nsstring='true' value='AXRadioGroup'/>
<string_constant name='kAXRaiseAction' nsstring='true' value='AXRaise'/>
<string_constant name='kAXRangeForIndexParameterizedAttribute' nsstring='true' value='AXRangeForIndex'/>
<string_constant name='kAXRangeForLineParameterizedAttribute' nsstring='true' value='AXRangeForLine'/>
<string_constant name='kAXRangeForPositionParameterizedAttribute' nsstring='true' value='AXRangeForPosition'/>
<string_constant name='kAXRatingIndicatorSubrole' nsstring='true' value='AXRatingIndicator'/>
<string_constant name='kAXRelevanceIndicatorRole' nsstring='true' value='AXRelevanceIndicator'/>
<string_constant name='kAXResizedNotification' nsstring='true' value='AXResized'/>
<string_constant name='kAXRoleAttribute' nsstring='true' value='AXRole'/>
<string_constant name='kAXRoleDescriptionAttribute' nsstring='true' value='AXRoleDescription'/>
<string_constant name='kAXRowCollapsedNotification' nsstring='true' value='AXRowCollapsed'/>
<string_constant name='kAXRowCountAttribute' nsstring='true' value='AXRowCount'/>
<string_constant name='kAXRowCountChangedNotification' nsstring='true' value='AXRowCountChanged'/>
<string_constant name='kAXRowExpandedNotification' nsstring='true' value='AXRowExpanded'/>
<string_constant name='kAXRowHeaderUIElementsAttribute' nsstring='true' value='AXRowHeaderUIElements'/>
<string_constant name='kAXRowIndexRangeAttribute' nsstring='true' value='AXRowIndexRange'/>
<string_constant name='kAXRowRole' nsstring='true' value='AXRow'/>
<string_constant name='kAXRowsAttribute' nsstring='true' value='AXRows'/>
<string_constant name='kAXRulerMarkerRole' nsstring='true' value='AXRulerMarker'/>
<string_constant name='kAXRulerRole' nsstring='true' value='AXRuler'/>
<string_constant name='kAXScreenPointForLayoutPointParameterizedAttribute' nsstring='true' value='AXScreenPointForLayoutPoint'/>
<string_constant name='kAXScreenSizeForLayoutSizeParameterizedAttribute' nsstring='true' value='AXScreenSizeForLayoutSize'/>
<string_constant name='kAXScrollAreaRole' nsstring='true' value='AXScrollArea'/>
<string_constant name='kAXScrollBarRole' nsstring='true' value='AXScrollBar'/>
<string_constant name='kAXSearchButtonAttribute' nsstring='true' value='AXSearchButton'/>
<string_constant name='kAXSearchFieldSubrole' nsstring='true' value='AXSearchField'/>
<string_constant name='kAXSecondFieldAttribute' nsstring='true' value='AXSecondField'/>
<string_constant name='kAXSecureTextFieldSubrole' nsstring='true' value='AXSecureTextField'/>
<string_constant name='kAXSelectedAttribute' nsstring='true' value='AXSelected'/>
<string_constant name='kAXSelectedCellsAttribute' nsstring='true' value='AXSelectedCells'/>
<string_constant name='kAXSelectedCellsChangedNotification' nsstring='true' value='AXSelectedCellsChanged'/>
<string_constant name='kAXSelectedChildrenAttribute' nsstring='true' value='AXSelectedChildren'/>
<string_constant name='kAXSelectedChildrenChangedNotification' nsstring='true' value='AXSelectedChildrenChanged'/>
<string_constant name='kAXSelectedChildrenMovedNotification' nsstring='true' value='AXSelectedChildrenMoved'/>
<string_constant name='kAXSelectedColumnsAttribute' nsstring='true' value='AXSelectedColumns'/>
<string_constant name='kAXSelectedColumnsChangedNotification' nsstring='true' value='AXSelectedColumnsChanged'/>
<string_constant name='kAXSelectedRowsAttribute' nsstring='true' value='AXSelectedRows'/>
<string_constant name='kAXSelectedRowsChangedNotification' nsstring='true' value='AXSelectedRowsChanged'/>
<string_constant name='kAXSelectedTextAttribute' nsstring='true' value='AXSelectedText'/>
<string_constant name='kAXSelectedTextChangedNotification' nsstring='true' value='AXSelectedTextChanged'/>
<string_constant name='kAXSelectedTextRangeAttribute' nsstring='true' value='AXSelectedTextRange'/>
<string_constant name='kAXSelectedTextRangesAttribute' nsstring='true' value='AXSelectedTextRanges'/>
<string_constant name='kAXSeparatorDockItemSubrole' nsstring='true' value='AXSeparatorDockItem'/>
<string_constant name='kAXServesAsTitleForUIElementsAttribute' nsstring='true' value='AXServesAsTitleForUIElements'/>
<string_constant name='kAXSharedCharacterRangeAttribute' nsstring='true' value='AXSharedCharacterRange'/>
<string_constant name='kAXSharedFocusElementsAttribute' nsstring='true' value='AXSharedFocusElements'/>
<string_constant name='kAXSharedTextUIElementsAttribute' nsstring='true' value='AXSharedTextUIElements'/>
<string_constant name='kAXSheetCreatedNotification' nsstring='true' value='AXSheetCreated'/>
<string_constant name='kAXSheetRole' nsstring='true' value='AXSheet'/>
<string_constant name='kAXShowAlternateUIAction' nsstring='true' value='AXShowAlternateUI'/>
<string_constant name='kAXShowDefaultUIAction' nsstring='true' value='AXShowDefaultUI'/>
<string_constant name='kAXShowMenuAction' nsstring='true' value='AXShowMenu'/>
<string_constant name='kAXShownMenuUIElementAttribute' nsstring='true' value='AXShownMenuUIElement'/>
<string_constant name='kAXSizeAttribute' nsstring='true' value='AXSize'/>
<string_constant name='kAXSliderRole' nsstring='true' value='AXSlider'/>
<string_constant name='kAXSortButtonSubrole' nsstring='true' value='AXSortButton'/>
<string_constant name='kAXSortDirectionAttribute' nsstring='true' value='AXSortDirection'/>
<string_constant name='kAXSplitGroupRole' nsstring='true' value='AXSplitGroup'/>
<string_constant name='kAXSplitterRole' nsstring='true' value='AXSplitter'/>
<string_constant name='kAXSplittersAttribute' nsstring='true' value='AXSplitters'/>
<string_constant name='kAXStandardWindowSubrole' nsstring='true' value='AXStandardWindow'/>
<string_constant name='kAXStaticTextRole' nsstring='true' value='AXStaticText'/>
<string_constant name='kAXStringForRangeParameterizedAttribute' nsstring='true' value='AXStringForRange'/>
<string_constant name='kAXStyleRangeForIndexParameterizedAttribute' nsstring='true' value='AXStyleRangeForIndex'/>
<string_constant name='kAXSubroleAttribute' nsstring='true' value='AXSubrole'/>
<string_constant name='kAXSwitchSubrole' nsstring='true' value='AXSwitch'/>
<string_constant name='kAXSystemDialogSubrole' nsstring='true' value='AXSystemDialog'/>
<string_constant name='kAXSystemFloatingWindowSubrole' nsstring='true' value='AXSystemFloatingWindow'/>
<string_constant name='kAXSystemWideRole' nsstring='true' value='AXSystemWide'/>
<string_constant name='kAXTabGroupRole' nsstring='true' value='AXTabGroup'/>
<string_constant name='kAXTableRole' nsstring='true' value='AXTable'/>
<string_constant name='kAXTableRowSubrole' nsstring='true' value='AXTableRow'/>
<string_constant name='kAXTabsAttribute' nsstring='true' value='AXTabs'/>
<string_constant name='kAXTextAreaRole' nsstring='true' value='AXTextArea'/>
<string_constant name='kAXTextAttribute' nsstring='true' value='AXText'/>
<string_constant name='kAXTextFieldRole' nsstring='true' value='AXTextField'/>
<string_constant name='kAXTimeFieldRole' nsstring='true' value='AXTimeField'/>
<string_constant name='kAXTimelineSubrole' nsstring='true' value='AXTimeline'/>
<string_constant name='kAXTitleAttribute' nsstring='true' value='AXTitle'/>
<string_constant name='kAXTitleChangedNotification' nsstring='true' value='AXTitleChanged'/>
<string_constant name='kAXTitleUIElementAttribute' nsstring='true' value='AXTitleUIElement'/>
<string_constant name='kAXToggleSubrole' nsstring='true' value='AXToggle'/>
<string_constant name='kAXToolbarButtonAttribute' nsstring='true' value='AXToolbarButton'/>
<string_constant name='kAXToolbarButtonSubrole' nsstring='true' value='AXToolbarButton'/>
<string_constant name='kAXToolbarRole' nsstring='true' value='AXToolbar'/>
<string_constant name='kAXTopLevelUIElementAttribute' nsstring='true' value='AXTopLevelUIElement'/>
<string_constant name='kAXTrashDockItemSubrole' nsstring='true' value='AXTrashDockItem'/>
<string_constant name='kAXUIElementDestroyedNotification' nsstring='true' value='AXUIElementDestroyed'/>
<string_constant name='kAXUIElementTitleKey' nsstring='true' value='AXUIElementTitleKey'/>
<string_constant name='kAXUIElementsKey' nsstring='true' value='AXUIElementsKey'/>
<string_constant name='kAXURLAttribute' nsstring='true' value='AXURL'/>
<string_constant name='kAXURLDockItemSubrole' nsstring='true' value='AXURLDockItem'/>
<string_constant name='kAXUnitDescriptionAttribute' nsstring='true' value='AXUnitDescription'/>
<string_constant name='kAXUnitsAttribute' nsstring='true' value='AXUnits'/>
<string_constant name='kAXUnitsChangedNotification' nsstring='true' value='AXUnitsChanged'/>
<string_constant name='kAXUnknownOrientationValue' nsstring='true' value='AXUnknownOrientation'/>
<string_constant name='kAXUnknownRole' nsstring='true' value='AXUnknown'/>
<string_constant name='kAXUnknownSortDirectionValue' nsstring='true' value='AXUnknownSortDirection'/>
<string_constant name='kAXUnknownSubrole' nsstring='true' value='AXUnknown'/>
<string_constant name='kAXValueAttribute' nsstring='true' value='AXValue'/>
<string_constant name='kAXValueChangedNotification' nsstring='true' value='AXValueChanged'/>
<string_constant name='kAXValueDescriptionAttribute' nsstring='true' value='AXValueDescription'/>
<string_constant name='kAXValueIncrementAttribute' nsstring='true' value='AXValueIncrement'/>
<string_constant name='kAXValueIndicatorRole' nsstring='true' value='AXValueIndicator'/>
<string_constant name='kAXValueWrapsAttribute' nsstring='true' value='AXValueWraps'/>
<string_constant name='kAXVerticalOrientationValue' nsstring='true' value='AXVerticalOrientation'/>
<string_constant name='kAXVerticalScrollBarAttribute' nsstring='true' value='AXVerticalScrollBar'/>
<string_constant name='kAXVerticalUnitDescriptionAttribute' nsstring='true' value='AXVerticalUnitDescription'/>
<string_constant name='kAXVerticalUnitsAttribute' nsstring='true' value='AXVerticalUnits'/>
<string_constant name='kAXVisibleCellsAttribute' nsstring='true' value='AXVisibleCells'/>
<string_constant name='kAXVisibleCharacterRangeAttribute' nsstring='true' value='AXVisibleCharacterRange'/>
<string_constant name='kAXVisibleChildrenAttribute' nsstring='true' value='AXVisibleChildren'/>
<string_constant name='kAXVisibleColumnsAttribute' nsstring='true' value='AXVisibleColumns'/>
<string_constant name='kAXVisibleRowsAttribute' nsstring='true' value='AXVisibleRows'/>
<string_constant name='kAXVisibleTextAttribute' nsstring='true' value='AXVisibleText'/>
<string_constant name='kAXWarningValueAttribute' nsstring='true' value='AXWarningValue'/>
<string_constant name='kAXWindowAttribute' nsstring='true' value='AXWindow'/>
<string_constant name='kAXWindowCreatedNotification' nsstring='true' value='AXWindowCreated'/>
<string_constant name='kAXWindowDeminiaturizedNotification' nsstring='true' value='AXWindowDeminiaturized'/>
<string_constant name='kAXWindowMiniaturizedNotification' nsstring='true' value='AXWindowMiniaturized'/>
<string_constant name='kAXWindowMovedNotification' nsstring='true' value='AXWindowMoved'/>
<string_constant name='kAXWindowResizedNotification' nsstring='true' value='AXWindowResized'/>
<string_constant name='kAXWindowRole' nsstring='true' value='AXWindow'/>
<string_constant name='kAXWindowsAttribute' nsstring='true' value='AXWindows'/>
<string_constant name='kAXYearFieldAttribute' nsstring='true' value='AXYearField'/>
<string_constant name='kAXZoomButtonAttribute' nsstring='true' value='AXZoomButton'/>
<string_constant name='kAXZoomButtonSubrole' nsstring='true' value='AXZoomButton'/>
<string_constant name='kICArchieAll' value='pArchieAll'/>
<string_constant name='kICArchiePreferred' value='pArchiePreferred'/>
<string_constant name='kICCharacterSet' value='pCharacterSet'/>
<string_constant name='kICDocumentFont' value='pDocumentFont'/>
<string_constant name='kICDownloadFolder' value='pDownloadFolder'/>
<string_constant name='kICEmail' value='pEmail'/>
<string_constant name='kICFTPHost' value='pFTPHost'/>
<string_constant name='kICFTPProxyAccount' value='pFTPProxyAccount'/>
<string_constant name='kICFTPProxyHost' value='pFTPProxyHost'/>
<string_constant name='kICFTPProxyPassword' value='pFTPProxyPassword'/>
<string_constant name='kICFTPProxyUser' value='pFTPProxyUser'/>
<string_constant name='kICFingerHost' value='pFingerHost'/>
<string_constant name='kICGopherHost' value='pGopherHost'/>
<string_constant name='kICGopherProxy' value='pGopherProxy'/>
<string_constant name='kICHTTPProxyHost' value='pHTTPProxyHost'/>
<string_constant name='kICHelper' value='pHelper•'/>
<string_constant name='kICHelperDesc' value='pHelperDesc•'/>
<string_constant name='kICHelperList' value='pHelperList•'/>
<string_constant name='kICIRCHost' value='pIRCHost'/>
<string_constant name='kICInfoMacAll' value='pInfoMacAll'/>
<string_constant name='kICInfoMacPreferred' value='pInfoMacPreferred'/>
<string_constant name='kICLDAPSearchbase' value='pLDAPSearchbase'/>
<string_constant name='kICLDAPServer' value='pLDAPServer'/>
<string_constant name='kICListFont' value='pListFont'/>
<string_constant name='kICMacSearchHost' value='pMacSearchHost'/>
<string_constant name='kICMailAccount' value='pMailAccount'/>
<string_constant name='kICMailHeaders' value='pMailHeaders'/>
<string_constant name='kICMailPassword' value='pMailPassword'/>
<string_constant name='kICMapping' value='pMapping'/>
<string_constant name='kICNNTPHost' value='pNNTPHost'/>
<string_constant name='kICNTPHost' value='pNTPHost'/>
<string_constant name='kICNewMailDialog' value='pNewMailDialog'/>
<string_constant name='kICNewMailFlashIcon' value='pNewMailFlashIcon'/>
<string_constant name='kICNewMailPlaySound' value='pNewMailPlaySound'/>
<string_constant name='kICNewMailSoundName' value='pNewMailSoundName'/>
<string_constant name='kICNewsAuthPassword' value='pNewsAuthPassword'/>
<string_constant name='kICNewsAuthUsername' value='pNewsAuthUsername'/>
<string_constant name='kICNewsHeaders' value='pNewsHeaders'/>
<string_constant name='kICNoProxyDomains' value='pNoProxyDomains'/>
<string_constant name='kICOrganization' value='pOrganization'/>
<string_constant name='kICPhHost' value='pPhHost'/>
<string_constant name='kICPlan' value='pPlan'/>
<string_constant name='kICPrinterFont' value='pPrinterFont'/>
<string_constant name='kICQuotingString' value='pQuotingString'/>
<string_constant name='kICRTSPProxyHost' value='pRTSPProxyHost'/>
<string_constant name='kICRealName' value='pRealName'/>
<string_constant name='kICReservedKey' value='pkICReservedKey'/>
<string_constant name='kICSMTPHost' value='pSMTPHost'/>
<string_constant name='kICScreenFont' value='pScreenFont'/>
<string_constant name='kICServices' value='pServices'/>
<string_constant name='kICSignature' value='pSignature'/>
<string_constant name='kICSnailMailAddress' value='pSnailMailAddress'/>
<string_constant name='kICSocksHost' value='pSocksHost'/>
<string_constant name='kICTelnetHost' value='pTelnetHost'/>
<string_constant name='kICUMichAll' value='pUMichAll'/>
<string_constant name='kICUMichPreferred' value='pUMichPreferred'/>
<string_constant name='kICUseFTPProxy' value='pUseFTPProxy'/>
<string_constant name='kICUseGopherProxy' value='pUseGopherProxy'/>
<string_constant name='kICUseHTTPProxy' value='pUseHTTPProxy'/>
<string_constant name='kICUsePassiveFTP' value='pUsePassiveFTP'/>
<string_constant name='kICUseRTSPProxy' value='pUseRTSPProxy'/>
<string_constant name='kICUseSocks' value='pUseSocks'/>
<string_constant name='kICWAISGateway' value='pWAISGateway'/>
<string_constant name='kICWWWHomePage' value='pWWWHomePage'/>
<string_constant name='kICWebBackgroundColour' value='pWebBackgroundColour'/>
<string_constant name='kICWebReadColor' value='p646F6777•WebReadColor'/>
<string_constant name='kICWebSearchPagePrefs' value='pWebSearchPagePrefs'/>
<string_constant name='kICWebTextColor' value='pWebTextColor'/>
<string_constant name='kICWebUnderlineLinks' value='p646F6777•WebUnderlineLinks'/>
<string_constant name='kICWebUnreadColor' value='p646F6777•WebUnreadColor'/>
<string_constant name='kICWhoisHost' value='pWhoisHost'/>
<string_constant name='kPasteboardClipboard' nsstring='true' value='com.apple.pasteboard.clipboard'/>
<string_constant name='kPasteboardFind' nsstring='true' value='com.apple.pasteboard.find'/>
<string_constant name='kPasteboardTypeFilePromiseContent' nsstring='true' value='com.apple.pasteboard.promised-file-content-type'/>
<string_constant name='kPasteboardTypeFileURLPromise' nsstring='true' value='com.apple.pasteboard.promised-file-url'/>
<enum name='activDev' value64='5'/>
<enum name='atAbsoluteCenter' value64='5'/>
<enum name='atBottom' value64='3'/>
<enum name='atBottomLeft' value64='11'/>
<enum name='atBottomRight' value64='15'/>
<enum name='atCenterBottom' value64='7'/>
<enum name='atCenterLeft' value64='9'/>
<enum name='atCenterRight' value64='13'/>
<enum name='atCenterTop' value64='6'/>
<enum name='atHorizontalCenter' value64='4'/>
<enum name='atLeft' value64='8'/>
<enum name='atNone' value64='0'/>
<enum name='atRight' value64='12'/>
<enum name='atTop' value64='2'/>
<enum name='atTopLeft' value64='10'/>
<enum name='atTopRight' value64='14'/>
<enum name='atVerticalCenter' value64='1'/>
<enum name='badPasteboardFlavorErr' value64='-25133'/>
<enum name='badPasteboardIndexErr' value64='-25131'/>
<enum name='badPasteboardItemErr' value64='-25132'/>
<enum name='badPasteboardSyncErr' value64='-25130'/>
<enum name='badTranslationRefErr' value64='-3031'/>
<enum name='cdevGenErr' value64='-1'/>
<enum name='cdevMemErr' value64='0'/>
<enum name='cdevResErr' value64='1'/>
<enum name='cdevUnset' value64='3'/>
<enum name='clearDev' value64='13'/>
<enum name='closeDev' value64='2'/>
<enum name='copyDev' value64='11'/>
<enum name='cursorDev' value64='14'/>
<enum name='cutDev' value64='10'/>
<enum name='deactivDev' value64='6'/>
<enum name='duplicatePasteboardFlavorErr' value64='-25134'/>
<enum name='extendedBlock' value64='19523'/>
<enum name='extendedBlockLen' value64='40'/>
<enum name='hitDev' value64='1'/>
<enum name='icConfigInappropriateErr' value64='-675'/>
<enum name='icConfigNotFoundErr' value64='-674'/>
<enum name='icInternalErr' value64='-669'/>
<enum name='icNoMoreWritersErr' value64='-671'/>
<enum name='icNoPerm' value64='0'/>
<enum name='icNoURLErr' value64='-673'/>
<enum name='icNothingToOverrideErr' value64='-672'/>
<enum name='icPermErr' value64='-667'/>
<enum name='icPrefDataErr' value64='-668'/>
<enum name='icPrefNotFoundErr' value64='-666'/>
<enum name='icProfileNotFoundErr' value64='-676'/>
<enum name='icReadOnlyPerm' value64='1'/>
<enum name='icReadWritePerm' value64='2'/>
<enum name='icTooManyProfilesErr' value64='-677'/>
<enum name='icTruncatedErr' value64='-670'/>
<enum name='initDev' value64='0'/>
<enum name='kAEFetchURL' value64='1179996748'/>
<enum name='kAEGetURL' value64='1196773964'/>
<enum name='kAXCopyMultipleAttributeOptionStopOnError' value64='1'/>
<enum name='kAXErrorAPIDisabled' value64='-25211'/>
<enum name='kAXErrorActionUnsupported' value64='-25206'/>
<enum name='kAXErrorAttributeUnsupported' value64='-25205'/>
<enum name='kAXErrorCannotComplete' value64='-25204'/>
<enum name='kAXErrorFailure' value64='-25200'/>
<enum name='kAXErrorIllegalArgument' value64='-25201'/>
<enum name='kAXErrorInvalidUIElement' value64='-25202'/>
<enum name='kAXErrorInvalidUIElementObserver' value64='-25203'/>
<enum name='kAXErrorNoValue' value64='-25212'/>
<enum name='kAXErrorNotEnoughPrecision' value64='-25214'/>
<enum name='kAXErrorNotImplemented' value64='-25208'/>
<enum name='kAXErrorNotificationAlreadyRegistered' value64='-25209'/>
<enum name='kAXErrorNotificationNotRegistered' value64='-25210'/>
<enum name='kAXErrorNotificationUnsupported' value64='-25207'/>
<enum name='kAXErrorParameterizedAttributeUnsupported' value64='-25213'/>
<enum name='kAXErrorSuccess' value64='0'/>
<enum name='kAXMenuItemModifierControl' value64='4'/>
<enum name='kAXMenuItemModifierNoCommand' value64='8'/>
<enum name='kAXMenuItemModifierNone' value64='0'/>
<enum name='kAXMenuItemModifierOption' value64='2'/>
<enum name='kAXMenuItemModifierShift' value64='1'/>
<enum name='kAXPriorityHigh' value64='90'/>
<enum name='kAXPriorityLow' value64='10'/>
<enum name='kAXPriorityMedium' value64='50'/>
<enum name='kAXUnderlineStyleDouble' value64='9'/>
<enum name='kAXUnderlineStyleNone' value64='0'/>
<enum name='kAXUnderlineStyleSingle' value64='1'/>
<enum name='kAXUnderlineStyleThick' value64='2'/>
<enum name='kAXValueTypeAXError' value64='5'/>
<enum name='kAXValueTypeCFRange' value64='4'/>
<enum name='kAXValueTypeCGPoint' value64='1'/>
<enum name='kAXValueTypeCGRect' value64='3'/>
<enum name='kAXValueTypeCGSize' value64='2'/>
<enum name='kAXValueTypeIllegal' value64='0'/>
<enum name='kAlignAbsoluteCenter' value64='5'/>
<enum name='kAlignBottom' value64='3'/>
<enum name='kAlignBottomLeft' value64='11'/>
<enum name='kAlignBottomRight' value64='15'/>
<enum name='kAlignCenterBottom' value64='7'/>
<enum name='kAlignCenterLeft' value64='9'/>
<enum name='kAlignCenterRight' value64='13'/>
<enum name='kAlignCenterTop' value64='6'/>
<enum name='kAlignHorizontalCenter' value64='4'/>
<enum name='kAlignLeft' value64='8'/>
<enum name='kAlignNone' value64='0'/>
<enum name='kAlignRight' value64='12'/>
<enum name='kAlignTop' value64='2'/>
<enum name='kAlignTopLeft' value64='10'/>
<enum name='kAlignTopRight' value64='14'/>
<enum name='kAlignVerticalCenter' value64='1'/>
<enum name='kCurrentProcess' value64='2'/>
<enum name='kHIShapeEnumerateInit' value64='1'/>
<enum name='kHIShapeEnumerateRect' value64='2'/>
<enum name='kHIShapeEnumerateTerminate' value64='3'/>
<enum name='kHIShapeParseFromBottom' value64='1'/>
<enum name='kHIShapeParseFromBottomRight' value64='3'/>
<enum name='kHIShapeParseFromLeft' value64='0'/>
<enum name='kHIShapeParseFromRight' value64='2'/>
<enum name='kHIShapeParseFromTop' value64='0'/>
<enum name='kHIShapeParseFromTopLeft' value64='0'/>
<enum name='kICAttrLockedBit' value64='0'/>
<enum name='kICAttrLockedMask' value64='1'/>
<enum name='kICAttrNoChange' value64='4294967295'/>
<enum name='kICAttrVolatileBit' value64='1'/>
<enum name='kICAttrVolatileMask' value64='2'/>
<enum name='kICComponentInterfaceVersion' value64='262144'/>
<enum name='kICComponentInterfaceVersion0' value64='0'/>
<enum name='kICComponentInterfaceVersion1' value64='65536'/>
<enum name='kICComponentInterfaceVersion2' value64='131072'/>
<enum name='kICComponentInterfaceVersion3' value64='196608'/>
<enum name='kICComponentInterfaceVersion4' value64='262144'/>
<enum name='kICComponentVersion' value64='0'/>
<enum name='kICCreator' value64='1229144432'/>
<enum name='kICEditPreferenceEvent' value64='1229144432'/>
<enum name='kICEditPreferenceEventClass' value64='1229144432'/>
<enum name='kICFileSpecHeaderSize' value64='106'/>
<enum name='kICFileType' value64='1229144432'/>
<enum name='kICMapBinaryBit' value64='0'/>
<enum name='kICMapBinaryMask' value64='1'/>
<enum name='kICMapDataForkBit' value64='2'/>
<enum name='kICMapDataForkMask' value64='4'/>
<enum name='kICMapFixedLength' value64='22'/>
<enum name='kICMapNotIncomingBit' value64='4'/>
<enum name='kICMapNotIncomingMask' value64='16'/>
<enum name='kICMapNotOutgoingBit' value64='5'/>
<enum name='kICMapNotOutgoingMask' value64='32'/>
<enum name='kICMapPostBit' value64='3'/>
<enum name='kICMapPostMask' value64='8'/>
<enum name='kICMapResourceForkBit' value64='1'/>
<enum name='kICMapResourceForkMask' value64='2'/>
<enum name='kICNilProfileID' value64='0'/>
<enum name='kICNoUserInteractionBit' value64='0'/>
<enum name='kICNoUserInteractionMask' value64='1'/>
<enum name='kICNumVersion' value64='1'/>
<enum name='kICServicesTCPBit' value64='0'/>
<enum name='kICServicesTCPMask' value64='1'/>
<enum name='kICServicesUDPBit' value64='1'/>
<enum name='kICServicesUDPMask' value64='2'/>
<enum name='kInternetEventClass' value64='1196773964'/>
<enum name='kNoProcess' value64='0'/>
<enum name='kPasteboardClientIsOwner' value64='2'/>
<enum name='kPasteboardFlavorNoFlags' value64='0'/>
<enum name='kPasteboardFlavorNotSaved' value64='4'/>
<enum name='kPasteboardFlavorPromised' value64='512'/>
<enum name='kPasteboardFlavorRequestOnly' value64='8'/>
<enum name='kPasteboardFlavorSenderOnly' value64='1'/>
<enum name='kPasteboardFlavorSenderTranslated' value64='2'/>
<enum name='kPasteboardFlavorSystemTranslated' value64='256'/>
<enum name='kPasteboardModified' value64='1'/>
<enum name='kPasteboardStandardLocationTrash' value64='1953657704'/>
<enum name='kPasteboardStandardLocationUnknown' value64='1970170734'/>
<enum name='kPlotIconRefNoImage' value64='2'/>
<enum name='kPlotIconRefNoMask' value64='4'/>
<enum name='kPlotIconRefNormalFlags' value64='0'/>
<enum name='kProcessDictionaryIncludeAllInformationMask' value64='-1'/>
<enum name='kProcessTransformToBackgroundApplication' value64='2'/>
<enum name='kProcessTransformToForegroundApplication' value64='1'/>
<enum name='kProcessTransformToUIElementApplication' value64='4'/>
<enum name='kQuitAtNormalTimeMask' value64='2'/>
<enum name='kQuitBeforeFBAsQuitMask' value64='4'/>
<enum name='kQuitBeforeNormalTimeMask' value64='1'/>
<enum name='kQuitBeforeShellQuitsMask' value64='8'/>
<enum name='kQuitBeforeTerminatorAppQuitsMask' value64='16'/>
<enum name='kQuitNeverMask' value64='32'/>
<enum name='kQuitNotQuitDuringInstallMask' value64='256'/>
<enum name='kQuitNotQuitDuringLogoutMask' value64='512'/>
<enum name='kQuitOptionsMask' value64='127'/>
<enum name='kSelectorAll1BitData' value64='16843009'/>
<enum name='kSelectorAll32BitData' value64='134219784'/>
<enum name='kSelectorAll4BitData' value64='33686018'/>
<enum name='kSelectorAll8BitData' value64='67372036'/>
<enum name='kSelectorAllAvailableData' value64='4294967295'/>
<enum name='kSelectorAllHugeData' value64='4278190080'/>
<enum name='kSelectorAllLargeData' value64='255'/>
<enum name='kSelectorAllMiniData' value64='16711680'/>
<enum name='kSelectorAllSmallData' value64='65280'/>
<enum name='kSelectorHuge1Bit' value64='16777216'/>
<enum name='kSelectorHuge32Bit' value64='134217728'/>
<enum name='kSelectorHuge4Bit' value64='33554432'/>
<enum name='kSelectorHuge8Bit' value64='67108864'/>
<enum name='kSelectorHuge8BitMask' value64='268435456'/>
<enum name='kSelectorLarge1Bit' value64='1'/>
<enum name='kSelectorLarge32Bit' value64='8'/>
<enum name='kSelectorLarge4Bit' value64='2'/>
<enum name='kSelectorLarge8Bit' value64='4'/>
<enum name='kSelectorLarge8BitMask' value64='16'/>
<enum name='kSelectorMini1Bit' value64='65536'/>
<enum name='kSelectorMini4Bit' value64='131072'/>
<enum name='kSelectorMini8Bit' value64='262144'/>
<enum name='kSelectorSmall1Bit' value64='256'/>
<enum name='kSelectorSmall32Bit' value64='2048'/>
<enum name='kSelectorSmall4Bit' value64='512'/>
<enum name='kSelectorSmall8Bit' value64='1024'/>
<enum name='kSelectorSmall8BitMask' value64='4096'/>
<enum name='kSetFrontProcessCausedByUser' value64='2'/>
<enum name='kSetFrontProcessFrontWindowOnly' value64='1'/>
<enum name='kSystemProcess' value64='1'/>
<enum name='kTransformDisabled' value64='1'/>
<enum name='kTransformLabel1' value64='256'/>
<enum name='kTransformLabel2' value64='512'/>
<enum name='kTransformLabel3' value64='768'/>
<enum name='kTransformLabel4' value64='1024'/>
<enum name='kTransformLabel5' value64='1280'/>
<enum name='kTransformLabel6' value64='1536'/>
<enum name='kTransformLabel7' value64='1792'/>
<enum name='kTransformNone' value64='0'/>
<enum name='kTransformOffline' value64='2'/>
<enum name='kTransformOpen' value64='3'/>
<enum name='kTransformSelected' value64='16384'/>
<enum name='kTransformSelectedDisabled' value64='16385'/>
<enum name='kTransformSelectedOffline' value64='16386'/>
<enum name='kTransformSelectedOpen' value64='16387'/>
<enum name='kTranslationDataTranslation' value64='1'/>
<enum name='kTranslationFileTranslation' value64='2'/>
<enum name='kUAZoomFocusTypeInsertionPoint' value64='1'/>
<enum name='kUAZoomFocusTypeOther' value64='0'/>
<enum name='keyAEAttaching' value64='1098146664'/>
<enum name='keyEvtDev' value64='7'/>
<enum name='keyICEditPreferenceDestination' value64='1684370292'/>
<enum name='launchAllow24Bit' value64='256'/>
<enum name='launchContinue' value64='16384'/>
<enum name='launchDontSwitch' value64='512'/>
<enum name='launchInhibitDaemon' value64='128'/>
<enum name='launchNoFileFlags' value64='2048'/>
<enum name='launchUseMinimum' value64='1024'/>
<enum name='macDev' value64='8'/>
<enum name='mode32BitCompatible' value64='128'/>
<enum name='modeCanBackground' value64='4096'/>
<enum name='modeControlPanel' value64='524288'/>
<enum name='modeDeskAccessory' value64='131072'/>
<enum name='modeDisplayManagerAware' value64='4'/>
<enum name='modeDoesActivateOnFGSwitch' value64='2048'/>
<enum name='modeGetAppDiedMsg' value64='256'/>
<enum name='modeGetFrontClicks' value64='512'/>
<enum name='modeHighLevelEventAware' value64='64'/>
<enum name='modeLaunchDontSwitch' value64='262144'/>
<enum name='modeLocalAndRemoteHLEvents' value64='32'/>
<enum name='modeMultiLaunch' value64='65536'/>
<enum name='modeNeedSuspendResume' value64='16384'/>
<enum name='modeOnlyBackground' value64='1024'/>
<enum name='modeReserved' value64='16777216'/>
<enum name='modeStationeryAware' value64='16'/>
<enum name='modeUseTextEditServices' value64='8'/>
<enum name='noPasteboardPromiseKeeperErr' value64='-25136'/>
<enum name='notPasteboardOwnerErr' value64='-25135'/>
<enum name='nulDev' value64='3'/>
<enum name='pasteDev' value64='12'/>
<enum name='svAll1BitData' value64='16843009'/>
<enum name='svAll4BitData' value64='33686018'/>
<enum name='svAll8BitData' value64='67372036'/>
<enum name='svAllAvailableData' value64='4294967295'/>
<enum name='svAllLargeData' value64='255'/>
<enum name='svAllMiniData' value64='16711680'/>
<enum name='svAllSmallData' value64='65280'/>
<enum name='svLarge1Bit' value64='1'/>
<enum name='svLarge4Bit' value64='2'/>
<enum name='svLarge8Bit' value64='4'/>
<enum name='svMini1Bit' value64='65536'/>
<enum name='svMini4Bit' value64='131072'/>
<enum name='svMini8Bit' value64='262144'/>
<enum name='svSmall1Bit' value64='256'/>
<enum name='svSmall4Bit' value64='512'/>
<enum name='svSmall8Bit' value64='1024'/>
<enum name='ttDisabled' value64='1'/>
<enum name='ttLabel1' value64='256'/>
<enum name='ttLabel2' value64='512'/>
<enum name='ttLabel3' value64='768'/>
<enum name='ttLabel4' value64='1024'/>
<enum name='ttLabel5' value64='1280'/>
<enum name='ttLabel6' value64='1536'/>
<enum name='ttLabel7' value64='1792'/>
<enum name='ttNone' value64='0'/>
<enum name='ttOffline' value64='2'/>
<enum name='ttOpen' value64='3'/>
<enum name='ttSelected' value64='16384'/>
<enum name='ttSelectedDisabled' value64='16385'/>
<enum name='ttSelectedOffline' value64='16386'/>
<enum name='ttSelectedOpen' value64='16387'/>
<enum name='undoDev' value64='9'/>
<enum name='updateDev' value64='4'/>
<function name='AXAPIEnabled'>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='AXIsProcessTrusted'>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='AXIsProcessTrustedWithOptions'>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='AXMakeProcessTrusted'>
<arg declared_type64='CFStringRef _Nonnull' name='executablePath' type64='^{__CFString=}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXObserverAddNotification'>
<arg declared_type64='AXObserverRef _Nonnull' name='observer' type64='^{__AXObserver=}'/>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='notification' type64='^{__CFString=}'/>
<arg declared_type64='void * _Nullable' name='refcon' type64='^v'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXObserverCreate'>
<arg declared_type64='pid_t' name='application' type64='i'/>
<arg declared_type64='AXObserverCallback _Nonnull' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='AXObserverRef _Nonnull' type64='^{__AXObserver=}'/>
<arg declared_type64='AXUIElementRef _Nonnull' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='AXObserverRef _Nullable * _Nonnull' name='outObserver' type64='^^{__AXObserver}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXObserverCreateWithInfoCallback'>
<arg declared_type64='pid_t' name='application' type64='i'/>
<arg declared_type64='AXObserverCallbackWithInfo _Nonnull' function_pointer='true' name='callback' type64='^?'>
<arg declared_type64='AXObserverRef _Nonnull' type64='^{__AXObserver=}'/>
<arg declared_type64='AXUIElementRef _Nonnull' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' type64='^{__CFDictionary=}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='AXObserverRef _Nullable * _Nonnull' name='outObserver' type64='^^{__AXObserver}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXObserverGetRunLoopSource'>
<arg declared_type64='AXObserverRef _Nonnull' name='observer' type64='^{__AXObserver=}'/>
<retval declared_type64='CFRunLoopSourceRef _Nonnull' type64='^{__CFRunLoopSource=}'/>
</function>
<function name='AXObserverGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='AXObserverRemoveNotification'>
<arg declared_type64='AXObserverRef _Nonnull' name='observer' type64='^{__AXObserver=}'/>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='notification' type64='^{__CFString=}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyActionDescription'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='action' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='description' type64='^^{__CFString}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyActionNames'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='names' type64='^^{__CFArray}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyAttributeNames'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='names' type64='^^{__CFArray}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyAttributeValue'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attribute' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nullable * _Nonnull' name='value' type64='^^v'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyAttributeValues'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attribute' type64='^{__CFString=}'/>
<arg declared_type64='CFIndex' name='index' type64='q'/>
<arg declared_type64='CFIndex' name='maxValues' type64='q'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='values' type64='^^{__CFArray}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyElementAtPosition'>
<arg declared_type64='AXUIElementRef _Nonnull' name='application' type64='^{__AXUIElement=}'/>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='AXUIElementRef _Nullable * _Nonnull' name='element' type64='^^{__AXUIElement}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyMultipleAttributeValues'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFArrayRef _Nonnull' name='attributes' type64='^{__CFArray=}'/>
<arg declared_type64='AXCopyMultipleAttributeOptions' name='options' type64='I'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='values' type64='^^{__CFArray}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyParameterizedAttributeNames'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='names' type64='^^{__CFArray}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCopyParameterizedAttributeValue'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='parameterizedAttribute' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='parameter' type64='@'/>
<arg declared_type64='CFTypeRef _Nullable * _Nonnull' name='result' type64='^^v'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementCreateApplication'>
<arg declared_type64='pid_t' name='pid' type64='i'/>
<retval declared_type64='AXUIElementRef _Nonnull' type64='^{__AXUIElement=}'/>
</function>
<function name='AXUIElementCreateSystemWide'>
<retval declared_type64='AXUIElementRef _Nonnull' type64='^{__AXUIElement=}'/>
</function>
<function name='AXUIElementGetAttributeValueCount'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attribute' type64='^{__CFString=}'/>
<arg declared_type64='CFIndex * _Nonnull' name='count' type64='^q'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementGetPid'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='pid_t * _Nonnull' name='pid' type64='^i'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='AXUIElementIsAttributeSettable'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attribute' type64='^{__CFString=}'/>
<arg declared_type64='Boolean * _Nonnull' name='settable' type64='^B'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementPerformAction'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='action' type64='^{__CFString=}'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementPostKeyboardEvent'>
<arg declared_type64='AXUIElementRef _Nonnull' name='application' type64='^{__AXUIElement=}'/>
<arg declared_type64='CGCharCode' name='keyChar' type64='S'/>
<arg declared_type64='CGKeyCode' name='virtualKey' type64='S'/>
<arg declared_type64='Boolean' name='keyDown' type64='B'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementSetAttributeValue'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='attribute' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='value' type64='@'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXUIElementSetMessagingTimeout'>
<arg declared_type64='AXUIElementRef _Nonnull' name='element' type64='^{__AXUIElement=}'/>
<arg declared_type64='float' name='timeoutInSeconds' type64='f'/>
<retval declared_type64='AXError' type64='i'/>
</function>
<function name='AXValueCreate'>
<arg declared_type64='AXValueType' name='theType' type64='I'/>
<arg const='true' declared_type64='void * _Nonnull' name='valuePtr' type64='^v'/>
<retval declared_type64='AXValueRef _Nullable' type64='^{__AXValue=}'/>
</function>
<function name='AXValueGetType'>
<arg declared_type64='AXValueRef _Nonnull' name='value' type64='^{__AXValue=}'/>
<retval declared_type64='AXValueType' type64='I'/>
</function>
<function name='AXValueGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='AXValueGetValue'>
<arg declared_type64='AXValueRef _Nonnull' name='value' type64='^{__AXValue=}'/>
<arg declared_type64='AXValueType' name='theType' type64='I'/>
<arg declared_type64='void * _Nonnull' name='valuePtr' type64='^v'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='CopyProcessName'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='psn' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='CFStringRef*' name='name' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='DisposeIconActionUPP'>
<arg declared_type64='IconActionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ResType' type64='I'/>
<arg declared_type64='Handle*' type64='^^*'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeIconGetterUPP'>
<arg declared_type64='IconGetterUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ResType' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='Handle' type64='^*'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='ExitToShell'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='GetCurrentProcess'>
<arg declared_type64='ProcessSerialNumber*' name='PSN' type64='^{ProcessSerialNumber=II}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetFrontProcess'>
<arg declared_type64='ProcessSerialNumber*' name='PSN' type64='^{ProcessSerialNumber=II}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetIconFamilyData'>
<arg declared_type64='IconFamilyHandle' name='iconFamily' type64='^^{IconFamilyResource}'/>
<arg declared_type64='OSType' name='iconType' type64='I'/>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetIconRefVariant'>
<arg declared_type64='IconRef' name='inIconRef' type64='^{OpaqueIconRef=}'/>
<arg declared_type64='OSType' name='inVariant' type64='I'/>
<arg declared_type64='IconTransformType*' name='outTransform' type64='^s'/>
<retval declared_type64='IconRef' type64='^{OpaqueIconRef=}'/>
</function>
<function name='GetNextProcess'>
<arg declared_type64='ProcessSerialNumber*' name='PSN' type64='^{ProcessSerialNumber=II}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetProcessBundleLocation'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='psn' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='FSRef*' name='location' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetProcessForPID'>
<arg declared_type64='pid_t' name='pid' type64='i'/>
<arg declared_type64='ProcessSerialNumber*' name='psn' type64='^{ProcessSerialNumber=II}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='GetProcessInformation'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='PSN' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='ProcessInfoRec*' name='info' type64='^{ProcessInfoRec=I*{ProcessSerialNumber=II}III*II{ProcessSerialNumber=II}II^{FSRef}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetProcessPID'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='psn' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='pid_t*' name='pid' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeContainsPoint'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg const='true' declared_type64='CGPoint*' name='inPoint' type64='^{CGPoint=dd}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='HIShapeCreateCopy'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<retval already_retained='true' declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateDifference'>
<arg declared_type64='HIShapeRef' name='inShape1' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inShape2' type64='^{__HIShape=}'/>
<retval already_retained='true' declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateEmpty'>
<retval already_retained='true' declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateIntersection'>
<arg declared_type64='HIShapeRef' name='inShape1' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inShape2' type64='^{__HIShape=}'/>
<retval already_retained='true' declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateMutable'>
<retval already_retained='true' declared_type64='HIMutableShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateMutableCopy'>
<arg declared_type64='HIShapeRef' name='inOrig' type64='^{__HIShape=}'/>
<retval already_retained='true' declared_type64='HIMutableShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateMutableWithRect'>
<arg const='true' declared_type64='CGRect*' name='inRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval already_retained='true' declared_type64='HIMutableShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateUnion'>
<arg declared_type64='HIShapeRef' name='inShape1' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inShape2' type64='^{__HIShape=}'/>
<retval already_retained='true' declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateWithQDRgn'>
<arg declared_type64='RgnHandle' name='inRgn' type64='^{OpaqueRgnHandle=}'/>
<retval already_retained='true' declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateWithRect'>
<arg const='true' declared_type64='CGRect*' name='inRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval already_retained='true' declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeCreateXor'>
<arg declared_type64='HIShapeRef' name='inShape1' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inShape2' type64='^{__HIShape=}'/>
<retval already_retained='true' declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='HIShapeDifference'>
<arg declared_type64='HIShapeRef' name='inShape1' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inShape2' type64='^{__HIShape=}'/>
<arg declared_type64='HIMutableShapeRef' name='outResult' type64='^{__HIShape=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeEnumerate'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg declared_type64='OptionBits' name='inOptions' type64='I'/>
<arg declared_type64='HIShapeEnumerateProcPtr' function_pointer='true' name='inProc' type64='^?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
<arg const='true' declared_type64='CGRect*' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void*' name='inRefcon' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeGetAsQDRgn'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg declared_type64='RgnHandle' name='outRgn' type64='^{OpaqueRgnHandle=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeGetBounds'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg declared_type64='CGRect*' name='outRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect*' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='HIShapeGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='HIShapeInset'>
<arg declared_type64='HIMutableShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg declared_type64='CGFloat' name='inDX' type64='d'/>
<arg declared_type64='CGFloat' name='inDY' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeIntersect'>
<arg declared_type64='HIShapeRef' name='inShape1' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inShape2' type64='^{__HIShape=}'/>
<arg declared_type64='HIMutableShapeRef' name='outResult' type64='^{__HIShape=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeIntersectsRect'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg const='true' declared_type64='CGRect*' name='inRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='HIShapeIsEmpty'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='HIShapeIsRectangular'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='HIShapeOffset'>
<arg declared_type64='HIMutableShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg declared_type64='CGFloat' name='inDX' type64='d'/>
<arg declared_type64='CGFloat' name='inDY' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeReplacePathInCGContext'>
<arg declared_type64='HIShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg declared_type64='CGContextRef' name='inContext' type64='^{CGContext=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeSetEmpty'>
<arg declared_type64='HIMutableShapeRef' name='inShape' type64='^{__HIShape=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeSetWithShape'>
<arg declared_type64='HIMutableShapeRef' name='inDestShape' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inSrcShape' type64='^{__HIShape=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeUnion'>
<arg declared_type64='HIShapeRef' name='inShape1' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inShape2' type64='^{__HIShape=}'/>
<arg declared_type64='HIMutableShapeRef' name='outResult' type64='^{__HIShape=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeUnionWithRect'>
<arg declared_type64='HIMutableShapeRef' name='inShape' type64='^{__HIShape=}'/>
<arg const='true' declared_type64='CGRect*' name='inRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='HIShapeXor'>
<arg declared_type64='HIShapeRef' name='inShape1' type64='^{__HIShape=}'/>
<arg declared_type64='HIShapeRef' name='inShape2' type64='^{__HIShape=}'/>
<arg declared_type64='HIMutableShapeRef' name='outResult' type64='^{__HIShape=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICAddMapEntry'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Handle' name='entries' type64='^*'/>
<arg const='true' declared_type64='ICMapEntry*' name='entry' type64='^{ICMapEntry=sssIIIi[256C][256C][256C][256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICAddProfile'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ICProfileID' name='prototypeID' type64='i'/>
<arg declared_type64='ICProfileID*' name='newID' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICBegin'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ICPerm' name='perm' type64='C'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICCountMapEntries'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Handle' name='entries' type64='^*'/>
<arg declared_type64='long*' name='count' type64='^q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICCountPref'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='long*' name='count' type64='^q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICCountProfiles'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='long*' name='count' type64='^q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICCreateGURLEvent'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='OSType' name='helperCreator' type64='I'/>
<arg declared_type64='Handle' name='urlH' type64='^*'/>
<arg declared_type64='AppleEvent*' name='theEvent' type64='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICDeleteMapEntry'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Handle' name='entries' type64='^*'/>
<arg declared_type64='long' name='pos' type64='q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICDeletePref'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='key' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICDeleteProfile'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ICProfileID' name='thisID' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICEditPreferences'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='key' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICEnd'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICFindPrefHandle'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='key' type64='*'/>
<arg declared_type64='ICAttr*' name='attr' type64='^I'/>
<arg declared_type64='Handle' name='prefh' type64='^*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetConfigName'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Boolean' name='longname' type64='B'/>
<arg declared_type64='unsigned char*' name='name' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetCurrentProfile'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ICProfileID*' name='currentID' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetDefaultPref'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='key' type64='*'/>
<arg declared_type64='Handle' name='prefH' type64='^*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetIndMapEntry'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Handle' name='entries' type64='^*'/>
<arg declared_type64='long' name='index' type64='q'/>
<arg declared_type64='long*' name='pos' type64='^q'/>
<arg declared_type64='ICMapEntry*' name='entry' type64='^{ICMapEntry=sssIIIi[256C][256C][256C][256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetIndPref'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='long' name='index' type64='q'/>
<arg declared_type64='unsigned char*' name='key' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetIndProfile'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='long' name='index' type64='q'/>
<arg declared_type64='ICProfileID*' name='thisID' type64='^i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetMapEntry'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Handle' name='entries' type64='^*'/>
<arg declared_type64='long' name='pos' type64='q'/>
<arg declared_type64='ICMapEntry*' name='entry' type64='^{ICMapEntry=sssIIIi[256C][256C][256C][256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetPerm'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ICPerm*' name='perm' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetPref'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='key' type64='*'/>
<arg declared_type64='ICAttr*' name='attr' type64='^I'/>
<arg declared_type64='void*' name='buf' type64='^v'/>
<arg declared_type64='long*' name='size' type64='^q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetPrefHandle'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='key' type64='*'/>
<arg declared_type64='ICAttr*' name='attr' type64='^I'/>
<arg declared_type64='Handle*' name='prefh' type64='^^*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetProfileName'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ICProfileID' name='thisID' type64='i'/>
<arg declared_type64='unsigned char*' name='name' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetSeed'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='long*' name='seed' type64='^q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICGetVersion'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='long' name='whichVersion' type64='q'/>
<arg declared_type64='UInt32*' name='version' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICLaunchURL'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='hint' type64='*'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<arg declared_type64='long' name='len' type64='q'/>
<arg declared_type64='long*' name='selStart' type64='^q'/>
<arg declared_type64='long*' name='selEnd' type64='^q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICMapEntriesFilename'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Handle' name='entries' type64='^*'/>
<arg declared_type64='ConstStr255Param' name='filename' type64='*'/>
<arg declared_type64='ICMapEntry*' name='entry' type64='^{ICMapEntry=sssIIIi[256C][256C][256C][256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICMapEntriesTypeCreator'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Handle' name='entries' type64='^*'/>
<arg declared_type64='OSType' name='fType' type64='I'/>
<arg declared_type64='OSType' name='fCreator' type64='I'/>
<arg declared_type64='ConstStr255Param' name='filename' type64='*'/>
<arg declared_type64='ICMapEntry*' name='entry' type64='^{ICMapEntry=sssIIIi[256C][256C][256C][256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICMapFilename'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='filename' type64='*'/>
<arg declared_type64='ICMapEntry*' name='entry' type64='^{ICMapEntry=sssIIIi[256C][256C][256C][256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICMapTypeCreator'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='OSType' name='fType' type64='I'/>
<arg declared_type64='OSType' name='fCreator' type64='I'/>
<arg declared_type64='ConstStr255Param' name='filename' type64='*'/>
<arg declared_type64='ICMapEntry*' name='entry' type64='^{ICMapEntry=sssIIIi[256C][256C][256C][256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICParseURL'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='hint' type64='*'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<arg declared_type64='long' name='len' type64='q'/>
<arg declared_type64='long*' name='selStart' type64='^q'/>
<arg declared_type64='long*' name='selEnd' type64='^q'/>
<arg declared_type64='Handle' name='url' type64='^*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICSendGURLEvent'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='AppleEvent*' name='theEvent' type64='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICSetCurrentProfile'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ICProfileID' name='newID' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICSetMapEntry'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='Handle' name='entries' type64='^*'/>
<arg declared_type64='long' name='pos' type64='q'/>
<arg const='true' declared_type64='ICMapEntry*' name='entry' type64='^{ICMapEntry=sssIIIi[256C][256C][256C][256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICSetPref'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='key' type64='*'/>
<arg declared_type64='ICAttr' name='attr' type64='I'/>
<arg const='true' declared_type64='void*' name='buf' type64='^v'/>
<arg declared_type64='long' name='size' type64='q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICSetPrefHandle'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ConstStr255Param' name='key' type64='*'/>
<arg declared_type64='ICAttr' name='attr' type64='I'/>
<arg declared_type64='Handle' name='prefh' type64='^*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICSetProfileName'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<arg declared_type64='ICProfileID' name='thisID' type64='i'/>
<arg declared_type64='ConstStr255Param' name='name' type64='*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICStart'>
<arg declared_type64='ICInstance*' name='inst' type64='^^{OpaqueICInstance}'/>
<arg declared_type64='OSType' name='signature' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ICStop'>
<arg declared_type64='ICInstance' name='inst' type64='^{OpaqueICInstance=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='IconRefContainsCGPoint'>
<arg const='true' declared_type64='CGPoint*' name='testPt' type64='^{CGPoint=dd}'/>
<arg const='true' declared_type64='CGRect*' name='iconRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='IconAlignmentType' name='align' type64='s'/>
<arg declared_type64='IconServicesUsageFlags' name='iconServicesUsageFlags' type64='I'/>
<arg declared_type64='IconRef' name='theIconRef' type64='^{OpaqueIconRef=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='IconRefIntersectsCGRect'>
<arg const='true' declared_type64='CGRect*' name='testRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='CGRect*' name='iconRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='IconAlignmentType' name='align' type64='s'/>
<arg declared_type64='IconServicesUsageFlags' name='iconServicesUsageFlags' type64='I'/>
<arg declared_type64='IconRef' name='theIconRef' type64='^{OpaqueIconRef=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='IconRefToHIShape'>
<arg const='true' declared_type64='CGRect*' name='iconRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='IconAlignmentType' name='align' type64='s'/>
<arg declared_type64='IconServicesUsageFlags' name='iconServicesUsageFlags' type64='I'/>
<arg declared_type64='IconRef' name='theIconRef' type64='^{OpaqueIconRef=}'/>
<retval declared_type64='HIShapeRef' type64='^{__HIShape=}'/>
</function>
<function name='IconRefToIconFamily'>
<arg declared_type64='IconRef' name='theIconRef' type64='^{OpaqueIconRef=}'/>
<arg declared_type64='IconSelectorValue' name='whichIcons' type64='I'/>
<arg declared_type64='IconFamilyHandle*' name='iconFamily' type64='^^^{IconFamilyResource}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeIconActionUPP'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='Handle*' name='theIcon' type64='^^*'/>
<arg declared_type64='void*' name='yourDataPtr' type64='^v'/>
<arg declared_type64='IconActionUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ResType' type64='I'/>
<arg declared_type64='Handle*' type64='^^*'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeIconGetterUPP'>
<arg declared_type64='ResType' name='theType' type64='I'/>
<arg declared_type64='void*' name='yourDataPtr' type64='^v'/>
<arg declared_type64='IconGetterUPP' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='ResType' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='Handle' type64='^*'/>
</arg>
<retval declared_type64='Handle' type64='^*'/>
</function>
<function name='IsIconRefMaskEmpty'>
<arg declared_type64='IconRef' name='iconRef' type64='^{OpaqueIconRef=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='IsProcessVisible'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='psn' type64='^{ProcessSerialNumber=II}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='KillProcess'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='inProcess' type64='^{ProcessSerialNumber=II}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='LaunchApplication'>
<arg declared_type64='LaunchPBPtr' name='LaunchParams' type64='^{LaunchParamBlockRec=ISSISS^{FSRef}{ProcessSerialNumber=II}III^{AppParameters}}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='NewIconActionUPP'>
<arg declared_type64='IconActionProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ResType' type64='I'/>
<arg declared_type64='Handle*' type64='^^*'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</arg>
<retval declared_type64='IconActionUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ResType' type64='I'/>
<arg declared_type64='Handle*' type64='^^*'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</retval>
</function>
<function name='NewIconGetterUPP'>
<arg declared_type64='IconGetterProcPtr' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='ResType' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='Handle' type64='^*'/>
</arg>
<retval declared_type64='IconGetterUPP' function_pointer='true' type64='^?'>
<arg declared_type64='ResType' type64='I'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='Handle' type64='^*'/>
</retval>
</function>
<function name='PasteboardClear'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardCopyItemFlavorData'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='PasteboardItemID _Nonnull' name='inItem' type64='^v'/>
<arg declared_type64='CFStringRef _Nonnull' name='inFlavorType' type64='^{__CFString=}'/>
<arg declared_type64='CFDataRef _Nullable * _Nonnull' name='outData' type64='^^{__CFData}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardCopyItemFlavors'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='PasteboardItemID _Nonnull' name='inItem' type64='^v'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='outFlavorTypes' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardCopyName'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='outName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardCopyPasteLocation'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='CFURLRef _Nullable * _Nonnull' name='outPasteLocation' type64='^^{__CFURL}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardCreate'>
<arg declared_type64='CFStringRef _Nullable' name='inName' type64='^{__CFString=}'/>
<arg declared_type64='PasteboardRef _Nullable * _Nonnull' name='outPasteboard' type64='^^{OpaquePasteboardRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardGetItemCount'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='ItemCount * _Nonnull' name='outItemCount' type64='^Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardGetItemFlavorFlags'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='PasteboardItemID _Nonnull' name='inItem' type64='^v'/>
<arg declared_type64='CFStringRef _Nonnull' name='inFlavorType' type64='^{__CFString=}'/>
<arg declared_type64='PasteboardFlavorFlags * _Nonnull' name='outFlags' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardGetItemIdentifier'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='CFIndex' name='inIndex' type64='q'/>
<arg declared_type64='PasteboardItemID _Nullable * _Nonnull' name='outItem' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='PasteboardPutItemFlavor'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='PasteboardItemID _Nonnull' name='inItem' type64='^v'/>
<arg declared_type64='CFStringRef _Nonnull' name='inFlavorType' type64='^{__CFString=}'/>
<arg declared_type64='CFDataRef _Nullable' name='inData' type64='^{__CFData=}'/>
<arg declared_type64='PasteboardFlavorFlags' name='inFlags' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardResolvePromises'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardSetPasteLocation'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='inPasteLocation' type64='^{__CFURL=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardSetPromiseKeeper'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='PasteboardPromiseKeeperProcPtr _Nonnull' function_pointer='true' name='inPromiseKeeper' type64='^?'>
<arg declared_type64='PasteboardRef _Nonnull' type64='^{OpaquePasteboardRef=}'/>
<arg declared_type64='PasteboardItemID _Nonnull' type64='^v'/>
<arg declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
<arg declared_type64='void * _Nullable' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</arg>
<arg declared_type64='void * _Nullable' name='inContext' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PasteboardSynchronize'>
<arg declared_type64='PasteboardRef _Nonnull' name='inPasteboard' type64='^{OpaquePasteboardRef=}'/>
<retval declared_type64='PasteboardSyncFlags' type64='I'/>
</function>
<function name='PlotIconRefInContext'>
<arg declared_type64='CGContextRef' name='inContext' type64='^{CGContext=}'/>
<arg const='true' declared_type64='CGRect*' name='inRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='IconAlignmentType' name='inAlign' type64='s'/>
<arg declared_type64='IconTransformType' name='inTransform' type64='s'/>
<arg const='true' declared_type64='RGBColor*' name='inLabelColor' type64='^{RGBColor=SSS}'/>
<arg declared_type64='PlotIconRefFlags' name='inFlags' type64='I'/>
<arg declared_type64='IconRef' name='inIconRef' type64='^{OpaqueIconRef=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='ProcessInformationCopyDictionary'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='PSN' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='UInt32' name='infoToReturn' type64='I'/>
<retval already_retained='true' declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
</function>
<function name='SameProcess'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='PSN1' type64='^{ProcessSerialNumber=II}'/>
<arg const='true' declared_type64='ProcessSerialNumber*' name='PSN2' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='Boolean*' name='result' type64='^B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetFrontProcess'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='PSN' type64='^{ProcessSerialNumber=II}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetFrontProcessWithOptions'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='inProcess' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='OptionBits' name='inOptions' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='SetIconFamilyData'>
<arg declared_type64='IconFamilyHandle' name='iconFamily' type64='^^{IconFamilyResource}'/>
<arg declared_type64='OSType' name='iconType' type64='I'/>
<arg declared_type64='Handle' name='h' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='ShowHideProcess'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='psn' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='Boolean' name='visible' type64='B'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='TransformProcessType'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='psn' type64='^{ProcessSerialNumber=II}'/>
<arg declared_type64='ProcessApplicationTransformState' name='transformState' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TranslationCopyDestinationType'>
<arg declared_type64='TranslationRef' name='inTranslation' type64='^{OpaqueTranslationRef=}'/>
<arg declared_type64='CFStringRef*' name='outDestinationType' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TranslationCopySourceType'>
<arg declared_type64='TranslationRef' name='inTranslation' type64='^{OpaqueTranslationRef=}'/>
<arg declared_type64='CFStringRef*' name='outSourceType' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TranslationCreate'>
<arg declared_type64='CFStringRef' name='inSourceType' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='inDestinationType' type64='^{__CFString=}'/>
<arg declared_type64='TranslationFlags' name='inTranslationFlags' type64='I'/>
<arg declared_type64='TranslationRef*' name='outTranslation' type64='^^{OpaqueTranslationRef}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TranslationCreateWithSourceArray'>
<arg declared_type64='CFArrayRef' name='inSourceTypes' type64='^{__CFArray=}'/>
<arg declared_type64='TranslationFlags' name='inTranslationFlags' type64='I'/>
<arg declared_type64='CFArrayRef*' name='outDestinationTypes' type64='^^{__CFArray}'/>
<arg declared_type64='CFDictionaryRef*' name='outTranslations' type64='^^{__CFDictionary}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TranslationGetTranslationFlags'>
<arg declared_type64='TranslationRef' name='inTranslation' type64='^{OpaqueTranslationRef=}'/>
<arg declared_type64='TranslationFlags*' name='outTranslationFlags' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TranslationGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='TranslationPerformForData'>
<arg declared_type64='TranslationRef' name='inTranslation' type64='^{OpaqueTranslationRef=}'/>
<arg declared_type64='CFDataRef' name='inSourceData' type64='^{__CFData=}'/>
<arg declared_type64='CFDataRef*' name='outDestinationData' type64='^^{__CFData}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TranslationPerformForFile'>
<arg declared_type64='TranslationRef' name='inTranslation' type64='^{OpaqueTranslationRef=}'/>
<arg const='true' declared_type64='FSRef*' name='inSourceFile' type64='^{FSRef=[80C]}'/>
<arg const='true' declared_type64='FSRef*' name='inDestinationDirectory' type64='^{FSRef=[80C]}'/>
<arg declared_type64='CFStringRef' name='inDestinationName' type64='^{__CFString=}'/>
<arg declared_type64='FSRef*' name='outTranslatedFile' type64='^{FSRef=[80C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='TranslationPerformForURL'>
<arg declared_type64='TranslationRef' name='inTranslation' type64='^{OpaqueTranslationRef=}'/>
<arg declared_type64='CFURLRef' name='inSourceURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef' name='inDestinationURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef*' name='outTranslatedURL' type64='^^{__CFURL}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UAZoomChangeFocus'>
<arg const='true' declared_type64='CGRect*' name='inRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type64='CGRect*' name='inHighlightRect' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='UAZoomChangeFocusType' name='inType' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='UAZoomEnabled'>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='WakeUpProcess'>
<arg const='true' declared_type64='ProcessSerialNumber*' name='PSN' type64='^{ProcessSerialNumber=II}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function_alias name='MacGetCurrentProcess' original='GetCurrentProcess'/>
<cftype gettypeid_func='CGImageDestinationGetTypeID' name='CGImageDestinationRef' type64='^{CGImageDestination=}'/>
<cftype gettypeid_func='CGImageMetadataGetTypeID' name='CGImageMetadataRef' type64='^{CGImageMetadata=}'/>
<cftype gettypeid_func='CGImageMetadataTagGetTypeID' name='CGImageMetadataTagRef' type64='^{CGImageMetadataTag=}'/>
<cftype gettypeid_func='CGImageSourceGetTypeID' name='CGImageSourceRef' type64='^{CGImageSource=}'/>
<cftype gettypeid_func='CGImageMetadataGetTypeID' name='CGMutableImageMetadataRef' type64='^{CGImageMetadata=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCFErrorDomainCGImageMetadata' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAnimationDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAnimationLoopCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAnimationStartIndex' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataInfoData' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataInfoDataDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataInfoMetadata' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataTypeDepth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataTypeDisparity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataTypeHDRGainMap' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataTypePortraitEffectsMatte' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataTypeSemanticSegmentationGlassesMatte' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataTypeSemanticSegmentationHairMatte' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataTypeSemanticSegmentationSkinMatte' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageAuxiliaryDataTypeSemanticSegmentationTeethMatte' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationBackgroundColor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationDateTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationEmbedThumbnail' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationImageMaxPixelSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationLossyCompressionQuality' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationMergeMetadata' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationMetadata' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationOptimizeColorForSharing' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationOrientation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageDestinationPreserveGainMap' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataEnumerateRecursively' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceDublinCore' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceExif' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceExifAux' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceExifEX' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceIPTCCore' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceIPTCExtension' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespacePhotoshop' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceTIFF' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceXMPBasic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataNamespaceXMPRights' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixDublinCore' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixExif' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixExifAux' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixExifEX' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixIPTCCore' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixIPTCExtension' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixPhotoshop' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixTIFF' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixXMPBasic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataPrefixXMPRights' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataShouldExcludeGPS' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageMetadataShouldExcludeXMP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageProperty8BIMDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageProperty8BIMLayerNames' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageProperty8BIMVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyAPNGCanvasPixelHeight' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyAPNGCanvasPixelWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyAPNGDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyAPNGFrameInfoArray' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyAPNGLoopCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyAPNGUnclampedDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyAuxiliaryData' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyAuxiliaryDataType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyBytesPerRow' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFCameraSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFContinuousDrive' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFFirmware' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFFlashExposureComp' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFFocusMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFImageFileName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFImageName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFImageSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFLensMaxMM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFLensMinMM' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFLensModel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFMeasuredEV' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFMeteringMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFOwnerName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFRecordID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFReleaseMethod' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFReleaseTiming' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFSelfTimingTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFShootingMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyCIFFWhiteBalanceIndex' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyColorModel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyColorModelCMYK' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyColorModelGray' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyColorModelLab' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyColorModelRGB' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGActiveArea' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGAnalogBalance' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGAntiAliasStrength' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGAsShotICCProfile' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGAsShotNeutral' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGAsShotPreProfileMatrix' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGAsShotProfileName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGAsShotWhiteXY' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBackwardVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBaselineExposure' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBaselineExposureOffset' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBaselineNoise' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBaselineSharpness' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBayerGreenSplit' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBestQualityScale' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBlackLevel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBlackLevelDeltaH' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBlackLevelDeltaV' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGBlackLevelRepeatDim' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCFALayout' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCFAPlaneColor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCalibrationIlluminant1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCalibrationIlluminant2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCameraCalibration1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCameraCalibration2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCameraCalibrationSignature' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCameraSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGChromaBlurRadius' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGColorMatrix1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGColorMatrix2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGColorimetricReference' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCurrentICCProfile' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGCurrentPreProfileMatrix' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGDefaultBlackRender' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGDefaultCropOrigin' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGDefaultCropSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGDefaultScale' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGDefaultUserCrop' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGExtraCameraProfiles' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGFixVignetteRadial' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGForwardMatrix1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGForwardMatrix2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGLensInfo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGLinearResponseLimit' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGLinearizationTable' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGLocalizedCameraModel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGMakerNoteSafety' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGMaskedAreas' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGNewRawImageDigest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGNoiseProfile' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGNoiseReductionApplied' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOpcodeList1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOpcodeList2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOpcodeList3' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOriginalBestQualityFinalSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOriginalDefaultCropSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOriginalDefaultFinalSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOriginalRawFileData' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOriginalRawFileDigest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGOriginalRawFileName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGPreviewApplicationName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGPreviewApplicationVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGPreviewColorSpace' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGPreviewDateTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGPreviewSettingsDigest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGPreviewSettingsName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGPrivateData' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileCalibrationSignature' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileCopyright' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileEmbedPolicy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileHueSatMapData1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileHueSatMapData2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileHueSatMapDims' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileHueSatMapEncoding' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileLookTableData' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileLookTableDims' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileLookTableEncoding' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGProfileToneCurve' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGRawDataUniqueID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGRawImageDigest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGRawToPreviewGain' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGReductionMatrix1' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGReductionMatrix2' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGRowInterleaveFactor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGShadowScale' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGSubTileBlockSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGUniqueCameraModel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGWarpFisheye' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGWarpRectilinear' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDNGWhiteLevel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDPIHeight' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDPIWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyDepth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifApertureValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxFirmware' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxFlashCompensation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxImageNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxLensID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxLensInfo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxLensModel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxLensSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxOwnerName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifAuxSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifBodySerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifBrightnessValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifCFAPattern' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifCameraOwnerName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifColorSpace' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifComponentsConfiguration' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifCompositeImage' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifCompressedBitsPerPixel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifContrast' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifCustomRendered' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifDateTimeDigitized' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifDateTimeOriginal' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifDeviceSettingDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifDigitalZoomRatio' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifExposureBiasValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifExposureIndex' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifExposureMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifExposureProgram' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifExposureTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFileSource' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFlash' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFlashEnergy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFlashPixVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFocalLenIn35mmFilm' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFocalLength' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFocalPlaneResolutionUnit' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFocalPlaneXResolution' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifFocalPlaneYResolution' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifGainControl' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifGamma' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifISOSpeed' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifISOSpeedLatitudeyyy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifISOSpeedLatitudezzz' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifISOSpeedRatings' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifImageUniqueID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifLensMake' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifLensModel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifLensSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifLensSpecification' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifLightSource' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifMakerNote' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifMaxApertureValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifMeteringMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifOECF' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifOffsetTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifOffsetTimeDigitized' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifOffsetTimeOriginal' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifPixelXDimension' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifPixelYDimension' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifRecommendedExposureIndex' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifRelatedSoundFile' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSaturation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSceneCaptureType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSceneType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSensingMethod' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSensitivityType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSharpness' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifShutterSpeedValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSourceExposureTimesOfCompositeImage' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSourceImageNumberOfCompositeImage' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSpatialFrequencyResponse' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSpectralSensitivity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifStandardOutputSensitivity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSubjectArea' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSubjectDistRange' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSubjectDistance' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSubjectLocation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSubsecTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSubsecTimeDigitized' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSubsecTimeOrginal' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifSubsecTimeOriginal' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifUserComment' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyExifWhiteBalance' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyFileContentsDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyFileSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFCanvasPixelHeight' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFCanvasPixelWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFFrameInfoArray' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFHasGlobalColorMap' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFImageColorMap' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFLoopCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGIFUnclampedDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSAltitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSAltitudeRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSAreaInformation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDOP' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDateStamp' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDestBearing' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDestBearingRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDestDistance' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDestDistanceRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDestLatitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDestLatitudeRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDestLongitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDestLongitudeRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSDifferental' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSHPositioningError' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSImgDirection' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSImgDirectionRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSLatitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSLatitudeRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSLongitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSLongitudeRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSMapDatum' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSMeasureMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSProcessingMethod' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSSatellites' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSSpeed' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSSpeedRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSStatus' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSTimeStamp' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSTrack' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSTrackRef' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyGPSVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHEICSCanvasPixelHeight' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHEICSCanvasPixelWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHEICSDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHEICSDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHEICSFrameInfoArray' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHEICSLoopCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHEICSUnclampedDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHasAlpha' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyHeight' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCActionAdvised' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCByline' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCBylineTitle' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCCaptionAbstract' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCCategory' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCCity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContact' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContactInfoAddress' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContactInfoCity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContactInfoCountry' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContactInfoEmails' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContactInfoPhones' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContactInfoPostalCode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContactInfoStateProvince' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContactInfoWebURLs' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContentLocationCode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCContentLocationName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCCopyrightNotice' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCCountryPrimaryLocationCode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCCountryPrimaryLocationName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCCreatorContactInfo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCCredit' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCDateCreated' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCDigitalCreationDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCDigitalCreationTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCEditStatus' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCEditorialUpdate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExpirationDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExpirationTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAboutCvTerm' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAboutCvTermCvId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAboutCvTermId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAboutCvTermName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAboutCvTermRefinedAbout' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAddlModelInfo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkCircaDateCreated' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkContentDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkContributionDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkCopyrightNotice' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkCopyrightOwnerID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkCopyrightOwnerName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkCreator' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkCreatorID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkDateCreated' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkLicensorID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkLicensorName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkOrObject' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkPhysicalDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkSource' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkSourceInvURL' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkSourceInventoryNo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkStylePeriod' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtArtworkTitle' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAudioBitrate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAudioBitrateMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtAudioChannelCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtCircaDateCreated' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtContainerFormat' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtContainerFormatIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtContainerFormatName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtContributor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtContributorIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtContributorName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtContributorRole' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtControlledVocabularyTerm' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtCopyrightYear' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtCreator' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtCreatorIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtCreatorName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtCreatorRole' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreen' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreenRegion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreenRegionD' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreenRegionH' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreenRegionText' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreenRegionUnit' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreenRegionW' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreenRegionX' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDataOnScreenRegionY' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDigitalImageGUID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDigitalSourceFileType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDigitalSourceType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDopesheet' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDopesheetLink' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDopesheetLinkLink' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtDopesheetLinkLinkQualifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEmbdEncRightsExpr' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEmbeddedEncodedRightsExpr' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprLangID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEpisode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEpisodeIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEpisodeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEpisodeNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtEvent' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtExternalMetadataLink' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtFeedIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtGenre' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtGenreCvId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtGenreCvTermId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtGenreCvTermName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtGenreCvTermRefinedAbout' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtHeadline' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtIPTCLastEdited' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLinkedEncRightsExpr' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLinkedEncodedRightsExpr' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLinkedEncodedRightsExprLangID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLinkedEncodedRightsExprType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationCity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationCountryCode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationCountryName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationCreated' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationGPSAltitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationGPSLatitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationGPSLongitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationLocationId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationLocationName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationProvinceState' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationShown' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationSublocation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtLocationWorldRegion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtMaxAvailHeight' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtMaxAvailWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtModelAge' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtOrganisationInImageCode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtOrganisationInImageName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonHeard' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonHeardIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonHeardName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImage' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageCharacteristic' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageCvTermCvId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageCvTermId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageCvTermName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageCvTermRefinedAbout' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPersonInImageWDetails' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtProductInImage' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtProductInImageDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtProductInImageGTIN' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtProductInImageName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPublicationEvent' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPublicationEventDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPublicationEventIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtPublicationEventName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRating' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRatingRegion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionCity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionCountryCode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionCountryName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionGPSAltitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionGPSLatitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionGPSLongitude' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionLocationId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionLocationName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionProvinceState' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionSublocation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingRegionWorldRegion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingScaleMaxValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingScaleMinValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingSourceLink' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingValue' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRatingValueLogoLink' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRegistryEntryRole' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRegistryID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRegistryItemID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtRegistryOrganisationID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtReleaseReady' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSeason' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSeasonIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSeasonName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSeasonNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSeries' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSeriesIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSeriesName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtShownEvent' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtShownEventIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtShownEventName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtStorylineIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtStreamReady' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtStylePeriod' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSupplyChainSource' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSupplyChainSourceIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtSupplyChainSourceName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtTemporalCoverage' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtTemporalCoverageFrom' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtTemporalCoverageTo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtTranscript' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtTranscriptLink' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtTranscriptLinkLink' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtTranscriptLinkLinkQualifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVideoBitrate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVideoBitrateMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVideoDisplayAspectRatio' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVideoEncodingProfile' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVideoShotType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVideoShotTypeIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVideoShotTypeName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVideoStreamsCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtVisualColor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtWorkflowTag' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtWorkflowTagCvId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtWorkflowTagCvTermId' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtWorkflowTagCvTermName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCExtWorkflowTagCvTermRefinedAbout' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCFixtureIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCHeadline' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCImageOrientation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCImageType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCKeywords' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCLanguageIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCObjectAttributeReference' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCObjectCycle' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCObjectName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCObjectTypeReference' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCOriginalTransmissionReference' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCOriginatingProgram' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCProgramVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCProvinceState' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCReferenceDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCReferenceNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCReferenceService' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCReleaseDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCReleaseTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCRightsUsageTerms' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCScene' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCSource' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCSpecialInstructions' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCStarRating' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCSubLocation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCSubjectReference' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCSupplementalCategory' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCTimeCreated' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCUrgency' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIPTCWriterEditor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyImageCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyImages' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIsFloat' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyIsIndexed' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyJFIFDensityUnit' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyJFIFDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyJFIFIsProgressive' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyJFIFVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyJFIFXDensity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyJFIFYDensity' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerAppleDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonAspectRatioInfo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonCameraSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonContinuousDrive' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonFirmware' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonFlashExposureComp' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonImageSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonLensModel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerCanonOwnerName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerFujiDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerMinoltaDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonCameraSerialNumber' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonColorMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonDigitalZoom' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonFlashExposureComp' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonFlashSetting' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonFocusDistance' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonFocusMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonISOSelection' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonISOSetting' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonImageAdjustment' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonLensAdapter' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonLensInfo' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonLensType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonQuality' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonSharpenMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonShootingMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonShutterCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerNikonWhiteBalanceMode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerOlympusDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyMakerPentaxDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyNamedColorSpace' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyOpenEXRAspectRatio' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyOpenEXRDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyOrientation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGAuthor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGChromaticities' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGComment' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGCompressionFilter' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGCopyright' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGCreationTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGDisclaimer' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGGamma' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGInterlaceType' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGModificationTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGSoftware' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGSource' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGTitle' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGWarning' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGXPixelsPerMeter' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGYPixelsPerMeter' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPNGsRGBIntent' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPixelFormat' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPixelHeight' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPixelWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyPrimaryImage' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyProfileName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyRawDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTGACompression' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTGADictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFArtist' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFCompression' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFCopyright' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFDateTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFDocumentName' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFHostComputer' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFImageDescription' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFMake' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFModel' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFOrientation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFPhotometricInterpretation' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFPrimaryChromaticities' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFResolutionUnit' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFSoftware' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFTileLength' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFTileWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFTransferFunction' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFWhitePoint' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFXResolution' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyTIFFYResolution' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyThumbnailImages' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyWebPCanvasPixelHeight' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyWebPCanvasPixelWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyWebPDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyWebPDictionary' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyWebPFrameInfoArray' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyWebPLoopCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyWebPUnclampedDelayTime' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImagePropertyWidth' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceCreateThumbnailFromImageAlways' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceCreateThumbnailFromImageIfAbsent' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceCreateThumbnailWithTransform' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceShouldAllowFloat' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceShouldCache' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceShouldCacheImmediately' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceSubsampleFactor' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceThumbnailMaxPixelSize' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kCGImageSourceTypeIdentifierHint' type64='^{__CFString=}'/>
<enum name='IIO_HAS_IOSURFACE' value64='1'/>
<enum name='IMAGEIO_PNG_ALL_FILTERS' value64='248'/>
<enum name='IMAGEIO_PNG_FILTER_AVG' value64='64'/>
<enum name='IMAGEIO_PNG_FILTER_NONE' value64='8'/>
<enum name='IMAGEIO_PNG_FILTER_PAETH' value64='128'/>
<enum name='IMAGEIO_PNG_FILTER_SUB' value64='16'/>
<enum name='IMAGEIO_PNG_FILTER_UP' value64='32'/>
<enum name='IMAGEIO_PNG_NO_FILTERS' value64='0'/>
<enum name='kCGImageAnimationStatus_AllocationFailure' value64='-22144'/>
<enum name='kCGImageAnimationStatus_CorruptInputImage' value64='-22141'/>
<enum name='kCGImageAnimationStatus_IncompleteInputImage' value64='-22143'/>
<enum name='kCGImageAnimationStatus_ParameterError' value64='-22140'/>
<enum name='kCGImageAnimationStatus_UnsupportedFormat' value64='-22142'/>
<enum name='kCGImageMetadataErrorBadArgument' value64='2'/>
<enum name='kCGImageMetadataErrorConflictingArguments' value64='3'/>
<enum name='kCGImageMetadataErrorPrefixConflict' value64='4'/>
<enum name='kCGImageMetadataErrorUnknown' value64='0'/>
<enum name='kCGImageMetadataErrorUnsupportedFormat' value64='1'/>
<enum name='kCGImageMetadataTypeAlternateArray' value64='4'/>
<enum name='kCGImageMetadataTypeAlternateText' value64='5'/>
<enum name='kCGImageMetadataTypeArrayOrdered' value64='3'/>
<enum name='kCGImageMetadataTypeArrayUnordered' value64='2'/>
<enum name='kCGImageMetadataTypeDefault' value64='0'/>
<enum name='kCGImageMetadataTypeInvalid' value64='-1'/>
<enum name='kCGImageMetadataTypeString' value64='1'/>
<enum name='kCGImageMetadataTypeStructure' value64='6'/>
<enum name='kCGImagePropertyOrientationDown' value64='3'/>
<enum name='kCGImagePropertyOrientationDownMirrored' value64='4'/>
<enum name='kCGImagePropertyOrientationLeft' value64='8'/>
<enum name='kCGImagePropertyOrientationLeftMirrored' value64='5'/>
<enum name='kCGImagePropertyOrientationRight' value64='6'/>
<enum name='kCGImagePropertyOrientationRightMirrored' value64='7'/>
<enum name='kCGImagePropertyOrientationUp' value64='1'/>
<enum name='kCGImagePropertyOrientationUpMirrored' value64='2'/>
<enum name='kCGImageStatusComplete' value64='0'/>
<enum name='kCGImageStatusIncomplete' value64='-1'/>
<enum name='kCGImageStatusInvalidData' value64='-4'/>
<enum name='kCGImageStatusReadingHeader' value64='-2'/>
<enum name='kCGImageStatusUnexpectedEOF' value64='-5'/>
<enum name='kCGImageStatusUnknownType' value64='-3'/>
<enum name='kCGImageTGACompressionNone' value64='0'/>
<enum name='kCGImageTGACompressionRLE' value64='1'/>
<function name='CGAnimateImageAtURLWithBlock'>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CGImageSourceAnimationBlock _Nonnull' function_pointer='true' name='block' type64='@?'>
<arg declared_type64='size_t' type64='Q'/>
<arg declared_type64='CGImageRef _Nonnull' type64='^{CGImage=}'/>
<arg declared_type64='_Bool * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CGAnimateImageDataWithBlock'>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CGImageSourceAnimationBlock _Nonnull' function_pointer='true' name='block' type64='@?'>
<arg declared_type64='size_t' type64='Q'/>
<arg declared_type64='CGImageRef _Nonnull' type64='^{CGImage=}'/>
<arg declared_type64='_Bool * _Nonnull' type64='^B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='CGImageDestinationAddAuxiliaryDataInfo'>
<arg declared_type64='CGImageDestinationRef _Nonnull' name='idst' type64='^{CGImageDestination=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='auxiliaryImageDataType' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='auxiliaryDataInfoDictionary' type64='^{__CFDictionary=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGImageDestinationAddImage'>
<arg declared_type64='CGImageDestinationRef _Nonnull' name='idst' type64='^{CGImageDestination=}'/>
<arg declared_type64='CGImageRef _Nonnull' name='image' type64='^{CGImage=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='properties' type64='^{__CFDictionary=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGImageDestinationAddImageAndMetadata'>
<arg declared_type64='CGImageDestinationRef _Nonnull' name='idst' type64='^{CGImageDestination=}'/>
<arg declared_type64='CGImageRef _Nonnull' name='image' type64='^{CGImage=}'/>
<arg declared_type64='CGImageMetadataRef _Nullable' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGImageDestinationAddImageFromSource'>
<arg declared_type64='CGImageDestinationRef _Nonnull' name='idst' type64='^{CGImageDestination=}'/>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='size_t' name='index' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='properties' type64='^{__CFDictionary=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGImageDestinationCopyImageSource'>
<arg declared_type64='CGImageDestinationRef _Nonnull' name='idst' type64='^{CGImageDestination=}'/>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='err' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CGImageDestinationCopyTypeIdentifiers'>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CGImageDestinationCreateWithData'>
<arg declared_type64='CFMutableDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='type' type64='^{__CFString=}'/>
<arg declared_type64='size_t' name='count' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageDestinationRef _Nullable' type64='^{CGImageDestination=}'/>
</function>
<function name='CGImageDestinationCreateWithDataConsumer'>
<arg declared_type64='CGDataConsumerRef _Nonnull' name='consumer' type64='^{CGDataConsumer=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='type' type64='^{__CFString=}'/>
<arg declared_type64='size_t' name='count' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageDestinationRef _Nullable' type64='^{CGImageDestination=}'/>
</function>
<function name='CGImageDestinationCreateWithURL'>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='type' type64='^{__CFString=}'/>
<arg declared_type64='size_t' name='count' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageDestinationRef _Nullable' type64='^{CGImageDestination=}'/>
</function>
<function name='CGImageDestinationFinalize'>
<arg declared_type64='CGImageDestinationRef _Nonnull' name='idst' type64='^{CGImageDestination=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CGImageDestinationGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CGImageDestinationSetProperties'>
<arg declared_type64='CGImageDestinationRef _Nonnull' name='idst' type64='^{CGImageDestination=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='properties' type64='^{__CFDictionary=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGImageMetadataCopyStringValueWithPath'>
<arg declared_type64='CGImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CGImageMetadataTagRef _Nullable' name='parent' type64='^{CGImageMetadataTag=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='path' type64='^{__CFString=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CGImageMetadataCopyTagMatchingImageProperty'>
<arg declared_type64='CGImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='dictionaryName' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='propertyName' type64='^{__CFString=}'/>
<retval declared_type64='CGImageMetadataTagRef _Nullable' type64='^{CGImageMetadataTag=}'/>
</function>
<function name='CGImageMetadataCopyTagWithPath'>
<arg declared_type64='CGImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CGImageMetadataTagRef _Nullable' name='parent' type64='^{CGImageMetadataTag=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='path' type64='^{__CFString=}'/>
<retval declared_type64='CGImageMetadataTagRef _Nullable' type64='^{CGImageMetadataTag=}'/>
</function>
<function name='CGImageMetadataCopyTags'>
<arg declared_type64='CGImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CGImageMetadataCreateFromXMPData'>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<retval declared_type64='CGImageMetadataRef _Nullable' type64='^{CGImageMetadata=}'/>
</function>
<function name='CGImageMetadataCreateMutable'>
<retval declared_type64='CGMutableImageMetadataRef _Nonnull' type64='^{CGImageMetadata=}'/>
</function>
<function name='CGImageMetadataCreateMutableCopy'>
<arg declared_type64='CGImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<retval declared_type64='CGMutableImageMetadataRef _Nullable' type64='^{CGImageMetadata=}'/>
</function>
<function name='CGImageMetadataCreateXMPData'>
<arg declared_type64='CGImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFDataRef _Nullable' type64='^{__CFData=}'/>
</function>
<function name='CGImageMetadataEnumerateTagsUsingBlock'>
<arg declared_type64='CGImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CFStringRef _Nullable' name='rootPath' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CGImageMetadataTagBlock _Nonnull' function_pointer='true' name='block' type64='@?'>
<arg declared_type64='CFStringRef _Nonnull' type64='^{__CFString=}'/>
<arg declared_type64='CGImageMetadataTagRef _Nonnull' type64='^{CGImageMetadataTag=}'/>
<retval declared_type64='_Bool' type64='B'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGImageMetadataGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CGImageMetadataRegisterNamespaceForPrefix'>
<arg declared_type64='CGMutableImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='xmlns' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='prefix' type64='^{__CFString=}'/>
<arg declared_type64='CFErrorRef _Nullable * _Nullable' name='err' type64='^^{__CFError}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CGImageMetadataRemoveTagWithPath'>
<arg declared_type64='CGMutableImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CGImageMetadataTagRef _Nullable' name='parent' type64='^{CGImageMetadataTag=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='path' type64='^{__CFString=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CGImageMetadataSetTagWithPath'>
<arg declared_type64='CGMutableImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CGImageMetadataTagRef _Nullable' name='parent' type64='^{CGImageMetadataTag=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='path' type64='^{__CFString=}'/>
<arg declared_type64='CGImageMetadataTagRef _Nonnull' name='tag' type64='^{CGImageMetadataTag=}'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CGImageMetadataSetValueMatchingImageProperty'>
<arg declared_type64='CGMutableImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='dictionaryName' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='propertyName' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='value' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CGImageMetadataSetValueWithPath'>
<arg declared_type64='CGMutableImageMetadataRef _Nonnull' name='metadata' type64='^{CGImageMetadata=}'/>
<arg declared_type64='CGImageMetadataTagRef _Nullable' name='parent' type64='^{CGImageMetadataTag=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='path' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='value' type64='@'/>
<retval declared_type64='_Bool' type64='B'/>
</function>
<function name='CGImageMetadataTagCopyName'>
<arg declared_type64='CGImageMetadataTagRef _Nonnull' name='tag' type64='^{CGImageMetadataTag=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CGImageMetadataTagCopyNamespace'>
<arg declared_type64='CGImageMetadataTagRef _Nonnull' name='tag' type64='^{CGImageMetadataTag=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CGImageMetadataTagCopyPrefix'>
<arg declared_type64='CGImageMetadataTagRef _Nonnull' name='tag' type64='^{CGImageMetadataTag=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CGImageMetadataTagCopyQualifiers'>
<arg declared_type64='CGImageMetadataTagRef _Nonnull' name='tag' type64='^{CGImageMetadataTag=}'/>
<retval declared_type64='CFArrayRef _Nullable' type64='^{__CFArray=}'/>
</function>
<function name='CGImageMetadataTagCopyValue'>
<arg declared_type64='CGImageMetadataTagRef _Nonnull' name='tag' type64='^{CGImageMetadataTag=}'/>
<retval declared_type64='CFTypeRef _Nullable' type64='@'/>
</function>
<function name='CGImageMetadataTagCreate'>
<arg declared_type64='CFStringRef _Nonnull' name='xmlns' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable' name='prefix' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='name' type64='^{__CFString=}'/>
<arg declared_type64='CGImageMetadataType' name='type' type64='i'/>
<arg declared_type64='CFTypeRef _Nonnull' name='value' type64='@'/>
<retval declared_type64='CGImageMetadataTagRef _Nullable' type64='^{CGImageMetadataTag=}'/>
</function>
<function name='CGImageMetadataTagGetType'>
<arg declared_type64='CGImageMetadataTagRef _Nonnull' name='tag' type64='^{CGImageMetadataTag=}'/>
<retval declared_type64='CGImageMetadataType' type64='i'/>
</function>
<function name='CGImageMetadataTagGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CGImageSourceCopyAuxiliaryDataInfoAtIndex'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='size_t' name='index' type64='Q'/>
<arg declared_type64='CFStringRef _Nonnull' name='auxiliaryImageDataType' type64='^{__CFString=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CGImageSourceCopyMetadataAtIndex'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='size_t' name='index' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageMetadataRef _Nullable' type64='^{CGImageMetadata=}'/>
</function>
<function name='CGImageSourceCopyProperties'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CGImageSourceCopyPropertiesAtIndex'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='size_t' name='index' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CFDictionaryRef _Nullable' type64='^{__CFDictionary=}'/>
</function>
<function name='CGImageSourceCopyTypeIdentifiers'>
<retval declared_type64='CFArrayRef _Nonnull' type64='^{__CFArray=}'/>
</function>
<function name='CGImageSourceCreateImageAtIndex'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='size_t' name='index' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</function>
<function name='CGImageSourceCreateIncremental'>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageSourceRef _Nonnull' type64='^{CGImageSource=}'/>
</function>
<function name='CGImageSourceCreateThumbnailAtIndex'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='size_t' name='index' type64='Q'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</function>
<function name='CGImageSourceCreateWithData'>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageSourceRef _Nullable' type64='^{CGImageSource=}'/>
</function>
<function name='CGImageSourceCreateWithDataProvider'>
<arg declared_type64='CGDataProviderRef _Nonnull' name='provider' type64='^{CGDataProvider=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageSourceRef _Nullable' type64='^{CGImageSource=}'/>
</function>
<function name='CGImageSourceCreateWithURL'>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGImageSourceRef _Nullable' type64='^{CGImageSource=}'/>
</function>
<function name='CGImageSourceGetCount'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<retval declared_type64='size_t' type64='Q'/>
</function>
<function name='CGImageSourceGetPrimaryImageIndex'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<retval declared_type64='size_t' type64='Q'/>
</function>
<function name='CGImageSourceGetStatus'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<retval declared_type64='CGImageSourceStatus' type64='i'/>
</function>
<function name='CGImageSourceGetStatusAtIndex'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='size_t' name='index' type64='Q'/>
<retval declared_type64='CGImageSourceStatus' type64='i'/>
</function>
<function name='CGImageSourceGetType'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='CGImageSourceGetTypeID'>
<retval declared_type64='CFTypeID' type64='Q'/>
</function>
<function name='CGImageSourceRemoveCacheAtIndex'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='size_t' name='index' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGImageSourceUpdateData'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<arg declared_type64='_Bool' name='final' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGImageSourceUpdateDataProvider'>
<arg declared_type64='CGImageSourceRef _Nonnull' name='isrc' type64='^{CGImageSource=}'/>
<arg declared_type64='CGDataProviderRef _Nonnull' name='provider' type64='^{CGDataProvider=}'/>
<arg declared_type64='_Bool' name='final' type64='B'/>
<retval declared_type64='void' type64='v'/>
</function>
<struct name='DCMDictionaryHeader' type64='{DCMDictionaryHeader=&quot;headerSignature&quot;I&quot;headerVersion&quot;I&quot;headerSize&quot;I&quot;accessMethod&quot;[64C]}'>
<field declared_type64='FourCharCode' name='headerSignature' type64='I'/>
<field declared_type64='UInt32' name='headerVersion' type64='I'/>
<field declared_type64='UInt32' name='headerSize' type64='I'/>
<field declared_type64='Str63' name='accessMethod' type64='[64C]'/>
</struct>
<struct name='HomographDicInfoRec' type64='{HomographDicInfoRec=&quot;dictionaryID&quot;^{OpaqueDCMObjectID}&quot;uniqueID&quot;I}'>
<field declared_type64='DCMDictionaryID' name='dictionaryID' type64='^{OpaqueDCMObjectID=}'/>
<field declared_type64='DCMUniqueID' name='uniqueID' type64='I'/>
</struct>
<struct name='LAHomograph' type64='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type64='DescType' name='descriptorType' type64='I'/>
<field declared_type64='AEDataStorage' name='dataHandle' type64='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='LAMorpheme' type64='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type64='DescType' name='descriptorType' type64='I'/>
<field declared_type64='AEDataStorage' name='dataHandle' type64='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='LAMorphemeBundle' type64='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type64='DescType' name='descriptorType' type64='I'/>
<field declared_type64='AEDataStorage' name='dataHandle' type64='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='LAMorphemePath' type64='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type64='DescType' name='descriptorType' type64='I'/>
<field declared_type64='AEDataStorage' name='dataHandle' type64='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='LAMorphemeRec' type64='{LAMorphemeRec=&quot;sourceTextLength&quot;I&quot;sourceTextPtr&quot;^v&quot;morphemeTextLength&quot;I&quot;morphemeTextPtr&quot;^v&quot;partOfSpeech&quot;I}'>
<field declared_type64='UInt32' name='sourceTextLength' type64='I'/>
<field declared_type64='LogicalAddress' name='sourceTextPtr' type64='^v'/>
<field declared_type64='UInt32' name='morphemeTextLength' type64='I'/>
<field declared_type64='LogicalAddress' name='morphemeTextPtr' type64='^v'/>
<field declared_type64='UInt32' name='partOfSpeech' type64='I'/>
</struct>
<struct name='LAMorphemesArray' type64='{LAMorphemesArray=&quot;morphemesCount&quot;Q&quot;processedTextLength&quot;I&quot;morphemesTextLength&quot;I&quot;morphemes&quot;[1{LAMorphemeRec=&quot;sourceTextLength&quot;I&quot;sourceTextPtr&quot;^v&quot;morphemeTextLength&quot;I&quot;morphemeTextPtr&quot;^v&quot;partOfSpeech&quot;I}]}'>
<field declared_type64='ItemCount' name='morphemesCount' type64='Q'/>
<field declared_type64='UInt32' name='processedTextLength' type64='I'/>
<field declared_type64='UInt32' name='morphemesTextLength' type64='I'/>
<field declared_type64='LAMorphemeRec*' name='morphemes' type64='[1{LAMorphemeRec=&quot;sourceTextLength&quot;I&quot;sourceTextPtr&quot;^v&quot;morphemeTextLength&quot;I&quot;morphemeTextPtr&quot;^v&quot;partOfSpeech&quot;I}]'/>
</struct>
<struct name='MorphemeTextRange' type64='{MorphemeTextRange=&quot;sourceOffset&quot;I&quot;length&quot;I}'>
<field declared_type64='UInt32' name='sourceOffset' type64='I'/>
<field declared_type64='UInt32' name='length' type64='I'/>
</struct>
<cftype name='DCMFoundRecordIterator' type64='^{OpaqueDCMFoundRecordIterator=}'/>
<cftype name='DCMObjectID' type64='^{OpaqueDCMObjectID=}'/>
<cftype name='DCMObjectIterator' type64='^{OpaqueDCMObjectIterator=}'/>
<cftype name='DCMObjectRef' type64='^{OpaqueDCMObjectRef=}'/>
<cftype name='LAContextRef' type64='^{OpaqueLAContextRef=}'/>
<cftype name='LAEnvironmentRef' type64='^{OpaqueLAEnvironmentRef=}'/>
<string_constant name='kAppleJapaneseDefaultAccessMethodName' value='pDAM:Apple Backward Trie Access Method'/>
<string_constant name='kLAJapaneseKanaKanjiEnvironment' value='pKanaKanjiConversion'/>
<string_constant name='kLAJapaneseMorphemeAnalysisEnvironment' value='pJapaneseMorphemeAnalysis'/>
<string_constant name='kLAJapaneseTTSEnvironment' value='pJapaneseTextToSpeech'/>
<enum name='kAppleJapaneseDictionarySignature' value64='1785487726'/>
<enum name='kDCMAllowListing' value64='0'/>
<enum name='kDCMAnyFieldTag' value64='707406378'/>
<enum name='kDCMAnyFieldType' value64='707406378'/>
<enum name='kDCMBasicDictionaryClass' value64='2'/>
<enum name='kDCMCanAddDictionaryFieldMask' value64='64'/>
<enum name='kDCMCanCreateDictionaryMask' value64='32'/>
<enum name='kDCMCanHaveMultipleIndexMask' value64='8'/>
<enum name='kDCMCanModifyDictionaryMask' value64='16'/>
<enum name='kDCMCanStreamDictionaryMask' value64='4'/>
<enum name='kDCMCanUseFileDictionaryMask' value64='1'/>
<enum name='kDCMCanUseMemoryDictionaryMask' value64='2'/>
<enum name='kDCMCanUseTransactionMask' value64='128'/>
<enum name='kDCMDictionaryHeaderSignature' value64='1684628340'/>
<enum name='kDCMDictionaryHeaderVersion' value64='2'/>
<enum name='kDCMFindMethodBackwardTrie' value64='1651798633'/>
<enum name='kDCMFindMethodBeginningMatch' value64='1650947956'/>
<enum name='kDCMFindMethodContainsMatch' value64='1668247156'/>
<enum name='kDCMFindMethodEndingMatch' value64='1701733491'/>
<enum name='kDCMFindMethodExactMatch' value64='1025515552'/>
<enum name='kDCMFindMethodForwardTrie' value64='1718907497'/>
<enum name='kDCMFixedSizeFieldMask' value64='8'/>
<enum name='kDCMHiddenFieldMask' value64='-2147483648'/>
<enum name='kDCMIdentifyFieldMask' value64='4'/>
<enum name='kDCMIndexedFieldMask' value64='1'/>
<enum name='kDCMJapaneseAccentTag' value64='1633906292'/>
<enum name='kDCMJapaneseAccentType' value64='1652126821'/>
<enum name='kDCMJapaneseFukugouInfoTag' value64='1718971253'/>
<enum name='kDCMJapaneseFukugouInfoType' value64='1718971253'/>
<enum name='kDCMJapaneseHinshiTag' value64='1751740019'/>
<enum name='kDCMJapaneseHinshiType' value64='1751740019'/>
<enum name='kDCMJapaneseHyokiTag' value64='1752788843'/>
<enum name='kDCMJapaneseHyokiType' value64='1970567284'/>
<enum name='kDCMJapaneseOnKunReadingTag' value64='1332628334'/>
<enum name='kDCMJapaneseOnKunReadingType' value64='1970567284'/>
<enum name='kDCMJapanesePhoneticTag' value64='1752461166'/>
<enum name='kDCMJapanesePhoneticType' value64='1970567284'/>
<enum name='kDCMJapaneseWeightTag' value64='1751740004'/>
<enum name='kDCMJapaneseWeightType' value64='1936224114'/>
<enum name='kDCMJapaneseYomiTag' value64='2037345641'/>
<enum name='kDCMJapaneseYomiType' value64='1970567284'/>
<enum name='kDCMProhibitListing' value64='1'/>
<enum name='kDCMReadOnlyDictionary' value64='0'/>
<enum name='kDCMReadWriteDictionary' value64='1'/>
<enum name='kDCMRequiredFieldMask' value64='2'/>
<enum name='kDCMSpecificDictionaryClass' value64='1'/>
<enum name='kDCMUserDictionaryClass' value64='0'/>
<enum name='kDictionaryFileType' value64='1684628340'/>
<enum name='kLAAllMorphemes' value64='0'/>
<enum name='kLADefaultEdge' value64='0'/>
<enum name='kLAEndOfSourceTextMask' value64='1'/>
<enum name='kLAFreeEdge' value64='1'/>
<enum name='kLAIncompleteEdge' value64='2'/>
<enum name='kLAMorphemesArrayVersion' value64='0'/>
<enum name='kLASpeechBagyouGodan' value64='20608'/>
<enum name='kLASpeechChimei' value64='512'/>
<enum name='kLASpeechChimeiSetsubigo' value64='37376'/>
<enum name='kLASpeechDokuritsugo' value64='41728'/>
<enum name='kLASpeechDoushi' value64='20480'/>
<enum name='kLASpeechFukushi' value64='8192'/>
<enum name='kLASpeechFutsuuMeishi' value64='0'/>
<enum name='kLASpeechGagyouGodan' value64='20592'/>
<enum name='kLASpeechGodanDoushi' value64='20480'/>
<enum name='kLASpeechIchidanDoushi' value64='20736'/>
<enum name='kLASpeechJinmei' value64='256'/>
<enum name='kLASpeechJinmeiMei' value64='288'/>
<enum name='kLASpeechJinmeiSei' value64='272'/>
<enum name='kLASpeechJinmeiSetsubigo' value64='37120'/>
<enum name='kLASpeechJodoushi' value64='45056'/>
<enum name='kLASpeechJoshi' value64='49152'/>
<enum name='kLASpeechKagyouGodan' value64='20480'/>
<enum name='kLASpeechKahenDoushi' value64='20992'/>
<enum name='kLASpeechKandoushi' value64='16384'/>
<enum name='kLASpeechKatsuyouGokan' value64='1'/>
<enum name='kLASpeechKatsuyouKatei' value64='6'/>
<enum name='kLASpeechKatsuyouMask' value64='15'/>
<enum name='kLASpeechKatsuyouMeirei' value64='7'/>
<enum name='kLASpeechKatsuyouMizen' value64='2'/>
<enum name='kLASpeechKatsuyouRentai' value64='5'/>
<enum name='kLASpeechKatsuyouRenyou' value64='3'/>
<enum name='kLASpeechKatsuyouSyuushi' value64='4'/>
<enum name='kLASpeechKeidouMeishi' value64='1536'/>
<enum name='kLASpeechKeiyoudoushi' value64='28672'/>
<enum name='kLASpeechKeiyoushi' value64='24576'/>
<enum name='kLASpeechKigou' value64='41216'/>
<enum name='kLASpeechKoyuuMeishi' value64='1024'/>
<enum name='kLASpeechKuten' value64='41232'/>
<enum name='kLASpeechMagyouGodan' value64='20544'/>
<enum name='kLASpeechMediumClassMask' value64='65280'/>
<enum name='kLASpeechMeishi' value64='0'/>
<enum name='kLASpeechMuhinshi' value64='40960'/>
<enum name='kLASpeechNagyouGodan' value64='20528'/>
<enum name='kLASpeechRagyouGodan' value64='20560'/>
<enum name='kLASpeechRentaishi' value64='4096'/>
<enum name='kLASpeechRoughClassMask' value64='61440'/>
<enum name='kLASpeechSagyouGodan' value64='20496'/>
<enum name='kLASpeechSahenDoushi' value64='21248'/>
<enum name='kLASpeechSahenMeishi' value64='1280'/>
<enum name='kLASpeechSeiku' value64='41984'/>
<enum name='kLASpeechSetsubiChimei' value64='528'/>
<enum name='kLASpeechSetsubigo' value64='36864'/>
<enum name='kLASpeechSetsuzokushi' value64='12288'/>
<enum name='kLASpeechSettougo' value64='32768'/>
<enum name='kLASpeechSoshikimei' value64='768'/>
<enum name='kLASpeechSoshikimeiSetsubigo' value64='37632'/>
<enum name='kLASpeechStrictClassMask' value64='65520'/>
<enum name='kLASpeechSuujiSetsubigo' value64='37888'/>
<enum name='kLASpeechSuujiSettougo' value64='33024'/>
<enum name='kLASpeechSuushi' value64='41472'/>
<enum name='kLASpeechTagyouGodan' value64='20512'/>
<enum name='kLASpeechTankanji' value64='40960'/>
<enum name='kLASpeechTouten' value64='41248'/>
<enum name='kLASpeechWagyouGodan' value64='20576'/>
<enum name='kLASpeechZahenDoushi' value64='21504'/>
<enum name='kMaxInputLengthOfAppleJapaneseEngine' value64='200'/>
<enum name='kMaxKanjiLengthInAppleJapaneseDictionary' value64='64'/>
<enum name='kMaxYomiLengthInAppleJapaneseDictionary' value64='40'/>
<enum name='keyAEHomographAccent' value64='1818323041'/>
<enum name='keyAEHomographDicInfo' value64='1818323044'/>
<enum name='keyAEHomographWeight' value64='1818323063'/>
<enum name='keyAELAHomograph' value64='1819108968'/>
<enum name='keyAELAMorpheme' value64='1819108974'/>
<enum name='keyAELAMorphemeBundle' value64='1819108962'/>
<enum name='keyAELAMorphemePath' value64='1819108976'/>
<enum name='keyAEMorphemePartOfSpeechCode' value64='1818324323'/>
<enum name='keyAEMorphemeTextRange' value64='1818324340'/>
<enum name='keyDCMFieldAttributes' value64='1717662834'/>
<enum name='keyDCMFieldDefaultData' value64='1717855590'/>
<enum name='keyDCMFieldFindMethods' value64='1717988964'/>
<enum name='keyDCMFieldName' value64='1718509933'/>
<enum name='keyDCMFieldTag' value64='1718903143'/>
<enum name='keyDCMFieldType' value64='1718909296'/>
<enum name='keyDCMMaxRecordSize' value64='1836217210'/>
<enum name='pDCMAccessMethod' value64='1634563172'/>
<enum name='pDCMClass' value64='1885564019'/>
<enum name='pDCMCopyright' value64='1768842863'/>
<enum name='pDCMListing' value64='1818850164'/>
<enum name='pDCMLocale' value64='1819239276'/>
<enum name='pDCMMaintenance' value64='1836346979'/>
<enum name='pDCMPermission' value64='1885696621'/>
<enum name='typeAEHomographAccent' value64='1818323041'/>
<enum name='typeAEHomographDicInfo' value64='1818323044'/>
<enum name='typeAEHomographWeight' value64='1936224114'/>
<enum name='typeAEMorphemePartOfSpeechCode' value64='1818324323'/>
<enum name='typeAEMorphemeTextRange' value64='1818324340'/>
<enum name='typeDCMFieldAttributes' value64='1717662834'/>
<enum name='typeDCMFindMethod' value64='1718449256'/>
<enum name='typeLAHomograph' value64='1818850164'/>
<enum name='typeLAMorpheme' value64='1818850164'/>
<enum name='typeLAMorphemeBundle' value64='1919247215'/>
<enum name='typeLAMorphemePath' value64='1919247215'/>
<struct name='PMLanguageInfo' type64='{PMLanguageInfo=&quot;level&quot;[33C]&quot;version&quot;[33C]&quot;release&quot;[33C]}'>
<field declared_type64='Str32' name='level' type64='[33C]'/>
<field declared_type64='Str32' name='version' type64='[33C]'/>
<field declared_type64='Str32' name='release' type64='[33C]'/>
</struct>
<struct name='PMPaperMargins' type64='{PMRect=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}'>
<field declared_type64='double' name='top' type64='d'/>
<field declared_type64='double' name='left' type64='d'/>
<field declared_type64='double' name='bottom' type64='d'/>
<field declared_type64='double' name='right' type64='d'/>
</struct>
<struct name='PMRect' type64='{PMRect=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}'>
<field declared_type64='double' name='top' type64='d'/>
<field declared_type64='double' name='left' type64='d'/>
<field declared_type64='double' name='bottom' type64='d'/>
<field declared_type64='double' name='right' type64='d'/>
</struct>
<struct name='PMResolution' type64='{PMResolution=&quot;hRes&quot;d&quot;vRes&quot;d}'>
<field declared_type64='double' name='hRes' type64='d'/>
<field declared_type64='double' name='vRes' type64='d'/>
</struct>
<cftype name='PMPageFormat' type64='^{OpaquePMPageFormat=}'/>
<cftype name='PMPaper' type64='^{OpaquePMPaper=}'/>
<cftype name='PMPreset' type64='^{OpaquePMPreset=}'/>
<cftype name='PMPrintSession' type64='^{OpaquePMPrintSession=}'/>
<cftype name='PMPrintSettings' type64='^{OpaquePMPrintSettings=}'/>
<cftype name='PMPrinter' type64='^{OpaquePMPrinter=}'/>
<cftype name='PMServer' type64='^{OpaquePMServer=}'/>
<string_constant name='SUMMARY_DISPLAY_ORDER' nsstring='true' value='Summary Display Order'/>
<string_constant name='kAppPageSetupDialogTypeIDStr' nsstring='true' value='B9A0DA98-E57F-11D3-9E83-0050E4603277'/>
<string_constant name='kAppPrintDialogTypeIDStr' nsstring='true' value='BCB07250-E57F-11D3-8CA6-0050E4603277'/>
<string_constant name='kAppPrintThumbnailTypeIDStr' nsstring='true' value='9320FE03-B5D5-11D5-84D1-003065D6135E'/>
<string_constant name='kDialogExtensionIntfIDStr' nsstring='true' value='A996FD7E-B738-11D3-8519-0050E4603277'/>
<string_constant name='kGeneralPageSetupDialogTypeIDStr' nsstring='true' value='6E6ED964-B738-11D3-952F-0050E4603277'/>
<string_constant name='kGeneralPrintDialogTypeIDStr' nsstring='true' value='C1BF838E-B72A-11D3-9644-0050E4603277'/>
<string_constant name='kPDFWorkflowDisplayNameKey' nsstring='true' value='displayName'/>
<string_constant name='kPDFWorkflowItemURLKey' nsstring='true' value='itemURL'/>
<string_constant name='kPDFWorkflowItemsKey' nsstring='true' value='items'/>
<string_constant name='kPDFWorkflowModifiedKey' nsstring='true' value='wasModifiedInline'/>
<string_constant name='kPMApplicationColorMatching' nsstring='true' value='AP_ApplicationColorMatching'/>
<string_constant name='kPMApplicationColorMatchingStr' value='AP_ApplicationColorMatching'/>
<string_constant name='kPMBorderKey' nsstring='true' value='com.apple.print.PrintSettings.PMBorder'/>
<string_constant name='kPMBorderStr' value='com.apple.print.PrintSettings.PMBorder'/>
<string_constant name='kPMBorderTypeKey' nsstring='true' value='com.apple.print.PrintSettings.PMBorderType'/>
<string_constant name='kPMBorderTypeStr' value='com.apple.print.PrintSettings.PMBorderType'/>
<string_constant name='kPMCollateAEProp' value='collating'/>
<string_constant name='kPMColorMatchingModeKey' nsstring='true' value='AP_ColorMatchingMode'/>
<string_constant name='kPMColorMatchingModeStr' value='AP_ColorMatchingMode'/>
<string_constant name='kPMColorMatchingPDEKindID' nsstring='true' value='com.apple.print.pde.ColorMatchingKind'/>
<string_constant name='kPMColorPDEKindID' nsstring='true' value='com.apple.print.pde.ColorKind'/>
<string_constant name='kPMColorSyncProfileIDKey' nsstring='true' value='com.apple.print.PrintSettings.PMColorSyncProfileID'/>
<string_constant name='kPMColorSyncProfileIDStr' value='com.apple.print.PrintSettings.PMColorSyncProfileID'/>
<string_constant name='kPMCopiesAEProp' value='copies'/>
<string_constant name='kPMCopiesAndPagesPDEKindID' nsstring='true' value='com.apple.print.pde.CopiesAndPagesKind'/>
<string_constant name='kPMCopiesKey' nsstring='true' value='com.apple.print.PrintSettings.PMCopies'/>
<string_constant name='kPMCopiesStr' value='com.apple.print.PrintSettings.PMCopies'/>
<string_constant name='kPMCopyCollateKey' nsstring='true' value='com.apple.print.PrintSettings.PMCopyCollate'/>
<string_constant name='kPMCopyCollateStr' value='com.apple.print.PrintSettings.PMCopyCollate'/>
<string_constant name='kPMCoverPageKey' nsstring='true' value='com.apple.print.PrintSettings.PMCoverPage'/>
<string_constant name='kPMCoverPagePDEKindID' nsstring='true' value='com.apple.print.pde.CoverPageKind'/>
<string_constant name='kPMCoverPageSourceKey' nsstring='true' value='com.apple.print.PrintSettings.PMCoverPageSource'/>
<string_constant name='kPMCoverPageSourceStr' value='com.apple.print.PrintSettings.PMCoverPageSource'/>
<string_constant name='kPMCoverPageStr' value='com.apple.print.PrintSettings.PMCoverPage'/>
<string_constant name='kPMCustomPaperSizePDEKindID' nsstring='true' value='com.apple.print.pde.CustomPaperSizeKind'/>
<string_constant name='kPMCustomProfilePathKey' nsstring='true' value='PMCustomProfilePath'/>
<string_constant name='kPMCustomProfilePathStr' value='PMCustomProfilePath'/>
<string_constant name='kPMDestinationPrinterIDKey' nsstring='true' value='DestinationPrinterID'/>
<string_constant name='kPMDestinationPrinterIDStr' value='DestinationPrinterID'/>
<string_constant name='kPMDestinationTypeKey' nsstring='true' value='com.apple.print.PrintSettings.PMDestinationType'/>
<string_constant name='kPMDestinationTypeStr' value='com.apple.print.PrintSettings.PMDestinationType'/>
<string_constant name='kPMDocumentFormatDefault' nsstring='true' value='com.apple.documentformat.default'/>
<string_constant name='kPMDocumentFormatPDF' nsstring='true' value='application/pdf'/>
<string_constant name='kPMDocumentFormatPostScript' nsstring='true' value='application/postscript'/>
<string_constant name='kPMDuplexPDEKindID' nsstring='true' value='com.apple.print.pde.DuplexKind'/>
<string_constant name='kPMDuplexingKey' nsstring='true' value='com.apple.print.PrintSettings.PMDuplexing'/>
<string_constant name='kPMDuplexingStr' value='com.apple.print.PrintSettings.PMDuplexing'/>
<string_constant name='kPMErrorHandlingAEProp' value='error handling'/>
<string_constant name='kPMErrorHandlingPDEKindID' nsstring='true' value='com.apple.print.pde.ErrorHandlingKind'/>
<string_constant name='kPMFaxAddressesPDEKindID' nsstring='true' value='com.apple.print.pde.FaxAddressesKind'/>
<string_constant name='kPMFaxCoverPagePDEKindID' nsstring='true' value='com.apple.print.pde.FaxCoverPageKind'/>
<string_constant name='kPMFaxCoverSheetKey' nsstring='true' value='faxCoverSheet'/>
<string_constant name='kPMFaxCoverSheetMessageKey' nsstring='true' value='faxCoverSheetMessage'/>
<string_constant name='kPMFaxCoverSheetMessageStr' value='faxCoverSheetMessage'/>
<string_constant name='kPMFaxCoverSheetStr' value='faxCoverSheet'/>
<string_constant name='kPMFaxDateLabelKey' nsstring='true' value='faxDateLabel'/>
<string_constant name='kPMFaxDateLabelStr' value='faxDateLabel'/>
<string_constant name='kPMFaxFromLabelKey' nsstring='true' value='faxFromLabel'/>
<string_constant name='kPMFaxFromLabelStr' value='faxFromLabel'/>
<string_constant name='kPMFaxModemPDEKindID' nsstring='true' value='com.apple.print.pde.FaxModemKind'/>
<string_constant name='kPMFaxNumberAEProp' value='fax number'/>
<string_constant name='kPMFaxNumberKey' nsstring='true' value='phone'/>
<string_constant name='kPMFaxNumberStr' value='phone'/>
<string_constant name='kPMFaxPrefixKey' nsstring='true' value='faxPrefix'/>
<string_constant name='kPMFaxPrefixStr' value='faxPrefix'/>
<string_constant name='kPMFaxSheetsLabelKey' nsstring='true' value='faxSheetsLabel'/>
<string_constant name='kPMFaxSheetsLabelStr' value='faxSheetsLabel'/>
<string_constant name='kPMFaxSubjectKey' nsstring='true' value='faxSubject'/>
<string_constant name='kPMFaxSubjectLabelKey' nsstring='true' value='faxSubjectLabel'/>
<string_constant name='kPMFaxSubjectLabelStr' value='faxSubjectLabel'/>
<string_constant name='kPMFaxSubjectStr' value='faxSubject'/>
<string_constant name='kPMFaxToKey' nsstring='true' value='faxTo'/>
<string_constant name='kPMFaxToLabelKey' nsstring='true' value='faxToLabel'/>
<string_constant name='kPMFaxToLabelStr' value='faxToLabel'/>
<string_constant name='kPMFaxToStr' value='faxTo'/>
<string_constant name='kPMFaxToneDialingKey' nsstring='true' value='faxToneDialing'/>
<string_constant name='kPMFaxToneDialingStr' value='faxToneDialing'/>
<string_constant name='kPMFaxUseSoundKey' nsstring='true' value='faxUseSound'/>
<string_constant name='kPMFaxUseSoundStr' value='faxUseSound'/>
<string_constant name='kPMFaxWaitForDialToneKey' nsstring='true' value='faxWaitForDialTone'/>
<string_constant name='kPMFaxWaitForDialToneStr' value='faxWaitForDialTone'/>
<string_constant name='kPMFeatureAEProp' value='printer features'/>
<string_constant name='kPMFirstPageAEProp' value='starting page'/>
<string_constant name='kPMFitToPageKey' nsstring='true' value='fit-to-page'/>
<string_constant name='kPMFitToPageStr' value='fit-to-page'/>
<string_constant name='kPMGraphicsContextCoreGraphics' nsstring='true' value='com.apple.graphicscontext.coregraphics'/>
<string_constant name='kPMGraphicsContextDefault' nsstring='true' value='com.apple.graphicscontext.default'/>
<string_constant name='kPMImagingOptionsPDEKindID' nsstring='true' value='com.apple.print.pde.ImagingOptionsKind'/>
<string_constant name='kPMInkPDEKindID' nsstring='true' value='com.apple.print.pde.InkKind'/>
<string_constant name='kPMInlineWorkflowKey' nsstring='true' value='inlineWorkflow'/>
<string_constant name='kPMInlineWorkflowStr' value='inlineWorkflow'/>
<string_constant name='kPMJobHoldUntilTimeKey' nsstring='true' value='com.apple.print.PrintSettings.PMJobHoldUntilTime'/>
<string_constant name='kPMJobHoldUntilTimeStr' value='com.apple.print.PrintSettings.PMJobHoldUntilTime'/>
<string_constant name='kPMJobPINPDEKindID' nsstring='true' value='com.apple.print.pde.jobPIN'/>
<string_constant name='kPMJobPriorityKey' nsstring='true' value='com.apple.print.PrintSettings.PMJobPriority'/>
<string_constant name='kPMJobPriorityStr' value='com.apple.print.PrintSettings.PMJobPriority'/>
<string_constant name='kPMJobStateKey' nsstring='true' value='com.apple.print.PrintSettings.PMJobState'/>
<string_constant name='kPMJobStateStr' value='com.apple.print.PrintSettings.PMJobState'/>
<string_constant name='kPMLastPageAEProp' value='ending page'/>
<string_constant name='kPMLayoutAcrossAEProp' value='pages across'/>
<string_constant name='kPMLayoutColumnsKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutColumns'/>
<string_constant name='kPMLayoutColumnsStr' value='com.apple.print.PrintSettings.PMLayoutColumns'/>
<string_constant name='kPMLayoutDirectionKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutDirection'/>
<string_constant name='kPMLayoutDirectionStr' value='com.apple.print.PrintSettings.PMLayoutDirection'/>
<string_constant name='kPMLayoutDownAEProp' value='pages down'/>
<string_constant name='kPMLayoutNUpKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutNUp'/>
<string_constant name='kPMLayoutNUpStr' value='com.apple.print.PrintSettings.PMLayoutNUp'/>
<string_constant name='kPMLayoutPDEKindID' nsstring='true' value='com.apple.print.pde.LayoutUserOptionKind'/>
<string_constant name='kPMLayoutRowsKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutRows'/>
<string_constant name='kPMLayoutRowsStr' value='com.apple.print.PrintSettings.PMLayoutRows'/>
<string_constant name='kPMLayoutTileOrientationKey' nsstring='true' value='com.apple.print.PrintSettings.PMLayoutTileOrientation'/>
<string_constant name='kPMLayoutTileOrientationStr' value='com.apple.print.PrintSettings.PMLayoutTileOrientation'/>
<string_constant name='kPMMediaQualityPDEKindID' nsstring='true' value='com.apple.print.pde.MediaQualityPDEKind'/>
<string_constant name='kPMMirrorKey' nsstring='true' value='mirror'/>
<string_constant name='kPMMirrorStr' value='mirror'/>
<string_constant name='kPMOutputFilenameKey' nsstring='true' value='com.apple.print.PrintSettings.PMOutputFilename'/>
<string_constant name='kPMOutputFilenameStr' value='com.apple.print.PrintSettings.PMOutputFilename'/>
<string_constant name='kPMOutputOptionsPDEKindID' nsstring='true' value='com.apple.print.pde.OutputOptionsKind'/>
<string_constant name='kPMOutputOrderKey' nsstring='true' value='OutputOrder'/>
<string_constant name='kPMOutputOrderStr' value='OutputOrder'/>
<string_constant name='kPMPDFEffectsPDEKindID' nsstring='true' value='com.apple.print.pde.PDFEffects'/>
<string_constant name='kPMPDFWorkFlowAEProp' value='PDF work flow'/>
<string_constant name='kPMPPDDescriptionType' nsstring='true' value='PMPPDDescriptionType'/>
<string_constant name='kPMPSErrorHandlerKey' nsstring='true' value='com.apple.print.PrintSettings.PMPSErrorHandler'/>
<string_constant name='kPMPSErrorHandlerStr' value='com.apple.print.PrintSettings.PMPSErrorHandler'/>
<string_constant name='kPMPSTraySwitchKey' nsstring='true' value='com.apple.print.PrintSettings.PMPSTraySwitch'/>
<string_constant name='kPMPSTraySwitchStr' value='com.apple.print.PrintSettings.PMPSTraySwitch'/>
<string_constant name='kPMPageAttributesKindID' nsstring='true' value='com.apple.print.pde.PageAttributesKind'/>
<string_constant name='kPMPageSetKey' nsstring='true' value='page-set'/>
<string_constant name='kPMPageSetStr' value='page-set'/>
<string_constant name='kPMPageToPaperMappingAllowScalingUpKey' nsstring='true' value='com.apple.print.PageToPaperMappingAllowScalingUp'/>
<string_constant name='kPMPageToPaperMappingAllowScalingUpStr' value='com.apple.print.PageToPaperMappingAllowScalingUp'/>
<string_constant name='kPMPageToPaperMappingTypeKey' nsstring='true' value='com.apple.print.PageToPaperMappingType'/>
<string_constant name='kPMPageToPaperMappingTypeStr' value='com.apple.print.PageToPaperMappingType'/>
<string_constant name='kPMPageToPaperMediaNameKey' nsstring='true' value='com.apple.print.PageToPaperMappingMediaName'/>
<string_constant name='kPMPageToPaperMediaNameStr' value='com.apple.print.PageToPaperMappingMediaName'/>
<string_constant name='kPMPaperFeedPDEKindID' nsstring='true' value='com.apple.print.pde.PaperFeedKind'/>
<string_constant name='kPMPaperHandlingPDEKindID' nsstring='true' value='com.apple.print.pde.PaperHandlingKind'/>
<string_constant name='kPMPaperSourcePDEKindID' nsstring='true' value='com.apple.print.pde.PaperSourceKind'/>
<string_constant name='kPMPresetAEProp' value='preset'/>
<string_constant name='kPMPresetGraphicsTypeAll' nsstring='true' value='All'/>
<string_constant name='kPMPresetGraphicsTypeGeneral' nsstring='true' value='General'/>
<string_constant name='kPMPresetGraphicsTypeKey' nsstring='true' value='com.apple.print.preset.graphicsType'/>
<string_constant name='kPMPresetGraphicsTypeNone' nsstring='true' value='None'/>
<string_constant name='kPMPresetGraphicsTypePhoto' nsstring='true' value='Photo'/>
<string_constant name='kPMPrimaryPaperFeedKey' nsstring='true' value='com.apple.print.PrintSettings.PMPrimaryPaperFeed'/>
<string_constant name='kPMPrimaryPaperFeedStr' value='com.apple.print.PrintSettings.PMPrimaryPaperFeed'/>
<string_constant name='kPMPrintSelectionOnlyKey' nsstring='true' value='com.apple.print.PrintSettings.PMPrintSelectionOnly'/>
<string_constant name='kPMPrintSelectionOnlyStr' value='com.apple.print.PrintSettings.PMPrintSelectionOnly'/>
<string_constant name='kPMPrintSelectionTitleKey' nsstring='true' value='com.apple.printSelection.title'/>
<string_constant name='kPMPrintTimeAEProp' value='requested print time'/>
<string_constant name='kPMPrinterFeaturesPDEKindID' nsstring='true' value='com.apple.print.pde.PrinterFeaturesKind'/>
<string_constant name='kPMPriorityPDEKindID' nsstring='true' value='com.apple.print.pde.PriorityKind'/>
<string_constant name='kPMRotationScalingPDEKindID' nsstring='true' value='com.apple.print.pde.RotationScalingKind'/>
<string_constant name='kPMSandboxCompatiblePDEs' nsstring='true' value='PMSandboxCompatiblePDEs'/>
<string_constant name='kPMSaveAsPDFAEProp' value='save as PDF'/>
<string_constant name='kPMSaveAsPSAEProp' value='save as PS'/>
<string_constant name='kPMSchedulerPDEKindID' nsstring='true' value='com.apple.print.pde.SchedulerKind'/>
<string_constant name='kPMSecondaryPaperFeedKey' nsstring='true' value='com.apple.print.PrintSettings.PMSecondaryPaperFeed'/>
<string_constant name='kPMSecondaryPaperFeedStr' value='com.apple.print.PrintSettings.PMSecondaryPaperFeed'/>
<string_constant name='kPMSummaryPanelKindID' nsstring='true' value='com.apple.print.pde.SummaryKind'/>
<string_constant name='kPMTargetPrinterAEProp' value='target printer'/>
<string_constant name='kPMTotalBeginPagesKey' nsstring='true' value='com.apple.print.PrintSettings.PMTotalBeginPages'/>
<string_constant name='kPMTotalBeginPagesStr' value='com.apple.print.PrintSettings.PMTotalBeginPages'/>
<string_constant name='kPMTotalSidesImagedKey' nsstring='true' value='com.apple.print.PrintSettings.PMTotalSidesImaged'/>
<string_constant name='kPMTotalSidesImagedStr' value='com.apple.print.PrintSettings.PMTotalSidesImaged'/>
<string_constant name='kPMUniPrinterPDEKindID' nsstring='true' value='com.apple.print.pde.UniPrinterKind'/>
<string_constant name='kPMUnsupportedPDEKindID' nsstring='true' value='com.apple.print.pde.UnsupportedPDEKind'/>
<string_constant name='kPMUseOptionalAccountIDKey' nsstring='true' value='com.apple.print.PrintSettings.PMUseOptionalAccountID'/>
<string_constant name='kPMUseOptionalAccountIDStr' value='com.apple.print.PrintSettings.PMUseOptionalAccountID'/>
<string_constant name='kPMUseOptionalPINKey' nsstring='true' value='com.apple.print.PrintSettings.PMUseOptionalPIN'/>
<string_constant name='kPMUseOptionalPINStr' value='com.apple.print.PrintSettings.PMUseOptionalPIN'/>
<string_constant name='kPMVendorColorMatching' nsstring='true' value='AP_VendorColorMatching'/>
<string_constant name='kPMVendorColorMatchingStr' value='AP_VendorColorMatching'/>
<string_constant name='kPMWatermarkPDEKindID' nsstring='true' value='com.apple.print.pde.WatermarkPDEKind'/>
<string_constant name='kPrinterModuleTypeIDStr' nsstring='true' value='BDB091F4-E57F-11D3-B5CC-0050E4603277'/>
<enum name='kAllPPDDomains' value64='1'/>
<enum name='kCUPSPPDDomain' value64='6'/>
<enum name='kLocalPPDDomain' value64='3'/>
<enum name='kNetworkPPDDomain' value64='4'/>
<enum name='kPMAllocationFailure' value64='-108'/>
<enum name='kPMBorderDoubleHairline' value64='2'/>
<enum name='kPMBorderDoubleThickline' value64='4'/>
<enum name='kPMBorderSingleHairline' value64='1'/>
<enum name='kPMBorderSingleThickline' value64='3'/>
<enum name='kPMCMYKColorSpaceModel' value64='3'/>
<enum name='kPMCVMSymbolNotFound' value64='-9662'/>
<enum name='kPMCancel' value64='128'/>
<enum name='kPMCloseFailed' value64='-9785'/>
<enum name='kPMCollateAEKey' value64='1819763564'/>
<enum name='kPMCollateAEType' value64='1651470188'/>
<enum name='kPMColorSpaceModelCount' value64='4'/>
<enum name='kPMCopieAEType' value64='1819242087'/>
<enum name='kPMCopiesAEKey' value64='1819763568'/>
<enum name='kPMCoverPageAfter' value64='3'/>
<enum name='kPMCoverPageBefore' value64='2'/>
<enum name='kPMCoverPageDefault' value64='1'/>
<enum name='kPMCoverPageNone' value64='1'/>
<enum name='kPMCreateMessageFailed' value64='-9620'/>
<enum name='kPMDataFormatXMLCompressed' value64='2'/>
<enum name='kPMDataFormatXMLDefault' value64='0'/>
<enum name='kPMDataFormatXMLMinimal' value64='1'/>
<enum name='kPMDeleteSubTicketFailed' value64='-9585'/>
<enum name='kPMDestinationFax' value64='3'/>
<enum name='kPMDestinationFile' value64='2'/>
<enum name='kPMDestinationInvalid' value64='0'/>
<enum name='kPMDestinationPreview' value64='4'/>
<enum name='kPMDestinationPrinter' value64='1'/>
<enum name='kPMDestinationProcessPDF' value64='5'/>
<enum name='kPMDestinationTypeDefault' value64='1'/>
<enum name='kPMDevNColorSpaceModel' value64='4'/>
<enum name='kPMDocumentNotFound' value64='-9644'/>
<enum name='kPMDontSwitchPDEError' value64='-9531'/>
<enum name='kPMDuplexDefault' value64='1'/>
<enum name='kPMDuplexNoTumble' value64='2'/>
<enum name='kPMDuplexNone' value64='1'/>
<enum name='kPMDuplexTumble' value64='3'/>
<enum name='kPMEditRequestFailed' value64='-9544'/>
<enum name='kPMErrorHandlingAEKey' value64='1819764072'/>
<enum name='kPMErrorHandlingAEType' value64='1701737837'/>
<enum name='kPMErrorHandlingDetailedEnum' value64='1819763828'/>
<enum name='kPMErrorHandlingStandardEnum' value64='1819767668'/>
<enum name='kPMFaxNumberAEKey' value64='1717663854'/>
<enum name='kPMFaxNumberAEType' value64='1413830740'/>
<enum name='kPMFeatureAEKey' value64='1819766886'/>
<enum name='kPMFeatureAEType' value64='1818850164'/>
<enum name='kPMFeatureNotInstalled' value64='-9533'/>
<enum name='kPMFileOrDirOperationFailed' value64='-9634'/>
<enum name='kPMFirstPageAEKey' value64='1819764336'/>
<enum name='kPMFirstPageAEType' value64='1819242087'/>
<enum name='kPMFontNameTooLong' value64='-9704'/>
<enum name='kPMFontNotFound' value64='-9703'/>
<enum name='kPMGeneralCGError' value64='-9705'/>
<enum name='kPMGeneralError' value64='-30870'/>
<enum name='kPMGrayColorSpaceModel' value64='1'/>
<enum name='kPMHideInlineItems' value64='0'/>
<enum name='kPMIOAttrNotAvailable' value64='-9787'/>
<enum name='kPMIOMSymbolNotFound' value64='-9661'/>
<enum name='kPMInternalError' value64='-30870'/>
<enum name='kPMInvalidAllocator' value64='-30890'/>
<enum name='kPMInvalidCVMContext' value64='-9665'/>
<enum name='kPMInvalidCalibrationTarget' value64='-30898'/>
<enum name='kPMInvalidConnection' value64='-30887'/>
<enum name='kPMInvalidFileType' value64='-30895'/>
<enum name='kPMInvalidIOMContext' value64='-9664'/>
<enum name='kPMInvalidIndex' value64='-30882'/>
<enum name='kPMInvalidItem' value64='-30892'/>
<enum name='kPMInvalidJobID' value64='-9666'/>
<enum name='kPMInvalidJobTemplate' value64='-30885'/>
<enum name='kPMInvalidKey' value64='-30888'/>
<enum name='kPMInvalidLookupSpec' value64='-9542'/>
<enum name='kPMInvalidObject' value64='-30896'/>
<enum name='kPMInvalidPBMRef' value64='-9540'/>
<enum name='kPMInvalidPDEContext' value64='-9530'/>
<enum name='kPMInvalidPMContext' value64='-9663'/>
<enum name='kPMInvalidPageFormat' value64='-30876'/>
<enum name='kPMInvalidPaper' value64='-30897'/>
<enum name='kPMInvalidParameter' value64='-50'/>
<enum name='kPMInvalidPreset' value64='-30899'/>
<enum name='kPMInvalidPrintSession' value64='-30879'/>
<enum name='kPMInvalidPrintSettings' value64='-30875'/>
<enum name='kPMInvalidPrinter' value64='-30880'/>
<enum name='kPMInvalidPrinterAddress' value64='-9780'/>
<enum name='kPMInvalidPrinterInfo' value64='-30886'/>
<enum name='kPMInvalidReply' value64='-30894'/>
<enum name='kPMInvalidState' value64='-9706'/>
<enum name='kPMInvalidSubTicket' value64='-9584'/>
<enum name='kPMInvalidTicket' value64='-30891'/>
<enum name='kPMInvalidType' value64='-30893'/>
<enum name='kPMInvalidValue' value64='-30889'/>
<enum name='kPMItemIsLocked' value64='-9586'/>
<enum name='kPMJobBusy' value64='-9642'/>
<enum name='kPMJobCanceled' value64='-9643'/>
<enum name='kPMJobGetTicketBadFormatError' value64='-9672'/>
<enum name='kPMJobGetTicketReadError' value64='-9673'/>
<enum name='kPMJobManagerAborted' value64='-9671'/>
<enum name='kPMJobNotFound' value64='-9641'/>
<enum name='kPMJobStreamEndError' value64='-9670'/>
<enum name='kPMJobStreamOpenFailed' value64='-9668'/>
<enum name='kPMJobStreamReadFailed' value64='-9669'/>
<enum name='kPMKeyNotFound' value64='-9589'/>
<enum name='kPMKeyNotUnique' value64='-9590'/>
<enum name='kPMKeyOrValueNotFound' value64='-9623'/>
<enum name='kPMLandscape' value64='2'/>
<enum name='kPMLastErrorCodeToMakeMaintenanceOfThisListEasier' value64='-9799'/>
<enum name='kPMLastPageAEKey' value64='1819765872'/>
<enum name='kPMLastPageAEType' value64='1819242087'/>
<enum name='kPMLayoutAcrossAEKey' value64='1819765857'/>
<enum name='kPMLayoutAcrossAEType' value64='1819242087'/>
<enum name='kPMLayoutBottomTopLeftRight' value64='7'/>
<enum name='kPMLayoutBottomTopRightLeft' value64='8'/>
<enum name='kPMLayoutDownAEKey' value64='1819765860'/>
<enum name='kPMLayoutDownAEType' value64='1819242087'/>
<enum name='kPMLayoutLeftRightBottomTop' value64='2'/>
<enum name='kPMLayoutLeftRightTopBottom' value64='1'/>
<enum name='kPMLayoutRightLeftBottomTop' value64='4'/>
<enum name='kPMLayoutRightLeftTopBottom' value64='3'/>
<enum name='kPMLayoutTopBottomLeftRight' value64='5'/>
<enum name='kPMLayoutTopBottomRightLeft' value64='6'/>
<enum name='kPMMessagingError' value64='-9624'/>
<enum name='kPMNoDefaultItem' value64='-9500'/>
<enum name='kPMNoDefaultPrinter' value64='-30872'/>
<enum name='kPMNoDefaultSettings' value64='-9501'/>
<enum name='kPMNoError' value64='0'/>
<enum name='kPMNoPrinterJobID' value64='-9667'/>
<enum name='kPMNoSelectedPrinters' value64='-9541'/>
<enum name='kPMNoSuchEntry' value64='-30874'/>
<enum name='kPMNotImplemented' value64='-30873'/>
<enum name='kPMObjectInUse' value64='-30881'/>
<enum name='kPMOpenFailed' value64='-9781'/>
<enum name='kPMOutOfScope' value64='-30871'/>
<enum name='kPMPDFWorkFlowAEKey' value64='2003987302'/>
<enum name='kPMPDFWorkFlowAEType' value64='1970562616'/>
<enum name='kPMPMSymbolNotFound' value64='-9660'/>
<enum name='kPMPageToPaperMappingNone' value64='1'/>
<enum name='kPMPageToPaperMappingScaleToFit' value64='2'/>
<enum name='kPMPaperTypeCoated' value64='2'/>
<enum name='kPMPaperTypeGlossy' value64='4'/>
<enum name='kPMPaperTypePlain' value64='1'/>
<enum name='kPMPaperTypePremium' value64='3'/>
<enum name='kPMPaperTypeTShirt' value64='6'/>
<enum name='kPMPaperTypeTransparency' value64='5'/>
<enum name='kPMPaperTypeUnknown' value64='0'/>
<enum name='kPMPermissionError' value64='-9636'/>
<enum name='kPMPluginNotFound' value64='-9701'/>
<enum name='kPMPluginRegisterationFailed' value64='-9702'/>
<enum name='kPMPortrait' value64='1'/>
<enum name='kPMPrBrowserNoUI' value64='-9545'/>
<enum name='kPMPresetAEKey' value64='1886548852'/>
<enum name='kPMPresetAEType' value64='1970562616'/>
<enum name='kPMPrintAllPages' value64='-1'/>
<enum name='kPMPrintSettingsAEType' value64='1886610804'/>
<enum name='kPMPrintTimeAEKey' value64='1819767156'/>
<enum name='kPMPrintTimeAEType' value64='1818522656'/>
<enum name='kPMPrinterAEType' value64='1953656946'/>
<enum name='kPMPrinterIdle' value64='3'/>
<enum name='kPMPrinterProcessing' value64='4'/>
<enum name='kPMPrinterStopped' value64='5'/>
<enum name='kPMQualityBest' value64='13'/>
<enum name='kPMQualityDraft' value64='4'/>
<enum name='kPMQualityHighest' value64='15'/>
<enum name='kPMQualityInkSaver' value64='1'/>
<enum name='kPMQualityLowest' value64='0'/>
<enum name='kPMQualityNormal' value64='8'/>
<enum name='kPMQualityPhoto' value64='11'/>
<enum name='kPMQueueAlreadyExists' value64='-9639'/>
<enum name='kPMQueueJobFailed' value64='-9640'/>
<enum name='kPMQueueNotFound' value64='-9638'/>
<enum name='kPMRGBColorSpaceModel' value64='2'/>
<enum name='kPMReadFailed' value64='-9782'/>
<enum name='kPMReadGotZeroData' value64='-9788'/>
<enum name='kPMReverseLandscape' value64='4'/>
<enum name='kPMReversePortrait' value64='3'/>
<enum name='kPMSaveAsPDFAEKey' value64='1936745574'/>
<enum name='kPMSaveAsPDFAEType' value64='1718973036'/>
<enum name='kPMSaveAsPSAEKey' value64='1936749344'/>
<enum name='kPMSaveAsPSAEType' value64='1718973036'/>
<enum name='kPMScalingCenterOnImgArea' value64='6'/>
<enum name='kPMScalingCenterOnPaper' value64='5'/>
<enum name='kPMScalingPinBottomLeft' value64='3'/>
<enum name='kPMScalingPinBottomRight' value64='4'/>
<enum name='kPMScalingPinTopLeft' value64='1'/>
<enum name='kPMScalingPinTopRight' value64='2'/>
<enum name='kPMServerAlreadyRunning' value64='-9631'/>
<enum name='kPMServerAttributeRestricted' value64='-9633'/>
<enum name='kPMServerCommunicationFailed' value64='-9621'/>
<enum name='kPMServerNotFound' value64='-9630'/>
<enum name='kPMServerSuspended' value64='-9632'/>
<enum name='kPMShowDefaultInlineItems' value64='32768'/>
<enum name='kPMShowInlineCopies' value64='1'/>
<enum name='kPMShowInlineOrientation' value64='8'/>
<enum name='kPMShowInlinePageRange' value64='2'/>
<enum name='kPMShowInlinePageRangeWithSelection' value64='64'/>
<enum name='kPMShowInlinePaperSize' value64='4'/>
<enum name='kPMShowInlineScale' value64='128'/>
<enum name='kPMShowPageAttributesPDE' value64='256'/>
<enum name='kPMShowPrintDialogAEType' value64='1885629543'/>
<enum name='kPMSimplexTumble' value64='4'/>
<enum name='kPMStatusFailed' value64='-9784'/>
<enum name='kPMStringConversionFailure' value64='-30883'/>
<enum name='kPMSubTicketNotFound' value64='-9583'/>
<enum name='kPMSyncRequestFailed' value64='-9543'/>
<enum name='kPMTargetPrinterAEKey' value64='1953656946'/>
<enum name='kPMTargetPrinterAEType' value64='1413830740'/>
<enum name='kPMTemplateIsLocked' value64='-9588'/>
<enum name='kPMTicketIsLocked' value64='-9587'/>
<enum name='kPMTicketTypeNotFound' value64='-9580'/>
<enum name='kPMUnableToFindProcess' value64='-9532'/>
<enum name='kPMUnexpectedImagingError' value64='-9707'/>
<enum name='kPMUnknownColorSpaceModel' value64='0'/>
<enum name='kPMUnknownDataType' value64='-9591'/>
<enum name='kPMUnknownMessage' value64='-9637'/>
<enum name='kPMUnlocked' value64='0'/>
<enum name='kPMUnsupportedConnection' value64='-9786'/>
<enum name='kPMUpdateTicketFailed' value64='-9581'/>
<enum name='kPMUserOrGroupNotFound' value64='-9635'/>
<enum name='kPMValidateTicketFailed' value64='-9582'/>
<enum name='kPMValueOutOfRange' value64='-30877'/>
<enum name='kPMWriteFailed' value64='-9783'/>
<enum name='kPMXMLParseError' value64='-30884'/>
<enum name='kSystemPPDDomain' value64='2'/>
<enum name='kUserPPDDomain' value64='5'/>
<function name='PMCGImageCreateWithEPSDataProvider'>
<arg declared_type64='CGDataProviderRef _Nullable' name='epsDataProvider' type64='^{CGDataProvider=}'/>
<arg declared_type64='CGImageRef _Nonnull' name='epsPreview' type64='^{CGImage=}'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</function>
<function name='PMCopyAvailablePPDs'>
<arg declared_type64='PMPPDDomain' name='domain' type64='S'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='ppds' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCopyLocalizedPPD'>
<arg declared_type64='CFURLRef _Nonnull' name='ppd' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef _Nullable * _Nonnull' name='localizedPPD' type64='^^{__CFURL}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCopyPPDData'>
<arg declared_type64='CFURLRef _Nonnull' name='ppd' type64='^{__CFURL=}'/>
<arg declared_type64='CFDataRef _Nullable * _Nonnull' name='data' type64='^^{__CFData}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCopyPageFormat'>
<arg declared_type64='PMPageFormat _Nonnull' name='formatSrc' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='PMPageFormat _Nonnull' name='formatDest' type64='^{OpaquePMPageFormat=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCopyPrintSettings'>
<arg declared_type64='PMPrintSettings _Nonnull' name='settingSrc' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='settingDest' type64='^{OpaquePMPrintSettings=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCreateGenericPrinter'>
<arg declared_type64='PMPrinter _Nullable * _Nonnull' name='printer' type64='^^{OpaquePMPrinter}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCreatePageFormat'>
<arg declared_type64='PMPageFormat _Nullable * _Nonnull' name='pageFormat' type64='^^{OpaquePMPageFormat}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCreatePageFormatWithPMPaper'>
<arg declared_type64='PMPageFormat _Nullable * _Nonnull' name='pageFormat' type64='^^{OpaquePMPageFormat}'/>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCreatePrintSettings'>
<arg declared_type64='PMPrintSettings _Nullable * _Nonnull' name='printSettings' type64='^^{OpaquePMPrintSettings}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMCreateSession'>
<arg declared_type64='PMPrintSession _Nullable * _Nonnull' name='printSession' type64='^^{OpaquePMPrintSession}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetAdjustedPageRect'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='PMRect * _Nonnull' name='pageRect' type64='^{PMRect=dddd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetAdjustedPaperRect'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='PMRect * _Nonnull' name='paperRect' type64='^{PMRect=dddd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetCollate'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='Boolean * _Nonnull' name='collate' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetCopies'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='copies' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetDuplex'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMDuplexMode * _Nonnull' name='duplexSetting' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetFirstPage'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='first' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetLastPage'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='last' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetOrientation'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='PMOrientation * _Nonnull' name='orientation' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetPageFormatExtendedData'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='OSType' name='dataID' type64='I'/>
<arg declared_type64='UInt32 * _Nullable' name='size' type64='^I'/>
<arg declared_type64='void * _Nullable' name='extendedData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetPageFormatPaper'>
<arg declared_type64='PMPageFormat _Nonnull' name='format' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='PMPaper _Nullable * _Nonnull' name='paper' type64='^^{OpaquePMPaper}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetPageRange'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='minPage' type64='^I'/>
<arg declared_type64='UInt32 * _Nonnull' name='maxPage' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetScale'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='double * _Nonnull' name='scale' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetUnadjustedPageRect'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='PMRect * _Nonnull' name='pageRect' type64='^{PMRect=dddd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMGetUnadjustedPaperRect'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='PMRect * _Nonnull' name='paperRect' type64='^{PMRect=dddd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPageFormatCreateDataRepresentation'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='CFDataRef _Nullable * _Nonnull' name='data' type64='^^{__CFData}'/>
<arg declared_type64='PMDataFormat' name='format' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPageFormatCreateWithDataRepresentation'>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<arg declared_type64='PMPageFormat _Nullable * _Nonnull' name='pageFormat' type64='^^{OpaquePMPageFormat}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPageFormatGetPrinterID'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='printerID' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperCreateCustom'>
<arg declared_type64='PMPrinter _Nullable' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFStringRef _Nullable' name='id' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable' name='name' type64='^{__CFString=}'/>
<arg declared_type64='double' name='width' type64='d'/>
<arg declared_type64='double' name='height' type64='d'/>
<arg const='true' declared_type64='PMPaperMargins * _Nonnull' name='margins' type64='^{PMRect=dddd}'/>
<arg declared_type64='PMPaper _Nullable * _Nonnull' name='paperP' type64='^^{OpaquePMPaper}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperCreateLocalizedName'>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='paperName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperGetHeight'>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<arg declared_type64='double * _Nonnull' name='paperHeight' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperGetID'>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='paperID' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperGetMargins'>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<arg declared_type64='PMPaperMargins * _Nonnull' name='paperMargins' type64='^{PMRect=dddd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperGetPPDPaperName'>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='paperName' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperGetPrinterID'>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='printerID' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperGetWidth'>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<arg declared_type64='double * _Nonnull' name='paperWidth' type64='^d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPaperIsCustom'>
<arg declared_type64='PMPaper _Nonnull' name='paper' type64='^{OpaquePMPaper=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='PMPresetCopyName'>
<arg declared_type64='PMPreset _Nonnull' name='preset' type64='^{OpaquePMPreset=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='name' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPresetCreatePrintSettings'>
<arg declared_type64='PMPreset _Nonnull' name='preset' type64='^{OpaquePMPreset=}'/>
<arg declared_type64='PMPrintSession _Nonnull' name='session' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrintSettings _Nullable * _Nonnull' name='printSettings' type64='^^{OpaquePMPrintSettings}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPresetGetAttributes'>
<arg declared_type64='PMPreset _Nonnull' name='preset' type64='^{OpaquePMPreset=}'/>
<arg declared_type64='CFDictionaryRef _Nullable * _Nonnull' name='attributes' type64='^^{__CFDictionary}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsCopyAsDictionary'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFDictionaryRef _Nullable * _Nonnull' name='settingsDictionary' type64='^^{__CFDictionary}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsCopyKeys'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='settingsKeys' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsCreateDataRepresentation'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFDataRef _Nullable * _Nonnull' name='data' type64='^^{__CFData}'/>
<arg declared_type64='PMDataFormat' name='format' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsCreateWithDataRepresentation'>
<arg declared_type64='CFDataRef _Nonnull' name='data' type64='^{__CFData=}'/>
<arg declared_type64='PMPrintSettings _Nullable * _Nonnull' name='printSettings' type64='^^{OpaquePMPrintSettings}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsGetJobName'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='name' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsGetValue'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='key' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nullable * _Nonnull' name='value' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsSetJobName'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='name' type64='^{__CFString=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsSetValue'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='key' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nullable' name='value' type64='@'/>
<arg declared_type64='Boolean' name='locked' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsToOptions'>
<arg declared_type64='PMPrintSettings _Nonnull' name='settings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='char * _Nullable * _Nonnull' name='options' type64='^*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrintSettingsToOptionsWithPrinterAndPageFormat'>
<arg declared_type64='PMPrintSettings _Nonnull' name='settings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMPageFormat _Nullable' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='char * _Nullable * _Nonnull' name='options' type64='^*'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterCopyDescriptionURL'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='descriptionType' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef _Nullable * _Nonnull' name='fileURL' type64='^^{__CFURL}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterCopyDeviceURI'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFURLRef _Nullable * _Nonnull' name='deviceURI' type64='^^{__CFURL}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterCopyHostName'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='hostNameP' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterCopyPresets'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='presetList' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterCopyState'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFDictionaryRef _Nullable * _Nonnull' name='stateDict' type64='^^{__CFDictionary}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterCreateFromPrinterID'>
<arg declared_type64='CFStringRef _Nonnull' name='printerID' type64='^{__CFString=}'/>
<retval declared_type64='PMPrinter _Nullable' type64='^{OpaquePMPrinter=}'/>
</function>
<function name='PMPrinterGetCommInfo'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='Boolean * _Nullable' name='supportsControlCharRangeP' type64='^B'/>
<arg declared_type64='Boolean * _Nullable' name='supportsEightBitP' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetDriverCreator'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='OSType * _Nonnull' name='creator' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetDriverReleaseInfo'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='VersRec * _Nonnull' name='release' type64='^{VersRec={NumVersion=CCCC}s[256C][256C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetID'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='PMPrinterGetIndexedPrinterResolution'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='UInt32' name='index' type64='I'/>
<arg declared_type64='PMResolution * _Nonnull' name='resolutionP' type64='^{PMResolution=dd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetLanguageInfo'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMLanguageInfo * _Nonnull' name='info' type64='^{PMLanguageInfo=[33C][33C][33C]}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetLocation'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='PMPrinterGetMakeAndModelName'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='makeAndModel' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetMimeTypes'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMPrintSettings _Nullable' name='settings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='mimeTypes' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetName'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<retval declared_type64='CFStringRef _Nullable' type64='^{__CFString=}'/>
</function>
<function name='PMPrinterGetOutputResolution'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMResolution * _Nonnull' name='resolutionP' type64='^{PMResolution=dd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetPaperList'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='paperList' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetPrinterResolutionCount'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='UInt32 * _Nonnull' name='countP' type64='^I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterGetState'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMPrinterState * _Nonnull' name='state' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterIsDefault'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='PMPrinterIsFavorite'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='PMPrinterIsPostScriptCapable'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<retval declared_type64='Boolean' type64='B'/>
</function>
<function name='PMPrinterIsPostScriptPrinter'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='Boolean * _Nonnull' name='isPSPrinter' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterIsRemote'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='Boolean * _Nonnull' name='isRemoteP' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterPrintWithFile'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='settings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMPageFormat _Nullable' name='format' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='CFStringRef _Nullable' name='mimeType' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='fileURL' type64='^{__CFURL=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterPrintWithProvider'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='settings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMPageFormat _Nullable' name='format' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='mimeType' type64='^{__CFString=}'/>
<arg declared_type64='CGDataProviderRef _Nonnull' name='provider' type64='^{CGDataProvider=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterSendCommand'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='commandString' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable' name='jobTitle' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterSetDefault'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterSetOutputResolution'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg const='true' declared_type64='PMResolution * _Nonnull' name='resolutionP' type64='^{PMResolution=dd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMPrinterWritePostScriptToURL'>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='settings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMPageFormat _Nullable' name='format' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='CFStringRef _Nullable' name='mimeType' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='sourceFileURL' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='destinationFileURL' type64='^{__CFURL=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMRelease'>
<arg declared_type64='PMObject _Nullable' name='object' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMRetain'>
<arg declared_type64='PMObject _Nullable' name='object' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMServerCreatePrinterList'>
<arg declared_type64='PMServer _Nullable' name='server' type64='^{OpaquePMServer=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='printerList' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMServerLaunchPrinterBrowser'>
<arg declared_type64='PMServer _Nullable' name='server' type64='^{OpaquePMServer=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionBeginCGDocumentNoDialog'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionBeginPageNoDialog'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPageFormat _Nullable' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg const='true' declared_type64='PMRect * _Nullable' name='pageFrame' type64='^{PMRect=dddd}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionCopyDestinationFormat'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='destFormatP' type64='^^{__CFString}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionCopyDestinationLocation'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFURLRef _Nullable * _Nonnull' name='destLocationP' type64='^^{__CFURL}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionCopyOutputFormatList'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMDestinationType' name='destType' type64='S'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='documentFormatP' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionCreatePageFormatList'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrinter _Nullable' name='printer' type64='^{OpaquePMPrinter=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='pageFormatList' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionCreatePrinterList'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='printerList' type64='^^{__CFArray}'/>
<arg declared_type64='CFIndex * _Nullable' name='currentIndex' type64='^q'/>
<arg declared_type64='PMPrinter _Nullable * _Nullable' name='currentPrinter' type64='^^{OpaquePMPrinter}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionDefaultPageFormat'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionDefaultPrintSettings'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionEndDocumentNoDialog'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionEndPageNoDialog'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionError'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionGetCGGraphicsContext'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='CGContextRef _Nullable * _Nonnull' name='context' type64='^^{CGContext}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionGetCurrentPrinter'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrinter _Nullable * _Nonnull' name='currentPrinter' type64='^^{OpaquePMPrinter}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionGetDataFromSession'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='key' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nullable * _Nonnull' name='data' type64='^^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionGetDestinationType'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMDestinationType * _Nonnull' name='destTypeP' type64='^S'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionSetCurrentPMPrinter'>
<arg declared_type64='PMPrintSession _Nonnull' name='session' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrinter _Nonnull' name='printer' type64='^{OpaquePMPrinter=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionSetDataInSession'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='CFStringRef _Nonnull' name='key' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nonnull' name='data' type64='@'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionSetDestination'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMDestinationType' name='destType' type64='S'/>
<arg declared_type64='CFStringRef _Nullable' name='destFormat' type64='^{__CFString=}'/>
<arg declared_type64='CFURLRef _Nullable' name='destLocation' type64='^{__CFURL=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionSetError'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='OSStatus' name='printError' type64='i'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionValidatePageFormat'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='Boolean * _Nullable' name='changed' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSessionValidatePrintSettings'>
<arg declared_type64='PMPrintSession _Nonnull' name='printSession' type64='^{OpaquePMPrintSession=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='Boolean * _Nullable' name='changed' type64='^B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetCollate'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='Boolean' name='collate' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetCopies'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='UInt32' name='copies' type64='I'/>
<arg declared_type64='Boolean' name='lock' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetDuplex'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='PMDuplexMode' name='duplexSetting' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetFirstPage'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='UInt32' name='first' type64='I'/>
<arg declared_type64='Boolean' name='lock' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetLastPage'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='UInt32' name='last' type64='I'/>
<arg declared_type64='Boolean' name='lock' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetOrientation'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='PMOrientation' name='orientation' type64='S'/>
<arg declared_type64='Boolean' name='lock' type64='B'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetPageFormatExtendedData'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='OSType' name='dataID' type64='I'/>
<arg declared_type64='UInt32' name='size' type64='I'/>
<arg declared_type64='void * _Nonnull' name='extendedData' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetPageRange'>
<arg declared_type64='PMPrintSettings _Nonnull' name='printSettings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='UInt32' name='minPage' type64='I'/>
<arg declared_type64='UInt32' name='maxPage' type64='I'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMSetScale'>
<arg declared_type64='PMPageFormat _Nonnull' name='pageFormat' type64='^{OpaquePMPageFormat=}'/>
<arg declared_type64='double' name='scale' type64='d'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMWorkflowCopyItems'>
<arg declared_type64='CFArrayRef _Nullable * _Nonnull' name='workflowItems' type64='^^{__CFArray}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMWorkflowSubmitPDFWithOptions'>
<arg declared_type64='CFURLRef _Nonnull' name='workflowItem' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef _Nullable' name='title' type64='^{__CFString=}'/>
<arg const='true' declared_type64='char * _Nullable' name='options' type64='*'/>
<arg declared_type64='CFURLRef _Nonnull' name='pdfFile' type64='^{__CFURL=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<function name='PMWorkflowSubmitPDFWithSettings'>
<arg declared_type64='CFURLRef _Nonnull' name='workflowItem' type64='^{__CFURL=}'/>
<arg declared_type64='PMPrintSettings _Nonnull' name='settings' type64='^{OpaquePMPrintSettings=}'/>
<arg declared_type64='CFURLRef _Nonnull' name='pdfFile' type64='^{__CFURL=}'/>
<retval declared_type64='OSStatus' type64='i'/>
</function>
<class name='NSObject'>
<method selector='PDEPanelsForType:withHostInfo:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='pdeType' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='host' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='PMPrinter'>
<retval declared_type64='PMPrinter _Nonnull' type64='^{OpaquePMPrinter=}'/>
</method>
<method selector='PPDOptionKeyValueDidChange:ppdChoice:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='option' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='choice' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithBundle:'>
<arg declared_type64='NSBundle * _Nonnull' index='0' name='theBundle' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pageFormat'>
<retval declared_type64='PMPageFormat _Nullable' type64='^{OpaquePMPageFormat=}'/>
</method>
<method selector='panelKind'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='panelName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='panelView'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='ppdFile'>
<retval declared_type64='ppd_file_t * _Nullable' type64='^{ppd_file_s=iiiiiiiiii*i^{ppd_emul_s}***********i^{ppd_group_s}i^{ppd_size_s}[2f][2f][4f]i^{ppd_const_s}i^*i^{ppd_profile_s}i^*i**ii^^{ppd_attr_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_ppd_cache_s}}'/>
</method>
<method selector='printSession'>
<retval declared_type64='PMPrintSession _Nullable' type64='^{OpaquePMPrintSession=}'/>
</method>
<method selector='printSettings'>
<retval declared_type64='PMPrintSettings _Nullable' type64='^{OpaquePMPrintSettings=}'/>
</method>
<method selector='printWindowWillClose:'>
<arg declared_type64='BOOL' index='0' name='userCanceled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='restoreValuesAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='saveValuesAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldHide'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldPrint'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldShowHelp'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='summaryInfo'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='supportedPPDOptionKeys'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='willChangePPDOptionKeyValue:ppdChoice:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='option' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='choice' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='willShow'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<informal_protocol name='PDEPanel'>
<method selector='PPDOptionKeyValueDidChange:ppdChoice:' type64='v32@0:8@16@24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='option' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='choice' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='panelKind' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='panelName' type64='@16@0:8'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='panelView' type64='@16@0:8'>
<retval declared_type64='NSView * _Nullable' type64='@'/>
</method>
<method selector='printWindowWillClose:' type64='v20@0:8B16'>
<arg declared_type64='BOOL' index='0' name='userCanceled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='restoreValuesAndReturnError:' type64='B24@0:8^@16'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='saveValuesAndReturnError:' type64='B24@0:8^@16'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldHide' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldPrint' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='shouldShowHelp' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='summaryInfo' type64='@16@0:8'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='supportedPPDOptionKeys' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='willShow' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='PDEPlugIn'>
<method selector='PDEPanelsForType:withHostInfo:' type64='@32@0:8@16@24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='pdeType' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='host' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='initWithBundle:' type64='B24@0:8@16'>
<arg declared_type64='NSBundle * _Nonnull' index='0' name='theBundle' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='PDEPlugInCallbackProtocol'>
<method selector='PMPrinter' type64='^{OpaquePMPrinter=}16@0:8'>
<retval declared_type64='PMPrinter _Nonnull' type64='^{OpaquePMPrinter=}'/>
</method>
<method selector='pageFormat' type64='^{OpaquePMPageFormat=}16@0:8'>
<retval declared_type64='PMPageFormat _Nullable' type64='^{OpaquePMPageFormat=}'/>
</method>
<method selector='ppdFile' type64='^{ppd_file_s=iiiiiiiiii*i^{ppd_emul_s}***********i^{ppd_group_s}i^{ppd_size_s}[2f][2f][4f]i^{ppd_const_s}i^*i^{ppd_profile_s}i^*i**ii^^{ppd_attr_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_ppd_cache_s}}16@0:8'>
<retval declared_type64='ppd_file_t * _Nullable' type64='^{ppd_file_s=iiiiiiiiii*i^{ppd_emul_s}***********i^{ppd_group_s}i^{ppd_size_s}[2f][2f][4f]i^{ppd_const_s}i^*i^{ppd_profile_s}i^*i**ii^^{ppd_attr_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_cups_array_s}^{_ppd_cache_s}}'/>
</method>
<method selector='printSession' type64='^{OpaquePMPrintSession=}16@0:8'>
<retval declared_type64='PMPrintSession _Nullable' type64='^{OpaquePMPrintSession=}'/>
</method>
<method selector='printSettings' type64='^{OpaquePMPrintSettings=}16@0:8'>
<retval declared_type64='PMPrintSettings _Nullable' type64='^{OpaquePMPrintSettings=}'/>
</method>
<method selector='willChangePPDOptionKeyValue:ppdChoice:' type64='B32@0:8@16@24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='option' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='choice' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<struct name='AsscEntry' type64='{AsscEntry=&quot;fontSize&quot;s&quot;fontStyle&quot;s&quot;fontID&quot;s}'>
<field declared_type64='SInt16' name='fontSize' type64='s'/>
<field declared_type64='SInt16' name='fontStyle' type64='s'/>
<field declared_type64='SInt16' name='fontID' type64='s'/>
</struct>
<struct name='BitMap' type64='{BitMap=&quot;baseAddr&quot;*&quot;rowBytes&quot;s&quot;bounds&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}}'>
<field declared_type64='Ptr' name='baseAddr' type64='*'/>
<field declared_type64='short' name='rowBytes' type64='s'/>
<field declared_type64='Rect' name='bounds' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
</struct>
<struct name='CGrafPort' type64='{GrafPort=&quot;whatever&quot;[87s]}'>
<field declared_type64='short*' name='whatever' type64='[87s]'/>
</struct>
<struct name='CM2Header' type64='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}'>
<field declared_type64='UInt32' name='size' type64='I'/>
<field declared_type64='OSType' name='CMMType' type64='I'/>
<field declared_type64='UInt32' name='profileVersion' type64='I'/>
<field declared_type64='OSType' name='profileClass' type64='I'/>
<field declared_type64='OSType' name='dataColorSpace' type64='I'/>
<field declared_type64='OSType' name='profileConnectionSpace' type64='I'/>
<field declared_type64='CMDateTime' name='dateTime' type64='{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}'/>
<field declared_type64='OSType' name='CS2profileSignature' type64='I'/>
<field declared_type64='OSType' name='platform' type64='I'/>
<field declared_type64='UInt32' name='flags' type64='I'/>
<field declared_type64='OSType' name='deviceManufacturer' type64='I'/>
<field declared_type64='UInt32' name='deviceModel' type64='I'/>
<field declared_type64='UInt32*' name='deviceAttributes' type64='[2I]'/>
<field declared_type64='UInt32' name='renderingIntent' type64='I'/>
<field declared_type64='CMFixedXYZColor' name='white' type64='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field declared_type64='OSType' name='creator' type64='I'/>
<field declared_type64='char*' name='reserved' type64='[44c]'/>
</struct>
<struct name='CM2Profile' type64='{CM2Profile=&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;tagTable&quot;{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}&quot;elemData&quot;[1c]}'>
<field declared_type64='CM2Header' name='header' type64='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}'/>
<field declared_type64='CMTagElemTable' name='tagTable' type64='{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}'/>
<field declared_type64='char*' name='elemData' type64='[1c]'/>
</struct>
<struct name='CM2ProfilePtr' type64='{CM2Profile=&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;tagTable&quot;{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}&quot;elemData&quot;[1c]}'>
<field declared_type64='CM2Header' name='header' type64='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}'/>
<field declared_type64='CMTagElemTable' name='tagTable' type64='{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}'/>
<field declared_type64='char*' name='elemData' type64='[1c]'/>
</struct>
<struct name='CM4Header' type64='{CM4Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;digest&quot;[16C]&quot;reserved&quot;[28c]}'>
<field declared_type64='UInt32' name='size' type64='I'/>
<field declared_type64='OSType' name='CMMType' type64='I'/>
<field declared_type64='UInt32' name='profileVersion' type64='I'/>
<field declared_type64='OSType' name='profileClass' type64='I'/>
<field declared_type64='OSType' name='dataColorSpace' type64='I'/>
<field declared_type64='OSType' name='profileConnectionSpace' type64='I'/>
<field declared_type64='CMDateTime' name='dateTime' type64='{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}'/>
<field declared_type64='OSType' name='CS2profileSignature' type64='I'/>
<field declared_type64='OSType' name='platform' type64='I'/>
<field declared_type64='UInt32' name='flags' type64='I'/>
<field declared_type64='OSType' name='deviceManufacturer' type64='I'/>
<field declared_type64='UInt32' name='deviceModel' type64='I'/>
<field declared_type64='UInt32*' name='deviceAttributes' type64='[2I]'/>
<field declared_type64='UInt32' name='renderingIntent' type64='I'/>
<field declared_type64='CMFixedXYZColor' name='white' type64='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field declared_type64='OSType' name='creator' type64='I'/>
<field declared_type64='CMProfileMD5' name='digest' type64='[16C]'/>
<field declared_type64='char*' name='reserved' type64='[28c]'/>
</struct>
<struct name='CMAdaptationMatrixType' type64='{CMAdaptationMatrixType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;adaptationMatrix&quot;[9i]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='Fixed*' name='adaptationMatrix' type64='[9i]'/>
</struct>
<struct name='CMBitmap' type64='{CMBitmap=&quot;image&quot;*&quot;width&quot;Q&quot;height&quot;Q&quot;rowBytes&quot;Q&quot;pixelSize&quot;Q&quot;space&quot;I&quot;user1&quot;I&quot;user2&quot;I}'>
<field declared_type64='char*' name='image' type64='*'/>
<field declared_type64='size_t' name='width' type64='Q'/>
<field declared_type64='size_t' name='height' type64='Q'/>
<field declared_type64='size_t' name='rowBytes' type64='Q'/>
<field declared_type64='size_t' name='pixelSize' type64='Q'/>
<field declared_type64='CMBitmapColorSpace' name='space' type64='I'/>
<field declared_type64='UInt32' name='user1' type64='I'/>
<field declared_type64='UInt32' name='user2' type64='I'/>
</struct>
<struct name='CMBufferLocation' type64='{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I}'>
<field declared_type64='void*' name='buffer' type64='^v'/>
<field declared_type64='UInt32' name='size' type64='I'/>
</struct>
<struct name='CMCMYColor' type64='{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}'>
<field declared_type64='UInt16' name='cyan' type64='S'/>
<field declared_type64='UInt16' name='magenta' type64='S'/>
<field declared_type64='UInt16' name='yellow' type64='S'/>
</struct>
<struct name='CMCMYKColor' type64='{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}'>
<field declared_type64='UInt16' name='cyan' type64='S'/>
<field declared_type64='UInt16' name='magenta' type64='S'/>
<field declared_type64='UInt16' name='yellow' type64='S'/>
<field declared_type64='UInt16' name='black' type64='S'/>
</struct>
<struct name='CMConcatProfileSet' type64='{CMConcatProfileSet=&quot;keyIndex&quot;S&quot;count&quot;S&quot;profileSet&quot;[1^{OpaqueCMProfileRef}]}'>
<field declared_type64='UInt16' name='keyIndex' type64='S'/>
<field declared_type64='UInt16' name='count' type64='S'/>
<field declared_type64='CMProfileRef*' name='profileSet' type64='[1^{OpaqueCMProfileRef}]'/>
</struct>
<struct name='CMCurveType' type64='{CMCurveType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;countValue&quot;I&quot;data&quot;[1S]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='countValue' type64='I'/>
<field declared_type64='UInt16*' name='data' type64='[1S]'/>
</struct>
<struct name='CMDataType' type64='{CMDataType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;dataFlag&quot;I&quot;data&quot;[1c]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='dataFlag' type64='I'/>
<field declared_type64='char*' name='data' type64='[1c]'/>
</struct>
<struct name='CMDateTime' type64='{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}'>
<field declared_type64='UInt16' name='year' type64='S'/>
<field declared_type64='UInt16' name='month' type64='S'/>
<field declared_type64='UInt16' name='dayOfTheMonth' type64='S'/>
<field declared_type64='UInt16' name='hours' type64='S'/>
<field declared_type64='UInt16' name='minutes' type64='S'/>
<field declared_type64='UInt16' name='seconds' type64='S'/>
</struct>
<struct name='CMDateTimeType' type64='{CMDateTimeType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='CMDateTime' name='dateTime' type64='{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}'/>
</struct>
<struct name='CMDeviceInfo' type64='{CMDeviceInfo=&quot;dataVersion&quot;I&quot;deviceClass&quot;I&quot;deviceID&quot;I&quot;deviceScope&quot;{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}&quot;deviceState&quot;I&quot;defaultProfileID&quot;I&quot;deviceName&quot;^^{__CFDictionary}&quot;profileCount&quot;I&quot;reserved&quot;I}'>
<field declared_type64='UInt32' name='dataVersion' type64='I'/>
<field declared_type64='CMDeviceClass' name='deviceClass' type64='I'/>
<field declared_type64='CMDeviceID' name='deviceID' type64='I'/>
<field declared_type64='CMDeviceScope' name='deviceScope' type64='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'/>
<field declared_type64='CMDeviceState' name='deviceState' type64='I'/>
<field declared_type64='CMDeviceProfileID' name='defaultProfileID' type64='I'/>
<field declared_type64='CFDictionaryRef*' name='deviceName' type64='^^{__CFDictionary}'/>
<field declared_type64='UInt32' name='profileCount' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
</struct>
<struct name='CMDeviceInfoPtr' type64='{CMDeviceInfo=&quot;dataVersion&quot;I&quot;deviceClass&quot;I&quot;deviceID&quot;I&quot;deviceScope&quot;{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}&quot;deviceState&quot;I&quot;defaultProfileID&quot;I&quot;deviceName&quot;^^{__CFDictionary}&quot;profileCount&quot;I&quot;reserved&quot;I}'>
<field declared_type64='UInt32' name='dataVersion' type64='I'/>
<field declared_type64='CMDeviceClass' name='deviceClass' type64='I'/>
<field declared_type64='CMDeviceID' name='deviceID' type64='I'/>
<field declared_type64='CMDeviceScope' name='deviceScope' type64='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'/>
<field declared_type64='CMDeviceState' name='deviceState' type64='I'/>
<field declared_type64='CMDeviceProfileID' name='defaultProfileID' type64='I'/>
<field declared_type64='CFDictionaryRef*' name='deviceName' type64='^^{__CFDictionary}'/>
<field declared_type64='UInt32' name='profileCount' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
</struct>
<struct name='CMDeviceProfileArray' type64='{CMDeviceProfileArray=&quot;profileCount&quot;I&quot;profiles&quot;[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]}'>
<field declared_type64='UInt32' name='profileCount' type64='I'/>
<field declared_type64='CMDeviceProfileInfo*' name='profiles' type64='[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]'/>
</struct>
<struct name='CMDeviceProfileArrayPtr' type64='{CMDeviceProfileArray=&quot;profileCount&quot;I&quot;profiles&quot;[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]}'>
<field declared_type64='UInt32' name='profileCount' type64='I'/>
<field declared_type64='CMDeviceProfileInfo*' name='profiles' type64='[1{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}]'/>
</struct>
<struct name='CMDeviceProfileInfo' type64='{CMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;reserved&quot;I}'>
<field declared_type64='UInt32' name='dataVersion' type64='I'/>
<field declared_type64='CMDeviceProfileID' name='profileID' type64='I'/>
<field declared_type64='CMProfileLocation' name='profileLoc' type64='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}'/>
<field declared_type64='CFDictionaryRef' name='profileName' type64='^{__CFDictionary=}'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
</struct>
<struct name='CMDeviceProfileScope' type64='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'>
<field declared_type64='CFStringRef' name='deviceUser' type64='^{__CFString=}'/>
<field declared_type64='CFStringRef' name='deviceHost' type64='^{__CFString=}'/>
</struct>
<struct name='CMDeviceScope' type64='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'>
<field declared_type64='CFStringRef' name='deviceUser' type64='^{__CFString=}'/>
<field declared_type64='CFStringRef' name='deviceHost' type64='^{__CFString=}'/>
</struct>
<struct name='CMFixedXYColor' type64='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'>
<field declared_type64='Fixed' name='x' type64='i'/>
<field declared_type64='Fixed' name='y' type64='i'/>
</struct>
<struct name='CMFixedXYZColor' type64='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'>
<field declared_type64='Fixed' name='X' type64='i'/>
<field declared_type64='Fixed' name='Y' type64='i'/>
<field declared_type64='Fixed' name='Z' type64='i'/>
</struct>
<struct name='CMFloatBitmap' type64='{CMFloatBitmap=&quot;version&quot;Q&quot;buffers&quot;[16^f]&quot;height&quot;Q&quot;width&quot;Q&quot;rowStride&quot;q&quot;colStride&quot;q&quot;space&quot;I&quot;flags&quot;i}'>
<field declared_type64='unsigned long' name='version' type64='Q'/>
<field declared_type64='float**' name='buffers' type64='[16^f]'/>
<field declared_type64='size_t' name='height' type64='Q'/>
<field declared_type64='size_t' name='width' type64='Q'/>
<field declared_type64='ptrdiff_t' name='rowStride' type64='q'/>
<field declared_type64='ptrdiff_t' name='colStride' type64='q'/>
<field declared_type64='OSType' name='space' type64='I'/>
<field declared_type64='CMFloatBitmapFlags' name='flags' type64='i'/>
</struct>
<struct name='CMGrayColor' type64='{CMGrayColor=&quot;gray&quot;S}'>
<field declared_type64='UInt16' name='gray' type64='S'/>
</struct>
<struct name='CMHLSColor' type64='{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}'>
<field declared_type64='UInt16' name='hue' type64='S'/>
<field declared_type64='UInt16' name='lightness' type64='S'/>
<field declared_type64='UInt16' name='saturation' type64='S'/>
</struct>
<struct name='CMHSVColor' type64='{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}'>
<field declared_type64='UInt16' name='hue' type64='S'/>
<field declared_type64='UInt16' name='saturation' type64='S'/>
<field declared_type64='UInt16' name='value' type64='S'/>
</struct>
<struct name='CMHandleLocation' type64='{CMHandleLocation=&quot;h&quot;^*}'>
<field declared_type64='Handle' name='h' type64='^*'/>
</struct>
<struct name='CMIntentCRDVMSize' type64='{CMIntentCRDVMSize=&quot;renderingIntent&quot;I&quot;VMSize&quot;I}'>
<field declared_type64='UInt32' name='renderingIntent' type64='I'/>
<field declared_type64='UInt32' name='VMSize' type64='I'/>
</struct>
<struct name='CMLabColor' type64='{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}'>
<field declared_type64='UInt16' name='L' type64='S'/>
<field declared_type64='UInt16' name='a' type64='S'/>
<field declared_type64='UInt16' name='b' type64='S'/>
</struct>
<struct name='CMLut16Type' type64='{CMLut16Type=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;gridPoints&quot;C&quot;reserved2&quot;C&quot;matrix&quot;[3[3i]]&quot;inputTableEntries&quot;S&quot;outputTableEntries&quot;S&quot;inputTable&quot;[1S]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt8' name='inputChannels' type64='C'/>
<field declared_type64='UInt8' name='outputChannels' type64='C'/>
<field declared_type64='UInt8' name='gridPoints' type64='C'/>
<field declared_type64='UInt8' name='reserved2' type64='C'/>
<field declared_type64='Fixed**' name='matrix' type64='[3[3i]]'/>
<field declared_type64='UInt16' name='inputTableEntries' type64='S'/>
<field declared_type64='UInt16' name='outputTableEntries' type64='S'/>
<field declared_type64='UInt16*' name='inputTable' type64='[1S]'/>
</struct>
<struct name='CMLut8Type' type64='{CMLut8Type=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;gridPoints&quot;C&quot;reserved2&quot;C&quot;matrix&quot;[3[3i]]&quot;inputTable&quot;[1C]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt8' name='inputChannels' type64='C'/>
<field declared_type64='UInt8' name='outputChannels' type64='C'/>
<field declared_type64='UInt8' name='gridPoints' type64='C'/>
<field declared_type64='UInt8' name='reserved2' type64='C'/>
<field declared_type64='Fixed**' name='matrix' type64='[3[3i]]'/>
<field declared_type64='UInt8*' name='inputTable' type64='[1C]'/>
</struct>
<struct name='CMLuvColor' type64='{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}'>
<field declared_type64='UInt16' name='L' type64='S'/>
<field declared_type64='UInt16' name='u' type64='S'/>
<field declared_type64='UInt16' name='v' type64='S'/>
</struct>
<struct name='CMMInfo' type64='{CMMInfo=&quot;dataSize&quot;Q&quot;CMMType&quot;I&quot;CMMMfr&quot;I&quot;CMMVersion&quot;I&quot;ASCIIName&quot;[32C]&quot;ASCIIDesc&quot;[256C]&quot;UniCodeNameCount&quot;Q&quot;UniCodeName&quot;[32S]&quot;UniCodeDescCount&quot;Q&quot;UniCodeDesc&quot;[256S]}'>
<field declared_type64='size_t' name='dataSize' type64='Q'/>
<field declared_type64='OSType' name='CMMType' type64='I'/>
<field declared_type64='OSType' name='CMMMfr' type64='I'/>
<field declared_type64='UInt32' name='CMMVersion' type64='I'/>
<field declared_type64='unsigned char*' name='ASCIIName' type64='[32C]'/>
<field declared_type64='unsigned char*' name='ASCIIDesc' type64='[256C]'/>
<field declared_type64='UniCharCount' name='UniCodeNameCount' type64='Q'/>
<field declared_type64='UniChar*' name='UniCodeName' type64='[32S]'/>
<field declared_type64='UniCharCount' name='UniCodeDescCount' type64='Q'/>
<field declared_type64='UniChar*' name='UniCodeDesc' type64='[256S]'/>
</struct>
<struct name='CMMakeAndModel' type64='{CMMakeAndModel=&quot;manufacturer&quot;I&quot;model&quot;I&quot;serialNumber&quot;I&quot;manufactureDate&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;reserved3&quot;I&quot;reserved4&quot;I}'>
<field declared_type64='OSType' name='manufacturer' type64='I'/>
<field declared_type64='UInt32' name='model' type64='I'/>
<field declared_type64='UInt32' name='serialNumber' type64='I'/>
<field declared_type64='UInt32' name='manufactureDate' type64='I'/>
<field declared_type64='UInt32' name='reserved1' type64='I'/>
<field declared_type64='UInt32' name='reserved2' type64='I'/>
<field declared_type64='UInt32' name='reserved3' type64='I'/>
<field declared_type64='UInt32' name='reserved4' type64='I'/>
</struct>
<struct name='CMMakeAndModelType' type64='{CMMakeAndModelType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;makeAndModel&quot;{CMMakeAndModel=&quot;manufacturer&quot;I&quot;model&quot;I&quot;serialNumber&quot;I&quot;manufactureDate&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;reserved3&quot;I&quot;reserved4&quot;I}}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='CMMakeAndModel' name='makeAndModel' type64='{CMMakeAndModel=&quot;manufacturer&quot;I&quot;model&quot;I&quot;serialNumber&quot;I&quot;manufactureDate&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;reserved3&quot;I&quot;reserved4&quot;I}'/>
</struct>
<struct name='CMMeasurementType' type64='{CMMeasurementType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;standardObserver&quot;I&quot;backingXYZ&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;geometry&quot;I&quot;flare&quot;I&quot;illuminant&quot;I}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='standardObserver' type64='I'/>
<field declared_type64='CMFixedXYZColor' name='backingXYZ' type64='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field declared_type64='UInt32' name='geometry' type64='I'/>
<field declared_type64='UInt32' name='flare' type64='I'/>
<field declared_type64='UInt32' name='illuminant' type64='I'/>
</struct>
<struct name='CMMultiFunctCLUTType' type64='{CMMultiFunctCLUTType=&quot;gridPoints&quot;[16C]&quot;entrySize&quot;C&quot;reserved&quot;[3C]&quot;data&quot;[2C]}'>
<field declared_type64='UInt8*' name='gridPoints' type64='[16C]'/>
<field declared_type64='UInt8' name='entrySize' type64='C'/>
<field declared_type64='UInt8*' name='reserved' type64='[3C]'/>
<field declared_type64='UInt8*' name='data' type64='[2C]'/>
</struct>
<struct name='CMMultiFunctLutA2BType' type64='{CMMultiFunctLutType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;reserved2&quot;S&quot;offsetBcurves&quot;I&quot;offsetMatrix&quot;I&quot;offsetMcurves&quot;I&quot;offsetCLUT&quot;I&quot;offsetAcurves&quot;I&quot;data&quot;[1C]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt8' name='inputChannels' type64='C'/>
<field declared_type64='UInt8' name='outputChannels' type64='C'/>
<field declared_type64='UInt16' name='reserved2' type64='S'/>
<field declared_type64='UInt32' name='offsetBcurves' type64='I'/>
<field declared_type64='UInt32' name='offsetMatrix' type64='I'/>
<field declared_type64='UInt32' name='offsetMcurves' type64='I'/>
<field declared_type64='UInt32' name='offsetCLUT' type64='I'/>
<field declared_type64='UInt32' name='offsetAcurves' type64='I'/>
<field declared_type64='UInt8*' name='data' type64='[1C]'/>
</struct>
<struct name='CMMultiFunctLutB2AType' type64='{CMMultiFunctLutType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;reserved2&quot;S&quot;offsetBcurves&quot;I&quot;offsetMatrix&quot;I&quot;offsetMcurves&quot;I&quot;offsetCLUT&quot;I&quot;offsetAcurves&quot;I&quot;data&quot;[1C]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt8' name='inputChannels' type64='C'/>
<field declared_type64='UInt8' name='outputChannels' type64='C'/>
<field declared_type64='UInt16' name='reserved2' type64='S'/>
<field declared_type64='UInt32' name='offsetBcurves' type64='I'/>
<field declared_type64='UInt32' name='offsetMatrix' type64='I'/>
<field declared_type64='UInt32' name='offsetMcurves' type64='I'/>
<field declared_type64='UInt32' name='offsetCLUT' type64='I'/>
<field declared_type64='UInt32' name='offsetAcurves' type64='I'/>
<field declared_type64='UInt8*' name='data' type64='[1C]'/>
</struct>
<struct name='CMMultiFunctLutType' type64='{CMMultiFunctLutType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;inputChannels&quot;C&quot;outputChannels&quot;C&quot;reserved2&quot;S&quot;offsetBcurves&quot;I&quot;offsetMatrix&quot;I&quot;offsetMcurves&quot;I&quot;offsetCLUT&quot;I&quot;offsetAcurves&quot;I&quot;data&quot;[1C]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt8' name='inputChannels' type64='C'/>
<field declared_type64='UInt8' name='outputChannels' type64='C'/>
<field declared_type64='UInt16' name='reserved2' type64='S'/>
<field declared_type64='UInt32' name='offsetBcurves' type64='I'/>
<field declared_type64='UInt32' name='offsetMatrix' type64='I'/>
<field declared_type64='UInt32' name='offsetMcurves' type64='I'/>
<field declared_type64='UInt32' name='offsetCLUT' type64='I'/>
<field declared_type64='UInt32' name='offsetAcurves' type64='I'/>
<field declared_type64='UInt8*' name='data' type64='[1C]'/>
</struct>
<struct name='CMMultiLocalizedUniCodeEntryRec' type64='{CMMultiLocalizedUniCodeEntryRec=&quot;languageCode&quot;[2c]&quot;regionCode&quot;[2c]&quot;textLength&quot;I&quot;textOffset&quot;I}'>
<field declared_type64='char*' name='languageCode' type64='[2c]'/>
<field declared_type64='char*' name='regionCode' type64='[2c]'/>
<field declared_type64='UInt32' name='textLength' type64='I'/>
<field declared_type64='UInt32' name='textOffset' type64='I'/>
</struct>
<struct name='CMMultiLocalizedUniCodeType' type64='{CMMultiLocalizedUniCodeType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;entryCount&quot;I&quot;entrySize&quot;I}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='entryCount' type64='I'/>
<field declared_type64='UInt32' name='entrySize' type64='I'/>
</struct>
<struct name='CMMultichannel5Color' type64='{CMMultichannel5Color=&quot;components&quot;[5C]}'>
<field declared_type64='UInt8*' name='components' type64='[5C]'/>
</struct>
<struct name='CMMultichannel6Color' type64='{CMMultichannel6Color=&quot;components&quot;[6C]}'>
<field declared_type64='UInt8*' name='components' type64='[6C]'/>
</struct>
<struct name='CMMultichannel7Color' type64='{CMMultichannel7Color=&quot;components&quot;[7C]}'>
<field declared_type64='UInt8*' name='components' type64='[7C]'/>
</struct>
<struct name='CMMultichannel8Color' type64='{CMMultichannel8Color=&quot;components&quot;[8C]}'>
<field declared_type64='UInt8*' name='components' type64='[8C]'/>
</struct>
<struct name='CMNamedColor' type64='{CMNamedColor=&quot;namedColorIndex&quot;I}'>
<field declared_type64='UInt32' name='namedColorIndex' type64='I'/>
</struct>
<struct name='CMNamedColor2EntryType' type64='{CMNamedColor2EntryType=&quot;rootName&quot;[32C]&quot;PCSColorCoords&quot;[3S]&quot;DeviceColorCoords&quot;[1S]}'>
<field declared_type64='UInt8*' name='rootName' type64='[32C]'/>
<field declared_type64='UInt16*' name='PCSColorCoords' type64='[3S]'/>
<field declared_type64='UInt16*' name='DeviceColorCoords' type64='[1S]'/>
</struct>
<struct name='CMNamedColor2Type' type64='{CMNamedColor2Type=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;vendorFlag&quot;I&quot;count&quot;I&quot;deviceChannelCount&quot;I&quot;prefixName&quot;[32C]&quot;suffixName&quot;[32C]&quot;data&quot;[1c]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='vendorFlag' type64='I'/>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='UInt32' name='deviceChannelCount' type64='I'/>
<field declared_type64='UInt8*' name='prefixName' type64='[32C]'/>
<field declared_type64='UInt8*' name='suffixName' type64='[32C]'/>
<field declared_type64='char*' name='data' type64='[1c]'/>
</struct>
<struct name='CMNamedColorType' type64='{CMNamedColorType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;vendorFlag&quot;I&quot;count&quot;I&quot;prefixName&quot;[1C]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='vendorFlag' type64='I'/>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='UInt8*' name='prefixName' type64='[1C]'/>
</struct>
<struct name='CMNativeDisplayInfo' type64='{CMNativeDisplayInfo=&quot;dataSize&quot;I&quot;redPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;greenPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;bluePhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;whitePoint&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;redGammaValue&quot;i&quot;greenGammaValue&quot;i&quot;blueGammaValue&quot;i&quot;gammaChannels&quot;S&quot;gammaEntryCount&quot;S&quot;gammaEntrySize&quot;S&quot;gammaData&quot;[1c]}'>
<field declared_type64='UInt32' name='dataSize' type64='I'/>
<field declared_type64='CMFixedXYColor' name='redPhosphor' type64='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='CMFixedXYColor' name='greenPhosphor' type64='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='CMFixedXYColor' name='bluePhosphor' type64='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='CMFixedXYColor' name='whitePoint' type64='{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='Fixed' name='redGammaValue' type64='i'/>
<field declared_type64='Fixed' name='greenGammaValue' type64='i'/>
<field declared_type64='Fixed' name='blueGammaValue' type64='i'/>
<field declared_type64='UInt16' name='gammaChannels' type64='S'/>
<field declared_type64='UInt16' name='gammaEntryCount' type64='S'/>
<field declared_type64='UInt16' name='gammaEntrySize' type64='S'/>
<field declared_type64='char*' name='gammaData' type64='[1c]'/>
</struct>
<struct name='CMNativeDisplayInfoType' type64='{CMNativeDisplayInfoType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;nativeDisplayInfo&quot;{CMNativeDisplayInfo=&quot;dataSize&quot;I&quot;redPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;greenPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;bluePhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;whitePoint&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;redGammaValue&quot;i&quot;greenGammaValue&quot;i&quot;blueGammaValue&quot;i&quot;gammaChannels&quot;S&quot;gammaEntryCount&quot;S&quot;gammaEntrySize&quot;S&quot;gammaData&quot;[1c]}}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='CMNativeDisplayInfo' name='nativeDisplayInfo' type64='{CMNativeDisplayInfo=&quot;dataSize&quot;I&quot;redPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;greenPhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;bluePhosphor&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;whitePoint&quot;{CMFixedXYColor=&quot;x&quot;i&quot;y&quot;i}&quot;redGammaValue&quot;i&quot;greenGammaValue&quot;i&quot;blueGammaValue&quot;i&quot;gammaChannels&quot;S&quot;gammaEntryCount&quot;S&quot;gammaEntrySize&quot;S&quot;gammaData&quot;[1c]}'/>
</struct>
<struct name='CMPS2CRDVMSizeType' type64='{CMPS2CRDVMSizeType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;count&quot;I&quot;intentCRD&quot;[1{CMIntentCRDVMSize=&quot;renderingIntent&quot;I&quot;VMSize&quot;I}]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='CMIntentCRDVMSize*' name='intentCRD' type64='[1{CMIntentCRDVMSize=&quot;renderingIntent&quot;I&quot;VMSize&quot;I}]'/>
</struct>
<struct name='CMParametricCurveType' type64='{CMParametricCurveType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;functionType&quot;S&quot;reserved2&quot;S&quot;value&quot;[1i]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt16' name='functionType' type64='S'/>
<field declared_type64='UInt16' name='reserved2' type64='S'/>
<field declared_type64='Fixed*' name='value' type64='[1i]'/>
</struct>
<struct name='CMPathLocation' type64='{CMPathLocation=&quot;path&quot;[1024c]}'>
<field declared_type64='char*' name='path' type64='[1024c]'/>
</struct>
<struct name='CMProfileIterateData' type64='{CMProfileIterateData=&quot;dataVersion&quot;I&quot;header&quot;{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}&quot;code&quot;s&quot;name&quot;[256C]&quot;location&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;uniCodeNameCount&quot;Q&quot;uniCodeName&quot;^S&quot;asciiName&quot;*&quot;makeAndModel&quot;^{CMMakeAndModel}&quot;digest&quot;^[16C]}'>
<field declared_type64='UInt32' name='dataVersion' type64='I'/>
<field declared_type64='CM2Header' name='header' type64='{CM2Header=&quot;size&quot;I&quot;CMMType&quot;I&quot;profileVersion&quot;I&quot;profileClass&quot;I&quot;dataColorSpace&quot;I&quot;profileConnectionSpace&quot;I&quot;dateTime&quot;{CMDateTime=&quot;year&quot;S&quot;month&quot;S&quot;dayOfTheMonth&quot;S&quot;hours&quot;S&quot;minutes&quot;S&quot;seconds&quot;S}&quot;CS2profileSignature&quot;I&quot;platform&quot;I&quot;flags&quot;I&quot;deviceManufacturer&quot;I&quot;deviceModel&quot;I&quot;deviceAttributes&quot;[2I]&quot;renderingIntent&quot;I&quot;white&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;creator&quot;I&quot;reserved&quot;[44c]}'/>
<field declared_type64='ScriptCode' name='code' type64='s'/>
<field declared_type64='Str255' name='name' type64='[256C]'/>
<field declared_type64='CMProfileLocation' name='location' type64='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}'/>
<field declared_type64='UniCharCount' name='uniCodeNameCount' type64='Q'/>
<field declared_type64='UniChar*' name='uniCodeName' type64='^S'/>
<field declared_type64='unsigned char*' name='asciiName' type64='*'/>
<field declared_type64='CMMakeAndModel*' name='makeAndModel' type64='^{CMMakeAndModel=IIIIIIII}'/>
<field declared_type64='CMProfileMD5*' name='digest' type64='^[16C]'/>
</struct>
<struct name='CMProfileLocation' type64='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}'>
<field declared_type64='short' name='locType' type64='s'/>
<field declared_type64='CMProfLoc' name='u' type64='(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})'/>
</struct>
<struct name='CMProfileSequenceDescType' type64='{CMProfileSequenceDescType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;count&quot;I&quot;data&quot;[1c]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='char*' name='data' type64='[1c]'/>
</struct>
<struct name='CMRGBColor' type64='{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'>
<field declared_type64='UInt16' name='red' type64='S'/>
<field declared_type64='UInt16' name='green' type64='S'/>
<field declared_type64='UInt16' name='blue' type64='S'/>
</struct>
<struct name='CMS15Fixed16ArrayType' type64='{CMS15Fixed16ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1i]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='Fixed*' name='value' type64='[1i]'/>
</struct>
<struct name='CMScreeningChannelRec' type64='{CMScreeningChannelRec=&quot;frequency&quot;i&quot;angle&quot;i&quot;spotFunction&quot;I}'>
<field declared_type64='Fixed' name='frequency' type64='i'/>
<field declared_type64='Fixed' name='angle' type64='i'/>
<field declared_type64='UInt32' name='spotFunction' type64='I'/>
</struct>
<struct name='CMScreeningType' type64='{CMScreeningType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;screeningFlag&quot;I&quot;channelCount&quot;I&quot;channelInfo&quot;[1{CMScreeningChannelRec=&quot;frequency&quot;i&quot;angle&quot;i&quot;spotFunction&quot;I}]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='screeningFlag' type64='I'/>
<field declared_type64='UInt32' name='channelCount' type64='I'/>
<field declared_type64='CMScreeningChannelRec*' name='channelInfo' type64='[1{CMScreeningChannelRec=&quot;frequency&quot;i&quot;angle&quot;i&quot;spotFunction&quot;I}]'/>
</struct>
<struct name='CMSignatureType' type64='{CMSignatureType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;signature&quot;I}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='OSType' name='signature' type64='I'/>
</struct>
<struct name='CMTagElemTable' type64='{CMTagElemTable=&quot;count&quot;I&quot;tagList&quot;[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]}'>
<field declared_type64='UInt32' name='count' type64='I'/>
<field declared_type64='CMTagRecord*' name='tagList' type64='[1{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}]'/>
</struct>
<struct name='CMTagRecord' type64='{CMTagRecord=&quot;tag&quot;I&quot;elementOffset&quot;I&quot;elementSize&quot;I}'>
<field declared_type64='OSType' name='tag' type64='I'/>
<field declared_type64='UInt32' name='elementOffset' type64='I'/>
<field declared_type64='UInt32' name='elementSize' type64='I'/>
</struct>
<struct name='CMTextDescriptionType' type64='{CMTextDescriptionType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;ASCIICount&quot;I&quot;ASCIIName&quot;[2C]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='ASCIICount' type64='I'/>
<field declared_type64='UInt8*' name='ASCIIName' type64='[2C]'/>
</struct>
<struct name='CMTextType' type64='{CMTextType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;text&quot;[1C]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt8*' name='text' type64='[1C]'/>
</struct>
<struct name='CMU16Fixed16ArrayType' type64='{CMU16Fixed16ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1I]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32*' name='value' type64='[1I]'/>
</struct>
<struct name='CMUInt16ArrayType' type64='{CMUInt16ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1S]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt16*' name='value' type64='[1S]'/>
</struct>
<struct name='CMUInt32ArrayType' type64='{CMUInt32ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1I]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32*' name='value' type64='[1I]'/>
</struct>
<struct name='CMUInt64ArrayType' type64='{CMUInt64ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1I]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32*' name='value' type64='[1I]'/>
</struct>
<struct name='CMUInt8ArrayType' type64='{CMUInt8ArrayType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;value&quot;[1C]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt8*' name='value' type64='[1C]'/>
</struct>
<struct name='CMUcrBgType' type64='{CMUcrBgType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;ucrCount&quot;I&quot;ucrValues&quot;[1S]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UInt32' name='ucrCount' type64='I'/>
<field declared_type64='UInt16*' name='ucrValues' type64='[1S]'/>
</struct>
<struct name='CMUnicodeTextType' type64='{CMUnicodeTextType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;text&quot;[1S]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='UniChar*' name='text' type64='[1S]'/>
</struct>
<struct name='CMVideoCardGamma' type64='{CMVideoCardGamma=&quot;tagType&quot;I&quot;u&quot;(?=&quot;table&quot;{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}&quot;formula&quot;{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i})}'>
<field declared_type64='UInt32' name='tagType' type64='I'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk/System/Library/Frameworks/ApplicationServices.framework/Frameworks/QD.framework/Headers/ColorSyncDeprecated.h:859:3)' name='u' type64='(?=&quot;table&quot;{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}&quot;formula&quot;{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i})'/>
</struct>
<struct name='CMVideoCardGammaFormula' type64='{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i}'>
<field declared_type64='Fixed' name='redGamma' type64='i'/>
<field declared_type64='Fixed' name='redMin' type64='i'/>
<field declared_type64='Fixed' name='redMax' type64='i'/>
<field declared_type64='Fixed' name='greenGamma' type64='i'/>
<field declared_type64='Fixed' name='greenMin' type64='i'/>
<field declared_type64='Fixed' name='greenMax' type64='i'/>
<field declared_type64='Fixed' name='blueGamma' type64='i'/>
<field declared_type64='Fixed' name='blueMin' type64='i'/>
<field declared_type64='Fixed' name='blueMax' type64='i'/>
</struct>
<struct name='CMVideoCardGammaTable' type64='{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}'>
<field declared_type64='UInt16' name='channels' type64='S'/>
<field declared_type64='UInt16' name='entryCount' type64='S'/>
<field declared_type64='UInt16' name='entrySize' type64='S'/>
<field declared_type64='char*' name='data' type64='[1c]'/>
</struct>
<struct name='CMVideoCardGammaType' type64='{CMVideoCardGammaType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;gamma&quot;{CMVideoCardGamma=&quot;tagType&quot;I&quot;u&quot;(?=&quot;table&quot;{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}&quot;formula&quot;{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i})}}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='CMVideoCardGamma' name='gamma' type64='{CMVideoCardGamma=&quot;tagType&quot;I&quot;u&quot;(?=&quot;table&quot;{CMVideoCardGammaTable=&quot;channels&quot;S&quot;entryCount&quot;S&quot;entrySize&quot;S&quot;data&quot;[1c]}&quot;formula&quot;{CMVideoCardGammaFormula=&quot;redGamma&quot;i&quot;redMin&quot;i&quot;redMax&quot;i&quot;greenGamma&quot;i&quot;greenMin&quot;i&quot;greenMax&quot;i&quot;blueGamma&quot;i&quot;blueMin&quot;i&quot;blueMax&quot;i})}'/>
</struct>
<struct name='CMViewingConditionsType' type64='{CMViewingConditionsType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;illuminant&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;surround&quot;{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}&quot;stdIlluminant&quot;I}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='CMFixedXYZColor' name='illuminant' type64='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field declared_type64='CMFixedXYZColor' name='surround' type64='{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}'/>
<field declared_type64='UInt32' name='stdIlluminant' type64='I'/>
</struct>
<struct name='CMXYZColor' type64='{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}'>
<field declared_type64='CMXYZComponent' name='X' type64='S'/>
<field declared_type64='CMXYZComponent' name='Y' type64='S'/>
<field declared_type64='CMXYZComponent' name='Z' type64='S'/>
</struct>
<struct name='CMXYZType' type64='{CMXYZType=&quot;typeDescriptor&quot;I&quot;reserved&quot;I&quot;XYZ&quot;[1{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}]}'>
<field declared_type64='OSType' name='typeDescriptor' type64='I'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
<field declared_type64='CMFixedXYZColor*' name='XYZ' type64='[1{CMFixedXYZColor=&quot;X&quot;i&quot;Y&quot;i&quot;Z&quot;i}]'/>
</struct>
<struct name='CMYxyColor' type64='{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}'>
<field declared_type64='UInt16' name='capY' type64='S'/>
<field declared_type64='UInt16' name='x' type64='S'/>
<field declared_type64='UInt16' name='y' type64='S'/>
</struct>
<struct name='CQDProcs' type64='{CQDProcs=&quot;textProc&quot;^?&quot;lineProc&quot;^?&quot;rectProc&quot;^?&quot;rRectProc&quot;^?&quot;ovalProc&quot;^?&quot;arcProc&quot;^?&quot;polyProc&quot;^?&quot;rgnProc&quot;^?&quot;bitsProc&quot;^?&quot;commentProc&quot;^?&quot;txMeasProc&quot;^?&quot;getPicProc&quot;^?&quot;putPicProc&quot;^?&quot;opcodeProc&quot;^?&quot;newProc1&quot;^?&quot;glyphsProc&quot;^?&quot;printerStatusProc&quot;^?&quot;newProc4&quot;^?&quot;newProc5&quot;^?&quot;newProc6&quot;^?}'>
<field declared_type64='QDTextUPP' function_pointer='true' name='textProc' type64='^?'>
<arg declared_type64='short' type64='s'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='Point' type64='{Point=ss}'/>
<arg declared_type64='Point' type64='{Point=ss}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDLineUPP' function_pointer='true' name='lineProc' type64='^?'>
<arg declared_type64='Point' type64='{Point=ss}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDRectUPP' function_pointer='true' name='rectProc' type64='^?'>
<arg declared_type64='GrafVerb' type64='c'/>
<arg const='true' declared_type64='Rect*' type64='^{Rect=ssss}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDRRectUPP' function_pointer='true' name='rRectProc' type64='^?'>
<arg declared_type64='GrafVerb' type64='c'/>
<arg const='true' declared_type64='Rect*' type64='^{Rect=ssss}'/>
<arg declared_type64='short' type64='s'/>
<arg declared_type64='short' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDOvalUPP' function_pointer='true' name='ovalProc' type64='^?'>
<arg declared_type64='GrafVerb' type64='c'/>
<arg const='true' declared_type64='Rect*' type64='^{Rect=ssss}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDArcUPP' function_pointer='true' name='arcProc' type64='^?'>
<arg declared_type64='GrafVerb' type64='c'/>
<arg const='true' declared_type64='Rect*' type64='^{Rect=ssss}'/>
<arg declared_type64='short' type64='s'/>
<arg declared_type64='short' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDPolyUPP' function_pointer='true' name='polyProc' type64='^?'>
<arg declared_type64='GrafVerb' type64='c'/>
<arg declared_type64='PolyHandle' type64='^^{MacPolygon}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDRgnUPP' function_pointer='true' name='rgnProc' type64='^?'>
<arg declared_type64='GrafVerb' type64='c'/>
<arg declared_type64='RgnHandle' type64='^{OpaqueRgnHandle=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDBitsUPP' function_pointer='true' name='bitsProc' type64='^?'>
<arg const='true' declared_type64='BitMap*' type64='^{BitMap=*s{Rect=ssss}}'/>
<arg const='true' declared_type64='Rect*' type64='^{Rect=ssss}'/>
<arg const='true' declared_type64='Rect*' type64='^{Rect=ssss}'/>
<arg declared_type64='short' type64='s'/>
<arg declared_type64='RgnHandle' type64='^{OpaqueRgnHandle=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDCommentUPP' function_pointer='true' name='commentProc' type64='^?'>
<arg declared_type64='short' type64='s'/>
<arg declared_type64='short' type64='s'/>
<arg declared_type64='Handle' type64='^*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDTxMeasUPP' function_pointer='true' name='txMeasProc' type64='^?'>
<arg declared_type64='short' type64='s'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='Point*' type64='^{Point=ss}'/>
<arg declared_type64='Point*' type64='^{Point=ss}'/>
<arg declared_type64='FontInfo*' type64='^{FontInfo=ssss}'/>
<retval declared_type64='short' type64='s'/>
</field>
<field declared_type64='QDGetPicUPP' function_pointer='true' name='getPicProc' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='short' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDPutPicUPP' function_pointer='true' name='putPicProc' type64='^?'>
<arg const='true' declared_type64='void*' type64='^v'/>
<arg declared_type64='short' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='QDOpcodeUPP' function_pointer='true' name='opcodeProc' type64='^?'>
<arg const='true' declared_type64='Rect*' type64='^{Rect=ssss}'/>
<arg const='true' declared_type64='Rect*' type64='^{Rect=ssss}'/>
<arg declared_type64='UInt16' type64='S'/>
<arg declared_type64='SInt16' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='UniversalProcPtr' function_pointer='true' name='newProc1' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='QDStdGlyphsUPP' function_pointer='true' name='glyphsProc' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='ByteCount' type64='Q'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='QDPrinterStatusUPP' function_pointer='true' name='printerStatusProc' type64='^?'>
<arg declared_type64='PrinterStatusOpcode' type64='i'/>
<arg declared_type64='CGrafPtr' type64='^{OpaqueGrafPtr=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='OSStatus' type64='i'/>
</field>
<field declared_type64='UniversalProcPtr' function_pointer='true' name='newProc4' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='UniversalProcPtr' function_pointer='true' name='newProc5' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='UniversalProcPtr' function_pointer='true' name='newProc6' type64='^?'>
<retval declared_type64='long' type64='q'/>
</field>
</struct>
<struct name='ColorSpec' type64='{ColorSpec=&quot;value&quot;s&quot;rgb&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}'>
<field declared_type64='short' name='value' type64='s'/>
<field declared_type64='RGBColor' name='rgb' type64='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
</struct>
<struct name='ColorTable' type64='{ColorTable=&quot;ctSeed&quot;i&quot;ctFlags&quot;s&quot;ctSize&quot;s&quot;ctTable&quot;[1{ColorSpec=&quot;value&quot;s&quot;rgb&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]}'>
<field declared_type64='SInt32' name='ctSeed' type64='i'/>
<field declared_type64='short' name='ctFlags' type64='s'/>
<field declared_type64='short' name='ctSize' type64='s'/>
<field declared_type64='CSpecArray' name='ctTable' type64='[1{ColorSpec=&quot;value&quot;s&quot;rgb&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}]'/>
</struct>
<struct name='FMInput' type64='{FMInput=&quot;family&quot;s&quot;size&quot;s&quot;face&quot;C&quot;needBits&quot;B&quot;device&quot;s&quot;numer&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;denom&quot;{Point=&quot;v&quot;s&quot;h&quot;s}}'>
<field declared_type64='short' name='family' type64='s'/>
<field declared_type64='short' name='size' type64='s'/>
<field declared_type64='Style' name='face' type64='C'/>
<field declared_type64='Boolean' name='needBits' type64='B'/>
<field declared_type64='short' name='device' type64='s'/>
<field declared_type64='Point' name='numer' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type64='Point' name='denom' type64='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
</struct>
<struct name='FamRec' type64='{FamRec=&quot;ffFlags&quot;s&quot;ffFamID&quot;s&quot;ffFirstChar&quot;s&quot;ffLastChar&quot;s&quot;ffAscent&quot;s&quot;ffDescent&quot;s&quot;ffLeading&quot;s&quot;ffWidMax&quot;s&quot;ffWTabOff&quot;i&quot;ffKernOff&quot;i&quot;ffStylOff&quot;i&quot;ffProperty&quot;[9s]&quot;ffIntl&quot;[2s]&quot;ffVersion&quot;s}'>
<field declared_type64='SInt16' name='ffFlags' type64='s'/>
<field declared_type64='SInt16' name='ffFamID' type64='s'/>
<field declared_type64='SInt16' name='ffFirstChar' type64='s'/>
<field declared_type64='SInt16' name='ffLastChar' type64='s'/>
<field declared_type64='SInt16' name='ffAscent' type64='s'/>
<field declared_type64='SInt16' name='ffDescent' type64='s'/>
<field declared_type64='SInt16' name='ffLeading' type64='s'/>
<field declared_type64='SInt16' name='ffWidMax' type64='s'/>
<field declared_type64='SInt32' name='ffWTabOff' type64='i'/>
<field declared_type64='SInt32' name='ffKernOff' type64='i'/>
<field declared_type64='SInt32' name='ffStylOff' type64='i'/>
<field declared_type64='SInt16*' name='ffProperty' type64='[9s]'/>
<field declared_type64='SInt16*' name='ffIntl' type64='[2s]'/>
<field declared_type64='SInt16' name='ffVersion' type64='s'/>
</struct>
<struct name='FontAssoc' type64='{FontAssoc=&quot;numAssoc&quot;s}'>
<field declared_type64='SInt16' name='numAssoc' type64='s'/>
</struct>
<struct name='FontInfo' type64='{FontInfo=&quot;ascent&quot;s&quot;descent&quot;s&quot;widMax&quot;s&quot;leading&quot;s}'>
<field declared_type64='short' name='ascent' type64='s'/>
<field declared_type64='short' name='descent' type64='s'/>
<field declared_type64='short' name='widMax' type64='s'/>
<field declared_type64='short' name='leading' type64='s'/>
</struct>
<struct name='FontRec' type64='{FontRec=&quot;fontType&quot;s&quot;firstChar&quot;s&quot;lastChar&quot;s&quot;widMax&quot;s&quot;kernMax&quot;s&quot;nDescent&quot;s&quot;fRectWidth&quot;s&quot;fRectHeight&quot;s&quot;owTLoc&quot;S&quot;ascent&quot;s&quot;descent&quot;s&quot;leading&quot;s&quot;rowWords&quot;s}'>
<field declared_type64='SInt16' name='fontType' type64='s'/>
<field declared_type64='SInt16' name='firstChar' type64='s'/>
<field declared_type64='SInt16' name='lastChar' type64='s'/>
<field declared_type64='SInt16' name='widMax' type64='s'/>
<field declared_type64='SInt16' name='kernMax' type64='s'/>
<field declared_type64='SInt16' name='nDescent' type64='s'/>
<field declared_type64='SInt16' name='fRectWidth' type64='s'/>
<field declared_type64='SInt16' name='fRectHeight' type64='s'/>
<field declared_type64='UInt16' name='owTLoc' type64='S'/>
<field declared_type64='SInt16' name='ascent' type64='s'/>
<field declared_type64='SInt16' name='descent' type64='s'/>
<field declared_type64='SInt16' name='leading' type64='s'/>
<field declared_type64='SInt16' name='rowWords' type64='s'/>
</struct>
<struct name='GDevice' type64='{GDevice=&quot;gdRefNum&quot;s&quot;gdID&quot;s&quot;gdType&quot;s&quot;gdITable&quot;^*&quot;gdResPref&quot;s&quot;gdSearchProc&quot;^*&quot;gdCompProc&quot;^*&quot;gdFlags&quot;s&quot;gdPMap&quot;^^{PixMap}&quot;gdRefCon&quot;i&quot;gdNextGD&quot;^^{GDevice}&quot;gdRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;gdMode&quot;i&quot;gdCCBytes&quot;s&quot;gdCCDepth&quot;s&quot;gdCCXData&quot;^*&quot;gdCCXMask&quot;^*&quot;gdExt&quot;^*}'>
<field declared_type64='short' name='gdRefNum' type64='s'/>
<field declared_type64='short' name='gdID' type64='s'/>
<field declared_type64='short' name='gdType' type64='s'/>
<field declared_type64='Handle' name='gdITable' type64='^*'/>
<field declared_type64='short' name='gdResPref' type64='s'/>
<field declared_type64='Handle' name='gdSearchProc' type64='^*'/>
<field declared_type64='Handle' name='gdCompProc' type64='^*'/>
<field declared_type64='short' name='gdFlags' type64='s'/>
<field declared_type64='PixMapHandle' name='gdPMap' type64='^^{PixMap}'/>
<field declared_type64='SInt32' name='gdRefCon' type64='i'/>
<field declared_type64='GDHandle' name='gdNextGD' type64='^^{GDevice}'/>
<field declared_type64='Rect' name='gdRect' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type64='SInt32' name='gdMode' type64='i'/>
<field declared_type64='short' name='gdCCBytes' type64='s'/>
<field declared_type64='short' name='gdCCDepth' type64='s'/>
<field declared_type64='Handle' name='gdCCXData' type64='^*'/>
<field declared_type64='Handle' name='gdCCXMask' type64='^*'/>
<field declared_type64='Handle' name='gdExt' type64='^*'/>
</struct>
<struct name='GrafPort' type64='{GrafPort=&quot;whatever&quot;[87s]}'>
<field declared_type64='short*' name='whatever' type64='[87s]'/>
</struct>
<struct name='KernEntry' type64='{KernEntry=&quot;kernStyle&quot;s&quot;kernLength&quot;s}'>
<field declared_type64='SInt16' name='kernStyle' type64='s'/>
<field declared_type64='SInt16' name='kernLength' type64='s'/>
</struct>
<struct name='KernPair' type64='{KernPair=&quot;kernFirst&quot;c&quot;kernSecond&quot;c&quot;kernWidth&quot;s}'>
<field declared_type64='char' name='kernFirst' type64='c'/>
<field declared_type64='char' name='kernSecond' type64='c'/>
<field declared_type64='SInt16' name='kernWidth' type64='s'/>
</struct>
<struct name='KernTable' type64='{KernTable=&quot;numKerns&quot;s}'>
<field declared_type64='SInt16' name='numKerns' type64='s'/>
</struct>
<struct name='MacPolygon' type64='{MacPolygon=&quot;polySize&quot;s&quot;polyBBox&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;polyPoints&quot;[1{Point=&quot;v&quot;s&quot;h&quot;s}]}'>
<field declared_type64='short' name='polySize' type64='s'/>
<field declared_type64='Rect' name='polyBBox' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type64='Point*' name='polyPoints' type64='[1{Point=&quot;v&quot;s&quot;h&quot;s}]'/>
</struct>
<struct name='NCMConcatProfileSet' type64='{NCMConcatProfileSet=&quot;cmm&quot;I&quot;flags&quot;I&quot;flagsMask&quot;I&quot;profileCount&quot;I&quot;profileSpecs&quot;[1{NCMConcatProfileSpec=&quot;renderingIntent&quot;I&quot;transformTag&quot;I&quot;profile&quot;^{OpaqueCMProfileRef}}]}'>
<field declared_type64='OSType' name='cmm' type64='I'/>
<field declared_type64='UInt32' name='flags' type64='I'/>
<field declared_type64='UInt32' name='flagsMask' type64='I'/>
<field declared_type64='UInt32' name='profileCount' type64='I'/>
<field declared_type64='NCMConcatProfileSpec*' name='profileSpecs' type64='[1{NCMConcatProfileSpec=&quot;renderingIntent&quot;I&quot;transformTag&quot;I&quot;profile&quot;^{OpaqueCMProfileRef}}]'/>
</struct>
<struct name='NCMConcatProfileSpec' type64='{NCMConcatProfileSpec=&quot;renderingIntent&quot;I&quot;transformTag&quot;I&quot;profile&quot;^{OpaqueCMProfileRef}}'>
<field declared_type64='UInt32' name='renderingIntent' type64='I'/>
<field declared_type64='UInt32' name='transformTag' type64='I'/>
<field declared_type64='CMProfileRef' name='profile' type64='^{OpaqueCMProfileRef=}'/>
</struct>
<struct name='NCMDeviceProfileInfo' type64='{NCMDeviceProfileInfo=&quot;dataVersion&quot;I&quot;profileID&quot;I&quot;profileLoc&quot;{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}&quot;profileName&quot;^{__CFDictionary}&quot;profileScope&quot;{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}&quot;reserved&quot;I}'>
<field declared_type64='UInt32' name='dataVersion' type64='I'/>
<field declared_type64='CMDeviceProfileID' name='profileID' type64='I'/>
<field declared_type64='CMProfileLocation' name='profileLoc' type64='{CMProfileLocation=&quot;locType&quot;s&quot;u&quot;(CMProfLoc=&quot;handleLoc&quot;{CMHandleLocation=&quot;h&quot;^*}&quot;pathLoc&quot;{CMPathLocation=&quot;path&quot;[1024c]}&quot;bufferLoc&quot;{CMBufferLocation=&quot;buffer&quot;^v&quot;size&quot;I})}'/>
<field declared_type64='CFDictionaryRef' name='profileName' type64='^{__CFDictionary=}'/>
<field declared_type64='CMDeviceProfileScope' name='profileScope' type64='{CMDeviceScope=&quot;deviceUser&quot;^{__CFString}&quot;deviceHost&quot;^{__CFString}}'/>
<field declared_type64='UInt32' name='reserved' type64='I'/>
</struct>
<struct name='NameTable' type64='{NameTable=&quot;stringCount&quot;s&quot;baseFontName&quot;[256C]}'>
<field declared_type64='SInt16' name='stringCount' type64='s'/>
<field declared_type64='Str255' name='baseFontName' type64='[256C]'/>
</struct>
<struct name='OpenCPicParams' type64='{OpenCPicParams=&quot;srcRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;hRes&quot;i&quot;vRes&quot;i&quot;version&quot;s&quot;reserved1&quot;s&quot;reserved2&quot;i}'>
<field declared_type64='Rect' name='srcRect' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type64='Fixed' name='hRes' type64='i'/>
<field declared_type64='Fixed' name='vRes' type64='i'/>
<field declared_type64='short' name='version' type64='s'/>
<field declared_type64='short' name='reserved1' type64='s'/>
<field declared_type64='SInt32' name='reserved2' type64='i'/>
</struct>
<struct name='Pattern' type64='{Pattern=&quot;pat&quot;[8C]}'>
<field declared_type64='UInt8*' name='pat' type64='[8C]'/>
</struct>
<struct name='Picture' type64='{Picture=&quot;picSize&quot;s&quot;picFrame&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}}'>
<field declared_type64='short' name='picSize' type64='s'/>
<field declared_type64='Rect' name='picFrame' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
</struct>
<struct name='PixMap' type64='{PixMap=&quot;baseAddr&quot;*&quot;rowBytes&quot;s&quot;bounds&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;pmVersion&quot;s&quot;packType&quot;s&quot;packSize&quot;i&quot;hRes&quot;i&quot;vRes&quot;i&quot;pixelType&quot;s&quot;pixelSize&quot;s&quot;cmpCount&quot;s&quot;cmpSize&quot;s&quot;pixelFormat&quot;I&quot;pmTable&quot;^^{ColorTable}&quot;pmExt&quot;^v}'>
<field declared_type64='Ptr' name='baseAddr' type64='*'/>
<field declared_type64='short' name='rowBytes' type64='s'/>
<field declared_type64='Rect' name='bounds' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type64='short' name='pmVersion' type64='s'/>
<field declared_type64='short' name='packType' type64='s'/>
<field declared_type64='SInt32' name='packSize' type64='i'/>
<field declared_type64='Fixed' name='hRes' type64='i'/>
<field declared_type64='Fixed' name='vRes' type64='i'/>
<field declared_type64='short' name='pixelType' type64='s'/>
<field declared_type64='short' name='pixelSize' type64='s'/>
<field declared_type64='short' name='cmpCount' type64='s'/>
<field declared_type64='short' name='cmpSize' type64='s'/>
<field declared_type64='OSType' name='pixelFormat' type64='I'/>
<field declared_type64='CTabHandle' name='pmTable' type64='^^{ColorTable}'/>
<field declared_type64='void*' name='pmExt' type64='^v'/>
</struct>
<struct name='PixPat' type64='{PixPat=&quot;patType&quot;s&quot;patMap&quot;^^{PixMap}&quot;patData&quot;^*&quot;patXData&quot;^*&quot;patXValid&quot;s&quot;patXMap&quot;^*&quot;pat1Data&quot;{Pattern=&quot;pat&quot;[8C]}}'>
<field declared_type64='short' name='patType' type64='s'/>
<field declared_type64='PixMapHandle' name='patMap' type64='^^{PixMap}'/>
<field declared_type64='Handle' name='patData' type64='^*'/>
<field declared_type64='Handle' name='patXData' type64='^*'/>
<field declared_type64='short' name='patXValid' type64='s'/>
<field declared_type64='Handle' name='patXMap' type64='^*'/>
<field declared_type64='Pattern' name='pat1Data' type64='{Pattern=&quot;pat&quot;[8C]}'/>
</struct>
<struct name='Polygon' type64='{MacPolygon=&quot;polySize&quot;s&quot;polyBBox&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;polyPoints&quot;[1{Point=&quot;v&quot;s&quot;h&quot;s}]}'>
<field declared_type64='short' name='polySize' type64='s'/>
<field declared_type64='Rect' name='polyBBox' type64='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type64='Point*' name='polyPoints' type64='[1{Point=&quot;v&quot;s&quot;h&quot;s}]'/>
</struct>
<struct name='RGBColor' type64='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'>
<field declared_type64='unsigned short' name='red' type64='S'/>
<field declared_type64='unsigned short' name='green' type64='S'/>
<field declared_type64='unsigned short' name='blue' type64='S'/>
</struct>
<struct name='StyleTable' type64='{StyleTable=&quot;fontClass&quot;s&quot;offset&quot;i&quot;reserved&quot;i&quot;indexes&quot;[48c]}'>
<field declared_type64='SInt16' name='fontClass' type64='s'/>
<field declared_type64='SInt32' name='offset' type64='i'/>
<field declared_type64='SInt32' name='reserved' type64='i'/>
<field declared_type64='char*' name='indexes' type64='[48c]'/>
</struct>
<struct name='VDGammaRecord' type64='{VDGammaRecord=&quot;csGTable&quot;*}'>
<field declared_type64='Ptr' name='csGTable' type64='*'/>
</struct>
<cftype name='CMProfileRef' type64='^{OpaqueCMProfileRef=}'/>
<cftype name='CMWorldRef' type64='^{OpaqueCMWorldRef=}'/>
<cftype name='DialogPtr' type64='^{OpaqueDialogPtr=}'/>
<cftype name='GrafPtr' type64='^{OpaqueGrafPtr=}'/>
<cftype name='RgnHandle' type64='^{OpaqueRgnHandle=}'/>
<cftype name='WindowPtr' type64='^{OpaqueWindowPtr=}'/>
<string_constant name='kCMDefaultDeviceNotification' nsstring='true' value='CMDefaultDeviceNotification'/>
<string_constant name='kCMDefaultDeviceProfileNotification' nsstring='true' value='CMDefaultDeviceProfileNotification'/>
<string_constant name='kCMDeviceOfflineNotification' nsstring='true' value='CMDeviceOfflineNotification'/>
<string_constant name='kCMDeviceOnlineNotification' nsstring='true' value='CMDeviceOnlineNotification'/>
<string_constant name='kCMDeviceProfilesNotification' nsstring='true' value='CMDeviceProfilesNotification'/>
<string_constant name='kCMDeviceRegisteredNotification' nsstring='true' value='CMDeviceRegisteredNotification'/>
<string_constant name='kCMDeviceStateNotification' nsstring='true' value='CMDeviceStateNotification'/>
<string_constant name='kCMDeviceUnregisteredNotification' nsstring='true' value='CMDeviceUnregisteredNotification'/>
<string_constant name='kCMDisplayDeviceProfilesNotification' nsstring='true' value='CMDisplayDeviceProfilesNotification'/>
<string_constant name='kCMPrefsChangedNotification' nsstring='true' value='AppleColorSyncPreferencesChangedNotification'/>
<enum name='CMBITMAPCALLBACKPROCPTR_DEFINED' value64='1'/>
<enum name='CS_MAX_PATH' value64='1024'/>
<enum name='QD_HEADERS_ARE_PRIVATE' value64='1'/>
<enum name='cm10CLRData' value64='1094929490'/>
<enum name='cm11CLRData' value64='1111706706'/>
<enum name='cm12CLRData' value64='1128483922'/>
<enum name='cm13CLRData' value64='1145261138'/>
<enum name='cm14CLRData' value64='1162038354'/>
<enum name='cm15CLRData' value64='1178815570'/>
<enum name='cm16_8ColorPacking' value64='8192'/>
<enum name='cm24_8ColorPacking' value64='8448'/>
<enum name='cm32_16ColorPacking' value64='9728'/>
<enum name='cm32_32ColorPacking' value64='9984'/>
<enum name='cm32_8ColorPacking' value64='2048'/>
<enum name='cm3CLRData' value64='860048466'/>
<enum name='cm40_8ColorPacking' value64='8704'/>
<enum name='cm48_16ColorPacking' value64='10496'/>
<enum name='cm48_8ColorPacking' value64='8960'/>
<enum name='cm4CLRData' value64='876825682'/>
<enum name='cm56_8ColorPacking' value64='9216'/>
<enum name='cm5CLRData' value64='893602898'/>
<enum name='cm64_16ColorPacking' value64='10752'/>
<enum name='cm64_8ColorPacking' value64='9472'/>
<enum name='cm6CLRData' value64='910380114'/>
<enum name='cm7CLRData' value64='927157330'/>
<enum name='cm8CLRData' value64='943934546'/>
<enum name='cm8_8ColorPacking' value64='10240'/>
<enum name='cm9CLRData' value64='960711762'/>
<enum name='cmARGB32PmulSpace' value64='6337'/>
<enum name='cmARGB32Space' value64='6273'/>
<enum name='cmARGB64LPmulSpace' value64='31425'/>
<enum name='cmARGB64LSpace' value64='31361'/>
<enum name='cmARGB64PmulSpace' value64='15041'/>
<enum name='cmARGB64Space' value64='14977'/>
<enum name='cmAToB0Tag' value64='1093812784'/>
<enum name='cmAToB1Tag' value64='1093812785'/>
<enum name='cmAToB2Tag' value64='1093812786'/>
<enum name='cmAbortWriteAccess' value64='7'/>
<enum name='cmAbsoluteColorimetric' value64='3'/>
<enum name='cmAbstractClass' value64='1633842036'/>
<enum name='cmAlphaFirstPacking' value64='4096'/>
<enum name='cmAlphaLastPacking' value64='0'/>
<enum name='cmAlphaPmulSpace' value64='64'/>
<enum name='cmAlphaSpace' value64='128'/>
<enum name='cmAsciiData' value64='0'/>
<enum name='cmBToA0Tag' value64='1110589744'/>
<enum name='cmBToA1Tag' value64='1110589745'/>
<enum name='cmBToA2Tag' value64='1110589746'/>
<enum name='cmBeginAccess' value64='8'/>
<enum name='cmBestMode' value64='2'/>
<enum name='cmBinaryData' value64='1'/>
<enum name='cmBlackPointCompensation' value64='1'/>
<enum name='cmBlackPointCompensationMask' value64='4'/>
<enum name='cmBlueColorantTag' value64='1649957210'/>
<enum name='cmBlueTRCTag' value64='1649693251'/>
<enum name='cmBradfordChromaticAdaptation' value64='3'/>
<enum name='cmBufferBasedProfile' value64='6'/>
<enum name='cmCMSReservedFlagsMask' value64='-65536'/>
<enum name='cmCMYData' value64='1129142560'/>
<enum name='cmCMYK32Space' value64='2050'/>
<enum name='cmCMYK64LSpace' value64='27138'/>
<enum name='cmCMYK64Space' value64='10754'/>
<enum name='cmCMYKData' value64='1129142603'/>
<enum name='cmCMYKSpace' value64='2'/>
<enum name='cmCS1ChromTag' value64='1667789421'/>
<enum name='cmCS1CustTag' value64='1668641652'/>
<enum name='cmCS1NameTag' value64='1851878757'/>
<enum name='cmCS1ProfileVersion' value64='256'/>
<enum name='cmCS1TRCTag' value64='1953653536'/>
<enum name='cmCS2ProfileVersion' value64='33554432'/>
<enum name='cmCalibrationDateTimeTag' value64='1667329140'/>
<enum name='cmCameraDeviceClass' value64='1668117089'/>
<enum name='cmCharTargetTag' value64='1952543335'/>
<enum name='cmChromaticAdaptationTag' value64='1667785060'/>
<enum name='cmCloseAccess' value64='5'/>
<enum name='cmCloseSpool' value64='5'/>
<enum name='cmColorSpaceAlphaMask' value64='128'/>
<enum name='cmColorSpaceClass' value64='1936744803'/>
<enum name='cmColorSpaceEncodingMask' value64='983040'/>
<enum name='cmColorSpacePackingMask' value64='65280'/>
<enum name='cmColorSpacePremulAlphaMask' value64='64'/>
<enum name='cmColorSpaceReservedMask' value64='-1048576'/>
<enum name='cmColorSpaceSpaceAndAlphaMask' value64='255'/>
<enum name='cmColorSpaceSpaceMask' value64='63'/>
<enum name='cmCopyrightTag' value64='1668313716'/>
<enum name='cmCreateNewAccess' value64='6'/>
<enum name='cmCurrentDeviceInfoVersion' value64='65536'/>
<enum name='cmCurrentProfileInfoVersion' value64='65536'/>
<enum name='cmCurrentProfileLocationSize' value64='1032'/>
<enum name='cmCurrentProfileMajorVersion' value64='33554432'/>
<enum name='cmDefaultDeviceID' value64='0'/>
<enum name='cmDefaultProfileID' value64='0'/>
<enum name='cmDeviceAlreadyRegistered' value64='-4228'/>
<enum name='cmDeviceDBNotFoundErr' value64='-4227'/>
<enum name='cmDeviceInfoVersion1' value64='65536'/>
<enum name='cmDeviceMfgDescTag' value64='1684893284'/>
<enum name='cmDeviceModelDescTag' value64='1684890724'/>
<enum name='cmDeviceNotRegistered' value64='-4229'/>
<enum name='cmDeviceProfileInfoVersion1' value64='65536'/>
<enum name='cmDeviceProfileInfoVersion2' value64='131072'/>
<enum name='cmDeviceProfilesNotFound' value64='-4230'/>
<enum name='cmDeviceStateAppleRsvdBits' value64='-16711681'/>
<enum name='cmDeviceStateBusy' value64='2'/>
<enum name='cmDeviceStateDefault' value64='0'/>
<enum name='cmDeviceStateDeviceRsvdBits' value64='16711680'/>
<enum name='cmDeviceStateForceNotify' value64='-2147483648'/>
<enum name='cmDeviceStateOffline' value64='1'/>
<enum name='cmDisplayClass' value64='1835955314'/>
<enum name='cmDisplayDeviceClass' value64='1835955314'/>
<enum name='cmDisplayUse' value64='1685089401'/>
<enum name='cmDraftMode' value64='1'/>
<enum name='cmEmbeddedMask' value64='1'/>
<enum name='cmEmbeddedProfile' value64='0'/>
<enum name='cmEmbeddedUse' value64='1'/>
<enum name='cmEmbeddedUseMask' value64='2'/>
<enum name='cmEndAccess' value64='9'/>
<enum name='cmFlare0' value64='0'/>
<enum name='cmFlare100' value64='1'/>
<enum name='cmGamutCheckingMask' value64='524288'/>
<enum name='cmGamutResult1Space' value64='2828'/>
<enum name='cmGamutResultSpace' value64='12'/>
<enum name='cmGamutTag' value64='1734438260'/>
<enum name='cmGeometry045or450' value64='1'/>
<enum name='cmGeometry0dord0' value64='2'/>
<enum name='cmGeometryUnknown' value64='0'/>
<enum name='cmGlossy' value64='1'/>
<enum name='cmGlossyMatteMask' value64='2'/>
<enum name='cmGray16LSpace' value64='16394'/>
<enum name='cmGray16Space' value64='10'/>
<enum name='cmGray8Space' value64='10250'/>
<enum name='cmGrayA16PmulSpace' value64='8394'/>
<enum name='cmGrayA16Space' value64='8330'/>
<enum name='cmGrayA32LPmulSpace' value64='16586'/>
<enum name='cmGrayA32LSpace' value64='16522'/>
<enum name='cmGrayA32PmulSpace' value64='202'/>
<enum name='cmGrayA32Space' value64='138'/>
<enum name='cmGrayAPmulSpace' value64='202'/>
<enum name='cmGrayASpace' value64='138'/>
<enum name='cmGrayData' value64='1196573017'/>
<enum name='cmGraySpace' value64='10'/>
<enum name='cmGrayTRCTag' value64='1800688195'/>
<enum name='cmGreenColorantTag' value64='1733843290'/>
<enum name='cmGreenTRCTag' value64='1733579331'/>
<enum name='cmHLS32Space' value64='2564'/>
<enum name='cmHLSData' value64='1212961568'/>
<enum name='cmHLSSpace' value64='4'/>
<enum name='cmHSV32Space' value64='2563'/>
<enum name='cmHSVData' value64='1213421088'/>
<enum name='cmHSVSpace' value64='3'/>
<enum name='cmICCProfileVersion2' value64='33554432'/>
<enum name='cmICCProfileVersion21' value64='34603008'/>
<enum name='cmICCProfileVersion4' value64='67108864'/>
<enum name='cmICCReservedFlagsMask' value64='65535'/>
<enum name='cmIlluminantA' value64='6'/>
<enum name='cmIlluminantD50' value64='1'/>
<enum name='cmIlluminantD55' value64='5'/>
<enum name='cmIlluminantD65' value64='2'/>
<enum name='cmIlluminantD93' value64='3'/>
<enum name='cmIlluminantEquiPower' value64='7'/>
<enum name='cmIlluminantF2' value64='4'/>
<enum name='cmIlluminantF8' value64='8'/>
<enum name='cmIlluminantUnknown' value64='0'/>
<enum name='cmInputClass' value64='1935896178'/>
<enum name='cmInputUse' value64='1768845428'/>
<enum name='cmInternalCFErr' value64='-4231'/>
<enum name='cmInterpolationMask' value64='262144'/>
<enum name='cmIterateAllDeviceProfiles' value64='4'/>
<enum name='cmIterateCurrentDeviceProfiles' value64='3'/>
<enum name='cmIterateCustomDeviceProfiles' value64='2'/>
<enum name='cmIterateDeviceProfilesMask' value64='15'/>
<enum name='cmIterateFactoryDeviceProfiles' value64='1'/>
<enum name='cmLAB24Space' value64='8456'/>
<enum name='cmLAB32Space' value64='2568'/>
<enum name='cmLAB48LSpace' value64='26888'/>
<enum name='cmLAB48Space' value64='10504'/>
<enum name='cmLABSpace' value64='8'/>
<enum name='cmLUV32Space' value64='2567'/>
<enum name='cmLUVSpace' value64='7'/>
<enum name='cmLabData' value64='1281450528'/>
<enum name='cmLinearChromaticAdaptation' value64='1'/>
<enum name='cmLinesPer' value64='1'/>
<enum name='cmLinkClass' value64='1818848875'/>
<enum name='cmLittleEndianPacking' value64='16384'/>
<enum name='cmLong10ColorPacking' value64='2560'/>
<enum name='cmLong8ColorPacking' value64='2048'/>
<enum name='cmLuminanceTag' value64='1819635049'/>
<enum name='cmLuvData' value64='1282766368'/>
<enum name='cmMCEight8Space' value64='9492'/>
<enum name='cmMCEightSpace' value64='20'/>
<enum name='cmMCFive8Space' value64='8721'/>
<enum name='cmMCFiveSpace' value64='17'/>
<enum name='cmMCH5Data' value64='1296255029'/>
<enum name='cmMCH6Data' value64='1296255030'/>
<enum name='cmMCH7Data' value64='1296255031'/>
<enum name='cmMCH8Data' value64='1296255032'/>
<enum name='cmMCSeven8Space' value64='9235'/>
<enum name='cmMCSevenSpace' value64='19'/>
<enum name='cmMCSix8Space' value64='8978'/>
<enum name='cmMCSixSpace' value64='18'/>
<enum name='cmMacintosh' value64='1095782476'/>
<enum name='cmMagicNumber' value64='1633907568'/>
<enum name='cmMakeAndModelTag' value64='1835888484'/>
<enum name='cmMeasurementTag' value64='1835360627'/>
<enum name='cmMediaBlackPointTag' value64='1651208308'/>
<enum name='cmMediaWhitePointTag' value64='2004119668'/>
<enum name='cmMicrosoft' value64='1297303124'/>
<enum name='cmNamedColor2Tag' value64='1852009522'/>
<enum name='cmNamedColorClass' value64='1852662636'/>
<enum name='cmNamedColorTag' value64='1852010348'/>
<enum name='cmNamedData' value64='1312902469'/>
<enum name='cmNamedIndexed32LSpace' value64='26384'/>
<enum name='cmNamedIndexed32Space' value64='10000'/>
<enum name='cmNamedIndexedSpace' value64='16'/>
<enum name='cmNativeDisplayInfoTag' value64='1852074350'/>
<enum name='cmNoColorPacking' value64='0'/>
<enum name='cmNoProfileBase' value64='0'/>
<enum name='cmNoSpace' value64='0'/>
<enum name='cmNormalMode' value64='0'/>
<enum name='cmNumHeaderElements' value64='10'/>
<enum name='cmOneBitDirectPacking' value64='2816'/>
<enum name='cmOpenReadAccess' value64='1'/>
<enum name='cmOpenReadSpool' value64='1'/>
<enum name='cmOpenWriteAccess' value64='2'/>
<enum name='cmOpenWriteSpool' value64='2'/>
<enum name='cmOriginalProfileLocationSize' value64='72'/>
<enum name='cmOutputClass' value64='1886549106'/>
<enum name='cmOutputUse' value64='1869968496'/>
<enum name='cmPS2CRD0Tag' value64='1886610480'/>
<enum name='cmPS2CRD1Tag' value64='1886610481'/>
<enum name='cmPS2CRD2Tag' value64='1886610482'/>
<enum name='cmPS2CRD3Tag' value64='1886610483'/>
<enum name='cmPS2CRDVMSizeTag' value64='1886615149'/>
<enum name='cmPS2CSATag' value64='1886597747'/>
<enum name='cmPS2RenderingIntentTag' value64='1886597737'/>
<enum name='cmPS7bit' value64='1'/>
<enum name='cmPS8bit' value64='2'/>
<enum name='cmParametricType0' value64='0'/>
<enum name='cmParametricType1' value64='1'/>
<enum name='cmParametricType2' value64='2'/>
<enum name='cmParametricType3' value64='3'/>
<enum name='cmParametricType4' value64='4'/>
<enum name='cmPathBasedProfile' value64='5'/>
<enum name='cmPerceptual' value64='0'/>
<enum name='cmPrefsSynchError' value64='-4232'/>
<enum name='cmPreview0Tag' value64='1886545200'/>
<enum name='cmPreview1Tag' value64='1886545201'/>
<enum name='cmPreview2Tag' value64='1886545202'/>
<enum name='cmPrinterDeviceClass' value64='1886549106'/>
<enum name='cmProfileDescriptionMLTag' value64='1685283693'/>
<enum name='cmProfileDescriptionTag' value64='1684370275'/>
<enum name='cmProfileIterateDataVersion1' value64='65536'/>
<enum name='cmProfileIterateDataVersion2' value64='131072'/>
<enum name='cmProfileIterateDataVersion3' value64='196608'/>
<enum name='cmProfileIterateDataVersion4' value64='262144'/>
<enum name='cmProfileMajorVersionMask' value64='-16777216'/>
<enum name='cmProfileSequenceDescTag' value64='1886610801'/>
<enum name='cmProofDeviceClass' value64='1886549350'/>
<enum name='cmProofUse' value64='1886549350'/>
<enum name='cmPrtrDefaultScreens' value64='0'/>
<enum name='cmQualityMask' value64='196608'/>
<enum name='cmRGB16LSpace' value64='17665'/>
<enum name='cmRGB16Space' value64='1281'/>
<enum name='cmRGB24Space' value64='8449'/>
<enum name='cmRGB32Space' value64='2049'/>
<enum name='cmRGB48LSpace' value64='26881'/>
<enum name='cmRGB48Space' value64='10497'/>
<enum name='cmRGB565LSpace' value64='17921'/>
<enum name='cmRGB565Space' value64='1537'/>
<enum name='cmRGBA32PmulSpace' value64='2241'/>
<enum name='cmRGBA32Space' value64='2177'/>
<enum name='cmRGBA64LPmulSpace' value64='27329'/>
<enum name='cmRGBA64LSpace' value64='27265'/>
<enum name='cmRGBA64PmulSpace' value64='10945'/>
<enum name='cmRGBA64Space' value64='10881'/>
<enum name='cmRGBAPmulSpace' value64='193'/>
<enum name='cmRGBASpace' value64='129'/>
<enum name='cmRGBData' value64='1380401696'/>
<enum name='cmRGBSpace' value64='1'/>
<enum name='cmReadAccess' value64='3'/>
<enum name='cmReadSpool' value64='3'/>
<enum name='cmRedColorantTag' value64='1918392666'/>
<enum name='cmRedTRCTag' value64='1918128707'/>
<enum name='cmReflective' value64='0'/>
<enum name='cmReflectiveTransparentMask' value64='1'/>
<enum name='cmRelativeColorimetric' value64='1'/>
<enum name='cmReservedSpace1' value64='9'/>
<enum name='cmReservedSpace2' value64='11'/>
<enum name='cmReverseChannelPacking' value64='32768'/>
<enum name='cmSRGB16ChannelEncoding' value64='65536'/>
<enum name='cmSRGBData' value64='1934772034'/>
<enum name='cmSaturation' value64='2'/>
<enum name='cmScannerDeviceClass' value64='1935896178'/>
<enum name='cmScreeningDescTag' value64='1935897188'/>
<enum name='cmScreeningTag' value64='1935897198'/>
<enum name='cmSigCrdInfoType' value64='1668441193'/>
<enum name='cmSigCurveType' value64='1668641398'/>
<enum name='cmSigDataType' value64='1684108385'/>
<enum name='cmSigDateTimeType' value64='1685350765'/>
<enum name='cmSigLut16Type' value64='1835430962'/>
<enum name='cmSigLut8Type' value64='1835430961'/>
<enum name='cmSigMakeAndModelType' value64='1835888484'/>
<enum name='cmSigMeasurementType' value64='1835360627'/>
<enum name='cmSigMultiFunctA2BType' value64='1832993312'/>
<enum name='cmSigMultiFunctB2AType' value64='1833058592'/>
<enum name='cmSigMultiLocalizedUniCodeType' value64='1835824483'/>
<enum name='cmSigNamedColor2Type' value64='1852009522'/>
<enum name='cmSigNamedColorType' value64='1852010348'/>
<enum name='cmSigNativeDisplayInfoType' value64='1852074350'/>
<enum name='cmSigPS2CRDVMSizeType' value64='1886615149'/>
<enum name='cmSigParametricCurveType' value64='1885434465'/>
<enum name='cmSigProfileDescriptionType' value64='1684370275'/>
<enum name='cmSigProfileSequenceDescType' value64='1886610801'/>
<enum name='cmSigS15Fixed16Type' value64='1936077618'/>
<enum name='cmSigScreeningType' value64='1935897198'/>
<enum name='cmSigSignatureType' value64='1936287520'/>
<enum name='cmSigTextType' value64='1952807028'/>
<enum name='cmSigU16Fixed16Type' value64='1969632050'/>
<enum name='cmSigU1Fixed15Type' value64='1969631542'/>
<enum name='cmSigUInt16Type' value64='1969828150'/>
<enum name='cmSigUInt32Type' value64='1969828658'/>
<enum name='cmSigUInt64Type' value64='1969829428'/>
<enum name='cmSigUInt8Type' value64='1969827896'/>
<enum name='cmSigUcrBgType' value64='1650877472'/>
<enum name='cmSigUnicodeTextType' value64='1970567284'/>
<enum name='cmSigVideoCardGammaType' value64='1986226036'/>
<enum name='cmSigViewingConditionsType' value64='1986618743'/>
<enum name='cmSigXYZType' value64='1482250784'/>
<enum name='cmSiliconGraphics' value64='1397180704'/>
<enum name='cmSolaris' value64='1398099543'/>
<enum name='cmSpotFunctionCross' value64='7'/>
<enum name='cmSpotFunctionDefault' value64='1'/>
<enum name='cmSpotFunctionDiamond' value64='3'/>
<enum name='cmSpotFunctionEllipse' value64='4'/>
<enum name='cmSpotFunctionLine' value64='5'/>
<enum name='cmSpotFunctionRound' value64='2'/>
<enum name='cmSpotFunctionSquare' value64='6'/>
<enum name='cmSpotFunctionUnknown' value64='0'/>
<enum name='cmStdobs1931TwoDegrees' value64='1'/>
<enum name='cmStdobs1964TenDegrees' value64='2'/>
<enum name='cmStdobsUnknown' value64='0'/>
<enum name='cmTaligent' value64='1413959252'/>
<enum name='cmTechnologyAMDisplay' value64='1095582752'/>
<enum name='cmTechnologyCRTDisplay' value64='1129468960'/>
<enum name='cmTechnologyDigitalCamera' value64='1684234605'/>
<enum name='cmTechnologyDyeSublimationPrinter' value64='1685288290'/>
<enum name='cmTechnologyElectrophotographicPrinter' value64='1701865583'/>
<enum name='cmTechnologyElectrostaticPrinter' value64='1702065249'/>
<enum name='cmTechnologyFilmScanner' value64='1718838126'/>
<enum name='cmTechnologyFilmWriter' value64='1718645358'/>
<enum name='cmTechnologyFlexography' value64='1718379896'/>
<enum name='cmTechnologyGravure' value64='1735549302'/>
<enum name='cmTechnologyInkJetPrinter' value64='1768580468'/>
<enum name='cmTechnologyOffsetLithography' value64='1868981875'/>
<enum name='cmTechnologyPMDisplay' value64='1347240992'/>
<enum name='cmTechnologyPhotoCD' value64='1263551300'/>
<enum name='cmTechnologyPhotoImageSetter' value64='1768777587'/>
<enum name='cmTechnologyPhotographicPaperPrinter' value64='1919969391'/>
<enum name='cmTechnologyProjectionTelevision' value64='1886024822'/>
<enum name='cmTechnologyReflectiveScanner' value64='1920164718'/>
<enum name='cmTechnologySilkscreen' value64='1936288875'/>
<enum name='cmTechnologyTag' value64='1952801640'/>
<enum name='cmTechnologyThermalWaxPrinter' value64='1953980792'/>
<enum name='cmTechnologyVideoCamera' value64='1986618467'/>
<enum name='cmTechnologyVideoMonitor' value64='1986618477'/>
<enum name='cmUcrBgTag' value64='1650877472'/>
<enum name='cmUseDefaultChromaticAdaptation' value64='0'/>
<enum name='cmVideoCardGammaFormulaType' value64='1'/>
<enum name='cmVideoCardGammaTableType' value64='0'/>
<enum name='cmVideoCardGammaTag' value64='1986226036'/>
<enum name='cmViewingConditionsDescTag' value64='1987405156'/>
<enum name='cmViewingConditionsTag' value64='1986618743'/>
<enum name='cmVonKriesChromaticAdaptation' value64='2'/>
<enum name='cmWord565ColorPacking' value64='1536'/>
<enum name='cmWord5ColorPacking' value64='1280'/>
<enum name='cmWriteAccess' value64='4'/>
<enum name='cmWriteSpool' value64='4'/>
<enum name='cmXYZ24Space' value64='8454'/>
<enum name='cmXYZ32Space' value64='2566'/>
<enum name='cmXYZ48LSpace' value64='26886'/>
<enum name='cmXYZ48Space' value64='10502'/>
<enum name='cmXYZData' value64='1482250784'/>
<enum name='cmXYZSpace' value64='6'/>
<enum name='cmYCbCrData' value64='1497588338'/>
<enum name='cmYXY32Space' value64='2565'/>
<enum name='cmYXYSpace' value64='5'/>
<enum name='cmYxyData' value64='1501067552'/>
<enum name='k16BE555PixelFormat' value64='16'/>
<enum name='k16BE565PixelFormat' value64='1110783541'/>
<enum name='k16LE5551PixelFormat' value64='892679473'/>
<enum name='k16LE555PixelFormat' value64='1278555445'/>
<enum name='k16LE565PixelFormat' value64='1278555701'/>
<enum name='k1IndexedGrayPixelFormat' value64='33'/>
<enum name='k1MonochromePixelFormat' value64='1'/>
<enum name='k24BGRPixelFormat' value64='842285639'/>
<enum name='k24RGBPixelFormat' value64='24'/>
<enum name='k2IndexedGrayPixelFormat' value64='34'/>
<enum name='k2IndexedPixelFormat' value64='2'/>
<enum name='k2vuyPixelFormat' value64='846624121'/>
<enum name='k32ABGRPixelFormat' value64='1094862674'/>
<enum name='k32ARGBPixelFormat' value64='32'/>
<enum name='k32BGRAPixelFormat' value64='1111970369'/>
<enum name='k32RGBAPixelFormat' value64='1380401729'/>
<enum name='k4IndexedGrayPixelFormat' value64='36'/>
<enum name='k4IndexedPixelFormat' value64='4'/>
<enum name='k8IndexedGrayPixelFormat' value64='40'/>
<enum name='k8IndexedPixelFormat' value64='8'/>
<enum name='kCMFloatBitmapFlagsAlpha' value64='1'/>
<enum name='kCMFloatBitmapFlagsAlphaPremul' value64='2'/>
<enum name='kCMFloatBitmapFlagsNone' value64='0'/>
<enum name='kCMFloatBitmapFlagsRangeClipped' value64='4'/>
<enum name='kDefaultCMMSignature' value64='1634758764'/>
<enum name='kDeviceToPCS' value64='1'/>
<enum name='kHorizontalConstraint' value64='2'/>
<enum name='kNoConstraint' value64='0'/>
<enum name='kNoTransform' value64='0'/>
<enum name='kPCSToDevice' value64='2'/>
<enum name='kPCSToPCS' value64='3'/>
<enum name='kUYVY422PixelFormat' value64='1431918169'/>
<enum name='kUseAtoB' value64='1'/>
<enum name='kUseBtoA' value64='2'/>
<enum name='kUseBtoB' value64='3'/>
<enum name='kUseProfileIntent' value64='-1'/>
<enum name='kVerticalConstraint' value64='1'/>
<enum name='kYUV211PixelFormat' value64='1496461617'/>
<enum name='kYUV411PixelFormat' value64='1496592689'/>
<enum name='kYUVSPixelFormat' value64='2037741171'/>
<enum name='kYUVUPixelFormat' value64='2037741173'/>
<enum name='kYVU9PixelFormat' value64='1498830137'/>
<enum name='kYVYU422PixelFormat' value64='1498831189'/>
<enum name='srcCopy' value64='0'/>
<struct name='DelimiterInfo' type64='{DelimiterInfo=&quot;startDelimiter&quot;[2C]&quot;endDelimiter&quot;[2C]}'>
<field declared_type64='Byte*' name='startDelimiter' type64='[2C]'/>
<field declared_type64='Byte*' name='endDelimiter' type64='[2C]'/>
</struct>
<struct name='PhonemeDescriptor' type64='{PhonemeDescriptor=&quot;phonemeCount&quot;s&quot;thePhonemes&quot;[1{PhonemeInfo=&quot;opcode&quot;s&quot;phStr&quot;[16C]&quot;exampleStr&quot;[32C]&quot;hiliteStart&quot;s&quot;hiliteEnd&quot;s}]}'>
<field declared_type64='SInt16' name='phonemeCount' type64='s'/>
<field declared_type64='PhonemeInfo*' name='thePhonemes' type64='[1{PhonemeInfo=&quot;opcode&quot;s&quot;phStr&quot;[16C]&quot;exampleStr&quot;[32C]&quot;hiliteStart&quot;s&quot;hiliteEnd&quot;s}]'/>
</struct>
<struct name='PhonemeInfo' type64='{PhonemeInfo=&quot;opcode&quot;s&quot;phStr&quot;[16C]&quot;exampleStr&quot;[32C]&quot;hiliteStart&quot;s&quot;hiliteEnd&quot;s}'>
<field declared_type64='SInt16' name='opcode' type64='s'/>
<field declared_type64='Str15' name='phStr' type64='[16C]'/>
<field declared_type64='Str31' name='exampleStr' type64='[32C]'/>
<field declared_type64='SInt16' name='hiliteStart' type64='s'/>
<field declared_type64='SInt16' name='hiliteEnd' type64='s'/>
</struct>
<struct name='SpeechChannelRecord' type64='{SpeechChannelRecord=&quot;data&quot;[1q]}'>
<field declared_type64='long*' name='data' type64='[1q]'/>
</struct>
<struct name='SpeechErrorInfo' type64='{SpeechErrorInfo=&quot;count&quot;s&quot;oldest&quot;s&quot;oldPos&quot;q&quot;newest&quot;s&quot;newPos&quot;q}'>
<field declared_type64='SInt16' name='count' type64='s'/>
<field declared_type64='OSErr' name='oldest' type64='s'/>
<field declared_type64='long' name='oldPos' type64='q'/>
<field declared_type64='OSErr' name='newest' type64='s'/>
<field declared_type64='long' name='newPos' type64='q'/>
</struct>
<struct name='SpeechStatusInfo' type64='{SpeechStatusInfo=&quot;outputBusy&quot;B&quot;outputPaused&quot;B&quot;inputBytesLeft&quot;q&quot;phonemeCode&quot;s}'>
<field declared_type64='Boolean' name='outputBusy' type64='B'/>
<field declared_type64='Boolean' name='outputPaused' type64='B'/>
<field declared_type64='long' name='inputBytesLeft' type64='q'/>
<field declared_type64='SInt16' name='phonemeCode' type64='s'/>
</struct>
<struct name='SpeechVersionInfo' type64='{SpeechVersionInfo=&quot;synthType&quot;I&quot;synthSubType&quot;I&quot;synthManufacturer&quot;I&quot;synthFlags&quot;i&quot;synthVersion&quot;{NumVersion=&quot;nonRelRev&quot;C&quot;stage&quot;C&quot;minorAndBugRev&quot;C&quot;majorRev&quot;C}}'>
<field declared_type64='OSType' name='synthType' type64='I'/>
<field declared_type64='OSType' name='synthSubType' type64='I'/>
<field declared_type64='OSType' name='synthManufacturer' type64='I'/>
<field declared_type64='SInt32' name='synthFlags' type64='i'/>
<field declared_type64='NumVersion' name='synthVersion' type64='{NumVersion=&quot;nonRelRev&quot;C&quot;stage&quot;C&quot;minorAndBugRev&quot;C&quot;majorRev&quot;C}'/>
</struct>
<struct name='SpeechXtndData' type64='{SpeechXtndData=&quot;synthCreator&quot;I&quot;synthData&quot;[2C]}'>
<field declared_type64='OSType' name='synthCreator' type64='I'/>
<field declared_type64='Byte*' name='synthData' type64='[2C]'/>
</struct>
<struct name='VoiceDescription' type64='{VoiceDescription=&quot;length&quot;i&quot;voice&quot;{VoiceSpec=&quot;creator&quot;I&quot;id&quot;I}&quot;version&quot;i&quot;name&quot;[64C]&quot;comment&quot;[256C]&quot;gender&quot;s&quot;age&quot;s&quot;script&quot;s&quot;language&quot;s&quot;region&quot;s&quot;reserved&quot;[4i]}'>
<field declared_type64='SInt32' name='length' type64='i'/>
<field declared_type64='VoiceSpec' name='voice' type64='{VoiceSpec=&quot;creator&quot;I&quot;id&quot;I}'/>
<field declared_type64='SInt32' name='version' type64='i'/>
<field declared_type64='Str63' name='name' type64='[64C]'/>
<field declared_type64='Str255' name='comment' type64='[256C]'/>
<field declared_type64='SInt16' name='gender' type64='s'/>
<field declared_type64='SInt16' name='age' type64='s'/>
<field declared_type64='SInt16' name='script' type64='s'/>
<field declared_type64='SInt16' name='language' type64='s'/>
<field declared_type64='SInt16' name='region' type64='s'/>
<field declared_type64='SInt32*' name='reserved' type64='[4i]'/>
</struct>
<struct name='VoiceFileInfo' type64='{VoiceFileInfo=&quot;fileSpec&quot;{FSSpec=&quot;hidden&quot;[70C]}&quot;resID&quot;s}'>
<field declared_type64='FSSpec' name='fileSpec' type64='{FSSpec=&quot;hidden&quot;[70C]}'/>
<field declared_type64='SInt16' name='resID' type64='s'/>
</struct>
<struct name='VoiceSpec' type64='{VoiceSpec=&quot;creator&quot;I&quot;id&quot;I}'>
<field declared_type64='OSType' name='creator' type64='I'/>
<field declared_type64='OSType' name='id' type64='I'/>
</struct>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechAudioGraphProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechAudioOutputFormatProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechAudioUnitProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechCharacterModeProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechCommandDelimiterProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechCommandPrefix' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechCommandSuffix' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechCurrentVoiceProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechDictionaryAbbreviations' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechDictionaryEntryPhonemes' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechDictionaryEntrySpelling' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechDictionaryLocaleIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechDictionaryModificationDate' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechDictionaryPronunciations' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorCFCallBack' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorCallbackCharacterOffset' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorCallbackSpokenString' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorCount' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorNewest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorNewestCharacterOffset' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorOldest' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorOldestCharacterOffset' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechErrorsProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechInputModeProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechModeLiteral' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechModeNormal' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechModePhoneme' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechModeText' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechModeTune' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechNoEndingProsody' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechNoSpeechInterrupt' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechNumberModeProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechOutputChannelMapProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechOutputToAudioDeviceProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechOutputToExtAudioFileProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechOutputToFileDescriptorProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechOutputToFileURLProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPhonemeCallBack' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPhonemeInfoExample' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPhonemeInfoHiliteEnd' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPhonemeInfoHiliteStart' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPhonemeInfoOpcode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPhonemeInfoSymbol' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPhonemeOptionsProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPhonemeSymbolsProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPitchBaseProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPitchModProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechPreflightThenPause' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechRateProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechRecentSyncProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechRefConProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechResetProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechSpeechDoneCallBack' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechStatusNumberOfCharactersLeft' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechStatusOutputBusy' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechStatusOutputPaused' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechStatusPhonemeCode' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechStatusProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechSyncCallBack' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechSynthExtensionProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechSynthesizerInfoIdentifier' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechSynthesizerInfoManufacturer' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechSynthesizerInfoProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechSynthesizerInfoVersion' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechTextDoneCallBack' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechVoiceCreator' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechVoiceID' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechVolumeProperty' type64='^{__CFString=}'/>
<constant const='true' declared_type64='CFStringRef _Nonnull' name='kSpeechWordCFCallBack' type64='^{__CFString=}'/>
<enum name='kAudioUnitProperty_SpeechChannel' value64='3331'/>
<enum name='kAudioUnitProperty_Voice' value64='3330'/>
<enum name='kAudioUnitSubType_SpeechSynthesis' value64='1953788784'/>
<enum name='kEndOfSentence' value64='2'/>
<enum name='kEndOfWord' value64='1'/>
<enum name='kFemale' value64='2'/>
<enum name='kImmediate' value64='0'/>
<enum name='kMale' value64='1'/>
<enum name='kNeuter' value64='0'/>
<enum name='kNoEndingProsody' value64='1'/>
<enum name='kNoSpeechInterrupt' value64='2'/>
<enum name='kPreflightThenPause' value64='4'/>
<enum name='kSpeechGenerateTune' value64='1'/>
<enum name='kSpeechRelativeDuration' value64='4'/>
<enum name='kSpeechRelativePitch' value64='2'/>
<enum name='kSpeechShowSyllables' value64='8'/>
<enum name='kTextToSpeechSynthType' value64='1953788771'/>
<enum name='kTextToSpeechVoiceBundleType' value64='1953789538'/>
<enum name='kTextToSpeechVoiceFileType' value64='1953789542'/>
<enum name='kTextToSpeechVoiceType' value64='1953789540'/>
<enum name='modeLiteral' value64='1280594508'/>
<enum name='modeNormal' value64='1313821261'/>
<enum name='modePhonemes' value64='1346916174'/>
<enum name='modeText' value64='1413830740'/>
<enum name='modeTune' value64='1414876741'/>
<enum name='soCharacterMode' value64='1667785074'/>
<enum name='soCommandDelimiter' value64='1684826477'/>
<enum name='soCurrentA5' value64='1836663093'/>
<enum name='soCurrentVoice' value64='1668706168'/>
<enum name='soErrorCallBack' value64='1701995362'/>
<enum name='soErrors' value64='1701999215'/>
<enum name='soInputMode' value64='1768845428'/>
<enum name='soNumberMode' value64='1852662386'/>
<enum name='soOutputToAudioDevice' value64='1869635940'/>
<enum name='soOutputToExtAudioFile' value64='1869635960'/>
<enum name='soOutputToFileWithCFURL' value64='1869635942'/>
<enum name='soPhonemeCallBack' value64='1885889378'/>
<enum name='soPhonemeOptions' value64='1886351476'/>
<enum name='soPhonemeSymbols' value64='1885893497'/>
<enum name='soPitchBase' value64='1885495667'/>
<enum name='soPitchMod' value64='1886220132'/>
<enum name='soRate' value64='1918989413'/>
<enum name='soRecentSync' value64='1937337955'/>
<enum name='soRefCon' value64='1919247971'/>
<enum name='soReset' value64='1920165236'/>
<enum name='soSoundOutput' value64='1936614511'/>
<enum name='soSpeechDoneCallBack' value64='1935958882'/>
<enum name='soStatus' value64='1937006964'/>
<enum name='soSyncCallBack' value64='1937335138'/>
<enum name='soSynthExtension' value64='2020896356'/>
<enum name='soSynthType' value64='1986359923'/>
<enum name='soTextDoneCallBack' value64='1952736098'/>
<enum name='soVoiceDescription' value64='1768842863'/>
<enum name='soVoiceFile' value64='1718773094'/>
<enum name='soVolume' value64='1987013741'/>
<enum name='soWordCallBack' value64='2003067746'/>
<function name='ContinueSpeech'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='CopyPhonemesFromText'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='CFStringRef _Nonnull' name='text' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef _Nullable * _Nonnull' name='phonemes' type64='^^{__CFString}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='CopySpeechProperty'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='CFStringRef _Nonnull' name='property' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nullable * _Nonnull' name='object' type64='^^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='CountVoices'>
<arg declared_type64='SInt16 * _Nonnull' name='numVoices' type64='^s'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='DisposeSpeechChannel'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='DisposeSpeechDoneUPP'>
<arg declared_type64='SpeechDoneUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeSpeechErrorUPP'>
<arg declared_type64='SpeechErrorUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='OSErr' type64='s'/>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeSpeechPhonemeUPP'>
<arg declared_type64='SpeechPhonemeUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='SInt16' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeSpeechSyncUPP'>
<arg declared_type64='SpeechSyncUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='OSType' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeSpeechTextDoneUPP'>
<arg declared_type64='SpeechTextDoneUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg const='true' declared_type64='void * _Nullable * _Nullable' type64='^^v'/>
<arg declared_type64='unsigned long * _Nonnull' type64='^Q'/>
<arg declared_type64='SInt32 * _Nonnull' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='DisposeSpeechWordUPP'>
<arg declared_type64='SpeechWordUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='unsigned long' type64='Q'/>
<arg declared_type64='UInt16' type64='S'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='GetIndVoice'>
<arg declared_type64='SInt16' name='index' type64='s'/>
<arg declared_type64='VoiceSpec * _Nonnull' name='voice' type64='^{VoiceSpec=II}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetSpeechInfo'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='OSType' name='selector' type64='I'/>
<arg declared_type64='void * _Nonnull' name='speechInfo' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetSpeechPitch'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='Fixed * _Nonnull' name='pitch' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetSpeechRate'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='Fixed * _Nonnull' name='rate' type64='^i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetVoiceDescription'>
<arg const='true' declared_type64='VoiceSpec * _Nullable' name='voice' type64='^{VoiceSpec=II}'/>
<arg declared_type64='VoiceDescription * _Nullable' name='info' type64='^{VoiceDescription=i{VoiceSpec=II}i[64C][256C]sssss[4i]}'/>
<arg declared_type64='long' name='infoLength' type64='q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='GetVoiceInfo'>
<arg const='true' declared_type64='VoiceSpec * _Nullable' name='voice' type64='^{VoiceSpec=II}'/>
<arg declared_type64='OSType' name='selector' type64='I'/>
<arg declared_type64='void * _Nonnull' name='voiceInfo' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='InvokeSpeechDoneUPP'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' name='refCon' type64='^v'/>
<arg declared_type64='SpeechDoneUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeSpeechErrorUPP'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' name='refCon' type64='^v'/>
<arg declared_type64='OSErr' name='theError' type64='s'/>
<arg declared_type64='long' name='bytePos' type64='q'/>
<arg declared_type64='SpeechErrorUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='OSErr' type64='s'/>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeSpeechPhonemeUPP'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' name='refCon' type64='^v'/>
<arg declared_type64='SInt16' name='phonemeOpcode' type64='s'/>
<arg declared_type64='SpeechPhonemeUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='SInt16' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeSpeechSyncUPP'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' name='refCon' type64='^v'/>
<arg declared_type64='OSType' name='syncMessage' type64='I'/>
<arg declared_type64='SpeechSyncUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='OSType' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeSpeechTextDoneUPP'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' name='refCon' type64='^v'/>
<arg const='true' declared_type64='void * _Nullable * _Nullable' name='nextBuf' type64='^^v'/>
<arg declared_type64='unsigned long * _Nonnull' name='byteLen' type64='^Q'/>
<arg declared_type64='SInt32 * _Nonnull' name='controlFlags' type64='^i'/>
<arg declared_type64='SpeechTextDoneUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg const='true' declared_type64='void * _Nullable * _Nullable' type64='^^v'/>
<arg declared_type64='unsigned long * _Nonnull' type64='^Q'/>
<arg declared_type64='SInt32 * _Nonnull' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='InvokeSpeechWordUPP'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' name='refCon' type64='^v'/>
<arg declared_type64='unsigned long' name='wordPos' type64='Q'/>
<arg declared_type64='UInt16' name='wordLen' type64='S'/>
<arg declared_type64='SpeechWordUPP _Nonnull' function_pointer='true' name='userUPP' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='unsigned long' type64='Q'/>
<arg declared_type64='UInt16' type64='S'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='MakeVoiceSpec'>
<arg declared_type64='OSType' name='creator' type64='I'/>
<arg declared_type64='OSType' name='id' type64='I'/>
<arg declared_type64='VoiceSpec * _Nonnull' name='voice' type64='^{VoiceSpec=II}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='NewSpeechChannel'>
<arg declared_type64='VoiceSpec * _Nullable' name='voice' type64='^{VoiceSpec=II}'/>
<arg declared_type64='SpeechChannel _Nullable * _Nonnull' name='chan' type64='^^{SpeechChannelRecord}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='NewSpeechDoneUPP'>
<arg declared_type64='SpeechDoneProcPtr _Nonnull' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SpeechDoneUPP _Nonnull' function_pointer='true' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewSpeechErrorUPP'>
<arg declared_type64='SpeechErrorProcPtr _Nonnull' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='OSErr' type64='s'/>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SpeechErrorUPP _Nonnull' function_pointer='true' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='OSErr' type64='s'/>
<arg declared_type64='long' type64='q'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewSpeechPhonemeUPP'>
<arg declared_type64='SpeechPhonemeProcPtr _Nonnull' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='SInt16' type64='s'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SpeechPhonemeUPP _Nonnull' function_pointer='true' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='SInt16' type64='s'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewSpeechSyncUPP'>
<arg declared_type64='SpeechSyncProcPtr _Nonnull' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='OSType' type64='I'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SpeechSyncUPP _Nonnull' function_pointer='true' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='OSType' type64='I'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewSpeechTextDoneUPP'>
<arg declared_type64='SpeechTextDoneProcPtr _Nonnull' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg const='true' declared_type64='void * _Nullable * _Nullable' type64='^^v'/>
<arg declared_type64='unsigned long * _Nonnull' type64='^Q'/>
<arg declared_type64='SInt32 * _Nonnull' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SpeechTextDoneUPP _Nonnull' function_pointer='true' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg const='true' declared_type64='void * _Nullable * _Nullable' type64='^^v'/>
<arg declared_type64='unsigned long * _Nonnull' type64='^Q'/>
<arg declared_type64='SInt32 * _Nonnull' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='NewSpeechWordUPP'>
<arg declared_type64='SpeechWordProcPtr _Nonnull' function_pointer='true' name='userRoutine' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='unsigned long' type64='Q'/>
<arg declared_type64='UInt16' type64='S'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='SpeechWordUPP _Nonnull' function_pointer='true' type64='^?'>
<arg declared_type64='SpeechChannel _Nonnull' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SRefCon _Nonnull' type64='^v'/>
<arg declared_type64='unsigned long' type64='Q'/>
<arg declared_type64='UInt16' type64='S'/>
<retval declared_type64='void' type64='v'/>
</retval>
</function>
<function name='PauseSpeechAt'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SInt32' name='whereToPause' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetSpeechInfo'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='OSType' name='selector' type64='I'/>
<arg const='true' declared_type64='void * _Nullable' name='speechInfo' type64='^v'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetSpeechPitch'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='Fixed' name='pitch' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetSpeechProperty'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='CFStringRef _Nonnull' name='property' type64='^{__CFString=}'/>
<arg declared_type64='CFTypeRef _Nullable' name='object' type64='@'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SetSpeechRate'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='Fixed' name='rate' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SpeakBuffer'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg const='true' declared_type64='void * _Nonnull' name='textBuf' type64='^v'/>
<arg declared_type64='unsigned long' name='textBytes' type64='Q'/>
<arg declared_type64='SInt32' name='controlFlags' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SpeakCFString'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='CFStringRef _Nonnull' name='aString' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef _Nullable' name='options' type64='^{__CFDictionary=}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SpeakString'>
<arg declared_type64='ConstStr255Param _Nonnull' name='textToBeSpoken' type64='*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SpeakText'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg const='true' declared_type64='void * _Nonnull' name='textBuf' type64='^v'/>
<arg declared_type64='unsigned long' name='textBytes' type64='Q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SpeechBusy'>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='SpeechBusySystemWide'>
<retval declared_type64='SInt16' type64='s'/>
</function>
<function name='SpeechManagerVersion'>
<retval declared_type64='NumVersion' type64='{NumVersion=CCCC}'/>
</function>
<function name='SpeechSynthesisRegisterModuleURL'>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='SpeechSynthesisUnregisterModuleURL'>
<arg declared_type64='CFURLRef _Nonnull' name='url' type64='^{__CFURL=}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='StopSpeech'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='StopSpeechAt'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='SInt32' name='whereToStop' type64='i'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='TextToPhonemes'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg const='true' declared_type64='void * _Nonnull' name='textBuf' type64='^v'/>
<arg declared_type64='unsigned long' name='textBytes' type64='Q'/>
<arg declared_type64='Handle _Nonnull' name='phonemeBuf' type64='^*'/>
<arg declared_type64='long * _Nonnull' name='phonemeBytes' type64='^q'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='UseDictionary'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='Handle _Nonnull' name='dictionary' type64='^*'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
<function name='UseSpeechDictionary'>
<arg declared_type64='SpeechChannel _Nonnull' name='chan' type64='^{SpeechChannelRecord=[1q]}'/>
<arg declared_type64='CFDictionaryRef _Nonnull' name='speechDictionary' type64='^{__CFDictionary=}'/>
<retval declared_type64='OSErr' type64='s'/>
</function>
</signatures>
