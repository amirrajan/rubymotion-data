<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreMedia.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/AudioUnit.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/MediaToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/VideoToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreMediaIO.framework'/>
<depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreImage.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<struct name='AVAudio3DAngularOrientation' type64='{AVAudio3DAngularOrientation=&quot;yaw&quot;f&quot;pitch&quot;f&quot;roll&quot;f}'>
<field declared_type64='float' name='yaw' type64='f'/>
<field declared_type64='float' name='pitch' type64='f'/>
<field declared_type64='float' name='roll' type64='f'/>
</struct>
<struct name='AVAudio3DPoint' type64='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
</struct>
<struct name='AVAudio3DVector' type64='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'>
<field declared_type64='float' name='x' type64='f'/>
<field declared_type64='float' name='y' type64='f'/>
<field declared_type64='float' name='z' type64='f'/>
</struct>
<struct name='AVAudio3DVectorOrientation' type64='{AVAudio3DVectorOrientation=&quot;forward&quot;{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}&quot;up&quot;{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}}'>
<field declared_type64='AVAudio3DVector' name='forward' type64='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<field declared_type64='AVAudio3DVector' name='up' type64='{AVAudio3DPoint=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
</struct>
<struct name='AVAudioConverterPrimeInfo' type64='{AVAudioConverterPrimeInfo=&quot;leadingFrames&quot;I&quot;trailingFrames&quot;I}'>
<field declared_type64='AVAudioFrameCount' name='leadingFrames' type64='I'/>
<field declared_type64='AVAudioFrameCount' name='trailingFrames' type64='I'/>
</struct>
<struct name='AVBeatRange' type64='{_AVBeatRange=&quot;start&quot;d&quot;length&quot;d}'>
<field declared_type64='AVMusicTimeStamp' name='start' type64='d'/>
<field declared_type64='AVMusicTimeStamp' name='length' type64='d'/>
</struct>
<struct name='AVEdgeWidths' type64='{_AVEdgeWidths=&quot;left&quot;d&quot;top&quot;d&quot;right&quot;d&quot;bottom&quot;d}'>
<field declared_type64='CGFloat' name='left' type64='d'/>
<field declared_type64='CGFloat' name='top' type64='d'/>
<field declared_type64='CGFloat' name='right' type64='d'/>
<field declared_type64='CGFloat' name='bottom' type64='d'/>
</struct>
<struct name='AVPixelAspectRatio' type64='{_AVPixelAspectRatio=&quot;horizontalSpacing&quot;q&quot;verticalSpacing&quot;q}'>
<field declared_type64='NSInteger' name='horizontalSpacing' type64='q'/>
<field declared_type64='NSInteger' name='verticalSpacing' type64='q'/>
</struct>
<struct name='AVSampleCursorChunkInfo' type64='{_AVSampleCursorChunkInfo=&quot;chunkSampleCount&quot;q&quot;chunkHasUniformSampleSizes&quot;B&quot;chunkHasUniformSampleDurations&quot;B&quot;chunkHasUniformFormatDescriptions&quot;B}'>
<field declared_type64='int64_t' name='chunkSampleCount' type64='q'/>
<field declared_type64='BOOL' name='chunkHasUniformSampleSizes' type64='B'/>
<field declared_type64='BOOL' name='chunkHasUniformSampleDurations' type64='B'/>
<field declared_type64='BOOL' name='chunkHasUniformFormatDescriptions' type64='B'/>
</struct>
<struct name='AVSampleCursorDependencyInfo' type64='{_AVSampleCursorDependencyInfo=&quot;sampleIndicatesWhetherItHasDependentSamples&quot;B&quot;sampleHasDependentSamples&quot;B&quot;sampleIndicatesWhetherItDependsOnOthers&quot;B&quot;sampleDependsOnOthers&quot;B&quot;sampleIndicatesWhetherItHasRedundantCoding&quot;B&quot;sampleHasRedundantCoding&quot;B}'>
<field declared_type64='BOOL' name='sampleIndicatesWhetherItHasDependentSamples' type64='B'/>
<field declared_type64='BOOL' name='sampleHasDependentSamples' type64='B'/>
<field declared_type64='BOOL' name='sampleIndicatesWhetherItDependsOnOthers' type64='B'/>
<field declared_type64='BOOL' name='sampleDependsOnOthers' type64='B'/>
<field declared_type64='BOOL' name='sampleIndicatesWhetherItHasRedundantCoding' type64='B'/>
<field declared_type64='BOOL' name='sampleHasRedundantCoding' type64='B'/>
</struct>
<struct name='AVSampleCursorStorageRange' type64='{_AVSampleCursorStorageRange=&quot;offset&quot;q&quot;length&quot;q}'>
<field declared_type64='int64_t' name='offset' type64='q'/>
<field declared_type64='int64_t' name='length' type64='q'/>
</struct>
<struct name='AVSampleCursorSyncInfo' type64='{_AVSampleCursorSyncInfo=&quot;sampleIsFullSync&quot;B&quot;sampleIsPartialSync&quot;B&quot;sampleIsDroppable&quot;B}'>
<field declared_type64='BOOL' name='sampleIsFullSync' type64='B'/>
<field declared_type64='BOOL' name='sampleIsPartialSync' type64='B'/>
<field declared_type64='BOOL' name='sampleIsDroppable' type64='B'/>
</struct>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetChapterMetadataGroupsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetContainsFragmentsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetDurationDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset1280x720' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset1920x1080' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset3840x2160' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset640x480' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPreset960x540' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4A' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4V1080pHD' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4V480pSD' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4V720pHD' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4VAppleTV' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4VCellular' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4VWiFi' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleM4ViPod' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetAppleProRes422LPCM' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetHighestQuality' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetLowQuality' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetMediumQuality' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetExportPresetPassthrough' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetImageGeneratorApertureModeCleanAperture' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetImageGeneratorApertureModeEncodedPixels' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetImageGeneratorApertureModeProductionAperture' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetMediaSelectionGroupsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetTrackSegmentsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetTrackTimeRangeDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetTrackTrackAssociationsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAssetWasDefragmentedNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioBitRateStrategy_Constant' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioBitRateStrategy_LongTermAverage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioBitRateStrategy_Variable' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioBitRateStrategy_VariableConstrained' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioEngineConfigurationChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioTimePitchAlgorithmSpectral' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioTimePitchAlgorithmTimeDomain' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVAudioTimePitchAlgorithmVarispeed' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitComponentTagsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitManufacturerNameApple' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeFormatConverter' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeGenerator' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeMIDIProcessor' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeMixer' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeMusicDevice' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeMusicEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeOfflineEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypeOutput' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVAudioUnitTypePanner' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureDeviceWasConnectedNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureDeviceWasDisconnectedNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureInputPortFormatDescriptionDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='float' name='AVCaptureMaxAvailableTorchLevel' type64='f'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionDidStartRunningNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionDidStopRunningNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionErrorKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPreset1280x720' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPreset320x240' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPreset352x288' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPreset640x480' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPreset960x540' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPresetHigh' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPresetLow' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPresetMedium' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPresetPhoto' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPresetiFrame1280x720' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionPresetiFrame960x540' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVCaptureSessionRuntimeErrorNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVChannelLayoutKey' type64='@'/>
<constant const='true' declared_type64='CFTimeInterval' name='AVCoreAnimationBeginTimeAtZero' type64='d'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderAudioQualityForVBRKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderAudioQualityKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderBitDepthHintKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderBitRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderBitRatePerChannelKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVEncoderBitRateStrategyKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorDeviceKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorDiscontinuityFlagsKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorFileSizeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorFileTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorMediaSubTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorMediaTypeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorPIDKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorPersistentTrackIDKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorPresentationTimeStampKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorRecordingSuccessfullyFinishedKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVErrorTimeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileType3GPP' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileType3GPP2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeAC3' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeAIFC' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeAIFF' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeAMR' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeAppleM4A' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeAppleM4V' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeCoreAudioFormat' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeEnhancedAC3' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeMPEG4' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeMPEGLayer3' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeQuickTimeMovie' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeSunAU' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFileTypeWAVE' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFormatIDKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVFoundationErrorDomain' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVFragmentedMovieContainsMovieFragmentsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVFragmentedMovieDurationDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVFragmentedMovieTrackSegmentsDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVFragmentedMovieTrackTimeRangeDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVFragmentedMovieTrackTotalSampleDataLengthDidChangeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVFragmentedMovieWasDefragmentedNotification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLayerVideoGravityResize' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLayerVideoGravityResizeAspect' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLayerVideoGravityResizeAspectFill' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLinearPCMBitDepthKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLinearPCMIsBigEndianKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLinearPCMIsFloatKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVLinearPCMIsNonInterleaved' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicAudible' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicContainsOnlyForcedSubtitles' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicDescribesMusicAndSoundForAccessibility' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicDescribesVideoForAccessibility' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicDubbedTranslation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicEasyToRead' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicFrameBased' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicIsAuxiliaryContent' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicIsMainProgramContent' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicLanguageTranslation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicLegible' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicTranscribesSpokenDialogForAccessibility' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicVisual' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaCharacteristicVoiceOverTranslation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaTypeAudio' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaTypeClosedCaption' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaTypeMetadata' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaTypeMuxed' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaTypeSubtitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaTypeText' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaTypeTimecode' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMediaTypeVideo' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyAlbumAndTrack' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyCollection' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyKeywordList' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyLocation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyMediaClassification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyMediaRating' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyPerformer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyRecordingYear' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyThumbnail' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadata3GPUserDataKeyUserRating' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierAlbumName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierArtwork' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierAssetIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierContributor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierCopyrights' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierCreationDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierCreator' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierFormat' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierLanguage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierLastModifiedDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierLocation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierMake' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierModel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierRelation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierSoftware' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierSource' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierSubject' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonIdentifierType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyAlbumName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyArtwork' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyContributor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyCopyrights' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyCreationDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyCreator' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyFormat' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyLanguage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyLastModifiedDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyLocation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyMake' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyModel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyRelation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeySoftware' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeySource' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeySubject' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataCommonKeyType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataExtraAttributeBaseURIKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataExtraAttributeInfoKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataExtraAttributeValueURIKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataFormatHLSMetadata' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataFormatID3Metadata' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataFormatISOUserData' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataFormatQuickTimeMetadata' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataFormatQuickTimeUserData' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataFormatiTunesMetadata' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyAlbumSortOrder' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyAlbumTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyAttachedPicture' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyAudioEncryption' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyAudioSeekPointIndex' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyBand' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyBeatsPerMinute' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyComments' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyCommercial' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyCommercialInformation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyCommerical' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyComposer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyConductor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyContentGroupDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyContentType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyCopyrightInformation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyEncodedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyEncodedWith' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyEncodingTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyEncryption' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyEqualization' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyEqualization2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyEventTimingCodes' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyFileOwner' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyFileType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyGeneralEncapsulatedObject' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyGroupIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyInitialKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyInternationalStandardRecordingCode' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyInternetRadioStationName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyInternetRadioStationOwner' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyInvolvedPeopleList_v23' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyInvolvedPeopleList_v24' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyLanguage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyLeadPerformer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyLength' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyLink' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyLyricist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyMPEGLocationLookupTable' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyMediaType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyModifiedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyMood' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyMusicCDIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyMusicianCreditsList' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOfficialArtistWebpage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOfficialAudioFileWebpage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOfficialAudioSourceWebpage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOfficialInternetRadioStationHomepage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOfficialPublisherWebpage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOriginalAlbumTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOriginalArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOriginalFilename' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOriginalLyricist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOriginalReleaseTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOriginalReleaseYear' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyOwnership' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPartOfASet' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPayment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPerformerSortOrder' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPlayCounter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPlaylistDelay' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPopularimeter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPositionSynchronization' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPrivate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyProducedNotice' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyRecommendedBufferSize' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyRecordingDates' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyRecordingTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyRelativeVolumeAdjustment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyRelativeVolumeAdjustment2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyReleaseTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyReverb' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeySeek' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeySetSubtitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeySignature' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeySize' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeySubTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeySynchronizedLyric' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeySynchronizedTempoCodes' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyTaggingTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyTermsOfUse' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyTitleDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyTitleSortOrder' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyTrackNumber' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyUniqueFileIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyUnsynchronizedLyric' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyUserText' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyUserURL' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataID3MetadataKeyYear' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataISOUserDataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataISOUserDataKeyTaggedCharacteristic' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIcyMetadataKeyStreamTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIcyMetadataKeyStreamURL' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataAlbumAndTrack' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataCollection' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataKeywordList' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataLocation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataMediaClassification' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataMediaRating' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataPerformer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataRecordingYear' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataThumbnail' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifier3GPUserDataUserRating' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataAlbumSortOrder' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataAlbumTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataAttachedPicture' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataAudioEncryption' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataAudioSeekPointIndex' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataBand' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataBeatsPerMinute' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataComments' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataCommercial' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataCommercialInformation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataCommerical' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataComposer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataConductor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataContentGroupDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataContentType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataCopyrightInformation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataEncodedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataEncodedWith' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataEncodingTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataEncryption' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataEqualization' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataEqualization2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataEventTimingCodes' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataFileOwner' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataFileType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataGeneralEncapsulatedObject' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataGroupIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataInitialKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataInternationalStandardRecordingCode' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataInternetRadioStationName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataInternetRadioStationOwner' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataInvolvedPeopleList_v23' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataInvolvedPeopleList_v24' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataLanguage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataLeadPerformer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataLength' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataLink' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataLyricist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataMPEGLocationLookupTable' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataMediaType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataModifiedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataMood' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataMusicCDIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataMusicianCreditsList' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOfficialArtistWebpage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOfficialAudioFileWebpage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOfficialAudioSourceWebpage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOfficialInternetRadioStationHomepage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOfficialPublisherWebpage' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOriginalAlbumTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOriginalArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOriginalFilename' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOriginalLyricist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOriginalReleaseTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOriginalReleaseYear' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataOwnership' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPartOfASet' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPayment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPerformerSortOrder' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPlayCounter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPlaylistDelay' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPopularimeter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPositionSynchronization' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPrivate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataProducedNotice' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataRecommendedBufferSize' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataRecordingDates' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataRecordingTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataRelativeVolumeAdjustment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataRelativeVolumeAdjustment2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataReleaseTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataReverb' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataSeek' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataSetSubtitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataSignature' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataSize' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataSubTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataSynchronizedLyric' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataSynchronizedTempoCodes' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataTaggingTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataTermsOfUse' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataTitleDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataTitleSortOrder' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataTrackNumber' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataUniqueFileIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataUnsynchronizedLyric' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataUserText' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataUserURL' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierID3MetadataYear' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierISOUserDataCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierISOUserDataTaggedCharacteristic' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierIcyMetadataStreamTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierIcyMetadataStreamURL' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataAlbum' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataArranger' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataArtwork' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataCameraFrameReadoutTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataCameraIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataCollectionUser' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataComment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataComposer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataContentIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataCreationDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataCredits' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataDetectedFace' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataDirectionFacing' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataDirectionMotion' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataDirector' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataDisplayName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataEncodedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataInformation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataKeywords' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataLocationBody' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataLocationDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataLocationISO6709' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataLocationName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataLocationNote' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataLocationRole' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataMake' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataModel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataOriginalArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataPerformer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataPhonogramRights' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataPreferredAffineTransform' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataProducer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataRatingUser' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataSoftware' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataVideoOrientation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataYear' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeMetadataiXML' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataAlbum' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataArranger' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataChapter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataComment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataComposer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataCreationDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataCredits' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataDirector' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataDisclaimer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataEncodedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataFullName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataHostComputer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataInformation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataKeywords' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataLocationISO6709' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataMake' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataModel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataOriginalArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataOriginalFormat' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataOriginalSource' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataPerformers' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataPhonogramRights' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataProducer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataProduct' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataSoftware' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataSpecialPlaybackRequirements' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataTaggedCharacteristic' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataTrack' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataTrackName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataURLLink' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataWarning' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifierQuickTimeUserDataWriter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataAccountKind' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataAcknowledgement' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataAlbum' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataAlbumArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataAppleID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataArranger' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataArtDirector' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataArtistID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataBeatsPerMin' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataComposer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataConductor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataContentRating' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataCoverArt' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataCredits' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataDirector' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataDiscCompilation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataDiscNumber' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataEQ' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataEncodedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataEncodingTool' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataExecProducer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataGenreID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataGrouping' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataLinerNotes' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataLyrics' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataOnlineExtras' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataOriginalArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataPerformer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataPhonogramRights' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataPlaylistID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataPredefinedGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataProducer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataRecordCompany' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataReleaseDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataSoloist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataSongID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataSongName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataSoundEngineer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataThanks' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataTrackNumber' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataTrackSubTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataUserComment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataIdentifieriTunesMetadataUserGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataKeySpaceCommon' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataKeySpaceID3' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataKeySpaceISOUserData' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataKeySpaceIcy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataKeySpaceQuickTimeMetadata' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataKeySpaceQuickTimeUserData' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataKeySpaceiTunes' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataObjectTypeFace' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyAlbum' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyArranger' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyArtwork' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyCameraFrameReadoutTime' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyCameraIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyCollectionUser' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyComment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyComposer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyContentIdentifier' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyCreationDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyCredits' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyDirectionFacing' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyDirectionMotion' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyDirector' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyDisplayName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyEncodedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyInformation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyKeywords' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationBody' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationISO6709' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationNote' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyLocationRole' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyMake' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyModel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyOriginalArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyPerformer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyPhonogramRights' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyProducer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyRatingUser' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeySoftware' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyYear' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeMetadataKeyiXML' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyAlbum' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyArranger' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyChapter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyComment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyComposer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyCreationDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyCredits' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyDirector' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyDisclaimer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyEncodedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyFullName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyHostComputer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyInformation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyKeywords' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyLocationISO6709' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyMake' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyModel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyOriginalArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyOriginalFormat' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyOriginalSource' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyPerformers' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyPhonogramRights' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyProducer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyProduct' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeySoftware' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeySpecialPlaybackRequirements' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyTaggedCharacteristic' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyTrack' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyTrackName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyURLLink' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyWarning' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataQuickTimeUserDataKeyWriter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyAccountKind' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyAcknowledgement' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyAlbum' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyAlbumArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyAppleID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyArranger' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyArtDirector' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyArtistID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyAuthor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyBeatsPerMin' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyComposer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyConductor' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyContentRating' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyCopyright' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyCoverArt' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyCredits' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyDescription' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyDirector' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyDiscCompilation' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyDiscNumber' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyEQ' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyEncodedBy' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyEncodingTool' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyExecProducer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyGenreID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyGrouping' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyLinerNotes' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyLyrics' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyOnlineExtras' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyOriginalArtist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyPerformer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyPhonogramRights' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyPlaylistID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyPredefinedGenre' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyProducer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyPublisher' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyRecordCompany' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyReleaseDate' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeySoloist' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeySongID' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeySongName' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeySoundEngineer' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyThanks' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyTrackNumber' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyTrackSubTitle' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyUserComment' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVMetadataiTunesMetadataKeyUserGenre' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVMovieReferenceRestrictionsKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVNumberOfChannelsKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVOutputSettingsPreset1280x720' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVOutputSettingsPreset1920x1080' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVOutputSettingsPreset3840x2160' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVOutputSettingsPreset640x480' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVOutputSettingsPreset960x540' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemDidPlayToEndTimeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemFailedToPlayToEndTimeErrorKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemFailedToPlayToEndTimeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemLegibleOutputTextStylingResolutionDefault' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemNewAccessLogEntryNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemNewErrorLogEntryNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemPlaybackStalledNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemTimeJumpedNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVPlayerItemTrackVideoFieldModeDeinterlaceFields' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVSampleBufferDisplayLayerFailedToDecodeNotification' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAlgorithmKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAlgorithm_Mastering' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAlgorithm_Normal' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateConverterAudioQualityKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVSampleRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVStreamingKeyDeliveryContentKeyType' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVStreamingKeyDeliveryPersistentContentKeyType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVTrackAssociationTypeAudioFallback' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVTrackAssociationTypeChapterList' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVTrackAssociationTypeForcedSubtitlesOnly' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVTrackAssociationTypeMetadataReferent' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVTrackAssociationTypeSelectionFollower' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVTrackAssociationTypeTimecode' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVURLAssetPreferPreciseDurationAndTimingKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='AVURLAssetReferenceRestrictionsKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoAllowFrameReorderingKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoAverageBitRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoAverageNonDroppableFrameRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureHeightKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureHorizontalOffsetKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureVerticalOffsetKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCleanApertureWidthKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecAppleProRes422' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecAppleProRes4444' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecH264' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecJPEG' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCodecKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimariesKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimaries_EBU_3213' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimaries_ITU_R_709_2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPrimaries_SMPTE_C' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoColorPropertiesKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoCompressionPropertiesKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoEncoderSpecificationKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoExpectedSourceFrameRateKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoH264EntropyModeCABAC' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoH264EntropyModeCAVLC' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoH264EntropyModeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoHeightKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoMaxKeyFrameIntervalDurationKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoMaxKeyFrameIntervalKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoPixelAspectRatioHorizontalSpacingKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoPixelAspectRatioKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoPixelAspectRatioVerticalSpacingKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Baseline30' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Baseline31' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Baseline41' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264BaselineAutoLevel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264High40' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264High41' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264HighAutoLevel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Main30' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Main31' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Main32' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264Main41' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelH264MainAutoLevel' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoProfileLevelKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoQualityKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeFit' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeResize' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeResizeAspect' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoScalingModeResizeAspectFill' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoTransferFunctionKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoTransferFunction_ITU_R_709_2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoTransferFunction_SMPTE_240M_1995' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoWidthKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoYCbCrMatrixKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoYCbCrMatrix_ITU_R_601_4' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoYCbCrMatrix_ITU_R_709_2' type64='@'/>
<constant const='true' declared_type64='NSString*' name='AVVideoYCbCrMatrix_SMPTE_240M_1995' type64='@'/>
<enum name='AVAssetExportSessionStatusCancelled' value64='5'/>
<enum name='AVAssetExportSessionStatusCompleted' value64='3'/>
<enum name='AVAssetExportSessionStatusExporting' value64='2'/>
<enum name='AVAssetExportSessionStatusFailed' value64='4'/>
<enum name='AVAssetExportSessionStatusUnknown' value64='0'/>
<enum name='AVAssetExportSessionStatusWaiting' value64='1'/>
<enum name='AVAssetImageGeneratorCancelled' value64='2'/>
<enum name='AVAssetImageGeneratorFailed' value64='1'/>
<enum name='AVAssetImageGeneratorSucceeded' value64='0'/>
<enum name='AVAssetReaderStatusCancelled' value64='4'/>
<enum name='AVAssetReaderStatusCompleted' value64='2'/>
<enum name='AVAssetReaderStatusFailed' value64='3'/>
<enum name='AVAssetReaderStatusReading' value64='1'/>
<enum name='AVAssetReaderStatusUnknown' value64='0'/>
<enum name='AVAssetReferenceRestrictionForbidAll' value64='65535'/>
<enum name='AVAssetReferenceRestrictionForbidCrossSiteReference' value64='4'/>
<enum name='AVAssetReferenceRestrictionForbidLocalReferenceToLocal' value64='8'/>
<enum name='AVAssetReferenceRestrictionForbidLocalReferenceToRemote' value64='2'/>
<enum name='AVAssetReferenceRestrictionForbidNone' value64='0'/>
<enum name='AVAssetReferenceRestrictionForbidRemoteReferenceToLocal' value64='1'/>
<enum name='AVAssetWriterStatusCancelled' value64='4'/>
<enum name='AVAssetWriterStatusCompleted' value64='2'/>
<enum name='AVAssetWriterStatusFailed' value64='3'/>
<enum name='AVAssetWriterStatusUnknown' value64='0'/>
<enum name='AVAssetWriterStatusWriting' value64='1'/>
<enum name='AVAudio3DMixingRenderingAlgorithmEqualPowerPanning' value64='0'/>
<enum name='AVAudio3DMixingRenderingAlgorithmHRTF' value64='2'/>
<enum name='AVAudio3DMixingRenderingAlgorithmSoundField' value64='3'/>
<enum name='AVAudio3DMixingRenderingAlgorithmSphericalHead' value64='1'/>
<enum name='AVAudio3DMixingRenderingAlgorithmStereoPassThrough' value64='5'/>
<enum name='AVAudioConverterInputStatus_EndOfStream' value64='2'/>
<enum name='AVAudioConverterInputStatus_HaveData' value64='0'/>
<enum name='AVAudioConverterInputStatus_NoDataNow' value64='1'/>
<enum name='AVAudioConverterOutputStatus_EndOfStream' value64='2'/>
<enum name='AVAudioConverterOutputStatus_Error' value64='3'/>
<enum name='AVAudioConverterOutputStatus_HaveData' value64='0'/>
<enum name='AVAudioConverterOutputStatus_InputRanDry' value64='1'/>
<enum name='AVAudioConverterPrimeMethod_None' value64='2'/>
<enum name='AVAudioConverterPrimeMethod_Normal' value64='1'/>
<enum name='AVAudioConverterPrimeMethod_Pre' value64='0'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelExponential' value64='1'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelInverse' value64='2'/>
<enum name='AVAudioEnvironmentDistanceAttenuationModelLinear' value64='3'/>
<enum name='AVAudioOtherFormat' value64='0'/>
<enum name='AVAudioPCMFormatFloat32' value64='1'/>
<enum name='AVAudioPCMFormatFloat64' value64='2'/>
<enum name='AVAudioPCMFormatInt16' value64='3'/>
<enum name='AVAudioPCMFormatInt32' value64='4'/>
<enum name='AVAudioPlayerNodeBufferInterrupts' value64='2'/>
<enum name='AVAudioPlayerNodeBufferInterruptsAtLoop' value64='4'/>
<enum name='AVAudioPlayerNodeBufferLoops' value64='1'/>
<enum name='AVAudioQualityHigh' value64='96'/>
<enum name='AVAudioQualityLow' value64='32'/>
<enum name='AVAudioQualityMax' value64='127'/>
<enum name='AVAudioQualityMedium' value64='64'/>
<enum name='AVAudioQualityMin' value64='0'/>
<enum name='AVAudioUnitDistortionPresetDrumsBitBrush' value64='0'/>
<enum name='AVAudioUnitDistortionPresetDrumsBufferBeats' value64='1'/>
<enum name='AVAudioUnitDistortionPresetDrumsLoFi' value64='2'/>
<enum name='AVAudioUnitDistortionPresetMultiBrokenSpeaker' value64='3'/>
<enum name='AVAudioUnitDistortionPresetMultiCellphoneConcert' value64='4'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated1' value64='5'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated2' value64='6'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated3' value64='7'/>
<enum name='AVAudioUnitDistortionPresetMultiDecimated4' value64='8'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedCubed' value64='10'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedFunk' value64='9'/>
<enum name='AVAudioUnitDistortionPresetMultiDistortedSquared' value64='11'/>
<enum name='AVAudioUnitDistortionPresetMultiEcho1' value64='12'/>
<enum name='AVAudioUnitDistortionPresetMultiEcho2' value64='13'/>
<enum name='AVAudioUnitDistortionPresetMultiEchoTight1' value64='14'/>
<enum name='AVAudioUnitDistortionPresetMultiEchoTight2' value64='15'/>
<enum name='AVAudioUnitDistortionPresetMultiEverythingIsBroken' value64='16'/>
<enum name='AVAudioUnitDistortionPresetSpeechAlienChatter' value64='17'/>
<enum name='AVAudioUnitDistortionPresetSpeechCosmicInterference' value64='18'/>
<enum name='AVAudioUnitDistortionPresetSpeechGoldenPi' value64='19'/>
<enum name='AVAudioUnitDistortionPresetSpeechRadioTower' value64='20'/>
<enum name='AVAudioUnitDistortionPresetSpeechWaves' value64='21'/>
<enum name='AVAudioUnitEQFilterTypeBandPass' value64='5'/>
<enum name='AVAudioUnitEQFilterTypeBandStop' value64='6'/>
<enum name='AVAudioUnitEQFilterTypeHighPass' value64='2'/>
<enum name='AVAudioUnitEQFilterTypeHighShelf' value64='8'/>
<enum name='AVAudioUnitEQFilterTypeLowPass' value64='1'/>
<enum name='AVAudioUnitEQFilterTypeLowShelf' value64='7'/>
<enum name='AVAudioUnitEQFilterTypeParametric' value64='0'/>
<enum name='AVAudioUnitEQFilterTypeResonantHighPass' value64='4'/>
<enum name='AVAudioUnitEQFilterTypeResonantHighShelf' value64='10'/>
<enum name='AVAudioUnitEQFilterTypeResonantLowPass' value64='3'/>
<enum name='AVAudioUnitEQFilterTypeResonantLowShelf' value64='9'/>
<enum name='AVAudioUnitReverbPresetCathedral' value64='8'/>
<enum name='AVAudioUnitReverbPresetLargeChamber' value64='7'/>
<enum name='AVAudioUnitReverbPresetLargeHall' value64='4'/>
<enum name='AVAudioUnitReverbPresetLargeHall2' value64='12'/>
<enum name='AVAudioUnitReverbPresetLargeRoom' value64='2'/>
<enum name='AVAudioUnitReverbPresetLargeRoom2' value64='9'/>
<enum name='AVAudioUnitReverbPresetMediumChamber' value64='6'/>
<enum name='AVAudioUnitReverbPresetMediumHall' value64='3'/>
<enum name='AVAudioUnitReverbPresetMediumHall2' value64='10'/>
<enum name='AVAudioUnitReverbPresetMediumHall3' value64='11'/>
<enum name='AVAudioUnitReverbPresetMediumRoom' value64='1'/>
<enum name='AVAudioUnitReverbPresetPlate' value64='5'/>
<enum name='AVAudioUnitReverbPresetSmallRoom' value64='0'/>
<enum name='AVCaptureDevicePositionBack' value64='1'/>
<enum name='AVCaptureDevicePositionFront' value64='2'/>
<enum name='AVCaptureDevicePositionUnspecified' value64='0'/>
<enum name='AVCaptureDeviceTransportControlsNotPlayingMode' value64='0'/>
<enum name='AVCaptureDeviceTransportControlsPlayingMode' value64='1'/>
<enum name='AVCaptureExposureModeAutoExpose' value64='1'/>
<enum name='AVCaptureExposureModeContinuousAutoExposure' value64='2'/>
<enum name='AVCaptureExposureModeCustom' value64='3'/>
<enum name='AVCaptureExposureModeLocked' value64='0'/>
<enum name='AVCaptureFlashModeAuto' value64='2'/>
<enum name='AVCaptureFlashModeOff' value64='0'/>
<enum name='AVCaptureFlashModeOn' value64='1'/>
<enum name='AVCaptureFocusModeAutoFocus' value64='1'/>
<enum name='AVCaptureFocusModeContinuousAutoFocus' value64='2'/>
<enum name='AVCaptureFocusModeLocked' value64='0'/>
<enum name='AVCaptureTorchModeAuto' value64='2'/>
<enum name='AVCaptureTorchModeOff' value64='0'/>
<enum name='AVCaptureTorchModeOn' value64='1'/>
<enum name='AVCaptureVideoOrientationLandscapeLeft' value64='4'/>
<enum name='AVCaptureVideoOrientationLandscapeRight' value64='3'/>
<enum name='AVCaptureVideoOrientationPortrait' value64='1'/>
<enum name='AVCaptureVideoOrientationPortraitUpsideDown' value64='2'/>
<enum name='AVCaptureWhiteBalanceModeAutoWhiteBalance' value64='1'/>
<enum name='AVCaptureWhiteBalanceModeContinuousAutoWhiteBalance' value64='2'/>
<enum name='AVCaptureWhiteBalanceModeLocked' value64='0'/>
<enum name='AVContentAuthorizationBusy' value64='4'/>
<enum name='AVContentAuthorizationCancelled' value64='2'/>
<enum name='AVContentAuthorizationCompleted' value64='1'/>
<enum name='AVContentAuthorizationNotAvailable' value64='5'/>
<enum name='AVContentAuthorizationNotPossible' value64='6'/>
<enum name='AVContentAuthorizationTimedOut' value64='3'/>
<enum name='AVContentAuthorizationUnknown' value64='0'/>
<enum name='AVErrorAirPlayControllerRequiresInternet' value64='-11856'/>
<enum name='AVErrorAirPlayReceiverRequiresInternet' value64='-11857'/>
<enum name='AVErrorApplicationIsNotAuthorized' value64='-11836'/>
<enum name='AVErrorApplicationIsNotAuthorizedToUseDevice' value64='-11852'/>
<enum name='AVErrorCompositionTrackSegmentsNotContiguous' value64='-11824'/>
<enum name='AVErrorContentIsNotAuthorized' value64='-11835'/>
<enum name='AVErrorContentIsProtected' value64='-11831'/>
<enum name='AVErrorDecodeFailed' value64='-11821'/>
<enum name='AVErrorDecoderNotFound' value64='-11833'/>
<enum name='AVErrorDecoderTemporarilyUnavailable' value64='-11839'/>
<enum name='AVErrorDeviceAlreadyUsedByAnotherSession' value64='-11804'/>
<enum name='AVErrorDeviceInUseByAnotherApplication' value64='-11815'/>
<enum name='AVErrorDeviceLockedForConfigurationByAnotherProcess' value64='-11817'/>
<enum name='AVErrorDeviceNotConnected' value64='-11814'/>
<enum name='AVErrorDeviceWasDisconnected' value64='-11808'/>
<enum name='AVErrorDiskFull' value64='-11807'/>
<enum name='AVErrorDisplayWasDisabled' value64='-11845'/>
<enum name='AVErrorEncoderNotFound' value64='-11834'/>
<enum name='AVErrorEncoderTemporarilyUnavailable' value64='-11840'/>
<enum name='AVErrorExportFailed' value64='-11820'/>
<enum name='AVErrorFailedToLoadMediaData' value64='-11849'/>
<enum name='AVErrorFailedToParse' value64='-11853'/>
<enum name='AVErrorFileAlreadyExists' value64='-11823'/>
<enum name='AVErrorFileFailedToParse' value64='-11829'/>
<enum name='AVErrorFileFormatNotRecognized' value64='-11828'/>
<enum name='AVErrorFileTypeDoesNotSupportSampleReferences' value64='-11854'/>
<enum name='AVErrorIncompatibleAsset' value64='-11848'/>
<enum name='AVErrorInvalidCompositionTrackSegmentDuration' value64='-11825'/>
<enum name='AVErrorInvalidCompositionTrackSegmentSourceDuration' value64='-11827'/>
<enum name='AVErrorInvalidCompositionTrackSegmentSourceStartTime' value64='-11826'/>
<enum name='AVErrorInvalidOutputURLPathExtension' value64='-11843'/>
<enum name='AVErrorInvalidSourceMedia' value64='-11822'/>
<enum name='AVErrorInvalidVideoComposition' value64='-11841'/>
<enum name='AVErrorMaximumDurationReached' value64='-11810'/>
<enum name='AVErrorMaximumFileSizeReached' value64='-11811'/>
<enum name='AVErrorMaximumNumberOfSamplesForFileFormatReached' value64='-11813'/>
<enum name='AVErrorMaximumStillImageCaptureRequestsExceeded' value64='-11830'/>
<enum name='AVErrorMediaChanged' value64='-11809'/>
<enum name='AVErrorMediaDiscontinuity' value64='-11812'/>
<enum name='AVErrorNoDataCaptured' value64='-11805'/>
<enum name='AVErrorNoImageAtTime' value64='-11832'/>
<enum name='AVErrorOperationNotSupportedForAsset' value64='-11838'/>
<enum name='AVErrorOutOfMemory' value64='-11801'/>
<enum name='AVErrorReferenceForbiddenByReferencePolicy' value64='-11842'/>
<enum name='AVErrorScreenCaptureFailed' value64='-11844'/>
<enum name='AVErrorServerIncorrectlyConfigured' value64='-11850'/>
<enum name='AVErrorSessionConfigurationChanged' value64='-11806'/>
<enum name='AVErrorSessionNotRunning' value64='-11803'/>
<enum name='AVErrorTorchLevelUnavailable' value64='-11846'/>
<enum name='AVErrorUndecodableMediaData' value64='-11855'/>
<enum name='AVErrorUnknown' value64='-11800'/>
<enum name='AVErrorVideoCompositorFailed' value64='-11858'/>
<enum name='AVKeyValueStatusCancelled' value64='4'/>
<enum name='AVKeyValueStatusFailed' value64='3'/>
<enum name='AVKeyValueStatusLoaded' value64='2'/>
<enum name='AVKeyValueStatusLoading' value64='1'/>
<enum name='AVKeyValueStatusUnknown' value64='0'/>
<enum name='AVMovieWritingAddMovieHeaderToDestination' value64='0'/>
<enum name='AVMovieWritingTruncateDestinationToMovieHeaderOnly' value64='1'/>
<enum name='AVMusicSequenceLoadSMF_ChannelsToTracks' value64='1'/>
<enum name='AVMusicSequenceLoadSMF_PreserveTracks' value64='0'/>
<enum name='AVMusicTrackLoopCountForever' value64='-1'/>
<enum name='AVPlayerActionAtItemEndAdvance' value64='0'/>
<enum name='AVPlayerActionAtItemEndNone' value64='2'/>
<enum name='AVPlayerActionAtItemEndPause' value64='1'/>
<enum name='AVPlayerItemStatusFailed' value64='2'/>
<enum name='AVPlayerItemStatusReadyToPlay' value64='1'/>
<enum name='AVPlayerItemStatusUnknown' value64='0'/>
<enum name='AVPlayerStatusFailed' value64='2'/>
<enum name='AVPlayerStatusReadyToPlay' value64='1'/>
<enum name='AVPlayerStatusUnknown' value64='0'/>
<enum name='AVQueuedSampleBufferRenderingStatusFailed' value64='2'/>
<enum name='AVQueuedSampleBufferRenderingStatusRendering' value64='1'/>
<enum name='AVQueuedSampleBufferRenderingStatusUnknown' value64='0'/>
<enum name='AVSampleBufferRequestDirectionForward' value64='1'/>
<enum name='AVSampleBufferRequestDirectionNone' value64='0'/>
<enum name='AVSampleBufferRequestDirectionReverse' value64='-1'/>
<enum name='AVSampleBufferRequestModeImmediate' value64='0'/>
<enum name='AVSampleBufferRequestModeScheduled' value64='1'/>
<enum name='AVVideoFieldModeBoth' value64='0'/>
<enum name='AVVideoFieldModeBottomOnly' value64='2'/>
<enum name='AVVideoFieldModeDeinterlace' value64='3'/>
<enum name='AVVideoFieldModeTopOnly' value64='1'/>
<function inline='true' name='AVAudioMake3DAngularOrientation'>
<arg declared_type64='float' name='yaw' type64='f'/>
<arg declared_type64='float' name='pitch' type64='f'/>
<arg declared_type64='float' name='roll' type64='f'/>
<retval declared_type64='AVAudio3DAngularOrientation' type64='{AVAudio3DAngularOrientation=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DPoint'>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='float' name='z' type64='f'/>
<retval declared_type64='AVAudio3DPoint' type64='{AVAudio3DPoint=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DVector'>
<arg declared_type64='float' name='x' type64='f'/>
<arg declared_type64='float' name='y' type64='f'/>
<arg declared_type64='float' name='z' type64='f'/>
<retval declared_type64='AVAudio3DVector' type64='{AVAudio3DPoint=fff}'/>
</function>
<function inline='true' name='AVAudioMake3DVectorOrientation'>
<arg declared_type64='AVAudio3DVector' name='forward' type64='{AVAudio3DPoint=fff}'/>
<arg declared_type64='AVAudio3DVector' name='up' type64='{AVAudio3DPoint=fff}'/>
<retval declared_type64='AVAudio3DVectorOrientation' type64='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
</function>
<function inline='true' name='AVMakeBeatRange'>
<arg declared_type64='AVMusicTimeStamp' name='startBeat' type64='d'/>
<arg declared_type64='AVMusicTimeStamp' name='lengthInBeats' type64='d'/>
<retval declared_type64='AVBeatRange' type64='{_AVBeatRange=dd}'/>
</function>
<function name='AVMakeRectWithAspectRatioInsideRect'>
<arg declared_type64='CGSize' name='aspectRatio' type64='{CGSize=dd}'/>
<arg declared_type64='CGRect' name='boundingRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<class name='AVAsset'>
<method class_method='true' selector='assetWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='availableChapterLocales'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableMediaCharacteristicsWithMediaSelectionOptions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='canContainFragments'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelLoading'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='chapterMetadataGroupsBestMatchingPreferredLanguages:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='preferredLanguages' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:'>
<arg declared_type64='NSLocale * _Nonnull' index='0' name='locale' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='commonKeys' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='commonMetadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='containsFragments'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='creationDate'>
<retval declared_type64='AVMetadataItem * _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='hasProtectedContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isCompatibleWithAirPlayVideo'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isComposable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExportable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isReadable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lyrics'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='mediaSelectionGroupForMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='AVMediaSelectionGroup * _Nullable' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='format' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='preferredMediaSelection'>
<retval declared_type64='AVMediaSelection * _Nonnull' type64='@'/>
</method>
<method selector='preferredRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='preferredTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='providesPreciseDurationAndTiming'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='referenceRestrictions'>
<retval declared_type64='AVAssetReferenceRestrictions' type64='Q'/>
</method>
<method selector='trackGroups'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVAssetTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='unusedTrackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVAssetExportSession'>
<method class_method='true' selector='allExportPresets'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nonnull' type64='@'/>
</method>
<method selector='audioMix'>
<retval declared_type64='AVAudioMix * _Nullable' type64='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='canPerformMultiplePassesOverSourceMediaData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelExport'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='presetName' type64='@'/>
<arg declared_type64='AVAsset * _Nonnull' index='1' name='asset' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='outputFileType' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='3' name='handler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='determineCompatibleFileTypesWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='0' name='handler' type64='@?'>
<arg declared_type64='NSArray * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='directoryForTemporaryFiles'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='estimatedOutputFileLength'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='exportAsynchronouslyWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='exportPresetsCompatibleWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='exportSessionWithAsset:presetName:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='presetName' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithAsset:presetName:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='presetName' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='metadataItemFilter'>
<retval declared_type64='AVMetadataItemFilter * _Nullable' type64='@'/>
</method>
<method selector='outputFileType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='outputURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='presetName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='progress'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type64='AVAudioMix * _Nullable' index='0' name='audioMix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanPerformMultiplePassesOverSourceMediaData:'>
<arg declared_type64='BOOL' index='0' name='canPerformMultiplePassesOverSourceMediaData' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDirectoryForTemporaryFiles:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='directoryForTemporaryFiles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadataItemFilter:'>
<arg declared_type64='AVMetadataItemFilter * _Nullable' index='0' name='metadataItemFilter' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputFileType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='outputFileType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='outputURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldOptimizeForNetworkUse:'>
<arg declared_type64='BOOL' index='0' name='shouldOptimizeForNetworkUse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type64='AVVideoComposition * _Nullable' index='0' name='videoComposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldOptimizeForNetworkUse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='status'>
<retval declared_type64='AVAssetExportSessionStatus' type64='q'/>
</method>
<method selector='supportedFileTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAssetImageGenerator'>
<method selector='apertureMode'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='appliesPreferredTrackTransform'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetImageGeneratorWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='cancelAllCGImageGeneration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='copyCGImageAtTime:actualTime:error:'>
<arg declared_type64='CMTime' index='0' name='requestedTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime * _Nullable' index='1' name='actualTime' type64='^{_CMTime=qiIq}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='generateCGImagesAsynchronouslyForTimes:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='requestedTimes' type64='@'/>
<arg declared_type64='AVAssetImageGeneratorCompletionHandler _Nonnull' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='AVAssetImageGeneratorResult' type64='q'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='requestedTimeToleranceAfter'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='requestedTimeToleranceBefore'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='setApertureMode:'>
<arg declared_type64='NSString * _Nullable' index='0' name='apertureMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppliesPreferredTrackTransform:'>
<arg declared_type64='BOOL' index='0' name='appliesPreferredTrackTransform' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumSize:'>
<arg declared_type64='CGSize' index='0' name='maximumSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRequestedTimeToleranceAfter:'>
<arg declared_type64='CMTime' index='0' name='requestedTimeToleranceAfter' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRequestedTimeToleranceBefore:'>
<arg declared_type64='CMTime' index='0' name='requestedTimeToleranceBefore' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type64='AVVideoComposition * _Nullable' index='0' name='videoComposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAssetReader'>
<method selector='addOutput:'>
<arg declared_type64='AVAssetReaderOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetReaderWithAsset:error:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='canAddOutput:'>
<arg declared_type64='AVAssetReaderOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelReading'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='initWithAsset:error:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='outputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startReading'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='status'>
<retval declared_type64='AVAssetReaderStatus' type64='q'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVAssetReaderAudioMixOutput'>
<method class_method='true' selector='assetReaderAudioMixOutputWithAudioTracks:audioSettings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='audioTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='audioSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='audioMix'>
<retval declared_type64='AVAudioMix * _Nullable' type64='@'/>
</method>
<method selector='audioSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='audioTracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='initWithAudioTracks:audioSettings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='audioTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='audioSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type64='AVAudioMix * _Nullable' index='0' name='audioMix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAssetReaderOutput'>
<method selector='alwaysCopiesSampleData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='copyNextSampleBuffer'>
<retval declared_type64='CMSampleBufferRef _Nullable' type64='^{opaqueCMSampleBuffer=}'/>
</method>
<method selector='markConfigurationAsFinal'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='mediaType'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='resetForReadingTimeRanges:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='timeRanges' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlwaysCopiesSampleData:'>
<arg declared_type64='BOOL' index='0' name='alwaysCopiesSampleData' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSupportsRandomAccess:'>
<arg declared_type64='BOOL' index='0' name='supportsRandomAccess' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsRandomAccess'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVAssetReaderOutputMetadataAdaptor'>
<method class_method='true' selector='assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:'>
<arg declared_type64='AVAssetReaderTrackOutput * _Nonnull' index='0' name='trackOutput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='assetReaderTrackOutput'>
<retval declared_type64='AVAssetReaderTrackOutput * _Nonnull' type64='@'/>
</method>
<method selector='initWithAssetReaderTrackOutput:'>
<arg declared_type64='AVAssetReaderTrackOutput * _Nonnull' index='0' name='trackOutput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='nextTimedMetadataGroup'>
<retval declared_type64='AVTimedMetadataGroup * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAssetReaderSampleReferenceOutput'>
<method class_method='true' selector='assetReaderSampleReferenceOutputWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='track'>
<retval declared_type64='AVAssetTrack * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetReaderTrackOutput'>
<method class_method='true' selector='assetReaderTrackOutputWithTrack:outputSettings:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='initWithTrack:outputSettings:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='outputSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='track'>
<retval declared_type64='AVAssetTrack * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetReaderVideoCompositionOutput'>
<method class_method='true' selector='assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='videoTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='videoSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='initWithVideoTracks:videoSettings:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='videoTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='videoSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type64='AVVideoComposition * _Nullable' index='0' name='videoComposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nullable' type64='@'/>
</method>
<method selector='videoSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='videoTracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetResourceLoader'>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='preloadsEligibleContentKeys'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreloadsEligibleContentKeys:'>
<arg declared_type64='BOOL' index='0' name='preloadsEligibleContentKeys' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingContentInformationRequest'>
<method selector='contentLength'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='contentType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='isByteRangeAccessSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='renewalDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='setByteRangeAccessSupported:'>
<arg declared_type64='BOOL' index='0' name='byteRangeAccessSupported' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentLength:'>
<arg declared_type64='long long' index='0' name='contentLength' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setContentType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='contentType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenewalDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='renewalDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingDataRequest'>
<method selector='currentOffset'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='requestedLength'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='requestedOffset'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='requestsAllDataToEndOfResource'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='respondWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAssetResourceLoadingRequest'>
<method selector='contentInformationRequest'>
<retval declared_type64='AVAssetResourceLoadingContentInformationRequest * _Nullable' type64='@'/>
</method>
<method selector='dataRequest'>
<retval declared_type64='AVAssetResourceLoadingDataRequest * _Nullable' type64='@'/>
</method>
<method selector='finishLoading'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishLoadingWithError:'>
<arg declared_type64='NSError * _Nullable' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isCancelled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFinished'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='redirect'>
<retval declared_type64='NSURLRequest * _Nullable' type64='@'/>
</method>
<method selector='request'>
<retval declared_type64='NSURLRequest * _Nonnull' type64='@'/>
</method>
<method selector='response'>
<retval declared_type64='NSURLResponse * _Nullable' type64='@'/>
</method>
<method selector='setRedirect:'>
<arg declared_type64='NSURLRequest * _Nullable' index='0' name='redirect' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setResponse:'>
<arg declared_type64='NSURLResponse * _Nullable' index='0' name='response' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='streamingContentKeyRequestDataForApp:contentIdentifier:options:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='appIdentifier' type64='@'/>
<arg declared_type64='NSData * _Nonnull' index='1' name='contentIdentifier' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAssetTrack'>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nullable' type64='@'/>
</method>
<method selector='associatedTracksOfType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='trackAssociationType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='availableTrackAssociationTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='canProvideSampleCursors'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commonMetadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='estimatedDataRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='formatDescriptions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='hasMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSelfContained'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageCode'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='makeSampleCursorAtFirstSampleInDecodeOrder'>
<retval declared_type64='AVSampleCursor * _Nullable' type64='@'/>
</method>
<method selector='makeSampleCursorAtLastSampleInDecodeOrder'>
<retval declared_type64='AVSampleCursor * _Nullable' type64='@'/>
</method>
<method selector='makeSampleCursorWithPresentationTimeStamp:'>
<arg declared_type64='CMTime' index='0' name='presentationTimeStamp' type64='{_CMTime=qiIq}'/>
<retval declared_type64='AVSampleCursor * _Nullable' type64='@'/>
</method>
<method selector='mediaType'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='format' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='minFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='naturalTimeScale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='nominalFrameRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='preferredTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='requiresFrameReordering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='samplePresentationTimeForTrackTime:'>
<arg declared_type64='CMTime' index='0' name='trackTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='segmentForTrackTime:'>
<arg declared_type64='CMTime' index='0' name='trackTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='AVAssetTrackSegment * _Nullable' type64='@'/>
</method>
<method selector='segments'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='totalSampleDataLength'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVAssetTrackGroup'>
<method selector='trackIDs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetTrackSegment'>
<method selector='isEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='timeMapping'>
<retval declared_type64='CMTimeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
</class>
<class name='AVAssetWriter'>
<method selector='addInput:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addInputGroup:'>
<arg declared_type64='AVAssetWriterInputGroup * _Nonnull' index='0' name='inputGroup' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='assetWriterWithURL:fileType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='outputURL' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='outputFileType' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='availableMediaTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='canAddInput:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canAddInputGroup:'>
<arg declared_type64='AVAssetWriterInputGroup * _Nonnull' index='0' name='inputGroup' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canApplyOutputSettings:forMediaType:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='outputSettings' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='mediaType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelWriting'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='directoryForTemporaryFiles'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='endSessionAtSourceTime:'>
<arg declared_type64='CMTime' index='0' name='endTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='finishWriting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='finishWritingWithCompletionHandler:'>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='initWithURL:fileType:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='outputURL' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='outputFileType' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='inputGroups'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='inputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='movieFragmentInterval'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='movieTimeScale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='outputFileType'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='outputURL'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
<method selector='overallDurationHint'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='setDirectoryForTemporaryFiles:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='directoryForTemporaryFiles' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovieFragmentInterval:'>
<arg declared_type64='CMTime' index='0' name='movieFragmentInterval' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovieTimeScale:'>
<arg declared_type64='CMTimeScale' index='0' name='movieTimeScale' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOverallDurationHint:'>
<arg declared_type64='CMTime' index='0' name='overallDurationHint' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setShouldOptimizeForNetworkUse:'>
<arg declared_type64='BOOL' index='0' name='shouldOptimizeForNetworkUse' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='shouldOptimizeForNetworkUse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='startSessionAtSourceTime:'>
<arg declared_type64='CMTime' index='0' name='startTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startWriting'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='status'>
<retval declared_type64='AVAssetWriterStatus' type64='q'/>
</method>
</class>
<class name='AVAssetWriterInput'>
<method selector='addTrackAssociationWithTrackOfInput:type:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='trackAssociationType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='appendSampleBuffer:'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='assetWriterInputWithMediaType:outputSettings:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetWriterInputWithMediaType:outputSettings:sourceFormatHint:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<arg declared_type64='CMFormatDescriptionRef _Nullable' index='2' name='sourceFormatHint' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='canAddTrackAssociationWithTrackOfInput:type:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='trackAssociationType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPerformMultiplePasses'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='currentPassDescription'>
<retval declared_type64='AVAssetWriterInputPassDescription * _Nullable' type64='@'/>
</method>
<method selector='expectsMediaDataInRealTime'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='initWithMediaType:outputSettings:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithMediaType:outputSettings:sourceFormatHint:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='outputSettings' type64='@'/>
<arg declared_type64='CMFormatDescriptionRef _Nullable' index='2' name='sourceFormatHint' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isReadyForMoreMediaData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageCode'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='markAsFinished'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='markCurrentPassAsFinished'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='marksOutputTrackAsEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mediaTimeScale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='mediaType'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='outputSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='performsMultiPassEncodingIfSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='preferredMediaChunkAlignment'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='preferredMediaChunkDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='requestMediaDataWhenReadyOnQueue:usingBlock:'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='respondToEachPassDescriptionOnQueue:usingBlock:'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<arg declared_type64='dispatch_block_t _Nonnull' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sampleReferenceBaseURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='setExpectsMediaDataInRealTime:'>
<arg declared_type64='BOOL' index='0' name='expectsMediaDataInRealTime' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type64='NSString * _Nullable' index='0' name='extendedLanguageTag' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguageCode:'>
<arg declared_type64='NSString * _Nullable' index='0' name='languageCode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMarksOutputTrackAsEnabled:'>
<arg declared_type64='BOOL' index='0' name='marksOutputTrackAsEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMediaTimeScale:'>
<arg declared_type64='CMTimeScale' index='0' name='mediaTimeScale' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNaturalSize:'>
<arg declared_type64='CGSize' index='0' name='naturalSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPerformsMultiPassEncodingIfSupported:'>
<arg declared_type64='BOOL' index='0' name='performsMultiPassEncodingIfSupported' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMediaChunkAlignment:'>
<arg declared_type64='NSInteger' index='0' name='preferredMediaChunkAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMediaChunkDuration:'>
<arg declared_type64='CMTime' index='0' name='preferredMediaChunkDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredVolume:'>
<arg declared_type64='float' index='0' name='preferredVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleReferenceBaseURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='sampleReferenceBaseURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourceFormatHint'>
<retval declared_type64='CMFormatDescriptionRef _Nullable' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='transform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
</class>
<class name='AVAssetWriterInputGroup'>
<method class_method='true' selector='assetWriterInputGroupWithInputs:defaultInput:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='inputs' type64='@'/>
<arg declared_type64='AVAssetWriterInput * _Nullable' index='1' name='defaultInput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='defaultInput'>
<retval declared_type64='AVAssetWriterInput * _Nullable' type64='@'/>
</method>
<method selector='initWithInputs:defaultInput:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='inputs' type64='@'/>
<arg declared_type64='AVAssetWriterInput * _Nullable' index='1' name='defaultInput' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetWriterInputMetadataAdaptor'>
<method selector='appendTimedMetadataGroup:'>
<arg declared_type64='AVTimedMetadataGroup * _Nonnull' index='0' name='timedMetadataGroup' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='assetWriterInput'>
<retval declared_type64='AVAssetWriterInput * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetWriterInputMetadataAdaptorWithAssetWriterInput:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAssetWriterInput:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetWriterInputPassDescription'>
<method selector='sourceTimeRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAssetWriterInputPixelBufferAdaptor'>
<method selector='appendPixelBuffer:withPresentationTime:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='CMTime' index='1' name='presentationTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='assetWriterInput'>
<retval declared_type64='AVAssetWriterInput * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='sourcePixelBufferAttributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAssetWriterInput:sourcePixelBufferAttributes:'>
<arg declared_type64='AVAssetWriterInput * _Nonnull' index='0' name='input' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='sourcePixelBufferAttributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='pixelBufferPool'>
<retval declared_type64='CVPixelBufferPoolRef _Nullable' type64='^{__CVPixelBufferPool=}'/>
</method>
<method selector='sourcePixelBufferAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAsynchronousCIImageFilteringRequest'>
<method selector='compositionTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='finishWithError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishWithImage:context:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='filteredImage' type64='@'/>
<arg declared_type64='CIContext * _Nullable' index='1' name='context' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='sourceImage'>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAsynchronousVideoCompositionRequest'>
<method selector='compositionTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='finishCancelledRequest'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishWithComposedVideoFrame:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='composedVideoFrame' type64='^{__CVBuffer=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='finishWithError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderContext'>
<retval declared_type64='AVVideoCompositionRenderContext * _Nonnull' type64='@'/>
</method>
<method selector='sourceFrameByTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='sourceTrackIDs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='videoCompositionInstruction'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioBuffer'>
<method selector='audioBufferList'>
<retval const='true' declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</method>
<method selector='format'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='mutableAudioBufferList'>
<retval declared_type64='AudioBufferList * _Nonnull' type64='^{AudioBufferList=I[1{AudioBuffer=II^v}]}'/>
</method>
</class>
<class name='AVAudioChannelLayout'>
<method selector='channelCount'>
<retval declared_type64='AVAudioChannelCount' type64='I'/>
</method>
<method selector='initWithLayout:'>
<arg const='true' declared_type64='AudioChannelLayout * _Nonnull' index='0' name='layout' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithLayoutTag:'>
<arg declared_type64='AudioChannelLayoutTag' index='0' name='layoutTag' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layout'>
<retval const='true' declared_type64='AudioChannelLayout * _Nonnull' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
</method>
<method selector='layoutTag'>
<retval declared_type64='AudioChannelLayoutTag' type64='I'/>
</method>
<method class_method='true' selector='layoutWithLayout:'>
<arg const='true' declared_type64='AudioChannelLayout * _Nonnull' index='0' name='layout' type64='^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='layoutWithLayoutTag:'>
<arg declared_type64='AudioChannelLayoutTag' index='0' name='layoutTag' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioCompressedBuffer'>
<method selector='data'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='initWithFormat:packetCapacity:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='AVAudioPacketCount' index='1' name='packetCapacity' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithFormat:packetCapacity:maximumPacketSize:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='AVAudioPacketCount' index='1' name='packetCapacity' type64='I'/>
<arg declared_type64='NSInteger' index='2' name='maximumPacketSize' type64='q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='maximumPacketSize'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='packetCapacity'>
<retval declared_type64='AVAudioPacketCount' type64='I'/>
</method>
<method selector='packetCount'>
<retval declared_type64='AVAudioPacketCount' type64='I'/>
</method>
<method selector='packetDescriptions'>
<retval declared_type64='AudioStreamPacketDescription * _Nullable' type64='^{AudioStreamPacketDescription=qII}'/>
</method>
<method selector='setPacketCount:'>
<arg declared_type64='AVAudioPacketCount' index='0' name='packetCount' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioConnectionPoint'>
<method selector='bus'>
<retval declared_type64='AVAudioNodeBus' type64='Q'/>
</method>
<method selector='initWithNode:bus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='node'>
<retval declared_type64='AVAudioNode * _Nullable' type64='@'/>
</method>
</class>
<class name='AVAudioConverter'>
<method selector='applicableEncodeBitRates'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='applicableEncodeSampleRates'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableEncodeBitRates'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableEncodeChannelLayoutTags'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='availableEncodeSampleRates'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='bitRate'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='bitRateStrategy'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='channelMap'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='convertToBuffer:error:withInputFromBlock:'>
<arg declared_type64='AVAudioBuffer * _Nonnull' index='0' name='outputBuffer' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<arg declared_type64='AVAudioConverterInputBlock _Nonnull' function_pointer='true' index='2' name='inputBlock' type64='@?'>
<arg declared_type64='AVAudioPacketCount' type64='I'/>
<arg declared_type64='AVAudioConverterInputStatus * _Nonnull' type64='^q'/>
<retval declared_type64='AVAudioBuffer * _Nullable' type64='@'/>
</arg>
<retval declared_type64='AVAudioConverterOutputStatus' type64='q'/>
</method>
<method selector='convertToBuffer:fromBuffer:error:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='outputBuffer' type64='@'/>
<arg const='true' declared_type64='AVAudioPCMBuffer * _Nonnull' index='1' name='inputBuffer' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='dither'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='downmix'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initFromFormat:toFormat:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='fromFormat' type64='@'/>
<arg declared_type64='AVAudioFormat * _Nonnull' index='1' name='toFormat' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputFormat'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='magicCookie'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='maximumOutputPacketSize'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='outputFormat'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='primeInfo'>
<retval declared_type64='AVAudioConverterPrimeInfo' type64='{AVAudioConverterPrimeInfo=II}'/>
</method>
<method selector='primeMethod'>
<retval declared_type64='AVAudioConverterPrimeMethod' type64='q'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sampleRateConverterAlgorithm'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='sampleRateConverterQuality'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setBitRate:'>
<arg declared_type64='NSInteger' index='0' name='bitRate' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBitRateStrategy:'>
<arg declared_type64='NSString * _Nullable' index='0' name='bitRateStrategy' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setChannelMap:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='channelMap' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDither:'>
<arg declared_type64='BOOL' index='0' name='dither' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDownmix:'>
<arg declared_type64='BOOL' index='0' name='downmix' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMagicCookie:'>
<arg declared_type64='NSData * _Nullable' index='0' name='magicCookie' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrimeInfo:'>
<arg declared_type64='AVAudioConverterPrimeInfo' index='0' name='primeInfo' type64='{AVAudioConverterPrimeInfo=II}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPrimeMethod:'>
<arg declared_type64='AVAudioConverterPrimeMethod' index='0' name='primeMethod' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleRateConverterAlgorithm:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='sampleRateConverterAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleRateConverterQuality:'>
<arg declared_type64='NSInteger' index='0' name='sampleRateConverterQuality' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioEngine'>
<method selector='attachNode:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connect:to:format:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node1' type64='@'/>
<arg declared_type64='AVAudioNode * _Nonnull' index='1' name='node2' type64='@'/>
<arg declared_type64='AVAudioFormat * _Nullable' index='2' name='format' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connect:to:fromBus:toBus:format:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node1' type64='@'/>
<arg declared_type64='AVAudioNode * _Nonnull' index='1' name='node2' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='2' name='bus1' type64='Q'/>
<arg declared_type64='AVAudioNodeBus' index='3' name='bus2' type64='Q'/>
<arg declared_type64='AVAudioFormat * _Nullable' index='4' name='format' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='connect:toConnectionPoints:fromBus:format:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='sourceNode' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='destNodes' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='2' name='sourceBus' type64='Q'/>
<arg declared_type64='AVAudioFormat * _Nullable' index='3' name='format' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='detachNode:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectNodeInput:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectNodeInput:bus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectNodeOutput:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectNodeOutput:bus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputConnectionPointForNode:inputBus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='AVAudioConnectionPoint * _Nullable' type64='@'/>
</method>
<method selector='inputNode'>
<retval declared_type64='AVAudioInputNode * _Nullable' type64='@'/>
</method>
<method selector='isRunning'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mainMixerNode'>
<retval declared_type64='AVAudioMixerNode * _Nonnull' type64='@'/>
</method>
<method selector='musicSequence'>
<retval declared_type64='MusicSequence _Nullable' type64='^{OpaqueMusicSequence=}'/>
</method>
<method selector='outputConnectionPointsForNode:outputBus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='node' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outputNode'>
<retval declared_type64='AVAudioOutputNode * _Nonnull' type64='@'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepare'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMusicSequence:'>
<arg declared_type64='MusicSequence _Nullable' index='0' name='musicSequence' type64='^{OpaqueMusicSequence=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioEnvironmentDistanceAttenuationParameters'>
<method selector='distanceAttenuationModel'>
<retval declared_type64='AVAudioEnvironmentDistanceAttenuationModel' type64='q'/>
</method>
<method selector='maximumDistance'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='referenceDistance'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='rolloffFactor'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setDistanceAttenuationModel:'>
<arg declared_type64='AVAudioEnvironmentDistanceAttenuationModel' index='0' name='distanceAttenuationModel' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaximumDistance:'>
<arg declared_type64='float' index='0' name='maximumDistance' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReferenceDistance:'>
<arg declared_type64='float' index='0' name='referenceDistance' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRolloffFactor:'>
<arg declared_type64='float' index='0' name='rolloffFactor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioEnvironmentNode'>
<method selector='applicableRenderingAlgorithms'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='distanceAttenuationParameters'>
<retval declared_type64='AVAudioEnvironmentDistanceAttenuationParameters * _Nonnull' type64='@'/>
</method>
<method selector='listenerAngularOrientation'>
<retval declared_type64='AVAudio3DAngularOrientation' type64='{AVAudio3DAngularOrientation=fff}'/>
</method>
<method selector='listenerPosition'>
<retval declared_type64='AVAudio3DPoint' type64='{AVAudio3DPoint=fff}'/>
</method>
<method selector='listenerVectorOrientation'>
<retval declared_type64='AVAudio3DVectorOrientation' type64='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
</method>
<method selector='nextAvailableInputBus'>
<retval declared_type64='AVAudioNodeBus' type64='Q'/>
</method>
<method selector='outputVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='reverbParameters'>
<retval declared_type64='AVAudioEnvironmentReverbParameters * _Nonnull' type64='@'/>
</method>
<method selector='setListenerAngularOrientation:'>
<arg declared_type64='AVAudio3DAngularOrientation' index='0' name='listenerAngularOrientation' type64='{AVAudio3DAngularOrientation=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setListenerPosition:'>
<arg declared_type64='AVAudio3DPoint' index='0' name='listenerPosition' type64='{AVAudio3DPoint=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setListenerVectorOrientation:'>
<arg declared_type64='AVAudio3DVectorOrientation' index='0' name='listenerVectorOrientation' type64='{AVAudio3DVectorOrientation={AVAudio3DPoint=fff}{AVAudio3DPoint=fff}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputVolume:'>
<arg declared_type64='float' index='0' name='outputVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioEnvironmentReverbParameters'>
<method selector='enable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='filterParameters'>
<retval declared_type64='AVAudioUnitEQFilterParameters * _Nonnull' type64='@'/>
</method>
<method selector='level'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='loadFactoryReverbPreset:'>
<arg declared_type64='AVAudioUnitReverbPreset' index='0' name='preset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnable:'>
<arg declared_type64='BOOL' index='0' name='enable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLevel:'>
<arg declared_type64='float' index='0' name='level' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioFile'>
<method selector='fileFormat'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='framePosition'>
<retval declared_type64='AVAudioFramePosition' type64='q'/>
</method>
<method selector='initForReading:commonFormat:interleaved:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='AVAudioCommonFormat' index='1' name='format' type64='Q'/>
<arg declared_type64='BOOL' index='2' name='interleaved' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initForReading:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initForWriting:settings:commonFormat:interleaved:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='settings' type64='@'/>
<arg declared_type64='AVAudioCommonFormat' index='2' name='format' type64='Q'/>
<arg declared_type64='BOOL' index='3' name='interleaved' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initForWriting:settings:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='settings' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='length'>
<retval declared_type64='AVAudioFramePosition' type64='q'/>
</method>
<method selector='processingFormat'>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='readIntoBuffer:error:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='readIntoBuffer:frameCount:error:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='AVAudioFrameCount' index='1' name='frames' type64='I'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setFramePosition:'>
<arg declared_type64='AVAudioFramePosition' index='0' name='framePosition' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='url'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
<method selector='writeFromBuffer:error:'>
<arg const='true' declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVAudioFormat'>
<method selector='channelCount'>
<retval declared_type64='AVAudioChannelCount' type64='I'/>
</method>
<method selector='channelLayout'>
<retval const='true' declared_type64='AVAudioChannelLayout * _Nullable' type64='@'/>
</method>
<method selector='commonFormat'>
<retval declared_type64='AVAudioCommonFormat' type64='Q'/>
</method>
<method selector='formatDescription'>
<retval declared_type64='CMAudioFormatDescriptionRef _Nonnull' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='initStandardFormatWithSampleRate:channelLayout:'>
<arg declared_type64='double' index='0' name='sampleRate' type64='d'/>
<arg declared_type64='AVAudioChannelLayout * _Nonnull' index='1' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initStandardFormatWithSampleRate:channels:'>
<arg declared_type64='double' index='0' name='sampleRate' type64='d'/>
<arg declared_type64='AVAudioChannelCount' index='1' name='channels' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCMAudioFormatDescription:'>
<arg declared_type64='CMAudioFormatDescriptionRef _Nonnull' index='0' name='formatDescription' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCommonFormat:sampleRate:channels:interleaved:'>
<arg declared_type64='AVAudioCommonFormat' index='0' name='format' type64='Q'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<arg declared_type64='AVAudioChannelCount' index='2' name='channels' type64='I'/>
<arg declared_type64='BOOL' index='3' name='interleaved' type64='B'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCommonFormat:sampleRate:interleaved:channelLayout:'>
<arg declared_type64='AVAudioCommonFormat' index='0' name='format' type64='Q'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<arg declared_type64='BOOL' index='2' name='interleaved' type64='B'/>
<arg declared_type64='AVAudioChannelLayout * _Nonnull' index='3' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSettings:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='settings' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithStreamDescription:'>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' index='0' name='asbd' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithStreamDescription:channelLayout:'>
<arg const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' index='0' name='asbd' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
<arg declared_type64='AVAudioChannelLayout * _Nullable' index='1' name='layout' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEqual:'>
<arg declared_type64='id _Nonnull' index='0' name='object' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInterleaved'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isStandard'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sampleRate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='settings'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='streamDescription'>
<retval const='true' declared_type64='AudioStreamBasicDescription * _Nonnull' type64='^{AudioStreamBasicDescription=dIIIIIIII}'/>
</method>
</class>
<class name='AVAudioIONode'>
<method selector='audioUnit'>
<retval declared_type64='AudioUnit _Nullable' type64='^{ComponentInstanceRecord=[1q]}'/>
</method>
<method selector='presentationLatency'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
</class>
<class name='AVAudioMix'>
<method selector='inputParameters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioMixInputParameters'>
<method selector='audioTapProcessor'>
<retval declared_type64='MTAudioProcessingTapRef _Nullable' type64='^{opaqueMTAudioProcessingTap=}'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='getVolumeRampForTime:startVolume:endVolume:timeRange:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='float * _Nullable' index='1' name='startVolume' type64='^f'/>
<arg declared_type64='float * _Nullable' index='2' name='endVolume' type64='^f'/>
<arg declared_type64='CMTimeRange * _Nullable' index='3' name='timeRange' type64='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVAudioMixerNode'>
<method selector='nextAvailableInputBus'>
<retval declared_type64='AVAudioNodeBus' type64='Q'/>
</method>
<method selector='outputVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setOutputVolume:'>
<arg declared_type64='float' index='0' name='outputVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioMixingDestination'>
<method selector='connectionPoint'>
<retval declared_type64='AVAudioConnectionPoint * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioNode'>
<method selector='engine'>
<retval declared_type64='AVAudioEngine * _Nullable' type64='@'/>
</method>
<method selector='inputFormatForBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='installTapOnBus:bufferSize:format:block:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<arg declared_type64='AVAudioFrameCount' index='1' name='bufferSize' type64='I'/>
<arg declared_type64='AVAudioFormat * _Nullable' index='2' name='format' type64='@'/>
<arg declared_type64='AVAudioNodeTapBlock _Nonnull' function_pointer='true' index='3' name='tapBlock' type64='@?'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' type64='@'/>
<arg declared_type64='AVAudioTime * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='lastRenderTime'>
<retval declared_type64='AVAudioTime * _Nullable' type64='@'/>
</method>
<method selector='nameForInputBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='nameForOutputBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='numberOfInputs'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfOutputs'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='outputFormatForBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='AVAudioFormat * _Nonnull' type64='@'/>
</method>
<method selector='removeTapOnBus:'>
<arg declared_type64='AVAudioNodeBus' index='0' name='bus' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reset'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioPCMBuffer'>
<method selector='floatChannelData'>
<retval const='true' declared_type64='float * _Nonnull * _Nullable' type64='^^f'/>
</method>
<method selector='frameCapacity'>
<retval declared_type64='AVAudioFrameCount' type64='I'/>
</method>
<method selector='frameLength'>
<retval declared_type64='AVAudioFrameCount' type64='I'/>
</method>
<method selector='initWithPCMFormat:frameCapacity:'>
<arg declared_type64='AVAudioFormat * _Nonnull' index='0' name='format' type64='@'/>
<arg declared_type64='AVAudioFrameCount' index='1' name='frameCapacity' type64='I'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='int16ChannelData'>
<retval const='true' declared_type64='int16_t * _Nonnull * _Nullable' type64='^^s'/>
</method>
<method selector='int32ChannelData'>
<retval const='true' declared_type64='int32_t * _Nonnull * _Nullable' type64='^^i'/>
</method>
<method selector='setFrameLength:'>
<arg declared_type64='AVAudioFrameCount' index='0' name='frameLength' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stride'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='AVAudioPlayer'>
<method selector='averagePowerForChannel:'>
<arg declared_type64='NSUInteger' index='0' name='channelNumber' type64='Q'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='currentTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='data'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deviceCurrentTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='enableRate'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:fileTypeHint:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='utiString' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:fileTypeHint:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='utiString' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='numberOfChannels'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='pan'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg declared_type64='NSUInteger' index='0' name='channelNumber' type64='Q'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='play'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='playAtTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='time' type64='d'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setCurrentTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnableRate:'>
<arg declared_type64='BOOL' index='0' name='enableRate' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg declared_type64='BOOL' index='0' name='meteringEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg declared_type64='NSInteger' index='0' name='numberOfLoops' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPan:'>
<arg declared_type64='float' index='0' name='pan' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='settings'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='url'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioPlayerNode'>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='nodeTimeForPlayerTime:'>
<arg declared_type64='AVAudioTime * _Nonnull' index='0' name='playerTime' type64='@'/>
<retval declared_type64='AVAudioTime * _Nullable' type64='@'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='play'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playAtTime:'>
<arg declared_type64='AVAudioTime * _Nullable' index='0' name='when' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='playerTimeForNodeTime:'>
<arg declared_type64='AVAudioTime * _Nonnull' index='0' name='nodeTime' type64='@'/>
<retval declared_type64='AVAudioTime * _Nullable' type64='@'/>
</method>
<method selector='prepareWithFrameCount:'>
<arg declared_type64='AVAudioFrameCount' index='0' name='frameCount' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scheduleBuffer:atTime:options:completionHandler:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='AVAudioTime * _Nullable' index='1' name='when' type64='@'/>
<arg declared_type64='AVAudioPlayerNodeBufferOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scheduleBuffer:completionHandler:'>
<arg declared_type64='AVAudioPCMBuffer * _Nonnull' index='0' name='buffer' type64='@'/>
<arg declared_type64='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scheduleFile:atTime:completionHandler:'>
<arg declared_type64='AVAudioFile * _Nonnull' index='0' name='file' type64='@'/>
<arg declared_type64='AVAudioTime * _Nullable' index='1' name='when' type64='@'/>
<arg declared_type64='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scheduleSegment:startingFrame:frameCount:atTime:completionHandler:'>
<arg declared_type64='AVAudioFile * _Nonnull' index='0' name='file' type64='@'/>
<arg declared_type64='AVAudioFramePosition' index='1' name='startFrame' type64='q'/>
<arg declared_type64='AVAudioFrameCount' index='2' name='numberFrames' type64='I'/>
<arg declared_type64='AVAudioTime * _Nullable' index='3' name='when' type64='@'/>
<arg declared_type64='AVAudioNodeCompletionHandler _Nullable' function_pointer='true' index='4' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioRecorder'>
<method selector='averagePowerForChannel:'>
<arg declared_type64='NSUInteger' index='0' name='channelNumber' type64='Q'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='currentTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='deleteRecording'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithURL:settings:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='1' name='settings' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRecording'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg declared_type64='NSUInteger' index='0' name='channelNumber' type64='Q'/>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='prepareToRecord'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='record'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='recordForDuration:'>
<arg declared_type64='NSTimeInterval' index='0' name='duration' type64='d'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg declared_type64='BOOL' index='0' name='meteringEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='settings'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='url'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioSequencer'>
<method selector='beatsForHostTime:error:'>
<arg declared_type64='UInt64' index='0' name='inHostTime' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='AVMusicTimeStamp' type64='d'/>
</method>
<method selector='beatsForSeconds:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='AVMusicTimeStamp' type64='d'/>
</method>
<method selector='currentPositionInBeats'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='currentPositionInSeconds'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='dataWithSMPTEResolution:error:'>
<arg declared_type64='NSInteger' index='0' name='SMPTEResolution' type64='q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSData * _Nonnull' type64='@'/>
</method>
<method selector='hostTimeForBeats:error:'>
<arg declared_type64='AVMusicTimeStamp' index='0' name='inBeats' type64='d'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='UInt64' type64='Q'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAudioEngine:'>
<arg declared_type64='AVAudioEngine * _Nonnull' index='0' name='engine' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadFromData:options:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='AVMusicSequenceLoadOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadFromURL:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='AVMusicSequenceLoadOptions' index='1' name='options' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='secondsForBeats:'>
<arg declared_type64='AVMusicTimeStamp' index='0' name='beats' type64='d'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='setCurrentPositionInBeats:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentPositionInBeats' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCurrentPositionInSeconds:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentPositionInSeconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startAndReturnError:'>
<arg declared_type64='NSError * _Nullable * _Nullable' index='0' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='tempoTrack'>
<retval declared_type64='AVMusicTrack * _Nonnull' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='userInfo'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='writeToURL:SMPTEResolution:replaceExisting:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='fileURL' type64='@'/>
<arg declared_type64='NSInteger' index='1' name='resolution' type64='q'/>
<arg declared_type64='BOOL' index='2' name='replace' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVAudioTime'>
<method selector='audioTimeStamp'>
<retval declared_type64='AudioTimeStamp' type64='{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
</method>
<method selector='extrapolateTimeFromAnchor:'>
<arg declared_type64='AVAudioTime * _Nonnull' index='0' name='anchorTime' type64='@'/>
<retval declared_type64='AVAudioTime * _Nonnull' type64='@'/>
</method>
<method selector='hostTime'>
<retval declared_type64='uint64_t' type64='Q'/>
</method>
<method class_method='true' selector='hostTimeForSeconds:'>
<arg declared_type64='NSTimeInterval' index='0' name='seconds' type64='d'/>
<retval declared_type64='uint64_t' type64='Q'/>
</method>
<method selector='initWithAudioTimeStamp:sampleRate:'>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' index='0' name='ts' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithHostTime:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithHostTime:sampleTime:atRate:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<arg declared_type64='AVAudioFramePosition' index='1' name='sampleTime' type64='q'/>
<arg declared_type64='double' index='2' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSampleTime:atRate:'>
<arg declared_type64='AVAudioFramePosition' index='0' name='sampleTime' type64='q'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isHostTimeValid'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSampleTimeValid'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sampleRate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='sampleTime'>
<retval declared_type64='AVAudioFramePosition' type64='q'/>
</method>
<method class_method='true' selector='secondsForHostTime:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method class_method='true' selector='timeWithAudioTimeStamp:sampleRate:'>
<arg const='true' declared_type64='AudioTimeStamp * _Nonnull' index='0' name='ts' type64='^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='timeWithHostTime:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='timeWithHostTime:sampleTime:atRate:'>
<arg declared_type64='uint64_t' index='0' name='hostTime' type64='Q'/>
<arg declared_type64='AVAudioFramePosition' index='1' name='sampleTime' type64='q'/>
<arg declared_type64='double' index='2' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='timeWithSampleTime:atRate:'>
<arg declared_type64='AVAudioFramePosition' index='0' name='sampleTime' type64='q'/>
<arg declared_type64='double' index='1' name='sampleRate' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioUnit'>
<method selector='AUAudioUnit'>
<retval declared_type64='AUAudioUnit * _Nonnull' type64='@'/>
</method>
<method selector='audioComponentDescription'>
<retval declared_type64='AudioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
</method>
<method selector='audioUnit'>
<retval declared_type64='AudioUnit _Nonnull' type64='^{ComponentInstanceRecord=[1q]}'/>
</method>
<method class_method='true' selector='instantiateWithComponentDescription:options:completionHandler:'>
<arg declared_type64='AudioComponentDescription' index='0' name='audioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
<arg declared_type64='AudioComponentInstantiationOptions' index='1' name='options' type64='I'/>
<arg declared_type64='void (^ _Nonnull)(__kindof AVAudioUnit * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type64='@?'>
<arg declared_type64='__kindof AVAudioUnit * _Nullable' type64='@'/>
<arg declared_type64='NSError * _Nullable' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='loadAudioUnitPresetAtURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='manufacturerName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='version'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='AVAudioUnitComponent'>
<method selector='allTagNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='audioComponent'>
<retval declared_type64='AudioComponent _Nonnull' type64='^{OpaqueAudioComponent=}'/>
</method>
<method selector='audioComponentDescription'>
<retval declared_type64='AudioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
</method>
<method selector='availableArchitectures'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='componentURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='configurationDictionary'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='hasCustomView'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasMIDIInput'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasMIDIOutput'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='icon'>
<retval declared_type64='NSImage * _Nullable' type64='@'/>
</method>
<method selector='iconURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='isSandboxSafe'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='localizedTypeName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='manufacturerName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='passesAUVal'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setUserTagNames:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='userTagNames' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsNumberInputChannels:outputChannels:'>
<arg declared_type64='NSInteger' index='0' name='numInputChannels' type64='q'/>
<arg declared_type64='NSInteger' index='1' name='numOutputChannels' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='typeName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='userTagNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='version'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='versionString'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioUnitComponentManager'>
<method selector='componentsMatchingDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='desc' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='componentsMatchingPredicate:'>
<arg declared_type64='NSPredicate * _Nonnull' index='0' name='predicate' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='componentsPassingTest:'>
<arg declared_type64='BOOL (^ _Nonnull)(AVAudioUnitComponent * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='0' name='testHandler' type64='@?'>
<arg declared_type64='AVAudioUnitComponent * _Nonnull' type64='@'/>
<arg declared_type64='BOOL * _Nonnull' type64='^B'/>
<retval declared_type64='BOOL' type64='B'/>
</arg>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='sharedAudioUnitComponentManager'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='standardLocalizedTagNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tagNames'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVAudioUnitDelay'>
<method selector='delayTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='feedback'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='lowPassCutoff'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setDelayTime:'>
<arg declared_type64='NSTimeInterval' index='0' name='delayTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFeedback:'>
<arg declared_type64='float' index='0' name='feedback' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLowPassCutoff:'>
<arg declared_type64='float' index='0' name='lowPassCutoff' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type64='float' index='0' name='wetDryMix' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioUnitDistortion'>
<method selector='loadFactoryPreset:'>
<arg declared_type64='AVAudioUnitDistortionPreset' index='0' name='preset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='preGain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setPreGain:'>
<arg declared_type64='float' index='0' name='preGain' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type64='float' index='0' name='wetDryMix' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioUnitEQ'>
<method selector='bands'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='globalGain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='initWithNumberOfBands:'>
<arg declared_type64='NSUInteger' index='0' name='numberOfBands' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setGlobalGain:'>
<arg declared_type64='float' index='0' name='globalGain' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitEQFilterParameters'>
<method selector='bandwidth'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='bypass'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='filterType'>
<retval declared_type64='AVAudioUnitEQFilterType' type64='q'/>
</method>
<method selector='frequency'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='gain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setBandwidth:'>
<arg declared_type64='float' index='0' name='bandwidth' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setBypass:'>
<arg declared_type64='BOOL' index='0' name='bypass' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFilterType:'>
<arg declared_type64='AVAudioUnitEQFilterType' index='0' name='filterType' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrequency:'>
<arg declared_type64='float' index='0' name='frequency' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setGain:'>
<arg declared_type64='float' index='0' name='gain' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitEffect'>
<method selector='bypass'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='audioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type64='BOOL' index='0' name='bypass' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitGenerator'>
<method selector='bypass'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='audioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type64='BOOL' index='0' name='bypass' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitMIDIInstrument'>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='description' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='sendController:withValue:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='controller' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='value' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendMIDIEvent:data1:'>
<arg declared_type64='uint8_t' index='0' name='midiStatus' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='data1' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendMIDIEvent:data1:data2:'>
<arg declared_type64='uint8_t' index='0' name='midiStatus' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='data1' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='data2' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendMIDISysExEvent:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='midiData' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendPitchBend:onChannel:'>
<arg declared_type64='uint16_t' index='0' name='pitchbend' type64='S'/>
<arg declared_type64='uint8_t' index='1' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendPressure:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='pressure' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendPressureForKey:withValue:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='key' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='value' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendProgramChange:bankMSB:bankLSB:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='program' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='bankMSB' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='bankLSB' type64='C'/>
<arg declared_type64='uint8_t' index='3' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sendProgramChange:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='program' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startNote:withVelocity:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='note' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='velocity' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopNote:onChannel:'>
<arg declared_type64='uint8_t' index='0' name='note' type64='C'/>
<arg declared_type64='uint8_t' index='1' name='channel' type64='C'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitReverb'>
<method selector='loadFactoryPreset:'>
<arg declared_type64='AVAudioUnitReverbPreset' index='0' name='preset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWetDryMix:'>
<arg declared_type64='float' index='0' name='wetDryMix' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='wetDryMix'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioUnitSampler'>
<method selector='globalTuning'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='loadAudioFilesAtURLs:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='audioFiles' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadInstrumentAtURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='instrumentURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadSoundBankInstrumentAtURL:program:bankMSB:bankLSB:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='bankURL' type64='@'/>
<arg declared_type64='uint8_t' index='1' name='program' type64='C'/>
<arg declared_type64='uint8_t' index='2' name='bankMSB' type64='C'/>
<arg declared_type64='uint8_t' index='3' name='bankLSB' type64='C'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='masterGain'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setGlobalTuning:'>
<arg declared_type64='float' index='0' name='globalTuning' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMasterGain:'>
<arg declared_type64='float' index='0' name='masterGain' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStereoPan:'>
<arg declared_type64='float' index='0' name='stereoPan' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stereoPan'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVAudioUnitTimeEffect'>
<method selector='bypass'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithAudioComponentDescription:'>
<arg declared_type64='AudioComponentDescription' index='0' name='audioComponentDescription' type64='{AudioComponentDescription=IIIII}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setBypass:'>
<arg declared_type64='BOOL' index='0' name='bypass' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitTimePitch'>
<method selector='overlap'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='pitch'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setOverlap:'>
<arg declared_type64='float' index='0' name='overlap' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPitch:'>
<arg declared_type64='float' index='0' name='pitch' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVAudioUnitVarispeed'>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureAudioChannel'>
<method selector='averagePowerLevel'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='peakHoldLevel'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVCaptureAudioDataOutput'>
<method selector='audioSettings'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method selector='sampleBufferCallbackQueue'>
<retval declared_type64='dispatch_queue_t' type64='@'/>
</method>
<method selector='sampleBufferDelegate'>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='setAudioSettings:'>
<arg declared_type64='NSDictionary*' index='0' name='audioSettings' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleBufferDelegate:queue:'>
<arg declared_type64='id' index='0' name='sampleBufferDelegate' type64='@'/>
<arg declared_type64='dispatch_queue_t' index='1' name='sampleBufferCallbackQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureAudioFileOutput'>
<method selector='audioSettings'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method class_method='true' selector='availableOutputFileTypes'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='setAudioSettings:'>
<arg declared_type64='NSDictionary*' index='0' name='audioSettings' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray*' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startRecordingToOutputFileURL:outputFileType:recordingDelegate:'>
<arg declared_type64='NSURL*' index='0' name='outputFileURL' type64='@'/>
<arg declared_type64='NSString*' index='1' name='fileType' type64='@'/>
<arg declared_type64='id' index='2' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureAudioPreviewOutput'>
<method selector='outputDeviceUniqueID'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='setOutputDeviceUniqueID:'>
<arg declared_type64='NSString*' index='0' name='outputDeviceUniqueID' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVCaptureConnection'>
<method selector='audioChannels'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='automaticallyAdjustsVideoMirroring'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='connectionWithInputPort:videoPreviewLayer:'>
<arg declared_type64='AVCaptureInputPort*' index='0' name='port' type64='@'/>
<arg declared_type64='AVCaptureVideoPreviewLayer*' index='1' name='layer' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method class_method='true' selector='connectionWithInputPorts:output:'>
<arg declared_type64='NSArray*' index='0' name='ports' type64='@'/>
<arg declared_type64='AVCaptureOutput*' index='1' name='output' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='initWithInputPort:videoPreviewLayer:'>
<arg declared_type64='AVCaptureInputPort*' index='0' name='port' type64='@'/>
<arg declared_type64='AVCaptureVideoPreviewLayer*' index='1' name='layer' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='initWithInputPorts:output:'>
<arg declared_type64='NSArray*' index='0' name='ports' type64='@'/>
<arg declared_type64='AVCaptureOutput*' index='1' name='output' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='inputPorts'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='isActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVideoFieldModeSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVideoMaxFrameDurationSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVideoMinFrameDurationSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVideoMirrored'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVideoMirroringSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isVideoOrientationSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='output'>
<retval declared_type64='AVCaptureOutput*' type64='@'/>
</method>
<method selector='setAutomaticallyAdjustsVideoMirroring:'>
<arg declared_type64='BOOL' index='0' name='automaticallyAdjustsVideoMirroring' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoFieldMode:'>
<arg declared_type64='AVVideoFieldMode' index='0' name='videoFieldMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoMaxFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='videoMaxFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoMinFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='videoMinFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoMirrored:'>
<arg declared_type64='BOOL' index='0' name='videoMirrored' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoOrientation:'>
<arg declared_type64='AVCaptureVideoOrientation' index='0' name='videoOrientation' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoFieldMode'>
<retval declared_type64='AVVideoFieldMode' type64='q'/>
</method>
<method selector='videoMaxFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='videoMinFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='videoOrientation'>
<retval declared_type64='AVCaptureVideoOrientation' type64='q'/>
</method>
<method selector='videoPreviewLayer'>
<retval declared_type64='AVCaptureVideoPreviewLayer*' type64='@'/>
</method>
</class>
<class name='AVCaptureDevice'>
<method selector='activeFormat'>
<retval declared_type64='AVCaptureDeviceFormat*' type64='@'/>
</method>
<method selector='activeInputSource'>
<retval declared_type64='AVCaptureDeviceInputSource*' type64='@'/>
</method>
<method selector='activeVideoMaxFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='activeVideoMinFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method class_method='true' selector='defaultDeviceWithMediaType:'>
<arg declared_type64='NSString*' index='0' name='mediaType' type64='@'/>
<retval declared_type64='AVCaptureDevice*' type64='@'/>
</method>
<method class_method='true' selector='deviceWithUniqueID:'>
<arg declared_type64='NSString*' index='0' name='deviceUniqueID' type64='@'/>
<retval declared_type64='AVCaptureDevice*' type64='@'/>
</method>
<method class_method='true' selector='devices'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method class_method='true' selector='devicesWithMediaType:'>
<arg declared_type64='NSString*' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='exposureMode'>
<retval declared_type64='AVCaptureExposureMode' type64='q'/>
</method>
<method selector='exposurePointOfInterest'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='flashMode'>
<retval declared_type64='AVCaptureFlashMode' type64='q'/>
</method>
<method selector='focusMode'>
<retval declared_type64='AVCaptureFocusMode' type64='q'/>
</method>
<method selector='focusPointOfInterest'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='formats'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='hasFlash'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasMediaType:'>
<arg declared_type64='NSString*' index='0' name='mediaType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasTorch'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='inputSources'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='isAdjustingExposure'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAdjustingFocus'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAdjustingWhiteBalance'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isConnected'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExposureModeSupported:'>
<arg declared_type64='AVCaptureExposureMode' index='0' name='exposureMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExposurePointOfInterestSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFlashModeSupported:'>
<arg declared_type64='AVCaptureFlashMode' index='0' name='flashMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFocusModeSupported:'>
<arg declared_type64='AVCaptureFocusMode' index='0' name='focusMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isFocusPointOfInterestSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isInUseByAnotherApplication'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSuspended'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isTorchModeSupported:'>
<arg declared_type64='AVCaptureTorchMode' index='0' name='torchMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isWhiteBalanceModeSupported:'>
<arg declared_type64='AVCaptureWhiteBalanceMode' index='0' name='whiteBalanceMode' type64='q'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='linkedDevices'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='localizedName'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='lockForConfiguration:'>
<arg declared_type64='NSError**' index='0' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='manufacturer'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='modelID'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='position'>
<retval declared_type64='AVCaptureDevicePosition' type64='q'/>
</method>
<method selector='setActiveFormat:'>
<arg declared_type64='AVCaptureDeviceFormat*' index='0' name='activeFormat' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActiveInputSource:'>
<arg declared_type64='AVCaptureDeviceInputSource*' index='0' name='activeInputSource' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActiveVideoMaxFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='activeVideoMaxFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActiveVideoMinFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='activeVideoMinFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposureMode:'>
<arg declared_type64='AVCaptureExposureMode' index='0' name='exposureMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExposurePointOfInterest:'>
<arg declared_type64='CGPoint' index='0' name='exposurePointOfInterest' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFlashMode:'>
<arg declared_type64='AVCaptureFlashMode' index='0' name='flashMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusMode:'>
<arg declared_type64='AVCaptureFocusMode' index='0' name='focusMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFocusPointOfInterest:'>
<arg declared_type64='CGPoint' index='0' name='focusPointOfInterest' type64='{CGPoint=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTorchMode:'>
<arg declared_type64='AVCaptureTorchMode' index='0' name='torchMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransportControlsPlaybackMode:speed:'>
<arg declared_type64='AVCaptureDeviceTransportControlsPlaybackMode' index='0' name='mode' type64='q'/>
<arg declared_type64='AVCaptureDeviceTransportControlsSpeed' index='1' name='speed' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWhiteBalanceMode:'>
<arg declared_type64='AVCaptureWhiteBalanceMode' index='0' name='whiteBalanceMode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='supportsAVCaptureSessionPreset:'>
<arg declared_type64='NSString*' index='0' name='preset' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='torchMode'>
<retval declared_type64='AVCaptureTorchMode' type64='q'/>
</method>
<method selector='transportControlsPlaybackMode'>
<retval declared_type64='AVCaptureDeviceTransportControlsPlaybackMode' type64='q'/>
</method>
<method selector='transportControlsSpeed'>
<retval declared_type64='AVCaptureDeviceTransportControlsSpeed' type64='f'/>
</method>
<method selector='transportControlsSupported'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='transportType'>
<retval declared_type64='int32_t' type64='i'/>
</method>
<method selector='uniqueID'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='unlockForConfiguration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='whiteBalanceMode'>
<retval declared_type64='AVCaptureWhiteBalanceMode' type64='q'/>
</method>
</class>
<class name='AVCaptureDeviceFormat'>
<method selector='formatDescription'>
<retval declared_type64='CMFormatDescriptionRef' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='mediaType'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='videoSupportedFrameRateRanges'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
</class>
<class name='AVCaptureDeviceInput'>
<method selector='device'>
<retval declared_type64='AVCaptureDevice*' type64='@'/>
</method>
<method class_method='true' selector='deviceInputWithDevice:error:'>
<arg declared_type64='AVCaptureDevice*' index='0' name='device' type64='@'/>
<arg declared_type64='NSError**' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='initWithDevice:error:'>
<arg declared_type64='AVCaptureDevice*' index='0' name='device' type64='@'/>
<arg declared_type64='NSError**' index='1' name='outError' type64='^@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
</class>
<class name='AVCaptureDeviceInputSource'>
<method selector='inputSourceID'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='localizedName'>
<retval declared_type64='NSString*' type64='@'/>
</method>
</class>
<class name='AVCaptureFileOutput'>
<method selector='delegate'>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='isRecording'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isRecordingPaused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='maxRecordedDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='maxRecordedFileSize'>
<retval declared_type64='int64_t' type64='q'/>
</method>
<method selector='minFreeDiskSpaceLimit'>
<retval declared_type64='int64_t' type64='q'/>
</method>
<method selector='outputFileURL'>
<retval declared_type64='NSURL*' type64='@'/>
</method>
<method selector='pauseRecording'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='recordedDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='recordedFileSize'>
<retval declared_type64='int64_t' type64='q'/>
</method>
<method selector='resumeRecording'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type64='id' index='0' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxRecordedDuration:'>
<arg declared_type64='CMTime' index='0' name='maxRecordedDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxRecordedFileSize:'>
<arg declared_type64='int64_t' index='0' name='maxRecordedFileSize' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinFreeDiskSpaceLimit:'>
<arg declared_type64='int64_t' index='0' name='minFreeDiskSpaceLimit' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startRecordingToOutputFileURL:recordingDelegate:'>
<arg declared_type64='NSURL*' index='0' name='outputFileURL' type64='@'/>
<arg declared_type64='id' index='1' name='delegate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopRecording'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureInput'>
<method selector='ports'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
</class>
<class name='AVCaptureInputPort'>
<method selector='clock'>
<retval declared_type64='CMClockRef' type64='^{OpaqueCMClock=}'/>
</method>
<method selector='formatDescription'>
<retval declared_type64='CMFormatDescriptionRef' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='input'>
<retval declared_type64='AVCaptureInput*' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mediaType'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureMovieFileOutput'>
<method selector='metadata'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='movieFragmentInterval'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='outputSettingsForConnection:'>
<arg declared_type64='AVCaptureConnection*' index='0' name='connection' type64='@'/>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray*' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMovieFragmentInterval:'>
<arg declared_type64='CMTime' index='0' name='movieFragmentInterval' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOutputSettings:forConnection:'>
<arg declared_type64='NSDictionary*' index='0' name='outputSettings' type64='@'/>
<arg declared_type64='AVCaptureConnection*' index='1' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureOutput'>
<method selector='connectionWithMediaType:'>
<arg declared_type64='NSString*' index='0' name='mediaType' type64='@'/>
<retval declared_type64='AVCaptureConnection*' type64='@'/>
</method>
<method selector='connections'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
</class>
<class name='AVCaptureScreenInput'>
<method selector='capturesCursor'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='capturesMouseClicks'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cropRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithDisplayID:'>
<arg declared_type64='CGDirectDisplayID' index='0' name='displayID' type64='I'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='minFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='removesDuplicateFrames'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='scaleFactor'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='setCapturesCursor:'>
<arg declared_type64='BOOL' index='0' name='capturesCursor' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCapturesMouseClicks:'>
<arg declared_type64='BOOL' index='0' name='capturesMouseClicks' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCropRect:'>
<arg declared_type64='CGRect' index='0' name='cropRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMinFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='minFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRemovesDuplicateFrames:'>
<arg declared_type64='BOOL' index='0' name='removesDuplicateFrames' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setScaleFactor:'>
<arg declared_type64='CGFloat' index='0' name='scaleFactor' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureSession'>
<method selector='addConnection:'>
<arg declared_type64='AVCaptureConnection*' index='0' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addInput:'>
<arg declared_type64='AVCaptureInput*' index='0' name='input' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addInputWithNoConnections:'>
<arg declared_type64='AVCaptureInput*' index='0' name='input' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addOutput:'>
<arg declared_type64='AVCaptureOutput*' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='addOutputWithNoConnections:'>
<arg declared_type64='AVCaptureOutput*' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='beginConfiguration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canAddConnection:'>
<arg declared_type64='AVCaptureConnection*' index='0' name='connection' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canAddInput:'>
<arg declared_type64='AVCaptureInput*' index='0' name='input' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canAddOutput:'>
<arg declared_type64='AVCaptureOutput*' index='0' name='output' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canSetSessionPreset:'>
<arg declared_type64='NSString*' index='0' name='preset' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='commitConfiguration'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='inputs'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='isRunning'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='masterClock'>
<retval declared_type64='CMClockRef' type64='^{OpaqueCMClock=}'/>
</method>
<method selector='outputs'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='removeConnection:'>
<arg declared_type64='AVCaptureConnection*' index='0' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeInput:'>
<arg declared_type64='AVCaptureInput*' index='0' name='input' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeOutput:'>
<arg declared_type64='AVCaptureOutput*' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sessionPreset'>
<retval declared_type64='NSString*' type64='@'/>
</method>
<method selector='setSessionPreset:'>
<arg declared_type64='NSString*' index='0' name='sessionPreset' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startRunning'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stopRunning'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureStillImageOutput'>
<method selector='availableImageDataCVPixelFormatTypes'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='availableImageDataCodecTypes'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='captureStillImageAsynchronouslyFromConnection:completionHandler:'>
<arg declared_type64='AVCaptureConnection*' index='0' name='connection' type64='@'/>
<arg declared_type64='void (^)(CMSampleBufferRef, NSError *)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='CMSampleBufferRef' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='NSError*' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isCapturingStillImage'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='jpegStillImageNSDataRepresentation:'>
<arg declared_type64='CMSampleBufferRef' index='0' name='jpegSampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='NSData*' type64='@'/>
</method>
<method selector='outputSettings'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
<method selector='setOutputSettings:'>
<arg declared_type64='NSDictionary*' index='0' name='outputSettings' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVCaptureVideoDataOutput'>
<method selector='alwaysDiscardsLateVideoFrames'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='availableVideoCVPixelFormatTypes'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='availableVideoCodecTypes'>
<retval declared_type64='NSArray*' type64='@'/>
</method>
<method selector='sampleBufferCallbackQueue'>
<retval declared_type64='dispatch_queue_t' type64='@'/>
</method>
<method selector='sampleBufferDelegate'>
<retval declared_type64='id' type64='@'/>
</method>
<method selector='setAlwaysDiscardsLateVideoFrames:'>
<arg declared_type64='BOOL' index='0' name='alwaysDiscardsLateVideoFrames' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleBufferDelegate:queue:'>
<arg declared_type64='id' index='0' name='sampleBufferDelegate' type64='@'/>
<arg declared_type64='dispatch_queue_t' index='1' name='sampleBufferCallbackQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoSettings:'>
<arg declared_type64='NSDictionary*' index='0' name='videoSettings' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoSettings'>
<retval declared_type64='NSDictionary*' type64='@'/>
</method>
</class>
<class name='AVCaptureVideoPreviewLayer'>
<method selector='connection'>
<retval declared_type64='AVCaptureConnection*' type64='@'/>
</method>
<method selector='initWithSession:'>
<arg declared_type64='AVCaptureSession*' index='0' name='session' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='initWithSessionWithNoConnection:'>
<arg declared_type64='AVCaptureSession*' index='0' name='session' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method class_method='true' selector='layerWithSession:'>
<arg declared_type64='AVCaptureSession*' index='0' name='session' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method class_method='true' selector='layerWithSessionWithNoConnection:'>
<arg declared_type64='AVCaptureSession*' index='0' name='session' type64='@'/>
<retval declared_type64='instancetype' type64='@'/>
</method>
<method selector='session'>
<retval declared_type64='AVCaptureSession*' type64='@'/>
</method>
<method selector='setSession:'>
<arg declared_type64='AVCaptureSession*' index='0' name='session' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSessionWithNoConnection:'>
<arg declared_type64='AVCaptureSession*' index='0' name='session' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoGravity:'>
<arg declared_type64='NSString*' index='0' name='videoGravity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoGravity'>
<retval declared_type64='NSString*' type64='@'/>
</method>
</class>
<class name='AVComposition'>
<method selector='URLAssetInitializationOptions'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVCompositionTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVCompositionTrack'>
<method selector='segments'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVCompositionTrackSegment'>
<method class_method='true' selector='compositionTrackSegmentWithTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='CMPersistentTrackID' index='1' name='trackID' type64='i'/>
<arg declared_type64='CMTimeRange' index='2' name='sourceTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTimeRange' index='3' name='targetTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithURL:trackID:sourceTimeRange:targetTimeRange:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='CMPersistentTrackID' index='1' name='trackID' type64='i'/>
<arg declared_type64='CMTimeRange' index='2' name='sourceTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTimeRange' index='3' name='targetTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='sourceTrackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method selector='sourceURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
</class>
<class name='AVDateRangeMetadataGroup'>
<method selector='endDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='initWithItems:startDate:endDate:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<arg declared_type64='NSDate * _Nonnull' index='1' name='startDate' type64='@'/>
<arg declared_type64='NSDate * _Nullable' index='2' name='endDate' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='startDate'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVFragmentedAsset'>
<method class_method='true' selector='fragmentedAssetWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVFragmentedAssetTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVFragmentedAssetMinder'>
<method selector='addFragmentedAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='assets'>
<retval declared_type64='NSArray *&gt; * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='fragmentedAssetMinderWithAsset:mindingInterval:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='mindingInterval' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='mindingInterval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='removeFragmentedAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMindingInterval:'>
<arg declared_type64='NSTimeInterval' index='0' name='mindingInterval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVFragmentedMovie'>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVFragmentedMovieTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVFragmentedMovieMinder'>
<method selector='addFragmentedMovie:'>
<arg declared_type64='AVFragmentedMovie * _Nonnull' index='0' name='movie' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='fragmentedMovieMinderWithMovie:mindingInterval:'>
<arg declared_type64='AVFragmentedMovie * _Nonnull' index='0' name='movie' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='mindingInterval' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithMovie:mindingInterval:'>
<arg declared_type64='AVFragmentedMovie * _Nonnull' index='0' name='movie' type64='@'/>
<arg declared_type64='NSTimeInterval' index='1' name='mindingInterval' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='mindingInterval'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='movies'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='removeFragmentedMovie:'>
<arg declared_type64='AVFragmentedMovie * _Nonnull' index='0' name='movie' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMindingInterval:'>
<arg declared_type64='NSTimeInterval' index='0' name='mindingInterval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVFrameRateRange'>
<method selector='maxFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='maxFrameRate'>
<retval declared_type64='Float64' type64='d'/>
</method>
<method selector='minFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='minFrameRate'>
<retval declared_type64='Float64' type64='d'/>
</method>
</class>
<class name='AVMIDIPlayer'>
<method selector='currentPosition'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='duration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='initWithContentsOfURL:soundBankURL:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='inURL' type64='@'/>
<arg declared_type64='NSURL * _Nullable' index='1' name='bankURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:soundBankURL:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSURL * _Nullable' index='1' name='bankURL' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='play:'>
<arg declared_type64='AVMIDIPlayerCompletionHandler _Nullable' function_pointer='true' index='0' name='completionHandler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setCurrentPosition:'>
<arg declared_type64='NSTimeInterval' index='0' name='currentPosition' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='stop'>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMediaDataStorage'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='initWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMediaSelection'>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nullable' type64='@'/>
</method>
<method selector='mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectedMediaOptionInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
</class>
<class name='AVMediaSelectionGroup'>
<method selector='allowsEmptySelection'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='defaultOption'>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
<method selector='mediaSelectionOptionWithPropertyList:'>
<arg declared_type64='id _Nonnull' index='0' name='plist' type64='@'/>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='preferredLanguages' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withLocale:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<arg declared_type64='NSLocale * _Nonnull' index='1' name='locale' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withMediaCharacteristics:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='mediaCharacteristics' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='mediaSelectionOptionsFromArray:withoutMediaCharacteristics:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='mediaCharacteristics' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='options'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playableMediaSelectionOptionsFromArray:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='mediaSelectionOptions' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMediaSelectionOption'>
<method selector='associatedMediaSelectionOptionInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
<method selector='availableMetadataFormats'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='commonMetadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='displayName'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='displayNameWithLocale:'>
<arg declared_type64='NSLocale * _Nonnull' index='0' name='locale' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='hasMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlayable'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='locale'>
<retval declared_type64='NSLocale * _Nullable' type64='@'/>
</method>
<method selector='mediaSubTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='mediaType'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='metadataForFormat:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='format' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='propertyList'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMetadataFaceObject'>
<method selector='faceID'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='hasRollAngle'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasYawAngle'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rollAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='yawAngle'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
</class>
<class name='AVMetadataGroup'>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMetadataItem'>
<method selector='commonKey'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='dataType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='dataValue'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='dateValue'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='extraAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='identifierForKey:keySpace:'>
<arg declared_type64='id _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='keySpace' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='key'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method class_method='true' selector='keyForIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='keySpace'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='keySpaceForIdentifier:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='identifier' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='keys' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='locale'>
<retval declared_type64='NSLocale * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='metadataItemWithPropertiesOfMetadataItem:valueLoadingHandler:'>
<arg declared_type64='AVMetadataItem * _Nonnull' index='0' name='metadataItem' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(AVMetadataItemValueRequest * _Nonnull)' function_pointer='true' index='1' name='handler' type64='@?'>
<arg declared_type64='AVMetadataItemValueRequest * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AVMetadataItem * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='preferredLanguages' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:filteredByIdentifier:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='identifier' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:filteredByMetadataItemFilter:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='AVMetadataItemFilter * _Nonnull' index='1' name='metadataItemFilter' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:withKey:keySpace:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='id _Nullable' index='1' name='key' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='keySpace' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='metadataItemsFromArray:withLocale:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadataItems' type64='@'/>
<arg declared_type64='NSLocale * _Nonnull' index='1' name='locale' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='numberValue'>
<retval declared_type64='NSNumber * _Nullable' type64='@'/>
</method>
<method selector='startDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='statusOfValueForKey:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='AVKeyValueStatus' type64='q'/>
</method>
<method selector='stringValue'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='time'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='value'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='AVMetadataItemFilter'>
<method class_method='true' selector='metadataItemFilterForSharing'>
<retval declared_type64='AVMetadataItemFilter * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMetadataItemValueRequest'>
<method selector='metadataItem'>
<retval declared_type64='AVMetadataItem * _Nullable' type64='@'/>
</method>
<method selector='respondWithError:'>
<arg declared_type64='NSError * _Nonnull' index='0' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='respondWithValue:'>
<arg declared_type64='id _Nonnull' index='0' name='value' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMetadataObject'>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='time'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='type'>
<retval declared_type64='NSString*' type64='@'/>
</method>
</class>
<class name='AVMovie'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='canContainMovieFragments'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='containsMovieFragments'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='data'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='defaultMediaDataStorage'>
<retval declared_type64='AVMediaDataStorage * _Nullable' type64='@'/>
</method>
<method selector='initWithData:options:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isCompatibleWithFileType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='movieHeaderWithFileType:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='fileType' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='movieTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='movieWithData:options:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='movieWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVMovieTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='writeMovieHeaderToURL:fileType:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='fileType' type64='@'/>
<arg declared_type64='AVMovieWritingOptions' index='2' name='options' type64='Q'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVMovieTrack'>
<method selector='alternateGroupID'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='mediaDataStorage'>
<retval declared_type64='AVMediaDataStorage * _Nullable' type64='@'/>
</method>
<method selector='mediaDecodeTimeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='mediaPresentationTimeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVMusicTrack'>
<method selector='destinationAudioUnit'>
<retval declared_type64='AVAudioUnit * _Nullable' type64='@'/>
</method>
<method selector='destinationMIDIEndpoint'>
<retval declared_type64='MIDIEndpointRef' type64='I'/>
</method>
<method selector='isLoopingEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMuted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isSoloed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='lengthInBeats'>
<retval declared_type64='AVMusicTimeStamp' type64='d'/>
</method>
<method selector='lengthInSeconds'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='loopRange'>
<retval declared_type64='AVBeatRange' type64='{_AVBeatRange=dd}'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='offsetTime'>
<retval declared_type64='AVMusicTimeStamp' type64='d'/>
</method>
<method selector='setDestinationAudioUnit:'>
<arg declared_type64='AVAudioUnit * _Nullable' index='0' name='destinationAudioUnit' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDestinationMIDIEndpoint:'>
<arg declared_type64='MIDIEndpointRef' index='0' name='destinationMIDIEndpoint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLengthInBeats:'>
<arg declared_type64='AVMusicTimeStamp' index='0' name='lengthInBeats' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLengthInSeconds:'>
<arg declared_type64='NSTimeInterval' index='0' name='lengthInSeconds' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoopRange:'>
<arg declared_type64='AVBeatRange' index='0' name='loopRange' type64='{_AVBeatRange=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLoopingEnabled:'>
<arg declared_type64='BOOL' index='0' name='loopingEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMuted:'>
<arg declared_type64='BOOL' index='0' name='muted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg declared_type64='NSInteger' index='0' name='numberOfLoops' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOffsetTime:'>
<arg declared_type64='AVMusicTimeStamp' index='0' name='offsetTime' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSoloed:'>
<arg declared_type64='BOOL' index='0' name='soloed' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timeResolution'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='AVMutableAudioMix'>
<method class_method='true' selector='audioMix'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='inputParameters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setInputParameters:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='inputParameters' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMutableAudioMixInputParameters'>
<method class_method='true' selector='audioMixInputParameters'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='audioMixInputParametersWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nullable' index='0' name='track' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='audioTapProcessor'>
<retval declared_type64='MTAudioProcessingTapRef _Nullable' type64='^{opaqueMTAudioProcessingTap=}'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='setAudioTapProcessor:'>
<arg declared_type64='MTAudioProcessingTapRef _Nullable' index='0' name='audioTapProcessor' type64='^{opaqueMTAudioProcessingTap=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='NSString * _Nullable' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:atTime:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolumeRampFromStartVolume:toEndVolume:timeRange:'>
<arg declared_type64='float' index='0' name='startVolume' type64='f'/>
<arg declared_type64='float' index='1' name='endVolume' type64='f'/>
<arg declared_type64='CMTimeRange' index='2' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVMutableComposition'>
<method selector='addMutableTrackWithMediaType:preferredTrackID:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='CMPersistentTrackID' index='1' name='preferredTrackID' type64='i'/>
<retval declared_type64='AVMutableCompositionTrack * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='composition'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='compositionWithURLAssetInitializationOptions:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='URLAssetInitializationOptions' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insertEmptyTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTimeRange:ofAsset:atTime:error:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='AVAsset * _Nonnull' index='1' name='asset' type64='@'/>
<arg declared_type64='CMTime' index='2' name='startTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='mutableTrackCompatibleWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='AVMutableCompositionTrack * _Nullable' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='removeTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTrack:'>
<arg declared_type64='AVCompositionTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scaleTimeRange:toDuration:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTime' index='1' name='duration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNaturalSize:'>
<arg declared_type64='CGSize' index='0' name='naturalSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVMutableCompositionTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableCompositionTrack'>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='insertEmptyTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTimeRange:ofTrack:atTime:error:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='AVAssetTrack * _Nonnull' index='1' name='track' type64='@'/>
<arg declared_type64='CMTime' index='2' name='startTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='insertTimeRanges:ofTracks:atTime:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='timeRanges' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='tracks' type64='@'/>
<arg declared_type64='CMTime' index='2' name='startTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageCode'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='naturalTimeScale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='preferredTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='removeTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scaleTimeRange:toDuration:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTime' index='1' name='duration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='segments'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type64='NSString * _Nullable' index='0' name='extendedLanguageTag' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguageCode:'>
<arg declared_type64='NSString * _Nullable' index='0' name='languageCode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNaturalTimeScale:'>
<arg declared_type64='CMTimeScale' index='0' name='naturalTimeScale' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='preferredTransform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredVolume:'>
<arg declared_type64='float' index='0' name='preferredVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSegments:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='segments' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='validateTrackSegments:error:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='trackSegments' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVMutableDateRangeMetadataGroup'>
<method selector='endDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setEndDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='endDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartDate:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='startDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startDate'>
<retval declared_type64='NSDate * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableMediaSelection'>
<method selector='selectMediaOption:inMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionOption * _Nullable' index='0' name='mediaSelectionOption' type64='@'/>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='1' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVMutableMetadataItem'>
<method selector='dataType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='extraAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='identifier'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='key'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='keySpace'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='locale'>
<retval declared_type64='NSLocale * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='metadataItem'>
<retval declared_type64='AVMutableMetadataItem * _Nonnull' type64='@'/>
</method>
<method selector='setDataType:'>
<arg declared_type64='NSString * _Nullable' index='0' name='dataType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type64='CMTime' index='0' name='duration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type64='NSString * _Nullable' index='0' name='extendedLanguageTag' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtraAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='extraAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type64='NSString * _Nullable' index='0' name='identifier' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKey:'>
<arg declared_type64='id _Nullable' index='0' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setKeySpace:'>
<arg declared_type64='NSString * _Nullable' index='0' name='keySpace' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type64='NSLocale * _Nullable' index='0' name='locale' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStartDate:'>
<arg declared_type64='NSDate * _Nullable' index='0' name='startDate' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTime:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setValue:'>
<arg declared_type64='id _Nullable' index='0' name='value' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='time'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='value'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
</class>
<class name='AVMutableMovie'>
<method selector='addMutableTrackWithMediaType:copySettingsFromTrack:options:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<arg declared_type64='AVAssetTrack * _Nullable' index='1' name='track' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='AVMutableMovieTrack * _Nonnull' type64='@'/>
</method>
<method selector='addMutableTracksCopyingSettingsFromTracks:options:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='existingTracks' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='defaultMediaDataStorage'>
<retval declared_type64='AVMediaDataStorage * _Nonnull' type64='@'/>
</method>
<method selector='initWithData:options:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithSettingsFromMovie:options:error:'>
<arg declared_type64='AVMovie * _Nullable' index='0' name='movie' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithURL:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='insertEmptyTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTimeRange:ofAsset:atTime:copySampleData:error:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='AVAsset * _Nonnull' index='1' name='asset' type64='@'/>
<arg declared_type64='CMTime' index='2' name='startTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='BOOL' index='3' name='copySampleData' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='interleavingPeriod'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='isModified'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='movieWithData:options:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='movieWithSettingsFromMovie:options:error:'>
<arg declared_type64='AVMovie * _Nullable' index='0' name='movie' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='movieWithURL:options:error:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='mutableTrackCompatibleWithTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='AVMutableMovieTrack * _Nullable' type64='@'/>
</method>
<method selector='preferredRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='preferredTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='removeTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTrack:'>
<arg declared_type64='AVMovieTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='scaleTimeRange:toDuration:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTime' index='1' name='duration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDefaultMediaDataStorage:'>
<arg declared_type64='AVMediaDataStorage * _Nonnull' index='0' name='defaultMediaDataStorage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInterleavingPeriod:'>
<arg declared_type64='CMTime' index='0' name='interleavingPeriod' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setModified:'>
<arg declared_type64='BOOL' index='0' name='modified' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredRate:'>
<arg declared_type64='float' index='0' name='preferredRate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='preferredTransform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredVolume:'>
<arg declared_type64='float' index='0' name='preferredVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimescale:'>
<arg declared_type64='CMTimeScale' index='0' name='timescale' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timescale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
<method selector='trackWithTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='AVMutableMovieTrack * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='tracksWithMediaType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaType' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableMovieTrack'>
<method selector='addTrackAssociationToTrack:type:'>
<arg declared_type64='AVMovieTrack * _Nonnull' index='0' name='movieTrack' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='trackAssociationType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='alternateGroupID'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='cleanApertureDimensions'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='encodedPixelsDimensions'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='extendedLanguageTag'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='hasProtectedContent'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='insertEmptyTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='insertTimeRange:ofTrack:atTime:copySampleData:error:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='AVAssetTrack * _Nonnull' index='1' name='track' type64='@'/>
<arg declared_type64='CMTime' index='2' name='startTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='BOOL' index='3' name='copySampleData' type64='B'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='outError' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isModified'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='languageCode'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='layer'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='mediaDataStorage'>
<retval declared_type64='AVMediaDataStorage * _Nullable' type64='@'/>
</method>
<method selector='metadata'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='naturalSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='preferredMediaChunkAlignment'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='preferredMediaChunkDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='preferredMediaChunkSize'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='preferredTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='preferredVolume'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='productionApertureDimensions'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='removeTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeTrackAssociationToTrack:type:'>
<arg declared_type64='AVMovieTrack * _Nonnull' index='0' name='movieTrack' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='trackAssociationType' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sampleReferenceBaseURL'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='scaleTimeRange:toDuration:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='CMTime' index='1' name='duration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAlternateGroupID:'>
<arg declared_type64='NSInteger' index='0' name='alternateGroupID' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCleanApertureDimensions:'>
<arg declared_type64='CGSize' index='0' name='cleanApertureDimensions' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEncodedPixelsDimensions:'>
<arg declared_type64='CGSize' index='0' name='encodedPixelsDimensions' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setExtendedLanguageTag:'>
<arg declared_type64='NSString * _Nullable' index='0' name='extendedLanguageTag' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLanguageCode:'>
<arg declared_type64='NSString * _Nullable' index='0' name='languageCode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayer:'>
<arg declared_type64='NSInteger' index='0' name='layer' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMediaDataStorage:'>
<arg declared_type64='AVMediaDataStorage * _Nullable' index='0' name='mediaDataStorage' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMetadata:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='metadata' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setModified:'>
<arg declared_type64='BOOL' index='0' name='modified' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNaturalSize:'>
<arg declared_type64='CGSize' index='0' name='naturalSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMediaChunkAlignment:'>
<arg declared_type64='NSInteger' index='0' name='preferredMediaChunkAlignment' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMediaChunkDuration:'>
<arg declared_type64='CMTime' index='0' name='preferredMediaChunkDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMediaChunkSize:'>
<arg declared_type64='NSInteger' index='0' name='preferredMediaChunkSize' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='preferredTransform' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredVolume:'>
<arg declared_type64='float' index='0' name='preferredVolume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setProductionApertureDimensions:'>
<arg declared_type64='CGSize' index='0' name='productionApertureDimensions' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSampleReferenceBaseURL:'>
<arg declared_type64='NSURL * _Nullable' index='0' name='sampleReferenceBaseURL' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimescale:'>
<arg declared_type64='CMTimeScale' index='0' name='timescale' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timescale'>
<retval declared_type64='CMTimeScale' type64='i'/>
</method>
</class>
<class name='AVMutableTimedMetadataGroup'>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVMutableVideoComposition'>
<method selector='animationTool'>
<retval declared_type64='AVVideoCompositionCoreAnimationTool * _Nullable' type64='@'/>
</method>
<method selector='customVideoCompositorClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='frameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='instructions'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='renderSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='setAnimationTool:'>
<arg declared_type64='AVVideoCompositionCoreAnimationTool * _Nullable' index='0' name='animationTool' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCustomVideoCompositorClass:'>
<arg declared_type64='Class _Nullable' index='0' name='customVideoCompositorClass' type64='#'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='frameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setInstructions:'>
<arg declared_type64='NSArray&gt; * _Nonnull' index='0' name='instructions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderSize:'>
<arg declared_type64='CGSize' index='0' name='renderSize' type64='{CGSize=dd}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='videoComposition'>
<retval declared_type64='AVMutableVideoComposition * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionWithAsset:applyingCIFiltersWithHandler:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(AVAsynchronousCIImageFilteringRequest * _Nonnull)' function_pointer='true' index='1' name='applier' type64='@?'>
<arg declared_type64='AVAsynchronousCIImageFilteringRequest * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AVMutableVideoComposition * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionWithPropertiesOfAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='AVMutableVideoComposition * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableVideoCompositionInstruction'>
<method selector='backgroundColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layerInstructions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type64='CGColorRef _Nullable' index='0' name='backgroundColor' type64='^{CGColor=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnablePostProcessing:'>
<arg declared_type64='BOOL' index='0' name='enablePostProcessing' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLayerInstructions:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='layerInstructions' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method class_method='true' selector='videoCompositionInstruction'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVMutableVideoCompositionLayerInstruction'>
<method selector='setCropRectangle:atTime:'>
<arg declared_type64='CGRect' index='0' name='cropRectangle' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:'>
<arg declared_type64='CGRect' index='0' name='startCropRectangle' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect' index='1' name='endCropRectangle' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CMTimeRange' index='2' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpacity:atTime:'>
<arg declared_type64='float' index='0' name='opacity' type64='f'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOpacityRampFromStartOpacity:toEndOpacity:timeRange:'>
<arg declared_type64='float' index='0' name='startOpacity' type64='f'/>
<arg declared_type64='float' index='1' name='endOpacity' type64='f'/>
<arg declared_type64='CMTimeRange' index='2' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTrackID:'>
<arg declared_type64='CMPersistentTrackID' index='0' name='trackID' type64='i'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransform:atTime:'>
<arg declared_type64='CGAffineTransform' index='0' name='transform' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='CMTime' index='1' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTransformRampFromStartTransform:toEndTransform:timeRange:'>
<arg declared_type64='CGAffineTransform' index='0' name='startTransform' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='CGAffineTransform' index='1' name='endTransform' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='CMTimeRange' index='2' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method class_method='true' selector='videoCompositionLayerInstruction'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionLayerInstructionWithAssetTrack:'>
<arg declared_type64='AVAssetTrack * _Nonnull' index='0' name='track' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVOutputSettingsAssistant'>
<method selector='audioSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='availableOutputSettingsPresets'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outputFileType'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='outputSettingsAssistantWithPreset:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='presetIdentifier' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='setSourceAudioFormat:'>
<arg declared_type64='CMAudioFormatDescriptionRef _Nullable' index='0' name='sourceAudioFormat' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceVideoAverageFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='sourceVideoAverageFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceVideoFormat:'>
<arg declared_type64='CMVideoFormatDescriptionRef _Nullable' index='0' name='sourceVideoFormat' type64='^{opaqueCMFormatDescription=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSourceVideoMinFrameDuration:'>
<arg declared_type64='CMTime' index='0' name='sourceVideoMinFrameDuration' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourceAudioFormat'>
<retval declared_type64='CMAudioFormatDescriptionRef _Nullable' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='sourceVideoAverageFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='sourceVideoFormat'>
<retval declared_type64='CMVideoFormatDescriptionRef _Nullable' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='sourceVideoMinFrameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='videoSettings'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPlayer'>
<method selector='actionAtItemEnd'>
<retval declared_type64='AVPlayerActionAtItemEnd' type64='q'/>
</method>
<method selector='addBoundaryTimeObserverForTimes:queue:usingBlock:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='times' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='2' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='addPeriodicTimeObserverForInterval:queue:usingBlock:'>
<arg declared_type64='CMTime' index='0' name='interval' type64='{_CMTime=qiIq}'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(CMTime)' function_pointer='true' index='2' name='block' type64='@?'>
<arg declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='allowsExternalPlayback'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='appliesMediaSelectionCriteriaAutomatically'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='audioOutputDeviceUniqueID'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='cancelPendingPrerolls'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='currentItem'>
<retval declared_type64='AVPlayerItem * _Nullable' type64='@'/>
</method>
<method selector='currentTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='initWithPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isClosedCaptionDisplayEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isExternalPlaybackActive'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isMuted'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='masterClock'>
<retval declared_type64='CMClockRef _Nullable' type64='^{OpaqueCMClock=}'/>
</method>
<method selector='mediaSelectionCriteriaForMediaCharacteristic:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='AVPlayerMediaSelectionCriteria * _Nullable' type64='@'/>
</method>
<method selector='pause'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='play'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='playerWithPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='prerollAtRate:completionHandler:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<arg declared_type64='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='removeTimeObserver:'>
<arg declared_type64='id _Nonnull' index='0' name='observer' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='replaceCurrentItemWithPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nullable' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToDate:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='date' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToDate:completionHandler:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='date' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='1' name='toleranceBefore' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='toleranceAfter' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='1' name='toleranceBefore' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='toleranceAfter' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setActionAtItemEnd:'>
<arg declared_type64='AVPlayerActionAtItemEnd' index='0' name='actionAtItemEnd' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAllowsExternalPlayback:'>
<arg declared_type64='BOOL' index='0' name='allowsExternalPlayback' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAppliesMediaSelectionCriteriaAutomatically:'>
<arg declared_type64='BOOL' index='0' name='appliesMediaSelectionCriteriaAutomatically' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioOutputDeviceUniqueID:'>
<arg declared_type64='NSString * _Nullable' index='0' name='audioOutputDeviceUniqueID' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClosedCaptionDisplayEnabled:'>
<arg declared_type64='BOOL' index='0' name='closedCaptionDisplayEnabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMasterClock:'>
<arg declared_type64='CMClockRef _Nullable' index='0' name='masterClock' type64='^{OpaqueCMClock=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMediaSelectionCriteria:forMediaCharacteristic:'>
<arg declared_type64='AVPlayerMediaSelectionCriteria * _Nullable' index='0' name='criteria' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='mediaCharacteristic' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMuted:'>
<arg declared_type64='BOOL' index='0' name='muted' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:time:atHostTime:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<arg declared_type64='CMTime' index='1' name='itemTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='hostClockTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='status'>
<retval declared_type64='AVPlayerStatus' type64='q'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='AVPlayerItem'>
<method selector='accessLog'>
<retval declared_type64='AVPlayerItemAccessLog * _Nullable' type64='@'/>
</method>
<method selector='addOutput:'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='asset'>
<retval declared_type64='AVAsset * _Nonnull' type64='@'/>
</method>
<method selector='audioMix'>
<retval declared_type64='AVAudioMix * _Nullable' type64='@'/>
</method>
<method selector='audioTimePitchAlgorithm'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='automaticallyLoadedAssetKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='canPlayFastForward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPlayFastReverse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPlayReverse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPlaySlowForward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canPlaySlowReverse'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canStepBackward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canStepForward'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='canUseNetworkResourcesForLiveStreamingWhilePaused'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='cancelContentAuthorizationRequest'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cancelPendingSeeks'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='contentAuthorizationRequestStatus'>
<retval declared_type64='AVContentAuthorizationStatus' type64='q'/>
</method>
<method selector='currentDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='currentMediaSelection'>
<retval declared_type64='AVMediaSelection * _Nonnull' type64='@'/>
</method>
<method selector='currentTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='customVideoCompositor'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='duration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='errorLog'>
<retval declared_type64='AVPlayerItemErrorLog * _Nullable' type64='@'/>
</method>
<method selector='forwardPlaybackEndTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='initWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithAsset:automaticallyLoadedAssetKeys:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='automaticallyLoadedAssetKeys' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='isApplicationAuthorizedForPlayback'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAuthorizationRequiredForPlayback'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isContentAuthorizedForPlayback'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaybackBufferEmpty'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaybackBufferFull'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isPlaybackLikelyToKeepUp'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='loadedTimeRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='outputs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerItemWithAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='AVPlayerItem * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerItemWithAsset:automaticallyLoadedAssetKeys:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='automaticallyLoadedAssetKeys' type64='@'/>
<retval declared_type64='AVPlayerItem * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='playerItemWithURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<retval declared_type64='AVPlayerItem * _Nonnull' type64='@'/>
</method>
<method selector='preferredPeakBitRate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='presentationSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='removeOutput:'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requestContentAuthorizationAsynchronouslyWithTimeoutInterval:completionHandler:'>
<arg declared_type64='NSTimeInterval' index='0' name='timeoutInterval' type64='d'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='reversePlaybackEndTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='seekToDate:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='date' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='seekToDate:completionHandler:'>
<arg declared_type64='NSDate * _Nonnull' index='0' name='date' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='seekToTime:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='1' name='toleranceBefore' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='toleranceAfter' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekToTime:toleranceBefore:toleranceAfter:completionHandler:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='1' name='toleranceBefore' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime' index='2' name='toleranceAfter' type64='{_CMTime=qiIq}'/>
<arg declared_type64='void (^ _Nonnull)(BOOL)' function_pointer='true' index='3' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='seekableTimeRanges'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='seekingWaitsForVideoCompositionRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='selectMediaOption:inMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionOption * _Nullable' index='0' name='mediaSelectionOption' type64='@'/>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='1' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectMediaOptionAutomaticallyInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='selectedMediaOptionInMediaSelectionGroup:'>
<arg declared_type64='AVMediaSelectionGroup * _Nonnull' index='0' name='mediaSelectionGroup' type64='@'/>
<retval declared_type64='AVMediaSelectionOption * _Nullable' type64='@'/>
</method>
<method selector='setAudioMix:'>
<arg declared_type64='AVAudioMix * _Nullable' index='0' name='audioMix' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAudioTimePitchAlgorithm:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='audioTimePitchAlgorithm' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCanUseNetworkResourcesForLiveStreamingWhilePaused:'>
<arg declared_type64='BOOL' index='0' name='canUseNetworkResourcesForLiveStreamingWhilePaused' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setForwardPlaybackEndTime:'>
<arg declared_type64='CMTime' index='0' name='forwardPlaybackEndTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredPeakBitRate:'>
<arg declared_type64='double' index='0' name='preferredPeakBitRate' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReversePlaybackEndTime:'>
<arg declared_type64='CMTime' index='0' name='reversePlaybackEndTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setSeekingWaitsForVideoCompositionRendering:'>
<arg declared_type64='BOOL' index='0' name='seekingWaitsForVideoCompositionRendering' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextStyleRules:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='textStyleRules' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoComposition:'>
<arg declared_type64='AVVideoComposition * _Nullable' index='0' name='videoComposition' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='status'>
<retval declared_type64='AVPlayerItemStatus' type64='q'/>
</method>
<method selector='stepByCount:'>
<arg declared_type64='NSInteger' index='0' name='stepCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStyleRules'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='timebase'>
<retval declared_type64='CMTimebaseRef _Nullable' type64='^{OpaqueCMTimebase=}'/>
</method>
<method selector='timedMetadata'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='tracks'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPlayerItemAccessLog'>
<method selector='events'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type64='NSStringEncoding' type64='Q'/>
</method>
</class>
<class name='AVPlayerItemAccessLogEvent'>
<method selector='URI'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='downloadOverdue'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='durationWatched'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='indicatedBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='mediaRequestsWWAN'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfBytesTransferred'>
<retval declared_type64='long long' type64='q'/>
</method>
<method selector='numberOfDroppedVideoFrames'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfMediaRequests'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfSegmentsDownloaded'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfServerAddressChanges'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='numberOfStalls'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='observedBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='observedBitrateStandardDeviation'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='observedMaxBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='observedMinBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='playbackStartDate'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='playbackStartOffset'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='playbackType'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='segmentsDownloadedDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='serverAddress'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='startupTime'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='switchBitrate'>
<retval declared_type64='double' type64='d'/>
</method>
<method selector='transferDuration'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
</class>
<class name='AVPlayerItemErrorLog'>
<method selector='events'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='extendedLogData'>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='extendedLogDataStringEncoding'>
<retval declared_type64='NSStringEncoding' type64='Q'/>
</method>
</class>
<class name='AVPlayerItemErrorLogEvent'>
<method selector='URI'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='date'>
<retval declared_type64='NSDate * _Nullable' type64='@'/>
</method>
<method selector='errorComment'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='errorDomain'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='errorStatusCode'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='playbackSessionID'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='serverAddress'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPlayerItemLegibleOutput'>
<method selector='advanceIntervalForDelegateInvocation'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='initWithMediaSubtypesForNativeRepresentation:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='subtypes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAdvanceIntervalForDelegateInvocation:'>
<arg declared_type64='NSTimeInterval' index='0' name='advanceIntervalForDelegateInvocation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setTextStylingResolution:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='textStylingResolution' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='textStylingResolution'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVPlayerItemMetadataOutput'>
<method selector='advanceIntervalForDelegateInvocation'>
<retval declared_type64='NSTimeInterval' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='initWithIdentifiers:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='identifiers' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='setAdvanceIntervalForDelegateInvocation:'>
<arg declared_type64='NSTimeInterval' index='0' name='advanceIntervalForDelegateInvocation' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVPlayerItemOutput'>
<method selector='itemTimeForCVTimeStamp:'>
<arg declared_type64='CVTimeStamp' index='0' name='timestamp' type64='{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='itemTimeForHostTime:'>
<arg declared_type64='CFTimeInterval' index='0' name='hostTimeInSeconds' type64='d'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='itemTimeForMachAbsoluteTime:'>
<arg declared_type64='int64_t' index='0' name='machAbsoluteTime' type64='q'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='setSuppressesPlayerRendering:'>
<arg declared_type64='BOOL' index='0' name='suppressesPlayerRendering' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='suppressesPlayerRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='AVPlayerItemTrack'>
<method selector='assetTrack'>
<retval declared_type64='AVAssetTrack * _Nonnull' type64='@'/>
</method>
<method selector='currentVideoFrameRate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoFieldMode:'>
<arg declared_type64='NSString * _Nullable' index='0' name='videoFieldMode' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoFieldMode'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
</class>
<class name='AVPlayerItemVideoOutput'>
<method selector='copyPixelBufferForItemTime:itemTimeForDisplay:'>
<arg declared_type64='CMTime' index='0' name='itemTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CMTime * _Nullable' index='1' name='outItemTimeForDisplay' type64='^{_CMTime=qiIq}'/>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='delegate'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='delegateQueue'>
<retval declared_type64='dispatch_queue_t _Nullable' type64='@'/>
</method>
<method selector='hasNewPixelBufferForItemTime:'>
<arg declared_type64='CMTime' index='0' name='itemTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithPixelBufferAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='pixelBufferAttributes' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='requestNotificationOfMediaDataChangeWithAdvanceInterval:'>
<arg declared_type64='NSTimeInterval' index='0' name='interval' type64='d'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setDelegate:queue:'>
<arg declared_type64='id _Nullable' index='0' name='delegate' type64='@'/>
<arg declared_type64='dispatch_queue_t _Nullable' index='1' name='delegateQueue' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVPlayerLayer'>
<method selector='isReadyForDisplay'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='pixelBufferAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='player'>
<retval declared_type64='AVPlayer * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='playerLayerWithPlayer:'>
<arg declared_type64='AVPlayer * _Nullable' index='0' name='player' type64='@'/>
<retval declared_type64='AVPlayerLayer * _Nonnull' type64='@'/>
</method>
<method selector='setPixelBufferAttributes:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='pixelBufferAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPlayer:'>
<arg declared_type64='AVPlayer * _Nullable' index='0' name='player' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoGravity:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='videoGravity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoGravity'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='videoRect'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='AVPlayerMediaSelectionCriteria'>
<method selector='initWithPreferredLanguages:preferredMediaCharacteristics:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='preferredLanguages' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='preferredMediaCharacteristics' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='preferredLanguages'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='preferredMediaCharacteristics'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='AVQueuePlayer'>
<method selector='advanceToNextItem'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='canInsertItem:afterItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='AVPlayerItem * _Nullable' index='1' name='afterItem' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='initWithItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='AVQueuePlayer * _Nonnull' type64='@'/>
</method>
<method selector='insertItem:afterItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='item' type64='@'/>
<arg declared_type64='AVPlayerItem * _Nullable' index='1' name='afterItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='queuePlayerWithItems:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='removeAllItems'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='item' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVSampleBufferDisplayLayer'>
<method selector='controlTimebase'>
<retval declared_type64='CMTimebaseRef _Nullable' type64='^{OpaqueCMTimebase=}'/>
</method>
<method selector='enqueueSampleBuffer:'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='error'>
<retval declared_type64='NSError * _Nullable' type64='@'/>
</method>
<method selector='flush'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='flushAndRemoveImage'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='isReadyForMoreMediaData'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='requestMediaDataWhenReadyOnQueue:usingBlock:'>
<arg declared_type64='dispatch_queue_t _Nonnull' index='0' name='queue' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(void)' function_pointer='true' index='1' name='block' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setControlTimebase:'>
<arg declared_type64='CMTimebaseRef _Nullable' index='0' name='controlTimebase' type64='^{OpaqueCMTimebase=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVideoGravity:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='videoGravity' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='status'>
<retval declared_type64='AVQueuedSampleBufferRenderingStatus' type64='q'/>
</method>
<method selector='stopRequestingMediaData'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='videoGravity'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVSampleBufferGenerator'>
<method selector='createSampleBufferForRequest:'>
<arg declared_type64='AVSampleBufferRequest * _Nonnull' index='0' name='request' type64='@'/>
<retval declared_type64='CMSampleBufferRef _Nonnull' type64='^{opaqueCMSampleBuffer=}'/>
</method>
<method selector='initWithAsset:timebase:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='CMTimebaseRef _Nullable' index='1' name='timebase' type64='^{OpaqueCMTimebase=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='notifyOfDataReadyForSampleBuffer:completionHandler:'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sbuf' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='void (^ _Nonnull)(BOOL, NSError * _Nonnull)' function_pointer='true' index='1' name='completionHandler' type64='@?'>
<arg declared_type64='BOOL' type64='B'/>
<arg declared_type64='NSError * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='AVSampleBufferRequest'>
<method selector='direction'>
<retval declared_type64='AVSampleBufferRequestDirection' type64='q'/>
</method>
<method selector='initWithStartCursor:'>
<arg declared_type64='AVSampleCursor * _Nonnull' index='0' name='startCursor' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='limitCursor'>
<retval declared_type64='AVSampleCursor * _Nullable' type64='@'/>
</method>
<method selector='maxSampleCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='mode'>
<retval declared_type64='AVSampleBufferRequestMode' type64='q'/>
</method>
<method selector='overrideTime'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='preferredMinSampleCount'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='setDirection:'>
<arg declared_type64='AVSampleBufferRequestDirection' index='0' name='direction' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLimitCursor:'>
<arg declared_type64='AVSampleCursor * _Nullable' index='0' name='limitCursor' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMaxSampleCount:'>
<arg declared_type64='NSInteger' index='0' name='maxSampleCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setMode:'>
<arg declared_type64='AVSampleBufferRequestMode' index='0' name='mode' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOverrideTime:'>
<arg declared_type64='CMTime' index='0' name='overrideTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPreferredMinSampleCount:'>
<arg declared_type64='NSInteger' index='0' name='preferredMinSampleCount' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='startCursor'>
<retval declared_type64='AVSampleCursor * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVSampleCursor'>
<method selector='comparePositionInDecodeOrderWithPositionOfCursor:'>
<arg declared_type64='AVSampleCursor * _Nonnull' index='0' name='cursor' type64='@'/>
<retval declared_type64='NSComparisonResult' type64='q'/>
</method>
<method selector='copyCurrentSampleFormatDescription'>
<retval declared_type64='CMFormatDescriptionRef _Nonnull' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='currentChunkInfo'>
<retval declared_type64='AVSampleCursorChunkInfo' type64='{_AVSampleCursorChunkInfo=qBBB}'/>
</method>
<method selector='currentChunkStorageRange'>
<retval declared_type64='AVSampleCursorStorageRange' type64='{_AVSampleCursorStorageRange=qq}'/>
</method>
<method selector='currentChunkStorageURL'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
<method selector='currentSampleDependencyInfo'>
<retval declared_type64='AVSampleCursorDependencyInfo' type64='{_AVSampleCursorDependencyInfo=BBBBBB}'/>
</method>
<method selector='currentSampleDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='currentSampleIndexInChunk'>
<retval declared_type64='int64_t' type64='q'/>
</method>
<method selector='currentSampleStorageRange'>
<retval declared_type64='AVSampleCursorStorageRange' type64='{_AVSampleCursorStorageRange=qq}'/>
</method>
<method selector='currentSampleSyncInfo'>
<retval declared_type64='AVSampleCursorSyncInfo' type64='{_AVSampleCursorSyncInfo=BBB}'/>
</method>
<method selector='decodeTimeStamp'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='presentationTimeStamp'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='samplesRequiredForDecoderRefresh'>
<retval declared_type64='NSInteger' type64='q'/>
</method>
<method selector='samplesWithEarlierDecodeTimeStampsMayHaveLaterPresentationTimeStampsThanCursor:'>
<arg declared_type64='AVSampleCursor * _Nonnull' index='0' name='cursor' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='samplesWithLaterDecodeTimeStampsMayHaveEarlierPresentationTimeStampsThanCursor:'>
<arg declared_type64='AVSampleCursor * _Nonnull' index='0' name='cursor' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='stepByDecodeTime:wasPinned:'>
<arg declared_type64='CMTime' index='0' name='deltaDecodeTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='BOOL * _Nullable' index='1' name='outWasPinned' type64='^B'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='stepByPresentationTime:wasPinned:'>
<arg declared_type64='CMTime' index='0' name='deltaPresentationTime' type64='{_CMTime=qiIq}'/>
<arg declared_type64='BOOL * _Nullable' index='1' name='outWasPinned' type64='^B'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='stepInDecodeOrderByCount:'>
<arg declared_type64='int64_t' index='0' name='stepCount' type64='q'/>
<retval declared_type64='int64_t' type64='q'/>
</method>
<method selector='stepInPresentationOrderByCount:'>
<arg declared_type64='int64_t' index='0' name='stepCount' type64='q'/>
<retval declared_type64='int64_t' type64='q'/>
</method>
</class>
<class name='AVSynchronizedLayer'>
<method selector='playerItem'>
<retval declared_type64='AVPlayerItem * _Nullable' type64='@'/>
</method>
<method selector='setPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nullable' index='0' name='playerItem' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='synchronizedLayerWithPlayerItem:'>
<arg declared_type64='AVPlayerItem * _Nonnull' index='0' name='playerItem' type64='@'/>
<retval declared_type64='AVSynchronizedLayer * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVTextStyleRule'>
<method selector='initWithTextMarkupAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='textMarkupAttributes' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithTextMarkupAttributes:textSelector:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='textMarkupAttributes' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='textSelector' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='propertyListForTextStyleRules:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='textStyleRules' type64='@'/>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='textMarkupAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='textSelector'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='textStyleRuleWithTextMarkupAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='textMarkupAttributes' type64='@'/>
<retval declared_type64='AVTextStyleRule * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='textStyleRuleWithTextMarkupAttributes:textSelector:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='textMarkupAttributes' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='textSelector' type64='@'/>
<retval declared_type64='AVTextStyleRule * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='textStyleRulesFromPropertyList:'>
<arg declared_type64='id _Nonnull' index='0' name='plist' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
</class>
<class name='AVTimedMetadataGroup'>
<method selector='copyFormatDescription'>
<retval declared_type64='CMMetadataFormatDescriptionRef _Nullable' type64='^{opaqueCMFormatDescription=}'/>
</method>
<method selector='initWithItems:timeRange:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='items' type64='@'/>
<arg declared_type64='CMTimeRange' index='1' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithSampleBuffer:'>
<arg declared_type64='CMSampleBufferRef _Nonnull' index='0' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='items'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVURLAsset'>
<method selector='URL'>
<retval declared_type64='NSURL * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='URLAssetWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='audiovisualMIMETypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='audiovisualTypes'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='compatibleTrackForCompositionTrack:'>
<arg declared_type64='AVCompositionTrack * _Nonnull' index='0' name='compositionTrack' type64='@'/>
<retval declared_type64='AVAssetTrack * _Nullable' type64='@'/>
</method>
<method selector='initWithURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='URL' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='isPlayableExtendedMIMEType:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='extendedMIMEType' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader'>
<retval declared_type64='AVAssetResourceLoader * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVVideoComposition'>
<method selector='animationTool'>
<retval declared_type64='AVVideoCompositionCoreAnimationTool * _Nullable' type64='@'/>
</method>
<method selector='customVideoCompositorClass'>
<retval declared_type64='Class _Nullable' type64='#'/>
</method>
<method selector='frameDuration'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='instructions'>
<retval declared_type64='NSArray&gt; * _Nonnull' type64='@'/>
</method>
<method selector='isValidForAsset:timeRange:validationDelegate:'>
<arg declared_type64='AVAsset * _Nullable' index='0' name='asset' type64='@'/>
<arg declared_type64='CMTimeRange' index='1' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='id _Nullable' index='2' name='validationDelegate' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='renderSize'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='videoCompositionWithAsset:applyingCIFiltersWithHandler:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<arg declared_type64='void (^ _Nonnull)(AVAsynchronousCIImageFilteringRequest * _Nonnull)' function_pointer='true' index='1' name='applier' type64='@?'>
<arg declared_type64='AVAsynchronousCIImageFilteringRequest * _Nonnull' type64='@'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='AVVideoComposition * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionWithPropertiesOfAsset:'>
<arg declared_type64='AVAsset * _Nonnull' index='0' name='asset' type64='@'/>
<retval declared_type64='AVVideoComposition * _Nonnull' type64='@'/>
</method>
</class>
<class name='AVVideoCompositionCoreAnimationTool'>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='layer' type64='@'/>
<arg declared_type64='CMPersistentTrackID' index='1' name='trackID' type64='i'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:'>
<arg declared_type64='CALayer * _Nonnull' index='0' name='videoLayer' type64='@'/>
<arg declared_type64='CALayer * _Nonnull' index='1' name='animationLayer' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='videoLayers' type64='@'/>
<arg declared_type64='CALayer * _Nonnull' index='1' name='animationLayer' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='AVVideoCompositionInstruction'>
<method selector='backgroundColor'>
<retval declared_type64='CGColorRef _Nullable' type64='^{CGColor=}'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='layerInstructions'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='passthroughTrackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method selector='requiredSourceTrackIDs'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</class>
<class name='AVVideoCompositionLayerInstruction'>
<method selector='getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CGRect * _Nullable' index='1' name='startCropRectangle' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect * _Nullable' index='2' name='endCropRectangle' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CMTimeRange * _Nullable' index='3' name='timeRange' type64='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getOpacityRampForTime:startOpacity:endOpacity:timeRange:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='float * _Nullable' index='1' name='startOpacity' type64='^f'/>
<arg declared_type64='float * _Nullable' index='2' name='endOpacity' type64='^f'/>
<arg declared_type64='CMTimeRange * _Nullable' index='3' name='timeRange' type64='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='getTransformRampForTime:startTransform:endTransform:timeRange:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='CGAffineTransform * _Nullable' index='1' name='startTransform' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CGAffineTransform * _Nullable' index='2' name='endTransform' type64='^{CGAffineTransform=dddddd}'/>
<arg declared_type64='CMTimeRange * _Nullable' index='3' name='timeRange' type64='^{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='trackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
</class>
<class name='AVVideoCompositionRenderContext'>
<method selector='edgeWidths'>
<retval declared_type64='AVEdgeWidths' type64='{_AVEdgeWidths=dddd}'/>
</method>
<method selector='highQualityRendering'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='newPixelBuffer'>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='pixelAspectRatio'>
<retval declared_type64='AVPixelAspectRatio' type64='{_AVPixelAspectRatio=qq}'/>
</method>
<method selector='renderScale'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='renderTransform'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='size'>
<retval declared_type64='CGSize' type64='{CGSize=dd}'/>
</method>
<method selector='videoComposition'>
<retval declared_type64='AVVideoComposition * _Nonnull' type64='@'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCMTimeForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method selector='decodeCMTimeMappingForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CMTimeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
<method selector='decodeCMTimeRangeForKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='encodeCMTime:forKey:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeCMTimeMapping:forKey:'>
<arg declared_type64='CMTimeMapping' index='0' name='timeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='encodeCMTimeRange:forKey:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSError * _Nullable' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioRecorderDidFinishRecording:successfully:'>
<arg declared_type64='AVAudioRecorder * _Nonnull' index='0' name='recorder' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioRecorderEncodeErrorDidOccur:error:'>
<arg declared_type64='AVAudioRecorder * _Nonnull' index='0' name='recorder' type64='@'/>
<arg declared_type64='NSError * _Nullable' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='cancelAllPendingVideoCompositionRequests'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didDropSampleBuffer:fromConnection:'>
<arg declared_type64='AVCaptureOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='CMSampleBufferRef' index='1' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='AVCaptureConnection*' index='2' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='outputFileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<arg declared_type64='NSError*' index='3' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didOutputMetadataObjects:fromConnection:'>
<arg declared_type64='AVCaptureOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSArray*' index='1' name='metadataObjects' type64='@'/>
<arg declared_type64='AVCaptureConnection*' index='2' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didOutputSampleBuffer:fromConnection:'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='CMSampleBufferRef' index='1' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='AVCaptureConnection*' index='2' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didPauseRecordingToOutputFileAtURL:fromConnections:'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='fileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didResumeRecordingToOutputFileAtURL:fromConnections:'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='fileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='fileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:willFinishRecordingToOutputFileAtURL:fromConnections:error:'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='fileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<arg declared_type64='NSError*' index='3' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutputShouldProvideSampleAccurateRecordingStart:'>
<arg declared_type64='AVCaptureOutput*' index='0' name='captureOutput' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='containsTweening'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='destinationForMixer:bus:'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='mixer' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='AVAudioMixingDestination * _Nullable' type64='@'/>
</method>
<method selector='enablePostProcessing'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='isAssociatedWithFragmentMinder'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:'>
<arg declared_type64='AVPlayerItemLegibleOutput * _Nonnull' index='0' name='output' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='strings' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='nativeSamples' type64='@'/>
<arg declared_type64='CMTime' index='3' name='itemTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='keys' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:'>
<arg declared_type64='AVPlayerItemMetadataOutput * _Nonnull' index='0' name='output' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='groups' type64='@'/>
<arg declared_type64='AVPlayerItemTrack * _Nonnull' index='2' name='track' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='obstruction'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='occlusion'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='outputMediaDataWillChange:'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outputSequenceWasFlushed:'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='pan'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='passthroughTrackID'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method selector='position'>
<retval declared_type64='AVAudio3DPoint' type64='{AVAudio3DPoint=fff}'/>
</method>
<method selector='rate'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='renderContextChanged:'>
<arg declared_type64='AVVideoCompositionRenderContext * _Nonnull' index='0' name='newRenderContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderingAlgorithm'>
<retval declared_type64='AVAudio3DMixingRenderingAlgorithm' type64='q'/>
</method>
<method selector='requiredPixelBufferAttributesForRenderContext'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='requiredSourceTrackIDs'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='resourceLoader:didCancelAuthenticationChallenge:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='NSURLAuthenticationChallenge * _Nonnull' index='1' name='authenticationChallenge' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resourceLoader:didCancelLoadingRequest:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceLoadingRequest * _Nonnull' index='1' name='loadingRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resourceLoader:shouldWaitForLoadingOfRequestedResource:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceLoadingRequest * _Nonnull' index='1' name='loadingRequest' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader:shouldWaitForRenewalOfRequestedResource:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceRenewalRequest * _Nonnull' index='1' name='renewalRequest' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader:shouldWaitForResponseToAuthenticationChallenge:'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='NSURLAuthenticationChallenge * _Nonnull' index='1' name='authenticationChallenge' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='reverbBlend'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setObstruction:'>
<arg declared_type64='float' index='0' name='obstruction' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOcclusion:'>
<arg declared_type64='float' index='0' name='occlusion' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPan:'>
<arg declared_type64='float' index='0' name='pan' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type64='AVAudio3DPoint' index='0' name='position' type64='{AVAudio3DPoint=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderingAlgorithm:'>
<arg declared_type64='AVAudio3DMixingRenderingAlgorithm' index='0' name='renderingAlgorithm' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReverbBlend:'>
<arg declared_type64='float' index='0' name='reverbBlend' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='sourcePixelBufferAttributes'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='startVideoCompositionRequest:'>
<arg declared_type64='AVAsynchronousVideoCompositionRequest * _Nonnull' index='0' name='asyncVideoCompositionRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='statusOfValueForKey:error:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='AVKeyValueStatus' type64='q'/>
</method>
<method selector='timeRange'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='CMTimeRange' index='1' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='videoCompositionInstruction' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='videoCompositionInstruction' type64='@'/>
<arg declared_type64='AVVideoCompositionLayerInstruction * _Nonnull' index='2' name='layerInstruction' type64='@'/>
<arg declared_type64='AVAsset * _Nonnull' index='3' name='asset' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='volume'>
<retval declared_type64='float' type64='f'/>
</method>
</class>
<class name='NSValue'>
<method selector='CMTimeMappingValue'>
<retval declared_type64='CMTimeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
</method>
<method selector='CMTimeRangeValue'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
<method selector='CMTimeValue'>
<retval declared_type64='CMTime' type64='{_CMTime=qiIq}'/>
</method>
<method class_method='true' selector='valueWithCMTime:'>
<arg declared_type64='CMTime' index='0' name='time' type64='{_CMTime=qiIq}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithCMTimeMapping:'>
<arg declared_type64='CMTimeMapping' index='0' name='timeMapping' type64='{_CMTimeMapping={?={?=qiIq}{?=qiIq}}{?={?=qiIq}{?=qiIq}}}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='valueWithCMTimeRange:'>
<arg declared_type64='CMTimeRange' index='0' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='NSValue * _Nonnull' type64='@'/>
</method>
</class>
<informal_protocol name='AVAssetResourceLoaderDelegate'>
<method selector='resourceLoader:didCancelAuthenticationChallenge:' type64='v32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='NSURLAuthenticationChallenge * _Nonnull' index='1' name='authenticationChallenge' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resourceLoader:didCancelLoadingRequest:' type64='v32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceLoadingRequest * _Nonnull' index='1' name='loadingRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='resourceLoader:shouldWaitForLoadingOfRequestedResource:' type64='B32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceLoadingRequest * _Nonnull' index='1' name='loadingRequest' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader:shouldWaitForRenewalOfRequestedResource:' type64='B32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='AVAssetResourceRenewalRequest * _Nonnull' index='1' name='renewalRequest' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='resourceLoader:shouldWaitForResponseToAuthenticationChallenge:' type64='B32@0:8@16@24'>
<arg declared_type64='AVAssetResourceLoader * _Nonnull' index='0' name='resourceLoader' type64='@'/>
<arg declared_type64='NSURLAuthenticationChallenge * _Nonnull' index='1' name='authenticationChallenge' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVAsynchronousKeyValueLoading'>
<method selector='loadValuesAsynchronouslyForKeys:completionHandler:' type64='v32@0:8@16@?24'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='keys' type64='@'/>
<arg declared_type64='void (^ _Nullable)(void)' function_pointer='true' index='1' name='handler' type64='@?'>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='statusOfValueForKey:error:' type64='q32@0:8@16^@24'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='1' name='outError' type64='^@'/>
<retval declared_type64='AVKeyValueStatus' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudio3DMixing'>
<method selector='obstruction' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='occlusion' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='position' type64='{AVAudio3DPoint=fff}16@0:8'>
<retval declared_type64='AVAudio3DPoint' type64='{AVAudio3DPoint=fff}'/>
</method>
<method selector='rate' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='renderingAlgorithm' type64='q16@0:8'>
<retval declared_type64='AVAudio3DMixingRenderingAlgorithm' type64='q'/>
</method>
<method selector='reverbBlend' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setObstruction:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='obstruction' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOcclusion:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='occlusion' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPosition:' type64='v28@0:8{AVAudio3DPoint=fff}16'>
<arg declared_type64='AVAudio3DPoint' index='0' name='position' type64='{AVAudio3DPoint=fff}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRate:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='rate' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setRenderingAlgorithm:' type64='v24@0:8q16'>
<arg declared_type64='AVAudio3DMixingRenderingAlgorithm' index='0' name='renderingAlgorithm' type64='q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReverbBlend:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='reverbBlend' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioMixing'>
<method selector='destinationForMixer:bus:' type64='@32@0:8@16Q24'>
<arg declared_type64='AVAudioNode * _Nonnull' index='0' name='mixer' type64='@'/>
<arg declared_type64='AVAudioNodeBus' index='1' name='bus' type64='Q'/>
<retval declared_type64='AVAudioMixingDestination * _Nullable' type64='@'/>
</method>
<method selector='setVolume:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='volume' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='volume' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioPlayerDelegate'>
<method selector='audioPlayerDecodeErrorDidOccur:error:' type64='v32@0:8@16@24'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='NSError * _Nullable' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:' type64='v28@0:8@16B24'>
<arg declared_type64='AVAudioPlayer * _Nonnull' index='0' name='player' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioRecorderDelegate'>
<method selector='audioRecorderDidFinishRecording:successfully:' type64='v28@0:8@16B24'>
<arg declared_type64='AVAudioRecorder * _Nonnull' index='0' name='recorder' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='audioRecorderEncodeErrorDidOccur:error:' type64='v32@0:8@16@24'>
<arg declared_type64='AVAudioRecorder * _Nonnull' index='0' name='recorder' type64='@'/>
<arg declared_type64='NSError * _Nullable' index='1' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioStereoMixing'>
<method selector='pan' type64='f16@0:8'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='setPan:' type64='v20@0:8f16'>
<arg declared_type64='float' index='0' name='pan' type64='f'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureAudioDataOutputSampleBufferDelegate'>
<method selector='captureOutput:didOutputSampleBuffer:fromConnection:' type64='v40@0:8@16^{opaqueCMSampleBuffer=}24@32'>
<arg declared_type64='AVCaptureOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='CMSampleBufferRef' index='1' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='AVCaptureConnection*' index='2' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureFileOutputDelegate'>
<method selector='captureOutput:didOutputSampleBuffer:fromConnection:' type64='v40@0:8@16^{opaqueCMSampleBuffer=}24@32'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='CMSampleBufferRef' index='1' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='AVCaptureConnection*' index='2' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutputShouldProvideSampleAccurateRecordingStart:' type64='B24@0:8@16'>
<arg declared_type64='AVCaptureOutput*' index='0' name='captureOutput' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureFileOutputRecordingDelegate'>
<method selector='captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='outputFileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<arg declared_type64='NSError*' index='3' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didPauseRecordingToOutputFileAtURL:fromConnections:' type64='v40@0:8@16@24@32'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='fileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didResumeRecordingToOutputFileAtURL:fromConnections:' type64='v40@0:8@16@24@32'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='fileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:' type64='v40@0:8@16@24@32'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='fileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:willFinishRecordingToOutputFileAtURL:fromConnections:error:' type64='v48@0:8@16@24@32@40'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSURL*' index='1' name='fileURL' type64='@'/>
<arg declared_type64='NSArray*' index='2' name='connections' type64='@'/>
<arg declared_type64='NSError*' index='3' name='error' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureMetadataOutputObjectsDelegate'>
<method selector='captureOutput:didOutputMetadataObjects:fromConnection:' type64='v40@0:8@16@24@32'>
<arg declared_type64='AVCaptureOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='NSArray*' index='1' name='metadataObjects' type64='@'/>
<arg declared_type64='AVCaptureConnection*' index='2' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVCaptureVideoDataOutputSampleBufferDelegate'>
<method selector='captureOutput:didDropSampleBuffer:fromConnection:' type64='v40@0:8@16^{opaqueCMSampleBuffer=}24@32'>
<arg declared_type64='AVCaptureOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='CMSampleBufferRef' index='1' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='AVCaptureConnection*' index='2' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='captureOutput:didOutputSampleBuffer:fromConnection:' type64='v40@0:8@16^{opaqueCMSampleBuffer=}24@32'>
<arg declared_type64='AVCaptureFileOutput*' index='0' name='captureOutput' type64='@'/>
<arg declared_type64='CMSampleBufferRef' index='1' name='sampleBuffer' type64='^{opaqueCMSampleBuffer=}'/>
<arg declared_type64='AVCaptureConnection*' index='2' name='connection' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVFragmentMinding'>
<method selector='isAssociatedWithFragmentMinder' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemLegibleOutputPushDelegate'>
<method selector='legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:' type64='v64@0:8@16@24@32{?=qiIq}40'>
<arg declared_type64='AVPlayerItemLegibleOutput * _Nonnull' index='0' name='output' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='strings' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='2' name='nativeSamples' type64='@'/>
<arg declared_type64='CMTime' index='3' name='itemTime' type64='{_CMTime=qiIq}'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemMetadataOutputPushDelegate'>
<method selector='metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:' type64='v40@0:8@16@24@32'>
<arg declared_type64='AVPlayerItemMetadataOutput * _Nonnull' index='0' name='output' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='groups' type64='@'/>
<arg declared_type64='AVPlayerItemTrack * _Nonnull' index='2' name='track' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemOutputPullDelegate'>
<method selector='outputMediaDataWillChange:' type64='v24@0:8@16'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='sender' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='outputSequenceWasFlushed:' type64='v24@0:8@16'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVPlayerItemOutputPushDelegate'>
<method selector='outputSequenceWasFlushed:' type64='v24@0:8@16'>
<arg declared_type64='AVPlayerItemOutput * _Nonnull' index='0' name='output' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositing'>
<method selector='cancelAllPendingVideoCompositionRequests' type64='v16@0:8'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='renderContextChanged:' type64='v24@0:8@16'>
<arg declared_type64='AVVideoCompositionRenderContext * _Nonnull' index='0' name='newRenderContext' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='requiredPixelBufferAttributesForRenderContext' type64='@16@0:8'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='sourcePixelBufferAttributes' type64='@16@0:8'>
<retval declared_type64='NSDictionary * _Nullable' type64='@'/>
</method>
<method selector='startVideoCompositionRequest:' type64='v24@0:8@16'>
<arg declared_type64='AVAsynchronousVideoCompositionRequest * _Nonnull' index='0' name='asyncVideoCompositionRequest' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositionInstruction'>
<method selector='containsTweening' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='enablePostProcessing' type64='B16@0:8'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='passthroughTrackID' type64='i16@0:8'>
<retval declared_type64='CMPersistentTrackID' type64='i'/>
</method>
<method selector='requiredSourceTrackIDs' type64='@16@0:8'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='timeRange' type64='{?={?=qiIq}{?=qiIq}}16@0:8'>
<retval declared_type64='CMTimeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
</method>
</informal_protocol>
<informal_protocol name='AVVideoCompositionValidationHandling'>
<method selector='videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:' type64='B72@0:8@16{?={?=qiIq}{?=qiIq}}24'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='CMTimeRange' index='1' name='timeRange' type64='{_CMTimeRange={?=qiIq}{?=qiIq}}'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:' type64='B32@0:8@16@24'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='videoCompositionInstruction' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:' type64='B48@0:8@16@24@32@40'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='videoCompositionInstruction' type64='@'/>
<arg declared_type64='AVVideoCompositionLayerInstruction * _Nonnull' index='2' name='layerInstruction' type64='@'/>
<arg declared_type64='AVAsset * _Nonnull' index='3' name='asset' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:' type64='B32@0:8@16@24'>
<arg declared_type64='AVVideoComposition * _Nonnull' index='0' name='videoComposition' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
</signatures>
