<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Metal.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/IOSurface.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/AudioUnit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreData.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework'/>
<depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
<depends_on path='/System/Library/Frameworks/DiskArbitration.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/ColorSync.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreImage.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<cftype name='NSModalSession' type='^{_NSModalSession=}'/>
<cftype name='NSOpenGLContextAuxiliary' type='^{_CGLContextObject=}'/>
<cftype name='NSScreenAuxiliaryOpaque' type='^{NSScreenAuxiliary=}'/>
<cftype name='_NSThreadPrivate' type='^{NSThreadPrivate=}'/>
<constant const='true' declared_type='NSBitmapFormat' name='NS16BitBigEndianBitmapFormat' type='I' type64='Q'/>
<constant const='true' declared_type='NSBitmapFormat' name='NS16BitLittleEndianBitmapFormat' type='I' type64='Q'/>
<constant const='true' declared_type='NSBitmapFormat' name='NS32BitBigEndianBitmapFormat' type='I' type64='Q'/>
<constant const='true' declared_type='NSBitmapFormat' name='NS32BitLittleEndianBitmapFormat' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventSubtype' name='NSAWTEventType' type='s'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSAbortModalException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSAbortPrintingException' type='@'/>
<constant const='true' declared_type='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionApplicationIcon' type='@'/>
<constant const='true' declared_type='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionApplicationName' type='@'/>
<constant const='true' declared_type='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionApplicationVersion' type='@'/>
<constant const='true' declared_type='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionCredits' type='@'/>
<constant const='true' declared_type='NSAboutPanelOptionKey _Nonnull' name='NSAboutPanelOptionVersion' type='@'/>
<constant const='true' declared_type='NSButtonType' name='NSAcceleratorButton' type='I' type64='Q'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityActivationPointAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityAllowedValuesAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityAlternateUIVisibleAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAnnotationAttributeKey _Nonnull' name='NSAccessibilityAnnotationElement' type='@'/>
<constant const='true' declared_type='NSAccessibilityAnnotationAttributeKey _Nonnull' name='NSAccessibilityAnnotationLabel' type='@'/>
<constant const='true' declared_type='NSAccessibilityAnnotationAttributeKey _Nonnull' name='NSAccessibilityAnnotationLocation' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityAnnotationTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationUserInfoKey _Nonnull' name='NSAccessibilityAnnouncementKey' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityAnnouncementRequestedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityApplicationActivatedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityApplicationDeactivatedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityApplicationHiddenNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityApplicationRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityApplicationShownNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilitySortDirectionValue _Nonnull' name='NSAccessibilityAscendingSortDirectionValue' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityAttachmentTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityAttributedStringForRangeParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityAutocorrectedTextAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityBackgroundColorTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityBoundsForRangeParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityBrowserRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityBusyIndicatorRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityButtonRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityCancelAction' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityCancelButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityCellForColumnAndRowParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityCellRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityCenterTabStopMarkerTypeValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityCentimetersUnitValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityCheckBoxRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityChildrenAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityClearButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityCloseButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityCloseButtonSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityCollectionListSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityColorWellRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnCountAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnHeaderUIElementsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnIndexRangeAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityColumnRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnTitlesAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityColumnsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityComboBoxRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityConfirmAction' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityContainsProtectedContentAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityContentListSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityContentsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityCreatedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityCriticalValueAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityCustomTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityDecimalTabStopMarkerTypeValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityDecrementAction' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDecrementArrowSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDecrementButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDecrementPageSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDefaultButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDefinitionListSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityDeleteAction' type='@'/>
<constant const='true' declared_type='NSAccessibilitySortDirectionValue _Nonnull' name='NSAccessibilityDescendingSortDirectionValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDescriptionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDescriptionListSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityDialogSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDisclosedByRowAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDisclosedRowsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDisclosingAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDisclosureLevelAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityDisclosureTriangleRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityDrawerCreatedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityDrawerRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityEditedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityEnabledAttribute' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSAccessibilityErrorCodeExceptionInfo' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSAccessibilityException' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityExpandedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityExtrasMenuBarAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFilenameAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityFirstLineIndentMarkerTypeValue' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityFloatingWindowSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFocusedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFocusedUIElementAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityFocusedUIElementChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFocusedWindowAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityFocusedWindowChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityFontAttributeKey _Nonnull' name='NSAccessibilityFontFamilyKey' type='@'/>
<constant const='true' declared_type='NSAccessibilityFontAttributeKey _Nonnull' name='NSAccessibilityFontNameKey' type='@'/>
<constant const='true' declared_type='NSAccessibilityFontAttributeKey _Nonnull' name='NSAccessibilityFontSizeKey' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityFontTextAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityForegroundColorTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFrontmostAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityFullScreenButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityFullScreenButtonSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityGridRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityGroupRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityGrowAreaAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityGrowAreaRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityHandleRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHandlesAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityHeadIndentMarkerTypeValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHeaderAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHelpAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityHelpTagCreatedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityHelpTagRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHiddenAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityOrientationValue _Nonnull' name='NSAccessibilityHorizontalOrientationValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHorizontalScrollBarAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHorizontalUnitDescriptionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityHorizontalUnitsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityIdentifierAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityImageRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityInchesUnitValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityIncrementAction' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityIncrementArrowSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityIncrementButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityIncrementPageSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityIncrementorRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityIndexAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityInsertionPointLineNumberAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityLabelUIElementsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityLabelValueAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityLanguageTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityLayoutAreaRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityLayoutChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityLayoutItemRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityLayoutPointForScreenPointParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityLeftTabStopMarkerTypeValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityLevelIndicatorRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityLineForIndexParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityLinkRole' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityLinkTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityLinkedUIElementsAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityListItemIndexTextAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityListItemLevelTextAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityListItemPrefixTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityListRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMainAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMainWindowAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityMainWindowChangedNotification' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityMarkedMisspelledTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerGroupUIElementAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerTypeAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerTypeDescriptionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerUIElementsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMarkerValuesAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMatteContentUIElementAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMatteHoleAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityMatteRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMaxValueAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMenuBarAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuBarItemRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuBarRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuButtonRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuItemRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityMenuRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMinValueAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMinimizeButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityMinimizeButtonSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityMinimizedAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityMisspelledTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityModalAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityMovedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityNextContentsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityNumberOfCharactersAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityOrderedByRowAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityOrientationAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityOutlineRole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityOutlineRowSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityOverflowButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityPageRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityParentAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityPicasUnitValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityPickAction' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityPlaceholderValueAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityPointsUnitValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityPopUpButtonRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityPopoverRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityPositionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityPressAction' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityPreviousContentsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationUserInfoKey _Nonnull' name='NSAccessibilityPriorityKey' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityProgressIndicatorRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityProxyAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityRTFForRangeParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityRadioButtonRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityRadioGroupRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityRaiseAction' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityRangeForIndexParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityRangeForLineParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityRangeForPositionParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityRatingIndicatorSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityRelevanceIndicatorRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRequiredAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityResizedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityRightTabStopMarkerTypeValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRoleAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRoleDescriptionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityRowCollapsedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRowCountAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityRowCountChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityRowExpandedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRowHeaderUIElementsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRowIndexRangeAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityRowRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityRowsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityRulerMarkerRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityRulerRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityScreenPointForLayoutPointParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityScrollAreaRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityScrollBarRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySearchButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySearchFieldSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySearchMenuAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySectionListSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySecureTextFieldSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedCellsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedCellsChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedChildrenAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedChildrenChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedChildrenMovedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedColumnsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedColumnsChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedRowsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedRowsChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySelectedTextChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedTextRangeAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySelectedTextRangesAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityServesAsTitleForUIElementsAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityShadowTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySharedCharacterRangeAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySharedFocusElementsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySharedTextUIElementsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilitySheetCreatedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilitySheetRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityShowAlternateUIAction' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityShowDefaultUIAction' type='@'/>
<constant const='true' declared_type='NSAccessibilityActionName _Nonnull' name='NSAccessibilityShowMenuAction' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityShownMenuAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySizeAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilitySliderRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilitySortButtonRole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySortButtonSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySortDirectionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilitySplitGroupRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilitySplitterRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySplittersAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityStandardWindowSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityStaticTextRole' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityStrikethroughColorTextAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityStrikethroughTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityStringForRangeParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' name='NSAccessibilityStyleRangeForIndexParameterizedAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilitySubroleAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilitySuperscriptTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySwitchSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySystemDialogSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilitySystemFloatingWindowSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilitySystemWideRole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTabButtonSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityTabGroupRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityTableRole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTableRowSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityTabsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityTailIndentMarkerTypeValue' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityTextAlignmentAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityTextAreaRole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTextAttachmentSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityTextFieldRole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTextLinkSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityTimelineSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityTitleAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityTitleChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityTitleUIElementAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityToggleSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityToolbarButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityToolbarButtonSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityToolbarRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityTopLevelUIElementAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityUIElementDestroyedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationUserInfoKey _Nonnull' name='NSAccessibilityUIElementsKey' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityURLAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityUnderlineColorTextAttribute' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSAccessibilityUnderlineTextAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityUnitDescriptionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityUnitsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityUnitsChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerMarkerTypeValue _Nonnull' name='NSAccessibilityUnknownMarkerTypeValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityOrientationValue _Nonnull' name='NSAccessibilityUnknownOrientationValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityUnknownRole' type='@'/>
<constant const='true' declared_type='NSAccessibilitySortDirectionValue _Nonnull' name='NSAccessibilityUnknownSortDirectionValue' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityUnknownSubrole' type='@'/>
<constant const='true' declared_type='NSAccessibilityRulerUnitValue _Nonnull' name='NSAccessibilityUnknownUnitValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityValueAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityValueChangedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityValueDescriptionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityValueIndicatorRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityOrientationValue _Nonnull' name='NSAccessibilityVerticalOrientationValue' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVerticalScrollBarAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVerticalUnitDescriptionAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVerticalUnitsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleCellsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleCharacterRangeAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleChildrenAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleColumnsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityFontAttributeKey _Nonnull' name='NSAccessibilityVisibleNameKey' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityVisibleRowsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityWarningValueAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityWindowAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowCreatedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowDeminiaturizedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowMiniaturizedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowMovedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityNotificationName _Nonnull' name='NSAccessibilityWindowResizedNotification' type='@'/>
<constant const='true' declared_type='NSAccessibilityRole _Nonnull' name='NSAccessibilityWindowRole' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityWindowsAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilityAttributeName _Nonnull' name='NSAccessibilityZoomButtonAttribute' type='@'/>
<constant const='true' declared_type='NSAccessibilitySubrole _Nonnull' name='NSAccessibilityZoomButtonSubrole' type='@'/>
<constant const='true' declared_type='NSModalResponse' name='NSAlertFirstButtonReturn' type='i' type64='q'/>
<constant const='true' declared_type='NSModalResponse' name='NSAlertSecondButtonReturn' type='i' type64='q'/>
<constant const='true' declared_type='NSModalResponse' name='NSAlertThirdButtonReturn' type='i' type64='q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSAlignmentBinding' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSAllRomanInputSourcesLocaleIdentifier' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSAllowsEditingMultipleValuesSelectionBindingOption' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSAllowsNullArgumentBindingOption' type='@'/>
<constant const='true' declared_type='NSBitmapFormat' name='NSAlphaFirstBitmapFormat' type='I' type64='Q'/>
<constant const='true' declared_type='NSBitmapFormat' name='NSAlphaNonpremultipliedBitmapFormat' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSAlphaShiftKeyMask' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSAlternateImageBinding' type='@'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSAlternateKeyMask' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSAlternateTitleBinding' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSAlwaysPresentsApplicationModalAlertsBindingOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSAnimateBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSAnimationDelayBinding' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSAnimationProgressMark' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSAnimationProgressMarkNotification' type='@'/>
<constant declared_type='NSAnimatablePropertyKey _Nonnull' name='NSAnimationTriggerOrderIn' type='@'/>
<constant declared_type='NSAnimatablePropertyKey _Nonnull' name='NSAnimationTriggerOrderOut' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSAntialiasThresholdChangedNotification' type='@'/>
<constant const='true' declared_type='NSEventMask' name='NSAnyEventMask' type='Q'/>
<constant declared_type='__kindof NSApplication * _Null_unspecified' name='NSApp' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSAppKitDefined' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSAppKitDefinedMask' type='Q'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSAppKitIgnoredException' type='@'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_0' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_1' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_10' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_10_2' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_10_3' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_10_4' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_10_5' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_10_Max' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_11' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_11_1' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_11_2' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_11_3' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_12' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_12_1' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_12_2' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_2' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_2_3' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_3' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_3_2' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_3_3' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_3_5' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_3_7' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_3_9' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_4' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_4_1' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_4_3' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_4_4' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_4_7' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_5' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_5_2' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_5_3' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_6' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_7' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_7_2' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_7_3' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_7_4' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_8' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumber10_9' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumberWithColumnResizingBrowser' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumberWithContinuousScrollingBrowser' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumberWithCursorSizeSupport' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumberWithCustomSheetPosition' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumberWithDeferredWindowDisplaySupport' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumberWithDirectionalTabs' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumberWithDockTilePlugInSupport' type='d'/>
<constant const='true' declared_type='NSAppKitVersion' name='NSAppKitVersionNumberWithPatternColorLeakFix' type='d'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSAppKitVirtualMemoryException' type='@'/>
<constant const='true' declared_type='NSAppearanceName _Nonnull' name='NSAppearanceNameAqua' type='@'/>
<constant const='true' declared_type='NSAppearanceName _Nonnull' name='NSAppearanceNameLightContent' type='@'/>
<constant const='true' declared_type='NSAppearanceName _Nonnull' name='NSAppearanceNameVibrantDark' type='@'/>
<constant const='true' declared_type='NSAppearanceName _Nonnull' name='NSAppearanceNameVibrantLight' type='@'/>
<constant const='true' declared_type='NSEventSubtype' name='NSApplicationActivatedEventType' type='s'/>
<constant const='true' declared_type='NSEventSubtype' name='NSApplicationDeactivatedEventType' type='s'/>
<constant const='true' declared_type='NSEventType' name='NSApplicationDefined' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSApplicationDefinedMask' type='Q'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationDidBecomeActiveNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSApplicationDidChangeOcclusionStateNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationDidChangeScreenParametersNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationDidFinishLaunchingNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSApplicationDidFinishRestoringWindowsNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationDidHideNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationDidResignActiveNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationDidUnhideNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationDidUpdateNotification' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSApplicationFileType' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSApplicationLaunchIsDefaultLaunchKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSApplicationLaunchRemoteNotificationKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSApplicationLaunchUserNotificationKey' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationWillBecomeActiveNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationWillFinishLaunchingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationWillHideNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationWillResignActiveNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationWillTerminateNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationWillUnhideNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSApplicationWillUpdateNotification' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSArgumentBinding' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSAttachmentAttributeName' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSAttributedStringBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSAuthorDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSBitmapImageFileType' name='NSBMPFileType' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSBackgroundColorAttributeName' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSBackgroundColorDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSBackingPropertyOldColorSpaceKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSBackingPropertyOldScaleFactorKey' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSBadBitmapParametersException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSBadComparisonException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSBadRTFColorTableException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSBadRTFDirectiveException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSBadRTFFontTableException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSBadRTFStyleSheetException' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSBaseURLDocumentOption' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSBaselineOffsetAttributeName' type='@'/>
<constant const='true' declared_type='CGFloat' name='NSBlack' type='f' type64='d'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSBorderlessWindowMask' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSBottomMarginDocumentAttribute' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSBrowserColumnConfigurationDidChangeNotification' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSBrowserIllegalDelegateException' type='@'/>
<constant const='true' declared_type='NSColorSpaceModel' name='NSCMYKColorSpaceModel' type='i' type64='q'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSCMYKModeColorPanel' type='i' type64='q'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSCalibratedBlackColorSpace' type='@'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSCalibratedRGBColorSpace' type='@'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSCalibratedWhiteColorSpace' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCategoryDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSTextAlignment' name='NSCenterTextAlignment' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCharacterEncodingDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSCharacterEncodingDocumentOption' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSCharacterShapeAttributeName' type='@'/>
<constant const='true' declared_type='NSBezelStyle' name='NSCircularBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSSliderType' name='NSCircularSlider' type='I' type64='Q'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSClosableWindowMask' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCocoaVersionDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' name='NSCollectionElementKindInterItemGapIndicator' type='@'/>
<constant const='true' declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' name='NSCollectionElementKindSectionFooter' type='@'/>
<constant const='true' declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' name='NSCollectionElementKindSectionHeader' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSColorListDidChangeNotification' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSColorListIOException' type='@'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSColorListModeColorPanel' type='i' type64='q'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSColorListNotEditableException' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSColorPanelColorDidChangeNotification' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSColorPboardType' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSComboBoxSelectionDidChangeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSComboBoxSelectionIsChangingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSComboBoxWillDismissNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSComboBoxWillPopUpNotification' type='@'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSCommandKeyMask' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCommentDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCompanyDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeClear' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeColor' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeColorBurn' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeColorDodge' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeCopy' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeDarken' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeDestinationAtop' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeDestinationIn' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeDestinationOut' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeDestinationOver' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeDifference' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeExclusion' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeHardLight' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeHighlight' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeHue' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeLighten' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeLuminosity' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeMultiply' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeOverlay' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositePlusDarker' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositePlusLighter' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeSaturation' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeScreen' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeSoftLight' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeSourceAtop' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeSourceIn' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeSourceOut' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeSourceOver' type='I' type64='Q'/>
<constant const='true' declared_type='NSCompositingOperation' name='NSCompositeXOR' type='I' type64='Q'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSConditionallySetsEditableBindingOption' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSConditionallySetsEnabledBindingOption' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSConditionallySetsHiddenBindingOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentArrayBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentArrayForMultipleSelectionBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentDictionaryBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentHeightBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentObjectBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentObjectsBinding' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSContentPlacementTagBindingOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentSetBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentValuesBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSContentWidthBinding' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSContextHelpModeDidActivateNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSContextHelpModeDidDeactivateNotification' type='@'/>
<constant const='true' declared_type='NSLevelIndicatorStyle' name='NSContinuousCapacityLevelIndicatorStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSContinuouslyUpdatesValueBindingOption' type='@'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSControlKeyMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSControlStateValue' name='NSControlStateValueMixed' type='i' type64='q'/>
<constant const='true' declared_type='NSControlStateValue' name='NSControlStateValueOff' type='i' type64='q'/>
<constant const='true' declared_type='NSControlStateValue' name='NSControlStateValueOn' type='i' type64='q'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSControlTextDidBeginEditingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSControlTextDidChangeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSControlTextDidEndEditingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSControlTintDidChangeNotification' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSConvertedDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCopyrightDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSCrayonModeColorPanel' type='i' type64='q'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSCreatesSortDescriptorBindingOption' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSCreationTimeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSAlertStyle' name='NSCriticalAlertStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSCriticalValueBinding' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSCursorAttributeName' type='@'/>
<constant const='true' declared_type='NSPointingDeviceType' name='NSCursorPointingDevice' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventType' name='NSCursorUpdate' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSCursorUpdateMask' type='Q'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSCustomColorSpace' type='@'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSCustomPaletteModeColorPanel' type='i' type64='q'/>
<constant const='true' declared_type='CGFloat' name='NSDarkGray' type='f' type64='d'/>
<constant declared_type='NSBindingName _Nonnull' name='NSDataBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDefaultAttributesDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSDefaultAttributesDocumentOption' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDefaultTabIntervalDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSTokenStyle' name='NSDefaultTokenStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSDefinitionPresentationType _Nonnull' name='NSDefinitionPresentationTypeDictionaryApplication' type='@'/>
<constant const='true' declared_type='NSDefinitionOptionKey _Nonnull' name='NSDefinitionPresentationTypeKey' type='@'/>
<constant const='true' declared_type='NSDefinitionPresentationType _Nonnull' name='NSDefinitionPresentationTypeOverlay' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSDeletesObjectsOnRemoveBindingsOption' type='@'/>
<constant declared_type='NSDeviceDescriptionKey _Nonnull' name='NSDeviceBitsPerSample' type='@'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSDeviceBlackColorSpace' type='@'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSDeviceCMYKColorSpace' type='@'/>
<constant declared_type='NSDeviceDescriptionKey _Nonnull' name='NSDeviceColorSpaceName' type='@'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSDeviceIndependentModifierFlagsMask' type='I' type64='Q'/>
<constant declared_type='NSDeviceDescriptionKey _Nonnull' name='NSDeviceIsPrinter' type='@'/>
<constant declared_type='NSDeviceDescriptionKey _Nonnull' name='NSDeviceIsScreen' type='@'/>
<constant const='true' declared_type='NSColorSpaceModel' name='NSDeviceNColorSpaceModel' type='i' type64='q'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSDeviceRGBColorSpace' type='@'/>
<constant declared_type='NSDeviceDescriptionKey _Nonnull' name='NSDeviceResolution' type='@'/>
<constant declared_type='NSDeviceDescriptionKey _Nonnull' name='NSDeviceSize' type='@'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSDeviceWhiteColorSpace' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSDirectoryFileType' type='@'/>
<constant const='true' declared_type='NSBezelStyle' name='NSDisclosureBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSLevelIndicatorStyle' name='NSDiscreteCapacityLevelIndicatorStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSDisplayNameBindingOption' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSDisplayPatternBindingOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSDisplayPatternTitleBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSDisplayPatternValueBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSDocFormatTextDocumentType' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSDocModalWindowMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSWindowLevel' name='NSDockWindowLevel' type='i' type64='q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSDocumentEditedBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSDocumentTypeDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSDocumentTypeDocumentOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSDoubleClickArgumentBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSDoubleClickTargetBinding' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSDragPboard' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSDraggingException' type='@'/>
<constant const='true' declared_type='NSDraggingImageComponentKey _Nonnull' name='NSDraggingImageComponentIconKey' type='@'/>
<constant const='true' declared_type='NSDraggingImageComponentKey _Nonnull' name='NSDraggingImageComponentLabelKey' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSDrawerDidCloseNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSDrawerDidOpenNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSDrawerWillCloseNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSDrawerWillOpenNotification' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSEditableBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSEditorDocumentAttribute' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSEnabledBinding' type='@'/>
<constant const='true' declared_type='NSPointingDeviceType' name='NSEraserPointingDevice' type='I' type64='Q'/>
<constant const='true' declared_type='NSTimeInterval' name='NSEventDurationForever' type='d'/>
<constant declared_type='NSRunLoopMode _Nonnull' name='NSEventTrackingRunLoopMode' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSExcludedElementsDocumentAttribute' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSExcludedKeysBinding' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSExpansionAttributeName' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSFileContentsPboardType' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSFileTypeDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSFileTypeDocumentOption' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSFilenamesPboardType' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSFilesPromisePboardType' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSFilesystemFileType' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSFilterPredicateBinding' type='@'/>
<constant declared_type='NSPasteboardTypeFindPanelSearchOptionKey _Nonnull' name='NSFindPanelCaseInsensitiveSearch' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSFindPanelSearchOptionsPboardType' type='@'/>
<constant declared_type='NSPasteboardTypeFindPanelSearchOptionKey _Nonnull' name='NSFindPanelSubstringMatch' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSFindPboard' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSFlagsChanged' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSFlagsChangedMask' type='Q'/>
<constant const='true' declared_type='NSBitmapFormat' name='NSFloatingPointSamplesBitmapFormat' type='I' type64='Q'/>
<constant const='true' declared_type='NSWindowLevel' name='NSFloatingWindowLevel' type='i' type64='q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSFontAttributeName' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSFontBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSFontBoldBinding' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontCascadeListAttribute' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontCharacterSetAttribute' type='@'/>
<constant const='true' declared_type='NSFontCollectionUserInfoKey _Nonnull' name='NSFontCollectionActionKey' type='@'/>
<constant const='true' declared_type='NSFontCollectionName _Nonnull' name='NSFontCollectionAllFonts' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSFontCollectionDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSFontCollectionMatchingOptionKey _Nonnull' name='NSFontCollectionDisallowAutoActivationOption' type='@'/>
<constant const='true' declared_type='NSFontCollectionName _Nonnull' name='NSFontCollectionFavorites' type='@'/>
<constant const='true' declared_type='NSFontCollectionMatchingOptionKey _Nonnull' name='NSFontCollectionIncludeDisabledFontsOption' type='@'/>
<constant const='true' declared_type='NSFontCollectionUserInfoKey _Nonnull' name='NSFontCollectionNameKey' type='@'/>
<constant const='true' declared_type='NSFontCollectionUserInfoKey _Nonnull' name='NSFontCollectionOldNameKey' type='@'/>
<constant const='true' declared_type='NSFontCollectionName _Nonnull' name='NSFontCollectionRecentlyUsed' type='@'/>
<constant const='true' declared_type='NSFontCollectionMatchingOptionKey _Nonnull' name='NSFontCollectionRemoveDuplicatesOption' type='@'/>
<constant const='true' declared_type='NSFontCollectionName _Nonnull' name='NSFontCollectionUser' type='@'/>
<constant const='true' declared_type='NSFontCollectionUserInfoKey _Nonnull' name='NSFontCollectionVisibilityKey' type='@'/>
<constant const='true' declared_type='NSFontCollectionActionTypeKey _Nonnull' name='NSFontCollectionWasHidden' type='@'/>
<constant const='true' declared_type='NSFontCollectionActionTypeKey _Nonnull' name='NSFontCollectionWasRenamed' type='@'/>
<constant const='true' declared_type='NSFontCollectionActionTypeKey _Nonnull' name='NSFontCollectionWasShown' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSFontColorAttribute' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontFaceAttribute' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontFamilyAttribute' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSFontFamilyNameBinding' type='@'/>
<constant declared_type='NSFontDescriptorFeatureKey _Nonnull' name='NSFontFeatureSelectorIdentifierKey' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontFeatureSettingsAttribute' type='@'/>
<constant declared_type='NSFontDescriptorFeatureKey _Nonnull' name='NSFontFeatureTypeIdentifierKey' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontFixedAdvanceAttribute' type='@'/>
<constant const='true' declared_type='CGFloat * _Nonnull' name='NSFontIdentityMatrix' type='^f' type64='^d'/>
<constant declared_type='NSBindingName _Nonnull' name='NSFontItalicBinding' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontMatrixAttribute' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontNameAttribute' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSFontNameBinding' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSFontPboard' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSFontPboardType' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSFontSetChangedNotification' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontSizeAttribute' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSFontSizeBinding' type='@'/>
<constant declared_type='NSFontDescriptorTraitKey _Nonnull' name='NSFontSlantTrait' type='@'/>
<constant declared_type='NSFontDescriptorTraitKey _Nonnull' name='NSFontSymbolicTrait' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontTraitsAttribute' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSFontUnavailableException' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontVariationAttribute' type='@'/>
<constant declared_type='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisDefaultValueKey' type='@'/>
<constant declared_type='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisIdentifierKey' type='@'/>
<constant declared_type='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisMaximumValueKey' type='@'/>
<constant declared_type='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisMinimumValueKey' type='@'/>
<constant declared_type='NSFontDescriptorVariationKey _Nonnull' name='NSFontVariationAxisNameKey' type='@'/>
<constant declared_type='NSFontDescriptorAttributeName _Nonnull' name='NSFontVisibleNameAttribute' type='@'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightBlack' type='f' type64='d'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightBold' type='f' type64='d'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightHeavy' type='f' type64='d'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightLight' type='f' type64='d'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightMedium' type='f' type64='d'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightRegular' type='f' type64='d'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightSemibold' type='f' type64='d'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightThin' type='f' type64='d'/>
<constant declared_type='NSFontDescriptorTraitKey _Nonnull' name='NSFontWeightTrait' type='@'/>
<constant const='true' declared_type='NSFontWeight' name='NSFontWeightUltraLight' type='f' type64='d'/>
<constant declared_type='NSFontDescriptorTraitKey _Nonnull' name='NSFontWidthTrait' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSForegroundColorAttributeName' type='@'/>
<constant const='true' declared_type='NSViewFullScreenModeOptionKey _Nonnull' name='NSFullScreenModeAllScreens' type='@'/>
<constant const='true' declared_type='NSViewFullScreenModeOptionKey _Nonnull' name='NSFullScreenModeApplicationPresentationOptions' type='@'/>
<constant const='true' declared_type='NSViewFullScreenModeOptionKey _Nonnull' name='NSFullScreenModeSetting' type='@'/>
<constant const='true' declared_type='NSViewFullScreenModeOptionKey _Nonnull' name='NSFullScreenModeWindowLevel' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSFullScreenWindowMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSFullSizeContentViewWindowMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSFunctionKeyMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSBitmapImageFileType' name='NSGIFFileType' type='I' type64='Q'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSGeneralPboard' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSGlyphInfoAttributeName' type='@'/>
<constant declared_type='NSGraphicsContextAttributeKey _Nonnull' name='NSGraphicsContextDestinationAttributeName' type='@'/>
<constant declared_type='NSGraphicsContextRepresentationFormatName _Nonnull' name='NSGraphicsContextPDFFormat' type='@'/>
<constant declared_type='NSGraphicsContextRepresentationFormatName _Nonnull' name='NSGraphicsContextPSFormat' type='@'/>
<constant declared_type='NSGraphicsContextAttributeKey _Nonnull' name='NSGraphicsContextRepresentationFormatAttributeName' type='@'/>
<constant const='true' declared_type='NSColorSpaceModel' name='NSGrayColorSpaceModel' type='i' type64='q'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSGrayModeColorPanel' type='i' type64='q'/>
<constant const='true' declared_type='CGFloat' name='NSGridViewSizeForContent' type='f' type64='d'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSHSBModeColorPanel' type='i' type64='q'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSHTMLPboardType' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSHTMLTextDocumentType' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSHUDWindowMask' type='I' type64='Q'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSHandlesContentAsCompoundValueBindingOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSHeaderTitleBinding' type='@'/>
<constant const='true' declared_type='NSBezelStyle' name='NSHelpButtonBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSHelpKeyMask' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSHiddenBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSHyphenationFactorDocumentAttribute' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSIllegalSelectorException' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSImageBinding' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSImageCacheException' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageColorSyncProfileData' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageCompressionFactor' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageCompressionMethod' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageCurrentFrame' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageCurrentFrameDuration' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageDitherTransparency' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageEXIFData' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageFallbackBackgroundColor' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageFrameCount' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageGamma' type='@'/>
<constant const='true' declared_type='NSImageHintKey _Nonnull' name='NSImageHintCTM' type='@'/>
<constant const='true' declared_type='NSImageHintKey _Nonnull' name='NSImageHintInterpolation' type='@'/>
<constant const='true' declared_type='NSImageHintKey _Nonnull' name='NSImageHintUserInterfaceLayoutDirection' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageInterlaced' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageLoopCount' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameActionTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameAddTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameAdvanced' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameApplicationIcon' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameBluetoothTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameBonjour' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameBookmarksTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameCaution' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameColorPanel' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameColumnViewTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameComputer' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameDotMac' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameEnterFullScreenTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameEveryone' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameExitFullScreenTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameFlowViewTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameFolder' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameFolderBurnable' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameFolderSmart' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameFollowLinkFreestandingTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameFontPanel' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameGoBackTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameGoForwardTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameGoLeftTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameGoRightTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameHomeTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameIChatTheaterTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameIconViewTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameInfo' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameInvalidDataFreestandingTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameLeftFacingTriangleTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameListViewTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameLockLockedTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameLockUnlockedTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameMenuMixedStateTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameMenuOnStateTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameMobileMe' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameMultipleDocuments' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameNetwork' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNamePathTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNamePreferencesGeneral' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameQuickLookTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameRefreshFreestandingTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameRefreshTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameRemoveTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameRevealFreestandingTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameRightFacingTriangleTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameShareTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameSlideshowTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameSmartBadgeTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameStatusAvailable' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameStatusNone' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameStatusPartiallyAvailable' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameStatusUnavailable' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameStopProgressFreestandingTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameStopProgressTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAddDetailTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAddTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAlarmTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAudioInputMuteTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAudioInputTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputMuteTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputVolumeHighTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputVolumeLowTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputVolumeMediumTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarAudioOutputVolumeOffTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarBookmarksTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarColorPickerFill' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarColorPickerFont' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarColorPickerStroke' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarCommunicationAudioTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarCommunicationVideoTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarComposeTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarDeleteTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarDownloadTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarEnterFullScreenTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarExitFullScreenTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarFastForwardTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarFolderCopyToTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarFolderMoveToTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarFolderTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarGetInfoTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarGoBackTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarGoDownTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarGoForwardTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarGoUpTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarHistoryTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarIconViewTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarListViewTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarMailTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarNewFolderTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarNewMessageTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarOpenInBrowserTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarPauseTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarPlayPauseTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarPlayTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarPlayheadTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarQuickLookTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarRecordStartTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarRecordStopTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarRefreshTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarRemoveTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarRewindTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarRotateLeftTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarRotateRightTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSearchTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarShareTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSidebarTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSkipAhead15SecondsTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSkipAhead30SecondsTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSkipAheadTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSkipBack15SecondsTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSkipBack30SecondsTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSkipBackTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSkipToEndTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSkipToStartTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarSlideshowTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTagIconTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextBoldTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextBoxTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextCenterAlignTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextItalicTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextJustifiedAlignTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextLeftAlignTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextListTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextRightAlignTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextStrikethroughTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarTextUnderlineTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarUserAddTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarUserGroupTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarUserTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarVolumeDownTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTouchBarVolumeUpTemplate' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTrashEmpty' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameTrashFull' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameUser' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameUserAccounts' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameUserGroup' type='@'/>
<constant const='true' declared_type='NSImageName _Nonnull' name='NSImageNameUserGuest' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageProgressive' type='@'/>
<constant declared_type='NSBitmapImageRepPropertyKey _Nonnull' name='NSImageRGBColorTable' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSImageRepRegistryDidChangeNotification' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSIncludedKeysBinding' type='@'/>
<constant const='true' declared_type='NSColorSpaceModel' name='NSIndexedColorSpaceModel' type='i' type64='q'/>
<constant const='true' declared_type='NSAlertStyle' name='NSInformationalAlertStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSInitialKeyBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSInitialValueBinding' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSInkTextPboardType' type='@'/>
<constant const='true' declared_type='NSBezelStyle' name='NSInlineBezelStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSInsertsNullPlaceholderBindingOption' type='@'/>
<constant declared_type='NSString*' name='NSInterfaceStyleDefault' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSInvokesSeparatelyWithArrayObjectsBindingOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSIsIndeterminateBinding' type='@'/>
<constant const='true' declared_type='NSBitmapImageFileType' name='NSJPEG2000FileType' type='I' type64='Q'/>
<constant const='true' declared_type='NSBitmapImageFileType' name='NSJPEGFileType' type='I' type64='Q'/>
<constant const='true' declared_type='NSTextAlignment' name='NSJustifiedTextAlignment' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSKernAttributeName' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSKeyDown' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSKeyDownMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSKeyUp' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSKeyUpMask' type='Q'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSKeywordsDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSColorSpaceModel' name='NSLABColorSpaceModel' type='i' type64='q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSLabelBinding' type='@'/>
<constant const='true' declared_type='NSLayoutPriority' name='NSLayoutPriorityDefaultHigh' type='f'/>
<constant const='true' declared_type='NSLayoutPriority' name='NSLayoutPriorityDefaultLow' type='f'/>
<constant const='true' declared_type='NSLayoutPriority' name='NSLayoutPriorityDragThatCanResizeWindow' type='f'/>
<constant const='true' declared_type='NSLayoutPriority' name='NSLayoutPriorityDragThatCannotResizeWindow' type='f'/>
<constant const='true' declared_type='NSLayoutPriority' name='NSLayoutPriorityFittingSizeCompression' type='f'/>
<constant const='true' declared_type='NSLayoutPriority' name='NSLayoutPriorityRequired' type='f'/>
<constant const='true' declared_type='NSLayoutPriority' name='NSLayoutPriorityWindowSizeStayPut' type='f'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSLeftMarginDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSLeftMouseDown' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSLeftMouseDownMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSLeftMouseDragged' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSLeftMouseDraggedMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSLeftMouseUp' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSLeftMouseUpMask' type='Q'/>
<constant const='true' declared_type='NSTextAlignment' name='NSLeftTextAlignment' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSLigatureAttributeName' type='@'/>
<constant const='true' declared_type='CGFloat' name='NSLightGray' type='f' type64='d'/>
<constant const='true' declared_type='NSSliderType' name='NSLinearSlider' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSLinkAttributeName' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSLocalizedKeyDictionaryBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSMacSimpleTextDocumentType' type='@'/>
<constant const='true' declared_type='NSWindowLevel' name='NSMainMenuWindowLevel' type='i' type64='q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSManagedObjectContextBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSManagerDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSMarkedClauseSegmentAttributeName' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSMaxValueBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSMaxWidthBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSMaximumRecentsBinding' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSMenuDidAddItemNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSMenuDidBeginTrackingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSMenuDidChangeItemNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSMenuDidEndTrackingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSMenuDidRemoveItemNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSMenuDidSendActionNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSMenuWillSendActionNotification' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSMinValueBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSMinWidthBinding' type='@'/>
<constant const='true' declared_type='NSControlSize' name='NSMiniControlSize' type='I' type64='Q'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSMiniaturizableWindowMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSControlStateValue' name='NSMixedState' type='i' type64='q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSMixedStateImageBinding' type='@'/>
<constant declared_type='NSRunLoopMode _Nonnull' name='NSModalPanelRunLoopMode' type='@'/>
<constant const='true' declared_type='NSWindowLevel' name='NSModalPanelWindowLevel' type='i' type64='q'/>
<constant const='true' declared_type='NSModalResponse' name='NSModalResponseAbort' type='i' type64='q'/>
<constant const='true' declared_type='NSModalResponse' name='NSModalResponseCancel' type='i' type64='q'/>
<constant const='true' declared_type='NSModalResponse' name='NSModalResponseContinue' type='i' type64='q'/>
<constant const='true' declared_type='NSModalResponse' name='NSModalResponseOK' type='i' type64='q'/>
<constant const='true' declared_type='NSModalResponse' name='NSModalResponseStop' type='i' type64='q'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSModificationTimeDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSButtonType' name='NSMomentaryChangeButton' type='I' type64='Q'/>
<constant const='true' declared_type='NSButtonType' name='NSMomentaryLight' type='I' type64='Q'/>
<constant const='true' declared_type='NSButtonType' name='NSMomentaryLightButton' type='I' type64='Q'/>
<constant const='true' declared_type='NSButtonType' name='NSMomentaryPushButton' type='I' type64='Q'/>
<constant const='true' declared_type='NSButtonType' name='NSMomentaryPushInButton' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventType' name='NSMouseEntered' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSMouseEnteredMask' type='Q'/>
<constant const='true' declared_type='NSEventSubtype' name='NSMouseEventSubtype' type='s'/>
<constant const='true' declared_type='NSEventType' name='NSMouseExited' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSMouseExitedMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSMouseMoved' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSMouseMovedMask' type='Q'/>
<constant const='true' declared_type='NSButtonType' name='NSMultiLevelAcceleratorButton' type='I' type64='Q'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSMultipleTextSelectionPboardType' type='@'/>
<constant declared_type='id _Nonnull' name='NSMultipleValuesMarker' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSMultipleValuesPlaceholderBindingOption' type='@'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSNamedColorSpace' type='@'/>
<constant const='true' declared_type='NSTextAlignment' name='NSNaturalTextAlignment' type='I' type64='Q'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSNibLoadingException' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSNibOwner' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSNibTopLevelObjects' type='@'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSNoModeColorPanel' type='i' type64='q'/>
<constant declared_type='id _Nonnull' name='NSNoSelectionMarker' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSNoSelectionPlaceholderBindingOption' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSNonactivatingPanelMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSWindowLevel' name='NSNormalWindowLevel' type='i' type64='q'/>
<constant declared_type='id _Nonnull' name='NSNotApplicableMarker' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSNotApplicablePlaceholderBindingOption' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSNullPlaceholderBindingOption' type='@'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSNumericPadKeyMask' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSObliquenessAttributeName' type='@'/>
<constant declared_type='NSBindingInfoKey _Nonnull' name='NSObservedKeyPathKey' type='@'/>
<constant declared_type='NSBindingInfoKey _Nonnull' name='NSObservedObjectKey' type='@'/>
<constant const='true' declared_type='NSControlStateValue' name='NSOffState' type='i' type64='q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSOffStateImageBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSOfficeOpenXMLTextDocumentType' type='@'/>
<constant const='true' declared_type='NSButtonType' name='NSOnOffButton' type='I' type64='Q'/>
<constant const='true' declared_type='NSControlStateValue' name='NSOnState' type='i' type64='q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSOnStateImageBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSOpenDocumentTextDocumentType' type='@'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPCurrentRendererID' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPGPUFragmentProcessing' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPGPUVertexProcessing' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPHasDrawable' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPMPSwapsInFlight' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPRasterizationEnable' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPReclaimResources' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPStateValidation' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPSurfaceBackingSize' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPSurfaceOpacity' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPSurfaceOrder' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPSurfaceSurfaceVolatile' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPSwapInterval' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPSwapRectangle' type='i' type64='q'/>
<constant const='true' declared_type='NSOpenGLContextParameter' name='NSOpenGLCPSwapRectangleEnable' type='i' type64='q'/>
<constant declared_type='NSBindingInfoKey _Nonnull' name='NSOptionsKey' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSOtherMouseDown' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSOtherMouseDownMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSOtherMouseDragged' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSOtherMouseDraggedMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSOtherMouseUp' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSOtherMouseUpMask' type='Q'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSOutlineViewColumnDidMoveNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSOutlineViewColumnDidResizeNotification' type='@'/>
<constant const='true' declared_type='NSUserInterfaceItemIdentifier _Nonnull' name='NSOutlineViewDisclosureButtonKey' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSOutlineViewItemDidCollapseNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSOutlineViewItemDidExpandNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSOutlineViewItemWillCollapseNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSOutlineViewItemWillExpandNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSOutlineViewSelectionDidChangeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSOutlineViewSelectionIsChangingNotification' type='@'/>
<constant const='true' declared_type='NSUserInterfaceItemIdentifier _Nonnull' name='NSOutlineViewShowHideButtonKey' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSPDFPboardType' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSPICTPboardType' type='@'/>
<constant const='true' declared_type='NSBitmapImageFileType' name='NSPNGFileType' type='I' type64='Q'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSPPDIncludeNotFoundException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSPPDIncludeStackOverflowException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSPPDIncludeStackUnderflowException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSPPDParseException' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSPaperSizeDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSParagraphStyleAttributeName' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSPasteboardCommunicationException' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSPasteboardNameDrag' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSPasteboardNameFind' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSPasteboardNameFont' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSPasteboardNameGeneral' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSPasteboardNameRuler' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeColor' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeFileURL' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeFindPanelSearchOptions' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeFont' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeHTML' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeMultipleTextSelection' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypePDF' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypePNG' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeRTF' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeRTFD' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeRuler' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeSound' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeString' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeTIFF' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeTabularText' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeTextFinderOptions' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSPasteboardTypeURL' type='@'/>
<constant const='true' declared_type='NSPasteboardReadingOptionKey _Nonnull' name='NSPasteboardURLReadingContentsConformToTypesKey' type='@'/>
<constant const='true' declared_type='NSPasteboardReadingOptionKey _Nonnull' name='NSPasteboardURLReadingFileURLsOnlyKey' type='@'/>
<constant declared_type='NSColorSpaceName _Nonnull' name='NSPatternColorSpace' type='@'/>
<constant const='true' declared_type='NSColorSpaceModel' name='NSPatternColorSpaceModel' type='i' type64='q'/>
<constant const='true' declared_type='NSEventButtonMask' name='NSPenLowerSideMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSPointingDeviceType' name='NSPenPointingDevice' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventButtonMask' name='NSPenTipMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventButtonMask' name='NSPenUpperSideMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventType' name='NSPeriodic' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSPeriodicMask' type='Q'/>
<constant declared_type='NSString * _Nonnull' name='NSPlainFileType' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSPlainTextDocumentType' type='@'/>
<constant const='true' declared_type='NSTokenStyle' name='NSPlainTextTokenStyle' type='I' type64='Q'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSPopUpButtonCellWillPopUpNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSPopUpButtonWillPopUpNotification' type='@'/>
<constant const='true' declared_type='NSWindowLevel' name='NSPopUpMenuWindowLevel' type='i' type64='q'/>
<constant const='true' declared_type='NSPopoverCloseReasonValue _Nonnull' name='NSPopoverCloseReasonDetachToWindow' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSPopoverCloseReasonKey' type='@'/>
<constant const='true' declared_type='NSPopoverCloseReasonValue _Nonnull' name='NSPopoverCloseReasonStandard' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSPopoverDidCloseNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSPopoverDidShowNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSPopoverWillCloseNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSPopoverWillShowNotification' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSPositioningRectBinding' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSPostScriptPboardType' type='@'/>
<constant const='true' declared_type='NSEventSubtype' name='NSPowerOffEventType' type='s'/>
<constant declared_type='NSBindingName _Nonnull' name='NSPredicateBinding' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSPredicateFormatBindingOption' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSPreferredScrollerStyleDidChangeNotification' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSPrefixSpacesDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintAllPages' type='@'/>
<constant const='true' declared_type='NSPrintPanelJobStyleHint _Nonnull' name='NSPrintAllPresetsJobStyleHint' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintBottomMargin' type='@'/>
<constant const='true' declared_type='NSPrintJobDispositionValue _Nonnull' name='NSPrintCancelJob' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintCopies' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintDetailedErrorReporting' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintFaxNumber' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintFirstPage' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSPrintFormName' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintHeaderAndFooter' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintHorizontalPagination' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintHorizontallyCentered' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintJobDisposition' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSPrintJobFeatures' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintJobSavingFileNameExtensionHidden' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintJobSavingURL' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintLastPage' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintLeftMargin' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSPrintManualFeed' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintMustCollate' type='@'/>
<constant const='true' declared_type='NSPrintPanelJobStyleHint _Nonnull' name='NSPrintNoPresetsJobStyleHint' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSPrintOperationExistsException' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintOrientation' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSPrintPackageException' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPagesAcross' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPagesDown' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSPrintPagesPerSheet' type='@'/>
<constant const='true' declared_type='NSPrintPanelAccessorySummaryKey _Nonnull' name='NSPrintPanelAccessorySummaryItemDescriptionKey' type='@'/>
<constant const='true' declared_type='NSPrintPanelAccessorySummaryKey _Nonnull' name='NSPrintPanelAccessorySummaryItemNameKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSPrintPaperFeed' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPaperName' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPaperSize' type='@'/>
<constant const='true' declared_type='NSPrintPanelJobStyleHint _Nonnull' name='NSPrintPhotoJobStyleHint' type='@'/>
<constant const='true' declared_type='NSPrintJobDispositionValue _Nonnull' name='NSPrintPreviewJob' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPrinter' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintPrinterName' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintReversePageOrder' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintRightMargin' type='@'/>
<constant const='true' declared_type='NSPrintJobDispositionValue _Nonnull' name='NSPrintSaveJob' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSPrintSavePath' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintScalingFactor' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintSelectionOnly' type='@'/>
<constant const='true' declared_type='NSPrintJobDispositionValue _Nonnull' name='NSPrintSpoolJob' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintTime' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintTopMargin' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintVerticalPagination' type='@'/>
<constant const='true' declared_type='NSPrintInfoAttributeKey _Nonnull' name='NSPrintVerticallyCentered' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSPrintingCommunicationException' type='@'/>
<constant const='true' declared_type='NSProgressIndicatorStyle' name='NSProgressIndicatorBarStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSProgressIndicatorStyle' name='NSProgressIndicatorSpinningStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSButtonType' name='NSPushOnPushOffButton' type='I' type64='Q'/>
<constant const='true' declared_type='NSColorSpaceModel' name='NSRGBColorSpaceModel' type='i' type64='q'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSRGBModeColorPanel' type='i' type64='q'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSRTFDPboardType' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSRTFDTextDocumentType' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSRTFPboardType' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSRTFPropertyStackOverflowException' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSRTFTextDocumentType' type='@'/>
<constant const='true' declared_type='NSButtonType' name='NSRadioButton' type='I' type64='Q'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSRaisesForNotApplicableKeysBindingOption' type='@'/>
<constant const='true' declared_type='NSLevelIndicatorStyle' name='NSRatingLevelIndicatorStyle' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSReadOnlyDocumentAttribute' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSRecentSearchesBinding' type='@'/>
<constant const='true' declared_type='NSBezelStyle' name='NSRecessedBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSControlSize' name='NSRegularControlSize' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSRegularSquareBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSLevelIndicatorStyle' name='NSRelevancyLevelIndicatorStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSRepresentedFilenameBinding' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSResizableWindowMask' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSRightMarginDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSRightMouseDown' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSRightMouseDownMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSRightMouseDragged' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSRightMouseDraggedMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSRightMouseUp' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSRightMouseUpMask' type='Q'/>
<constant const='true' declared_type='NSTextAlignment' name='NSRightTextAlignment' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSRoundRectBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSRoundedBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSRoundedDisclosureBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSTokenStyle' name='NSRoundedTokenStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSRowHeightBinding' type='@'/>
<constant const='true' declared_type='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateComparisonModifier' type='@'/>
<constant const='true' declared_type='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateCompoundType' type='@'/>
<constant const='true' declared_type='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateCustomSelector' type='@'/>
<constant const='true' declared_type='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateLeftExpression' type='@'/>
<constant const='true' declared_type='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateOperatorType' type='@'/>
<constant const='true' declared_type='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateOptions' type='@'/>
<constant const='true' declared_type='NSRuleEditorPredicatePartKey _Nonnull' name='NSRuleEditorPredicateRightExpression' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSRuleEditorRowsDidChangeNotification' type='@'/>
<constant declared_type='NSPasteboardName _Nonnull' name='NSRulerPboard' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSRulerPboardType' type='@'/>
<constant const='true' declared_type='NSRulerViewUnitName _Nonnull' name='NSRulerViewUnitCentimeters' type='@'/>
<constant const='true' declared_type='NSRulerViewUnitName _Nonnull' name='NSRulerViewUnitInches' type='@'/>
<constant const='true' declared_type='NSRulerViewUnitName _Nonnull' name='NSRulerViewUnitPicas' type='@'/>
<constant const='true' declared_type='NSRulerViewUnitName _Nonnull' name='NSRulerViewUnitPoints' type='@'/>
<constant const='true' declared_type='NSEventSubtype' name='NSScreenChangedEventType' type='s'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSScreenColorSpaceDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSWindowLevel' name='NSScreenSaverWindowLevel' type='i' type64='q'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSScrollViewDidEndLiveMagnifyNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSScrollViewDidEndLiveScrollNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSScrollViewDidLiveScrollNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSScrollViewWillStartLiveMagnifyNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSScrollViewWillStartLiveScrollNotification' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSScrollWheel' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSScrollWheelMask' type='Q'/>
<constant const='true' declared_type='NSInteger' name='NSSearchFieldClearRecentsMenuItemTag' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='NSSearchFieldNoRecentsMenuItemTag' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='NSSearchFieldRecentsMenuItemTag' type='i' type64='q'/>
<constant const='true' declared_type='NSInteger' name='NSSearchFieldRecentsTitleMenuItemTag' type='i' type64='q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectedIdentifierBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectedIndexBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectedLabelBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectedObjectBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectedObjectsBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectedTagBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectedValueBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectedValuesBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectionIndexPathsBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSelectionIndexesBinding' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSSelectorNameBindingOption' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSSelectsAllWhenSettingContentBindingOption' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSShadowAttributeName' type='@'/>
<constant const='true' declared_type='NSBezelStyle' name='NSShadowlessSquareBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameAddToAperture' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameAddToIPhoto' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameAddToSafariReadingList' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameCloudSharing' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameComposeEmail' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameComposeMessage' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostImageOnFlickr' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnFacebook' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnLinkedIn' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnSinaWeibo' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnTencentWeibo' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostOnTwitter' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostVideoOnTudou' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostVideoOnVimeo' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNamePostVideoOnYouku' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameSendViaAirDrop' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameUseAsDesktopPicture' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameUseAsFacebookProfileImage' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameUseAsLinkedInProfileImage' type='@'/>
<constant const='true' declared_type='NSSharingServiceName _Nonnull' name='NSSharingServiceNameUseAsTwitterProfileImage' type='@'/>
<constant declared_type='NSString * _Nonnull' name='NSShellCommandFileType' type='@'/>
<constant const='true' declared_type='NSEventModifierFlags' name='NSShiftKeyMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSSliderAccessoryWidth' name='NSSliderAccessoryWidthDefault' type='f' type64='d'/>
<constant const='true' declared_type='NSSliderAccessoryWidth' name='NSSliderAccessoryWidthWide' type='f' type64='d'/>
<constant const='true' declared_type='NSControlSize' name='NSSmallControlSize' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSSmallIconButtonBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSSmallSquareBezelStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSSortDescriptorsBinding' type='@'/>
<constant const='true' declared_type='NSPasteboardType _Nonnull' name='NSSoundPboardType' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechCharacterModeProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechCommandDelimiterProperty' type='@'/>
<constant const='true' declared_type='NSSpeechCommandDelimiterKey _Nonnull' name='NSSpeechCommandPrefix' type='@'/>
<constant const='true' declared_type='NSSpeechCommandDelimiterKey _Nonnull' name='NSSpeechCommandSuffix' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechCurrentVoiceProperty' type='@'/>
<constant const='true' declared_type='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryAbbreviations' type='@'/>
<constant const='true' declared_type='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryEntryPhonemes' type='@'/>
<constant const='true' declared_type='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryEntrySpelling' type='@'/>
<constant const='true' declared_type='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryLocaleIdentifier' type='@'/>
<constant const='true' declared_type='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryModificationDate' type='@'/>
<constant const='true' declared_type='NSSpeechDictionaryKey _Nonnull' name='NSSpeechDictionaryPronunciations' type='@'/>
<constant const='true' declared_type='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorCount' type='@'/>
<constant const='true' declared_type='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorNewestCharacterOffset' type='@'/>
<constant const='true' declared_type='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorNewestCode' type='@'/>
<constant const='true' declared_type='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorOldestCharacterOffset' type='@'/>
<constant const='true' declared_type='NSSpeechErrorKey _Nonnull' name='NSSpeechErrorOldestCode' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechErrorsProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechInputModeProperty' type='@'/>
<constant const='true' declared_type='NSSpeechMode _Nonnull' name='NSSpeechModeLiteral' type='@'/>
<constant const='true' declared_type='NSSpeechMode _Nonnull' name='NSSpeechModeNormal' type='@'/>
<constant const='true' declared_type='NSSpeechMode _Nonnull' name='NSSpeechModePhoneme' type='@'/>
<constant const='true' declared_type='NSSpeechMode _Nonnull' name='NSSpeechModeText' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechNumberModeProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechOutputToFileURLProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoExample' type='@'/>
<constant const='true' declared_type='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoHiliteEnd' type='@'/>
<constant const='true' declared_type='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoHiliteStart' type='@'/>
<constant const='true' declared_type='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoOpcode' type='@'/>
<constant const='true' declared_type='NSSpeechPhonemeInfoKey _Nonnull' name='NSSpeechPhonemeInfoSymbol' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechPhonemeSymbolsProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechPitchBaseProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechPitchModProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechRateProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechRecentSyncProperty' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechResetProperty' type='@'/>
<constant const='true' declared_type='NSSpeechStatusKey _Nonnull' name='NSSpeechStatusNumberOfCharactersLeft' type='@'/>
<constant const='true' declared_type='NSSpeechStatusKey _Nonnull' name='NSSpeechStatusOutputBusy' type='@'/>
<constant const='true' declared_type='NSSpeechStatusKey _Nonnull' name='NSSpeechStatusOutputPaused' type='@'/>
<constant const='true' declared_type='NSSpeechStatusKey _Nonnull' name='NSSpeechStatusPhonemeCode' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechStatusProperty' type='@'/>
<constant const='true' declared_type='NSSpeechSynthesizerInfoKey _Nonnull' name='NSSpeechSynthesizerInfoIdentifier' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechSynthesizerInfoProperty' type='@'/>
<constant const='true' declared_type='NSSpeechSynthesizerInfoKey _Nonnull' name='NSSpeechSynthesizerInfoVersion' type='@'/>
<constant const='true' declared_type='NSSpeechPropertyKey _Nonnull' name='NSSpeechVolumeProperty' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticCapitalizationNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticDashSubstitutionNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticPeriodSubstitutionNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticQuoteSubstitutionNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticSpellingCorrectionNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticTextCompletionNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSSpellCheckerDidChangeAutomaticTextReplacementNotification' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSSpellingStateAttributeName' type='@'/>
<constant const='true' declared_type='CGFloat' name='NSSplitViewControllerAutomaticDimension' type='f' type64='d'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSSplitViewDidResizeSubviewsNotification' type='@'/>
<constant const='true' declared_type='CGFloat' name='NSSplitViewItemUnspecifiedDimension' type='f' type64='d'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSSplitViewWillResizeSubviewsNotification' type='@'/>
<constant const='true' declared_type='CGFloat' name='NSSquareStatusItemLength' type='f' type64='d'/>
<constant const='true' declared_type='CGFloat' name='NSStackViewSpacingUseDefault' type='f' type64='d'/>
<constant const='true' declared_type='NSStackViewVisibilityPriority' name='NSStackViewVisibilityPriorityDetachOnlyIfNecessary' type='f'/>
<constant const='true' declared_type='NSStackViewVisibilityPriority' name='NSStackViewVisibilityPriorityMustHold' type='f'/>
<constant const='true' declared_type='NSStackViewVisibilityPriority' name='NSStackViewVisibilityPriorityNotVisible' type='f'/>
<constant const='true' declared_type='NSWindowLevel' name='NSStatusWindowLevel' type='i' type64='q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSStrikethroughColorAttributeName' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSStrikethroughStyleAttributeName' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSStringPboardType' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSStrokeColorAttributeName' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSStrokeWidthAttributeName' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSSubjectDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSWindowLevel' name='NSSubmenuWindowLevel' type='i' type64='q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSSuperscriptAttributeName' type='@'/>
<constant const='true' declared_type='NSButtonType' name='NSSwitchButton' type='I' type64='Q'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSSystemColorsDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSSystemDefined' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventMask' name='NSSystemDefinedMask' type='Q'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSTIFFException' type='@'/>
<constant const='true' declared_type='NSBitmapImageFileType' name='NSTIFFFileType' type='I' type64='Q'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSTIFFPboardType' type='@'/>
<constant declared_type='NSTextTabOptionKey _Nonnull' name='NSTabColumnTerminatorsAttributeName' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTableViewColumnDidMoveNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTableViewColumnDidResizeNotification' type='@'/>
<constant const='true' declared_type='NSUserInterfaceItemIdentifier _Nonnull' name='NSTableViewRowViewKey' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTableViewSelectionDidChangeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTableViewSelectionIsChangingNotification' type='@'/>
<constant const='true' declared_type='NSEventType' name='NSTabletPoint' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventSubtype' name='NSTabletPointEventSubtype' type='s'/>
<constant const='true' declared_type='NSEventMask' name='NSTabletPointMask' type='Q'/>
<constant const='true' declared_type='NSEventType' name='NSTabletProximity' type='I' type64='Q'/>
<constant const='true' declared_type='NSEventSubtype' name='NSTabletProximityEventSubtype' type='s'/>
<constant const='true' declared_type='NSEventMask' name='NSTabletProximityMask' type='Q'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSTabularTextPboardType' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSTargetBinding' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSTextAlternativesAttributeName' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextAlternativesSelectedAlternativeStringNotification' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingDocumentAuthorKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingDocumentTitleKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingDocumentURLKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingOrthographyKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingQuotesKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingReferenceDateKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingReferenceTimeZoneKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingRegularExpressionsKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingReplacementsKey' type='@'/>
<constant declared_type='NSTextCheckingOptionKey _Nonnull' name='NSTextCheckingSelectedRangeKey' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSTextColorBinding' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextDidBeginEditingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextDidChangeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextDidEndEditingNotification' type='@'/>
<constant const='true' declared_type='NSAttributedStringKey _Nonnull' name='NSTextEffectAttributeName' type='@'/>
<constant const='true' declared_type='NSTextEffectStyle _Nonnull' name='NSTextEffectLetterpressStyle' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTextEncodingNameDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSTextEncodingNameDocumentOption' type='@'/>
<constant const='true' declared_type='NSPasteboardTypeTextFinderOptionKey _Nonnull' name='NSTextFinderCaseInsensitiveKey' type='@'/>
<constant const='true' declared_type='NSPasteboardTypeTextFinderOptionKey _Nonnull' name='NSTextFinderMatchingTypeKey' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextInputContextKeyboardSelectionDidChangeNotification' type='@'/>
<constant declared_type='NSTextLayoutSectionKey _Nonnull' name='NSTextLayoutSectionOrientation' type='@'/>
<constant declared_type='NSTextLayoutSectionKey _Nonnull' name='NSTextLayoutSectionRange' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTextLayoutSectionsAttribute' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSTextLineTooLongException' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerBox' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerCheck' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerCircle' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerDecimal' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerDiamond' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerDisc' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerHyphen' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerLowercaseAlpha' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerLowercaseHexadecimal' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerLowercaseLatin' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerLowercaseRoman' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerOctal' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerSquare' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerUppercaseAlpha' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerUppercaseHexadecimal' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerUppercaseLatin' type='@'/>
<constant const='true' declared_type='NSTextListMarkerFormat _Nonnull' name='NSTextListMarkerUppercaseRoman' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSTextMovementUserInfoKey' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSTextNoSelectionException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSTextReadException' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSTextSizeMultiplierDocumentOption' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextStorageDidProcessEditingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextStorageWillProcessEditingNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextViewDidChangeSelectionNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextViewDidChangeTypingAttributesNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSTextViewWillChangeNotifyingTextViewNotification' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSTextWriteException' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSTexturedBackgroundWindowMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSTexturedRoundedBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSTexturedSquareBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSThickSquareBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSBezelStyle' name='NSThickerSquareBezelStyle' type='I' type64='Q'/>
<constant const='true' declared_type='NSTickMarkPosition' name='NSTickMarkAbove' type='I' type64='Q'/>
<constant const='true' declared_type='NSTickMarkPosition' name='NSTickMarkBelow' type='I' type64='Q'/>
<constant const='true' declared_type='NSTickMarkPosition' name='NSTickMarkLeft' type='I' type64='Q'/>
<constant const='true' declared_type='NSTickMarkPosition' name='NSTickMarkRight' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSTimeoutDocumentOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSTitleBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTitleDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSTitledWindowMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSButtonType' name='NSToggleButton' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSToolTipAttributeName' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSToolTipBinding' type='@'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarCloudSharingItemIdentifier' type='@'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarCustomizeToolbarItemIdentifier' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSToolbarDidRemoveItemNotification' type='@'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarFlexibleSpaceItemIdentifier' type='@'/>
<constant const='true' declared_type='NSToolbarItemVisibilityPriority' name='NSToolbarItemVisibilityPriorityHigh' type='i' type64='q'/>
<constant const='true' declared_type='NSToolbarItemVisibilityPriority' name='NSToolbarItemVisibilityPriorityLow' type='i' type64='q'/>
<constant const='true' declared_type='NSToolbarItemVisibilityPriority' name='NSToolbarItemVisibilityPriorityStandard' type='i' type64='q'/>
<constant const='true' declared_type='NSToolbarItemVisibilityPriority' name='NSToolbarItemVisibilityPriorityUser' type='i' type64='q'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarPrintItemIdentifier' type='@'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarSeparatorItemIdentifier' type='@'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarShowColorsItemIdentifier' type='@'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarShowFontsItemIdentifier' type='@'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarSpaceItemIdentifier' type='@'/>
<constant declared_type='NSToolbarItemIdentifier _Nonnull' name='NSToolbarToggleSidebarItemIdentifier' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSToolbarWillAddItemNotification' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSTopMarginDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSWindowLevel' name='NSTornOffMenuWindowLevel' type='i' type64='q'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierCandidateList' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierCharacterPicker' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierFixedSpaceLarge' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierFixedSpaceSmall' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierFlexibleSpace' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierOtherItemsProxy' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextAlignment' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextColorPicker' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextFormat' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextList' type='@'/>
<constant const='true' declared_type='NSTouchBarItemIdentifier _Nonnull' name='NSTouchBarItemIdentifierTextStyle' type='@'/>
<constant const='true' declared_type='NSTouchBarItemPriority' name='NSTouchBarItemPriorityHigh' type='f'/>
<constant const='true' declared_type='NSTouchBarItemPriority' name='NSTouchBarItemPriorityLow' type='f'/>
<constant const='true' declared_type='NSTouchBarItemPriority' name='NSTouchBarItemPriorityNormal' type='f'/>
<constant const='true' declared_type='NSEventSubtype' name='NSTouchEventSubtype' type='s'/>
<constant declared_type='NSBindingName _Nonnull' name='NSTransparentBinding' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSTypeIdentifierAddressText' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSTypeIdentifierDateText' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSTypeIdentifierPhoneNumberText' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSTypeIdentifierTransitInformationText' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSTypedStreamVersionException' type='@'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSURLPboardType' type='@'/>
<constant declared_type='NSUInteger' name='NSUnderlineByWordMask' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSUnderlineColorAttributeName' type='@'/>
<constant declared_type='NSUInteger' name='NSUnderlineStrikethroughMask' type='I' type64='Q'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSUnderlineStyleAttributeName' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSUnifiedTitleAndToolbarWindowMask' type='I' type64='Q'/>
<constant const='true' declared_type='NSColorSpaceModel' name='NSUnknownColorSpaceModel' type='i' type64='q'/>
<constant const='true' declared_type='NSPointingDeviceType' name='NSUnknownPointingDevice' type='I' type64='Q'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSUserActivityDocumentURLKey' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSUsesScreenFontsDocumentAttribute' type='@'/>
<constant const='true' declared_type='NSWindowStyleMask' name='NSUtilityWindowMask' type='I' type64='Q'/>
<constant declared_type='NSPasteboardType _Nonnull' name='NSVCardPboardType' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSValidatesImmediatelyBindingOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSValueBinding' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSValuePathBinding' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSValueTransformerBindingOption' type='@'/>
<constant declared_type='NSBindingOption _Nonnull' name='NSValueTransformerNameBindingOption' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSValueURLBinding' type='@'/>
<constant const='true' declared_type='CGFloat' name='NSVariableStatusItemLength' type='f' type64='d'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSVerticalGlyphFormAttributeName' type='@'/>
<constant declared_type='NSViewAnimationKey _Nonnull' name='NSViewAnimationEffectKey' type='@'/>
<constant declared_type='NSViewAnimationKey _Nonnull' name='NSViewAnimationEndFrameKey' type='@'/>
<constant declared_type='NSViewAnimationEffectName _Nonnull' name='NSViewAnimationFadeInEffect' type='@'/>
<constant declared_type='NSViewAnimationEffectName _Nonnull' name='NSViewAnimationFadeOutEffect' type='@'/>
<constant declared_type='NSViewAnimationKey _Nonnull' name='NSViewAnimationStartFrameKey' type='@'/>
<constant declared_type='NSViewAnimationKey _Nonnull' name='NSViewAnimationTargetKey' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSViewBoundsDidChangeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSViewDidUpdateTrackingAreasNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSViewFocusDidChangeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSViewFrameDidChangeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSViewGlobalFrameDidChangeNotification' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewModeDocumentAttribute' type='@'/>
<constant const='true' declared_type='CGFloat' name='NSViewNoInstrinsicMetric' type='f' type64='d'/>
<constant const='true' declared_type='CGFloat' name='NSViewNoIntrinsicMetric' type='f' type64='d'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewSizeDocumentAttribute' type='@'/>
<constant declared_type='NSAttributedStringDocumentAttributeKey _Nonnull' name='NSViewZoomDocumentAttribute' type='@'/>
<constant declared_type='NSBindingName _Nonnull' name='NSVisibleBinding' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceAge' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceDemoText' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceGender' type='@'/>
<constant const='true' declared_type='NSVoiceGenderName _Nonnull' name='NSVoiceGenderFemale' type='@'/>
<constant const='true' declared_type='NSVoiceGenderName _Nonnull' name='NSVoiceGenderMale' type='@'/>
<constant const='true' declared_type='NSVoiceGenderName _Nonnull' name='NSVoiceGenderNeuter' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceIdentifier' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceIndividuallySpokenCharacters' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceLanguage' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceLocaleIdentifier' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceName' type='@'/>
<constant const='true' declared_type='NSVoiceAttributeKey _Nonnull' name='NSVoiceSupportedCharacters' type='@'/>
<constant const='true' declared_type='NSAlertStyle' name='NSWarningAlertStyle' type='I' type64='Q'/>
<constant declared_type='NSBindingName _Nonnull' name='NSWarningValueBinding' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSWebArchiveTextDocumentType' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSWebPreferencesDocumentOption' type='@'/>
<constant declared_type='NSAttributedStringDocumentReadingOptionKey _Nonnull' name='NSWebResourceLoadDelegateDocumentOption' type='@'/>
<constant const='true' declared_type='NSColorPanelMode' name='NSWheelModeColorPanel' type='i' type64='q'/>
<constant const='true' declared_type='CGFloat' name='NSWhite' type='f' type64='d'/>
<constant declared_type='NSBindingName _Nonnull' name='NSWidthBinding' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidBecomeKeyNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidBecomeMainNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowDidChangeBackingPropertiesNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowDidChangeOcclusionStateNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidChangeScreenNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidChangeScreenProfileNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidDeminiaturizeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowDidEndLiveResizeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidEndSheetNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowDidEnterFullScreenNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowDidEnterVersionBrowserNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowDidExitFullScreenNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowDidExitVersionBrowserNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidExposeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidMiniaturizeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidMoveNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidResignKeyNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidResignMainNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidResizeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowDidUpdateNotification' type='@'/>
<constant const='true' declared_type='NSEventSubtype' name='NSWindowExposedEventType' type='s'/>
<constant const='true' declared_type='NSEventSubtype' name='NSWindowMovedEventType' type='s'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSWindowServerCommunicationException' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowWillBeginSheetNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowWillCloseNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowWillEnterFullScreenNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowWillEnterVersionBrowserNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowWillExitFullScreenNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowWillExitVersionBrowserNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowWillMiniaturizeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWindowWillMoveNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWindowWillStartLiveResizeNotification' type='@'/>
<constant declared_type='NSAttributedStringDocumentType _Nonnull' name='NSWordMLTextDocumentType' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSWordTablesReadException' type='@'/>
<constant declared_type='NSExceptionName _Nonnull' name='NSWordTablesWriteException' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceAccessibilityDisplayOptionsDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceActiveSpaceDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSWorkspaceApplicationKey' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceCompressOperation' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceCopyOperation' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceDecompressOperation' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceDecryptOperation' type='@'/>
<constant const='true' declared_type='NSWorkspaceDesktopImageOptionKey _Nonnull' name='NSWorkspaceDesktopImageAllowClippingKey' type='@'/>
<constant const='true' declared_type='NSWorkspaceDesktopImageOptionKey _Nonnull' name='NSWorkspaceDesktopImageFillColorKey' type='@'/>
<constant const='true' declared_type='NSWorkspaceDesktopImageOptionKey _Nonnull' name='NSWorkspaceDesktopImageScalingKey' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceDestroyOperation' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidActivateApplicationNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidChangeFileLabelsNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidDeactivateApplicationNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidHideApplicationNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidLaunchApplicationNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidMountNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidPerformFileOperationNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidRenameVolumeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidTerminateApplicationNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidUnhideApplicationNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidUnmountNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceDidWakeNotification' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceDuplicateOperation' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceEncryptOperation' type='@'/>
<constant const='true' declared_type='NSWorkspaceLaunchConfigurationKey _Nonnull' name='NSWorkspaceLaunchConfigurationAppleEvent' type='@'/>
<constant const='true' declared_type='NSWorkspaceLaunchConfigurationKey _Nonnull' name='NSWorkspaceLaunchConfigurationArchitecture' type='@'/>
<constant const='true' declared_type='NSWorkspaceLaunchConfigurationKey _Nonnull' name='NSWorkspaceLaunchConfigurationArguments' type='@'/>
<constant const='true' declared_type='NSWorkspaceLaunchConfigurationKey _Nonnull' name='NSWorkspaceLaunchConfigurationEnvironment' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceLinkOperation' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceMoveOperation' type='@'/>
<constant declared_type='NSWorkspaceFileOperationName _Nonnull' name='NSWorkspaceRecycleOperation' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceScreensDidSleepNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceScreensDidWakeNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceSessionDidBecomeActiveNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceSessionDidResignActiveNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSWorkspaceVolumeLocalizedNameKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSWorkspaceVolumeOldLocalizedNameKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSWorkspaceVolumeOldURLKey' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='NSWorkspaceVolumeURLKey' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceWillLaunchApplicationNotification' type='@'/>
<constant const='true' declared_type='NSNotificationName _Nonnull' name='NSWorkspaceWillPowerOffNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceWillSleepNotification' type='@'/>
<constant declared_type='NSNotificationName _Nonnull' name='NSWorkspaceWillUnmountNotification' type='@'/>
<constant declared_type='NSAttributedStringKey _Nonnull' name='NSWritingDirectionAttributeName' type='@'/>
<enum name='NSAboveBottom' value='4'/>
<enum name='NSAboveTop' value='1'/>
<enum name='NSAccessibilityAnnotationPositionEnd' value='2'/>
<enum name='NSAccessibilityAnnotationPositionFullRange' value='0'/>
<enum name='NSAccessibilityAnnotationPositionStart' value='1'/>
<enum name='NSAccessibilityCustomRotorSearchDirectionNext' value='1'/>
<enum name='NSAccessibilityCustomRotorSearchDirectionPrevious' value='0'/>
<enum name='NSAccessibilityCustomRotorTypeAnnotation' value='2'/>
<enum name='NSAccessibilityCustomRotorTypeAny' value='1'/>
<enum name='NSAccessibilityCustomRotorTypeBoldText' value='3'/>
<enum name='NSAccessibilityCustomRotorTypeCustom' value='0'/>
<enum name='NSAccessibilityCustomRotorTypeHeading' value='4'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel1' value='5'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel2' value='6'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel3' value='7'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel4' value='8'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel5' value='9'/>
<enum name='NSAccessibilityCustomRotorTypeHeadingLevel6' value='10'/>
<enum name='NSAccessibilityCustomRotorTypeImage' value='11'/>
<enum name='NSAccessibilityCustomRotorTypeItalicText' value='12'/>
<enum name='NSAccessibilityCustomRotorTypeLandmark' value='13'/>
<enum name='NSAccessibilityCustomRotorTypeLink' value='14'/>
<enum name='NSAccessibilityCustomRotorTypeList' value='15'/>
<enum name='NSAccessibilityCustomRotorTypeMisspelledWord' value='16'/>
<enum name='NSAccessibilityCustomRotorTypeTable' value='17'/>
<enum name='NSAccessibilityCustomRotorTypeTextField' value='18'/>
<enum name='NSAccessibilityCustomRotorTypeUnderlinedText' value='19'/>
<enum name='NSAccessibilityCustomRotorTypeVisitedLink' value='20'/>
<enum name='NSAccessibilityOrientationHorizontal' value='2'/>
<enum name='NSAccessibilityOrientationUnknown' value='0'/>
<enum name='NSAccessibilityOrientationVertical' value='1'/>
<enum name='NSAccessibilityPriorityHigh' value='90'/>
<enum name='NSAccessibilityPriorityLow' value='10'/>
<enum name='NSAccessibilityPriorityMedium' value='50'/>
<enum name='NSAccessibilityRulerMarkerTypeIndentFirstLine' value='7'/>
<enum name='NSAccessibilityRulerMarkerTypeIndentHead' value='5'/>
<enum name='NSAccessibilityRulerMarkerTypeIndentTail' value='6'/>
<enum name='NSAccessibilityRulerMarkerTypeTabStopCenter' value='3'/>
<enum name='NSAccessibilityRulerMarkerTypeTabStopDecimal' value='4'/>
<enum name='NSAccessibilityRulerMarkerTypeTabStopLeft' value='1'/>
<enum name='NSAccessibilityRulerMarkerTypeTabStopRight' value='2'/>
<enum name='NSAccessibilityRulerMarkerTypeUnknown' value='0'/>
<enum name='NSAccessibilitySortDirectionAscending' value='1'/>
<enum name='NSAccessibilitySortDirectionDescending' value='2'/>
<enum name='NSAccessibilitySortDirectionUnknown' value='0'/>
<enum name='NSAccessibilityUnitsCentimeters' value='2'/>
<enum name='NSAccessibilityUnitsInches' value='1'/>
<enum name='NSAccessibilityUnitsPicas' value='4'/>
<enum name='NSAccessibilityUnitsPoints' value='3'/>
<enum name='NSAccessibilityUnitsUnknown' value='0'/>
<enum name='NSAddTraitFontAction' value='2'/>
<enum name='NSAdobeCNS1CharacterCollection' value='1'/>
<enum name='NSAdobeGB1CharacterCollection' value='2'/>
<enum name='NSAdobeJapan1CharacterCollection' value='3'/>
<enum name='NSAdobeJapan2CharacterCollection' value='4'/>
<enum name='NSAdobeKorea1CharacterCollection' value='5'/>
<enum name='NSAlertAlternateReturn' value='0'/>
<enum name='NSAlertDefaultReturn' value='1'/>
<enum name='NSAlertErrorReturn' value='-2'/>
<enum name='NSAlertOtherReturn' value='-1'/>
<enum name='NSAlertStyleCritical' value='2'/>
<enum name='NSAlertStyleInformational' value='1'/>
<enum name='NSAlertStyleWarning' value='0'/>
<enum name='NSAllScrollerParts' value='2'/>
<enum name='NSAnimationBlocking' value='0'/>
<enum name='NSAnimationEaseIn' value='1'/>
<enum name='NSAnimationEaseInOut' value='0'/>
<enum name='NSAnimationEaseOut' value='2'/>
<enum name='NSAnimationEffectDisappearingItemDefault' value='0'/>
<enum name='NSAnimationEffectPoof' value='10'/>
<enum name='NSAnimationLinear' value='3'/>
<enum name='NSAnimationNonblocking' value='1'/>
<enum name='NSAnimationNonblockingThreaded' value='2'/>
<enum name='NSAnyType' value='0'/>
<enum name='NSApplicationActivateAllWindows' value='1'/>
<enum name='NSApplicationActivateIgnoringOtherApps' value='2'/>
<enum name='NSApplicationActivationPolicyAccessory' value='1'/>
<enum name='NSApplicationActivationPolicyProhibited' value='2'/>
<enum name='NSApplicationActivationPolicyRegular' value='0'/>
<enum name='NSApplicationDelegateReplyCancel' value='1'/>
<enum name='NSApplicationDelegateReplyFailure' value='2'/>
<enum name='NSApplicationDelegateReplySuccess' value='0'/>
<enum name='NSApplicationOcclusionStateVisible' value='2'/>
<enum name='NSApplicationPresentationAutoHideDock' value='1'/>
<enum name='NSApplicationPresentationAutoHideMenuBar' value='4'/>
<enum name='NSApplicationPresentationAutoHideToolbar' value='2048'/>
<enum name='NSApplicationPresentationDefault' value='0'/>
<enum name='NSApplicationPresentationDisableAppleMenu' value='16'/>
<enum name='NSApplicationPresentationDisableCursorLocationAssistance' value='4096'/>
<enum name='NSApplicationPresentationDisableForceQuit' value='64'/>
<enum name='NSApplicationPresentationDisableHideApplication' value='256'/>
<enum name='NSApplicationPresentationDisableMenuBarTransparency' value='512'/>
<enum name='NSApplicationPresentationDisableProcessSwitching' value='32'/>
<enum name='NSApplicationPresentationDisableSessionTermination' value='128'/>
<enum name='NSApplicationPresentationFullScreen' value='1024'/>
<enum name='NSApplicationPresentationHideDock' value='2'/>
<enum name='NSApplicationPresentationHideMenuBar' value='8'/>
<enum name='NSAscendingPageOrder' value='1'/>
<enum name='NSAtBottom' value='5'/>
<enum name='NSAtTop' value='2'/>
<enum name='NSAttachmentCharacter' value='65532'/>
<enum name='NSAutoPagination' value='0'/>
<enum name='NSAutosaveAsOperation' value='5'/>
<enum name='NSAutosaveElsewhereOperation' value='3'/>
<enum name='NSAutosaveInPlaceOperation' value='4'/>
<enum name='NSAutosaveOperation' value='3'/>
<enum name='NSBackTabCharacter' value='25'/>
<enum name='NSBackgroundStyleDark' value='1'/>
<enum name='NSBackgroundStyleLight' value='0'/>
<enum name='NSBackgroundStyleLowered' value='3'/>
<enum name='NSBackgroundStyleRaised' value='2'/>
<enum name='NSBackgroundTab' value='1'/>
<enum name='NSBackingStoreBuffered' value='2'/>
<enum name='NSBackingStoreNonretained' value='1'/>
<enum name='NSBackingStoreRetained' value='0'/>
<enum name='NSBackspaceCharacter' value='8'/>
<enum name='NSBacktabTextMovement' value='18'/>
<enum name='NSBeginFunctionKey' value='63274'/>
<enum name='NSBelowBottom' value='6'/>
<enum name='NSBelowTop' value='3'/>
<enum name='NSBevelLineJoinStyle' value='2'/>
<enum name='NSBezelBorder' value='2'/>
<enum name='NSBezelStyleCircular' value='7'/>
<enum name='NSBezelStyleDisclosure' value='5'/>
<enum name='NSBezelStyleHelpButton' value='9'/>
<enum name='NSBezelStyleInline' value='15'/>
<enum name='NSBezelStyleRecessed' value='13'/>
<enum name='NSBezelStyleRegularSquare' value='2'/>
<enum name='NSBezelStyleRoundRect' value='12'/>
<enum name='NSBezelStyleRounded' value='1'/>
<enum name='NSBezelStyleRoundedDisclosure' value='14'/>
<enum name='NSBezelStyleShadowlessSquare' value='6'/>
<enum name='NSBezelStyleSmallSquare' value='10'/>
<enum name='NSBezelStyleTexturedRounded' value='11'/>
<enum name='NSBezelStyleTexturedSquare' value='8'/>
<enum name='NSBitmapFormatAlphaFirst' value='1'/>
<enum name='NSBitmapFormatAlphaNonpremultiplied' value='2'/>
<enum name='NSBitmapFormatFloatingPointSamples' value='4'/>
<enum name='NSBitmapFormatSixteenBitBigEndian' value='1024'/>
<enum name='NSBitmapFormatSixteenBitLittleEndian' value='256'/>
<enum name='NSBitmapFormatThirtyTwoBitBigEndian' value='2048'/>
<enum name='NSBitmapFormatThirtyTwoBitLittleEndian' value='512'/>
<enum name='NSBitmapImageFileTypeBMP' value='1'/>
<enum name='NSBitmapImageFileTypeGIF' value='2'/>
<enum name='NSBitmapImageFileTypeJPEG' value='3'/>
<enum name='NSBitmapImageFileTypeJPEG2000' value='5'/>
<enum name='NSBitmapImageFileTypePNG' value='4'/>
<enum name='NSBitmapImageFileTypeTIFF' value='0'/>
<enum name='NSBlueControlTint' value='1'/>
<enum name='NSBoldFontMask' value='2'/>
<enum name='NSBottomTabsBezelBorder' value='2'/>
<enum name='NSBoxCustom' value='4'/>
<enum name='NSBoxOldStyle' value='3'/>
<enum name='NSBoxPrimary' value='0'/>
<enum name='NSBoxSecondary' value='1'/>
<enum name='NSBoxSeparator' value='2'/>
<enum name='NSBreakFunctionKey' value='63282'/>
<enum name='NSBrowserAutoColumnResizing' value='1'/>
<enum name='NSBrowserDropAbove' value='1'/>
<enum name='NSBrowserDropOn' value='0'/>
<enum name='NSBrowserNoColumnResizing' value='0'/>
<enum name='NSBrowserUserColumnResizing' value='2'/>
<enum name='NSButtLineCapStyle' value='0'/>
<enum name='NSButtonTypeAccelerator' value='8'/>
<enum name='NSButtonTypeMomentaryChange' value='5'/>
<enum name='NSButtonTypeMomentaryLight' value='0'/>
<enum name='NSButtonTypeMomentaryPushIn' value='7'/>
<enum name='NSButtonTypeMultiLevelAccelerator' value='9'/>
<enum name='NSButtonTypeOnOff' value='6'/>
<enum name='NSButtonTypePushOnPushOff' value='1'/>
<enum name='NSButtonTypeRadio' value='4'/>
<enum name='NSButtonTypeSwitch' value='3'/>
<enum name='NSButtonTypeToggle' value='2'/>
<enum name='NSCancelButton' value='0'/>
<enum name='NSCancelTextMovement' value='23'/>
<enum name='NSCarriageReturnCharacter' value='13'/>
<enum name='NSCellAllowsMixedState' value='16'/>
<enum name='NSCellChangesContents' value='14'/>
<enum name='NSCellDisabled' value='0'/>
<enum name='NSCellEditable' value='3'/>
<enum name='NSCellHasImageHorizontal' value='12'/>
<enum name='NSCellHasImageOnLeftOrBottom' value='13'/>
<enum name='NSCellHasOverlappingImage' value='11'/>
<enum name='NSCellHighlighted' value='5'/>
<enum name='NSCellHitContentArea' value='1'/>
<enum name='NSCellHitEditableTextArea' value='2'/>
<enum name='NSCellHitNone' value='0'/>
<enum name='NSCellHitTrackableArea' value='4'/>
<enum name='NSCellIsBordered' value='10'/>
<enum name='NSCellIsInsetButton' value='15'/>
<enum name='NSCellLightsByBackground' value='9'/>
<enum name='NSCellLightsByContents' value='6'/>
<enum name='NSCellLightsByGray' value='7'/>
<enum name='NSCellState' value='1'/>
<enum name='NSCenterTabStopType' value='2'/>
<enum name='NSChangeAutosaved' value='4'/>
<enum name='NSChangeBackgroundCell' value='8'/>
<enum name='NSChangeBackgroundCellMask' value='8'/>
<enum name='NSChangeCleared' value='2'/>
<enum name='NSChangeDiscardable' value='256'/>
<enum name='NSChangeDone' value='0'/>
<enum name='NSChangeGrayCell' value='4'/>
<enum name='NSChangeGrayCellMask' value='4'/>
<enum name='NSChangeReadOtherContents' value='3'/>
<enum name='NSChangeRedone' value='5'/>
<enum name='NSChangeUndone' value='1'/>
<enum name='NSClearControlTint' value='7'/>
<enum name='NSClearDisplayFunctionKey' value='63290'/>
<enum name='NSClearLineFunctionKey' value='63289'/>
<enum name='NSClipPagination' value='2'/>
<enum name='NSClockAndCalendarDatePickerStyle' value='1'/>
<enum name='NSClosePathBezierPathElement' value='3'/>
<enum name='NSCloudKitSharingServiceAllowPrivate' value='2'/>
<enum name='NSCloudKitSharingServiceAllowPublic' value='1'/>
<enum name='NSCloudKitSharingServiceAllowReadOnly' value='16'/>
<enum name='NSCloudKitSharingServiceAllowReadWrite' value='32'/>
<enum name='NSCloudKitSharingServiceStandard' value='0'/>
<enum name='NSCollectionElementCategoryDecorationView' value='2'/>
<enum name='NSCollectionElementCategoryInterItemGap' value='3'/>
<enum name='NSCollectionElementCategoryItem' value='0'/>
<enum name='NSCollectionElementCategorySupplementaryView' value='1'/>
<enum name='NSCollectionUpdateActionDelete' value='1'/>
<enum name='NSCollectionUpdateActionInsert' value='0'/>
<enum name='NSCollectionUpdateActionMove' value='3'/>
<enum name='NSCollectionUpdateActionNone' value='4'/>
<enum name='NSCollectionUpdateActionReload' value='2'/>
<enum name='NSCollectionViewDropBefore' value='1'/>
<enum name='NSCollectionViewDropOn' value='0'/>
<enum name='NSCollectionViewItemHighlightAsDropTarget' value='3'/>
<enum name='NSCollectionViewItemHighlightForDeselection' value='2'/>
<enum name='NSCollectionViewItemHighlightForSelection' value='1'/>
<enum name='NSCollectionViewItemHighlightNone' value='0'/>
<enum name='NSCollectionViewScrollDirectionHorizontal' value='1'/>
<enum name='NSCollectionViewScrollDirectionVertical' value='0'/>
<enum name='NSCollectionViewScrollPositionBottom' value='4'/>
<enum name='NSCollectionViewScrollPositionCenteredHorizontally' value='16'/>
<enum name='NSCollectionViewScrollPositionCenteredVertically' value='2'/>
<enum name='NSCollectionViewScrollPositionLeadingEdge' value='64'/>
<enum name='NSCollectionViewScrollPositionLeft' value='8'/>
<enum name='NSCollectionViewScrollPositionNearestHorizontalEdge' value='512'/>
<enum name='NSCollectionViewScrollPositionNearestVerticalEdge' value='256'/>
<enum name='NSCollectionViewScrollPositionNone' value='0'/>
<enum name='NSCollectionViewScrollPositionRight' value='32'/>
<enum name='NSCollectionViewScrollPositionTop' value='1'/>
<enum name='NSCollectionViewScrollPositionTrailingEdge' value='128'/>
<enum name='NSColorPanelAllModesMask' value='65535'/>
<enum name='NSColorPanelCMYKModeMask' value='4'/>
<enum name='NSColorPanelColorListModeMask' value='32'/>
<enum name='NSColorPanelCrayonModeMask' value='128'/>
<enum name='NSColorPanelCustomPaletteModeMask' value='16'/>
<enum name='NSColorPanelGrayModeMask' value='1'/>
<enum name='NSColorPanelHSBModeMask' value='8'/>
<enum name='NSColorPanelModeCMYK' value='2'/>
<enum name='NSColorPanelModeColorList' value='5'/>
<enum name='NSColorPanelModeCrayon' value='7'/>
<enum name='NSColorPanelModeCustomPalette' value='4'/>
<enum name='NSColorPanelModeGray' value='0'/>
<enum name='NSColorPanelModeHSB' value='3'/>
<enum name='NSColorPanelModeNone' value='-1'/>
<enum name='NSColorPanelModeRGB' value='1'/>
<enum name='NSColorPanelModeWheel' value='6'/>
<enum name='NSColorPanelRGBModeMask' value='2'/>
<enum name='NSColorPanelWheelModeMask' value='64'/>
<enum name='NSColorRenderingIntentAbsoluteColorimetric' value='1'/>
<enum name='NSColorRenderingIntentDefault' value='0'/>
<enum name='NSColorRenderingIntentPerceptual' value='3'/>
<enum name='NSColorRenderingIntentRelativeColorimetric' value='2'/>
<enum name='NSColorRenderingIntentSaturation' value='4'/>
<enum name='NSColorSpaceModelCMYK' value='2'/>
<enum name='NSColorSpaceModelDeviceN' value='4'/>
<enum name='NSColorSpaceModelGray' value='0'/>
<enum name='NSColorSpaceModelIndexed' value='5'/>
<enum name='NSColorSpaceModelLAB' value='3'/>
<enum name='NSColorSpaceModelPatterned' value='6'/>
<enum name='NSColorSpaceModelRGB' value='1'/>
<enum name='NSColorSpaceModelUnknown' value='-1'/>
<enum name='NSColorTypeCatalog' value='2'/>
<enum name='NSColorTypeComponentBased' value='0'/>
<enum name='NSColorTypePattern' value='1'/>
<enum name='NSCompositingOperationClear' value='0'/>
<enum name='NSCompositingOperationColor' value='27'/>
<enum name='NSCompositingOperationColorBurn' value='20'/>
<enum name='NSCompositingOperationColorDodge' value='19'/>
<enum name='NSCompositingOperationCopy' value='1'/>
<enum name='NSCompositingOperationDarken' value='17'/>
<enum name='NSCompositingOperationDestinationAtop' value='9'/>
<enum name='NSCompositingOperationDestinationIn' value='7'/>
<enum name='NSCompositingOperationDestinationOut' value='8'/>
<enum name='NSCompositingOperationDestinationOver' value='6'/>
<enum name='NSCompositingOperationDifference' value='23'/>
<enum name='NSCompositingOperationExclusion' value='24'/>
<enum name='NSCompositingOperationHardLight' value='22'/>
<enum name='NSCompositingOperationHighlight' value='12'/>
<enum name='NSCompositingOperationHue' value='25'/>
<enum name='NSCompositingOperationLighten' value='18'/>
<enum name='NSCompositingOperationLuminosity' value='28'/>
<enum name='NSCompositingOperationMultiply' value='14'/>
<enum name='NSCompositingOperationOverlay' value='16'/>
<enum name='NSCompositingOperationPlusDarker' value='11'/>
<enum name='NSCompositingOperationPlusLighter' value='13'/>
<enum name='NSCompositingOperationSaturation' value='26'/>
<enum name='NSCompositingOperationScreen' value='15'/>
<enum name='NSCompositingOperationSoftLight' value='21'/>
<enum name='NSCompositingOperationSourceAtop' value='5'/>
<enum name='NSCompositingOperationSourceIn' value='3'/>
<enum name='NSCompositingOperationSourceOut' value='4'/>
<enum name='NSCompositingOperationSourceOver' value='2'/>
<enum name='NSCompositingOperationXOR' value='10'/>
<enum name='NSCompressedFontMask' value='512'/>
<enum name='NSCondensedFontMask' value='64'/>
<enum name='NSContentsCellMask' value='1'/>
<enum name='NSControlCharacterActionContainerBreak' value='32'/>
<enum name='NSControlCharacterActionHorizontalTab' value='4'/>
<enum name='NSControlCharacterActionLineBreak' value='8'/>
<enum name='NSControlCharacterActionParagraphBreak' value='16'/>
<enum name='NSControlCharacterActionWhitespace' value='2'/>
<enum name='NSControlCharacterActionZeroAdvancement' value='1'/>
<enum name='NSControlGlyph' value='16777215'/>
<enum name='NSControlSizeMini' value='2'/>
<enum name='NSControlSizeRegular' value='0'/>
<enum name='NSControlSizeSmall' value='1'/>
<enum name='NSCorrectionIndicatorTypeDefault' value='0'/>
<enum name='NSCorrectionIndicatorTypeGuesses' value='2'/>
<enum name='NSCorrectionIndicatorTypeReversion' value='1'/>
<enum name='NSCorrectionResponseAccepted' value='1'/>
<enum name='NSCorrectionResponseEdited' value='4'/>
<enum name='NSCorrectionResponseIgnored' value='3'/>
<enum name='NSCorrectionResponseNone' value='0'/>
<enum name='NSCorrectionResponseRejected' value='2'/>
<enum name='NSCorrectionResponseReverted' value='5'/>
<enum name='NSCriticalRequest' value='0'/>
<enum name='NSCurveToBezierPathElement' value='2'/>
<enum name='NSDecimalTabStopType' value='3'/>
<enum name='NSDefaultControlTint' value='0'/>
<enum name='NSDeleteCharFunctionKey' value='63294'/>
<enum name='NSDeleteCharacter' value='127'/>
<enum name='NSDeleteFunctionKey' value='63272'/>
<enum name='NSDeleteLineFunctionKey' value='63292'/>
<enum name='NSDescendingPageOrder' value='-1'/>
<enum name='NSDirectSelection' value='0'/>
<enum name='NSDisplayGamutP3' value='2'/>
<enum name='NSDisplayGamutSRGB' value='1'/>
<enum name='NSDisplayWindowRunLoopOrdering' value='600000'/>
<enum name='NSDoubleType' value='6'/>
<enum name='NSDownArrowFunctionKey' value='63233'/>
<enum name='NSDownTextMovement' value='22'/>
<enum name='NSDragOperationAll' value='15'/>
<enum name='NSDragOperationAll_Obsolete' value='15'/>
<enum name='NSDragOperationCopy' value='1'/>
<enum name='NSDragOperationDelete' value='32'/>
<enum name='NSDragOperationEvery' value='4294967295' value64='18446744073709551615'/>
<enum name='NSDragOperationGeneric' value='4'/>
<enum name='NSDragOperationLink' value='2'/>
<enum name='NSDragOperationMove' value='16'/>
<enum name='NSDragOperationNone' value='0'/>
<enum name='NSDragOperationPrivate' value='8'/>
<enum name='NSDraggingContextOutsideApplication' value='0'/>
<enum name='NSDraggingContextWithinApplication' value='1'/>
<enum name='NSDraggingFormationDefault' value='0'/>
<enum name='NSDraggingFormationList' value='3'/>
<enum name='NSDraggingFormationNone' value='1'/>
<enum name='NSDraggingFormationPile' value='2'/>
<enum name='NSDraggingFormationStack' value='4'/>
<enum name='NSDraggingItemEnumerationClearNonenumeratedImages' value='65536'/>
<enum name='NSDraggingItemEnumerationConcurrent' value='1'/>
<enum name='NSDrawerClosedState' value='0'/>
<enum name='NSDrawerClosingState' value='3'/>
<enum name='NSDrawerOpenState' value='2'/>
<enum name='NSDrawerOpeningState' value='1'/>
<enum name='NSEndFunctionKey' value='63275'/>
<enum name='NSEnterCharacter' value='3'/>
<enum name='NSEraDatePickerElementFlag' value='256'/>
<enum name='NSEvenOddWindingRule' value='1'/>
<enum name='NSEventButtonMaskPenLowerSide' value='2'/>
<enum name='NSEventButtonMaskPenTip' value='1'/>
<enum name='NSEventButtonMaskPenUpperSide' value='4'/>
<enum name='NSEventGestureAxisHorizontal' value='1'/>
<enum name='NSEventGestureAxisNone' value='0'/>
<enum name='NSEventGestureAxisVertical' value='2'/>
<enum name='NSEventMaskAny' value='4294967295' value64='18446744073709551615'/>
<enum name='NSEventMaskAppKitDefined' value='8192'/>
<enum name='NSEventMaskApplicationDefined' value='32768'/>
<enum name='NSEventMaskBeginGesture' value='524288'/>
<enum name='NSEventMaskCursorUpdate' value='131072'/>
<enum name='NSEventMaskDirectTouch' value64='137438953472'/>
<enum name='NSEventMaskEndGesture' value='1048576'/>
<enum name='NSEventMaskFlagsChanged' value='4096'/>
<enum name='NSEventMaskGesture' value='536870912'/>
<enum name='NSEventMaskKeyDown' value='1024'/>
<enum name='NSEventMaskKeyUp' value='2048'/>
<enum name='NSEventMaskLeftMouseDown' value='2'/>
<enum name='NSEventMaskLeftMouseDragged' value='64'/>
<enum name='NSEventMaskLeftMouseUp' value='4'/>
<enum name='NSEventMaskMagnify' value='1073741824'/>
<enum name='NSEventMaskMouseEntered' value='256'/>
<enum name='NSEventMaskMouseExited' value='512'/>
<enum name='NSEventMaskMouseMoved' value='32'/>
<enum name='NSEventMaskOtherMouseDown' value='33554432'/>
<enum name='NSEventMaskOtherMouseDragged' value='134217728'/>
<enum name='NSEventMaskOtherMouseUp' value='67108864'/>
<enum name='NSEventMaskPeriodic' value='65536'/>
<enum name='NSEventMaskPressure' value64='17179869184'/>
<enum name='NSEventMaskRightMouseDown' value='8'/>
<enum name='NSEventMaskRightMouseDragged' value='128'/>
<enum name='NSEventMaskRightMouseUp' value='16'/>
<enum name='NSEventMaskRotate' value='262144'/>
<enum name='NSEventMaskScrollWheel' value='4194304'/>
<enum name='NSEventMaskSmartMagnify' value64='4294967296'/>
<enum name='NSEventMaskSwipe' value='2147483648'/>
<enum name='NSEventMaskSystemDefined' value='16384'/>
<enum name='NSEventMaskTabletPoint' value='8388608'/>
<enum name='NSEventMaskTabletProximity' value='16777216'/>
<enum name='NSEventModifierFlagCapsLock' value='65536'/>
<enum name='NSEventModifierFlagCommand' value='1048576'/>
<enum name='NSEventModifierFlagControl' value='262144'/>
<enum name='NSEventModifierFlagDeviceIndependentFlagsMask' value='4294901760'/>
<enum name='NSEventModifierFlagFunction' value='8388608'/>
<enum name='NSEventModifierFlagHelp' value='4194304'/>
<enum name='NSEventModifierFlagNumericPad' value='2097152'/>
<enum name='NSEventModifierFlagOption' value='524288'/>
<enum name='NSEventModifierFlagShift' value='131072'/>
<enum name='NSEventPhaseBegan' value='1'/>
<enum name='NSEventPhaseCancelled' value='16'/>
<enum name='NSEventPhaseChanged' value='4'/>
<enum name='NSEventPhaseEnded' value='8'/>
<enum name='NSEventPhaseMayBegin' value='32'/>
<enum name='NSEventPhaseNone' value='0'/>
<enum name='NSEventPhaseStationary' value='2'/>
<enum name='NSEventSubtypeApplicationActivated' value='1'/>
<enum name='NSEventSubtypeApplicationDeactivated' value='2'/>
<enum name='NSEventSubtypeMouseEvent' value='0'/>
<enum name='NSEventSubtypePowerOff' value='1'/>
<enum name='NSEventSubtypeScreenChanged' value='8'/>
<enum name='NSEventSubtypeTabletPoint' value='1'/>
<enum name='NSEventSubtypeTabletProximity' value='2'/>
<enum name='NSEventSubtypeTouch' value='3'/>
<enum name='NSEventSubtypeWindowExposed' value='0'/>
<enum name='NSEventSubtypeWindowMoved' value='4'/>
<enum name='NSEventSwipeTrackingClampGestureAmount' value='2'/>
<enum name='NSEventSwipeTrackingLockDirection' value='1'/>
<enum name='NSEventTypeAppKitDefined' value='13'/>
<enum name='NSEventTypeApplicationDefined' value='15'/>
<enum name='NSEventTypeBeginGesture' value='19'/>
<enum name='NSEventTypeCursorUpdate' value='17'/>
<enum name='NSEventTypeDirectTouch' value64='37'/>
<enum name='NSEventTypeEndGesture' value='20'/>
<enum name='NSEventTypeFlagsChanged' value='12'/>
<enum name='NSEventTypeGesture' value='29'/>
<enum name='NSEventTypeKeyDown' value='10'/>
<enum name='NSEventTypeKeyUp' value='11'/>
<enum name='NSEventTypeLeftMouseDown' value='1'/>
<enum name='NSEventTypeLeftMouseDragged' value='6'/>
<enum name='NSEventTypeLeftMouseUp' value='2'/>
<enum name='NSEventTypeMagnify' value='30'/>
<enum name='NSEventTypeMouseEntered' value='8'/>
<enum name='NSEventTypeMouseExited' value='9'/>
<enum name='NSEventTypeMouseMoved' value='5'/>
<enum name='NSEventTypeOtherMouseDown' value='25'/>
<enum name='NSEventTypeOtherMouseDragged' value='27'/>
<enum name='NSEventTypeOtherMouseUp' value='26'/>
<enum name='NSEventTypePeriodic' value='16'/>
<enum name='NSEventTypePressure' value64='34'/>
<enum name='NSEventTypeQuickLook' value='33'/>
<enum name='NSEventTypeRightMouseDown' value='3'/>
<enum name='NSEventTypeRightMouseDragged' value='7'/>
<enum name='NSEventTypeRightMouseUp' value='4'/>
<enum name='NSEventTypeRotate' value='18'/>
<enum name='NSEventTypeScrollWheel' value='22'/>
<enum name='NSEventTypeSmartMagnify' value64='32'/>
<enum name='NSEventTypeSwipe' value='31'/>
<enum name='NSEventTypeSystemDefined' value='14'/>
<enum name='NSEventTypeTabletPoint' value='23'/>
<enum name='NSEventTypeTabletProximity' value='24'/>
<enum name='NSExclude10_4ElementsIconCreationOption' value='4'/>
<enum name='NSExcludeQuickDrawElementsIconCreationOption' value='2'/>
<enum name='NSExecuteFunctionKey' value='63298'/>
<enum name='NSExpandedFontMask' value='32'/>
<enum name='NSF10FunctionKey' value='63245'/>
<enum name='NSF11FunctionKey' value='63246'/>
<enum name='NSF12FunctionKey' value='63247'/>
<enum name='NSF13FunctionKey' value='63248'/>
<enum name='NSF14FunctionKey' value='63249'/>
<enum name='NSF15FunctionKey' value='63250'/>
<enum name='NSF16FunctionKey' value='63251'/>
<enum name='NSF17FunctionKey' value='63252'/>
<enum name='NSF18FunctionKey' value='63253'/>
<enum name='NSF19FunctionKey' value='63254'/>
<enum name='NSF1FunctionKey' value='63236'/>
<enum name='NSF20FunctionKey' value='63255'/>
<enum name='NSF21FunctionKey' value='63256'/>
<enum name='NSF22FunctionKey' value='63257'/>
<enum name='NSF23FunctionKey' value='63258'/>
<enum name='NSF24FunctionKey' value='63259'/>
<enum name='NSF25FunctionKey' value='63260'/>
<enum name='NSF26FunctionKey' value='63261'/>
<enum name='NSF27FunctionKey' value='63262'/>
<enum name='NSF28FunctionKey' value='63263'/>
<enum name='NSF29FunctionKey' value='63264'/>
<enum name='NSF2FunctionKey' value='63237'/>
<enum name='NSF30FunctionKey' value='63265'/>
<enum name='NSF31FunctionKey' value='63266'/>
<enum name='NSF32FunctionKey' value='63267'/>
<enum name='NSF33FunctionKey' value='63268'/>
<enum name='NSF34FunctionKey' value='63269'/>
<enum name='NSF35FunctionKey' value='63270'/>
<enum name='NSF3FunctionKey' value='63238'/>
<enum name='NSF4FunctionKey' value='63239'/>
<enum name='NSF5FunctionKey' value='63240'/>
<enum name='NSF6FunctionKey' value='63241'/>
<enum name='NSF7FunctionKey' value='63242'/>
<enum name='NSF8FunctionKey' value='63243'/>
<enum name='NSF9FunctionKey' value='63244'/>
<enum name='NSFPCurrentField' value='134'/>
<enum name='NSFPPreviewButton' value='131'/>
<enum name='NSFPPreviewField' value='128'/>
<enum name='NSFPRevertButton' value='130'/>
<enum name='NSFPSetButton' value='132'/>
<enum name='NSFPSizeField' value='129'/>
<enum name='NSFPSizeTitle' value='133'/>
<enum name='NSFileHandlingPanelCancelButton' value='0'/>
<enum name='NSFileHandlingPanelOKButton' value='1'/>
<enum name='NSFindFunctionKey' value='63301'/>
<enum name='NSFindPanelActionNext' value='2'/>
<enum name='NSFindPanelActionPrevious' value='3'/>
<enum name='NSFindPanelActionReplace' value='5'/>
<enum name='NSFindPanelActionReplaceAll' value='4'/>
<enum name='NSFindPanelActionReplaceAllInSelection' value='8'/>
<enum name='NSFindPanelActionReplaceAndFind' value='6'/>
<enum name='NSFindPanelActionSelectAll' value='9'/>
<enum name='NSFindPanelActionSelectAllInSelection' value='10'/>
<enum name='NSFindPanelActionSetFindString' value='7'/>
<enum name='NSFindPanelActionShowFindPanel' value='1'/>
<enum name='NSFindPanelSubstringMatchTypeContains' value='0'/>
<enum name='NSFindPanelSubstringMatchTypeEndsWith' value='3'/>
<enum name='NSFindPanelSubstringMatchTypeFullWord' value='2'/>
<enum name='NSFindPanelSubstringMatchTypeStartsWith' value='1'/>
<enum name='NSFitPagination' value='1'/>
<enum name='NSFixedPitchFontMask' value='1024'/>
<enum name='NSFloatType' value='3'/>
<enum name='NSFocusRingAbove' value='2'/>
<enum name='NSFocusRingBelow' value='1'/>
<enum name='NSFocusRingOnly' value='0'/>
<enum name='NSFocusRingTypeDefault' value='0'/>
<enum name='NSFocusRingTypeExterior' value='2'/>
<enum name='NSFocusRingTypeNone' value='1'/>
<enum name='NSFontAntialiasedIntegerAdvancementsRenderingMode' value='3'/>
<enum name='NSFontAntialiasedRenderingMode' value='1'/>
<enum name='NSFontAssetDownloadError' value='66304'/>
<enum name='NSFontAssetRequestOptionUsesStandardUI' value='1'/>
<enum name='NSFontBoldTrait' value='2'/>
<enum name='NSFontClarendonSerifsClass' value='1073741824'/>
<enum name='NSFontCollectionApplicationOnlyMask' value='1'/>
<enum name='NSFontCollectionVisibilityComputer' value='4'/>
<enum name='NSFontCollectionVisibilityProcess' value='1'/>
<enum name='NSFontCollectionVisibilityUser' value='2'/>
<enum name='NSFontCondensedTrait' value='64'/>
<enum name='NSFontDefaultRenderingMode' value='0'/>
<enum name='NSFontDescriptorClassClarendonSerifs' value='1073741824'/>
<enum name='NSFontDescriptorClassFreeformSerifs' value='1879048192'/>
<enum name='NSFontDescriptorClassMask' value='4026531840'/>
<enum name='NSFontDescriptorClassModernSerifs' value='805306368'/>
<enum name='NSFontDescriptorClassOldStyleSerifs' value='268435456'/>
<enum name='NSFontDescriptorClassOrnamentals' value='2415919104'/>
<enum name='NSFontDescriptorClassSansSerif' value='2147483648'/>
<enum name='NSFontDescriptorClassScripts' value='2684354560'/>
<enum name='NSFontDescriptorClassSlabSerifs' value='1342177280'/>
<enum name='NSFontDescriptorClassSymbolic' value='3221225472'/>
<enum name='NSFontDescriptorClassTransitionalSerifs' value='536870912'/>
<enum name='NSFontDescriptorClassUnknown' value='0'/>
<enum name='NSFontDescriptorTraitBold' value='2'/>
<enum name='NSFontDescriptorTraitCondensed' value='64'/>
<enum name='NSFontDescriptorTraitExpanded' value='32'/>
<enum name='NSFontDescriptorTraitItalic' value='1'/>
<enum name='NSFontDescriptorTraitLooseLeading' value='65536'/>
<enum name='NSFontDescriptorTraitMonoSpace' value='1024'/>
<enum name='NSFontDescriptorTraitTightLeading' value='32768'/>
<enum name='NSFontDescriptorTraitUIOptimized' value='4096'/>
<enum name='NSFontDescriptorTraitVertical' value='2048'/>
<enum name='NSFontErrorMaximum' value='66335'/>
<enum name='NSFontErrorMinimum' value='66304'/>
<enum name='NSFontExpandedTrait' value='32'/>
<enum name='NSFontFamilyClassMask' value='4026531840'/>
<enum name='NSFontFreeformSerifsClass' value='1879048192'/>
<enum name='NSFontIntegerAdvancementsRenderingMode' value='2'/>
<enum name='NSFontItalicTrait' value='1'/>
<enum name='NSFontModernSerifsClass' value='805306368'/>
<enum name='NSFontMonoSpaceTrait' value='1024'/>
<enum name='NSFontOldStyleSerifsClass' value='268435456'/>
<enum name='NSFontOrnamentalsClass' value='-1879048192'/>
<enum name='NSFontPanelAllEffectsModeMask' value='1048320'/>
<enum name='NSFontPanelAllModesMask' value='4294967295'/>
<enum name='NSFontPanelCollectionModeMask' value='4'/>
<enum name='NSFontPanelDocumentColorEffectModeMask' value='2048'/>
<enum name='NSFontPanelFaceModeMask' value='1'/>
<enum name='NSFontPanelModeMaskAllEffects' value='1048320'/>
<enum name='NSFontPanelModeMaskCollection' value='4'/>
<enum name='NSFontPanelModeMaskDocumentColorEffect' value='2048'/>
<enum name='NSFontPanelModeMaskFace' value='1'/>
<enum name='NSFontPanelModeMaskShadowEffect' value='4096'/>
<enum name='NSFontPanelModeMaskSize' value='2'/>
<enum name='NSFontPanelModeMaskStrikethroughEffect' value='512'/>
<enum name='NSFontPanelModeMaskTextColorEffect' value='1024'/>
<enum name='NSFontPanelModeMaskUnderlineEffect' value='256'/>
<enum name='NSFontPanelModesMaskAllModes' value='4294967295'/>
<enum name='NSFontPanelModesMaskStandardModes' value='65535'/>
<enum name='NSFontPanelShadowEffectModeMask' value='4096'/>
<enum name='NSFontPanelSizeModeMask' value='2'/>
<enum name='NSFontPanelStandardModesMask' value='65535'/>
<enum name='NSFontPanelStrikethroughEffectModeMask' value='512'/>
<enum name='NSFontPanelTextColorEffectModeMask' value='1024'/>
<enum name='NSFontPanelUnderlineEffectModeMask' value='256'/>
<enum name='NSFontSansSerifClass' value='-2147483648'/>
<enum name='NSFontScriptsClass' value='-1610612736'/>
<enum name='NSFontSlabSerifsClass' value='1342177280'/>
<enum name='NSFontSymbolicClass' value='-1073741824'/>
<enum name='NSFontTransitionalSerifsClass' value='536870912'/>
<enum name='NSFontUIOptimizedTrait' value='4096'/>
<enum name='NSFontUnknownClass' value='0'/>
<enum name='NSFontVerticalTrait' value='2048'/>
<enum name='NSFormFeedCharacter' value='12'/>
<enum name='NSGestureRecognizerStateBegan' value='1'/>
<enum name='NSGestureRecognizerStateCancelled' value='4'/>
<enum name='NSGestureRecognizerStateChanged' value='2'/>
<enum name='NSGestureRecognizerStateEnded' value='3'/>
<enum name='NSGestureRecognizerStateFailed' value='5'/>
<enum name='NSGestureRecognizerStatePossible' value='0'/>
<enum name='NSGestureRecognizerStateRecognized' value='3'/>
<enum name='NSGlyphAttributeBidiLevel' value='2'/>
<enum name='NSGlyphAttributeElastic' value='1'/>
<enum name='NSGlyphAttributeInscribe' value='5'/>
<enum name='NSGlyphAttributeSoft' value='0'/>
<enum name='NSGlyphInscribeAbove' value='2'/>
<enum name='NSGlyphInscribeBase' value='0'/>
<enum name='NSGlyphInscribeBelow' value='1'/>
<enum name='NSGlyphInscribeOverBelow' value='4'/>
<enum name='NSGlyphInscribeOverstrike' value='3'/>
<enum name='NSGlyphPropertyControlCharacter' value='2'/>
<enum name='NSGlyphPropertyElastic' value='4'/>
<enum name='NSGlyphPropertyNonBaseCharacter' value='8'/>
<enum name='NSGlyphPropertyNull' value='1'/>
<enum name='NSGradientConcaveStrong' value='2'/>
<enum name='NSGradientConcaveWeak' value='1'/>
<enum name='NSGradientConvexStrong' value='4'/>
<enum name='NSGradientConvexWeak' value='3'/>
<enum name='NSGradientDrawsAfterEndingLocation' value='2'/>
<enum name='NSGradientDrawsBeforeStartingLocation' value='1'/>
<enum name='NSGradientNone' value='0'/>
<enum name='NSGraphiteControlTint' value='6'/>
<enum name='NSGridCellPlacementBottom' value='3'/>
<enum name='NSGridCellPlacementCenter' value='4'/>
<enum name='NSGridCellPlacementFill' value='5'/>
<enum name='NSGridCellPlacementInherited' value='0'/>
<enum name='NSGridCellPlacementLeading' value='2'/>
<enum name='NSGridCellPlacementNone' value='1'/>
<enum name='NSGridCellPlacementTop' value='2'/>
<enum name='NSGridCellPlacementTrailing' value='3'/>
<enum name='NSGridRowAlignmentFirstBaseline' value='2'/>
<enum name='NSGridRowAlignmentInherited' value='0'/>
<enum name='NSGridRowAlignmentLastBaseline' value='3'/>
<enum name='NSGridRowAlignmentNone' value='1'/>
<enum name='NSGrooveBorder' value='3'/>
<enum name='NSHapticFeedbackPatternAlignment' value='1'/>
<enum name='NSHapticFeedbackPatternGeneric' value='0'/>
<enum name='NSHapticFeedbackPatternLevelChange' value='2'/>
<enum name='NSHapticFeedbackPerformanceTimeDefault' value='0'/>
<enum name='NSHapticFeedbackPerformanceTimeDrawCompleted' value='2'/>
<enum name='NSHapticFeedbackPerformanceTimeNow' value='1'/>
<enum name='NSHeavierFontAction' value='5'/>
<enum name='NSHelpFunctionKey' value='63302'/>
<enum name='NSHighlightModeMatrix' value='1'/>
<enum name='NSHomeFunctionKey' value='63273'/>
<enum name='NSHorizontalRuler' value='0'/>
<enum name='NSHourMinuteDatePickerElementFlag' value='12'/>
<enum name='NSHourMinuteSecondDatePickerElementFlag' value='14'/>
<enum name='NSIdentityMappingCharacterCollection' value='0'/>
<enum name='NSIllegalTextMovement' value='0'/>
<enum name='NSImageAbove' value='5'/>
<enum name='NSImageAlignBottom' value='5'/>
<enum name='NSImageAlignBottomLeft' value='6'/>
<enum name='NSImageAlignBottomRight' value='7'/>
<enum name='NSImageAlignCenter' value='0'/>
<enum name='NSImageAlignLeft' value='4'/>
<enum name='NSImageAlignRight' value='8'/>
<enum name='NSImageAlignTop' value='1'/>
<enum name='NSImageAlignTopLeft' value='2'/>
<enum name='NSImageAlignTopRight' value='3'/>
<enum name='NSImageBelow' value='4'/>
<enum name='NSImageCacheAlways' value='1'/>
<enum name='NSImageCacheBySize' value='2'/>
<enum name='NSImageCacheDefault' value='0'/>
<enum name='NSImageCacheNever' value='3'/>
<enum name='NSImageCellType' value='2'/>
<enum name='NSImageFrameButton' value='4'/>
<enum name='NSImageFrameGrayBezel' value='2'/>
<enum name='NSImageFrameGroove' value='3'/>
<enum name='NSImageFrameNone' value='0'/>
<enum name='NSImageFramePhoto' value='1'/>
<enum name='NSImageInterpolationDefault' value='0'/>
<enum name='NSImageInterpolationHigh' value='3'/>
<enum name='NSImageInterpolationLow' value='2'/>
<enum name='NSImageInterpolationMedium' value='4'/>
<enum name='NSImageInterpolationNone' value='1'/>
<enum name='NSImageLayoutDirectionLeftToRight' value='2'/>
<enum name='NSImageLayoutDirectionRightToLeft' value='3'/>
<enum name='NSImageLayoutDirectionUnspecified' value='-1'/>
<enum name='NSImageLeading' value='7'/>
<enum name='NSImageLeft' value='2'/>
<enum name='NSImageLoadStatusCancelled' value='1'/>
<enum name='NSImageLoadStatusCompleted' value='0'/>
<enum name='NSImageLoadStatusInvalidData' value='2'/>
<enum name='NSImageLoadStatusReadError' value='4'/>
<enum name='NSImageLoadStatusUnexpectedEOF' value='3'/>
<enum name='NSImageOnly' value='1'/>
<enum name='NSImageOverlaps' value='6'/>
<enum name='NSImageRepLoadStatusCompleted' value='-6'/>
<enum name='NSImageRepLoadStatusInvalidData' value='-4'/>
<enum name='NSImageRepLoadStatusReadingHeader' value='-2'/>
<enum name='NSImageRepLoadStatusUnexpectedEOF' value='-5'/>
<enum name='NSImageRepLoadStatusUnknownType' value='-1'/>
<enum name='NSImageRepLoadStatusWillNeedAllData' value='-3'/>
<enum name='NSImageRepMatchesDevice' value='0'/>
<enum name='NSImageResizingModeStretch' value='0'/>
<enum name='NSImageResizingModeTile' value='1'/>
<enum name='NSImageRight' value='3'/>
<enum name='NSImageScaleAxesIndependently' value='1'/>
<enum name='NSImageScaleNone' value='2'/>
<enum name='NSImageScaleProportionallyDown' value='0'/>
<enum name='NSImageScaleProportionallyUpOrDown' value='3'/>
<enum name='NSImageTrailing' value='8'/>
<enum name='NSInformationalRequest' value='10'/>
<enum name='NSInsertCharFunctionKey' value='63293'/>
<enum name='NSInsertFunctionKey' value='63271'/>
<enum name='NSInsertLineFunctionKey' value='63291'/>
<enum name='NSIntType' value='1'/>
<enum name='NSItalicFontMask' value='1'/>
<enum name='NSLandscapeOrientation' value='1'/>
<enum name='NSLayoutAttributeBaseline' value='11'/>
<enum name='NSLayoutAttributeBottom' value='4'/>
<enum name='NSLayoutAttributeCenterX' value='9'/>
<enum name='NSLayoutAttributeCenterY' value='10'/>
<enum name='NSLayoutAttributeFirstBaseline' value='12'/>
<enum name='NSLayoutAttributeHeight' value='8'/>
<enum name='NSLayoutAttributeLastBaseline' value='11'/>
<enum name='NSLayoutAttributeLeading' value='5'/>
<enum name='NSLayoutAttributeLeft' value='1'/>
<enum name='NSLayoutAttributeNotAnAttribute' value='0'/>
<enum name='NSLayoutAttributeRight' value='2'/>
<enum name='NSLayoutAttributeTop' value='3'/>
<enum name='NSLayoutAttributeTrailing' value='6'/>
<enum name='NSLayoutAttributeWidth' value='7'/>
<enum name='NSLayoutConstraintOrientationHorizontal' value='0'/>
<enum name='NSLayoutConstraintOrientationVertical' value='1'/>
<enum name='NSLayoutFormatAlignAllBaseline' value='2048'/>
<enum name='NSLayoutFormatAlignAllBottom' value='16'/>
<enum name='NSLayoutFormatAlignAllCenterX' value='512'/>
<enum name='NSLayoutFormatAlignAllCenterY' value='1024'/>
<enum name='NSLayoutFormatAlignAllFirstBaseline' value='4096'/>
<enum name='NSLayoutFormatAlignAllLastBaseline' value='2048'/>
<enum name='NSLayoutFormatAlignAllLeading' value='32'/>
<enum name='NSLayoutFormatAlignAllLeft' value='2'/>
<enum name='NSLayoutFormatAlignAllRight' value='4'/>
<enum name='NSLayoutFormatAlignAllTop' value='8'/>
<enum name='NSLayoutFormatAlignAllTrailing' value='64'/>
<enum name='NSLayoutFormatAlignmentMask' value='65535'/>
<enum name='NSLayoutFormatDirectionLeadingToTrailing' value='0'/>
<enum name='NSLayoutFormatDirectionLeftToRight' value='65536'/>
<enum name='NSLayoutFormatDirectionMask' value='196608'/>
<enum name='NSLayoutFormatDirectionRightToLeft' value='131072'/>
<enum name='NSLayoutRelationEqual' value='0'/>
<enum name='NSLayoutRelationGreaterThanOrEqual' value='1'/>
<enum name='NSLayoutRelationLessThanOrEqual' value='-1'/>
<enum name='NSLeftArrowFunctionKey' value='63234'/>
<enum name='NSLeftTabStopType' value='0'/>
<enum name='NSLeftTabsBezelBorder' value='1'/>
<enum name='NSLeftTextMovement' value='19'/>
<enum name='NSLevelIndicatorPlaceholderVisibilityAlways' value='1'/>
<enum name='NSLevelIndicatorPlaceholderVisibilityAutomatic' value='0'/>
<enum name='NSLevelIndicatorPlaceholderVisibilityWhileEditing' value='2'/>
<enum name='NSLevelIndicatorStyleContinuousCapacity' value='1'/>
<enum name='NSLevelIndicatorStyleDiscreteCapacity' value='2'/>
<enum name='NSLevelIndicatorStyleRating' value='3'/>
<enum name='NSLevelIndicatorStyleRelevancy' value='0'/>
<enum name='NSLighterFontAction' value='6'/>
<enum name='NSLineBorder' value='1'/>
<enum name='NSLineBreakByCharWrapping' value='1'/>
<enum name='NSLineBreakByClipping' value='2'/>
<enum name='NSLineBreakByTruncatingHead' value='3'/>
<enum name='NSLineBreakByTruncatingMiddle' value='5'/>
<enum name='NSLineBreakByTruncatingTail' value='4'/>
<enum name='NSLineBreakByWordWrapping' value='0'/>
<enum name='NSLineDoesntMove' value='0'/>
<enum name='NSLineMovesDown' value='3'/>
<enum name='NSLineMovesLeft' value='1'/>
<enum name='NSLineMovesRight' value='2'/>
<enum name='NSLineMovesUp' value='4'/>
<enum name='NSLineSeparatorCharacter' value='8232'/>
<enum name='NSLineSweepDown' value='2'/>
<enum name='NSLineSweepLeft' value='0'/>
<enum name='NSLineSweepRight' value='1'/>
<enum name='NSLineSweepUp' value='3'/>
<enum name='NSLineToBezierPathElement' value='1'/>
<enum name='NSListModeMatrix' value='2'/>
<enum name='NSMacintoshInterfaceStyle' value='3'/>
<enum name='NSMediaLibraryAudio' value='1'/>
<enum name='NSMediaLibraryImage' value='2'/>
<enum name='NSMediaLibraryMovie' value='4'/>
<enum name='NSMenuFunctionKey' value='63285'/>
<enum name='NSMenuPropertyItemAccessibilityDescription' value='32'/>
<enum name='NSMenuPropertyItemAttributedTitle' value='2'/>
<enum name='NSMenuPropertyItemEnabled' value='16'/>
<enum name='NSMenuPropertyItemImage' value='8'/>
<enum name='NSMenuPropertyItemKeyEquivalent' value='4'/>
<enum name='NSMenuPropertyItemTitle' value='1'/>
<enum name='NSMiterLineJoinStyle' value='0'/>
<enum name='NSModeSwitchFunctionKey' value='63303'/>
<enum name='NSMoveToBezierPathElement' value='0'/>
<enum name='NSNarrowFontMask' value='16'/>
<enum name='NSNativeShortGlyphPacking' value='5'/>
<enum name='NSNewlineCharacter' value='10'/>
<enum name='NSNextFunctionKey' value='63296'/>
<enum name='NSNextStepInterfaceStyle' value='1'/>
<enum name='NSNoBorder' value='0'/>
<enum name='NSNoCellMask' value='0'/>
<enum name='NSNoFontChangeAction' value='0'/>
<enum name='NSNoImage' value='0'/>
<enum name='NSNoInterfaceStyle' value='0'/>
<enum name='NSNoScrollerParts' value='0'/>
<enum name='NSNoTabsBezelBorder' value='4'/>
<enum name='NSNoTabsLineBorder' value='5'/>
<enum name='NSNoTabsNoBorder' value='6'/>
<enum name='NSNoTitle' value='0'/>
<enum name='NSNoUnderlineStyle' value='0'/>
<enum name='NSNonStandardCharacterSetFontMask' value='8'/>
<enum name='NSNonZeroWindingRule' value='0'/>
<enum name='NSNullCellType' value='0'/>
<enum name='NSNullGlyph' value='0'/>
<enum name='NSOKButton' value='1'/>
<enum name='NSOnlyScrollerArrows' value='1'/>
<enum name='NSOpenGLContextParameterCurrentRendererID' value='309'/>
<enum name='NSOpenGLContextParameterGPUFragmentProcessing' value='311'/>
<enum name='NSOpenGLContextParameterGPUVertexProcessing' value='310'/>
<enum name='NSOpenGLContextParameterHasDrawable' value='314'/>
<enum name='NSOpenGLContextParameterMPSwapsInFlight' value='315'/>
<enum name='NSOpenGLContextParameterRasterizationEnable' value='221'/>
<enum name='NSOpenGLContextParameterReclaimResources' value='308'/>
<enum name='NSOpenGLContextParameterStateValidation' value='301'/>
<enum name='NSOpenGLContextParameterSurfaceBackingSize' value='304'/>
<enum name='NSOpenGLContextParameterSurfaceOpacity' value='236'/>
<enum name='NSOpenGLContextParameterSurfaceOrder' value='235'/>
<enum name='NSOpenGLContextParameterSurfaceSurfaceVolatile' value='306'/>
<enum name='NSOpenGLContextParameterSwapInterval' value='222'/>
<enum name='NSOpenGLContextParameterSwapRectangle' value='200'/>
<enum name='NSOpenGLContextParameterSwapRectangleEnable' value='201'/>
<enum name='NSOpenGLGOClearFormatCache' value='502'/>
<enum name='NSOpenGLGOFormatCacheSize' value='501'/>
<enum name='NSOpenGLGOResetLibrary' value='504'/>
<enum name='NSOpenGLGORetainRenderers' value='503'/>
<enum name='NSOpenGLGOUseBuildCache' value='506'/>
<enum name='NSOpenGLPFAAccelerated' value='73'/>
<enum name='NSOpenGLPFAAcceleratedCompute' value='97'/>
<enum name='NSOpenGLPFAAccumSize' value='14'/>
<enum name='NSOpenGLPFAAllRenderers' value='1'/>
<enum name='NSOpenGLPFAAllowOfflineRenderers' value='96'/>
<enum name='NSOpenGLPFAAlphaSize' value='11'/>
<enum name='NSOpenGLPFAAuxBuffers' value='7'/>
<enum name='NSOpenGLPFAAuxDepthStencil' value='57'/>
<enum name='NSOpenGLPFABackingStore' value='76'/>
<enum name='NSOpenGLPFAClosestPolicy' value='74'/>
<enum name='NSOpenGLPFAColorFloat' value='58'/>
<enum name='NSOpenGLPFAColorSize' value='8'/>
<enum name='NSOpenGLPFACompliant' value='83'/>
<enum name='NSOpenGLPFADepthSize' value='12'/>
<enum name='NSOpenGLPFADoubleBuffer' value='5'/>
<enum name='NSOpenGLPFAFullScreen' value='54'/>
<enum name='NSOpenGLPFAMPSafe' value='78'/>
<enum name='NSOpenGLPFAMaximumPolicy' value='52'/>
<enum name='NSOpenGLPFAMinimumPolicy' value='51'/>
<enum name='NSOpenGLPFAMultiScreen' value='81'/>
<enum name='NSOpenGLPFAMultisample' value='59'/>
<enum name='NSOpenGLPFANoRecovery' value='72'/>
<enum name='NSOpenGLPFAOffScreen' value='53'/>
<enum name='NSOpenGLPFAOpenGLProfile' value='99'/>
<enum name='NSOpenGLPFAPixelBuffer' value='90'/>
<enum name='NSOpenGLPFARemotePixelBuffer' value='91'/>
<enum name='NSOpenGLPFARendererID' value='70'/>
<enum name='NSOpenGLPFARobust' value='75'/>
<enum name='NSOpenGLPFASampleAlpha' value='61'/>
<enum name='NSOpenGLPFASampleBuffers' value='55'/>
<enum name='NSOpenGLPFASamples' value='56'/>
<enum name='NSOpenGLPFAScreenMask' value='84'/>
<enum name='NSOpenGLPFASingleRenderer' value='71'/>
<enum name='NSOpenGLPFAStencilSize' value='13'/>
<enum name='NSOpenGLPFAStereo' value='6'/>
<enum name='NSOpenGLPFASupersample' value='60'/>
<enum name='NSOpenGLPFATripleBuffer' value='3'/>
<enum name='NSOpenGLPFAVirtualScreenCount' value='128'/>
<enum name='NSOpenGLPFAWindow' value='80'/>
<enum name='NSOpenGLProfileVersion3_2Core' value='12800'/>
<enum name='NSOpenGLProfileVersion4_1Core' value='16640'/>
<enum name='NSOpenGLProfileVersionLegacy' value='4096'/>
<enum name='NSOtherTextMovement' value='0'/>
<enum name='NSOutlineViewDropOnItemIndex' value='-1'/>
<enum name='NSPDFPanelRequestsParentDirectory' value='16777216'/>
<enum name='NSPDFPanelShowsOrientation' value='8'/>
<enum name='NSPDFPanelShowsPaperSize' value='4'/>
<enum name='NSPageControllerTransitionStyleHorizontalStrip' value='2'/>
<enum name='NSPageControllerTransitionStyleStackBook' value='1'/>
<enum name='NSPageControllerTransitionStyleStackHistory' value='0'/>
<enum name='NSPageDownFunctionKey' value='63277'/>
<enum name='NSPageUpFunctionKey' value='63276'/>
<enum name='NSPaperOrientationLandscape' value='1'/>
<enum name='NSPaperOrientationPortrait' value='0'/>
<enum name='NSParagraphSeparatorCharacter' value='8233'/>
<enum name='NSPasteboardContentsCurrentHostOnly' value='1'/>
<enum name='NSPasteboardReadingAsData' value='0'/>
<enum name='NSPasteboardReadingAsKeyedArchive' value='4'/>
<enum name='NSPasteboardReadingAsPropertyList' value='2'/>
<enum name='NSPasteboardReadingAsString' value='1'/>
<enum name='NSPasteboardWritingPromised' value='512'/>
<enum name='NSPathStyleNavigationBar' value='1'/>
<enum name='NSPathStylePopUp' value='2'/>
<enum name='NSPathStyleStandard' value='0'/>
<enum name='NSPauseFunctionKey' value='63280'/>
<enum name='NSPointingDeviceTypeCursor' value='2'/>
<enum name='NSPointingDeviceTypeEraser' value='3'/>
<enum name='NSPointingDeviceTypePen' value='1'/>
<enum name='NSPointingDeviceTypeUnknown' value='0'/>
<enum name='NSPopUpArrowAtBottom' value='2'/>
<enum name='NSPopUpArrowAtCenter' value='1'/>
<enum name='NSPopUpNoArrow' value='0'/>
<enum name='NSPopoverAppearanceHUD' value='1'/>
<enum name='NSPopoverAppearanceMinimal' value='0'/>
<enum name='NSPopoverBehaviorApplicationDefined' value='0'/>
<enum name='NSPopoverBehaviorSemitransient' value='2'/>
<enum name='NSPopoverBehaviorTransient' value='1'/>
<enum name='NSPortraitOrientation' value='0'/>
<enum name='NSPositiveDoubleType' value='7'/>
<enum name='NSPositiveFloatType' value='4'/>
<enum name='NSPositiveIntType' value='2'/>
<enum name='NSPosterFontMask' value='256'/>
<enum name='NSPressedTab' value='2'/>
<enum name='NSPressureBehaviorPrimaryAccelerator' value='3'/>
<enum name='NSPressureBehaviorPrimaryClick' value='1'/>
<enum name='NSPressureBehaviorPrimaryDeepClick' value='5'/>
<enum name='NSPressureBehaviorPrimaryDeepDrag' value='6'/>
<enum name='NSPressureBehaviorPrimaryDefault' value='0'/>
<enum name='NSPressureBehaviorPrimaryGeneric' value='2'/>
<enum name='NSPressureBehaviorUnknown' value='-1'/>
<enum name='NSPrevFunctionKey' value='63295'/>
<enum name='NSPrintFunctionKey' value='63288'/>
<enum name='NSPrintPanelShowsCopies' value='1'/>
<enum name='NSPrintPanelShowsOrientation' value='8'/>
<enum name='NSPrintPanelShowsPageRange' value='2'/>
<enum name='NSPrintPanelShowsPageSetupAccessory' value='256'/>
<enum name='NSPrintPanelShowsPaperSize' value='4'/>
<enum name='NSPrintPanelShowsPreview' value='131072'/>
<enum name='NSPrintPanelShowsPrintSelection' value='32'/>
<enum name='NSPrintPanelShowsScaling' value='16'/>
<enum name='NSPrintRenderingQualityBest' value='0'/>
<enum name='NSPrintRenderingQualityResponsive' value='1'/>
<enum name='NSPrintScreenFunctionKey' value='63278'/>
<enum name='NSPrinterTableError' value='2'/>
<enum name='NSPrinterTableNotFound' value='1'/>
<enum name='NSPrinterTableOK' value='0'/>
<enum name='NSPrintingCancelled' value='0'/>
<enum name='NSPrintingFailure' value='3'/>
<enum name='NSPrintingReplyLater' value='2'/>
<enum name='NSPrintingSuccess' value='1'/>
<enum name='NSProgressIndicatorPreferredAquaThickness' value='12'/>
<enum name='NSProgressIndicatorPreferredLargeThickness' value='18'/>
<enum name='NSProgressIndicatorPreferredSmallThickness' value='10'/>
<enum name='NSProgressIndicatorPreferredThickness' value='14'/>
<enum name='NSProgressIndicatorStyleBar' value='0'/>
<enum name='NSProgressIndicatorStyleSpinning' value='1'/>
<enum name='NSPushInCell' value='2'/>
<enum name='NSPushInCellMask' value='2'/>
<enum name='NSRadioModeMatrix' value='0'/>
<enum name='NSRangeDateMode' value='1'/>
<enum name='NSRedoFunctionKey' value='63300'/>
<enum name='NSRemoteNotificationTypeAlert' value='4'/>
<enum name='NSRemoteNotificationTypeBadge' value='1'/>
<enum name='NSRemoteNotificationTypeNone' value='0'/>
<enum name='NSRemoteNotificationTypeSound' value='2'/>
<enum name='NSRemoveTraitFontAction' value='7'/>
<enum name='NSResetCursorRectsRunLoopOrdering' value='700000'/>
<enum name='NSResetFunctionKey' value='63283'/>
<enum name='NSReturnTextMovement' value='16'/>
<enum name='NSRightArrowFunctionKey' value='63235'/>
<enum name='NSRightTabStopType' value='1'/>
<enum name='NSRightTabsBezelBorder' value='3'/>
<enum name='NSRightTextMovement' value='20'/>
<enum name='NSRoundLineCapStyle' value='1'/>
<enum name='NSRoundLineJoinStyle' value='1'/>
<enum name='NSRuleEditorNestingModeCompound' value='2'/>
<enum name='NSRuleEditorNestingModeList' value='1'/>
<enum name='NSRuleEditorNestingModeSimple' value='3'/>
<enum name='NSRuleEditorNestingModeSingle' value='0'/>
<enum name='NSRuleEditorRowTypeCompound' value='1'/>
<enum name='NSRuleEditorRowTypeSimple' value='0'/>
<enum name='NSRunAbortedResponse' value='-1001'/>
<enum name='NSRunContinuesResponse' value='-1002'/>
<enum name='NSRunStoppedResponse' value='-1000'/>
<enum name='NSSaveAsOperation' value='1'/>
<enum name='NSSaveOperation' value='0'/>
<enum name='NSSaveToOperation' value='2'/>
<enum name='NSScaleNone' value='2'/>
<enum name='NSScaleProportionally' value='0'/>
<enum name='NSScaleToFit' value='1'/>
<enum name='NSScrollElasticityAllowed' value='2'/>
<enum name='NSScrollElasticityAutomatic' value='0'/>
<enum name='NSScrollElasticityNone' value='1'/>
<enum name='NSScrollLockFunctionKey' value='63279'/>
<enum name='NSScrollViewFindBarPositionAboveContent' value='1'/>
<enum name='NSScrollViewFindBarPositionAboveHorizontalRuler' value='0'/>
<enum name='NSScrollViewFindBarPositionBelowContent' value='2'/>
<enum name='NSScrollerArrowsDefaultSetting' value='0'/>
<enum name='NSScrollerArrowsMaxEnd' value='0'/>
<enum name='NSScrollerArrowsMinEnd' value='1'/>
<enum name='NSScrollerArrowsNone' value='2'/>
<enum name='NSScrollerDecrementArrow' value='1'/>
<enum name='NSScrollerDecrementLine' value='4'/>
<enum name='NSScrollerDecrementPage' value='1'/>
<enum name='NSScrollerIncrementArrow' value='0'/>
<enum name='NSScrollerIncrementLine' value='5'/>
<enum name='NSScrollerIncrementPage' value='3'/>
<enum name='NSScrollerKnob' value='2'/>
<enum name='NSScrollerKnobSlot' value='6'/>
<enum name='NSScrollerKnobStyleDark' value='1'/>
<enum name='NSScrollerKnobStyleDefault' value='0'/>
<enum name='NSScrollerKnobStyleLight' value='2'/>
<enum name='NSScrollerNoPart' value='0'/>
<enum name='NSScrollerStyleLegacy' value='0'/>
<enum name='NSScrollerStyleOverlay' value='1'/>
<enum name='NSScrubberAlignmentCenter' value='3'/>
<enum name='NSScrubberAlignmentLeading' value='1'/>
<enum name='NSScrubberAlignmentNone' value='0'/>
<enum name='NSScrubberAlignmentTrailing' value='2'/>
<enum name='NSScrubberModeFixed' value='0'/>
<enum name='NSScrubberModeFree' value='1'/>
<enum name='NSSegmentDistributionFill' value='1'/>
<enum name='NSSegmentDistributionFillEqually' value='2'/>
<enum name='NSSegmentDistributionFillProportionally' value='3'/>
<enum name='NSSegmentDistributionFit' value='0'/>
<enum name='NSSegmentStyleAutomatic' value='0'/>
<enum name='NSSegmentStyleCapsule' value='5'/>
<enum name='NSSegmentStyleRoundRect' value='3'/>
<enum name='NSSegmentStyleRounded' value='1'/>
<enum name='NSSegmentStyleSeparated' value='8'/>
<enum name='NSSegmentStyleSmallSquare' value='6'/>
<enum name='NSSegmentStyleTexturedRounded' value='2'/>
<enum name='NSSegmentStyleTexturedSquare' value='4'/>
<enum name='NSSegmentSwitchTrackingMomentary' value='2'/>
<enum name='NSSegmentSwitchTrackingMomentaryAccelerator' value='3'/>
<enum name='NSSegmentSwitchTrackingSelectAny' value='1'/>
<enum name='NSSegmentSwitchTrackingSelectOne' value='0'/>
<enum name='NSSelectByCharacter' value='0'/>
<enum name='NSSelectByParagraph' value='2'/>
<enum name='NSSelectByWord' value='1'/>
<enum name='NSSelectFunctionKey' value='63297'/>
<enum name='NSSelectedTab' value='0'/>
<enum name='NSSelectingNext' value='1'/>
<enum name='NSSelectingPrevious' value='2'/>
<enum name='NSSelectionAffinityDownstream' value='1'/>
<enum name='NSSelectionAffinityUpstream' value='0'/>
<enum name='NSServiceApplicationLaunchFailedError' value='66561'/>
<enum name='NSServiceApplicationNotFoundError' value='66560'/>
<enum name='NSServiceErrorMaximum' value='66817'/>
<enum name='NSServiceErrorMinimum' value='66560'/>
<enum name='NSServiceInvalidPasteboardDataError' value='66563'/>
<enum name='NSServiceMalformedServiceDictionaryError' value='66564'/>
<enum name='NSServiceMiscellaneousError' value='66800'/>
<enum name='NSServiceRequestTimedOutError' value='66562'/>
<enum name='NSSharingContentScopeFull' value='2'/>
<enum name='NSSharingContentScopeItem' value='0'/>
<enum name='NSSharingContentScopePartial' value='1'/>
<enum name='NSSharingServiceErrorMaximum' value='67327'/>
<enum name='NSSharingServiceErrorMinimum' value='67072'/>
<enum name='NSSharingServiceNotConfiguredError' value='67072'/>
<enum name='NSShowControlGlyphs' value='1'/>
<enum name='NSShowInvisibleGlyphs' value='2'/>
<enum name='NSSingleDateMode' value='0'/>
<enum name='NSSingleUnderlineStyle' value='1'/>
<enum name='NSSizeDownFontAction' value='4'/>
<enum name='NSSizeUpFontAction' value='3'/>
<enum name='NSSliderTypeCircular' value='1'/>
<enum name='NSSliderTypeLinear' value='0'/>
<enum name='NSSmallCapsFontMask' value='128'/>
<enum name='NSSpecialPageOrder' value='0'/>
<enum name='NSSpeechImmediateBoundary' value='0'/>
<enum name='NSSpeechSentenceBoundary' value='2'/>
<enum name='NSSpeechWordBoundary' value='1'/>
<enum name='NSSpellingStateGrammarFlag' value='2'/>
<enum name='NSSpellingStateSpellingFlag' value='1'/>
<enum name='NSSplitViewDividerStylePaneSplitter' value='3'/>
<enum name='NSSplitViewDividerStyleThick' value='1'/>
<enum name='NSSplitViewDividerStyleThin' value='2'/>
<enum name='NSSplitViewItemBehaviorContentList' value='2'/>
<enum name='NSSplitViewItemBehaviorDefault' value='0'/>
<enum name='NSSplitViewItemBehaviorSidebar' value='1'/>
<enum name='NSSplitViewItemCollapseBehaviorDefault' value='0'/>
<enum name='NSSplitViewItemCollapseBehaviorPreferResizingSiblingsWithFixedSplitView' value='2'/>
<enum name='NSSplitViewItemCollapseBehaviorPreferResizingSplitViewWithFixedSiblings' value='1'/>
<enum name='NSSplitViewItemCollapseBehaviorUseConstraints' value='3'/>
<enum name='NSSpringLoadingContinuousActivation' value='2'/>
<enum name='NSSpringLoadingDisabled' value='0'/>
<enum name='NSSpringLoadingEnabled' value='1'/>
<enum name='NSSpringLoadingHighlightEmphasized' value='2'/>
<enum name='NSSpringLoadingHighlightNone' value='0'/>
<enum name='NSSpringLoadingHighlightStandard' value='1'/>
<enum name='NSSpringLoadingNoHover' value='8'/>
<enum name='NSSquareLineCapStyle' value='2'/>
<enum name='NSStackViewDistributionEqualCentering' value='4'/>
<enum name='NSStackViewDistributionEqualSpacing' value='3'/>
<enum name='NSStackViewDistributionFill' value='0'/>
<enum name='NSStackViewDistributionFillEqually' value='1'/>
<enum name='NSStackViewDistributionFillProportionally' value='2'/>
<enum name='NSStackViewDistributionGravityAreas' value='-1'/>
<enum name='NSStackViewGravityBottom' value='3'/>
<enum name='NSStackViewGravityCenter' value='2'/>
<enum name='NSStackViewGravityLeading' value='1'/>
<enum name='NSStackViewGravityTop' value='1'/>
<enum name='NSStackViewGravityTrailing' value='3'/>
<enum name='NSStatusItemBehaviorRemovalAllowed' value='2'/>
<enum name='NSStatusItemBehaviorTerminationOnRemoval' value='4'/>
<enum name='NSStopFunctionKey' value='63284'/>
<enum name='NSStringDrawingDisableScreenFontSubstitution' value='4'/>
<enum name='NSStringDrawingOneShot' value='16'/>
<enum name='NSStringDrawingTruncatesLastVisibleLine' value='32'/>
<enum name='NSStringDrawingUsesDeviceMetrics' value='8'/>
<enum name='NSStringDrawingUsesFontLeading' value='2'/>
<enum name='NSStringDrawingUsesLineFragmentOrigin' value='1'/>
<enum name='NSSysReqFunctionKey' value='63281'/>
<enum name='NSSystemFunctionKey' value='63287'/>
<enum name='NSTIFFCompressionCCITTFAX3' value='3'/>
<enum name='NSTIFFCompressionCCITTFAX4' value='4'/>
<enum name='NSTIFFCompressionJPEG' value='6'/>
<enum name='NSTIFFCompressionLZW' value='5'/>
<enum name='NSTIFFCompressionNEXT' value='32766'/>
<enum name='NSTIFFCompressionNone' value='1'/>
<enum name='NSTIFFCompressionOldJPEG' value='32865'/>
<enum name='NSTIFFCompressionPackBits' value='32773'/>
<enum name='NSTabCharacter' value='9'/>
<enum name='NSTabPositionBottom' value='3'/>
<enum name='NSTabPositionLeft' value='2'/>
<enum name='NSTabPositionNone' value='0'/>
<enum name='NSTabPositionRight' value='4'/>
<enum name='NSTabPositionTop' value='1'/>
<enum name='NSTabTextMovement' value='17'/>
<enum name='NSTabViewBorderTypeBezel' value='2'/>
<enum name='NSTabViewBorderTypeLine' value='1'/>
<enum name='NSTabViewBorderTypeNone' value='0'/>
<enum name='NSTabViewControllerTabStyleSegmentedControlOnBottom' value='1'/>
<enum name='NSTabViewControllerTabStyleSegmentedControlOnTop' value='0'/>
<enum name='NSTabViewControllerTabStyleToolbar' value='2'/>
<enum name='NSTabViewControllerTabStyleUnspecified' value='-1'/>
<enum name='NSTableColumnAutoresizingMask' value='1'/>
<enum name='NSTableColumnNoResizing' value='0'/>
<enum name='NSTableColumnUserResizingMask' value='2'/>
<enum name='NSTableRowActionEdgeLeading' value='0'/>
<enum name='NSTableRowActionEdgeTrailing' value='1'/>
<enum name='NSTableViewAnimationEffectFade' value='1'/>
<enum name='NSTableViewAnimationEffectGap' value='2'/>
<enum name='NSTableViewAnimationEffectNone' value='0'/>
<enum name='NSTableViewAnimationSlideDown' value='32'/>
<enum name='NSTableViewAnimationSlideLeft' value='48'/>
<enum name='NSTableViewAnimationSlideRight' value='64'/>
<enum name='NSTableViewAnimationSlideUp' value='16'/>
<enum name='NSTableViewDashedHorizontalGridLineMask' value='8'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleGap' value='2'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleNone' value='-1'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleRegular' value='0'/>
<enum name='NSTableViewDraggingDestinationFeedbackStyleSourceList' value='1'/>
<enum name='NSTableViewDropAbove' value='1'/>
<enum name='NSTableViewDropOn' value='0'/>
<enum name='NSTableViewFirstColumnOnlyAutoresizingStyle' value='5'/>
<enum name='NSTableViewGridNone' value='0'/>
<enum name='NSTableViewLastColumnOnlyAutoresizingStyle' value='4'/>
<enum name='NSTableViewNoColumnAutoresizing' value='0'/>
<enum name='NSTableViewReverseSequentialColumnAutoresizingStyle' value='3'/>
<enum name='NSTableViewRowActionStyleDestructive' value='1'/>
<enum name='NSTableViewRowActionStyleRegular' value='0'/>
<enum name='NSTableViewRowSizeStyleCustom' value='0'/>
<enum name='NSTableViewRowSizeStyleDefault' value='-1'/>
<enum name='NSTableViewRowSizeStyleLarge' value='3'/>
<enum name='NSTableViewRowSizeStyleMedium' value='2'/>
<enum name='NSTableViewRowSizeStyleSmall' value='1'/>
<enum name='NSTableViewSelectionHighlightStyleNone' value='-1'/>
<enum name='NSTableViewSelectionHighlightStyleRegular' value='0'/>
<enum name='NSTableViewSelectionHighlightStyleSourceList' value='1'/>
<enum name='NSTableViewSequentialColumnAutoresizingStyle' value='2'/>
<enum name='NSTableViewSolidHorizontalGridLineMask' value='2'/>
<enum name='NSTableViewSolidVerticalGridLineMask' value='1'/>
<enum name='NSTableViewUniformColumnAutoresizingStyle' value='1'/>
<enum name='NSTerminateCancel' value='0'/>
<enum name='NSTerminateLater' value='2'/>
<enum name='NSTerminateNow' value='1'/>
<enum name='NSTextAlignmentCenter' value='2'/>
<enum name='NSTextAlignmentJustified' value='3'/>
<enum name='NSTextAlignmentLeft' value='0'/>
<enum name='NSTextAlignmentNatural' value='4'/>
<enum name='NSTextAlignmentRight' value='1'/>
<enum name='NSTextBlockAbsoluteValueType' value='0'/>
<enum name='NSTextBlockBaselineAlignment' value='3'/>
<enum name='NSTextBlockBorder' value='0'/>
<enum name='NSTextBlockBottomAlignment' value='2'/>
<enum name='NSTextBlockHeight' value='4'/>
<enum name='NSTextBlockMargin' value='1'/>
<enum name='NSTextBlockMaximumHeight' value='6'/>
<enum name='NSTextBlockMaximumWidth' value='2'/>
<enum name='NSTextBlockMiddleAlignment' value='1'/>
<enum name='NSTextBlockMinimumHeight' value='5'/>
<enum name='NSTextBlockMinimumWidth' value='1'/>
<enum name='NSTextBlockPadding' value='-1'/>
<enum name='NSTextBlockPercentageValueType' value='1'/>
<enum name='NSTextBlockTopAlignment' value='0'/>
<enum name='NSTextBlockWidth' value='0'/>
<enum name='NSTextCellType' value='1'/>
<enum name='NSTextFieldAndStepperDatePickerStyle' value='0'/>
<enum name='NSTextFieldDatePickerStyle' value='2'/>
<enum name='NSTextFieldRoundedBezel' value='1'/>
<enum name='NSTextFieldSquareBezel' value='0'/>
<enum name='NSTextFinderActionHideFindInterface' value='11'/>
<enum name='NSTextFinderActionHideReplaceInterface' value='13'/>
<enum name='NSTextFinderActionNextMatch' value='2'/>
<enum name='NSTextFinderActionPreviousMatch' value='3'/>
<enum name='NSTextFinderActionReplace' value='5'/>
<enum name='NSTextFinderActionReplaceAll' value='4'/>
<enum name='NSTextFinderActionReplaceAllInSelection' value='8'/>
<enum name='NSTextFinderActionReplaceAndFind' value='6'/>
<enum name='NSTextFinderActionSelectAll' value='9'/>
<enum name='NSTextFinderActionSelectAllInSelection' value='10'/>
<enum name='NSTextFinderActionSetSearchString' value='7'/>
<enum name='NSTextFinderActionShowFindInterface' value='1'/>
<enum name='NSTextFinderActionShowReplaceInterface' value='12'/>
<enum name='NSTextFinderMatchingTypeContains' value='0'/>
<enum name='NSTextFinderMatchingTypeEndsWith' value='3'/>
<enum name='NSTextFinderMatchingTypeFullWord' value='2'/>
<enum name='NSTextFinderMatchingTypeStartsWith' value='1'/>
<enum name='NSTextLayoutOrientationHorizontal' value='0'/>
<enum name='NSTextLayoutOrientationVertical' value='1'/>
<enum name='NSTextListPrependEnclosingMarker' value='1'/>
<enum name='NSTextMovementBacktab' value='18'/>
<enum name='NSTextMovementCancel' value='23'/>
<enum name='NSTextMovementDown' value='22'/>
<enum name='NSTextMovementLeft' value='19'/>
<enum name='NSTextMovementOther' value='0'/>
<enum name='NSTextMovementReturn' value='16'/>
<enum name='NSTextMovementRight' value='20'/>
<enum name='NSTextMovementTab' value='17'/>
<enum name='NSTextMovementUp' value='21'/>
<enum name='NSTextReadInapplicableDocumentTypeError' value='65806'/>
<enum name='NSTextReadWriteErrorMaximum' value='66303'/>
<enum name='NSTextReadWriteErrorMinimum' value='65792'/>
<enum name='NSTextStorageEditedAttributes' value='1'/>
<enum name='NSTextStorageEditedCharacters' value='2'/>
<enum name='NSTextTableAutomaticLayoutAlgorithm' value='0'/>
<enum name='NSTextTableFixedLayoutAlgorithm' value='1'/>
<enum name='NSTextWriteInapplicableDocumentTypeError' value='66062'/>
<enum name='NSTextWritingDirectionEmbedding' value='0'/>
<enum name='NSTextWritingDirectionOverride' value='2'/>
<enum name='NSTickMarkPositionAbove' value='1'/>
<enum name='NSTickMarkPositionBelow' value='0'/>
<enum name='NSTickMarkPositionLeading' value='1'/>
<enum name='NSTickMarkPositionTrailing' value='0'/>
<enum name='NSTimeZoneDatePickerElementFlag' value='16'/>
<enum name='NSTokenStyleDefault' value='0'/>
<enum name='NSTokenStyleNone' value='1'/>
<enum name='NSTokenStylePlainSquared' value='4'/>
<enum name='NSTokenStyleRounded' value='2'/>
<enum name='NSTokenStyleSquared' value='3'/>
<enum name='NSToolbarDisplayModeDefault' value='0'/>
<enum name='NSToolbarDisplayModeIconAndLabel' value='1'/>
<enum name='NSToolbarDisplayModeIconOnly' value='2'/>
<enum name='NSToolbarDisplayModeLabelOnly' value='3'/>
<enum name='NSToolbarSizeModeDefault' value='0'/>
<enum name='NSToolbarSizeModeRegular' value='1'/>
<enum name='NSToolbarSizeModeSmall' value='2'/>
<enum name='NSTopTabsBezelBorder' value='0'/>
<enum name='NSTouchPhaseAny' value='4294967295' value64='18446744073709551615'/>
<enum name='NSTouchPhaseBegan' value='1'/>
<enum name='NSTouchPhaseCancelled' value='16'/>
<enum name='NSTouchPhaseEnded' value='8'/>
<enum name='NSTouchPhaseMoved' value='2'/>
<enum name='NSTouchPhaseStationary' value='4'/>
<enum name='NSTouchPhaseTouching' value='7'/>
<enum name='NSTouchTypeDirect' value='0'/>
<enum name='NSTouchTypeIndirect' value='1'/>
<enum name='NSTouchTypeMaskDirect' value='1'/>
<enum name='NSTouchTypeMaskIndirect' value='2'/>
<enum name='NSTrackModeMatrix' value='3'/>
<enum name='NSTrackingActiveAlways' value='128'/>
<enum name='NSTrackingActiveInActiveApp' value='64'/>
<enum name='NSTrackingActiveInKeyWindow' value='32'/>
<enum name='NSTrackingActiveWhenFirstResponder' value='16'/>
<enum name='NSTrackingAssumeInside' value='256'/>
<enum name='NSTrackingCursorUpdate' value='4'/>
<enum name='NSTrackingEnabledDuringMouseDrag' value='1024'/>
<enum name='NSTrackingInVisibleRect' value='512'/>
<enum name='NSTrackingMouseEnteredAndExited' value='1'/>
<enum name='NSTrackingMouseMoved' value='2'/>
<enum name='NSTypesetterBehavior_10_2' value='2'/>
<enum name='NSTypesetterBehavior_10_2_WithCompatibility' value='1'/>
<enum name='NSTypesetterBehavior_10_3' value='3'/>
<enum name='NSTypesetterBehavior_10_4' value='4'/>
<enum name='NSTypesetterContainerBreakAction' value='32'/>
<enum name='NSTypesetterHorizontalTabAction' value='4'/>
<enum name='NSTypesetterLatestBehavior' value='-1'/>
<enum name='NSTypesetterLineBreakAction' value='8'/>
<enum name='NSTypesetterOriginalBehavior' value='0'/>
<enum name='NSTypesetterParagraphBreakAction' value='16'/>
<enum name='NSTypesetterWhitespaceAction' value='2'/>
<enum name='NSTypesetterZeroAdvancementAction' value='1'/>
<enum name='NSUnboldFontMask' value='4'/>
<enum name='NSUnderlineByWord' value='32768'/>
<enum name='NSUnderlinePatternDash' value='512'/>
<enum name='NSUnderlinePatternDashDot' value='768'/>
<enum name='NSUnderlinePatternDashDotDot' value='1024'/>
<enum name='NSUnderlinePatternDot' value='256'/>
<enum name='NSUnderlinePatternSolid' value='0'/>
<enum name='NSUnderlineStyleDouble' value='9'/>
<enum name='NSUnderlineStyleNone' value='0'/>
<enum name='NSUnderlineStyleSingle' value='1'/>
<enum name='NSUnderlineStyleThick' value='2'/>
<enum name='NSUndoFunctionKey' value='63299'/>
<enum name='NSUnitalicFontMask' value='16777216'/>
<enum name='NSUnknownPageOrder' value='2'/>
<enum name='NSUnscaledWindowMask' value='2048'/>
<enum name='NSUpArrowFunctionKey' value='63232'/>
<enum name='NSUpTextMovement' value='21'/>
<enum name='NSUpdateWindowsRunLoopOrdering' value='500000'/>
<enum name='NSUserFunctionKey' value='63286'/>
<enum name='NSUserInterfaceLayoutDirectionLeftToRight' value='0'/>
<enum name='NSUserInterfaceLayoutDirectionRightToLeft' value='1'/>
<enum name='NSUserInterfaceLayoutOrientationHorizontal' value='0'/>
<enum name='NSUserInterfaceLayoutOrientationVertical' value='1'/>
<enum name='NSVerticalRuler' value='1'/>
<enum name='NSViaPanelFontAction' value='1'/>
<enum name='NSViewControllerTransitionAllowUserInteraction' value='4096'/>
<enum name='NSViewControllerTransitionCrossfade' value='1'/>
<enum name='NSViewControllerTransitionNone' value='0'/>
<enum name='NSViewControllerTransitionSlideBackward' value='384'/>
<enum name='NSViewControllerTransitionSlideDown' value='32'/>
<enum name='NSViewControllerTransitionSlideForward' value='320'/>
<enum name='NSViewControllerTransitionSlideLeft' value='64'/>
<enum name='NSViewControllerTransitionSlideRight' value='128'/>
<enum name='NSViewControllerTransitionSlideUp' value='16'/>
<enum name='NSViewHeightSizable' value='16'/>
<enum name='NSViewLayerContentsPlacementBottom' value='8'/>
<enum name='NSViewLayerContentsPlacementBottomLeft' value='9'/>
<enum name='NSViewLayerContentsPlacementBottomRight' value='7'/>
<enum name='NSViewLayerContentsPlacementCenter' value='3'/>
<enum name='NSViewLayerContentsPlacementLeft' value='10'/>
<enum name='NSViewLayerContentsPlacementRight' value='6'/>
<enum name='NSViewLayerContentsPlacementScaleAxesIndependently' value='0'/>
<enum name='NSViewLayerContentsPlacementScaleProportionallyToFill' value='2'/>
<enum name='NSViewLayerContentsPlacementScaleProportionallyToFit' value='1'/>
<enum name='NSViewLayerContentsPlacementTop' value='4'/>
<enum name='NSViewLayerContentsPlacementTopLeft' value='11'/>
<enum name='NSViewLayerContentsPlacementTopRight' value='5'/>
<enum name='NSViewLayerContentsRedrawBeforeViewResize' value='3'/>
<enum name='NSViewLayerContentsRedrawCrossfade' value='4'/>
<enum name='NSViewLayerContentsRedrawDuringViewResize' value='2'/>
<enum name='NSViewLayerContentsRedrawNever' value='0'/>
<enum name='NSViewLayerContentsRedrawOnSetNeedsDisplay' value='1'/>
<enum name='NSViewMaxXMargin' value='4'/>
<enum name='NSViewMaxYMargin' value='32'/>
<enum name='NSViewMinXMargin' value='1'/>
<enum name='NSViewMinYMargin' value='8'/>
<enum name='NSViewNotSizable' value='0'/>
<enum name='NSViewWidthSizable' value='2'/>
<enum name='NSVisualEffectBlendingModeBehindWindow' value='0'/>
<enum name='NSVisualEffectBlendingModeWithinWindow' value='1'/>
<enum name='NSVisualEffectMaterialAppearanceBased' value='0'/>
<enum name='NSVisualEffectMaterialDark' value='2'/>
<enum name='NSVisualEffectMaterialLight' value='1'/>
<enum name='NSVisualEffectMaterialMediumLight' value='8'/>
<enum name='NSVisualEffectMaterialMenu' value='5'/>
<enum name='NSVisualEffectMaterialPopover' value='6'/>
<enum name='NSVisualEffectMaterialSelection' value='4'/>
<enum name='NSVisualEffectMaterialSidebar' value='7'/>
<enum name='NSVisualEffectMaterialTitlebar' value='3'/>
<enum name='NSVisualEffectMaterialUltraDark' value='9'/>
<enum name='NSVisualEffectStateActive' value='1'/>
<enum name='NSVisualEffectStateFollowsWindowActiveState' value='0'/>
<enum name='NSVisualEffectStateInactive' value='2'/>
<enum name='NSWantsBidiLevels' value='4'/>
<enum name='NSWindowAbove' value='1'/>
<enum name='NSWindowAnimationBehaviorAlertPanel' value='5'/>
<enum name='NSWindowAnimationBehaviorDefault' value='0'/>
<enum name='NSWindowAnimationBehaviorDocumentWindow' value='3'/>
<enum name='NSWindowAnimationBehaviorNone' value='2'/>
<enum name='NSWindowAnimationBehaviorUtilityWindow' value='4'/>
<enum name='NSWindowBackingLocationDefault' value='0'/>
<enum name='NSWindowBackingLocationMainMemory' value='2'/>
<enum name='NSWindowBackingLocationVideoMemory' value='1'/>
<enum name='NSWindowBelow' value='-1'/>
<enum name='NSWindowCloseButton' value='0'/>
<enum name='NSWindowCollectionBehaviorCanJoinAllSpaces' value='1'/>
<enum name='NSWindowCollectionBehaviorDefault' value='0'/>
<enum name='NSWindowCollectionBehaviorFullScreenAllowsTiling' value='2048'/>
<enum name='NSWindowCollectionBehaviorFullScreenAuxiliary' value='256'/>
<enum name='NSWindowCollectionBehaviorFullScreenDisallowsTiling' value='4096'/>
<enum name='NSWindowCollectionBehaviorFullScreenNone' value='512'/>
<enum name='NSWindowCollectionBehaviorFullScreenPrimary' value='128'/>
<enum name='NSWindowCollectionBehaviorIgnoresCycle' value='64'/>
<enum name='NSWindowCollectionBehaviorManaged' value='4'/>
<enum name='NSWindowCollectionBehaviorMoveToActiveSpace' value='2'/>
<enum name='NSWindowCollectionBehaviorParticipatesInCycle' value='32'/>
<enum name='NSWindowCollectionBehaviorStationary' value='16'/>
<enum name='NSWindowCollectionBehaviorTransient' value='8'/>
<enum name='NSWindowDepthOnehundredtwentyeightBitRGB' value='544'/>
<enum name='NSWindowDepthSixtyfourBitRGB' value='528'/>
<enum name='NSWindowDepthTwentyfourBitRGB' value='520'/>
<enum name='NSWindowDocumentIconButton' value='4'/>
<enum name='NSWindowDocumentVersionsButton' value='6'/>
<enum name='NSWindowFullScreenButton' value='7'/>
<enum name='NSWindowListOrderedFrontToBack' value='1'/>
<enum name='NSWindowMiniaturizeButton' value='1'/>
<enum name='NSWindowNumberListAllApplications' value='1'/>
<enum name='NSWindowNumberListAllSpaces' value='16'/>
<enum name='NSWindowOcclusionStateVisible' value='2'/>
<enum name='NSWindowOut' value='0'/>
<enum name='NSWindowSharingNone' value='0'/>
<enum name='NSWindowSharingReadOnly' value='1'/>
<enum name='NSWindowSharingReadWrite' value='2'/>
<enum name='NSWindowStyleMaskBorderless' value='0'/>
<enum name='NSWindowStyleMaskClosable' value='2'/>
<enum name='NSWindowStyleMaskDocModalWindow' value='64'/>
<enum name='NSWindowStyleMaskFullScreen' value='16384'/>
<enum name='NSWindowStyleMaskFullSizeContentView' value='32768'/>
<enum name='NSWindowStyleMaskHUDWindow' value='8192'/>
<enum name='NSWindowStyleMaskMiniaturizable' value='4'/>
<enum name='NSWindowStyleMaskNonactivatingPanel' value='128'/>
<enum name='NSWindowStyleMaskResizable' value='8'/>
<enum name='NSWindowStyleMaskTexturedBackground' value='256'/>
<enum name='NSWindowStyleMaskTitled' value='1'/>
<enum name='NSWindowStyleMaskUnifiedTitleAndToolbar' value='4096'/>
<enum name='NSWindowStyleMaskUtilityWindow' value='16'/>
<enum name='NSWindowTabbingModeAutomatic' value='0'/>
<enum name='NSWindowTabbingModeDisallowed' value='2'/>
<enum name='NSWindowTabbingModePreferred' value='1'/>
<enum name='NSWindowTitleHidden' value='1'/>
<enum name='NSWindowTitleVisible' value='0'/>
<enum name='NSWindowToolbarButton' value='3'/>
<enum name='NSWindowUserTabbingPreferenceAlways' value='1'/>
<enum name='NSWindowUserTabbingPreferenceInFullScreen' value='2'/>
<enum name='NSWindowUserTabbingPreferenceManual' value='0'/>
<enum name='NSWindowZoomButton' value='2'/>
<enum name='NSWindows95InterfaceStyle' value='2'/>
<enum name='NSWorkspaceLaunchAllowingClassicStartup' value='131072'/>
<enum name='NSWorkspaceLaunchAndHide' value='1048576'/>
<enum name='NSWorkspaceLaunchAndHideOthers' value='2097152'/>
<enum name='NSWorkspaceLaunchAndPrint' value='2'/>
<enum name='NSWorkspaceLaunchAsync' value='65536'/>
<enum name='NSWorkspaceLaunchDefault' value='65536'/>
<enum name='NSWorkspaceLaunchInhibitingBackgroundOnly' value='128'/>
<enum name='NSWorkspaceLaunchNewInstance' value='524288'/>
<enum name='NSWorkspaceLaunchPreferringClassic' value='262144'/>
<enum name='NSWorkspaceLaunchWithErrorPresentation' value='64'/>
<enum name='NSWorkspaceLaunchWithoutActivation' value='512'/>
<enum name='NSWorkspaceLaunchWithoutAddingToRecents' value='256'/>
<enum name='NSWritingDirectionEmbedding' value='0'/>
<enum name='NSWritingDirectionLeftToRight' value='0'/>
<enum name='NSWritingDirectionNatural' value='-1'/>
<enum name='NSWritingDirectionOverride' value='2'/>
<enum name='NSWritingDirectionRightToLeft' value='1'/>
<enum name='NSYearMonthDatePickerElementFlag' value='192'/>
<enum name='NSYearMonthDayDatePickerElementFlag' value='224'/>
<enum name='NS_USER_ACTIVITY_SUPPORTED' value='1'/>
<function name='NSAccessibilityActionDescription'>
<arg declared_type='NSAccessibilityActionName _Nonnull' name='action' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</function>
<function name='NSAccessibilityFrameInView'>
<arg declared_type='NSView * _Nonnull' name='parentView' type='@'/>
<arg declared_type='NSRect' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSAccessibilityPointInView'>
<arg declared_type='NSView * _Nonnull' name='parentView' type='@'/>
<arg declared_type='NSPoint' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='NSAccessibilityPostNotification'>
<arg declared_type='id _Nonnull' name='element' type='@'/>
<arg declared_type='NSAccessibilityNotificationName _Nonnull' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSAccessibilityPostNotificationWithUserInfo'>
<arg declared_type='id _Nonnull' name='element' type='@'/>
<arg declared_type='NSAccessibilityNotificationName _Nonnull' name='notification' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSAccessibilityRaiseBadArgumentException'>
<arg declared_type='id _Null_unspecified' name='element' type='@'/>
<arg declared_type='NSAccessibilityAttributeName _Null_unspecified' name='attribute' type='@'/>
<arg declared_type='id _Null_unspecified' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSAccessibilityRoleDescription'>
<arg declared_type='NSAccessibilityRole _Nonnull' name='role' type='@'/>
<arg declared_type='NSAccessibilitySubrole _Nullable' name='subrole' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</function>
<function name='NSAccessibilityRoleDescriptionForUIElement'>
<arg declared_type='id _Nonnull' name='element' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</function>
<function name='NSAccessibilitySetMayContainProtectedContent'>
<arg declared_type='BOOL' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSAccessibilityUnignoredAncestor'>
<arg declared_type='id _Nonnull' name='element' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</function>
<function name='NSAccessibilityUnignoredChildren'>
<arg declared_type='NSArray * _Nonnull' name='originalChildren' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</function>
<function name='NSAccessibilityUnignoredChildrenForOnlyChild'>
<arg declared_type='id _Nonnull' name='originalChild' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</function>
<function name='NSAccessibilityUnignoredDescendant'>
<arg declared_type='id _Nonnull' name='element' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</function>
<function name='NSApplicationLoad'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSApplicationMain'>
<arg declared_type='int' name='argc' type='i'/>
<arg const='true' declared_type='char * _Nonnull*' name='argv' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='NSAvailableWindowDepths'>
<retval const='true' declared_type='NSWindowDepth * _Nonnull' type='^i'/>
</function>
<function name='NSBeep'>
<retval declared_type='void' type='v'/>
</function>
<function name='NSBeginAlertSheet' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<arg declared_type='NSWindow*' name='docWindow' type='@'/>
<arg declared_type='id' name='modalDelegate' type='@'/>
<arg declared_type='SEL' name='didEndSelector' type=':'/>
<arg declared_type='SEL' name='didDismissSelector' type=':'/>
<arg declared_type='void*' name='contextInfo' type='^v'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSBeginCriticalAlertSheet' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<arg declared_type='NSWindow*' name='docWindow' type='@'/>
<arg declared_type='id' name='modalDelegate' type='@'/>
<arg declared_type='SEL' name='didEndSelector' type=':'/>
<arg declared_type='SEL' name='didDismissSelector' type=':'/>
<arg declared_type='void*' name='contextInfo' type='^v'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSBeginInformationalAlertSheet' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<arg declared_type='NSWindow*' name='docWindow' type='@'/>
<arg declared_type='id' name='modalDelegate' type='@'/>
<arg declared_type='SEL' name='didEndSelector' type=':'/>
<arg declared_type='SEL' name='didDismissSelector' type=':'/>
<arg declared_type='void*' name='contextInfo' type='^v'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSBestDepth'>
<arg declared_type='NSColorSpaceName _Nonnull' name='colorSpace' type='@'/>
<arg declared_type='NSInteger' name='bps' type='i' type64='q'/>
<arg declared_type='NSInteger' name='bpp' type='i' type64='q'/>
<arg declared_type='BOOL' name='planar' type='B'/>
<arg declared_type='BOOL * _Nullable' name='exactMatch' type='^B'/>
<retval declared_type='NSWindowDepth' type='i'/>
</function>
<function name='NSBitsPerPixelFromDepth'>
<arg declared_type='NSWindowDepth' name='depth' type='i'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSBitsPerSampleFromDepth'>
<arg declared_type='NSWindowDepth' name='depth' type='i'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSColorSpaceFromDepth'>
<arg declared_type='NSWindowDepth' name='depth' type='i'/>
<retval declared_type='NSColorSpaceName _Nullable' type='@'/>
</function>
<function name='NSConvertGlyphsToPackedGlyphs'>
<arg declared_type='NSGlyph * _Nonnull' name='glBuf' type='^I'/>
<arg declared_type='NSInteger' name='count' type='i' type64='q'/>
<arg declared_type='NSMultibyteGlyphPacking' name='packing' type='I' type64='Q'/>
<arg declared_type='char * _Nonnull' name='packedGlyphs' type='*'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSCopyBits'>
<arg declared_type='NSInteger' name='srcGState' type='i' type64='q'/>
<arg declared_type='NSRect' name='srcRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' name='destPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSCountWindows'>
<arg declared_type='NSInteger * _Nonnull' name='count' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSCountWindowsForContext'>
<arg declared_type='NSInteger' name='context' type='i' type64='q'/>
<arg declared_type='NSInteger * _Nonnull' name='count' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSCreateFileContentsPboardType'>
<arg declared_type='NSString * _Nonnull' name='fileType' type='@'/>
<retval declared_type='NSPasteboardType _Nullable' type='@'/>
</function>
<function name='NSCreateFilenamePboardType'>
<arg declared_type='NSString * _Nonnull' name='fileType' type='@'/>
<retval declared_type='NSPasteboardType _Nullable' type='@'/>
</function>
<function name='NSDisableScreenUpdates'>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDottedFrameRect'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawBitmap'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' name='width' type='i' type64='q'/>
<arg declared_type='NSInteger' name='height' type='i' type64='q'/>
<arg declared_type='NSInteger' name='bps' type='i' type64='q'/>
<arg declared_type='NSInteger' name='spp' type='i' type64='q'/>
<arg declared_type='NSInteger' name='bpp' type='i' type64='q'/>
<arg declared_type='NSInteger' name='bpr' type='i' type64='q'/>
<arg declared_type='BOOL' name='isPlanar' type='B'/>
<arg declared_type='BOOL' name='hasAlpha' type='B'/>
<arg declared_type='NSColorSpaceName _Nonnull' name='colorSpaceName' type='@'/>
<arg const='true' declared_type='unsigned char * _Nullable*' name='data' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawButton'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawColorTiledRects'>
<arg declared_type='NSRect' name='boundsRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type='NSRectEdge * _Nonnull' name='sides' type='^i' type64='^Q'/>
<arg declared_type='NSColor * _Nonnull * _Nonnull' name='colors' type='^@'/>
<arg declared_type='NSInteger' name='count' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSDrawDarkBezel'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawGrayBezel'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawGroove'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawLightBezel'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawNinePartImage'>
<arg declared_type='NSRect' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSImage * _Nullable' name='topLeftCorner' type='@'/>
<arg declared_type='NSImage * _Nullable' name='topEdgeFill' type='@'/>
<arg declared_type='NSImage * _Nullable' name='topRightCorner' type='@'/>
<arg declared_type='NSImage * _Nullable' name='leftEdgeFill' type='@'/>
<arg declared_type='NSImage * _Nullable' name='centerFill' type='@'/>
<arg declared_type='NSImage * _Nullable' name='rightEdgeFill' type='@'/>
<arg declared_type='NSImage * _Nullable' name='bottomLeftCorner' type='@'/>
<arg declared_type='NSImage * _Nullable' name='bottomEdgeFill' type='@'/>
<arg declared_type='NSImage * _Nullable' name='bottomRightCorner' type='@'/>
<arg declared_type='NSCompositingOperation' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' name='alphaFraction' type='f' type64='d'/>
<arg declared_type='BOOL' name='flipped' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawThreePartImage'>
<arg declared_type='NSRect' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSImage * _Nullable' name='startCap' type='@'/>
<arg declared_type='NSImage * _Nullable' name='centerFill' type='@'/>
<arg declared_type='NSImage * _Nullable' name='endCap' type='@'/>
<arg declared_type='BOOL' name='vertical' type='B'/>
<arg declared_type='NSCompositingOperation' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' name='alphaFraction' type='f' type64='d'/>
<arg declared_type='BOOL' name='flipped' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawTiledRects'>
<arg declared_type='NSRect' name='boundsRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type='NSRectEdge * _Nonnull' name='sides' type='^i' type64='^Q'/>
<arg const='true' declared_type='CGFloat * _Nonnull' name='grays' type='^f' type64='^d'/>
<arg declared_type='NSInteger' name='count' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='NSDrawWhiteBezel'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSDrawWindowBackground'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSEnableScreenUpdates'>
<retval declared_type='void' type='v'/>
</function>
<function name='NSEraseRect'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function inline='true' name='NSEventMaskFromType'>
<arg declared_type='NSEventType' name='type' type='I' type64='Q'/>
<retval declared_type='NSEventMask' type='Q'/>
</function>
<function name='NSFrameRect'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSFrameRectWithWidth'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' name='frameWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSFrameRectWithWidthUsingOperation'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' name='frameWidth' type='f' type64='d'/>
<arg declared_type='NSCompositingOperation' name='op' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSGetAlertPanel' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<retval declared_type='id' type='@'/>
</function>
<function name='NSGetCriticalAlertPanel' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<retval declared_type='id' type='@'/>
</function>
<function name='NSGetFileType'>
<arg declared_type='NSPasteboardType _Nonnull' name='pboardType' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</function>
<function name='NSGetFileTypes'>
<arg declared_type='NSArray * _Nonnull' name='pboardTypes' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</function>
<function name='NSGetInformationalAlertPanel' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<retval declared_type='id' type='@'/>
</function>
<function name='NSGetWindowServerMemory'>
<arg declared_type='NSInteger' name='context' type='i' type64='q'/>
<arg declared_type='NSInteger * _Nonnull' name='virtualMemory' type='^i' type64='^q'/>
<arg declared_type='NSInteger * _Nonnull' name='windowBackingMemory' type='^i' type64='^q'/>
<arg declared_type='NSString * _Nonnull * _Nonnull' name='windowDumpString' type='^@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSHighlightRect'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSInterfaceStyleForKey'>
<arg declared_type='NSString*' name='key' type='@'/>
<arg declared_type='NSResponder*' name='responder' type='@'/>
<retval declared_type='NSInterfaceStyle' type='I' type64='Q'/>
</function>
<function name='NSIsControllerMarker'>
<arg declared_type='id _Nullable' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSNumberOfColorComponents'>
<arg declared_type='NSColorSpaceName _Nonnull' name='colorSpaceName' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSOpenGLGetOption'>
<arg declared_type='NSOpenGLGlobalOption' name='pname' type='i'/>
<arg declared_type='GLint * _Nonnull' name='param' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSOpenGLGetVersion'>
<arg declared_type='GLint * _Nullable' name='major' type='^i'/>
<arg declared_type='GLint * _Nullable' name='minor' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSOpenGLSetOption'>
<arg declared_type='NSOpenGLGlobalOption' name='pname' type='i'/>
<arg declared_type='GLint' name='param' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSPerformService'>
<arg declared_type='NSString * _Nonnull' name='itemName' type='@'/>
<arg declared_type='NSPasteboard * _Nullable' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSPlanarFromDepth'>
<arg declared_type='NSWindowDepth' name='depth' type='i'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSReadPixel'>
<arg declared_type='NSPoint' name='passedPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</function>
<function name='NSRectClip'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRectClipList'>
<arg const='true' declared_type='NSRect * _Nonnull' name='rects' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' name='count' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRectFill'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRectFillList'>
<arg const='true' declared_type='NSRect * _Nonnull' name='rects' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' name='count' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRectFillListUsingOperation'>
<arg const='true' declared_type='NSRect * _Nonnull' name='rects' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' name='count' type='i' type64='q'/>
<arg declared_type='NSCompositingOperation' name='op' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRectFillListWithColors'>
<arg const='true' declared_type='NSRect * _Nonnull' name='rects' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type='NSColor * _Nonnull * _Nonnull' name='colors' type='^@'/>
<arg declared_type='NSInteger' name='num' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRectFillListWithColorsUsingOperation'>
<arg const='true' declared_type='NSRect * _Nonnull' name='rects' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type='NSColor * _Nonnull * _Nonnull' name='colors' type='^@'/>
<arg declared_type='NSInteger' name='num' type='i' type64='q'/>
<arg declared_type='NSCompositingOperation' name='op' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRectFillListWithGrays'>
<arg const='true' declared_type='NSRect * _Nonnull' name='rects' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type='CGFloat * _Nonnull' name='grays' type='^f' type64='^d'/>
<arg declared_type='NSInteger' name='num' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRectFillUsingOperation'>
<arg declared_type='NSRect' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' name='op' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRegisterServicesProvider'>
<arg declared_type='id _Nullable' name='provider' type='@'/>
<arg declared_type='NSServiceProviderName _Nonnull' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSReleaseAlertPanel'>
<arg declared_type='id' name='panel' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSRunAlertPanel' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSRunAlertPanelRelativeToWindow' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<arg declared_type='NSWindow*' name='docWindow' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSRunCriticalAlertPanel' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSRunCriticalAlertPanelRelativeToWindow' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<arg declared_type='NSWindow*' name='docWindow' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSRunInformationalAlertPanel' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' printf_format='true' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSRunInformationalAlertPanelRelativeToWindow' variadic='true'>
<arg declared_type='NSString*' name='title' type='@'/>
<arg declared_type='NSString*' name='msgFormat' type='@'/>
<arg declared_type='NSString*' name='defaultButton' type='@'/>
<arg declared_type='NSString*' name='alternateButton' type='@'/>
<arg declared_type='NSString*' name='otherButton' type='@'/>
<arg declared_type='NSWindow*' name='docWindow' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSSetFocusRingStyle'>
<arg declared_type='NSFocusRingPlacement' name='placement' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSSetShowsServicesMenuItem'>
<arg declared_type='NSString * _Nonnull' name='itemName' type='@'/>
<arg declared_type='BOOL' name='enabled' type='B'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</function>
<function name='NSShowAnimationEffect'>
<arg declared_type='NSAnimationEffect' name='animationEffect' type='I' type64='Q'/>
<arg declared_type='NSPoint' name='centerLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSSize' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='id _Nullable' name='animationDelegate' type='@'/>
<arg declared_type='SEL _Nullable' name='didEndSelector' type=':'/>
<arg declared_type='void * _Nullable' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSShowsServicesMenuItem'>
<arg declared_type='NSString * _Nonnull' name='itemName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function inline='true' name='NSTouchTypeMaskFromType'>
<arg declared_type='NSTouchType' name='type' type='i' type64='q'/>
<retval declared_type='NSTouchTypeMask' type='I' type64='Q'/>
</function>
<function name='NSUnregisterServicesProvider'>
<arg declared_type='NSServiceProviderName _Nonnull' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSUpdateDynamicServices'>
<retval declared_type='void' type='v'/>
</function>
<function name='NSWindowList'>
<arg declared_type='NSInteger' name='size' type='i' type64='q'/>
<arg declared_type='NSInteger*' name='list' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSWindowListForContext'>
<arg declared_type='NSInteger' name='context' type='i' type64='q'/>
<arg declared_type='NSInteger' name='size' type='i' type64='q'/>
<arg declared_type='NSInteger*' name='list' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</function>
<class name='CIColor'>
<method selector='initWithColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
</class>
<class name='CIImage'>
<method selector='drawAtPoint:fromRect:operation:fraction:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='fromRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' index='2' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='3' name='delta' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='1' name='fromRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' index='2' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='3' name='delta' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBitmapImageRep:'>
<arg declared_type='NSBitmapImageRep * _Nonnull' index='0' name='bitmapImageRep' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
</class>
<class name='NSATSTypesetter'>
<method selector='attributedString'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='bidiProcessingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='textContainer' type='@'/>
<arg declared_type='NSRect' index='2' name='proposedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' index='3' name='glyphPosition' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='4' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='currentTextContainer'>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
<arg declared_type='NSRange' index='0' name='glyphsRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSGlyph * _Null_unspecified' index='1' name='glyphBuffer' type='^I'/>
<arg declared_type='NSUInteger * _Null_unspecified' index='2' name='charIndexBuffer' type='^I' type64='^Q'/>
<arg declared_type='NSGlyphInscription * _Null_unspecified' index='3' name='inscribeBuffer' type='^I' type64='^Q'/>
<arg declared_type='BOOL * _Null_unspecified' index='4' name='elasticBuffer' type='^B'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
<arg declared_type='NSRect * _Nonnull' index='0' name='lineFragmentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect * _Nonnull' index='1' name='lineFragmentUsedRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='2' name='paragraphSeparatorGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='3' name='lineOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hyphenCharacterForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='UTF32Char' type='L' type64='I'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='hyphenationFactorForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='layoutManager'>
<retval declared_type='NSLayoutManager * _Nullable' type='@'/>
</method>
<method selector='layoutParagraphAtPoint:'>
<arg declared_type='NSPoint * _Nonnull' index='0' name='lineFragmentOrigin' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='lineFragmentPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineFragmentRectForProposedRect:remainingRect:'>
<arg declared_type='NSRect' index='0' name='proposedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRectPointer _Null_unspecified' index='1' name='remainingRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphGlyphRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSeparatorGlyphRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAttributedString:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBidiProcessingEnabled:'>
<arg declared_type='BOOL' index='0' name='bidiProcessingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHardInvalidation:forGlyphRange:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type='float' index='0' name='hyphenationFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg declared_type='CGFloat' index='0' name='lineFragmentPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphGlyphRange:separatorGlyphRange:'>
<arg declared_type='NSRange' index='0' name='paragraphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='1' name='paragraphSeparatorRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg declared_type='NSTypesetterBehavior' index='0' name='typesetterBehavior' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFontLeading:'>
<arg declared_type='BOOL' index='0' name='usesFontLeading' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedTypesetter'>
<retval declared_type='NSATSTypesetter * _Nonnull' type='@'/>
</method>
<method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='substituteFontForFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='originalFont' type='@'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
<arg declared_type='CGFloat' index='0' name='glyphLocation' type='f' type64='d'/>
<arg declared_type='NSWritingDirection' index='1' name='direction' type='i' type64='q'/>
<arg declared_type='CGFloat' index='2' name='maxLocation' type='f' type64='d'/>
<retval declared_type='NSTextTab * _Nullable' type='@'/>
</method>
<method selector='typesetterBehavior'>
<retval declared_type='NSTypesetterBehavior' type='i' type64='q'/>
</method>
<method selector='usesFontLeading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg declared_type='NSRect * _Nonnull' index='0' name='lineRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRect * _Nonnull' index='2' name='usedRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat * _Nonnull' index='3' name='baselineOffset' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSAccessibilityCustomAction'>
<method selector='handler'>
<retval declared_type='BOOL (^ _Nullable)()' function_pointer='true' type='@?'>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method selector='initWithName:handler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='BOOL (^ _Nullable)()' function_pointer='true' index='1' name='handler' type='@?'>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:target:selector:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='target' type='@'/>
<arg declared_type='SEL _Nonnull' index='2' name='selector' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='selector'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='setHandler:'>
<arg declared_type='BOOL (^ _Nullable)()' function_pointer='true' index='0' name='handler' type='@?'>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelector:'>
<arg declared_type='SEL _Nullable' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='NSAccessibilityCustomRotor'>
<method selector='initWithLabel:itemSearchDelegate:'>
<arg declared_type='NSString * _Nonnull' index='0' name='label' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='itemSearchDelegate' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithRotorType:itemSearchDelegate:'>
<arg declared_type='NSAccessibilityCustomRotorType' index='0' name='rotorType' type='i' type64='q'/>
<arg declared_type='id _Nonnull' index='1' name='itemSearchDelegate' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='itemLoadingDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='itemSearchDelegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setItemLoadingDelegate:'>
<arg declared_type='id _Nullable' index='0' name='itemLoadingDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemSearchDelegate:'>
<arg declared_type='id _Nullable' index='0' name='itemSearchDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nonnull' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='NSAccessibilityCustomRotorType' index='0' name='type' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='NSAccessibilityCustomRotorType' type='i' type64='q'/>
</method>
</class>
<class name='NSAccessibilityCustomRotorItemResult'>
<method selector='customLabel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='initWithItemLoadingToken:customLabel:'>
<arg declared_type='NSAccessibilityLoadingToken _Nonnull' index='0' name='itemLoadingToken' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='customLabel' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTargetElement:'>
<arg declared_type='id _Nonnull' index='0' name='targetElement' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='itemLoadingToken'>
<retval declared_type='NSAccessibilityLoadingToken _Nullable' type='@'/>
</method>
<method selector='setCustomLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='customLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetRange:'>
<arg declared_type='NSRange' index='0' name='targetRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetElement'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='targetRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
</class>
<class name='NSAccessibilityCustomRotorSearchParameters'>
<method selector='currentItem'>
<retval declared_type='NSAccessibilityCustomRotorItemResult * _Nullable' type='@'/>
</method>
<method selector='filterString'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='searchDirection'>
<retval declared_type='NSAccessibilityCustomRotorSearchDirection' type='i' type64='q'/>
</method>
<method selector='setCurrentItem:'>
<arg declared_type='NSAccessibilityCustomRotorItemResult * _Nullable' index='0' name='currentItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filterString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchDirection:'>
<arg declared_type='NSAccessibilityCustomRotorSearchDirection' index='0' name='searchDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSAccessibilityElement'>
<method selector='accessibilityAddChildElement:'>
<arg declared_type='NSAccessibilityElement * _Nonnull' index='0' name='childElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='accessibilityElementWithRole:frame:label:parent:'>
<arg declared_type='NSAccessibilityRole _Nonnull' index='0' name='role' type='@'/>
<arg declared_type='NSRect' index='1' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString * _Nullable' index='2' name='label' type='@'/>
<arg declared_type='id _Nullable' index='3' name='parent' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='accessibilityFrameInParentSpace'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAccessibilityFrameInParentSpace:'>
<arg declared_type='NSRect' index='0' name='accessibilityFrameInParentSpace' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSActionCell'>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='NSAffineTransform'>
<method selector='concat'>
<retval declared_type='void' type='v'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformBezierPath:'>
<arg declared_type='NSBezierPath * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='NSBezierPath * _Nonnull' type='@'/>
</method>
</class>
<class name='NSAlert'>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='addButtonWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='NSButton * _Nonnull' type='@'/>
</method>
<method selector='alertStyle'>
<retval declared_type='NSAlertStyle' type='I' type64='Q'/>
</method>
<method class_method='true' selector='alertWithError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='NSAlert * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:' variadic='true'>
<arg declared_type='NSString * _Nullable' index='0' name='message' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='defaultButton' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='alternateButton' type='@'/>
<arg declared_type='NSString * _Nullable' index='3' name='otherButton' type='@'/>
<arg declared_type='NSString * _Nonnull' index='4' name='format' printf_format='true' type='@'/>
<retval declared_type='NSAlert * _Nonnull' type='@'/>
</method>
<method selector='beginSheetModalForWindow:completionHandler:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sheetWindow' type='@'/>
<arg declared_type='void (^ _Nullable)(NSModalResponse)' function_pointer='true' index='1' name='handler' type='@?'>
<arg declared_type='NSModalResponse' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='id _Nullable' index='1' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='didEndSelector' type=':'/>
<arg declared_type='void * _Nullable' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='buttons'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='helpAnchor'>
<retval declared_type='NSHelpAnchorName _Nullable' type='@'/>
</method>
<method selector='icon'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='informativeText'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='layout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='messageText'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='runModal'>
<retval declared_type='NSModalResponse' type='i' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlertStyle:'>
<arg declared_type='NSAlertStyle' index='0' name='alertStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHelpAnchor:'>
<arg declared_type='NSHelpAnchorName _Nullable' index='0' name='helpAnchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIcon:'>
<arg declared_type='NSImage * _Nullable' index='0' name='icon' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInformativeText:'>
<arg declared_type='NSString * _Nonnull' index='0' name='informativeText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageText:'>
<arg declared_type='NSString * _Nonnull' index='0' name='messageText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsHelp:'>
<arg declared_type='BOOL' index='0' name='showsHelp' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsSuppressionButton:'>
<arg declared_type='BOOL' index='0' name='showsSuppressionButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsHelp'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsSuppressionButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='suppressionButton'>
<retval declared_type='NSButton * _Nullable' type='@'/>
</method>
<method selector='window'>
<retval declared_type='NSWindow * _Nonnull' type='@'/>
</method>
</class>
<class name='NSAlignmentFeedbackFilter'>
<method selector='alignmentFeedbackTokenForHorizontalMovementInView:previousX:alignedX:defaultX:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<arg declared_type='CGFloat' index='1' name='previousX' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='alignedX' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='defaultX' type='f' type64='d'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='alignmentFeedbackTokenForMovementInView:previousPoint:alignedPoint:defaultPoint:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<arg declared_type='NSPoint' index='1' name='previousPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='2' name='alignedPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='3' name='defaultPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='alignmentFeedbackTokenForVerticalMovementInView:previousY:alignedY:defaultY:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<arg declared_type='CGFloat' index='1' name='previousY' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='alignedY' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='defaultY' type='f' type64='d'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='inputEventMask'>
<retval declared_type='NSEventMask' type='Q'/>
</method>
<method selector='performFeedback:performanceTime:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='alignmentFeedbackTokens' type='@'/>
<arg declared_type='NSHapticFeedbackPerformanceTime' index='1' name='performanceTime' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithPanRecognizer:'>
<arg declared_type='NSPanGestureRecognizer * _Nonnull' index='0' name='panRecognizer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSAnimation'>
<method selector='addProgressMark:'>
<arg declared_type='NSAnimationProgress' index='0' name='progressMark' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationBlockingMode'>
<retval declared_type='NSAnimationBlockingMode' type='I' type64='Q'/>
</method>
<method selector='animationCurve'>
<retval declared_type='NSAnimationCurve' type='I' type64='Q'/>
</method>
<method selector='clearStartAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearStopAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentProgress'>
<retval declared_type='NSAnimationProgress' type='f'/>
</method>
<method selector='currentValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='frameRate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithDuration:animationCurve:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<arg declared_type='NSAnimationCurve' index='1' name='animationCurve' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='progressMarks'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeProgressMark:'>
<arg declared_type='NSAnimationProgress' index='0' name='progressMark' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModesForAnimating'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setAnimationBlockingMode:'>
<arg declared_type='NSAnimationBlockingMode' index='0' name='animationBlockingMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationCurve:'>
<arg declared_type='NSAnimationCurve' index='0' name='animationCurve' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentProgress:'>
<arg declared_type='NSAnimationProgress' index='0' name='currentProgress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameRate:'>
<arg declared_type='float' index='0' name='frameRate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressMarks:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='progressMarks' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startWhenAnimation:reachesProgress:'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<arg declared_type='NSAnimationProgress' index='1' name='startProgress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopWhenAnimation:reachesProgress:'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<arg declared_type='NSAnimationProgress' index='1' name='stopProgress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSAnimationContext'>
<method selector='allowsImplicitAnimation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='beginGrouping'>
<retval declared_type='void' type='v'/>
</method>
<method selector='completionHandler'>
<retval declared_type='void (^ _Nullable)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method class_method='true' selector='currentContext'>
<retval declared_type='NSAnimationContext * _Nonnull' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='endGrouping'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='runAnimationGroup:completionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSAnimationContext * _Nonnull)' function_pointer='true' index='0' name='changes' type='@?'>
<arg declared_type='NSAnimationContext * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsImplicitAnimation:'>
<arg declared_type='BOOL' index='0' name='allowsImplicitAnimation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimingFunction:'>
<arg declared_type='CAMediaTimingFunction * _Nullable' index='0' name='timingFunction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='timingFunction'>
<retval declared_type='CAMediaTimingFunction * _Nullable' type='@'/>
</method>
</class>
<class name='NSAppearance'>
<method selector='allowsVibrancy'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='appearanceNamed:'>
<arg declared_type='NSAppearanceName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSAppearance * _Nullable' type='@'/>
</method>
<method class_method='true' selector='currentAppearance'>
<retval declared_type='NSAppearance * _Nonnull' type='@'/>
</method>
<method selector='initWithAppearanceNamed:bundle:'>
<arg declared_type='NSAppearanceName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSAppearanceName _Nonnull' type='@'/>
</method>
<method class_method='true' selector='setCurrentAppearance:'>
<arg declared_type='NSAppearance * _Nullable' index='0' name='currentAppearance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSAppleScript'>
<method selector='richTextSource'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
</class>
<class name='NSApplication'>
<method selector='abortModal'>
<retval declared_type='void' type='v'/>
</method>
<method selector='activateContextHelpMode:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='activateIgnoringOtherApps:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='activationPolicy'>
<retval declared_type='NSApplicationActivationPolicy' type='i' type64='q'/>
</method>
<method selector='addWindowsItem:title:filename:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='win' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='BOOL' index='2' name='isFilename' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:printFiles:'>
<arg declared_type='NSApplication * _Null_unspecified' index='0' name='sender' type='@'/>
<arg declared_type='NSArray * _Null_unspecified' index='1' name='filenames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationIconImage'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='arrangeInFront:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginModalSessionForWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSModalSession _Nonnull' type='^{_NSModalSession=}'/>
</method>
<method selector='beginModalSessionForWindow:relativeToWindow:'>
<arg declared_type='NSWindow * _Null_unspecified' index='0' name='window' type='@'/>
<arg declared_type='NSWindow * _Null_unspecified' index='1' name='docWindow' type='@'/>
<retval declared_type='NSModalSession _Nonnull' type='^{_NSModalSession=}'/>
</method>
<method selector='beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sheet' type='@'/>
<arg declared_type='NSWindow * _Nonnull' index='1' name='docWindow' type='@'/>
<arg declared_type='id _Nullable' index='2' name='modalDelegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didEndSelector' type=':'/>
<arg declared_type='void * _Null_unspecified' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelUserAttentionRequest:'>
<arg declared_type='NSInteger' index='0' name='request' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeWindowsItem:title:filename:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='win' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='BOOL' index='2' name='isFilename' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='completeStateRestoration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='context'>
<retval declared_type='NSGraphicsContext * _Nullable' type='@'/>
</method>
<method selector='currentEvent'>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method selector='currentSystemPresentationOptions'>
<retval declared_type='NSApplicationPresentationOptions' type='I' type64='Q'/>
</method>
<method selector='deactivate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='detachDrawingThread:toTarget:withObject:'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<arg declared_type='id _Nonnull' index='1' name='target' type='@'/>
<arg declared_type='id _Nullable' index='2' name='argument' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableRelaunchOnLogin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardEventsMatchingMask:beforeEvent:'>
<arg declared_type='NSUInteger' declared_type64='NSEventMask' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='NSEvent * _Nullable' index='1' name='lastEvent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dockTile'>
<retval declared_type='NSDockTile * _Nonnull' type='@'/>
</method>
<method selector='enableRelaunchOnLogin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enabledRemoteNotificationTypes'>
<retval declared_type='NSRemoteNotificationType' type='I' type64='Q'/>
</method>
<method selector='endModalSession:'>
<arg declared_type='NSModalSession _Nonnull' index='0' name='session' type='^{_NSModalSession=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endSheet:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sheet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endSheet:returnCode:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sheet' type='@'/>
<arg declared_type='NSInteger' index='1' name='returnCode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateWindowsWithOptions:usingBlock:'>
<arg declared_type='NSWindowListOptions' index='0' name='options' type='i' type64='q'/>
<arg declared_type='void (^ _Nonnull)(NSWindow * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSWindow * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='extendStateRestoration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finishLaunching'>
<retval declared_type='void' type='v'/>
</method>
<method selector='helpMenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='hide:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hideOtherApplications:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAutomaticCustomizeTouchBarMenuItemEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFullKeyboardAccessEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyWindow'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='mainMenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='mainWindow'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='makeWindowsPerform:inOrder:'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='miniaturizeAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='modalWindow'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
<arg declared_type='NSUInteger' declared_type64='NSEventMask' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='NSDate * _Nullable' index='1' name='expiration' type='@'/>
<arg declared_type='NSRunLoopMode _Nonnull' index='2' name='mode' type='@'/>
<arg declared_type='BOOL' index='3' name='deqFlag' type='B'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method selector='occlusionState'>
<retval declared_type='NSApplicationOcclusionState' type='I' type64='Q'/>
</method>
<method selector='orderFrontCharacterPalette:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontColorPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontStandardAboutPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontStandardAboutPanelWithOptions:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='optionsDictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderedDocuments'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='orderedWindows'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='postEvent:atStart:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentationOptions'>
<retval declared_type='NSApplicationPresentationOptions' type='I' type64='Q'/>
</method>
<method selector='preventWindowOrdering'>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerForRemoteNotificationTypes:'>
<arg declared_type='NSRemoteNotificationType' index='0' name='types' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerServicesMenuSendTypes:returnTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='sendTypes' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='returnTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerUserInterfaceItemSearchHandler:'>
<arg declared_type='id _Nonnull' index='0' name='handler' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeWindowsItem:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='win' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replyToApplicationShouldTerminate:'>
<arg declared_type='BOOL' index='0' name='shouldTerminate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replyToOpenOrPrint:'>
<arg declared_type='NSApplicationDelegateReply' index='0' name='reply' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reportException:'>
<arg declared_type='NSException * _Nonnull' index='0' name='exception' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestUserAttention:'>
<arg declared_type='NSRequestUserAttentionType' index='0' name='requestType' type='I' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='restoreWindowWithIdentifier:state:completionHandler:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='state' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSWindow * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSWindow * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='run'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runModalForWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSModalResponse' type='i' type64='q'/>
</method>
<method selector='runModalForWindow:relativeToWindow:'>
<arg declared_type='NSWindow * _Null_unspecified' index='0' name='window' type='@'/>
<arg declared_type='NSWindow * _Null_unspecified' index='1' name='docWindow' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='runModalSession:'>
<arg declared_type='NSModalSession _Nonnull' index='0' name='session' type='^{_NSModalSession=}'/>
<retval declared_type='NSModalResponse' type='i' type64='q'/>
</method>
<method selector='runPageLayout:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchString:inUserInterfaceItemString:searchRange:foundRange:'>
<arg declared_type='NSString * _Nonnull' index='0' name='searchString' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='stringToSearch' type='@'/>
<arg declared_type='NSRange' index='2' name='searchRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange * _Nullable' index='3' name='foundRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendAction:to:from:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='id _Nullable' index='2' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='servicesMenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='servicesProvider'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setActivationPolicy:'>
<arg declared_type='NSApplicationActivationPolicy' index='0' name='activationPolicy' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setApplicationIconImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='applicationIconImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticCustomizeTouchBarMenuItemEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticCustomizeTouchBarMenuItemEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHelpMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='helpMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='mainMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPresentationOptions:'>
<arg declared_type='NSApplicationPresentationOptions' index='0' name='presentationOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServicesMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='servicesMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServicesProvider:'>
<arg declared_type='id _Nullable' index='0' name='servicesProvider' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindowsMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='windowsMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindowsNeedUpdate:'>
<arg declared_type='BOOL' index='0' name='needUpdate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedApplication'>
<retval declared_type='__kindof NSApplication * _Nonnull' type='@'/>
</method>
<method selector='showHelp:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopModal'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopModalWithCode:'>
<arg declared_type='NSModalResponse' index='0' name='returnCode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetForAction:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='targetForAction:to:from:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='id _Nullable' index='2' name='sender' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='terminate:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleTouchBarCustomizationPalette:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tryToPerform:with:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unhide:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unhideAllApplications:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unhideWithoutActivation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unregisterForRemoteNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unregisterUserInterfaceItemSearchHandler:'>
<arg declared_type='id _Nonnull' index='0' name='handler' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWindows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWindowsItem:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='win' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type='NSUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg declared_type='NSPasteboardType _Nullable' index='0' name='sendType' type='@'/>
<arg declared_type='NSPasteboardType _Nullable' index='1' name='returnType' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='windowWithWindowNumber:'>
<arg declared_type='NSInteger' index='0' name='windowNum' type='i' type64='q'/>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='windows'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='windowsMenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
</class>
<class name='NSArrayController'>
<method selector='add:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSelectedObjects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addSelectionIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alwaysUsesMultipleValuesMarker'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='arrangeObjects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='arrangedObjects'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='automaticRearrangementKeyPaths'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='automaticallyRearrangesObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='avoidsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canInsert'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canSelectNext'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canSelectPrevious'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearsFilterPredicateOnInsertion'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='didChangeArrangementCriteria'>
<retval declared_type='void' type='v'/>
</method>
<method selector='filterPredicate'>
<retval declared_type='NSPredicate * _Nullable' type='@'/>
</method>
<method selector='insert:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertObject:atArrangedObjectIndex:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertObjects:atArrangedObjectIndexes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preservesSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rearrangeObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='remove:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectAtArrangedObjectIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsAtArrangedObjectIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSelectedObjects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeSelectionIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectNext:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectPrevious:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedObjects'>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
<method selector='selectionIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='selectionIndexes'>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='selectsInsertedObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlwaysUsesMultipleValuesMarker:'>
<arg declared_type='BOOL' index='0' name='alwaysUsesMultipleValuesMarker' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticallyRearrangesObjects:'>
<arg declared_type='BOOL' index='0' name='automaticallyRearrangesObjects' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAvoidsEmptySelection:'>
<arg declared_type='BOOL' index='0' name='avoidsEmptySelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClearsFilterPredicateOnInsertion:'>
<arg declared_type='BOOL' index='0' name='clearsFilterPredicateOnInsertion' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterPredicate:'>
<arg declared_type='NSPredicate * _Nullable' index='0' name='filterPredicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreservesSelection:'>
<arg declared_type='BOOL' index='0' name='preservesSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedObjects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSelectionIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSelectionIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSelectsInsertedObjects:'>
<arg declared_type='BOOL' index='0' name='selectsInsertedObjects' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='sortDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortDescriptors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='RTFDFileWrapperFromRange:documentAttributes:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='RTFDFromRange:documentAttributes:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='RTFFromRange:documentAttributes:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='URLAtIndex:effectiveRange:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nonnull' index='1' name='effectiveRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method class_method='true' selector='attributedStringWithAttachment:'>
<arg declared_type='NSTextAttachment * _Nonnull' index='0' name='attachment' type='@'/>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='boundingRectWithSize:options:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundingRectWithSize:options:context:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='2' name='context' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='containsAttachments'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsAttachmentsInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataFromRange:documentAttributes:error:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='docFormatFromRange:documentAttributes:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='doubleClickAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithRect:options:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithRect:options:context:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='2' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fileWrapperFromRange:documentAttributes:error:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='dict' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='fontAttributesInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='initWithData:options:documentAttributes:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithDocFormat:documentAttributes:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithHTML:baseURL:documentAttributes:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='base' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithHTML:documentAttributes:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithHTML:options:documentAttributes:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithPath:documentAttributes:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithRTF:documentAttributes:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithRTFD:documentAttributes:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithRTFDFileWrapper:documentAttributes:'>
<arg declared_type='NSFileWrapper * _Nonnull' index='0' name='wrapper' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithURL:documentAttributes:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='1' name='dict' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='itemNumberInTextList:atIndex:'>
<arg declared_type='NSTextList * _Nonnull' index='0' name='list' type='@'/>
<arg declared_type='NSUInteger' index='1' name='location' type='I' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='lineBreakBeforeIndex:withinRange:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<arg declared_type='NSRange' index='1' name='aRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='lineBreakByHyphenatingBeforeIndex:withinRange:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<arg declared_type='NSRange' index='1' name='aRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='nextWordFromIndex:forward:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='isForward' type='B'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='rangeOfTextBlock:atIndex:'>
<arg declared_type='NSTextBlock * _Nonnull' index='0' name='block' type='@'/>
<arg declared_type='NSUInteger' index='1' name='location' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfTextList:atIndex:'>
<arg declared_type='NSTextList * _Nonnull' index='0' name='list' type='@'/>
<arg declared_type='NSUInteger' index='1' name='location' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeOfTextTable:atIndex:'>
<arg declared_type='NSTextTable * _Nonnull' index='0' name='table' type='@'/>
<arg declared_type='NSUInteger' index='1' name='location' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rulerAttributesInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='size'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='textFileTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textPasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textUnfilteredFileTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textUnfilteredPasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textUnfilteredTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSBezierPath'>
<method selector='addClip'>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPath:'>
<arg declared_type='NSBezierPath * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithArcFromPoint:toPoint:radius:'>
<arg declared_type='NSPoint' index='0' name='point1' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='point2' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='2' name='radius' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:'>
<arg declared_type='NSPoint' index='0' name='center' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='radius' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='startAngle' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='endAngle' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:'>
<arg declared_type='NSPoint' index='0' name='center' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='radius' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='startAngle' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='endAngle' type='f' type64='d'/>
<arg declared_type='BOOL' index='4' name='clockwise' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithCGGlyph:inFont:'>
<arg declared_type='CGGlyph' index='0' name='glyph' type='S'/>
<arg declared_type='NSFont * _Nonnull' index='1' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithCGGlyphs:count:inFont:'>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='0' name='glyphs' type='^S'/>
<arg declared_type='NSInteger' index='1' name='count' type='i' type64='q'/>
<arg declared_type='NSFont * _Nonnull' index='2' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithGlyph:inFont:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<arg declared_type='NSFont * _Nonnull' index='1' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithGlyphs:count:inFont:'>
<arg declared_type='NSGlyph * _Nonnull' index='0' name='glyphs' type='^I'/>
<arg declared_type='NSInteger' index='1' name='count' type='i' type64='q'/>
<arg declared_type='NSFont * _Nonnull' index='2' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithOvalInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithPackedGlyphs:'>
<arg const='true' declared_type='char * _Nonnull' index='0' name='packedGlyphs' type='*'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithPoints:count:'>
<arg declared_type='NSPointArray _Nonnull' index='0' name='points' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSInteger' index='1' name='count' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendBezierPathWithRoundedRect:xRadius:yRadius:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' index='1' name='xRadius' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='yRadius' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bezierPath'>
<retval declared_type='NSBezierPath * _Nonnull' type='@'/>
</method>
<method selector='bezierPathByFlatteningPath'>
<retval declared_type='NSBezierPath * _Nonnull' type='@'/>
</method>
<method selector='bezierPathByReversingPath'>
<retval declared_type='NSBezierPath * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithOvalInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSBezierPath * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSBezierPath * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='bezierPathWithRoundedRect:xRadius:yRadius:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' index='1' name='xRadius' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='yRadius' type='f' type64='d'/>
<retval declared_type='NSBezierPath * _Nonnull' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cachesBezierPath'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='clipRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='closePath'>
<retval declared_type='void' type='v'/>
</method>
<method selector='containsPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='controlPointBounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='currentPoint'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='curveToPoint:controlPoint1:controlPoint2:'>
<arg declared_type='NSPoint' index='0' name='endPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='controlPoint1' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='2' name='controlPoint2' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultFlatness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='defaultLineCapStyle'>
<retval declared_type='NSLineCapStyle' type='I' type64='Q'/>
</method>
<method class_method='true' selector='defaultLineJoinStyle'>
<retval declared_type='NSLineJoinStyle' type='I' type64='Q'/>
</method>
<method class_method='true' selector='defaultLineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='defaultMiterLimit'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='defaultWindingRule'>
<retval declared_type='NSWindingRule' type='I' type64='Q'/>
</method>
<method class_method='true' selector='drawPackedGlyphs:atPoint:'>
<arg const='true' declared_type='char * _Nonnull' index='0' name='packedGlyphs' type='*'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='elementAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSBezierPathElement' type='I' type64='Q'/>
</method>
<method selector='elementAtIndex:associatedPoints:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<arg declared_type='NSPointArray _Nullable' index='1' name='points' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSBezierPathElement' type='I' type64='Q'/>
</method>
<method selector='elementCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='fill'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='fillRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flatness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='getLineDash:count:phase:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='pattern' type='^f' type64='^d'/>
<arg declared_type='NSInteger * _Nullable' index='1' name='count' type='^i' type64='^q'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='phase' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineCapStyle'>
<retval declared_type='NSLineCapStyle' type='I' type64='Q'/>
</method>
<method selector='lineJoinStyle'>
<retval declared_type='NSLineJoinStyle' type='I' type64='Q'/>
</method>
<method selector='lineToPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='miterLimit'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='moveToPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='relativeCurveToPoint:controlPoint1:controlPoint2:'>
<arg declared_type='NSPoint' index='0' name='endPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='controlPoint1' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='2' name='controlPoint2' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='relativeLineToPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='relativeMoveToPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllPoints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAssociatedPoints:atIndex:'>
<arg declared_type='NSPointArray _Nullable' index='0' name='points' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachesBezierPath:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClip'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultFlatness:'>
<arg declared_type='CGFloat' index='0' name='defaultFlatness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultLineCapStyle:'>
<arg declared_type='NSLineCapStyle' index='0' name='defaultLineCapStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultLineJoinStyle:'>
<arg declared_type='NSLineJoinStyle' index='0' name='defaultLineJoinStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultLineWidth:'>
<arg declared_type='CGFloat' index='0' name='defaultLineWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultMiterLimit:'>
<arg declared_type='CGFloat' index='0' name='defaultMiterLimit' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultWindingRule:'>
<arg declared_type='NSWindingRule' index='0' name='defaultWindingRule' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlatness:'>
<arg declared_type='CGFloat' index='0' name='flatness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCapStyle:'>
<arg declared_type='NSLineCapStyle' index='0' name='lineCapStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineDash:count:phase:'>
<arg const='true' declared_type='CGFloat * _Nullable' index='0' name='pattern' type='^f' type64='^d'/>
<arg declared_type='NSInteger' index='1' name='count' type='i' type64='q'/>
<arg declared_type='CGFloat' index='2' name='phase' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoinStyle:'>
<arg declared_type='NSLineJoinStyle' index='0' name='lineJoinStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='CGFloat' index='0' name='lineWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiterLimit:'>
<arg declared_type='CGFloat' index='0' name='miterLimit' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindingRule:'>
<arg declared_type='NSWindingRule' index='0' name='windingRule' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stroke'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='strokeLineFromPoint:toPoint:'>
<arg declared_type='NSPoint' index='0' name='point1' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='point2' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='strokeRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformUsingAffineTransform:'>
<arg declared_type='NSAffineTransform * _Nonnull' index='0' name='transform' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windingRule'>
<retval declared_type='NSWindingRule' type='I' type64='Q'/>
</method>
</class>
<class name='NSBitmapImageRep'>
<method selector='CGImage'>
<retval declared_type='CGImageRef _Nullable' type='^{CGImage=}'/>
</method>
<method selector='TIFFRepresentation'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method class_method='true' selector='TIFFRepresentationOfImageRepsInArray:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='array' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method class_method='true' selector='TIFFRepresentationOfImageRepsInArray:usingCompression:factor:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='array' type='@'/>
<arg declared_type='NSTIFFCompression' index='1' name='comp' type='I' type64='Q'/>
<arg declared_type='float' index='2' name='factor' type='f'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='TIFFRepresentationUsingCompression:factor:'>
<arg declared_type='NSTIFFCompression' index='0' name='comp' type='I' type64='Q'/>
<arg declared_type='float' index='1' name='factor' type='f'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='bitmapData'>
<retval declared_type='unsigned char * _Nullable' type='*'/>
</method>
<method selector='bitmapFormat'>
<retval declared_type='NSBitmapFormat' type='I' type64='Q'/>
</method>
<method selector='bitmapImageRepByConvertingToColorSpace:renderingIntent:'>
<arg declared_type='NSColorSpace * _Nonnull' index='0' name='targetSpace' type='@'/>
<arg declared_type='NSColorRenderingIntent' index='1' name='renderingIntent' type='i' type64='q'/>
<retval declared_type='NSBitmapImageRep * _Nullable' type='@'/>
</method>
<method selector='bitmapImageRepByRetaggingWithColorSpace:'>
<arg declared_type='NSColorSpace * _Nonnull' index='0' name='newSpace' type='@'/>
<retval declared_type='NSBitmapImageRep * _Nullable' type='@'/>
</method>
<method selector='bitsPerPixel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='bytesPerPlane'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='bytesPerRow'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='canBeCompressedUsing:'>
<arg declared_type='NSTIFFCompression' index='0' name='compression' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='colorAtX:y:'>
<arg declared_type='NSInteger' index='0' name='x' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='y' type='i' type64='q'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='colorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method selector='colorizeByMappingGray:toColor:blackMapping:whiteMapping:'>
<arg declared_type='CGFloat' index='0' name='midPoint' type='f' type64='d'/>
<arg declared_type='NSColor * _Nullable' index='1' name='midPointColor' type='@'/>
<arg declared_type='NSColor * _Nullable' index='2' name='shadowColor' type='@'/>
<arg declared_type='NSColor * _Nullable' index='3' name='lightColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBitmapDataPlanes:'>
<arg declared_type='unsigned char * _Nullable * _Nonnull' index='0' name='data' type='^*'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getCompression:factor:'>
<arg declared_type='NSTIFFCompression * _Nullable' index='0' name='compression' type='^I' type64='^Q'/>
<arg declared_type='float * _Nullable' index='1' name='factor' type='^f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPixel:atX:y:'>
<arg declared_type='NSUInteger*' index='0' name='p' type='^I' type64='^Q'/>
<arg declared_type='NSInteger' index='1' name='x' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='y' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='getTIFFCompressionTypes:count:'>
<arg const='true' declared_type='NSTIFFCompression * _Nullable * _Nonnull' index='0' name='list' type='^^I' type64='^^Q'/>
<arg declared_type='NSInteger * _Nonnull' index='1' name='numTypes' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='imageRepWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageRepsWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='incrementalLoadFromData:complete:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='BOOL' index='1' name='complete' type='B'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initForIncrementalLoad'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:'>
<arg declared_type='unsigned char * _Nullable * _Nullable' index='0' name='planes' type='^*'/>
<arg declared_type='NSInteger' index='1' name='width' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='height' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='bps' type='i' type64='q'/>
<arg declared_type='NSInteger' index='4' name='spp' type='i' type64='q'/>
<arg declared_type='BOOL' index='5' name='alpha' type='B'/>
<arg declared_type='BOOL' index='6' name='isPlanar' type='B'/>
<arg declared_type='NSColorSpaceName _Nonnull' index='7' name='colorSpaceName' type='@'/>
<arg declared_type='NSBitmapFormat' index='8' name='bitmapFormat' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='9' name='rBytes' type='i' type64='q'/>
<arg declared_type='NSInteger' index='10' name='pBits' type='i' type64='q'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:'>
<arg declared_type='unsigned char * _Nullable * _Nullable' index='0' name='planes' type='^*'/>
<arg declared_type='NSInteger' index='1' name='width' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='height' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='bps' type='i' type64='q'/>
<arg declared_type='NSInteger' index='4' name='spp' type='i' type64='q'/>
<arg declared_type='BOOL' index='5' name='alpha' type='B'/>
<arg declared_type='BOOL' index='6' name='isPlanar' type='B'/>
<arg declared_type='NSColorSpaceName _Nonnull' index='7' name='colorSpaceName' type='@'/>
<arg declared_type='NSInteger' index='8' name='rBytes' type='i' type64='q'/>
<arg declared_type='NSInteger' index='9' name='pBits' type='i' type64='q'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCGImage:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCIImage:'>
<arg declared_type='CIImage * _Nonnull' index='0' name='ciImage' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFocusedViewRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isPlanar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='localizedNameForTIFFCompressionType:'>
<arg declared_type='NSTIFFCompression' index='0' name='compression' type='I' type64='Q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='numberOfPlanes'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='representationOfImageRepsInArray:usingType:properties:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='imageReps' type='@'/>
<arg declared_type='NSBitmapImageFileType' index='1' name='storageType' type='I' type64='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='properties' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='representationUsingType:properties:'>
<arg declared_type='NSBitmapImageFileType' index='0' name='storageType' type='I' type64='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='properties' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='samplesPerPixel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setColor:atX:y:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<arg declared_type='NSInteger' index='1' name='x' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='y' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompression:factor:'>
<arg declared_type='NSTIFFCompression' index='0' name='compression' type='I' type64='Q'/>
<arg declared_type='float' index='1' name='factor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPixel:atX:y:'>
<arg declared_type='NSUInteger*' index='0' name='p' type='^I' type64='^Q'/>
<arg declared_type='NSInteger' index='1' name='x' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='y' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProperty:withValue:'>
<arg declared_type='NSBitmapImageRepPropertyKey _Nonnull' index='0' name='property' type='@'/>
<arg declared_type='id _Nullable' index='1' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueForProperty:'>
<arg declared_type='NSBitmapImageRepPropertyKey _Nonnull' index='0' name='property' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='NSBox'>
<method selector='borderColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='borderRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='borderType'>
<retval declared_type='NSBorderType' type='I' type64='Q'/>
</method>
<method selector='borderWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='boxType'>
<retval declared_type='NSBoxType' type='I' type64='Q'/>
</method>
<method selector='contentView'>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
<method selector='contentViewMargins'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='cornerRadius'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='fillColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='isTransparent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='borderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderType:'>
<arg declared_type='NSBorderType' index='0' name='borderType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderWidth:'>
<arg declared_type='CGFloat' index='0' name='borderWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoxType:'>
<arg declared_type='NSBoxType' index='0' name='boxType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type='__kindof NSView * _Nullable' index='0' name='contentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewMargins:'>
<arg declared_type='NSSize' index='0' name='contentViewMargins' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type='CGFloat' index='0' name='cornerRadius' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='fillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameFromContentFrame:'>
<arg declared_type='NSRect' index='0' name='contentFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='titleFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitlePosition:'>
<arg declared_type='NSTitlePosition' index='0' name='titlePosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransparent:'>
<arg declared_type='BOOL' index='0' name='transparent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='titleCell'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='titleFont'>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='titlePosition'>
<retval declared_type='NSTitlePosition' type='I' type64='Q'/>
</method>
<method selector='titleRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSBrowser'>
<method selector='acceptsArrowKeys'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addColumn'>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsBranchSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsTypeSelect'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autohidesScroller'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='canDragRowsWithIndexes:inColumn:withEvent:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='cellClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='cellPrototype'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='clickedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='clickedRow'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='columnContentWidthForColumnWidth:'>
<arg declared_type='CGFloat' index='0' name='columnWidth' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='columnOfMatrix:'>
<arg declared_type='NSMatrix * _Nonnull' index='0' name='matrix' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='columnResizingType'>
<retval declared_type='NSBrowserColumnResizingType' type='I' type64='Q'/>
</method>
<method selector='columnWidthForColumnContentWidth:'>
<arg declared_type='CGFloat' index='0' name='columnContentWidth' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='columnsAutosaveName'>
<retval declared_type='NSBrowserColumnsAutosaveName _Nonnull' type='@'/>
</method>
<method selector='defaultColumnWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='displayAllColumns'>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doClick:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doDoubleClick:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleAction'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nullable' index='3' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='drawTitleOfColumn:inRect:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editItemAtIndexPath:withEvent:select:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='NSEvent * _Nullable' index='1' name='event' type='@'/>
<arg declared_type='BOOL' index='2' name='select' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstVisibleColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='frameOfColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameOfInsideOfColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameOfRow:inColumn:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='getRow:column:forPoint:'>
<arg declared_type='NSInteger * _Nullable' index='0' name='row' type='^i' type64='^q'/>
<arg declared_type='NSInteger * _Nullable' index='1' name='column' type='^i' type64='^q'/>
<arg declared_type='NSPoint' index='2' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasHorizontalScroller'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indexPathForColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='isLeafItem:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTitled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='itemAtRow:inColumn:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='lastColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='lastVisibleColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='loadColumnZero'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadedCellAtRow:column:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='col' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='matrixClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='matrixInColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSMatrix * _Nullable' type='@'/>
</method>
<method selector='maxVisibleColumns'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='minColumnWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='noteHeightOfRowsWithIndexesChanged:inColumn:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexSet' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfVisibleColumns'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='parentForItemsInColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='path'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='pathSeparator'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='pathToColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='prefersAllColumnUserResizing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reloadColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadDataForRowIndexes:inColumn:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removeSavedColumnsWithAutosaveName:'>
<arg declared_type='NSBrowserColumnsAutosaveName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reusesColumns'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rowHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollColumnToVisible:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollColumnsLeftBy:'>
<arg declared_type='NSInteger' index='0' name='shiftAmount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollColumnsRightBy:'>
<arg declared_type='NSInteger' index='0' name='shiftAmount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRowToVisible:inColumn:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollViaScroller:'>
<arg declared_type='NSScroller * _Null_unspecified' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectRow:inColumn:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectRowIndexes:inColumn:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedCell'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='selectedCellInColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='selectedCells'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='selectedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectedRowInColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectedRowIndexesInColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSIndexSet * _Nullable' type='@'/>
</method>
<method selector='selectionIndexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='selectionIndexPaths'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='sendAction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendsActionOnArrowKeys'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='separatesColumns'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAcceptsArrowKeys:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsBranchSelection:'>
<arg declared_type='BOOL' index='0' name='allowsBranchSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type='BOOL' index='0' name='allowsEmptySelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='allowsMultipleSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsTypeSelect:'>
<arg declared_type='BOOL' index='0' name='allowsTypeSelect' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutohidesScroller:'>
<arg declared_type='BOOL' index='0' name='autohidesScroller' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellClass:'>
<arg declared_type='Class _Nonnull' index='0' name='factoryId' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellPrototype:'>
<arg declared_type='id _Nullable' index='0' name='cellPrototype' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColumnResizingType:'>
<arg declared_type='NSBrowserColumnResizingType' index='0' name='columnResizingType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColumnsAutosaveName:'>
<arg declared_type='NSBrowserColumnsAutosaveName _Nonnull' index='0' name='columnsAutosaveName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultColumnWidth:'>
<arg declared_type='CGFloat' index='0' name='columnWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type='SEL _Nullable' index='0' name='doubleAction' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg declared_type='NSDragOperation' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='isLocal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg declared_type='BOOL' index='0' name='hasHorizontalScroller' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastColumn:'>
<arg declared_type='NSInteger' index='0' name='lastColumn' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatrixClass:'>
<arg declared_type='Class _Nonnull' index='0' name='factoryId' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxVisibleColumns:'>
<arg declared_type='NSInteger' index='0' name='maxVisibleColumns' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinColumnWidth:'>
<arg declared_type='CGFloat' index='0' name='minColumnWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPathSeparator:'>
<arg declared_type='NSString * _Nonnull' index='0' name='pathSeparator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefersAllColumnUserResizing:'>
<arg declared_type='BOOL' index='0' name='prefersAllColumnUserResizing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReusesColumns:'>
<arg declared_type='BOOL' index='0' name='reusesColumns' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowHeight:'>
<arg declared_type='CGFloat' index='0' name='rowHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionIndexPath:'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='selectionIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='selectionIndexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSendsActionOnArrowKeys:'>
<arg declared_type='BOOL' index='0' name='sendsActionOnArrowKeys' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatesColumns:'>
<arg declared_type='BOOL' index='0' name='separatesColumns' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTakesTitleFromPreviousColumn:'>
<arg declared_type='BOOL' index='0' name='takesTitleFromPreviousColumn' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:ofColumn:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitled:'>
<arg declared_type='BOOL' index='0' name='titled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:ofColumn:'>
<arg declared_type='CGFloat' index='0' name='columnWidth' type='f' type64='d'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takesTitleFromPreviousColumn'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='titleFrameOfColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='titleHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='titleOfColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='updateScroller'>
<retval declared_type='void' type='v'/>
</method>
<method selector='validateVisibleColumns'>
<retval declared_type='void' type='v'/>
</method>
<method selector='widthOfColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSBrowserCell'>
<method selector='alternateImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='branchImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='highlightColorInView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='controlView' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='highlightedBranchImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='initImageCell:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initTextCell:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isLeaf'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='alternateImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeaf:'>
<arg declared_type='BOOL' index='0' name='leaf' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoaded:'>
<arg declared_type='BOOL' index='0' name='loaded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSBundle'>
<method selector='URLForImageResource:'>
<arg declared_type='NSImageName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='contextHelpForKey:'>
<arg declared_type='NSHelpManagerContextHelpKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='imageForResource:'>
<arg declared_type='NSImageName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='loadNibFile:externalNameTable:withZone:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='fileName' type='@'/>
<arg declared_type='NSDictionary * _Null_unspecified' index='1' name='context' type='@'/>
<arg declared_type='NSZone * _Null_unspecified' index='2' name='zone' type='^{_NSZone=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadNibFile:externalNameTable:withZone:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='fileName' type='@'/>
<arg declared_type='NSDictionary * _Null_unspecified' index='1' name='context' type='@'/>
<arg declared_type='NSZone * _Null_unspecified' index='2' name='zone' type='^{_NSZone=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='loadNibNamed:owner:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='nibName' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='owner' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadNibNamed:owner:topLevelObjects:'>
<arg declared_type='NSNibName _Nonnull' index='0' name='nibName' type='@'/>
<arg declared_type='id _Nullable' index='1' name='owner' type='@'/>
<arg declared_type='NSArray * _Nullable * _Nullable' index='2' name='topLevelObjects' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathForImageResource:'>
<arg declared_type='NSImageName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='pathForSoundResource:'>
<arg declared_type='NSSoundName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='NSButton'>
<method selector='allowsMixedState'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alternateImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='alternateTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='attributedAlternateTitle'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='bezelColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='bezelStyle'>
<retval declared_type='NSBezelStyle' type='I' type64='Q'/>
</method>
<method class_method='true' selector='buttonWithImage:target:action:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='buttonWithTitle:image:target:action:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='NSImage * _Nonnull' index='1' name='image' type='@'/>
<arg declared_type='id _Nullable' index='2' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='buttonWithTitle:target:action:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='checkboxWithTitle:target:action:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg declared_type='float * _Nonnull' index='0' name='delay' type='^f'/>
<arg declared_type='float * _Nonnull' index='1' name='interval' type='^f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='highlight:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='imageHugsTitle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imagePosition'>
<retval declared_type='NSCellImagePosition' type='I' type64='Q'/>
</method>
<method selector='imageScaling'>
<retval declared_type='NSImageScaling' type='I' type64='Q'/>
</method>
<method selector='isBordered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSpringLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTransparent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval declared_type='NSEventModifierFlags' type='I' type64='Q'/>
</method>
<method selector='maxAcceleratorLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='radioButtonWithTitle:target:action:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAllowsMixedState:'>
<arg declared_type='BOOL' index='0' name='allowsMixedState' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='alternateImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='alternateTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedAlternateTitle:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedAlternateTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezelColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='bezelColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezelStyle:'>
<arg declared_type='NSBezelStyle' index='0' name='bezelStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type='BOOL' index='0' name='bordered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonType:'>
<arg declared_type='NSButtonType' index='0' name='type' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageHugsTitle:'>
<arg declared_type='BOOL' index='0' name='imageHugsTitle' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImagePosition:'>
<arg declared_type='NSCellImagePosition' index='0' name='imagePosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScaling:'>
<arg declared_type='NSImageScaling' index='0' name='imageScaling' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyEquivalent:'>
<arg declared_type='NSString * _Nonnull' index='0' name='keyEquivalent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg declared_type='NSEventModifierFlags' index='0' name='keyEquivalentModifierMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAcceleratorLevel:'>
<arg declared_type='NSInteger' index='0' name='maxAcceleratorLevel' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPeriodicDelay:interval:'>
<arg declared_type='float' index='0' name='delay' type='f'/>
<arg declared_type='float' index='1' name='interval' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsBorderOnlyWhileMouseInside:'>
<arg declared_type='BOOL' index='0' name='showsBorderOnlyWhileMouseInside' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSound:'>
<arg declared_type='NSSound * _Nullable' index='0' name='sound' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpringLoaded:'>
<arg declared_type='BOOL' index='0' name='springLoaded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg declared_type='NSControlStateValue' index='0' name='state' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransparent:'>
<arg declared_type='BOOL' index='0' name='transparent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsBorderOnlyWhileMouseInside'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sound'>
<retval declared_type='NSSound * _Nullable' type='@'/>
</method>
<method selector='state'>
<retval declared_type='NSControlStateValue' type='i' type64='q'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSButtonCell'>
<method selector='alternateImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='alternateMnemonic'>
<retval declared_type='NSString * _Null_unspecified' type='@'/>
</method>
<method selector='alternateMnemonicLocation'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='alternateTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='attributedAlternateTitle'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='bezelStyle'>
<retval declared_type='NSBezelStyle' type='I' type64='Q'/>
</method>
<method selector='drawBezelWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawImage:withFrame:inView:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSRect' index='1' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawTitle:withFrame:inView:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='NSRect' index='1' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg declared_type='float * _Nonnull' index='0' name='delay' type='^f'/>
<arg declared_type='float * _Nonnull' index='1' name='interval' type='^f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gradientType'>
<retval declared_type='NSGradientType' type='I' type64='Q'/>
</method>
<method selector='highlightsBy'>
<retval declared_type='NSCellStyleMask' type='I' type64='Q'/>
</method>
<method selector='imageDimsWhenDisabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imagePosition'>
<retval declared_type='NSCellImagePosition' type='I' type64='Q'/>
</method>
<method selector='imageScaling'>
<retval declared_type='NSImageScaling' type='I' type64='Q'/>
</method>
<method selector='initImageCell:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initTextCell:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTransparent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='keyEquivalentFont'>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval declared_type='NSEventModifierFlags' type='I' type64='Q'/>
</method>
<method selector='mouseEntered:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseExited:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performClick:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='alternateImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateMnemonicLocation:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='alternateTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateTitleWithMnemonic:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedAlternateTitle:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedAlternateTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezelStyle:'>
<arg declared_type='NSBezelStyle' index='0' name='bezelStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonType:'>
<arg declared_type='NSButtonType' index='0' name='type' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientType:'>
<arg declared_type='NSGradientType' index='0' name='gradientType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightsBy:'>
<arg declared_type='NSCellStyleMask' index='0' name='highlightsBy' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageDimsWhenDisabled:'>
<arg declared_type='BOOL' index='0' name='imageDimsWhenDisabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImagePosition:'>
<arg declared_type='NSCellImagePosition' index='0' name='imagePosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScaling:'>
<arg declared_type='NSImageScaling' index='0' name='imageScaling' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyEquivalent:'>
<arg declared_type='NSString * _Nonnull' index='0' name='keyEquivalent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyEquivalentFont:'>
<arg declared_type='NSFont * _Nullable' index='0' name='keyEquivalentFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyEquivalentFont:size:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGFloat' index='1' name='fontSize' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg declared_type='NSEventModifierFlags' index='0' name='keyEquivalentModifierMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPeriodicDelay:interval:'>
<arg declared_type='float' index='0' name='delay' type='f'/>
<arg declared_type='float' index='1' name='interval' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsBorderOnlyWhileMouseInside:'>
<arg declared_type='BOOL' index='0' name='showsBorderOnlyWhileMouseInside' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsStateBy:'>
<arg declared_type='NSCellStyleMask' index='0' name='showsStateBy' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSound:'>
<arg declared_type='NSSound * _Nullable' index='0' name='sound' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransparent:'>
<arg declared_type='BOOL' index='0' name='transparent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsBorderOnlyWhileMouseInside'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsStateBy'>
<retval declared_type='NSCellStyleMask' type='I' type64='Q'/>
</method>
<method selector='sound'>
<retval declared_type='NSSound * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSCIImageRep'>
<method selector='CIImage'>
<retval declared_type='CIImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageRepWithCIImage:'>
<arg declared_type='CIImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCIImage:'>
<arg declared_type='CIImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSCachedImageRep'>
<method selector='initWithSize:depth:separate:alpha:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSWindowDepth' index='1' name='depth' type='i'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<arg declared_type='BOOL' index='3' name='alpha' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithWindow:rect:'>
<arg declared_type='NSWindow*' index='0' name='win' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='window'>
<retval declared_type='NSWindow*' type='@'/>
</method>
</class>
<class name='NSCandidateListTouchBarItem'>
<method selector='allowsCollapsing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsTextInputContextCandidates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedStringForCandidate'>
<retval declared_type='NSAttributedString * _Nonnull (^ _Nullable)(CandidateType _Nonnull, NSInteger)' function_pointer='true' type='@?'>
<arg declared_type='CandidateType _Nonnull' type='@'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</retval>
</method>
<method selector='candidates'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='client'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isCandidateListVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCollapsed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAllowsCollapsing:'>
<arg declared_type='BOOL' index='0' name='allowsCollapsing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsTextInputContextCandidates:'>
<arg declared_type='BOOL' index='0' name='allowsTextInputContextCandidates' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringForCandidate:'>
<arg declared_type='NSAttributedString * _Nonnull (^ _Nullable)(CandidateType _Nonnull, NSInteger)' function_pointer='true' index='0' name='attributedStringForCandidate' type='@?'>
<arg declared_type='CandidateType _Nonnull' type='@'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCandidates:forSelectedRange:inString:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='candidates' type='@'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nullable' index='2' name='originalString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClient:'>
<arg declared_type='NSView * _Nullable' index='0' name='client' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollapsed:'>
<arg declared_type='BOOL' index='0' name='collapsed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='customizationLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateWithInsertionPointVisibility:'>
<arg declared_type='BOOL' index='0' name='isVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCell'>
<method selector='acceptsFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMixedState'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsUndo'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedStringValue'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='backgroundStyle'>
<retval declared_type='NSBackgroundStyle' type='i' type64='q'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method selector='calcDrawInfo:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cellAttribute:'>
<arg declared_type='NSCellAttribute' index='0' name='parameter' type='I' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='cellSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='cellSizeForBounds:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='compare:'>
<arg declared_type='id _Nonnull' index='0' name='otherCell' type='@'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='continueTracking:at:inView:'>
<arg declared_type='NSPoint' index='0' name='lastPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='currentPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='controlSize'>
<retval declared_type='NSControlSize' type='I' type64='Q'/>
</method>
<method selector='controlTint'>
<retval declared_type='NSControlTint' type='I' type64='Q'/>
</method>
<method selector='controlView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method class_method='true' selector='defaultFocusRingType'>
<retval declared_type='NSFocusRingType' type='I' type64='Q'/>
</method>
<method class_method='true' selector='defaultMenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='draggingImageComponentsWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='drawFocusRingMaskWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInteriorWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithExpansionFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawingRectForBounds:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='editWithFrame:inView:editor:delegate:event:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<arg declared_type='NSText * _Nonnull' index='2' name='textObj' type='@'/>
<arg declared_type='id _Nullable' index='3' name='delegate' type='@'/>
<arg declared_type='NSEvent * _Nullable' index='4' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='entryType'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='expansionFrameWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='fieldEditorForView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='controlView' type='@'/>
<retval declared_type='NSTextView * _Nullable' type='@'/>
</method>
<method selector='floatValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='focusRingMaskBoundsForFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='focusRingType'>
<retval declared_type='NSFocusRingType' type='I' type64='Q'/>
</method>
<method selector='font'>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='formatter'>
<retval declared_type='__kindof NSFormatter * _Nullable' type='@'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg declared_type='float * _Nonnull' index='0' name='delay' type='^f'/>
<arg declared_type='float * _Nonnull' index='1' name='interval' type='^f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasValidObjectValue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='highlight:withFrame:inView:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='highlightColorWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='hitTestForEvent:inRect:ofView:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<retval declared_type='NSCellHitResult' type='I' type64='Q'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='imageRectForBounds:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='importsGraphics'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initImageCell:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initTextCell:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='intValue'>
<retval declared_type='int' type='i'/>
</method>
<method selector='integerValue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='interiorBackgroundStyle'>
<retval declared_type='NSBackgroundStyle' type='i' type64='q'/>
</method>
<method selector='isBezeled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isBordered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isContinuous'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEntryAcceptable:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isScrollable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='I' type64='Q'/>
</method>
<method selector='menu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='menuForEvent:inRect:ofView:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='mnemonic'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='mnemonicLocation'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='mouseDownFlags'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='nextState'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='objectValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='performClick:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='prefersTrackingUntilMouseUp'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='refusesFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='representedObject'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='resetCursorRect:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectWithFrame:inView:editor:delegate:start:length:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<arg declared_type='NSText * _Nonnull' index='2' name='textObj' type='@'/>
<arg declared_type='id _Nullable' index='3' name='delegate' type='@'/>
<arg declared_type='NSInteger' index='4' name='selStart' type='i' type64='q'/>
<arg declared_type='NSInteger' index='5' name='selLength' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendActionOn:'>
<arg declared_type='NSInteger' declared_type64='NSEventMask' index='0' name='mask' type='i' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='sendsActionOnEndEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg declared_type='BOOL' index='0' name='allowsEditingTextAttributes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMixedState:'>
<arg declared_type='BOOL' index='0' name='allowsMixedState' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsUndo:'>
<arg declared_type='BOOL' index='0' name='allowsUndo' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringValue:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedStringValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundStyle:'>
<arg declared_type='NSBackgroundStyle' index='0' name='backgroundStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='baseWritingDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type='BOOL' index='0' name='bezeled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type='BOOL' index='0' name='bordered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellAttribute:to:'>
<arg declared_type='NSCellAttribute' index='0' name='parameter' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='value' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type='BOOL' index='0' name='continuous' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type='NSControlSize' index='0' name='controlSize' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlTint:'>
<arg declared_type='NSControlTint' index='0' name='controlTint' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlView:'>
<arg declared_type='NSView * _Nullable' index='0' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleValue:'>
<arg declared_type='double' index='0' name='doubleValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntryType:'>
<arg declared_type='NSInteger' index='0' name='type' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloatValue:'>
<arg declared_type='float' index='0' name='floatValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloatingPointFormat:left:right:'>
<arg declared_type='BOOL' index='0' name='autoRange' type='B'/>
<arg declared_type='NSUInteger' index='1' name='leftDigits' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='rightDigits' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusRingType:'>
<arg declared_type='NSFocusRingType' index='0' name='focusRingType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormatter:'>
<arg declared_type='__kindof NSFormatter * _Nullable' index='0' name='formatter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImportsGraphics:'>
<arg declared_type='BOOL' index='0' name='importsGraphics' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntValue:'>
<arg declared_type='int' index='0' name='intValue' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntegerValue:'>
<arg declared_type='NSInteger' index='0' name='integerValue' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMnemonicLocation:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectValue:'>
<arg declared_type='id _Nullable' index='0' name='objectValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefusesFirstResponder:'>
<arg declared_type='BOOL' index='0' name='refusesFirstResponder' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='representedObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollable:'>
<arg declared_type='BOOL' index='0' name='scrollable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type='BOOL' index='0' name='selectable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSendsActionOnEndEditing:'>
<arg declared_type='BOOL' index='0' name='sendsActionOnEndEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsFirstResponder:'>
<arg declared_type='BOOL' index='0' name='showsFirstResponder' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg declared_type='NSControlStateValue' index='0' name='state' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringValue:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringWithAmpersand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTruncatesLastVisibleLine:'>
<arg declared_type='BOOL' index='0' name='truncatesLastVisibleLine' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg declared_type='NSCellType' index='0' name='type' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpFieldEditorAttributes:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObj' type='@'/>
<retval declared_type='NSText * _Nonnull' type='@'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesSingleLineMode:'>
<arg declared_type='BOOL' index='0' name='usesSingleLineMode' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWraps:'>
<arg declared_type='BOOL' index='0' name='wraps' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startTrackingAt:inView:'>
<arg declared_type='NSPoint' index='0' name='startPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='state'>
<retval declared_type='NSControlStateValue' type='i' type64='q'/>
</method>
<method selector='stopTracking:at:inView:mouseIsUp:'>
<arg declared_type='NSPoint' index='0' name='lastPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='stopPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringValue'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='takeDoubleValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeFloatValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeIntValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeIntegerValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeObjectValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeStringValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='titleRectForBounds:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='truncatesLastVisibleLine'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='type'>
<retval declared_type='NSCellType' type='I' type64='Q'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type='NSUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='usesSingleLineMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsNotificationForMarkedText'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wraps'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSClickGestureRecognizer'>
<method selector='buttonMask'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfClicksRequired'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setButtonMask:'>
<arg declared_type='NSUInteger' index='0' name='buttonMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfClicksRequired:'>
<arg declared_type='NSInteger' index='0' name='numberOfClicksRequired' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type='NSInteger' index='0' name='numberOfTouchesRequired' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSClipView'>
<method selector='automaticallyAdjustsContentInsets'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autoscroll:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='constrainBoundsRect:'>
<arg declared_type='NSRect' index='0' name='proposedBounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='constrainScrollPoint:'>
<arg declared_type='NSPoint' index='0' name='newOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='contentInsets'>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='copiesOnScroll'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='documentCursor'>
<retval declared_type='NSCursor * _Nullable' type='@'/>
</method>
<method selector='documentRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='documentView'>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
<method selector='documentVisibleRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scrollToPoint:'>
<arg declared_type='NSPoint' index='0' name='newOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticallyAdjustsContentInsets:'>
<arg declared_type='BOOL' index='0' name='automaticallyAdjustsContentInsets' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentInsets:'>
<arg declared_type='NSEdgeInsets' index='0' name='contentInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCopiesOnScroll:'>
<arg declared_type='BOOL' index='0' name='copiesOnScroll' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentCursor:'>
<arg declared_type='NSCursor * _Nullable' index='0' name='documentCursor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentView:'>
<arg declared_type='__kindof NSView * _Nullable' index='0' name='documentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewBoundsChanged:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewFrameChanged:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeNXColor'>
<retval declared_type='NSColor * _Null_unspecified' type='@'/>
</method>
</class>
<class name='NSCollectionView'>
<method selector='allowsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='backgroundView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='backgroundViewScrollsWithContent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionViewLayout'>
<retval declared_type='__kindof NSCollectionViewLayout * _Nullable' type='@'/>
</method>
<method selector='content'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deleteItemsAtIndexPaths:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteSections:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deselectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deselectItemsAtIndexPaths:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingImageForItemsAtIndexPaths:withEvent:offset:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='indexPaths' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='2' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='draggingImageForItemsAtIndexes:withEvent:offset:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='2' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='frameForItemAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameForItemAtIndex:withNumberOfItems:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='numberOfItems' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indexPathForItem:'>
<arg declared_type='NSCollectionViewItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathForItemAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathsForVisibleItems'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='indexPathsForVisibleSupplementaryElementsOfKind:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='insertItemsAtIndexPaths:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSections:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='NSCollectionViewItem * _Nullable' type='@'/>
</method>
<method selector='itemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewItem * _Nullable' type='@'/>
</method>
<method selector='itemPrototype'>
<retval declared_type='NSCollectionViewItem * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='kind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='makeItemWithIdentifier:forIndexPath:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='__kindof NSCollectionViewItem * _Nonnull' type='@'/>
</method>
<method selector='makeSupplementaryViewOfKind:withIdentifier:forIndexPath:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='identifier' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='__kindof NSView * _Nonnull' type='@'/>
</method>
<method selector='maxItemSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='maxNumberOfColumns'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='maxNumberOfRows'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minItemSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='moveItemAtIndexPath:toIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='newIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveSection:toSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='newSection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='newItemForRepresentedObject:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='NSCollectionViewItem * _Nonnull' type='@'/>
</method>
<method selector='numberOfItemsInSection:'>
<arg declared_type='NSInteger' index='0' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSections'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performBatchUpdates:completionHandler:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='updates' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='prefetchDataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='registerClass:forItemWithIdentifier:'>
<arg declared_type='Class _Nullable' index='0' name='itemClass' type='#'/>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerClass:forSupplementaryViewOfKind:withIdentifier:'>
<arg declared_type='Class _Nullable' index='0' name='viewClass' type='#'/>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='1' name='kind' type='@'/>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='2' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forItemWithIdentifier:'>
<arg declared_type='NSNib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forSupplementaryViewOfKind:withIdentifier:'>
<arg declared_type='NSNib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='1' name='kind' type='@'/>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='2' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadItemsAtIndexPaths:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadSections:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='sections' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToItemsAtIndexPaths:scrollPosition:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='indexPaths' type='@'/>
<arg declared_type='NSCollectionViewScrollPosition' index='1' name='scrollPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemsAtIndexPaths:scrollPosition:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='indexPaths' type='@'/>
<arg declared_type='NSCollectionViewScrollPosition' index='1' name='scrollPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectionIndexPaths'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='selectionIndexes'>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type='BOOL' index='0' name='allowsEmptySelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='allowsMultipleSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColors:'>
<arg declared_type='NSArray * _Nullable' index='0' name='backgroundColors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='NSView * _Nullable' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundViewScrollsWithContent:'>
<arg declared_type='BOOL' index='0' name='backgroundViewScrollsWithContent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollectionViewLayout:'>
<arg declared_type='__kindof NSCollectionViewLayout * _Nullable' index='0' name='collectionViewLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContent:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='content' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg declared_type='NSDragOperation' index='0' name='dragOperationMask' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='localDestination' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemPrototype:'>
<arg declared_type='NSCollectionViewItem * _Nullable' index='0' name='itemPrototype' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxItemSize:'>
<arg declared_type='NSSize' index='0' name='maxItemSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxNumberOfColumns:'>
<arg declared_type='NSUInteger' index='0' name='maxNumberOfColumns' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxNumberOfRows:'>
<arg declared_type='NSUInteger' index='0' name='maxNumberOfRows' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinItemSize:'>
<arg declared_type='NSSize' index='0' name='minItemSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefetchDataSource:'>
<arg declared_type='id _Nullable' index='0' name='prefetchDataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type='BOOL' index='0' name='selectable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionIndexPaths:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='selectionIndexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='selectionIndexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supplementaryViewForElementKind:atIndexPath:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='toggleSectionCollapse:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visibleItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='visibleSupplementaryViewsOfKind:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSArray *&gt; * _Nonnull' type='@'/>
</method>
</class>
<class name='NSCollectionViewFlowLayout'>
<method selector='collapseSectionAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='sectionIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='estimatedItemSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='expandSectionAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='sectionIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='footerReferenceSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='headerReferenceSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='itemSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='minimumInteritemSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumLineSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollDirection'>
<retval declared_type='NSCollectionViewScrollDirection' type='i' type64='q'/>
</method>
<method selector='sectionAtIndexIsCollapsed:'>
<arg declared_type='NSUInteger' index='0' name='sectionIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sectionFootersPinToVisibleBounds'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sectionHeadersPinToVisibleBounds'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sectionInset'>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='setEstimatedItemSize:'>
<arg declared_type='NSSize' index='0' name='estimatedItemSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFooterReferenceSize:'>
<arg declared_type='NSSize' index='0' name='footerReferenceSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderReferenceSize:'>
<arg declared_type='NSSize' index='0' name='headerReferenceSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemSize:'>
<arg declared_type='NSSize' index='0' name='itemSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumInteritemSpacing:'>
<arg declared_type='CGFloat' index='0' name='minimumInteritemSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumLineSpacing:'>
<arg declared_type='CGFloat' index='0' name='minimumLineSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollDirection:'>
<arg declared_type='NSCollectionViewScrollDirection' index='0' name='scrollDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionFootersPinToVisibleBounds:'>
<arg declared_type='BOOL' index='0' name='sectionFootersPinToVisibleBounds' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionHeadersPinToVisibleBounds:'>
<arg declared_type='BOOL' index='0' name='sectionHeadersPinToVisibleBounds' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionInset:'>
<arg declared_type='NSEdgeInsets' index='0' name='sectionInset' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCollectionViewFlowLayoutInvalidationContext'>
<method selector='invalidateFlowLayoutAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='invalidateFlowLayoutDelegateMetrics'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setInvalidateFlowLayoutAttributes:'>
<arg declared_type='BOOL' index='0' name='invalidateFlowLayoutAttributes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInvalidateFlowLayoutDelegateMetrics:'>
<arg declared_type='BOOL' index='0' name='invalidateFlowLayoutDelegateMetrics' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCollectionViewGridLayout'>
<method selector='backgroundColors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='margins'>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='maximumItemSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='maximumNumberOfColumns'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='maximumNumberOfRows'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimumInteritemSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumItemSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='minimumLineSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setBackgroundColors:'>
<arg declared_type='NSArray * _Nullable' index='0' name='backgroundColors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargins:'>
<arg declared_type='NSEdgeInsets' index='0' name='margins' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumItemSize:'>
<arg declared_type='NSSize' index='0' name='maximumItemSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfColumns:'>
<arg declared_type='NSUInteger' index='0' name='maximumNumberOfColumns' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfRows:'>
<arg declared_type='NSUInteger' index='0' name='maximumNumberOfRows' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumInteritemSpacing:'>
<arg declared_type='CGFloat' index='0' name='minimumInteritemSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumItemSize:'>
<arg declared_type='NSSize' index='0' name='minimumItemSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumLineSpacing:'>
<arg declared_type='CGFloat' index='0' name='minimumLineSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCollectionViewItem'>
<method selector='collectionView'>
<retval declared_type='NSCollectionView * _Nullable' type='@'/>
</method>
<method selector='draggingImageComponents'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='highlightState'>
<retval declared_type='NSCollectionViewItemHighlightState' type='i' type64='q'/>
</method>
<method selector='imageView'>
<retval declared_type='NSImageView * _Nullable' type='@'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setHighlightState:'>
<arg declared_type='NSCollectionViewItemHighlightState' index='0' name='highlightState' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageView:'>
<arg declared_type='NSImageView * _Nullable' index='0' name='imageView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextField:'>
<arg declared_type='NSTextField * _Nullable' index='0' name='textField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textField'>
<retval declared_type='NSTextField * _Nullable' type='@'/>
</method>
</class>
<class name='NSCollectionViewLayout'>
<method selector='collectionView'>
<retval declared_type='NSCollectionView * _Nullable' type='@'/>
</method>
<method selector='collectionViewContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:'>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='decorationIndexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='finalLayoutAttributesForDisappearingItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='itemIndexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='elementIndexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='finalizeAnimatedBoundsChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finalizeCollectionViewUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='finalizeLayoutTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexPathsToDeleteForDecorationViewOfKind:'>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='indexPathsToDeleteForSupplementaryViewOfKind:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='indexPathsToInsertForDecorationViewOfKind:'>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='indexPathsToInsertForSupplementaryViewOfKind:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:'>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='decorationIndexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='itemIndexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='elementIndexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='invalidateLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateLayoutWithContext:'>
<arg declared_type='NSCollectionViewLayoutInvalidationContext * _Nonnull' index='0' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='invalidationContextClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='invalidationContextForBoundsChange:'>
<arg declared_type='NSRect' index='0' name='newBounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSCollectionViewLayoutInvalidationContext * _Nonnull' type='@'/>
</method>
<method selector='invalidationContextForPreferredLayoutAttributes:withOriginalAttributes:'>
<arg declared_type='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='preferredAttributes' type='@'/>
<arg declared_type='NSCollectionViewLayoutAttributes * _Nonnull' index='1' name='originalAttributes' type='@'/>
<retval declared_type='NSCollectionViewLayoutInvalidationContext * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutAttributesClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='layoutAttributesForDecorationViewOfKind:atIndexPath:'>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForDropTargetAtPoint:'>
<arg declared_type='NSPoint' index='0' name='pointInCollectionView' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForElementsInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='layoutAttributesForInterItemGapBeforeIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForItemAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForSupplementaryViewOfKind:atIndexPath:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='prepareForAnimatedBoundsChange:'>
<arg declared_type='NSRect' index='0' name='oldBounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForCollectionViewUpdates:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='updateItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForTransitionFromLayout:'>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForTransitionToLayout:'>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='0' name='newLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerClass:forDecorationViewOfKind:'>
<arg declared_type='Class _Nullable' index='0' name='viewClass' type='#'/>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='1' name='elementKind' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forDecorationViewOfKind:'>
<arg declared_type='NSNib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='1' name='elementKind' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldInvalidateLayoutForBoundsChange:'>
<arg declared_type='NSRect' index='0' name='newBounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:'>
<arg declared_type='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='preferredAttributes' type='@'/>
<arg declared_type='NSCollectionViewLayoutAttributes * _Nonnull' index='1' name='originalAttributes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='targetContentOffsetForProposedContentOffset:'>
<arg declared_type='NSPoint' index='0' name='proposedContentOffset' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='targetContentOffsetForProposedContentOffset:withScrollingVelocity:'>
<arg declared_type='NSPoint' index='0' name='proposedContentOffset' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='velocity' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='NSCollectionViewLayoutAttributes'>
<method selector='alpha'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='layoutAttributesForDecorationViewOfKind:withIndexPath:'>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='decorationViewKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutAttributesForInterItemGapBeforeIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutAttributesForItemWithIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='layoutAttributesForSupplementaryViewOfKind:withIndexPath:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='representedElementCategory'>
<retval declared_type='NSCollectionElementCategory' type='i' type64='q'/>
</method>
<method selector='representedElementKind'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndexPath:'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZIndex:'>
<arg declared_type='NSInteger' index='0' name='zIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='zIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSCollectionViewLayoutInvalidationContext'>
<method selector='contentOffsetAdjustment'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='contentSizeAdjustment'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='invalidateDataSourceCounts'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='invalidateDecorationElementsOfKind:atIndexPaths:'>
<arg declared_type='NSCollectionViewDecorationElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateEverything'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='invalidateItemsAtIndexPaths:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateSupplementaryElementsOfKind:atIndexPaths:'>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='0' name='elementKind' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidatedDecorationIndexPaths'>
<retval declared_type='NSDictionary *&gt; * _Nullable' type='@'/>
</method>
<method selector='invalidatedItemIndexPaths'>
<retval declared_type='NSSet * _Nullable' type='@'/>
</method>
<method selector='invalidatedSupplementaryIndexPaths'>
<retval declared_type='NSDictionary *&gt; * _Nullable' type='@'/>
</method>
<method selector='setContentOffsetAdjustment:'>
<arg declared_type='NSPoint' index='0' name='contentOffsetAdjustment' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSizeAdjustment:'>
<arg declared_type='NSSize' index='0' name='contentSizeAdjustment' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCollectionViewTransitionLayout'>
<method selector='currentLayout'>
<retval declared_type='NSCollectionViewLayout * _Nonnull' type='@'/>
</method>
<method selector='initWithCurrentLayout:nextLayout:'>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='0' name='currentLayout' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='nextLayout'>
<retval declared_type='NSCollectionViewLayout * _Nonnull' type='@'/>
</method>
<method selector='setTransitionProgress:'>
<arg declared_type='CGFloat' index='0' name='transitionProgress' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transitionProgress'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='updateValue:forAnimatedKey:'>
<arg declared_type='CGFloat' index='0' name='value' type='f' type64='d'/>
<arg declared_type='NSCollectionViewTransitionLayoutAnimatedKey _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueForAnimatedKey:'>
<arg declared_type='NSCollectionViewTransitionLayoutAnimatedKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSCollectionViewUpdateItem'>
<method selector='indexPathAfterUpdate'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='indexPathBeforeUpdate'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='updateAction'>
<retval declared_type='NSCollectionUpdateAction' type='i' type64='q'/>
</method>
</class>
<class name='NSColor'>
<method selector='CGColor'>
<retval declared_type='CGColorRef _Nonnull' type='^{CGColor=}'/>
</method>
<method selector='alphaComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='alternateSelectedControlColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='alternateSelectedControlTextColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='blackColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='blackComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='blendedColorWithFraction:ofColor:'>
<arg declared_type='CGFloat' index='0' name='fraction' type='f' type64='d'/>
<arg declared_type='NSColor * _Nonnull' index='1' name='color' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='blueColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='blueComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='brightnessComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='brownColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='catalogNameComponent'>
<retval declared_type='NSColorListName _Nonnull' type='@'/>
</method>
<method class_method='true' selector='clearColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorForControlTint:'>
<arg declared_type='NSControlTint' index='0' name='controlTint' type='I' type64='Q'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorFromPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteBoard' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='colorNameComponent'>
<retval declared_type='NSColorName _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorNamed:'>
<arg declared_type='NSColorName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='colorNamed:bundle:'>
<arg declared_type='NSColorName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='colorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method selector='colorSpaceName'>
<retval declared_type='NSColorSpaceName _Nonnull' type='@'/>
</method>
<method selector='colorUsingColorSpace:'>
<arg declared_type='NSColorSpace * _Nonnull' index='0' name='space' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='colorUsingColorSpaceName:'>
<arg declared_type='NSColorSpaceName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='colorUsingColorSpaceName:device:'>
<arg declared_type='NSColorSpaceName _Nullable' index='0' name='name' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='deviceDescription' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='colorUsingType:'>
<arg declared_type='NSColorType' index='0' name='type' type='i' type64='q'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg declared_type='CGColorRef _Nonnull' index='0' name='cgColor' type='^{CGColor=}'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='colorWithCIColor:'>
<arg declared_type='CIColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithCalibratedHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='brightness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithCalibratedRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithCalibratedWhite:alpha:'>
<arg declared_type='CGFloat' index='0' name='white' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithCatalogName:colorName:'>
<arg declared_type='NSColorListName _Nonnull' index='0' name='listName' type='@'/>
<arg declared_type='NSColorName _Nonnull' index='1' name='colorName' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='colorWithColorSpace:components:count:'>
<arg declared_type='NSColorSpace * _Nonnull' index='0' name='space' type='@'/>
<arg const='true' declared_type='CGFloat * _Nonnull' index='1' name='components' type='^f' type64='^d'/>
<arg declared_type='NSInteger' index='2' name='numberOfComponents' type='i' type64='q'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithColorSpace:hue:saturation:brightness:alpha:'>
<arg declared_type='NSColorSpace * _Nonnull' index='0' name='space' type='@'/>
<arg declared_type='CGFloat' index='1' name='hue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='saturation' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='brightness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='4' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithDeviceCyan:magenta:yellow:black:alpha:'>
<arg declared_type='CGFloat' index='0' name='cyan' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='magenta' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='yellow' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='black' type='f' type64='d'/>
<arg declared_type='CGFloat' index='4' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithDeviceHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='brightness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithDeviceRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithDeviceWhite:alpha:'>
<arg declared_type='CGFloat' index='0' name='white' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithDisplayP3Red:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithGenericGamma22White:alpha:'>
<arg declared_type='CGFloat' index='0' name='white' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat' index='0' name='hue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='saturation' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='brightness' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithPatternImage:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithSRGBRed:green:blue:alpha:'>
<arg declared_type='CGFloat' index='0' name='red' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='green' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='blue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorWithWhite:alpha:'>
<arg declared_type='CGFloat' index='0' name='white' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='alpha' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='controlAlternatingRowBackgroundColors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='controlBackgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='controlColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='controlDarkShadowColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='controlHighlightColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='controlLightHighlightColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='controlShadowColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='controlTextColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='currentControlTint'>
<retval declared_type='NSControlTint' type='I' type64='Q'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='cyanComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='darkGrayColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='disabledControlTextColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='drawSwatchInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getComponents:'>
<arg declared_type='CGFloat * _Nonnull' index='0' name='components' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getCyan:magenta:yellow:black:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='cyan' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='magenta' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='yellow' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='black' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='4' name='alpha' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getHue:saturation:brightness:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='hue' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='saturation' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='brightness' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='alpha' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getRed:green:blue:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='red' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='green' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='blue' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='alpha' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getWhite:alpha:'>
<arg declared_type='CGFloat * _Nullable' index='0' name='white' type='^f' type64='^d'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='alpha' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='grayColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='greenColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='greenComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='gridColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='headerColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='headerTextColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='highlightColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='highlightWithLevel:'>
<arg declared_type='CGFloat' index='0' name='val' type='f' type64='d'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='hueComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='ignoresAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='keyboardFocusIndicatorColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='knobColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='labelColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='lightGrayColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='localizedCatalogNameComponent'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='localizedColorNameComponent'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='magentaComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='numberOfComponents'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='orangeColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='patternImage'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='purpleColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='quaternaryLabelColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='redColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='redComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='saturationComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='scrollBarColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='scrubberTexturedBackgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='secondaryLabelColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='secondarySelectedControlColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='selectedControlColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='selectedControlTextColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='selectedKnobColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='selectedMenuItemColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='selectedMenuItemTextColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='selectedTextBackgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='selectedTextColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setIgnoresAlpha:'>
<arg declared_type='BOOL' index='0' name='ignoresAlpha' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStroke'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shadowColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='shadowWithLevel:'>
<arg declared_type='CGFloat' index='0' name='val' type='f' type64='d'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='systemBlueColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemBrownColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemGrayColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemGreenColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemOrangeColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemPinkColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemPurpleColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemRedColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemYellowColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='tertiaryLabelColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textBackgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSColorType' type='i' type64='q'/>
</method>
<method class_method='true' selector='underPageBackgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='whiteComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='windowBackgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='windowFrameColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='windowFrameTextColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='writeToPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteBoard' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='yellowComponent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSColorList'>
<method selector='allKeys'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='availableColorLists'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorListNamed:'>
<arg declared_type='NSColorListName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSColorList * _Nullable' type='@'/>
</method>
<method selector='colorWithKey:'>
<arg declared_type='NSColorName _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='initWithName:'>
<arg declared_type='NSColorListName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithName:fromFile:'>
<arg declared_type='NSColorListName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='path' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='insertColor:key:atIndex:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<arg declared_type='NSColorName _Nonnull' index='1' name='key' type='@'/>
<arg declared_type='NSUInteger' index='2' name='loc' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSColorListName _Nullable' type='@'/>
</method>
<method selector='removeColorWithKey:'>
<arg declared_type='NSColorName _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:forKey:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<arg declared_type='NSColorName _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeToFile:'>
<arg declared_type='NSString * _Nullable' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:error:'>
<arg declared_type='NSURL * _Nullable' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='errPtr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSColorPanel'>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='alpha'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='attachColorList:'>
<arg declared_type='NSColorList * _Nonnull' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='detachColorList:'>
<arg declared_type='NSColorList * _Nonnull' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dragColor:withEvent:fromView:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSView * _Nonnull' index='2' name='sourceView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isContinuous'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mode'>
<retval declared_type='NSColorPanelMode' type='i' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type='BOOL' index='0' name='continuous' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='NSColorPanelMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setPickerMask:'>
<arg declared_type='NSColorPanelOptions' index='0' name='mask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setPickerMode:'>
<arg declared_type='NSColorPanelMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsAlpha:'>
<arg declared_type='BOOL' index='0' name='showsAlpha' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedColorPanel'>
<retval declared_type='NSColorPanel * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sharedColorPanelExists'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSColorPicker'>
<method selector='attachColorList:'>
<arg declared_type='NSColorList * _Nonnull' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='buttonToolTip'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='colorPanel'>
<retval declared_type='NSColorPanel * _Nonnull' type='@'/>
</method>
<method selector='detachColorList:'>
<arg declared_type='NSColorList * _Nonnull' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPickerMask:colorPanel:'>
<arg declared_type='NSUInteger' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='NSColorPanel * _Nonnull' index='1' name='owningColorPanel' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='insertNewButtonImage:in:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='newButtonImage' type='@'/>
<arg declared_type='NSButtonCell * _Nonnull' index='1' name='buttonCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='minContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='provideNewButtonImage'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='setMode:'>
<arg declared_type='NSColorPanelMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewSizeChanged:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSColorPickerTouchBarItem'>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='allowedColorSpaces'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='color'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='colorList'>
<retval declared_type='NSColorList * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorPickerWithIdentifier:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='colorPickerWithIdentifier:buttonImage:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSImage * _Nonnull' index='1' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowedColorSpaces:'>
<arg declared_type='NSArray * _Nullable' index='0' name='allowedColorSpaces' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorList:'>
<arg declared_type='NSColorList * _Nullable' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='customizationLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsAlpha:'>
<arg declared_type='BOOL' index='0' name='showsAlpha' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='strokeColorPickerWithIdentifier:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='textColorPickerWithIdentifier:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSColorSpace'>
<method selector='CGColorSpace'>
<retval declared_type='CGColorSpaceRef _Nullable' type='^{CGColorSpace=}'/>
</method>
<method selector='ICCProfileData'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method class_method='true' selector='adobeRGB1998ColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='availableColorSpacesWithModel:'>
<arg declared_type='NSColorSpaceModel' index='0' name='model' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='colorSpaceModel'>
<retval declared_type='NSColorSpaceModel' type='i' type64='q'/>
</method>
<method selector='colorSyncProfile'>
<retval declared_type='void * _Nullable' type='^v'/>
</method>
<method class_method='true' selector='deviceCMYKColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='deviceGrayColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='deviceRGBColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='displayP3ColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='extendedGenericGamma22GrayColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='extendedSRGBColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='genericCMYKColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='genericGamma22GrayColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='genericGrayColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='genericRGBColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method selector='initWithCGColorSpace:'>
<arg declared_type='CGColorSpaceRef _Nonnull' index='0' name='cgColorSpace' type='^{CGColorSpace=}'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithColorSyncProfile:'>
<arg declared_type='void * _Nonnull' index='0' name='prof' type='^v'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithICCProfileData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='iccData' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='localizedName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='numberOfColorComponents'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='sRGBColorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
</class>
<class name='NSColorWell'>
<method selector='activate:'>
<arg declared_type='BOOL' index='0' name='exclusive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='color'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='deactivate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWellInside:'>
<arg declared_type='NSRect' index='0' name='insideRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isBordered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBordered:'>
<arg declared_type='BOOL' index='0' name='bordered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeColorFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSComboBox'>
<method selector='addItemWithObjectValue:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addItemsWithObjectValues:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='completes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deselectItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasVerticalScroller'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indexOfItemWithObjectValue:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='insertItemWithObjectValue:atIndex:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='isButtonBordered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='itemObjectValueAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='noteNumberOfItemsChanged'>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfVisibleItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='objectValueOfSelectedItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='objectValues'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllItems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemWithObjectValue:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollItemAtIndexToTop:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollItemAtIndexToVisible:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemWithObjectValue:'>
<arg declared_type='id _Nullable' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonBordered:'>
<arg declared_type='BOOL' index='0' name='buttonBordered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletes:'>
<arg declared_type='BOOL' index='0' name='completes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg declared_type='BOOL' index='0' name='hasVerticalScroller' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type='NSSize' index='0' name='intercellSpacing' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemHeight:'>
<arg declared_type='CGFloat' index='0' name='itemHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfVisibleItems:'>
<arg declared_type='NSInteger' index='0' name='numberOfVisibleItems' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesDataSource:'>
<arg declared_type='BOOL' index='0' name='usesDataSource' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesDataSource'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSComboBoxCell'>
<method selector='addItemWithObjectValue:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addItemsWithObjectValues:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='completedString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='completes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deselectItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasVerticalScroller'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indexOfItemWithObjectValue:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='insertItemWithObjectValue:atIndex:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='isButtonBordered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='itemObjectValueAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='noteNumberOfItemsChanged'>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfVisibleItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='objectValueOfSelectedItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='objectValues'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllItems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemWithObjectValue:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollItemAtIndexToTop:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollItemAtIndexToVisible:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemWithObjectValue:'>
<arg declared_type='id _Nullable' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonBordered:'>
<arg declared_type='BOOL' index='0' name='buttonBordered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletes:'>
<arg declared_type='BOOL' index='0' name='completes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg declared_type='BOOL' index='0' name='hasVerticalScroller' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type='NSSize' index='0' name='intercellSpacing' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemHeight:'>
<arg declared_type='CGFloat' index='0' name='itemHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfVisibleItems:'>
<arg declared_type='NSInteger' index='0' name='numberOfVisibleItems' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesDataSource:'>
<arg declared_type='BOOL' index='0' name='usesDataSource' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesDataSource'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSControl'>
<method selector='abortEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='allowsExpansionToolTips'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedStringValue'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method selector='calcSize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cell'>
<retval declared_type='__kindof NSCell * _Nullable' type='@'/>
</method>
<method class_method='true' selector='cellClass'>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method selector='controlSize'>
<retval declared_type='NSControlSize' type='I' type64='Q'/>
</method>
<method selector='currentEditor'>
<retval declared_type='NSText * _Nullable' type='@'/>
</method>
<method selector='doubleValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='drawCell:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawCellInside:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithExpansionFrame:inView:'>
<arg declared_type='NSRect' index='0' name='contentFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editWithFrame:editor:delegate:event:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSText * _Nonnull' index='1' name='textObj' type='@'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='expansionFrameWithFrame:'>
<arg declared_type='NSRect' index='0' name='contentFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='floatValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='font'>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='formatter'>
<retval declared_type='__kindof NSFormatter * _Nullable' type='@'/>
</method>
<method selector='ignoresMultiClick'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='intValue'>
<retval declared_type='int' type='i'/>
</method>
<method selector='integerValue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='invalidateIntrinsicContentSizeForCell:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isContinuous'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='I' type64='Q'/>
</method>
<method selector='mouseDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='performClick:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='refusesFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectCell:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectWithFrame:editor:delegate:start:length:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSText * _Nonnull' index='1' name='textObj' type='@'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='NSInteger' index='3' name='selStart' type='i' type64='q'/>
<arg declared_type='NSInteger' index='4' name='selLength' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedCell'>
<retval declared_type='__kindof NSCell * _Nullable' type='@'/>
</method>
<method selector='selectedTag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='sendAction:to:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='target' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendActionOn:'>
<arg declared_type='NSInteger' declared_type64='NSEventMask' index='0' name='mask' type='i' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsExpansionToolTips:'>
<arg declared_type='BOOL' index='0' name='allowsExpansionToolTips' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedStringValue:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedStringValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='baseWritingDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCell:'>
<arg declared_type='__kindof NSCell * _Nullable' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCellClass:'>
<arg declared_type='Class _Nullable' index='0' name='cellClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type='BOOL' index='0' name='continuous' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type='NSControlSize' index='0' name='controlSize' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleValue:'>
<arg declared_type='double' index='0' name='doubleValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloatValue:'>
<arg declared_type='float' index='0' name='floatValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloatingPointFormat:left:right:'>
<arg declared_type='BOOL' index='0' name='autoRange' type='B'/>
<arg declared_type='NSUInteger' index='1' name='leftDigits' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='rightDigits' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormatter:'>
<arg declared_type='__kindof NSFormatter * _Nullable' index='0' name='formatter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoresMultiClick:'>
<arg declared_type='BOOL' index='0' name='ignoresMultiClick' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntValue:'>
<arg declared_type='int' index='0' name='intValue' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntegerValue:'>
<arg declared_type='NSInteger' index='0' name='integerValue' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectValue:'>
<arg declared_type='id _Nullable' index='0' name='objectValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefusesFirstResponder:'>
<arg declared_type='BOOL' index='0' name='refusesFirstResponder' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringValue:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesSingleLineMode:'>
<arg declared_type='BOOL' index='0' name='usesSingleLineMode' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeThatFits:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringValue'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='takeDoubleValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeFloatValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeIntValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeIntegerValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeObjectValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeStringValueFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='updateCell:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateCellInside:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesSingleLineMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateEditing'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSController'>
<method selector='commitEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='didCommitSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectDidBeginEditing:'>
<arg declared_type='id _Nonnull' index='0' name='editor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectDidEndEditing:'>
<arg declared_type='id _Nonnull' index='0' name='editor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCursor'>
<method class_method='true' selector='IBeamCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='IBeamCursorForVerticalLayout'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='arrowCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='closedHandCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='contextualMenuCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='crosshairCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='currentCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='currentSystemCursor'>
<retval declared_type='NSCursor * _Nullable' type='@'/>
</method>
<method class_method='true' selector='disappearingItemCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='dragCopyCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='dragLinkCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='hide'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hotSpot'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='newImage' type='@'/>
<arg declared_type='NSColor * _Nullable' index='1' name='fg' type='@'/>
<arg declared_type='NSColor * _Nullable' index='2' name='bg' type='@'/>
<arg declared_type='NSPoint' index='3' name='hotSpot' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithImage:hotSpot:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='newImage' type='@'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isSetOnMouseEntered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSetOnMouseExited'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mouseEntered:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseExited:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='openHandCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='operationNotAllowedCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pointingHandCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='push'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='resizeDownCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeLeftCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeLeftRightCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeRightCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeUpCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='resizeUpDownCursor'>
<retval declared_type='NSCursor * _Nonnull' type='@'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setHiddenUntilMouseMoves:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnMouseEntered:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnMouseExited:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='unhide'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCustomImageRep'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='drawSelector'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='drawingHandler'>
<retval declared_type='BOOL (^ _Nullable)(NSRect)' function_pointer='true' type='@?'>
<arg declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method selector='initWithDrawSelector:delegate:'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<arg declared_type='id _Nonnull' index='1' name='delegate' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSize:flipped:drawingHandler:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='BOOL' index='1' name='drawingHandlerShouldBeCalledWithFlippedContext' type='B'/>
<arg declared_type='BOOL (^ _Nonnull)(NSRect)' function_pointer='true' index='2' name='drawingHandler' type='@?'>
<arg declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSCustomTouchBarItem'>
<method selector='customizationLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='customizationLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='__kindof NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewController:'>
<arg declared_type='__kindof NSViewController * _Nullable' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='__kindof NSView * _Nonnull' type='@'/>
</method>
<method selector='viewController'>
<retval declared_type='__kindof NSViewController * _Nullable' type='@'/>
</method>
</class>
<class name='NSDataAsset'>
<method selector='data'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='initWithName:'>
<arg declared_type='NSDataAssetName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithName:bundle:'>
<arg declared_type='NSDataAssetName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nonnull' index='1' name='bundle' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSDataAssetName _Nonnull' type='@'/>
</method>
<method selector='typeIdentifier'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSDatePicker'>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='calendar'>
<retval declared_type='NSCalendar * _Nullable' type='@'/>
</method>
<method selector='datePickerElements'>
<retval declared_type='NSDatePickerElementFlags' type='I' type64='Q'/>
</method>
<method selector='datePickerMode'>
<retval declared_type='NSDatePickerMode' type='I' type64='Q'/>
</method>
<method selector='datePickerStyle'>
<retval declared_type='NSDatePickerStyle' type='I' type64='Q'/>
</method>
<method selector='dateValue'>
<retval declared_type='NSDate * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isBezeled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isBordered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale * _Nullable' type='@'/>
</method>
<method selector='maxDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='minDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type='BOOL' index='0' name='bezeled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type='BOOL' index='0' name='bordered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCalendar:'>
<arg declared_type='NSCalendar * _Nullable' index='0' name='calendar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDatePickerElements:'>
<arg declared_type='NSDatePickerElementFlags' index='0' name='datePickerElements' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDatePickerMode:'>
<arg declared_type='NSDatePickerMode' index='0' name='datePickerMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDatePickerStyle:'>
<arg declared_type='NSDatePickerStyle' index='0' name='datePickerStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateValue:'>
<arg declared_type='NSDate * _Nonnull' index='0' name='dateValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type='NSLocale * _Nullable' index='0' name='locale' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='maxDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='minDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='timeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone * _Nullable' index='0' name='timeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='timeInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone * _Nullable' type='@'/>
</method>
</class>
<class name='NSDatePickerCell'>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='calendar'>
<retval declared_type='NSCalendar * _Nullable' type='@'/>
</method>
<method selector='datePickerElements'>
<retval declared_type='NSDatePickerElementFlags' type='I' type64='Q'/>
</method>
<method selector='datePickerMode'>
<retval declared_type='NSDatePickerMode' type='I' type64='Q'/>
</method>
<method selector='datePickerStyle'>
<retval declared_type='NSDatePickerStyle' type='I' type64='Q'/>
</method>
<method selector='dateValue'>
<retval declared_type='NSDate * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initTextCell:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale * _Nullable' type='@'/>
</method>
<method selector='maxDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='minDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCalendar:'>
<arg declared_type='NSCalendar * _Nullable' index='0' name='calendar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDatePickerElements:'>
<arg declared_type='NSDatePickerElementFlags' index='0' name='datePickerElements' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDatePickerMode:'>
<arg declared_type='NSDatePickerMode' index='0' name='datePickerMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDatePickerStyle:'>
<arg declared_type='NSDatePickerStyle' index='0' name='datePickerStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateValue:'>
<arg declared_type='NSDate * _Nonnull' index='0' name='dateValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type='NSLocale * _Nullable' index='0' name='locale' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='maxDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='minDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='timeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone * _Nullable' index='0' name='timeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='timeInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone * _Nullable' type='@'/>
</method>
</class>
<class name='NSDictionaryController'>
<method selector='excludedKeys'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='includedKeys'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initialKey'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='initialValue'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='localizedKeyDictionary'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='localizedKeyTable'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='newObject'>
<retval declared_type='NSDictionaryControllerKeyValuePair * _Nonnull' type='@'/>
</method>
<method selector='setExcludedKeys:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='excludedKeys' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludedKeys:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='includedKeys' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialKey:'>
<arg declared_type='NSString * _Nonnull' index='0' name='initialKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialValue:'>
<arg declared_type='id _Nonnull' index='0' name='initialValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizedKeyDictionary:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='localizedKeyDictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizedKeyTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='localizedKeyTable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDictionaryControllerKeyValuePair'>
<method selector='isExplicitlyIncluded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='localizedKey'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocalizedKey:'>
<arg declared_type='NSString * _Nullable' index='0' name='localizedKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='id _Nullable' index='0' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='value'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='NSDockTile'>
<method selector='badgeLabel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='contentView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='display'>
<retval declared_type='void' type='v'/>
</method>
<method selector='owner'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setBadgeLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='badgeLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type='NSView * _Nullable' index='0' name='contentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsApplicationBadge:'>
<arg declared_type='BOOL' index='0' name='showsApplicationBadge' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsApplicationBadge'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='size'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSDocument'>
<method selector='PDFPrintOperation'>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method selector='addWindowController:'>
<arg declared_type='NSWindowController * _Nonnull' index='0' name='windowController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsDocumentSharing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='didAutosaveSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='autosaveWithImplicitCancellability:completionHandler:'>
<arg declared_type='BOOL' index='0' name='autosavingIsImplicitlyCancellable' type='B'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='autosavedContentsFileURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method class_method='true' selector='autosavesDrafts'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='autosavesInPlace'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autosavingFileType'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='autosavingIsImplicitlyCancellable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backupFileURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='browseDocumentVersions:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canAsynchronouslyWriteToURL:ofType:forSaveOperation:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperation' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'>
<arg declared_type='id _Nonnull' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='shouldCloseSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='canConcurrentlyReadDocumentsOfType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='changeCountTokenForSaveOperation:'>
<arg declared_type='NSSaveOperationType' index='0' name='saveOperation' type='I' type64='Q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='checkAutosavingSafetyAndReturnError:'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='continueActivityUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='continueAsynchronousWorkOnMainThreadUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataOfType:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='dataRepresentationOfType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='defaultDraftName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='displayName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='duplicateAndReturnError:'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='outError' type='^@'/>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='duplicateDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='duplicateDocumentWithDelegate:didDuplicateSelector:contextInfo:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='didDuplicateSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:backgroundQueue:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<arg declared_type='NSOperationQueue * _Nonnull' index='1' name='queue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fileAttributesToWriteToFile:ofType:saveOperation:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullDocumentPath' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='documentTypeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperationType' type='I' type64='Q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='NSURL * _Nullable' index='3' name='absoluteOriginalContentsURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='outError' type='^@'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='fileModificationDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='fileName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fileNameExtensionForType:saveOperation:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='1' name='saveOperation' type='I' type64='Q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fileNameExtensionWasHiddenInLastRunSavePanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileType'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fileTypeFromLastRunSavePanel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fileURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='fileWrapperOfType:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='fileWrapperRepresentationOfType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='handleCloseScriptCommand:'>
<arg declared_type='NSCloseCommand * _Nonnull' index='0' name='command' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='handlePrintScriptCommand:'>
<arg declared_type='NSScriptCommand * _Nonnull' index='0' name='command' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='handleSaveScriptCommand:'>
<arg declared_type='NSScriptCommand * _Nonnull' index='0' name='command' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='hasUnautosavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasUndoManager'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initForURL:withContentsOfURL:ofType:error:'>
<arg declared_type='NSURL * _Nullable' index='0' name='urlOrNil' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='contentsURL' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithContentsOfFile:ofType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='absolutePath' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithContentsOfURL:ofType:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithContentsOfURL:ofType:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithType:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='invalidateRestorableState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isBrowsingVersions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDocumentEdited'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDraft'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEntireFileLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInViewingMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLocked'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isNativeType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keepBackupFile'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastComponentOfFileName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='loadDataRepresentation:ofType:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadFileWrapperRepresentation:ofType:'>
<arg declared_type='NSFileWrapper * _Nonnull' index='0' name='wrapper' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lockDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockDocumentWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeWindowControllers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveDocumentToUbiquityContainer:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveDocumentWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToURL:completionHandler:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectSpecifier'>
<retval declared_type='NSScriptObjectSpecifier * _Nonnull' type='@'/>
</method>
<method selector='performActivityWithSynchronousWaiting:usingBlock:'>
<arg declared_type='BOOL' index='0' name='waitSynchronously' type='B'/>
<arg declared_type='void (^ _Nonnull)(void (^ _Nonnull)(void))' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='performAsynchronousFileAccessUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(void (^ _Nonnull)(void))' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSynchronousFileAccessUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='preparePageLayout:'>
<arg declared_type='NSPageLayout * _Nonnull' index='0' name='pageLayout' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareSavePanel:'>
<arg declared_type='NSSavePanel * _Nonnull' index='0' name='savePanel' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareSharingServicePicker:'>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<arg declared_type='NSWindow * _Nonnull' index='1' name='window' type='@'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didPresentSelector' type=':'/>
<arg declared_type='void * _Nullable' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='preservesVersions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='printDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='printSettings' type='@'/>
<arg declared_type='BOOL' index='1' name='showPrintPanel' type='B'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didPrintSelector' type=':'/>
<arg declared_type='void * _Nullable' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printInfo'>
<retval declared_type='NSPrintInfo * _Nonnull' type='@'/>
</method>
<method selector='printOperationWithSettings:error:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='printSettings' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='NSPrintOperation * _Nullable' type='@'/>
</method>
<method selector='printShowingPrintPanel:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readFromData:ofType:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromFile:ofType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromFileWrapper:ofType:error:'>
<arg declared_type='NSFileWrapper * _Nonnull' index='0' name='fileWrapper' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromURL:ofType:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromURL:ofType:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='readableTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeWindowController:'>
<arg declared_type='NSWindowController * _Nonnull' index='0' name='windowController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renameDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='restorableStateKeyPaths'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='restoreDocumentWindowWithIdentifier:state:completionHandler:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='state' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSWindow * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSWindow * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='activity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revertDocumentToSaved:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revertToContentsOfURL:ofType:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='revertToSavedFromFile:ofType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='revertToSavedFromURL:ofType:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='runModalPageLayoutWithPrintInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='printInfo' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='printInfo' type='@'/>
<arg declared_type='id _Nullable' index='1' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='didRunSelector' type=':'/>
<arg declared_type='void * _Nullable' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runModalPrintOperation:delegate:didRunSelector:contextInfo:'>
<arg declared_type='NSPrintOperation * _Nonnull' index='0' name='printOperation' type='@'/>
<arg declared_type='id _Nullable' index='1' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='didRunSelector' type=':'/>
<arg declared_type='void * _Nullable' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'>
<arg declared_type='NSSaveOperationType' index='0' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='1' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='didSaveSelector' type=':'/>
<arg declared_type='void * _Nullable' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runPageLayout:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveDocumentAs:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveDocumentTo:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveDocumentToPDF:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveDocumentWithDelegate:didSaveSelector:contextInfo:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='didSaveSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<arg declared_type='NSSaveOperationType' index='1' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didSaveSelector' type=':'/>
<arg declared_type='void * _Nullable' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:completionHandler:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='3' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='4' name='didSaveSelector' type=':'/>
<arg declared_type='void * _Nullable' index='5' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scheduleAutosaving'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosavedContentsFileURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='autosavedContentsFileURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayName:'>
<arg declared_type='NSString * _Nullable' index='0' name='displayNameOrNil' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraft:'>
<arg declared_type='BOOL' index='0' name='draft' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileModificationDate:'>
<arg declared_type='NSDate * _Nullable' index='0' name='fileModificationDate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileName:'>
<arg declared_type='NSString * _Nullable' index='0' name='fileName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileType:'>
<arg declared_type='NSString * _Nullable' index='0' name='fileType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='fileURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasUndoManager:'>
<arg declared_type='BOOL' index='0' name='hasUndoManager' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastComponentOfFileName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='lastComponentOfFileName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='printInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUndoManager:'>
<arg declared_type='NSUndoManager * _Nullable' index='0' name='undoManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserActivity:'>
<arg declared_type='NSUserActivity * _Nullable' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindow:'>
<arg declared_type='NSWindow * _Nullable' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shareDocumentWithSharingService:completionHandler:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldChangePrintInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='newPrintInfo' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'>
<arg declared_type='NSWindowController * _Nonnull' index='0' name='windowController' type='@'/>
<arg declared_type='id _Nullable' index='1' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='shouldCloseSelector' type=':'/>
<arg declared_type='void * _Nullable' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldRunSavePanelWithAccessoryView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showWindows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopBrowsingVersionsWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='unblockUserInteraction'>
<retval declared_type='void' type='v'/>
</method>
<method selector='undoManager'>
<retval declared_type='NSUndoManager * _Nullable' type='@'/>
</method>
<method selector='unlockDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockDocumentWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(BOOL)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='unlockWithCompletionHandler:'>
<arg declared_type='void (^ _Nullable)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateChangeCount:'>
<arg declared_type='NSDocumentChangeType' index='0' name='change' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateChangeCountWithToken:forSaveOperation:'>
<arg declared_type='id _Nonnull' index='0' name='changeCountToken' type='@'/>
<arg declared_type='NSSaveOperationType' index='1' name='saveOperation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='activity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userActivity'>
<retval declared_type='NSUserActivity * _Nullable' type='@'/>
</method>
<method class_method='true' selector='usesUbiquitousStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willNotPresentError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPresentError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='NSError * _Nonnull' type='@'/>
</method>
<method selector='windowControllerDidLoadNib:'>
<arg declared_type='NSWindowController * _Nonnull' index='0' name='windowController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowControllerWillLoadNib:'>
<arg declared_type='NSWindowController * _Nonnull' index='0' name='windowController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowControllers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='windowForSheet'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='windowNibName'>
<retval declared_type='NSNibName _Nullable' type='@'/>
</method>
<method class_method='true' selector='writableTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='writableTypesForSaveOperation:'>
<arg declared_type='NSSaveOperationType' index='0' name='saveOperation' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='writeSafelyToURL:ofType:forSaveOperation:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToFile:ofType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToFile:ofType:originalFile:saveOperation:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullDocumentPath' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='documentTypeName' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='fullOriginalDocumentPath' type='@'/>
<arg declared_type='NSSaveOperationType' index='3' name='saveOperationType' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:ofType:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:ofType:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='NSURL * _Nullable' index='3' name='absoluteOriginalContentsURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeWithBackupToFile:ofType:saveOperation:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullDocumentPath' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='documentTypeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperationType' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSDocumentController'>
<method selector='URLsFromRunningOpenPanel'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='addDocument:'>
<arg declared_type='NSDocument * _Nonnull' index='0' name='document' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsAutomaticShareMenu'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autosavingDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='beginOpenPanel:forTypes:completionHandler:'>
<arg declared_type='NSOpenPanel * _Nonnull' index='0' name='openPanel' type='@'/>
<arg declared_type='NSArray * _Nullable' index='1' name='inTypes' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSInteger)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSInteger' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginOpenPanelWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSArray * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearRecentDocuments:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='didCloseAllSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentDirectory'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='currentDocument'>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='defaultType'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='displayNameForType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='documentClassForType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method selector='documentClassNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='documentForFileName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='documentForURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='documentForWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='documents'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='duplicateDocumentWithContentsOfURL:copying:displayName:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='BOOL' index='1' name='duplicateByCopying' type='B'/>
<arg declared_type='NSString * _Nullable' index='2' name='displayNameOrNil' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='fileExtensionsFromType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='fileNamesFromRunningOpenPanel'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='hasEditedDocuments'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='makeDocumentForURL:withContentsOfURL:ofType:error:'>
<arg declared_type='NSURL * _Nullable' index='0' name='urlOrNil' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='contentsURL' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='outError' type='^@'/>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='makeDocumentWithContentsOfFile:ofType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='makeDocumentWithContentsOfURL:ofType:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Null_unspecified' index='1' name='type' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='makeDocumentWithContentsOfURL:ofType:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='makeUntitledDocumentOfType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='makeUntitledDocumentOfType:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='maximumRecentDocumentCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='newDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteNewRecentDocument:'>
<arg declared_type='NSDocument * _Nonnull' index='0' name='document' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteNewRecentDocumentURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='openDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='openDocumentWithContentsOfFile:display:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<arg declared_type='BOOL' index='1' name='display' type='B'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='BOOL' index='1' name='display' type='B'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:completionHandler:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='BOOL' index='1' name='displayDocument' type='B'/>
<arg declared_type='void (^ _Nonnull)(NSDocument * _Nullable, BOOL, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSDocument * _Nullable' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='BOOL' index='1' name='displayDocument' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='openUntitledDocumentAndDisplay:error:'>
<arg declared_type='BOOL' index='0' name='displayDocument' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='__kindof NSDocument * _Nullable' type='@'/>
</method>
<method selector='openUntitledDocumentOfType:display:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<arg declared_type='BOOL' index='1' name='display' type='B'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='presentError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<arg declared_type='NSWindow * _Nonnull' index='1' name='window' type='@'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didPresentSelector' type=':'/>
<arg declared_type='void * _Nullable' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='recentDocumentURLs'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeDocument:'>
<arg declared_type='NSDocument * _Nonnull' index='0' name='document' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reopenDocumentForURL:withContentsOfURL:display:completionHandler:'>
<arg declared_type='NSURL * _Nullable' index='0' name='urlOrNil' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='contentsURL' type='@'/>
<arg declared_type='BOOL' index='2' name='displayDocument' type='B'/>
<arg declared_type='void (^ _Nonnull)(NSDocument * _Nullable, BOOL, NSError * _Nullable)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSDocument * _Nullable' type='@'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='reopenDocumentForURL:withContentsOfURL:error:'>
<arg declared_type='NSURL * _Nullable' index='0' name='url' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='contentsURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<arg declared_type='BOOL' index='1' name='cancellable' type='B'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didReviewAllSelector' type=':'/>
<arg declared_type='void * _Nullable' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runModalOpenPanel:forTypes:'>
<arg declared_type='NSOpenPanel * _Nonnull' index='0' name='openPanel' type='@'/>
<arg declared_type='NSArray * _Nullable' index='1' name='types' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='saveAllDocuments:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosavingDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='autosavingDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCreateUI:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedDocumentController'>
<retval declared_type='__kindof NSDocumentController * _Nonnull' type='@'/>
</method>
<method selector='shouldCreateUI'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='standardShareMenuItem'>
<retval declared_type='NSMenuItem * _Nonnull' type='@'/>
</method>
<method selector='typeForContentsOfURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='typeFromFileExtension:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileNameExtensionOrHFSFileType' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willPresentError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='NSError * _Nonnull' type='@'/>
</method>
</class>
<class name='NSDraggingImageComponent'>
<method selector='contents'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='draggingImageComponentWithKey:'>
<arg declared_type='NSDraggingImageComponentKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='NSDraggingImageComponent * _Nonnull' type='@'/>
</method>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithKey:'>
<arg declared_type='NSDraggingImageComponentKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSDraggingImageComponentKey _Nonnull' type='@'/>
</method>
<method selector='setContents:'>
<arg declared_type='id _Nullable' index='0' name='contents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSDraggingImageComponentKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDraggingItem'>
<method selector='draggingFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageComponents'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='imageComponentsProvider'>
<retval declared_type='NSArray * _Nonnull (^ _Nullable)(void)' function_pointer='true' type='@?'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</retval>
</method>
<method selector='initWithPasteboardWriter:'>
<arg declared_type='id _Nonnull' index='0' name='pasteboardWriter' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='item'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='setDraggingFrame:'>
<arg declared_type='NSRect' index='0' name='draggingFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingFrame:contents:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id _Nullable' index='1' name='contents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageComponentsProvider:'>
<arg declared_type='NSArray * _Nonnull (^ _Nullable)(void)' function_pointer='true' index='0' name='imageComponentsProvider' type='@?'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDraggingSession'>
<method selector='animatesToStartingPositionsOnCancelOrFail'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='draggingFormation'>
<retval declared_type='NSDraggingFormation' type='i' type64='q'/>
</method>
<method selector='draggingLeaderIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='draggingLocation'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingPasteboard'>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method selector='draggingSequenceNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'>
<arg declared_type='NSDraggingItemEnumerationOptions' index='0' name='enumOpts' type='I' type64='Q'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='classArray' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='searchOptions' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSDraggingItem * _Nonnull, NSInteger, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type='@?'>
<arg declared_type='NSDraggingItem * _Nonnull' type='@'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimatesToStartingPositionsOnCancelOrFail:'>
<arg declared_type='BOOL' index='0' name='animatesToStartingPositionsOnCancelOrFail' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingFormation:'>
<arg declared_type='NSDraggingFormation' index='0' name='draggingFormation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingLeaderIndex:'>
<arg declared_type='NSInteger' index='0' name='draggingLeaderIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSDrawer'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='close:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='contentView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='edge'>
<retval declared_type='NSRectEdge' type='i' type64='Q'/>
</method>
<method selector='initWithContentSize:preferredEdge:'>
<arg declared_type='NSSize' index='0' name='contentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSRectEdge' index='1' name='edge' type='i' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='leadingOffset'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maxContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='minContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='open'>
<retval declared_type='void' type='v'/>
</method>
<method selector='open:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='openOnEdge:'>
<arg declared_type='NSRectEdge' index='0' name='edge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='parentWindow'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='preferredEdge'>
<retval declared_type='NSRectEdge' type='i' type64='Q'/>
</method>
<method selector='setContentSize:'>
<arg declared_type='NSSize' index='0' name='contentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type='NSView * _Nullable' index='0' name='contentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeadingOffset:'>
<arg declared_type='CGFloat' index='0' name='leadingOffset' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxContentSize:'>
<arg declared_type='NSSize' index='0' name='maxContentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinContentSize:'>
<arg declared_type='NSSize' index='0' name='minContentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentWindow:'>
<arg declared_type='NSWindow * _Nullable' index='0' name='parentWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredEdge:'>
<arg declared_type='NSRectEdge' index='0' name='preferredEdge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrailingOffset:'>
<arg declared_type='CGFloat' index='0' name='trailingOffset' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='toggle:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trailingOffset'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSEPSImageRep'>
<method selector='EPSRepresentation'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='boundingBox'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='imageRepWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='epsData' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='epsData' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='prepareGState'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSEvent'>
<method selector='CGEvent'>
<retval declared_type='CGEventRef _Nullable' type='^{__CGEvent=}'/>
</method>
<method selector='absoluteX'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='absoluteY'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='absoluteZ'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='addGlobalMonitorForEventsMatchingMask:handler:'>
<arg declared_type='NSEventMask' index='0' name='mask' type='Q'/>
<arg declared_type='void (^ _Nonnull)(NSEvent * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSEvent * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='addLocalMonitorForEventsMatchingMask:handler:'>
<arg declared_type='NSEventMask' index='0' name='mask' type='Q'/>
<arg declared_type='NSEvent * _Nullable (^ _Nonnull)(NSEvent * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSEvent * _Nonnull' type='@'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</arg>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='allTouches'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='associatedEventsMask'>
<retval declared_type='NSEventMask' type='Q'/>
</method>
<method selector='buttonMask'>
<retval declared_type='NSEventButtonMask' type='I' type64='Q'/>
</method>
<method selector='buttonNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='capabilityMask'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='characters'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='charactersIgnoringModifiers'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='clickCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='coalescedTouchesForTouch:'>
<arg declared_type='NSTouch * _Nonnull' index='0' name='touch' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='context'>
<retval declared_type='NSGraphicsContext * _Nullable' type='@'/>
</method>
<method selector='data1'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='data2'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='deltaX'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='deltaY'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='deltaZ'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='deviceID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='doubleClickInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:'>
<arg declared_type='NSEventType' index='0' name='type' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSEventModifierFlags' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='3' name='time' type='d'/>
<arg declared_type='NSInteger' index='4' name='wNum' type='i' type64='q'/>
<arg declared_type='NSGraphicsContext * _Nullable' index='5' name='unusedPassNil' type='@'/>
<arg declared_type='NSInteger' index='6' name='eNum' type='i' type64='q'/>
<arg declared_type='NSInteger' index='7' name='tNum' type='i' type64='q'/>
<arg declared_type='void * _Nullable' index='8' name='data' type='^v'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method selector='eventNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='eventRef'>
<retval const='true' declared_type='void * _Nullable' type='^v'/>
</method>
<method class_method='true' selector='eventWithCGEvent:'>
<arg declared_type='CGEventRef _Nonnull' index='0' name='cgEvent' type='^{__CGEvent=}'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method class_method='true' selector='eventWithEventRef:'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='eventRef' type='^v'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method selector='hasPreciseScrollingDeltas'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isARepeat'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDirectionInvertedFromDevice'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEnteringProximity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isMouseCoalescingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isSwipeTrackingFromScrollEventsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyCode'>
<retval declared_type='unsigned short' type='S'/>
</method>
<method class_method='true' selector='keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:'>
<arg declared_type='NSEventType' index='0' name='type' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSEventModifierFlags' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='3' name='time' type='d'/>
<arg declared_type='NSInteger' index='4' name='wNum' type='i' type64='q'/>
<arg declared_type='NSGraphicsContext * _Nullable' index='5' name='unusedPassNil' type='@'/>
<arg declared_type='NSString * _Nonnull' index='6' name='keys' type='@'/>
<arg declared_type='NSString * _Nonnull' index='7' name='ukeys' type='@'/>
<arg declared_type='BOOL' index='8' name='flag' type='B'/>
<arg declared_type='unsigned short' index='9' name='code' type='S'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method class_method='true' selector='keyRepeatDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='keyRepeatInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='locationInWindow'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='magnification'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='modifierFlags'>
<retval declared_type='NSEventModifierFlags' type='I' type64='Q'/>
</method>
<method selector='modifierFlags'>
<retval declared_type='NSEventModifierFlags' type='I' type64='Q'/>
</method>
<method selector='momentumPhase'>
<retval declared_type='NSEventPhase' type='I' type64='Q'/>
</method>
<method class_method='true' selector='mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:'>
<arg declared_type='NSEventType' index='0' name='type' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSEventModifierFlags' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='3' name='time' type='d'/>
<arg declared_type='NSInteger' index='4' name='wNum' type='i' type64='q'/>
<arg declared_type='NSGraphicsContext * _Nullable' index='5' name='unusedPassNil' type='@'/>
<arg declared_type='NSInteger' index='6' name='eNum' type='i' type64='q'/>
<arg declared_type='NSInteger' index='7' name='cNum' type='i' type64='q'/>
<arg declared_type='float' index='8' name='pressure' type='f'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method class_method='true' selector='mouseLocation'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:'>
<arg declared_type='NSEventType' index='0' name='type' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSEventModifierFlags' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='3' name='time' type='d'/>
<arg declared_type='NSInteger' index='4' name='wNum' type='i' type64='q'/>
<arg declared_type='NSGraphicsContext * _Nullable' index='5' name='unusedPassNil' type='@'/>
<arg declared_type='short' index='6' name='subtype' type='s'/>
<arg declared_type='NSInteger' index='7' name='d1' type='i' type64='q'/>
<arg declared_type='NSInteger' index='8' name='d2' type='i' type64='q'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method selector='phase'>
<retval declared_type='NSEventPhase' type='I' type64='Q'/>
</method>
<method selector='pointingDeviceID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pointingDeviceSerialNumber'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pointingDeviceType'>
<retval declared_type='NSPointingDeviceType' type='I' type64='Q'/>
</method>
<method class_method='true' selector='pressedMouseButtons'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pressure'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pressureBehavior'>
<retval declared_type='NSPressureBehavior' type='i' type64='q'/>
</method>
<method class_method='true' selector='removeMonitor:'>
<arg declared_type='id _Nonnull' index='0' name='eventMonitor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotation'>
<retval declared_type='float' type='f'/>
</method>
<method selector='scrollingDeltaX'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollingDeltaY'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='setMouseCoalescingEnabled:'>
<arg declared_type='BOOL' index='0' name='mouseCoalescingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stage'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='stageTransition'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='startPeriodicEventsAfterDelay:withPeriod:'>
<arg declared_type='NSTimeInterval' index='0' name='delay' type='d'/>
<arg declared_type='NSTimeInterval' index='1' name='period' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stopPeriodicEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtype'>
<retval declared_type='NSEventSubtype' type='s'/>
</method>
<method selector='systemTabletID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='tabletID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='tangentialPressure'>
<retval declared_type='float' type='f'/>
</method>
<method selector='tilt'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='touchesForView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='touchesMatchingPhase:inView:'>
<arg declared_type='NSTouchPhase' index='0' name='phase' type='I' type64='Q'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='trackSwipeEventWithOptions:dampenAmountThresholdMin:max:usingHandler:'>
<arg declared_type='NSEventSwipeTrackingOptions' index='0' name='options' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='1' name='minDampenThreshold' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='maxDampenThreshold' type='f' type64='d'/>
<arg declared_type='void (^ _Nonnull)(CGFloat, NSEventPhase, BOOL, BOOL * _Nonnull)' function_pointer='true' index='3' name='trackingHandler' type='@?'>
<arg declared_type='CGFloat' type='f' type64='d'/>
<arg declared_type='NSEventPhase' type='I' type64='Q'/>
<arg declared_type='BOOL' type='B'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackingArea'>
<retval declared_type='NSTrackingArea * _Nullable' type='@'/>
</method>
<method selector='trackingNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='type'>
<retval declared_type='NSEventType' type='I' type64='Q'/>
</method>
<method selector='uniqueID'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='userData'>
<retval declared_type='void * _Nullable' type='^v'/>
</method>
<method selector='vendorDefined'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='vendorID'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='vendorPointingDeviceType'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='window'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='windowNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSFilePromiseProvider'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='fileType'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFileType:delegate:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileType' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='delegate' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='id _Nullable' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='NSFilePromiseReceiver'>
<method selector='fileNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='fileTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='readableDraggedTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='receivePromisedFilesAtDestination:options:operationQueue:reader:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='destinationDir' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSOperationQueue * _Nonnull' index='2' name='operationQueue' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSURL * _Nonnull, NSError * _Nullable)' function_pointer='true' index='3' name='reader' type='@?'>
<arg declared_type='NSURL * _Nonnull' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFileWrapper'>
<method selector='icon'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='setIcon:'>
<arg declared_type='NSImage * _Nullable' index='0' name='icon' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFont'>
<method selector='advancementForCGGlyph:'>
<arg declared_type='CGGlyph' index='0' name='glyph' type='S'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='advancementForGlyph:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='afmDictionary'>
<retval declared_type='NSDictionary * _Null_unspecified' type='@'/>
</method>
<method selector='ascender'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='boldSystemFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='boundingRectForCGGlyph:'>
<arg declared_type='CGGlyph' index='0' name='glyph' type='S'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundingRectForFont'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundingRectForGlyph:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='capHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='controlContentFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='coveredCharacterSet'>
<retval declared_type='NSCharacterSet * _Nonnull' type='@'/>
</method>
<method selector='defaultLineHeightForFont'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='descender'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='displayName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='encodingScheme'>
<retval declared_type='NSString * _Null_unspecified' type='@'/>
</method>
<method selector='familyName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fontDescriptor'>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontWithDescriptor:size:'>
<arg declared_type='NSFontDescriptor * _Nonnull' index='0' name='fontDescriptor' type='@'/>
<arg declared_type='CGFloat' index='1' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method class_method='true' selector='fontWithDescriptor:textTransform:'>
<arg declared_type='NSFontDescriptor * _Nonnull' index='0' name='fontDescriptor' type='@'/>
<arg declared_type='NSAffineTransform * _Nullable' index='1' name='textTransform' type='@'/>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method class_method='true' selector='fontWithName:matrix:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg const='true' declared_type='CGFloat * _Nonnull' index='1' name='fontMatrix' type='^f' type64='^d'/>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method class_method='true' selector='fontWithName:size:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGFloat' index='1' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='getAdvancements:forCGGlyphs:count:'>
<arg declared_type='NSSizeArray _Nonnull' index='0' name='advancements' type='^{_NSSize=ff}' type64='^{CGSize=dd}'/>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='1' name='glyphs' type='^S'/>
<arg declared_type='NSUInteger' index='2' name='glyphCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getAdvancements:forGlyphs:count:'>
<arg declared_type='NSSizeArray _Nonnull' index='0' name='advancements' type='^{_NSSize=ff}' type64='^{CGSize=dd}'/>
<arg const='true' declared_type='NSGlyph * _Nonnull' index='1' name='glyphs' type='^I'/>
<arg declared_type='NSUInteger' index='2' name='glyphCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getAdvancements:forPackedGlyphs:length:'>
<arg declared_type='NSSizeArray _Nonnull' index='0' name='advancements' type='^{_NSSize=ff}' type64='^{CGSize=dd}'/>
<arg const='true' declared_type='void * _Nonnull' index='1' name='packedGlyphs' type='^v'/>
<arg declared_type='NSUInteger' index='2' name='length' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBoundingRects:forCGGlyphs:count:'>
<arg declared_type='NSRectArray _Nonnull' index='0' name='bounds' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='1' name='glyphs' type='^S'/>
<arg declared_type='NSUInteger' index='2' name='glyphCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBoundingRects:forGlyphs:count:'>
<arg declared_type='NSRectArray _Nonnull' index='0' name='bounds' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg const='true' declared_type='NSGlyph * _Nonnull' index='1' name='glyphs' type='^I'/>
<arg declared_type='NSUInteger' index='2' name='glyphCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='glyphIsEncoded:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='glyphPacking'>
<retval declared_type='NSMultibyteGlyphPacking' type='I'/>
</method>
<method selector='glyphWithName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSGlyph' type='I'/>
</method>
<method selector='isBaseFont'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFixedPitch'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVertical'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='italicAngle'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='labelFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='labelFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='leading'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='matrix'>
<retval const='true' declared_type='CGFloat * _Nonnull' type='^f' type64='^d'/>
</method>
<method selector='maximumAdvancement'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='menuBarFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='menuFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='messageFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='monospacedDigitSystemFontOfSize:weight:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<arg declared_type='NSFontWeight' index='1' name='weight' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='mostCompatibleStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='numberOfGlyphs'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='paletteFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='pointSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='positionOfGlyph:forCharacter:struckOverRect:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<arg declared_type='unichar' index='1' name='character' type='S'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
</method>
<method selector='positionOfGlyph:precededByGlyph:isNominal:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<arg declared_type='NSGlyph' index='1' name='prevGlyph' type='I'/>
<arg declared_type='BOOL * _Null_unspecified' index='2' name='nominal' type='^B'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
</method>
<method selector='positionOfGlyph:struckOverGlyph:metricsExist:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<arg declared_type='NSGlyph' index='1' name='prevGlyph' type='I'/>
<arg declared_type='BOOL * _Null_unspecified' index='2' name='exist' type='^B'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
</method>
<method selector='positionOfGlyph:struckOverRect:metricsExist:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}'/>
<arg declared_type='BOOL * _Null_unspecified' index='2' name='exist' type='^B'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
</method>
<method selector='positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:'>
<arg declared_type='NSGlyph' index='0' name='thisGlyph' type='I'/>
<arg declared_type='NSGlyphRelation' index='1' name='rel' type='I'/>
<arg declared_type='NSGlyph' index='2' name='baseGlyph' type='I'/>
<arg declared_type='NSSizePointer _Nonnull' index='3' name='adv' type='^{_NSSize=ff}'/>
<arg declared_type='BOOL * _Null_unspecified' index='4' name='exist' type='^B'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}'/>
</method>
<method selector='positionsForCompositeSequence:numberOfGlyphs:pointArray:'>
<arg declared_type='NSGlyph * _Null_unspecified' index='0' name='someGlyphs' type='^I'/>
<arg declared_type='NSInteger' index='1' name='numGlyphs' type='i'/>
<arg declared_type='NSPointArray _Nonnull' index='2' name='points' type='^{_NSPoint=ff}'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method class_method='true' selector='preferredFontNames'>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
<method selector='printerFont'>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='renderingMode'>
<retval declared_type='NSFontRenderingMode' type='I' type64='Q'/>
</method>
<method selector='screenFont'>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='screenFontWithRenderingMode:'>
<arg declared_type='NSFontRenderingMode' index='0' name='renderingMode' type='I' type64='Q'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInContext:'>
<arg declared_type='NSGraphicsContext * _Nonnull' index='0' name='graphicsContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setPreferredFontNames:'>
<arg declared_type='NSArray * _Null_unspecified' index='0' name='fontNameArray' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setUserFixedPitchFont:'>
<arg declared_type='NSFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setUserFont:'>
<arg declared_type='NSFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='smallSystemFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='systemFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemFontOfSize:weight:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<arg declared_type='NSFontWeight' index='1' name='weight' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemFontSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='systemFontSizeForControlSize:'>
<arg declared_type='NSControlSize' index='0' name='controlSize' type='I' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='textTransform'>
<retval declared_type='NSAffineTransform * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='titleBarFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='toolTipsFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='underlinePosition'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='underlineThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='useFont:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='fontName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='userFixedPitchFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method class_method='true' selector='userFontOfSize:'>
<arg declared_type='CGFloat' index='0' name='fontSize' type='f' type64='d'/>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='verticalFont'>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='widthOfString:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='string' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='xHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSFontAssetRequest'>
<method selector='downloadFontAssetsWithCompletionHandler:'>
<arg declared_type='BOOL (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='downloadedFontDescriptors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithFontDescriptors:options:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='fontDescriptors' type='@'/>
<arg declared_type='NSFontAssetRequestOptions' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='NSProgress * _Nonnull' type='@'/>
</method>
</class>
<class name='NSFontCollection'>
<method class_method='true' selector='allFontCollectionNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='exclusionDescriptors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithAllAvailableDescriptors'>
<retval declared_type='NSFontCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithDescriptors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='queryDescriptors' type='@'/>
<retval declared_type='NSFontCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithLocale:'>
<arg declared_type='NSLocale * _Nonnull' index='0' name='locale' type='@'/>
<retval declared_type='NSFontCollection * _Nullable' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithName:'>
<arg declared_type='NSFontCollectionName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSFontCollection * _Nullable' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithName:visibility:'>
<arg declared_type='NSFontCollectionName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSFontCollectionVisibility' index='1' name='visibility' type='I' type64='Q'/>
<retval declared_type='NSFontCollection * _Nullable' type='@'/>
</method>
<method class_method='true' selector='hideFontCollectionWithName:visibility:error:'>
<arg declared_type='NSFontCollectionName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSFontCollectionVisibility' index='1' name='visibility' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchingDescriptors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='matchingDescriptorsForFamily:'>
<arg declared_type='NSString * _Nonnull' index='0' name='family' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='matchingDescriptorsForFamily:options:'>
<arg declared_type='NSString * _Nonnull' index='0' name='family' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='matchingDescriptorsWithOptions:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='queryDescriptors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='renameFontCollectionWithName:visibility:toName:error:'>
<arg declared_type='NSFontCollectionName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSFontCollectionVisibility' index='1' name='visibility' type='I' type64='Q'/>
<arg declared_type='NSFontCollectionName _Nonnull' index='2' name='name' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='showFontCollection:withName:visibility:error:'>
<arg declared_type='NSFontCollection * _Nonnull' index='0' name='collection' type='@'/>
<arg declared_type='NSFontCollectionName _Nonnull' index='1' name='name' type='@'/>
<arg declared_type='NSFontCollectionVisibility' index='2' name='visibility' type='I' type64='Q'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSFontDescriptor'>
<method selector='fontAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorByAddingAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithFace:'>
<arg declared_type='NSString * _Nonnull' index='0' name='newFace' type='@'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithFamily:'>
<arg declared_type='NSString * _Nonnull' index='0' name='newFamily' type='@'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithFontAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='attributes' type='@'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithMatrix:'>
<arg declared_type='NSAffineTransform * _Nonnull' index='0' name='matrix' type='@'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:matrix:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='NSAffineTransform * _Nonnull' index='1' name='matrix' type='@'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontDescriptorWithName:size:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fontName' type='@'/>
<arg declared_type='CGFloat' index='1' name='size' type='f' type64='d'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithSize:'>
<arg declared_type='CGFloat' index='0' name='newPointSize' type='f' type64='d'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='fontDescriptorWithSymbolicTraits:'>
<arg declared_type='NSFontDescriptorSymbolicTraits' index='0' name='symbolicTraits' type='I'/>
<retval declared_type='NSFontDescriptor * _Nonnull' type='@'/>
</method>
<method selector='initWithFontAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='attributes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='matchingFontDescriptorWithMandatoryKeys:'>
<arg declared_type='NSSet * _Nullable' index='0' name='mandatoryKeys' type='@'/>
<retval declared_type='NSFontDescriptor * _Nullable' type='@'/>
</method>
<method selector='matchingFontDescriptorsWithMandatoryKeys:'>
<arg declared_type='NSSet * _Nullable' index='0' name='mandatoryKeys' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='matrix'>
<retval declared_type='NSAffineTransform * _Nullable' type='@'/>
</method>
<method selector='objectForKey:'>
<arg declared_type='NSFontDescriptorAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='pointSize'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='postscriptName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='requiresFontAssetRequest'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='symbolicTraits'>
<retval declared_type='NSFontDescriptorSymbolicTraits' type='I'/>
</method>
</class>
<class name='NSFontManager'>
<method selector='action'>
<retval declared_type='SEL _Nonnull' type=':'/>
</method>
<method selector='addCollection:options:'>
<arg declared_type='NSString * _Nonnull' index='0' name='collectionName' type='@'/>
<arg declared_type='NSFontCollectionOptions' index='1' name='collectionOptions' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addFontDescriptors:toCollection:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='descriptors' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='collectionName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addFontTrait:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='availableFontFamilies'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='availableFontNamesMatchingFontDescriptor:'>
<arg declared_type='NSFontDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableFontNamesWithTraits:'>
<arg declared_type='NSFontTraitMask' index='0' name='someTraits' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='availableFonts'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='availableMembersOfFontFamily:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fam' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='collectionNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='convertAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='convertFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='convertFont:toFace:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeface' type='@'/>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='convertFont:toFamily:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='family' type='@'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='convertFont:toHaveTrait:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<arg declared_type='NSFontTraitMask' index='1' name='trait' type='I' type64='Q'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='convertFont:toNotHaveTrait:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<arg declared_type='NSFontTraitMask' index='1' name='trait' type='I' type64='Q'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='convertFont:toSize:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<arg declared_type='CGFloat' index='1' name='size' type='f' type64='d'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='convertFontTraits:'>
<arg declared_type='NSFontTraitMask' index='0' name='traits' type='I' type64='Q'/>
<retval declared_type='NSFontTraitMask' type='I' type64='Q'/>
</method>
<method selector='convertWeight:ofFont:'>
<arg declared_type='BOOL' index='0' name='upFlag' type='B'/>
<arg declared_type='NSFont * _Nonnull' index='1' name='fontObj' type='@'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='currentFontAction'>
<retval declared_type='NSFontAction' type='I' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='fontDescriptorsInCollection:'>
<arg declared_type='NSString * _Nonnull' index='0' name='collectionNames' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='fontMenu:'>
<arg declared_type='BOOL' index='0' name='create' type='B'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='fontNamed:hasTraits:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fName' type='@'/>
<arg declared_type='NSFontTraitMask' index='1' name='someTraits' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fontPanel:'>
<arg declared_type='BOOL' index='0' name='create' type='B'/>
<retval declared_type='NSFontPanel * _Nullable' type='@'/>
</method>
<method selector='fontWithFamily:traits:weight:size:'>
<arg declared_type='NSString * _Nonnull' index='0' name='family' type='@'/>
<arg declared_type='NSFontTraitMask' index='1' name='traits' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='2' name='weight' type='i' type64='q'/>
<arg declared_type='CGFloat' index='3' name='size' type='f' type64='d'/>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMultiple'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedNameForFamily:face:'>
<arg declared_type='NSString * _Nonnull' index='0' name='family' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='faceKey' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='modifyFont:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='modifyFontViaPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontFontPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontStylesPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeCollection:'>
<arg declared_type='NSString * _Nonnull' index='0' name='collectionName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeFontDescriptor:fromCollection:'>
<arg declared_type='NSFontDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='collection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFontTrait:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedFont'>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='sendAction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setFontManagerFactory:'>
<arg declared_type='Class _Nullable' index='0' name='factoryId' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontMenu:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='newMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setFontPanelFactory:'>
<arg declared_type='Class _Nullable' index='0' name='factoryId' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedAttributes:isMultiple:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedFont:isMultiple:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedFontManager'>
<retval declared_type='NSFontManager * _Nonnull' type='@'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='traitsOfFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<retval declared_type='NSFontTraitMask' type='I' type64='Q'/>
</method>
<method selector='weightOfFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSFontPanel'>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panelConvertFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='reloadDefaultFontFamilies'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPanelFont:isMultiple:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorksWhenModal:'>
<arg declared_type='BOOL' index='0' name='worksWhenModal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedFontPanel'>
<retval declared_type='NSFontPanel * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sharedFontPanelExists'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='worksWhenModal'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSForm'>
<method selector='addEntry:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='NSFormCell * _Nonnull' type='@'/>
</method>
<method selector='cellAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='id _Null_unspecified' type='@'/>
</method>
<method selector='drawCellAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexOfCellWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='insertEntry:atIndex:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='NSFormCell * _Null_unspecified' type='@'/>
</method>
<method selector='preferredTextFieldWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='removeEntryAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectTextAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntryWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameSize:'>
<arg declared_type='NSSize' index='0' name='newSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterlineSpacing:'>
<arg declared_type='CGFloat' index='0' name='spacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredTextFieldWidth:'>
<arg declared_type='CGFloat' index='0' name='preferredWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='mode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='writingDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='mode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='writingDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='fontObj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFormCell'>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='initTextCell:'>
<arg declared_type='NSString * _Nullable' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='preferredTextFieldWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type='NSString * _Nullable' index='0' name='placeholderString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredTextFieldWidth:'>
<arg declared_type='CGFloat' index='0' name='preferredTextFieldWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='titleAlignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='titleBaseWritingDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='titleFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWidth:'>
<arg declared_type='CGFloat' index='0' name='titleWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='titleAlignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='titleBaseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method selector='titleFont'>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='titleWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='titleWidth:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSGestureRecognizer'>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='allowedTouchTypes'>
<retval declared_type='NSTouchTypeMask' type='I' type64='Q'/>
</method>
<method selector='canBePreventedByGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='preventingGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPreventGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='preventedGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delaysKeyEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delaysMagnificationEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delaysOtherMouseButtonEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delaysPrimaryMouseButtonEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delaysRotationEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delaysSecondaryMouseButtonEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='flagsChanged:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithTarget:action:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='locationInView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='magnifyWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDragged:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseDragged:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressureChangeWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressureConfiguration'>
<retval declared_type='NSPressureConfiguration * _Nonnull' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDragged:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowedTouchTypes:'>
<arg declared_type='NSTouchTypeMask' index='0' name='allowedTouchTypes' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysKeyEvents:'>
<arg declared_type='BOOL' index='0' name='delaysKeyEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysMagnificationEvents:'>
<arg declared_type='BOOL' index='0' name='delaysMagnificationEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysOtherMouseButtonEvents:'>
<arg declared_type='BOOL' index='0' name='delaysOtherMouseButtonEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysPrimaryMouseButtonEvents:'>
<arg declared_type='BOOL' index='0' name='delaysPrimaryMouseButtonEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysRotationEvents:'>
<arg declared_type='BOOL' index='0' name='delaysRotationEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelaysSecondaryMouseButtonEvents:'>
<arg declared_type='BOOL' index='0' name='delaysSecondaryMouseButtonEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPressureConfiguration:'>
<arg declared_type='NSPressureConfiguration * _Nonnull' index='0' name='pressureConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg declared_type='NSGestureRecognizerState' index='0' name='state' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldBeRequiredToFailByGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldRequireFailureOfGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='state'>
<retval declared_type='NSGestureRecognizerState' type='i' type64='q'/>
</method>
<method selector='tabletPoint:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='touchesBeganWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesCancelledWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEndedWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesMovedWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
</class>
<class name='NSGlyphGenerator'>
<method selector='generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:'>
<arg declared_type='id _Nonnull' index='0' name='glyphStorage' type='@'/>
<arg declared_type='NSUInteger' index='1' name='nChars' type='I' type64='Q'/>
<arg declared_type='NSUInteger * _Nullable' index='2' name='glyphIndex' type='^I' type64='^Q'/>
<arg declared_type='NSUInteger * _Nullable' index='3' name='charIndex' type='^I' type64='^Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedGlyphGenerator'>
<retval declared_type='NSGlyphGenerator * _Nonnull' type='@'/>
</method>
</class>
<class name='NSGlyphInfo'>
<method selector='baseString'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='characterCollection'>
<retval declared_type='NSCharacterCollection' type='I' type64='Q'/>
</method>
<method selector='characterIdentifier'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphID'>
<retval declared_type='CGGlyph' type='S'/>
</method>
<method class_method='true' selector='glyphInfoWithCGGlyph:forFont:baseString:'>
<arg declared_type='CGGlyph' index='0' name='glyph' type='S'/>
<arg declared_type='NSFont * _Nonnull' index='1' name='font' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<retval declared_type='NSGlyphInfo * _Nullable' type='@'/>
</method>
<method class_method='true' selector='glyphInfoWithCharacterIdentifier:collection:baseString:'>
<arg declared_type='NSUInteger' index='0' name='cid' type='I' type64='Q'/>
<arg declared_type='NSCharacterCollection' index='1' name='characterCollection' type='I' type64='Q'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<retval declared_type='NSGlyphInfo * _Nullable' type='@'/>
</method>
<method class_method='true' selector='glyphInfoWithGlyph:forFont:baseString:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<arg declared_type='NSFont * _Nonnull' index='1' name='font' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<retval declared_type='NSGlyphInfo * _Nullable' type='@'/>
</method>
<method class_method='true' selector='glyphInfoWithGlyphName:forFont:baseString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='glyphName' type='@'/>
<arg declared_type='NSFont * _Nonnull' index='1' name='font' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<retval declared_type='NSGlyphInfo * _Nullable' type='@'/>
</method>
<method selector='glyphName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='NSGradient'>
<method selector='colorSpace'>
<retval declared_type='NSColorSpace * _Nonnull' type='@'/>
</method>
<method selector='drawFromCenter:radius:toCenter:radius:options:'>
<arg declared_type='NSPoint' index='0' name='startCenter' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='startRadius' type='f' type64='d'/>
<arg declared_type='NSPoint' index='2' name='endCenter' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='3' name='endRadius' type='f' type64='d'/>
<arg declared_type='NSGradientDrawingOptions' index='4' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawFromPoint:toPoint:options:'>
<arg declared_type='NSPoint' index='0' name='startingPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='1' name='endingPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSGradientDrawingOptions' index='2' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInBezierPath:angle:'>
<arg declared_type='NSBezierPath * _Nonnull' index='0' name='path' type='@'/>
<arg declared_type='CGFloat' index='1' name='angle' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInBezierPath:relativeCenterPosition:'>
<arg declared_type='NSBezierPath * _Nonnull' index='0' name='path' type='@'/>
<arg declared_type='NSPoint' index='1' name='relativeCenterPosition' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:angle:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' index='1' name='angle' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:relativeCenterPosition:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' index='1' name='relativeCenterPosition' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getColor:location:atIndex:'>
<arg declared_type='NSColor * _Nonnull * _Nullable' index='0' name='color' type='^@'/>
<arg declared_type='CGFloat * _Nullable' index='1' name='location' type='^f' type64='^d'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='decoder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithColors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='colorArray' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithColors:atLocations:colorSpace:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='colorArray' type='@'/>
<arg const='true' declared_type='CGFloat * _Nullable' index='1' name='locations' type='^f' type64='^d'/>
<arg declared_type='NSColorSpace * _Nonnull' index='2' name='colorSpace' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithColorsAndLocations:' sentinel='0' variadic='true'>
<arg declared_type='NSColor * _Nonnull' index='0' name='firstColor' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithStartingColor:endingColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='startingColor' type='@'/>
<arg declared_type='NSColor * _Nonnull' index='1' name='endingColor' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='interpolatedColorAtLocation:'>
<arg declared_type='CGFloat' index='0' name='location' type='f' type64='d'/>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='numberOfColorStops'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSGraphicsContext'>
<method selector='CGContext'>
<retval declared_type='CGContextRef _Nonnull' type='^{CGContext=}'/>
</method>
<method selector='CIContext'>
<retval declared_type='CIContext * _Nullable' type='@'/>
</method>
<method selector='attributes'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='colorRenderingIntent'>
<retval declared_type='NSColorRenderingIntent' type='i' type64='q'/>
</method>
<method selector='compositingOperation'>
<retval declared_type='NSCompositingOperation' type='I' type64='Q'/>
</method>
<method class_method='true' selector='currentContext'>
<retval declared_type='NSGraphicsContext * _Nullable' type='@'/>
</method>
<method class_method='true' selector='currentContextDrawingToScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flushGraphics'>
<retval declared_type='void' type='v'/>
</method>
<method selector='focusStack'>
<retval declared_type='id _Null_unspecified' type='@'/>
</method>
<method class_method='true' selector='graphicsContextWithAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='NSGraphicsContext * _Nullable' type='@'/>
</method>
<method class_method='true' selector='graphicsContextWithBitmapImageRep:'>
<arg declared_type='NSBitmapImageRep * _Nonnull' index='0' name='bitmapRep' type='@'/>
<retval declared_type='NSGraphicsContext * _Nullable' type='@'/>
</method>
<method class_method='true' selector='graphicsContextWithCGContext:flipped:'>
<arg declared_type='CGContextRef _Nonnull' index='0' name='graphicsPort' type='^{CGContext=}'/>
<arg declared_type='BOOL' index='1' name='initialFlippedState' type='B'/>
<retval declared_type='NSGraphicsContext * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='graphicsContextWithGraphicsPort:flipped:'>
<arg declared_type='void * _Nonnull' index='0' name='graphicsPort' type='^v'/>
<arg declared_type='BOOL' index='1' name='initialFlippedState' type='B'/>
<retval declared_type='NSGraphicsContext * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='graphicsContextWithWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSGraphicsContext * _Nonnull' type='@'/>
</method>
<method selector='graphicsPort'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='imageInterpolation'>
<retval declared_type='NSImageInterpolation' type='I' type64='Q'/>
</method>
<method selector='isDrawingToScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFlipped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='patternPhase'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method class_method='true' selector='restoreGraphicsState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreGraphicsState'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='saveGraphicsState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveGraphicsState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorRenderingIntent:'>
<arg declared_type='NSColorRenderingIntent' index='0' name='colorRenderingIntent' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompositingOperation:'>
<arg declared_type='NSCompositingOperation' index='0' name='compositingOperation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCurrentContext:'>
<arg declared_type='NSGraphicsContext * _Nullable' index='0' name='currentContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusStack:'>
<arg declared_type='id _Null_unspecified' index='0' name='stack' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setGraphicsState:'>
<arg declared_type='NSInteger' index='0' name='gState' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageInterpolation:'>
<arg declared_type='NSImageInterpolation' index='0' name='imageInterpolation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPatternPhase:'>
<arg declared_type='NSPoint' index='0' name='patternPhase' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldAntialias:'>
<arg declared_type='BOOL' index='0' name='shouldAntialias' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAntialias'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSGridCell'>
<method selector='column'>
<retval declared_type='NSGridColumn * _Nullable' type='@'/>
</method>
<method selector='contentView'>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
<method selector='customPlacementConstraints'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='emptyContentView'>
<retval declared_type='NSView * _Nonnull' type='@'/>
</method>
<method selector='row'>
<retval declared_type='NSGridRow * _Nullable' type='@'/>
</method>
<method selector='rowAlignment'>
<retval declared_type='NSGridRowAlignment' type='i' type64='q'/>
</method>
<method selector='setContentView:'>
<arg declared_type='__kindof NSView * _Nullable' index='0' name='contentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomPlacementConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='customPlacementConstraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowAlignment:'>
<arg declared_type='NSGridRowAlignment' index='0' name='rowAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXPlacement:'>
<arg declared_type='NSGridCellPlacement' index='0' name='xPlacement' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYPlacement:'>
<arg declared_type='NSGridCellPlacement' index='0' name='yPlacement' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='xPlacement'>
<retval declared_type='NSGridCellPlacement' type='i' type64='q'/>
</method>
<method selector='yPlacement'>
<retval declared_type='NSGridCellPlacement' type='i' type64='q'/>
</method>
</class>
<class name='NSGridColumn'>
<method selector='cellAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSGridCell * _Nonnull' type='@'/>
</method>
<method selector='gridView'>
<retval declared_type='NSGridView * _Nullable' type='@'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='leadingPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='mergeCellsInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfCells'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeadingPadding:'>
<arg declared_type='CGFloat' index='0' name='leadingPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrailingPadding:'>
<arg declared_type='CGFloat' index='0' name='trailingPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXPlacement:'>
<arg declared_type='NSGridCellPlacement' index='0' name='xPlacement' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trailingPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='xPlacement'>
<retval declared_type='NSGridCellPlacement' type='i' type64='q'/>
</method>
</class>
<class name='NSGridRow'>
<method selector='bottomPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='cellAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSGridCell * _Nonnull' type='@'/>
</method>
<method selector='gridView'>
<retval declared_type='NSGridView * _Nullable' type='@'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mergeCellsInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfCells'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rowAlignment'>
<retval declared_type='NSGridRowAlignment' type='i' type64='q'/>
</method>
<method selector='setBottomPadding:'>
<arg declared_type='CGFloat' index='0' name='bottomPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type='CGFloat' index='0' name='height' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowAlignment:'>
<arg declared_type='NSGridRowAlignment' index='0' name='rowAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopPadding:'>
<arg declared_type='CGFloat' index='0' name='topPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYPlacement:'>
<arg declared_type='NSGridCellPlacement' index='0' name='yPlacement' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='topPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='yPlacement'>
<retval declared_type='NSGridCellPlacement' type='i' type64='q'/>
</method>
</class>
<class name='NSGridView'>
<method selector='addColumnWithViews:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='views' type='@'/>
<retval declared_type='NSGridColumn * _Nonnull' type='@'/>
</method>
<method selector='addRowWithViews:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='views' type='@'/>
<retval declared_type='NSGridRow * _Nonnull' type='@'/>
</method>
<method selector='cellAtColumnIndex:rowIndex:'>
<arg declared_type='NSInteger' index='0' name='columnIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='rowIndex' type='i' type64='q'/>
<retval declared_type='NSGridCell * _Nonnull' type='@'/>
</method>
<method selector='cellForView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSGridCell * _Nullable' type='@'/>
</method>
<method selector='columnAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSGridColumn * _Nonnull' type='@'/>
</method>
<method selector='columnSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='gridViewWithNumberOfColumns:rows:'>
<arg declared_type='NSInteger' index='0' name='columnCount' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='rowCount' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='gridViewWithViews:'>
<arg declared_type='NSArray *&gt; * _Nonnull' index='0' name='rows' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='indexOfColumn:'>
<arg declared_type='NSGridColumn * _Nonnull' index='0' name='column' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfRow:'>
<arg declared_type='NSGridRow * _Nonnull' index='0' name='row' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertColumnAtIndex:withViews:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='views' type='@'/>
<retval declared_type='NSGridColumn * _Nonnull' type='@'/>
</method>
<method selector='insertRowAtIndex:withViews:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='views' type='@'/>
<retval declared_type='NSGridRow * _Nonnull' type='@'/>
</method>
<method selector='mergeCellsInHorizontalRange:verticalRange:'>
<arg declared_type='NSRange' index='0' name='hRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='1' name='vRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveColumnAtIndex:toIndex:'>
<arg declared_type='NSInteger' index='0' name='fromIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='toIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveRowAtIndex:toIndex:'>
<arg declared_type='NSInteger' index='0' name='fromIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='toIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='removeColumnAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRowAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowAlignment'>
<retval declared_type='NSGridRowAlignment' type='i' type64='q'/>
</method>
<method selector='rowAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSGridRow * _Nonnull' type='@'/>
</method>
<method selector='rowSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setColumnSpacing:'>
<arg declared_type='CGFloat' index='0' name='columnSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowAlignment:'>
<arg declared_type='NSGridRowAlignment' index='0' name='rowAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowSpacing:'>
<arg declared_type='CGFloat' index='0' name='rowSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXPlacement:'>
<arg declared_type='NSGridCellPlacement' index='0' name='xPlacement' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYPlacement:'>
<arg declared_type='NSGridCellPlacement' index='0' name='yPlacement' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='xPlacement'>
<retval declared_type='NSGridCellPlacement' type='i' type64='q'/>
</method>
<method selector='yPlacement'>
<retval declared_type='NSGridCellPlacement' type='i' type64='q'/>
</method>
</class>
<class name='NSGroupTouchBarItem'>
<method class_method='true' selector='alertStyleGroupItemWithIdentifier:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='effectiveCompressionOptions'>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='groupItemWithIdentifier:items:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='groupItemWithIdentifier:items:allowedCompressionOptions:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSUserInterfaceCompressionOptions * _Nonnull' index='2' name='allowedCompressionOptions' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='groupTouchBar'>
<retval declared_type='NSTouchBar * _Nonnull' type='@'/>
</method>
<method selector='groupUserInterfaceLayoutDirection'>
<retval declared_type='NSUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='preferredItemWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='prefersEqualWidths'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prioritizedCompressionOptions'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='customizationLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupTouchBar:'>
<arg declared_type='NSTouchBar * _Nonnull' index='0' name='groupTouchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupUserInterfaceLayoutDirection:'>
<arg declared_type='NSUserInterfaceLayoutDirection' index='0' name='groupUserInterfaceLayoutDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredItemWidth:'>
<arg declared_type='CGFloat' index='0' name='preferredItemWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrefersEqualWidths:'>
<arg declared_type='BOOL' index='0' name='prefersEqualWidths' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrioritizedCompressionOptions:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='prioritizedCompressionOptions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSHapticFeedbackManager'>
<method class_method='true' selector='defaultPerformer'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</class>
<class name='NSHelpManager'>
<method selector='contextHelpForObject:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='findString:inBook:'>
<arg declared_type='NSString * _Nonnull' index='0' name='query' type='@'/>
<arg declared_type='NSHelpBookName _Nullable' index='1' name='book' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='isContextHelpModeActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openHelpAnchor:inBook:'>
<arg declared_type='NSHelpAnchorName _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='NSHelpBookName _Nullable' index='1' name='book' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerBooksInBundle:'>
<arg declared_type='NSBundle * _Nonnull' index='0' name='bundle' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeContextHelpForObject:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContextHelp:forObject:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attrString' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setContextHelpModeActive:'>
<arg declared_type='BOOL' index='0' name='contextHelpModeActive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedHelpManager'>
<retval declared_type='NSHelpManager * _Nonnull' type='@'/>
</method>
<method selector='showContextHelpForObject:locationHint:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<arg declared_type='NSPoint' index='1' name='pt' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSImage'>
<method selector='CGImageForProposedRect:context:hints:'>
<arg declared_type='NSRect * _Nullable' index='0' name='proposedDestRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSGraphicsContext * _Nullable' index='1' name='referenceContext' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='hints' type='@'/>
<retval declared_type='CGImageRef _Nullable' type='^{CGImage=}'/>
</method>
<method selector='TIFFRepresentation'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='TIFFRepresentationUsingCompression:factor:'>
<arg declared_type='NSTIFFCompression' index='0' name='comp' type='I' type64='Q'/>
<arg declared_type='float' index='1' name='factor' type='f'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='accessibilityDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='addRepresentation:'>
<arg declared_type='NSImageRep * _Nonnull' index='0' name='imageRep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRepresentations:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='imageReps' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignmentRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='bestRepresentationForDevice:'>
<arg declared_type='NSDictionary * _Null_unspecified' index='0' name='deviceDescription' type='@'/>
<retval declared_type='NSImageRep * _Null_unspecified' type='@'/>
</method>
<method selector='bestRepresentationForRect:context:hints:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSGraphicsContext * _Nullable' index='1' name='referenceContext' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='hints' type='@'/>
<retval declared_type='NSImageRep * _Nullable' type='@'/>
</method>
<method selector='cacheDepthMatchesImageDepth'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cacheMode'>
<retval declared_type='NSImageCacheMode' type='I' type64='Q'/>
</method>
<method class_method='true' selector='canInitWithPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelIncrementalLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='capInsets'>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='compositeToPoint:fromRect:operation:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' index='2' name='op' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositeToPoint:fromRect:operation:fraction:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' index='2' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='3' name='delta' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositeToPoint:operation:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSCompositingOperation' index='1' name='op' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compositeToPoint:operation:fraction:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSCompositingOperation' index='1' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='2' name='delta' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dissolveToPoint:fraction:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGFloat' index='1' name='fraction' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dissolveToPoint:fromRect:fraction:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' index='2' name='fraction' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawAtPoint:fromRect:operation:fraction:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='fromRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' index='2' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='3' name='delta' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='1' name='fromRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' index='2' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='3' name='delta' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:respectFlipped:hints:'>
<arg declared_type='NSRect' index='0' name='dstSpacePortionRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='1' name='srcSpacePortionRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' index='2' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='3' name='requestedAlpha' type='f' type64='d'/>
<arg declared_type='BOOL' index='4' name='respectContextIsFlipped' type='B'/>
<arg declared_type='NSDictionary * _Nullable' index='5' name='hints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawRepresentation:inRect:'>
<arg declared_type='NSImageRep * _Nonnull' index='0' name='imageRep' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hitTestRect:withImageDestinationRect:context:hints:flipped:'>
<arg declared_type='NSRect' index='0' name='testRectDestSpace' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='1' name='imageRectDestSpace' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSGraphicsContext * _Nullable' index='2' name='context' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='hints' type='@'/>
<arg declared_type='BOOL' index='4' name='flipped' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='imageFileTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageNamed:'>
<arg declared_type='NSImageName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imagePasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageUnfilteredFileTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageUnfilteredPasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageUnfilteredTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageWithSize:flipped:drawingHandler:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='BOOL' index='1' name='drawingHandlerShouldBeCalledWithFlippedContext' type='B'/>
<arg declared_type='BOOL (^ _Nonnull)(NSRect)' function_pointer='true' index='2' name='drawingHandler' type='@?'>
<arg declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='initByReferencingFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initByReferencingURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCGImage:size:'>
<arg declared_type='CGImageRef _Nonnull' index='0' name='cgImage' type='^{CGImage=}'/>
<arg declared_type='NSSize' index='1' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileName' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithDataIgnoringOrientation:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithIconRef:'>
<arg declared_type='IconRef _Nonnull' index='0' name='iconRef' type='^{OpaqueIconRef=}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isCachedSeparately'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDataRetained'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFlipped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTemplate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layerContentsForContentsScale:'>
<arg declared_type='CGFloat' index='0' name='layerContentsScale' type='f' type64='d'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='lockFocus'>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockFocusFlipped:'>
<arg declared_type='BOOL' index='0' name='flipped' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockFocusOnRepresentation:'>
<arg declared_type='NSImageRep * _Null_unspecified' index='0' name='imageRepresentation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='matchesOnMultipleResolution'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesOnlyOnBestFittingAxis'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSImageName _Nullable' type='@'/>
</method>
<method selector='prefersColorMatch'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='recommendedLayerContentsScale:'>
<arg declared_type='CGFloat' index='0' name='preferredContentsScale' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='removeRepresentation:'>
<arg declared_type='NSImageRep * _Nonnull' index='0' name='imageRep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='representations'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='resizingMode'>
<retval declared_type='NSImageResizingMode' type='i' type64='q'/>
</method>
<method selector='scalesWhenResized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAccessibilityDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignmentRect:'>
<arg declared_type='NSRect' index='0' name='alignmentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheDepthMatchesImageDepth:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheMode:'>
<arg declared_type='NSImageCacheMode' index='0' name='cacheMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachedSeparately:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCapInsets:'>
<arg declared_type='NSEdgeInsets' index='0' name='capInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataRetained:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFlipped:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchesOnMultipleResolution:'>
<arg declared_type='BOOL' index='0' name='matchesOnMultipleResolution' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchesOnlyOnBestFittingAxis:'>
<arg declared_type='BOOL' index='0' name='matchesOnlyOnBestFittingAxis' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSImageName _Nullable' index='0' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPrefersColorMatch:'>
<arg declared_type='BOOL' index='0' name='prefersColorMatch' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResizingMode:'>
<arg declared_type='NSImageResizingMode' index='0' name='resizingMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScalesWhenResized:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTemplate:'>
<arg declared_type='BOOL' index='0' name='template' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesEPSOnResolutionMismatch:'>
<arg declared_type='BOOL' index='0' name='usesEPSOnResolutionMismatch' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='unlockFocus'>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesEPSOnResolutionMismatch'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSImageCell'>
<method selector='imageAlignment'>
<retval declared_type='NSImageAlignment' type='I' type64='Q'/>
</method>
<method selector='imageFrameStyle'>
<retval declared_type='NSImageFrameStyle' type='I' type64='Q'/>
</method>
<method selector='imageScaling'>
<retval declared_type='NSImageScaling' type='I' type64='Q'/>
</method>
<method selector='setImageAlignment:'>
<arg declared_type='NSImageAlignment' index='0' name='imageAlignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageFrameStyle:'>
<arg declared_type='NSImageFrameStyle' index='0' name='imageFrameStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScaling:'>
<arg declared_type='NSImageScaling' index='0' name='imageScaling' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSImageRep'>
<method selector='CGImageForProposedRect:context:hints:'>
<arg declared_type='NSRect * _Nullable' index='0' name='proposedDestRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSGraphicsContext * _Nullable' index='1' name='context' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='hints' type='@'/>
<retval declared_type='CGImageRef _Nullable' type='^{CGImage=}'/>
</method>
<method selector='bitsPerSample'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='canInitWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='canInitWithPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='colorSpaceName'>
<retval declared_type='NSColorSpaceName _Nonnull' type='@'/>
</method>
<method selector='draw'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:respectFlipped:hints:'>
<arg declared_type='NSRect' index='0' name='dstSpacePortionRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='1' name='srcSpacePortionRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCompositingOperation' index='2' name='op' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='3' name='requestedAlpha' type='f' type64='d'/>
<arg declared_type='BOOL' index='4' name='respectContextIsFlipped' type='B'/>
<arg declared_type='NSDictionary * _Nullable' index='5' name='hints' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAlpha'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='imageFileTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imagePasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageRepClassForData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method class_method='true' selector='imageRepClassForFileType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method class_method='true' selector='imageRepClassForPasteboardType:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method class_method='true' selector='imageRepClassForType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method class_method='true' selector='imageRepWithContentsOfFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filename' type='@'/>
<retval declared_type='NSImageRep * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageRepWithContentsOfURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='NSImageRep * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageRepWithPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='NSImageRep * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageRepsWithContentsOfFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filename' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageRepsWithContentsOfURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageRepsWithPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='imageTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageUnfilteredFileTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageUnfilteredPasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='imageUnfilteredTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutDirection'>
<retval declared_type='NSImageLayoutDirection' type='i' type64='q'/>
</method>
<method selector='pixelsHigh'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pixelsWide'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='registerImageRepClass:'>
<arg declared_type='Class _Nonnull' index='0' name='imageRepClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='registeredImageRepClasses'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type='BOOL' index='0' name='alpha' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBitsPerSample:'>
<arg declared_type='NSInteger' index='0' name='bitsPerSample' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorSpaceName:'>
<arg declared_type='NSColorSpaceName _Nonnull' index='0' name='colorSpaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutDirection:'>
<arg declared_type='NSImageLayoutDirection' index='0' name='layoutDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type='BOOL' index='0' name='opaque' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPixelsHigh:'>
<arg declared_type='NSInteger' index='0' name='pixelsHigh' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPixelsWide:'>
<arg declared_type='NSInteger' index='0' name='pixelsWide' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='unregisterImageRepClass:'>
<arg declared_type='Class _Nonnull' index='0' name='imageRepClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSImageView'>
<method selector='allowsCutCopyPaste'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='imageAlignment'>
<retval declared_type='NSImageAlignment' type='I' type64='Q'/>
</method>
<method selector='imageFrameStyle'>
<retval declared_type='NSImageFrameStyle' type='I' type64='Q'/>
</method>
<method selector='imageScaling'>
<retval declared_type='NSImageScaling' type='I' type64='Q'/>
</method>
<method class_method='true' selector='imageViewWithImage:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAllowsCutCopyPaste:'>
<arg declared_type='BOOL' index='0' name='allowsCutCopyPaste' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimates:'>
<arg declared_type='BOOL' index='0' name='animates' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageAlignment:'>
<arg declared_type='NSImageAlignment' index='0' name='imageAlignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageFrameStyle:'>
<arg declared_type='NSImageFrameStyle' index='0' name='imageFrameStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScaling:'>
<arg declared_type='NSImageScaling' index='0' name='imageScaling' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSIndexPath'>
<method class_method='true' selector='indexPathForItem:inSection:'>
<arg declared_type='NSInteger' index='0' name='item' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='item'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='section'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSInputManager'>
<method class_method='true' selector='currentInputManager'>
<retval declared_type='NSInputManager * _Null_unspecified' type='@'/>
</method>
<method class_method='true' selector='cycleToNextInputLanguage:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='cycleToNextInputServerInLanguage:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleMouseEvent:'>
<arg declared_type='NSEvent * _Null_unspecified' index='0' name='mouseEvent' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Null_unspecified' type='@'/>
</method>
<method selector='initWithName:host:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='inputServerName' type='@'/>
<arg declared_type='NSString * _Null_unspecified' index='1' name='hostName' type='@'/>
<retval declared_type='NSInputManager * _Null_unspecified' type='@'/>
</method>
<method selector='language'>
<retval declared_type='NSString * _Null_unspecified' type='@'/>
</method>
<method selector='localizedInputManagerName'>
<retval declared_type='NSString * _Null_unspecified' type='@'/>
</method>
<method selector='markedTextAbandoned:'>
<arg declared_type='id _Null_unspecified' index='0' name='cli' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='markedTextSelectionChanged:client:'>
<arg declared_type='NSRange' index='0' name='newSel' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='id _Null_unspecified' index='1' name='cli' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='server'>
<retval declared_type='NSInputServer * _Null_unspecified' type='@'/>
</method>
<method selector='wantsToDelayTextChangeNotifications'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToHandleMouseEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToInterpretAllKeystrokes'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSInputServer'>
<method selector='initWithDelegate:name:'>
<arg declared_type='id _Null_unspecified' index='0' name='delegate' type='@'/>
<arg declared_type='NSString * _Null_unspecified' index='1' name='name' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSItemProvider'>
<method selector='containerFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='preferredPresentationSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='registerCloudKitShare:container:'>
<arg declared_type='CKShare * _Nonnull' index='0' name='share' type='@'/>
<arg declared_type='CKContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerCloudKitShareWithPreparationHandler:'>
<arg declared_type='void (^ _Nonnull)(void (^ _Nonnull)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable))' function_pointer='true' index='0' name='preparationHandler' type='@?'>
<arg declared_type='void (^ _Nonnull)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable)' function_pointer='true' type='@?'>
<arg declared_type='CKShare * _Nullable' type='@'/>
<arg declared_type='CKContainer * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSLayoutAnchor'>
<method selector='constraintEqualToAnchor:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintEqualToAnchor:constant:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:constant:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:constant:'>
<arg declared_type='NSLayoutAnchor * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintsAffectingLayout'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='item'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSLayoutConstraint'>
<method class_method='true' selector='activateConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='constant'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:'>
<arg declared_type='id _Nonnull' index='0' name='view1' type='@'/>
<arg declared_type='NSLayoutAttribute' index='1' name='attr1' type='i' type64='q'/>
<arg declared_type='NSLayoutRelation' index='2' name='relation' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='3' name='view2' type='@'/>
<arg declared_type='NSLayoutAttribute' index='4' name='attr2' type='i' type64='q'/>
<arg declared_type='CGFloat' index='5' name='multiplier' type='f' type64='d'/>
<arg declared_type='CGFloat' index='6' name='c' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='constraintsWithVisualFormat:options:metrics:views:'>
<arg declared_type='NSString * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='NSLayoutFormatOptions' index='1' name='opts' type='I' type64='Q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='metrics' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='views' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='deactivateConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstAnchor'>
<retval declared_type='NSLayoutAnchor * _Nonnull' type='@'/>
</method>
<method selector='firstAttribute'>
<retval declared_type='NSLayoutAttribute' type='i' type64='q'/>
</method>
<method selector='firstItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='multiplier'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='priority'>
<retval declared_type='NSLayoutPriority' type='f'/>
</method>
<method selector='relation'>
<retval declared_type='NSLayoutRelation' type='i' type64='q'/>
</method>
<method selector='secondAnchor'>
<retval declared_type='NSLayoutAnchor * _Nullable' type='@'/>
</method>
<method selector='secondAttribute'>
<retval declared_type='NSLayoutAttribute' type='i' type64='q'/>
</method>
<method selector='secondItem'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setActive:'>
<arg declared_type='BOOL' index='0' name='active' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstant:'>
<arg declared_type='CGFloat' index='0' name='constant' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPriority:'>
<arg declared_type='NSLayoutPriority' index='0' name='priority' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldBeArchived:'>
<arg declared_type='BOOL' index='0' name='shouldBeArchived' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldBeArchived'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSLayoutDimension'>
<method selector='constraintEqualToAnchor:multiplier:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintEqualToAnchor:multiplier:constant:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintEqualToConstant:'>
<arg declared_type='CGFloat' index='0' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:multiplier:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToAnchor:multiplier:constant:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintGreaterThanOrEqualToConstant:'>
<arg declared_type='CGFloat' index='0' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:multiplier:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToAnchor:multiplier:constant:'>
<arg declared_type='NSLayoutDimension * _Nonnull' index='0' name='anchor' type='@'/>
<arg declared_type='CGFloat' index='1' name='m' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
<method selector='constraintLessThanOrEqualToConstant:'>
<arg declared_type='CGFloat' index='0' name='c' type='f' type64='d'/>
<retval declared_type='NSLayoutConstraint * _Nonnull' type='@'/>
</method>
</class>
<class name='NSLayoutGuide'>
<method selector='bottomAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='centerXAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='centerYAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='constraintsAffectingLayoutForOrientation:'>
<arg declared_type='NSLayoutConstraintOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='heightAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSUserInterfaceItemIdentifier _Nonnull' type='@'/>
</method>
<method selector='leadingAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='leftAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='owningView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='rightAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOwningView:'>
<arg declared_type='NSView * _Nullable' index='0' name='owningView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='topAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='trailingAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='widthAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
</class>
<class name='NSLayoutManager'>
<method selector='CGGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='CGGlyph' type='S'/>
</method>
<method selector='CGGlyphAtIndex:isValidIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='BOOL * _Nullable' index='1' name='isValidIndex' type='^B'/>
<retval declared_type='CGGlyph' type='S'/>
</method>
<method selector='addTemporaryAttribute:value:forCharacterRange:'>
<arg declared_type='NSAttributedStringKey _Nonnull' index='0' name='attrName' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='value' type='@'/>
<arg declared_type='NSRange' index='2' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTemporaryAttributes:forCharacterRange:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attrs' type='@'/>
<arg declared_type='NSRange' index='1' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsNonContiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attachmentSizeForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='backgroundLayoutEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boundingRectForGlyphRange:inTextContainer:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundsRectForTextBlock:atIndex:effectiveRange:'>
<arg declared_type='NSTextBlock * _Nonnull' index='0' name='block' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='2' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundsRectForTextBlock:glyphRange:'>
<arg declared_type='NSTextBlock * _Nonnull' index='0' name='block' type='@'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterIndexForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='partialFraction' type='^f' type64='^d'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='defaultAttachmentScaling'>
<retval declared_type='NSImageScaling' type='I' type64='Q'/>
</method>
<method selector='defaultBaselineOffsetForFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='theFont' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='defaultLineHeightForFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='theFont' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deleteGlyphsInRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawBackgroundForGlyphRange:atPoint:'>
<arg declared_type='NSRange' index='0' name='glyphsToShow' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='1' name='origin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawGlyphsForGlyphRange:atPoint:'>
<arg declared_type='NSRange' index='0' name='glyphsToShow' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='1' name='origin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSUnderlineStyle' index='1' name='strikethroughVal' type='i' type64='q'/>
<arg declared_type='CGFloat' index='2' name='baselineOffset' type='f' type64='d'/>
<arg declared_type='NSRect' index='3' name='lineRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='4' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='5' name='containerOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSUnderlineStyle' index='1' name='underlineVal' type='i' type64='q'/>
<arg declared_type='CGFloat' index='2' name='baselineOffset' type='f' type64='d'/>
<arg declared_type='NSRect' index='3' name='lineRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='4' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='5' name='containerOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawsOutsideLineFragmentForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ensureGlyphsForCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureGlyphsForGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureLayoutForBoundingRect:inTextContainer:'>
<arg declared_type='NSRect' index='0' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureLayoutForCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureLayoutForGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ensureLayoutForTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='textContainer' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSRect, BOOL * _Nonnull)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateLineFragmentsForGlyphRange:usingBlock:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='void (^ _Nonnull)(NSRect, NSRect, NSTextContainer * _Nonnull, NSRange, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' type='@'/>
<arg declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='extraLineFragmentRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='extraLineFragmentTextContainer'>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method selector='extraLineFragmentUsedRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='fillBackgroundRectArray:count:forCharacterRange:color:'>
<arg const='true' declared_type='NSRect * _Nonnull' index='0' name='rectArray' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='1' name='rectCount' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSColor * _Nonnull' index='3' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstTextView'>
<retval declared_type='NSTextView * _Nullable' type='@'/>
</method>
<method selector='firstUnlaidCharacterIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='firstUnlaidGlyphIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:inTextContainer:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='getFirstUnlaidCharacterIndex:glyphIndex:'>
<arg declared_type='NSUInteger * _Nullable' index='0' name='charIndex' type='^I' type64='^Q'/>
<arg declared_type='NSUInteger * _Nullable' index='1' name='glyphIndex' type='^I' type64='^Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getGlyphs:range:'>
<arg declared_type='NSGlyph * _Nullable' index='0' name='glyphArray' type='^I'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSGlyph * _Nullable' index='1' name='glyphBuffer' type='^I'/>
<arg declared_type='NSUInteger * _Nullable' index='2' name='charIndexBuffer' type='^I' type64='^Q'/>
<arg declared_type='NSGlyphInscription * _Nullable' index='3' name='inscribeBuffer' type='^I' type64='^Q'/>
<arg declared_type='BOOL * _Nullable' index='4' name='elasticBuffer' type='^B'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSGlyph * _Nullable' index='1' name='glyphBuffer' type='^I'/>
<arg declared_type='NSUInteger * _Nullable' index='2' name='charIndexBuffer' type='^I' type64='^Q'/>
<arg declared_type='NSGlyphInscription * _Nullable' index='3' name='inscribeBuffer' type='^I' type64='^Q'/>
<arg declared_type='BOOL * _Nullable' index='4' name='elasticBuffer' type='^B'/>
<arg declared_type='unsigned char * _Nullable' index='5' name='bidiLevelBuffer' type='*'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='CGGlyph * _Nullable' index='1' name='glyphBuffer' type='^S'/>
<arg declared_type='NSGlyphProperty * _Nullable' index='2' name='props' type='^i' type64='^q'/>
<arg declared_type='NSUInteger * _Nullable' index='3' name='charIndexBuffer' type='^I' type64='^Q'/>
<arg declared_type='unsigned char * _Nullable' index='4' name='bidiLevelBuffer' type='*'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='aFlag' type='B'/>
<arg declared_type='BOOL' index='2' name='dFlag' type='B'/>
<arg declared_type='CGFloat * _Nullable' index='3' name='positions' type='^f' type64='^d'/>
<arg declared_type='NSUInteger * _Nullable' index='4' name='charIndexes' type='^I' type64='^Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSGlyph' type='I'/>
</method>
<method selector='glyphAtIndex:isValidIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='BOOL * _Nullable' index='1' name='isValidIndex' type='^B'/>
<retval declared_type='NSGlyph' type='I'/>
</method>
<method selector='glyphGenerator'>
<retval declared_type='NSGlyphGenerator * _Nonnull' type='@'/>
</method>
<method selector='glyphIndexForCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<arg declared_type='CGFloat * _Nullable' index='2' name='partialFraction' type='^f' type64='^d'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='glyphRangeForBoundingRect:inTextContainer:'>
<arg declared_type='NSRect' index='0' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'>
<arg declared_type='NSRect' index='0' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='container' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='glyphRangeForTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='hasNonContiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='insertGlyph:atGlyphIndex:characterIndex:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
<arg const='true' declared_type='NSGlyph * _Nonnull' index='0' name='glyphs' type='^I'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertTextContainer:atIndex:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='intAttribute:forGlyphAtIndex:'>
<arg declared_type='NSInteger' index='0' name='attributeTag' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='invalidateDisplayForCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateDisplayForGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='1' name='delta' type='i' type64='q'/>
<arg declared_type='NSRangePointer _Nullable' index='2' name='actualCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateGlyphsOnLayoutInvalidationForGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateLayoutForCharacterRange:actualCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<arg declared_type='NSRangePointer _Nullable' index='2' name='actualCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isValidGlyphIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManagerOwnsFirstResponderInWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutRectForTextBlock:atIndex:effectiveRange:'>
<arg declared_type='NSTextBlock * _Nonnull' index='0' name='block' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='2' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutRectForTextBlock:glyphRange:'>
<arg declared_type='NSTextBlock * _Nonnull' index='0' name='block' type='@'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='locationForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='notShownAttributeForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfGlyphs'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='newCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<arg declared_type='NSRange' index='4' name='invalidatedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='propertyForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSGlyphProperty' type='i' type64='q'/>
</method>
<method selector='rangeOfNominallySpacedGlyphsContainingIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='1' name='selCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='container' type='@'/>
<arg declared_type='NSUInteger * _Nonnull' index='3' name='rectCount' type='^I' type64='^Q'/>
<retval declared_type='NSRectArray _Nullable' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='1' name='selGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='container' type='@'/>
<arg declared_type='NSUInteger * _Nonnull' index='3' name='rectCount' type='^I' type64='^Q'/>
<retval declared_type='NSRectArray _Nullable' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='removeTemporaryAttribute:forCharacterRange:'>
<arg declared_type='NSAttributedStringKey _Nonnull' index='0' name='attrName' type='@'/>
<arg declared_type='NSRange' index='1' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTextContainerAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceGlyphAtIndex:withGlyph:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSGlyph' index='1' name='newGlyph' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceTextStorage:'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='newTextStorage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSParagraphStyle * _Nonnull' index='1' name='style' type='@'/>
<arg declared_type='NSRulerView * _Nonnull' index='2' name='ruler' type='@'/>
<arg declared_type='BOOL' index='3' name='isEnabled' type='B'/>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
<method selector='rulerMarkersForTextView:paragraphStyle:ruler:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSParagraphStyle * _Nonnull' index='1' name='style' type='@'/>
<arg declared_type='NSRulerView * _Nonnull' index='2' name='ruler' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setAllowsNonContiguousLayout:'>
<arg declared_type='BOOL' index='0' name='allowsNonContiguousLayout' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg declared_type='NSSize' index='0' name='attachmentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundLayoutEnabled:'>
<arg declared_type='BOOL' index='0' name='backgroundLayoutEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundsRect:forTextBlock:glyphRange:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextBlock * _Nonnull' index='1' name='block' type='@'/>
<arg declared_type='NSRange' index='2' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCharacterIndex:forGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultAttachmentScaling:'>
<arg declared_type='NSImageScaling' index='0' name='defaultAttachmentScaling' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphAtIndex:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtraLineFragmentRect:usedRect:textContainer:'>
<arg declared_type='NSRect' index='0' name='fragmentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='1' name='usedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlyphGenerator:'>
<arg declared_type='NSGlyphGenerator * _Nonnull' index='0' name='glyphGenerator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlyphs:properties:characterIndexes:font:forGlyphRange:'>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='0' name='glyphs' type='^S'/>
<arg const='true' declared_type='NSGlyphProperty * _Nonnull' index='1' name='props' type='^i' type64='^q'/>
<arg const='true' declared_type='NSUInteger * _Nonnull' index='2' name='charIndexes' type='^I' type64='^Q'/>
<arg declared_type='NSFont * _Nonnull' index='3' name='aFont' type='@'/>
<arg declared_type='NSRange' index='4' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type='float' index='0' name='hyphenationFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntAttribute:value:forGlyphAtIndex:'>
<arg declared_type='NSInteger' index='0' name='attributeTag' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='val' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='2' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutRect:forTextBlock:glyphRange:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextBlock * _Nonnull' index='1' name='block' type='@'/>
<arg declared_type='NSRange' index='2' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:'>
<arg declared_type='NSRect' index='0' name='fragmentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRect' index='2' name='usedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocation:forStartOfGlyphRange:'>
<arg declared_type='NSPoint' index='0' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocations:startingGlyphIndexes:count:forGlyphRange:'>
<arg declared_type='NSPointArray _Nonnull' index='0' name='locations' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger * _Nonnull' index='1' name='glyphIndexes' type='^I' type64='^Q'/>
<arg declared_type='NSUInteger' index='2' name='count' type='I' type64='Q'/>
<arg declared_type='NSRange' index='3' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotShownAttribute:forGlyphAtIndex:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsControlCharacters:'>
<arg declared_type='BOOL' index='0' name='showsControlCharacters' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsInvisibleCharacters:'>
<arg declared_type='BOOL' index='0' name='showsInvisibleCharacters' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTemporaryAttributes:forCharacterRange:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attrs' type='@'/>
<arg declared_type='NSRange' index='1' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextContainer:forGlyphRange:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextStorage:'>
<arg declared_type='NSTextStorage * _Nullable' index='0' name='textStorage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTypesetter:'>
<arg declared_type='__kindof NSTypesetter * _Nonnull' index='0' name='typesetter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg declared_type='NSTypesetterBehavior' index='0' name='typesetterBehavior' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFontLeading:'>
<arg declared_type='BOOL' index='0' name='usesFontLeading' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesScreenFonts:'>
<arg declared_type='BOOL' index='0' name='usesScreenFonts' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAttachmentCell:inRect:characterIndex:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='2' name='attachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showCGGlyphs:positions:count:font:matrix:attributes:inContext:'>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='0' name='glyphs' type='^S'/>
<arg const='true' declared_type='NSPoint * _Nonnull' index='1' name='positions' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='2' name='glyphCount' type='I' type64='Q'/>
<arg declared_type='NSFont * _Nonnull' index='3' name='font' type='@'/>
<arg declared_type='NSAffineTransform * _Nonnull' index='4' name='textMatrix' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='5' name='attributes' type='@'/>
<arg declared_type='NSGraphicsContext * _Nonnull' index='6' name='graphicsContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:'>
<arg declared_type='char * _Nonnull' index='0' name='glyphs' type='*'/>
<arg declared_type='NSUInteger' index='1' name='glyphLen' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='3' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSFont * _Nonnull' index='4' name='font' type='@'/>
<arg declared_type='NSColor * _Nonnull' index='5' name='color' type='@'/>
<arg declared_type='NSSize' index='6' name='printingAdjustment' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsControlCharacters'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsInvisibleCharacters'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSUnderlineStyle' index='1' name='strikethroughVal' type='i' type64='q'/>
<arg declared_type='NSRect' index='2' name='lineRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='3' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='4' name='containerOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='substituteFontForFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='originalFont' type='@'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='temporaryAttribute:atCharacterIndex:effectiveRange:'>
<arg declared_type='NSAttributedStringKey _Nonnull' index='0' name='attrName' type='@'/>
<arg declared_type='NSUInteger' index='1' name='location' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='2' name='range' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:'>
<arg declared_type='NSAttributedStringKey _Nonnull' index='0' name='attrName' type='@'/>
<arg declared_type='NSUInteger' index='1' name='location' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='2' name='range' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='3' name='rangeLimit' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='temporaryAttributesAtCharacterIndex:effectiveRange:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='range' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='2' name='rangeLimit' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='textContainerChangedGeometry:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textContainerChangedTextView:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='effectiveGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method selector='textContainers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textStorage'>
<retval declared_type='NSTextStorage * _Nullable' type='@'/>
</method>
<method selector='textStorage:edited:range:changeInLength:invalidatedRange:'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='str' type='@'/>
<arg declared_type='NSTextStorageEditedOptions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='newCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<arg declared_type='NSRange' index='4' name='invalidatedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewForBeginningOfSelection'>
<retval declared_type='NSTextView * _Nullable' type='@'/>
</method>
<method selector='truncatedGlyphRangeInLineFragmentForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='typesetter'>
<retval declared_type='__kindof NSTypesetter * _Nonnull' type='@'/>
</method>
<method selector='typesetterBehavior'>
<retval declared_type='NSTypesetterBehavior' type='i' type64='q'/>
</method>
<method selector='underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSUnderlineStyle' index='1' name='underlineVal' type='i' type64='q'/>
<arg declared_type='NSRect' index='2' name='lineRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='3' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='4' name='containerOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usedRectForTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='container' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='usesFontLeading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesScreenFonts'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSLayoutXAxisAnchor'>
<method selector='anchorWithOffsetToAnchor:'>
<arg declared_type='NSLayoutXAxisAnchor * _Nonnull' index='0' name='otherAnchor' type='@'/>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
</class>
<class name='NSLayoutYAxisAnchor'>
<method selector='anchorWithOffsetToAnchor:'>
<arg declared_type='NSLayoutYAxisAnchor * _Nonnull' index='0' name='otherAnchor' type='@'/>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
</class>
<class name='NSLevelIndicator'>
<method selector='criticalFillColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='criticalValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='drawsTieredCapacityLevels'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fillColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='levelIndicatorStyle'>
<retval declared_type='NSLevelIndicatorStyle' type='I' type64='Q'/>
</method>
<method selector='maxValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='numberOfMajorTickMarks'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfTickMarks'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='placeholderVisibility'>
<retval declared_type='NSLevelIndicatorPlaceholderVisibility' type='i' type64='q'/>
</method>
<method selector='ratingImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='ratingPlaceholderImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setCriticalFillColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='criticalFillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCriticalValue:'>
<arg declared_type='double' index='0' name='criticalValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsTieredCapacityLevels:'>
<arg declared_type='BOOL' index='0' name='drawsTieredCapacityLevels' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='fillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLevelIndicatorStyle:'>
<arg declared_type='NSLevelIndicatorStyle' index='0' name='levelIndicatorStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type='double' index='0' name='maxValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type='double' index='0' name='minValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfMajorTickMarks:'>
<arg declared_type='NSInteger' index='0' name='numberOfMajorTickMarks' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg declared_type='NSInteger' index='0' name='numberOfTickMarks' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderVisibility:'>
<arg declared_type='NSLevelIndicatorPlaceholderVisibility' index='0' name='placeholderVisibility' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRatingImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='ratingImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRatingPlaceholderImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='ratingPlaceholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTickMarkPosition:'>
<arg declared_type='NSTickMarkPosition' index='0' name='tickMarkPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWarningFillColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='warningFillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWarningValue:'>
<arg declared_type='double' index='0' name='warningValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tickMarkPosition'>
<retval declared_type='NSTickMarkPosition' type='I' type64='Q'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='warningFillColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='warningValue'>
<retval declared_type='double' type='d'/>
</method>
</class>
<class name='NSLevelIndicatorCell'>
<method selector='criticalValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='initWithLevelIndicatorStyle:'>
<arg declared_type='NSLevelIndicatorStyle' index='0' name='levelIndicatorStyle' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='levelIndicatorStyle'>
<retval declared_type='NSLevelIndicatorStyle' type='I' type64='Q'/>
</method>
<method selector='maxValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='numberOfMajorTickMarks'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfTickMarks'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setCriticalValue:'>
<arg declared_type='double' index='0' name='criticalValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLevelIndicatorStyle:'>
<arg declared_type='NSLevelIndicatorStyle' index='0' name='levelIndicatorStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type='double' index='0' name='maxValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type='double' index='0' name='minValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfMajorTickMarks:'>
<arg declared_type='NSInteger' index='0' name='numberOfMajorTickMarks' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg declared_type='NSInteger' index='0' name='numberOfTickMarks' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTickMarkPosition:'>
<arg declared_type='NSTickMarkPosition' index='0' name='tickMarkPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWarningValue:'>
<arg declared_type='double' index='0' name='warningValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tickMarkPosition'>
<retval declared_type='NSTickMarkPosition' type='I' type64='Q'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='warningValue'>
<retval declared_type='double' type='d'/>
</method>
</class>
<class name='NSMagnificationGestureRecognizer'>
<method selector='magnification'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setMagnification:'>
<arg declared_type='CGFloat' index='0' name='magnification' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMatrix'>
<method selector='acceptsFirstMouse:'>
<arg declared_type='NSEvent * _Nullable' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addColumn'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addColumnWithCells:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='newCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRowWithCells:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='newCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autorecalculatesCellSize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autosizesCells'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='cellAtRow:column:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='col' type='i' type64='q'/>
<retval declared_type='__kindof NSCell * _Nullable' type='@'/>
</method>
<method selector='cellBackgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='cellClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='cellFrameAtRow:column:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='col' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cellSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='cellWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='__kindof NSCell * _Nullable' type='@'/>
</method>
<method selector='cells'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deselectAllCells'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deselectSelectedCell'>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleAction'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='drawCellAtRow:column:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='col' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawsCellBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getNumberOfRows:columns:'>
<arg declared_type='NSInteger * _Nullable' index='0' name='rowCount' type='^i' type64='^q'/>
<arg declared_type='NSInteger * _Nullable' index='1' name='colCount' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getRow:column:forPoint:'>
<arg declared_type='NSInteger * _Nonnull' index='0' name='row' type='^i' type64='^q'/>
<arg declared_type='NSInteger * _Nonnull' index='1' name='col' type='^i' type64='^q'/>
<arg declared_type='NSPoint' index='2' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getRow:column:ofCell:'>
<arg declared_type='NSInteger * _Nonnull' index='0' name='row' type='^i' type64='^q'/>
<arg declared_type='NSInteger * _Nonnull' index='1' name='col' type='^i' type64='^q'/>
<arg declared_type='NSCell * _Nonnull' index='2' name='cell' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='highlightCell:atRow:column:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='col' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSMatrixMode' index='1' name='mode' type='I' type64='Q'/>
<arg declared_type='Class _Nullable' index='2' name='factoryId' type='#'/>
<arg declared_type='NSInteger' index='3' name='rowsHigh' type='i' type64='q'/>
<arg declared_type='NSInteger' index='4' name='colsWide' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFrame:mode:prototype:numberOfRows:numberOfColumns:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSMatrixMode' index='1' name='mode' type='I' type64='Q'/>
<arg declared_type='NSCell * _Nonnull' index='2' name='cell' type='@'/>
<arg declared_type='NSInteger' index='3' name='rowsHigh' type='i' type64='q'/>
<arg declared_type='NSInteger' index='4' name='colsWide' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertColumn:withCells:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSArray * _Nullable' index='1' name='newCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertRow:withCells:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSArray * _Nullable' index='1' name='newCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='isAutoscroll'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectionByRect'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyCell'>
<retval declared_type='__kindof NSCell * _Nullable' type='@'/>
</method>
<method selector='makeCellAtRow:column:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='col' type='i' type64='q'/>
<retval declared_type='NSCell * _Nonnull' type='@'/>
</method>
<method selector='mode'>
<retval declared_type='NSMatrixMode' type='I' type64='Q'/>
</method>
<method selector='mouseDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDownFlags'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prototype'>
<retval declared_type='__kindof NSCell * _Nullable' type='@'/>
</method>
<method selector='putCell:atRow:column:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='newCell' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='col' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeColumn:'>
<arg declared_type='NSInteger' index='0' name='col' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renewRows:columns:'>
<arg declared_type='NSInteger' index='0' name='newRows' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='newCols' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetCursorRects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollCellToVisibleAtRow:column:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='col' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectCellAtRow:column:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='col' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectCellWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectText:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectTextAtRow:column:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='col' type='i' type64='q'/>
<retval declared_type='__kindof NSCell * _Nullable' type='@'/>
</method>
<method selector='selectedCell'>
<retval declared_type='__kindof NSCell * _Nullable' type='@'/>
</method>
<method selector='selectedCells'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selectedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectedRow'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='sendAction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendAction:to:forAllCells:'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<arg declared_type='id _Nonnull' index='1' name='object' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendDoubleAction'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type='BOOL' index='0' name='allowsEmptySelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutorecalculatesCellSize:'>
<arg declared_type='BOOL' index='0' name='autorecalculatesCellSize' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoscroll:'>
<arg declared_type='BOOL' index='0' name='autoscroll' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosizesCells:'>
<arg declared_type='BOOL' index='0' name='autosizesCells' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='cellBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellClass:'>
<arg declared_type='Class _Nonnull' index='0' name='cellClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCellSize:'>
<arg declared_type='NSSize' index='0' name='cellSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type='SEL _Nullable' index='0' name='doubleAction' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsCellBackground:'>
<arg declared_type='BOOL' index='0' name='drawsCellBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type='NSSize' index='0' name='intercellSpacing' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyCell:'>
<arg declared_type='__kindof NSCell * _Nullable' index='0' name='keyCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='NSMatrixMode' index='0' name='mode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrototype:'>
<arg declared_type='__kindof NSCell * _Nullable' index='0' name='prototype' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollable:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionByRect:'>
<arg declared_type='BOOL' index='0' name='selectionByRect' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionFrom:to:anchor:highlight:'>
<arg declared_type='NSInteger' index='0' name='startPos' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='endPos' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='anchorPos' type='i' type64='q'/>
<arg declared_type='BOOL' index='3' name='lit' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:atRow:column:'>
<arg declared_type='NSInteger' index='0' name='value' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='col' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabKeyTraversesCells:'>
<arg declared_type='BOOL' index='0' name='tabKeyTraversesCells' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:forCell:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTipString' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValidateSize:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeToCells'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg declared_type='NSInteger (* _Nonnull)(id _Nonnull, id _Nonnull, void * _Nullable)' function_pointer='true' index='0' name='compare' type='^?'>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='void * _Nullable' type='^v'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</arg>
<arg declared_type='void * _Nullable' index='1' name='context' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortUsingSelector:'>
<arg declared_type='SEL _Nonnull' index='0' name='comparator' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabKeyTraversesCells'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textDidBeginEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidEndEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textShouldEndEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='toolTipForCell:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='NSMediaLibraryBrowserController'>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mediaLibraries'>
<retval declared_type='NSMediaLibrary' type='I' type64='Q'/>
</method>
<method selector='setFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMediaLibraries:'>
<arg declared_type='NSMediaLibrary' index='0' name='mediaLibraries' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type='BOOL' index='0' name='visible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedMediaLibraryBrowserController'>
<retval declared_type='NSMediaLibraryBrowserController * _Nonnull' type='@'/>
</method>
<method selector='togglePanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMenu'>
<method selector='addItem:'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='newItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addItemWithTitle:action:keyEquivalent:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='selector' type=':'/>
<arg declared_type='NSString * _Nonnull' index='2' name='charCode' type='@'/>
<retval declared_type='NSMenuItem * _Nonnull' type='@'/>
</method>
<method selector='allowsContextMenuPlugIns'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attachedMenu'>
<retval declared_type='NSMenu * _Null_unspecified' type='@'/>
</method>
<method selector='autoenablesItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelTracking'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelTrackingWithoutAnimation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='contextMenuRepresentation'>
<retval declared_type='id _Null_unspecified' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='font'>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='helpRequested:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='eventPtr' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='highlightedItem'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='indexOfItem:'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='object' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithSubmenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='submenu' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='actionSelector' type=':'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='decoder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertItem:atIndex:'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='newItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertItemWithTitle:action:keyEquivalent:atIndex:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='selector' type=':'/>
<arg declared_type='NSString * _Nonnull' index='2' name='charCode' type='@'/>
<arg declared_type='NSInteger' index='3' name='index' type='i' type64='q'/>
<retval declared_type='NSMenuItem * _Nonnull' type='@'/>
</method>
<method selector='isAttached'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTornOff'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemArray'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='itemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='itemChanged:'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='itemWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='itemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='locationForSubmenu:'>
<arg declared_type='NSMenu * _Null_unspecified' index='0' name='submenu' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='menuBarHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='menuBarVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menuChangedMessagesEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menuRepresentation'>
<retval declared_type='id _Null_unspecified' type='@'/>
</method>
<method class_method='true' selector='menuZone'>
<retval declared_type='NSZone * _Null_unspecified' type='^{_NSZone=}'/>
</method>
<method selector='minimumWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performActionForItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='popUpContextMenu:withEvent:forView:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='popUpContextMenu:withEvent:forView:withFont:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSView * _Nonnull' index='2' name='view' type='@'/>
<arg declared_type='NSFont * _Nullable' index='3' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popUpMenuPositioningItem:atLocation:inView:'>
<arg declared_type='NSMenuItem * _Nullable' index='0' name='item' type='@'/>
<arg declared_type='NSPoint' index='1' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nullable' index='2' name='view' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='propertiesToUpdate'>
<retval declared_type='NSMenuProperties' type='I' type64='Q'/>
</method>
<method selector='removeAllItems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItem:'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsContextMenuPlugIns:'>
<arg declared_type='BOOL' index='0' name='allowsContextMenuPlugIns' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoenablesItems:'>
<arg declared_type='BOOL' index='0' name='autoenablesItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContextMenuRepresentation:'>
<arg declared_type='id _Null_unspecified' index='0' name='menuRep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setMenuBarVisible:'>
<arg declared_type='BOOL' index='0' name='visible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuChangedMessagesEnabled:'>
<arg declared_type='BOOL' index='0' name='menuChangedMessagesEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuRepresentation:'>
<arg declared_type='id _Null_unspecified' index='0' name='menuRep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setMenuZone:'>
<arg declared_type='NSZone * _Null_unspecified' index='0' name='zone' type='^{_NSZone=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumWidth:'>
<arg declared_type='CGFloat' index='0' name='minimumWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsStateColumn:'>
<arg declared_type='BOOL' index='0' name='showsStateColumn' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubmenu:forItem:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<arg declared_type='NSMenuItem * _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSupermenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='supermenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTearOffMenuRepresentation:'>
<arg declared_type='id _Null_unspecified' index='0' name='menuRep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsStateColumn'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='size'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='submenuAction:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supermenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='tearOffMenuRepresentation'>
<retval declared_type='id _Null_unspecified' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='update'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type='NSUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
</class>
<class name='NSMenuItem'>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='allowsKeyEquivalentWhenHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='hasSubmenu'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='indentationLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='decoder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithTitle:action:keyEquivalent:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='selector' type=':'/>
<arg declared_type='NSString * _Nonnull' index='2' name='charCode' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isAlternate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHiddenOrHasHiddenAncestor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSeparatorItem'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyEquivalent'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval declared_type='NSEventModifierFlags' type='I' type64='Q'/>
</method>
<method selector='menu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='mixedStateImage'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='mnemonic'>
<retval declared_type='NSString * _Null_unspecified' type='@'/>
</method>
<method selector='mnemonicLocation'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='offStateImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='onStateImage'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='parentItem'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='representedObject'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='separatorItem'>
<retval declared_type='NSMenuItem * _Nonnull' type='@'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsKeyEquivalentWhenHidden:'>
<arg declared_type='BOOL' index='0' name='allowsKeyEquivalentWhenHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternate:'>
<arg declared_type='BOOL' index='0' name='alternate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndentationLevel:'>
<arg declared_type='NSInteger' index='0' name='indentationLevel' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyEquivalent:'>
<arg declared_type='NSString * _Nonnull' index='0' name='keyEquivalent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg declared_type='NSEventModifierFlags' index='0' name='keyEquivalentModifierMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMixedStateImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='mixedStateImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMnemonicLocation:'>
<arg declared_type='NSUInteger' index='0' name='location' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffStateImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='offStateImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOnStateImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='onStateImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='representedObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg declared_type='NSControlStateValue' index='0' name='state' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubmenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='submenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringWithAmpersand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTip' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setUsesUserKeyEquivalents:'>
<arg declared_type='BOOL' index='0' name='usesUserKeyEquivalents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='NSControlStateValue' type='i' type64='q'/>
</method>
<method selector='submenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='toolTip'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='userKeyEquivalent'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='usesUserKeyEquivalents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
</class>
<class name='NSMenuItemCell'>
<method selector='calcSize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawBorderAndBackgroundWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawImageWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawKeyEquivalentWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawSeparatorItemWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawStateImageWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawTitleWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='initTextCell:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='keyEquivalentRectForBounds:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='keyEquivalentWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='menuItem'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='menuView'>
<retval declared_type='NSMenuView * _Nonnull' type='@'/>
</method>
<method selector='needsDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='needsSizing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setMenuItem:'>
<arg declared_type='NSMenuItem * _Nullable' index='0' name='menuItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuView:'>
<arg declared_type='NSMenuView * _Nonnull' index='0' name='menuView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplay:'>
<arg declared_type='BOOL' index='0' name='needsDisplay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsSizing:'>
<arg declared_type='BOOL' index='0' name='needsSizing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stateImageRectForBounds:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='stateImageWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='titleRectForBounds:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='titleWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSMovie'>
<method selector='QTMovie'>
<retval declared_type='void*' declared_type64='QTMovie*' type='^v' type64='@'/>
</method>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method class_method='true' selector='canInitWithPasteboard:'>
<arg declared_type='NSPasteboard*' index='0' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithMovie:'>
<arg declared_type='void*' declared_type64='QTMovie*' index='0' name='movie' type='^v' type64='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPasteboard:'>
<arg declared_type='NSPasteboard*' index='0' name='pasteboard' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:byReference:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='BOOL' index='1' name='byRef' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='movieUnfilteredFileTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='movieUnfilteredPasteboardTypes'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='applyFontTraits:range:'>
<arg declared_type='NSFontTraitMask' index='0' name='traitMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fixAttachmentAttributeInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fixAttributesInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fixFontAttributeInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fixParagraphStyleAttributeInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readFromData:options:documentAttributes:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromData:options:documentAttributes:error:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='opts' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='options' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readFromURL:options:documentAttributes:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='opts' type='@'/>
<arg declared_type='NSDictionary * _Nullable * _Nullable' index='2' name='dict' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlignment:range:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:range:'>
<arg declared_type='NSWritingDirection' index='0' name='writingDirection' type='i' type64='q'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subscriptRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='superscriptRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscriptRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateAttachmentsFromPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableFontCollection'>
<method selector='addQueryForDescriptors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='descriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='exclusionDescriptors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithAllAvailableDescriptors'>
<retval declared_type='NSMutableFontCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithDescriptors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='queryDescriptors' type='@'/>
<retval declared_type='NSMutableFontCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithLocale:'>
<arg declared_type='NSLocale * _Nonnull' index='0' name='locale' type='@'/>
<retval declared_type='NSMutableFontCollection * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithName:'>
<arg declared_type='NSFontCollectionName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSMutableFontCollection * _Nullable' type='@'/>
</method>
<method class_method='true' selector='fontCollectionWithName:visibility:'>
<arg declared_type='NSFontCollectionName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSFontCollectionVisibility' index='1' name='visibility' type='I' type64='Q'/>
<retval declared_type='NSMutableFontCollection * _Nullable' type='@'/>
</method>
<method selector='queryDescriptors'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='removeQueryForDescriptors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='descriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExclusionDescriptors:'>
<arg declared_type='NSArray * _Nullable' index='0' name='exclusionDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueryDescriptors:'>
<arg declared_type='NSArray * _Nullable' index='0' name='queryDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableParagraphStyle'>
<method selector='addTabStop:'>
<arg declared_type='NSTextTab * _Nonnull' index='0' name='anObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='headIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='headerLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='I' type64='Q'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='removeTabStop:'>
<arg declared_type='NSTextTab * _Nonnull' index='0' name='anObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='baseWritingDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultTabInterval:'>
<arg declared_type='CGFloat' index='0' name='defaultTabInterval' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFirstLineHeadIndent:'>
<arg declared_type='CGFloat' index='0' name='firstLineHeadIndent' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeadIndent:'>
<arg declared_type='CGFloat' index='0' name='headIndent' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderLevel:'>
<arg declared_type='NSInteger' index='0' name='headerLevel' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type='float' index='0' name='hyphenationFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineHeightMultiple:'>
<arg declared_type='CGFloat' index='0' name='lineHeightMultiple' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineSpacing:'>
<arg declared_type='CGFloat' index='0' name='lineSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumLineHeight:'>
<arg declared_type='CGFloat' index='0' name='maximumLineHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumLineHeight:'>
<arg declared_type='CGFloat' index='0' name='minimumLineHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphSpacing:'>
<arg declared_type='CGFloat' index='0' name='paragraphSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphSpacingBefore:'>
<arg declared_type='CGFloat' index='0' name='paragraphSpacingBefore' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphStyle:'>
<arg declared_type='NSParagraphStyle * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabStops:'>
<arg declared_type='NSArray * _Nullable' index='0' name='tabStops' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTailIndent:'>
<arg declared_type='CGFloat' index='0' name='tailIndent' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextBlocks:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textBlocks' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextLists:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='textLists' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTighteningFactorForTruncation:'>
<arg declared_type='float' index='0' name='tighteningFactorForTruncation' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabStops'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='textBlocks'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textLists'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tighteningFactorForTruncation'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='NSNib'>
<method selector='initWithContentsOfURL:'>
<arg declared_type='NSURL * _Null_unspecified' index='0' name='nibFileURL' type='@'/>
<retval declared_type='id _Null_unspecified' type='@'/>
</method>
<method selector='initWithNibData:bundle:'>
<arg declared_type='NSData * _Nonnull' index='0' name='nibData' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNibNamed:bundle:'>
<arg declared_type='NSNibName _Nonnull' index='0' name='nibName' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='bundle' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='instantiateNibWithExternalNameTable:'>
<arg declared_type='NSDictionary * _Null_unspecified' index='0' name='externalNameTable' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='instantiateNibWithOwner:topLevelObjects:'>
<arg declared_type='id _Null_unspecified' index='0' name='owner' type='@'/>
<arg declared_type='NSArray * _Null_unspecified * _Null_unspecified' index='1' name='topLevelObjects' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='instantiateWithOwner:topLevelObjects:'>
<arg declared_type='id _Nullable' index='0' name='owner' type='@'/>
<arg declared_type='NSArray * _Nullable * _Nullable' index='1' name='topLevelObjects' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSNibConnector'>
<method selector='destination'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='establishConnection'>
<retval declared_type='void' type='v'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='replaceObject:withObject:'>
<arg declared_type='id _Nonnull' index='0' name='oldObject' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='newObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestination:'>
<arg declared_type='id _Nullable' index='0' name='destination' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nonnull' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSource:'>
<arg declared_type='id _Nullable' index='0' name='source' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='source'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='NSNibControlConnector'>
<method selector='establishConnection'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSNibOutletConnector'>
<method selector='establishConnection'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='accessibilityActionDescription:'>
<arg declared_type='NSAccessibilityActionName _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityActionNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityActivationPoint'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityAllowedValues'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityApplicationFocusedUIElement'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityArrayAttributeCount:'>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='accessibilityArrayAttributeValues:index:maxCount:'>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='maxCount' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityAttributeNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityAttributeValue:'>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributeValue:forParameter:'>
<arg declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<arg declared_type='id _Nullable' index='1' name='parameter' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedStringForRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityCancelButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityCellForColumn:row:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityChildren'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityChildrenInNavigationOrder'>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='accessibilityClearButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityCloseButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityColumnCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityColumnHeaderUIElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityColumnIndexRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityColumnTitles'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityColumns'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityContents'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityCriticalValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityCustomActions'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityCustomRotors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityDecrementButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDefaultButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDisclosedByRow'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDisclosedRows'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDisclosureLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityDocument'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityElementWithToken:'>
<arg declared_type='NSAccessibilityLoadingToken _Nonnull' index='0' name='token' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityExtrasMenuBar'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityFilename'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityFocusedUIElement'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='accessibilityFocusedWindow'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFrameForRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFullScreenButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityGrowArea'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHandles'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityHeader'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHeaderGroup'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityHelp'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityHitTest:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHorizontalScrollBar'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHorizontalUnitDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityHorizontalUnits'>
<retval declared_type='NSAccessibilityUnits' type='i' type64='q'/>
</method>
<method selector='accessibilityIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityIncrementButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityIndexOfChild:'>
<arg declared_type='id _Nonnull' index='0' name='child' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='accessibilityInsertionPointLineNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityIsAttributeSettable:'>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityIsIgnored'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityLabel'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityLabelUIElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityLabelValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='accessibilityLayoutPointForScreenPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityLayoutSizeForScreenSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='accessibilityLineForIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityLinkedUIElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityMainWindow'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMarkerGroupUIElement'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMarkerTypeDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityMarkerUIElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityMarkerValues'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMaxValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMenuBar'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMinValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMinimizeButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityNextContents'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityNotifiesWhenDestroyed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityNumberOfCharacters'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityOrientation'>
<retval declared_type='NSAccessibilityOrientation' type='i' type64='q'/>
</method>
<method selector='accessibilityOverflowButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityParameterizedAttributeNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityParent'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityPerformAction:'>
<arg declared_type='NSAccessibilityActionName _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityPerformCancel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformConfirm'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformDecrement'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformDelete'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformIncrement'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformPick'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformPress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformRaise'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformShowAlternateUI'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformShowDefaultUI'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformShowMenu'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPlaceholderValue'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityPreviousContents'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityProxy'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityRTFForRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='accessibilityRangeForIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeForLine:'>
<arg declared_type='NSInteger' index='0' name='line' type='i' type64='q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeForPosition:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeInTargetElementWithToken:'>
<arg declared_type='NSAccessibilityLoadingToken _Nonnull' index='0' name='token' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRole'>
<retval declared_type='NSAccessibilityRole _Nullable' type='@'/>
</method>
<method selector='accessibilityRoleDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityRowCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityRowHeaderUIElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityRowIndexRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRows'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityRulerMarkerType'>
<retval declared_type='NSAccessibilityRulerMarkerType' type='i' type64='q'/>
</method>
<method selector='accessibilityScreenPointForLayoutPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityScreenSizeForLayoutSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='accessibilitySearchButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilitySearchMenu'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedCells'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedChildren'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedColumns'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedRows'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedText'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedTextRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySelectedTextRanges'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityServesAsTitleForUIElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySetOverrideValue:forAttribute:'>
<arg declared_type='id _Nullable' index='0' name='value' type='@'/>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='1' name='attribute' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilitySetValue:forAttribute:'>
<arg declared_type='id _Nullable' index='0' name='value' type='@'/>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='1' name='attribute' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilitySharedCharacterRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySharedFocusElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySharedTextUIElements'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityShownMenu'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilitySortDirection'>
<retval declared_type='NSAccessibilitySortDirection' type='i' type64='q'/>
</method>
<method selector='accessibilitySplitters'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityStringForRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityStyleRangeForIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySubrole'>
<retval declared_type='NSAccessibilitySubrole _Nullable' type='@'/>
</method>
<method selector='accessibilityTabs'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityTitleUIElement'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityToolbarButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityTopLevelUIElement'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='accessibilityUnitDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityUnits'>
<retval declared_type='NSAccessibilityUnits' type='i' type64='q'/>
</method>
<method selector='accessibilityValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityValueDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityVerticalScrollBar'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityVerticalUnitDescription'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityVerticalUnits'>
<retval declared_type='NSAccessibilityUnits' type='i' type64='q'/>
</method>
<method selector='accessibilityVisibleCells'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleCharacterRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityVisibleChildren'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleColumns'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleRows'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityWarningValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityWindow'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityWindows'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityZoomButton'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='activeCompressionOptions'>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method selector='activeConversationChanged:toNewConversation:'>
<arg declared_type='id _Null_unspecified' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='newConversation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='activeConversationWillChange:fromOldConversation:'>
<arg declared_type='id _Null_unspecified' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='oldConversation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alertShowHelp:'>
<arg declared_type='NSAlert * _Nonnull' index='0' name='alert' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alphaControlAddedOrRemoved:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchoringViewForSharingService:showRelativeToRect:preferredEdge:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSRect * _Nonnull' index='1' name='positioningRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRectEdge * _Nonnull' index='2' name='preferredEdge' type='^i' type64='^Q'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='animateDismissalOfViewController:fromViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='NSViewController * _Nonnull' index='1' name='fromViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animatePresentationOfViewController:fromViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='NSViewController * _Nonnull' index='1' name='fromViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animatesToDestination'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animation:didReachProgressMark:'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<arg declared_type='NSAnimationProgress' index='1' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animation:valueForProgress:'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<arg declared_type='NSAnimationProgress' index='1' name='progress' type='f'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='animationDidEnd:'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDidStop:'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationForKey:'>
<arg declared_type='NSAnimatablePropertyKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='animationShouldStart:'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animations'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='animator'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='appearance'>
<retval declared_type='NSAppearance * _Nullable' type='@'/>
</method>
<method selector='application:continueUserActivity:restorationHandler:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSUserActivity * _Nonnull' index='1' name='userActivity' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='2' name='restorationHandler' type='@?'>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:delegateHandlesKey:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:didDecodeRestorableState:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='app' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFailToContinueUserActivityWithType:error:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='userActivityType' type='@'/>
<arg declared_type='NSError * _Nonnull' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didReceiveRemoteNotification:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSData * _Nonnull' index='1' name='deviceToken' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didUpdateUserActivity:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSUserActivity * _Nonnull' index='1' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:openFile:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:openFileWithoutUI:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:openFiles:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='filenames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:openTempFile:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:openURLs:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='urls' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:printFile:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:printFiles:withSettings:showPrintPanels:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='fileNames' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='printSettings' type='@'/>
<arg declared_type='BOOL' index='3' name='showPrintPanels' type='B'/>
<retval declared_type='NSApplicationPrintReply' type='I' type64='Q'/>
</method>
<method selector='application:userDidAcceptCloudKitShareWithMetadata:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='CKShareMetadata * _Nonnull' index='1' name='metadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willContinueUserActivityWithType:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='userActivityType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:willEncodeRestorableState:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='app' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willPresentError:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='NSError * _Nonnull' type='@'/>
</method>
<method selector='applicationDidBecomeActive:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidChangeOcclusionState:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidChangeScreenParameters:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidFinishLaunching:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidHide:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidResignActive:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidUnhide:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidUpdate:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDockMenu:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='applicationOpenUntitledFile:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationShouldHandleReopen:hasVisibleWindows:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationShouldOpenUntitledFile:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationShouldTerminate:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='NSApplicationTerminateReply' type='I' type64='Q'/>
</method>
<method selector='applicationShouldTerminateAfterLastWindowClosed:'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationWillBecomeActive:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillFinishLaunching:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillHide:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillResignActive:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillTerminate:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillUnhide:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillUpdate:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyLayoutAttributes:'>
<arg declared_type='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attachColorList:'>
<arg declared_type='NSColorList * _Nonnull' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attachment'>
<retval declared_type='NSTextAttachment * _Nullable' type='@'/>
</method>
<method selector='attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type='NSTextContainer * _Nullable' index='0' name='textContainer' type='@'/>
<arg declared_type='NSRect' index='1' name='lineFrag' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGPoint' index='2' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='attributedString'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='attributedSubstringForProposedRange:actualRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='attributedSubstringFromRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSAttributedString * _Null_unspecified' type='@'/>
</method>
<method selector='awakeFromNib'>
<retval declared_type='void' type='v'/>
</method>
<method selector='baselineDeltaForCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='anIndex' type='I' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='bind:toObject:withKeyPath:options:'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='observable' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='keyPath' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='options' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:acceptDrop:atRow:column:dropOperation:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='column' type='i' type64='q'/>
<arg declared_type='NSBrowserDropOperation' index='4' name='dropOperation' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:child:ofItem:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='browser:createRowsForColumn:inMatrix:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<arg declared_type='NSMatrix * _Nonnull' index='2' name='matrix' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:didChangeLastColumn:toColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='oldLastColumn' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='4' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='browser:headerViewControllerForItem:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='browser:heightOfRow:inColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='columnIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='browser:isColumnValid:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:isLeafItem:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropDestination' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='2' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='3' name='column' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='startRow' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='endRow' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='column' type='i' type64='q'/>
<arg declared_type='NSString * _Nullable' index='4' name='searchString' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='browser:numberOfChildrenOfItem:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='browser:numberOfRowsInColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='browser:objectValueForItem:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='browser:previewViewControllerForLeafItem:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='browser:selectCellWithString:inColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='title' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:selectRow:inColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:selectionIndexesForProposedSelection:inColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='browser:setObjectValue:forItem:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:shouldEditItem:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:shouldShowCellExpansionForRow:column:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:shouldSizeColumn:forUserResize:toWidth:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='forUserResize' type='B'/>
<arg declared_type='CGFloat' index='3' name='suggestedWidth' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='searchString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:sizeToFitWidthOfColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='browser:titleOfColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='browser:typeSelectStringForRow:inColumn:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='browser:validateDrop:proposedRow:column:dropOperation:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='NSInteger * _Nonnull' index='2' name='row' type='^i' type64='^q'/>
<arg declared_type='NSInteger * _Nonnull' index='3' name='column' type='^i' type64='^q'/>
<arg declared_type='NSBrowserDropOperation * _Nonnull' index='4' name='dropOperation' type='^I' type64='^Q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='browser:willDisplayCell:atRow:column:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<arg declared_type='NSPasteboard * _Nonnull' index='3' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browserColumnConfigurationDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browserDidScroll:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browserWillScroll:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='buttonToolTip'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='canBeDisabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='candidateListTouchBarItem:beginSelectingCandidateAtIndex:'>
<arg declared_type='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='candidateListTouchBarItem:changeSelectionFromCandidateAtIndex:toIndex:'>
<arg declared_type='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='previousIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='candidateListTouchBarItem:changedCandidateListVisibility:'>
<arg declared_type='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type='@'/>
<arg declared_type='BOOL' index='1' name='isVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='candidateListTouchBarItem:endSelectingCandidateAtIndex:'>
<arg declared_type='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cellBaselineOffset'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='textContainer' type='@'/>
<arg declared_type='NSRect' index='1' name='lineFrag' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' index='2' name='position' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cellSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='changeColor:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeFont:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeSpelling:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='characterIndexForPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='cloudShareForUserInterfaceItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='CKShare * _Nullable' type='@'/>
</method>
<method selector='collectionView:acceptDrop:index:dropOperation:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<arg declared_type='NSCollectionViewDropOperation' index='3' name='dropOperation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:acceptDrop:indexPath:dropOperation:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='NSCollectionViewDropOperation' index='3' name='dropOperation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexPaths:withEvent:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexes:withEvent:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='indexes' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:cancelPrefetchingForItemsAtIndexPaths:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didChangeItemsAtIndexPaths:toHighlightState:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSCollectionViewItemHighlightState' index='2' name='highlightState' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didDeselectItemsAtIndexPaths:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='2' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='3' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didSelectItemsAtIndexPaths:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexes:withEvent:offset:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='indexes' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='collectionView:draggingSession:endedAtPoint:dragOperation:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='3' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSSet * _Nonnull' index='3' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSIndexSet * _Nonnull' index='3' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:itemForRepresentedObjectAtIndexPath:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewItem * _Nonnull' type='@'/>
</method>
<method selector='collectionView:layout:insetForSectionAtIndex:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='collectionView:layout:minimumInteritemSpacingForSectionAtIndex:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='collectionView:layout:minimumLineSpacingForSectionAtIndex:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='collectionView:layout:referenceSizeForFooterInSection:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:referenceSizeForHeaderInSection:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:sizeForItemAtIndexPath:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropURL' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='2' name='indexPaths' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropURL' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='2' name='indexes' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='collectionView:numberOfItemsInSection:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndex:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndexPath:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='collectionView:prefetchItemsAtIndexPaths:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:shouldChangeItemsAtIndexPaths:toHighlightState:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSCollectionViewItemHighlightState' index='2' name='highlightState' type='i' type64='q'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='collectionView:shouldDeselectItemsAtIndexPaths:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='collectionView:shouldSelectItemsAtIndexPaths:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='collectionView:transitionLayoutForOldLayout:newLayout:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='fromLayout' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='2' name='toLayout' type='@'/>
<retval declared_type='NSCollectionViewTransitionLayout * _Nonnull' type='@'/>
</method>
<method selector='collectionView:updateDraggingItemsForDrag:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:validateDrop:proposedIndex:dropOperation:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<arg declared_type='NSInteger * _Nonnull' index='2' name='proposedDropIndex' type='^i' type64='^q'/>
<arg declared_type='NSCollectionViewDropOperation * _Nonnull' index='3' name='proposedDropOperation' type='^i' type64='^q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='collectionView:validateDrop:proposedIndexPath:dropOperation:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull * _Nonnull' index='2' name='proposedDropIndexPath' type='^@'/>
<arg declared_type='NSCollectionViewDropOperation * _Nonnull' index='3' name='proposedDropOperation' type='^i' type64='^q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='collectionView:viewForSupplementaryElementOfKind:atIndexPath:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='1' name='kind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='NSView * _Nonnull' type='@'/>
</method>
<method selector='collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='2' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='3' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:writeItemsAtIndexPaths:toPasteboard:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:writeItemsAtIndexes:toPasteboard:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='indexes' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='comboBox:completedString:'>
<arg declared_type='NSComboBox * _Nonnull' index='0' name='comboBox' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='comboBox:indexOfItemWithStringValue:'>
<arg declared_type='NSComboBox * _Nonnull' index='0' name='comboBox' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='comboBox:objectValueForItemAtIndex:'>
<arg declared_type='NSComboBox * _Nonnull' index='0' name='comboBox' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='comboBoxCell:completedString:'>
<arg declared_type='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='uncompletedString' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='comboBoxCell:indexOfItemWithStringValue:'>
<arg declared_type='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='comboBoxCell:objectValueForItemAtIndex:'>
<arg declared_type='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='comboBoxSelectionDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='comboBoxSelectionIsChanging:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='comboBoxWillDismiss:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='comboBoxWillPopUp:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='commitEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitEditingAndReturnError:'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='didCommitSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compressWithPrioritizedCompressionOptions:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='prioritizedOptions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='concludeDragOperation:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='confinementRectForMenu:onScreen:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSScreen * _Nullable' index='1' name='screen' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='contentViewAtIndex:effectiveCharacterRange:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nonnull' index='1' name='outRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSView * _Nonnull' type='@'/>
</method>
<method selector='control:didFailToFormatString:errorDescription:'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='error' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='control:didFailToValidatePartialString:errorDescription:'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='control:isValidObject:'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='id _Nullable' index='1' name='obj' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='control:textShouldBeginEditing:'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSText * _Nonnull' index='1' name='fieldEditor' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='control:textShouldEndEditing:'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSText * _Nonnull' index='1' name='fieldEditor' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='words' type='@'/>
<arg declared_type='NSRange' index='3' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger * _Nonnull' index='4' name='index' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='control:textView:doCommandBySelector:'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='SEL _Nonnull' index='2' name='commandSelector' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='controlTextDidBeginEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='controlTextDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='controlTextDidEndEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='conversationIdentifier'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='currentMode'>
<retval declared_type='NSColorPanelMode' type='i' type64='q'/>
</method>
<method selector='customWindowsToEnterFullScreenForWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='customWindowsToEnterFullScreenForWindow:onScreen:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSScreen * _Nonnull' index='1' name='screen' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='customWindowsToExitFullScreenForWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='datePickerCell:validateProposedDateValue:timeInterval:'>
<arg declared_type='NSDatePickerCell * _Nonnull' index='0' name='datePickerCell' type='@'/>
<arg declared_type='NSDate * _Nonnull * _Nonnull' index='1' name='proposedDateValue' type='^@'/>
<arg declared_type='NSTimeInterval * _Nullable' index='2' name='proposedTimeInterval' type='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultAnimationForKey:'>
<arg declared_type='NSAnimatablePropertyKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='defaultPlaceholderForMarker:withBinding:'>
<arg declared_type='id _Nullable' index='0' name='marker' type='@'/>
<arg declared_type='NSBindingName _Nonnull' index='1' name='binding' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='detachColorList:'>
<arg declared_type='NSColorList * _Nonnull' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='detachableWindowForPopover:'>
<arg declared_type='NSPopover * _Nonnull' index='0' name='popover' type='@'/>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='didBeginInteractingWithScrubber:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didCancelInteractingWithScrubber:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFinishInteractingWithScrubber:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didReplaceCharacters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didTransitionFromLayout:toLayout:'>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='doCommandBySelector:'>
<arg declared_type='SEL _Null_unspecified' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doCommandBySelector:client:'>
<arg declared_type='SEL _Null_unspecified' index='0' name='selector' type=':'/>
<arg declared_type='id _Null_unspecified' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dockMenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='draggedImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='draggedImage:beganAt:'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggedImage:endedAt:deposited:'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggedImage:endedAt:operation:'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggedImage:movedTo:'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggedImageLocation'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingDestinationWindow'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='draggingEnded:'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingEntered:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='draggingExited:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingFormation'>
<retval declared_type='NSDraggingFormation' type='i' type64='q'/>
</method>
<method selector='draggingLocation'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingPasteboard'>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method selector='draggingSequenceNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='draggingSession:endedAtPoint:operation:'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingSession:movedToPoint:'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingSession:sourceOperationMaskForDraggingContext:'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSDraggingContext' index='1' name='context' type='i' type64='q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='draggingSession:willBeginAtPoint:'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='draggingSourceOperationMask'>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='draggingSourceOperationMaskForLocal:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='draggingUpdated:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='drawCharactersInRange:forContentView:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='1' name='controlView' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:layoutManager:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='1' name='controlView' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<arg declared_type='NSLayoutManager * _Nonnull' index='3' name='layoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerDidClose:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerDidOpen:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerShouldClose:'>
<arg declared_type='NSDrawer * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawerShouldOpen:'>
<arg declared_type='NSDrawer * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawerWillClose:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerWillOpen:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerWillResizeContents:toSize:'>
<arg declared_type='NSDrawer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSSize' index='1' name='contentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawsVerticallyForCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='effectiveAppearance'>
<retval declared_type='NSAppearance * _Nonnull' type='@'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'>
<arg declared_type='NSDraggingItemEnumerationOptions' index='0' name='enumOpts' type='I' type64='Q'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='classArray' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='searchOptions' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSDraggingItem * _Nonnull, NSInteger, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type='@?'>
<arg declared_type='NSDraggingItem * _Nonnull' type='@'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='exposeBinding:'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='exposedBindings'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='filePromiseProvider:fileNameForType:'>
<arg declared_type='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='fileType' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='filePromiseProvider:writePromiseToURL:completionHandler:'>
<arg declared_type='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='findBarView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='findBarViewDidChangeHeight'>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstRectForCharacterRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='firstRectForCharacterRange:actualRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='firstSelectedRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='fontManager:willIncludeFont:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='fontName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='gestureRecognizer:shouldAttemptToRecognizeWithEvent:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSTouch * _Nonnull' index='1' name='touch' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldRequireFailureOfGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizerShouldBegin:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasMarkedText'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='highlight:withFrame:inView:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='2' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='identifier'>
<retval declared_type='NSUserInterfaceItemIdentifier _Nullable' type='@'/>
</method>
<method selector='ignoreModifierKeysForDraggingSession:'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ignoreModifierKeysWhileDragging'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ignoreSpelling:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image:didLoadPartOfRepresentation:withValidRows:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSImageRep * _Nonnull' index='1' name='rep' type='@'/>
<arg declared_type='NSInteger' index='2' name='rows' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image:didLoadRepresentation:withStatus:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSImageRep * _Nonnull' index='1' name='rep' type='@'/>
<arg declared_type='NSImageLoadStatus' index='2' name='status' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image:didLoadRepresentationHeader:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSImageRep * _Nonnull' index='1' name='rep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image:willLoadRepresentation:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSImageRep * _Nonnull' index='1' name='rep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageDidNotDraw:inRect:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='imageForBounds:textContainer:characterIndex:'>
<arg declared_type='NSRect' index='0' name='imageBounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='infoForBinding:'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='initWithPasteboardPropertyList:ofType:'>
<arg declared_type='id _Nonnull' index='0' name='propertyList' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithPickerMask:colorPanel:'>
<arg declared_type='NSUInteger' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='NSColorPanel * _Nonnull' index='1' name='owningColorPanel' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='inputClientBecomeActive:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputClientDisabled:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputClientEnabled:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputClientResignActive:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
<arg const='true' declared_type='NSGlyph * _Nonnull' index='0' name='glyphs' type='^I'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertNewButtonImage:in:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='newButtonImage' type='@'/>
<arg declared_type='NSButtonCell * _Nonnull' index='1' name='buttonCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertText:'>
<arg declared_type='id _Null_unspecified' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertText:client:'>
<arg declared_type='id _Null_unspecified' index='0' name='string' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertText:replacementRange:'>
<arg declared_type='id _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSRange' index='1' name='replacementRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isAccessibilityAlternateUIVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityDisclosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityEdited'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityElement'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityExpanded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityFocused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityFrontmost'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityMain'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityMinimized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityModal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityOrderedByRow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityProtectedContent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilitySelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilitySelectorAllowed:'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFindBarVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemsForSharingServicePickerTouchBarItem:'>
<arg declared_type='NSSharingServicePickerTouchBarItem * _Nonnull' index='0' name='pickerTouchBarItem' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='keyPathsForValuesAffectingPreview'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='layer:shouldInheritContentsScale:fromWindow:'>
<arg declared_type='CALayer * _Nonnull' index='0' name='layer' type='@'/>
<arg declared_type='CGFloat' index='1' name='newScale' type='f' type64='d'/>
<arg declared_type='NSWindow * _Nonnull' index='2' name='window' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='textContainer' type='@'/>
<arg declared_type='NSRect' index='3' name='proposedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' index='4' name='glyphPosition' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='5' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<arg declared_type='BOOL' index='2' name='layoutFinishedFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='1' name='glyphs' type='^S'/>
<arg const='true' declared_type='NSGlyphProperty * _Nonnull' index='2' name='props' type='^i' type64='^q'/>
<arg const='true' declared_type='NSUInteger * _Nonnull' index='3' name='charIndexes' type='^I' type64='^Q'/>
<arg declared_type='NSFont * _Nonnull' index='4' name='aFont' type='@'/>
<arg declared_type='NSRange' index='5' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSRect * _Nonnull' index='1' name='lineFragmentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect * _Nonnull' index='2' name='lineFragmentUsedRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat * _Nonnull' index='3' name='baselineOffset' type='^f' type64='^d'/>
<arg declared_type='NSTextContainer * _Nonnull' index='4' name='textContainer' type='@'/>
<arg declared_type='NSRange' index='5' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldUseAction:forControlCharacterAtIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSControlCharacterAction' index='1' name='action' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSControlCharacterAction' type='i' type64='q'/>
</method>
<method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='attrs' type='@'/>
<arg declared_type='BOOL' index='2' name='toScreen' type='B'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='4' name='effectiveCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='layoutManager:textContainer:didChangeGeometryFromSize:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='textContainer' type='@'/>
<arg declared_type='NSSize' index='2' name='oldSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutOptions'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='layoutOrientation'>
<retval declared_type='NSTextLayoutOrientation' type='i' type64='q'/>
</method>
<method selector='localizedSummaryItems'>
<retval declared_type='NSArray *&gt; * _Nonnull' type='@'/>
</method>
<method selector='localizedTitlesForItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='markedRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='markedTextAbandoned:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='markedTextSelectionChanged:client:'>
<arg declared_type='NSRange' index='0' name='newSel' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='id _Null_unspecified' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='menu:updateItem:atIndex:shouldCancel:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSMenuItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<arg declared_type='BOOL' index='3' name='shouldCancel' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menu:willHighlightItem:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSMenuItem * _Nullable' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='menuDidClose:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='menuHasKeyEquivalent:forEvent:target:action:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='id _Nullable * _Nonnull' index='2' name='target' type='^@'/>
<arg declared_type='SEL _Nullable * _Nonnull' index='3' name='action' type='^:'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menuNeedsUpdate:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='menuWillOpen:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='minContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='minimumSizeWithPrioritizedCompressionOptions:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='prioritizedOptions' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='id _Null_unspecified' index='3' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='id _Null_unspecified' index='3' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='id _Null_unspecified' index='3' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='namesOfPromisedFilesDroppedAtDestination:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='dropDestination' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='numberOfItemsForScrubber:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfItemsInComboBox:'>
<arg declared_type='NSComboBox * _Nonnull' index='0' name='comboBox' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfItemsInComboBoxCell:'>
<arg declared_type='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfItemsInMenu:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfRowsInTableView:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSectionsInCollectionView:'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfValidItemsForDrop'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='objectDidBeginEditing:'>
<arg declared_type='id _Nonnull' index='0' name='editor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectDidEndEditing:'>
<arg declared_type='id _Nonnull' index='0' name='editor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='operationQueueForFilePromiseProvider:'>
<arg declared_type='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type='@'/>
<retval declared_type='NSOperationQueue * _Nonnull' type='@'/>
</method>
<method selector='optionDescriptionsForBinding:'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='optionsForSharingService:shareProvider:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='cloudKitSharingService' type='@'/>
<arg declared_type='NSItemProvider * _Nonnull' index='1' name='provider' type='@'/>
<retval declared_type='NSCloudKitSharingServiceOptions' type='I' type64='Q'/>
</method>
<method selector='outlineView:acceptDrop:item:childIndex:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<arg declared_type='NSInteger' index='3' name='index' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:child:ofItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='outlineView:dataCellForTableColumn:item:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='NSCell * _Nullable' type='@'/>
</method>
<method selector='outlineView:didAddRowView:forRow:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableRowView * _Nonnull' index='1' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:didClickTableColumn:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:didDragTableColumn:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:didRemoveRowView:forRow:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableRowView * _Nonnull' index='1' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:draggingSession:endedAtPoint:operation:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='3' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:draggingSession:willBeginAtPoint:forItems:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSArray * _Nonnull' index='3' name='draggedItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:heightOfRowByItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='outlineView:isGroupItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:isItemExpandable:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:itemForPersistentObject:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:mouseDownInHeaderOfTableColumn:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropDestination' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='items' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='startItem' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='endItem' type='@'/>
<arg declared_type='NSString * _Nonnull' index='3' name='searchString' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:numberOfChildrenOfItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='outlineView:objectValueForTableColumn:byItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:pasteboardWriterForItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:persistentObjectForItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:rowViewForItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='NSTableRowView * _Nullable' type='@'/>
</method>
<method selector='outlineView:selectionIndexesForProposedSelection:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type='@'/>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='outlineView:setObjectValue:forTableColumn:byItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='id _Nullable' index='3' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:shouldCollapseItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldEditTableColumn:item:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldExpandItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldReorderColumn:toColumn:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='newColumnIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldSelectItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldSelectTableColumn:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldShowCellExpansionForTableColumn:item:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldShowOutlineCellForItem:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldTrackCell:forTableColumn:item:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='3' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='searchString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:sizeToFitWidthOfColumn:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='outlineView:sortDescriptorsDidChange:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='oldDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRectPointer _Nonnull' index='2' name='rect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTableColumn * _Nullable' index='3' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='4' name='item' type='@'/>
<arg declared_type='NSPoint' index='5' name='mouseLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='outlineView:typeSelectStringForTableColumn:item:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='outlineView:updateDraggingItemsForDrag:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<arg declared_type='NSInteger' index='3' name='index' type='i' type64='q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='outlineView:viewForTableColumn:item:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='outlineView:willDisplayCell:forTableColumn:item:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='3' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='3' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:writeItems:toPasteboard:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineViewColumnDidMove:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewColumnDidResize:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewItemDidCollapse:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewItemDidExpand:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewItemWillCollapse:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewItemWillExpand:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewSelectionDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewSelectionIsChanging:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageController:didTransitionToObject:'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageController:frameForObject:'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='pageController:identifierForObject:'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='NSPageControllerObjectIdentifier _Nonnull' type='@'/>
</method>
<method selector='pageController:prepareViewController:withObject:'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='NSViewController * _Nonnull' index='1' name='viewController' type='@'/>
<arg declared_type='id _Nullable' index='2' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageController:viewControllerForIdentifier:'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='NSPageControllerObjectIdentifier _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='NSViewController * _Nonnull' type='@'/>
</method>
<method selector='pageControllerDidEndLiveTransition:'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageControllerWillStartLiveTransition:'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panel:compareFilename:with:caseSensitive:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='name1' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='name2' type='@'/>
<arg declared_type='BOOL' index='3' name='caseSensitive' type='B'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='panel:didChangeToDirectoryURL:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSURL * _Nullable' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panel:directoryDidChange:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panel:isValidFilename:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panel:shouldEnableURL:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panel:shouldShowFilename:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panel:userEnteredFilename:confirmed:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<arg declared_type='BOOL' index='2' name='okFlag' type='B'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='panel:validateURL:error:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panel:willExpand:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='BOOL' index='1' name='expanding' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panelSelectionDidChange:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteboard:item:provideDataForType:'>
<arg declared_type='NSPasteboard * _Nullable' index='0' name='pasteboard' type='@'/>
<arg declared_type='NSPasteboardItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='2' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteboard:provideDataForType:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteboardChangedOwner:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteboardFinishedWithDataProvider:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteboardPropertyListForType:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='pathCell:willDisplayOpenPanel:'>
<arg declared_type='NSPathCell * _Nonnull' index='0' name='pathCell' type='@'/>
<arg declared_type='NSOpenPanel * _Nonnull' index='1' name='openPanel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pathCell:willPopUpMenu:'>
<arg declared_type='NSPathCell * _Nonnull' index='0' name='pathCell' type='@'/>
<arg declared_type='NSMenu * _Nonnull' index='1' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pathControl:acceptDrop:'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathControl:shouldDragItem:withPasteboard:'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='NSPathControlItem * _Nonnull' index='1' name='pathItem' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathControl:shouldDragPathComponentCell:withPasteboard:'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='NSPathComponentCell * _Nonnull' index='1' name='pathComponentCell' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathControl:validateDrop:'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='pathControl:willDisplayOpenPanel:'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='NSOpenPanel * _Nonnull' index='1' name='openPanel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pathControl:willPopUpMenu:'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='NSMenu * _Nonnull' index='1' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performActionForItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performDragOperation:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performFeedbackPattern:performanceTime:'>
<arg declared_type='NSHapticFeedbackPattern' index='0' name='pattern' type='i' type64='q'/>
<arg declared_type='NSHapticFeedbackPerformanceTime' index='1' name='performanceTime' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performSegueWithIdentifier:sender:'>
<arg declared_type='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverDidClose:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverDidDetach:'>
<arg declared_type='NSPopover * _Nonnull' index='0' name='popover' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverDidShow:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverShouldClose:'>
<arg declared_type='NSPopover * _Nonnull' index='0' name='popover' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='popoverShouldDetach:'>
<arg declared_type='NSPopover * _Nonnull' index='0' name='popover' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='popoverWillClose:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverWillShow:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredLayoutAttributesFittingAttributes:'>
<arg declared_type='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nonnull' type='@'/>
</method>
<method selector='prepareForDragOperation:'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareForInterfaceBuilder'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForSegue:sender:'>
<arg declared_type='NSStoryboardSegue * _Nonnull' index='0' name='segue' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='provideNewButtonImage'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='provideNewView:'>
<arg declared_type='BOOL' index='0' name='initialRequest' type='B'/>
<retval declared_type='NSView * _Nonnull' type='@'/>
</method>
<method selector='readSelectionFromPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='readableTypesForPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='readingOptionsForType:pasteboard:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pasteboard' type='@'/>
<retval declared_type='NSPasteboardReadingOptions' type='I' type64='Q'/>
</method>
<method selector='rectsForCharacterRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetSpringLoading'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='restoreWindowWithIdentifier:state:completionHandler:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='state' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSWindow * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSWindow * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='rootItemForBrowser:'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='rotor:resultForSearchParameters:'>
<arg declared_type='NSAccessibilityCustomRotor * _Nonnull' index='0' name='rotor' type='@'/>
<arg declared_type='NSAccessibilityCustomRotorSearchParameters * _Nonnull' index='1' name='searchParameters' type='@'/>
<retval declared_type='NSAccessibilityCustomRotorItemResult * _Nullable' type='@'/>
</method>
<method selector='ruleEditor:child:forCriterion:withRowType:'>
<arg declared_type='NSRuleEditor * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='criterion' type='@'/>
<arg declared_type='NSRuleEditorRowType' index='3' name='rowType' type='I' type64='Q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='ruleEditor:displayValueForCriterion:inRow:'>
<arg declared_type='NSRuleEditor * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='criterion' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='ruleEditor:numberOfChildrenForCriterion:withRowType:'>
<arg declared_type='NSRuleEditor * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='id _Nullable' index='1' name='criterion' type='@'/>
<arg declared_type='NSRuleEditorRowType' index='2' name='rowType' type='I' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:'>
<arg declared_type='NSRuleEditor * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='criterion' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='value' type='@'/>
<arg declared_type='NSInteger' index='3' name='row' type='i' type64='q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='ruleEditorRowsDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubber:didChangeVisibleRange:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSRange' index='1' name='visibleRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubber:didHighlightItemAtIndex:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSInteger' index='1' name='highlightedIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubber:didSelectItemAtIndex:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSInteger' index='1' name='selectedIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubber:layout:sizeForItemAtIndex:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSScrubberFlowLayout * _Nonnull' index='1' name='layout' type='@'/>
<arg declared_type='NSInteger' index='2' name='itemIndex' type='i' type64='q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='scrubber:viewForItemAtIndex:'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='__kindof NSScrubberItemView * _Nonnull' type='@'/>
</method>
<method selector='searchFieldDidEndSearching:'>
<arg declared_type='NSSearchField * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchFieldDidStartSearching:'>
<arg declared_type='NSSearchField * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchForItemsWithSearchString:resultLimit:matchedItemHandler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='searchString' type='@'/>
<arg declared_type='NSInteger' index='1' name='resultLimit' type='i' type64='q'/>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='2' name='handleMatchedItems' type='@?'>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='sectionCollapseButton'>
<retval declared_type='NSButton * _Nullable' type='@'/>
</method>
<method selector='selectedRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='selectedRanges'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selectionShouldChangeInOutlineView:'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectionShouldChangeInTableView:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAccessibilityActivationPoint:'>
<arg declared_type='NSPoint' index='0' name='accessibilityActivationPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAllowedValues:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityAllowedValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAlternateUIVisible:'>
<arg declared_type='BOOL' index='0' name='accessibilityAlternateUIVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityApplicationFocusedUIElement:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityApplicationFocusedUIElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCancelButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityCancelButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityChildren:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityChildren' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityChildrenInNavigationOrder:'>
<arg declared_type='NSArray&gt; * _Nullable' index='0' name='accessibilityChildrenInNavigationOrder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityClearButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityClearButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCloseButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityCloseButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumnCount:'>
<arg declared_type='NSInteger' index='0' name='accessibilityColumnCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumnHeaderUIElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityColumnHeaderUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumnIndexRange:'>
<arg declared_type='NSRange' index='0' name='accessibilityColumnIndexRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumnTitles:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityColumnTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumns:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityColumns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityContents:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityContents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCriticalValue:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityCriticalValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCustomActions:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityCustomActions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCustomRotors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='accessibilityCustomRotors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDecrementButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityDecrementButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDefaultButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityDefaultButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDisclosed:'>
<arg declared_type='BOOL' index='0' name='accessibilityDisclosed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDisclosedByRow:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityDisclosedByRow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDisclosedRows:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityDisclosedRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDisclosureLevel:'>
<arg declared_type='NSInteger' index='0' name='accessibilityDisclosureLevel' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDocument:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityDocument' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityEdited:'>
<arg declared_type='BOOL' index='0' name='accessibilityEdited' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityElement:'>
<arg declared_type='BOOL' index='0' name='accessibilityElement' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityEnabled:'>
<arg declared_type='BOOL' index='0' name='accessibilityEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityExpanded:'>
<arg declared_type='BOOL' index='0' name='accessibilityExpanded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityExtrasMenuBar:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityExtrasMenuBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFilename:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityFilename' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFocused:'>
<arg declared_type='BOOL' index='0' name='accessibilityFocused' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFocusedWindow:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityFocusedWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFrame:'>
<arg declared_type='NSRect' index='0' name='accessibilityFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFrontmost:'>
<arg declared_type='BOOL' index='0' name='accessibilityFrontmost' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFullScreenButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityFullScreenButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityGrowArea:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityGrowArea' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHandles:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityHandles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHeader:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityHeader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHelp:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityHelp' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHidden:'>
<arg declared_type='BOOL' index='0' name='accessibilityHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHorizontalScrollBar:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityHorizontalScrollBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHorizontalUnitDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityHorizontalUnitDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHorizontalUnits:'>
<arg declared_type='NSAccessibilityUnits' index='0' name='accessibilityHorizontalUnits' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityIdentifier:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityIncrementButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityIncrementButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityIndex:'>
<arg declared_type='NSInteger' index='0' name='accessibilityIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityInsertionPointLineNumber:'>
<arg declared_type='NSInteger' index='0' name='accessibilityInsertionPointLineNumber' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabelUIElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityLabelUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabelValue:'>
<arg declared_type='float' index='0' name='accessibilityLabelValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLinkedUIElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityLinkedUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMain:'>
<arg declared_type='BOOL' index='0' name='accessibilityMain' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMainWindow:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMainWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMarkerGroupUIElement:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMarkerGroupUIElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMarkerTypeDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityMarkerTypeDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMarkerUIElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityMarkerUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMarkerValues:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMarkerValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMaxValue:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMaxValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMenuBar:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMenuBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMinValue:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMinValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMinimizeButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMinimizeButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMinimized:'>
<arg declared_type='BOOL' index='0' name='accessibilityMinimized' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityModal:'>
<arg declared_type='BOOL' index='0' name='accessibilityModal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityNextContents:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityNextContents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityNumberOfCharacters:'>
<arg declared_type='NSInteger' index='0' name='accessibilityNumberOfCharacters' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityOrderedByRow:'>
<arg declared_type='BOOL' index='0' name='accessibilityOrderedByRow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityOrientation:'>
<arg declared_type='NSAccessibilityOrientation' index='0' name='accessibilityOrientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityOverflowButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityOverflowButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityParent:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityParent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityPlaceholderValue:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityPlaceholderValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityPreviousContents:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityPreviousContents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityProtectedContent:'>
<arg declared_type='BOOL' index='0' name='accessibilityProtectedContent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityProxy:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityProxy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRequired:'>
<arg declared_type='BOOL' index='0' name='accessibilityRequired' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRole:'>
<arg declared_type='NSAccessibilityRole _Nullable' index='0' name='accessibilityRole' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRoleDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityRoleDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRowCount:'>
<arg declared_type='NSInteger' index='0' name='accessibilityRowCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRowHeaderUIElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityRowHeaderUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRowIndexRange:'>
<arg declared_type='NSRange' index='0' name='accessibilityRowIndexRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRows:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRulerMarkerType:'>
<arg declared_type='NSAccessibilityRulerMarkerType' index='0' name='accessibilityRulerMarkerType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySearchButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilitySearchButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySearchMenu:'>
<arg declared_type='id _Nullable' index='0' name='accessibilitySearchMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelected:'>
<arg declared_type='BOOL' index='0' name='accessibilitySelected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedCells:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedChildren:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedChildren' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedColumns:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedColumns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedRows:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedText:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilitySelectedText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedTextRange:'>
<arg declared_type='NSRange' index='0' name='accessibilitySelectedTextRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedTextRanges:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedTextRanges' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityServesAsTitleForUIElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityServesAsTitleForUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySharedCharacterRange:'>
<arg declared_type='NSRange' index='0' name='accessibilitySharedCharacterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySharedFocusElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySharedFocusElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySharedTextUIElements:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySharedTextUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityShownMenu:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityShownMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySortDirection:'>
<arg declared_type='NSAccessibilitySortDirection' index='0' name='accessibilitySortDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySplitters:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySplitters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySubrole:'>
<arg declared_type='NSAccessibilitySubrole _Nullable' index='0' name='accessibilitySubrole' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTabs:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityTabs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTitleUIElement:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityTitleUIElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityToolbarButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityToolbarButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTopLevelUIElement:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityTopLevelUIElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='accessibilityURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityUnitDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityUnitDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityUnits:'>
<arg declared_type='NSAccessibilityUnits' index='0' name='accessibilityUnits' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityValue:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityValueDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityValueDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVerticalScrollBar:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityVerticalScrollBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVerticalUnitDescription:'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityVerticalUnitDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVerticalUnits:'>
<arg declared_type='NSAccessibilityUnits' index='0' name='accessibilityVerticalUnits' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleCells:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityVisibleCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleCharacterRange:'>
<arg declared_type='NSRange' index='0' name='accessibilityVisibleCharacterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleChildren:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityVisibleChildren' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleColumns:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityVisibleColumns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleRows:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityVisibleRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityWarningValue:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityWarningValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityWindow:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityWindows:'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityWindows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityZoomButton:'>
<arg declared_type='id _Nullable' index='0' name='accessibilityZoomButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimatesToDestination:'>
<arg declared_type='BOOL' index='0' name='animatesToDestination' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimations:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='animations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppearance:'>
<arg declared_type='NSAppearance * _Nullable' index='0' name='appearance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachment:'>
<arg declared_type='NSTextAttachment * _Nullable' index='0' name='attachment' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='newColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultPlaceholder:forMarker:withBinding:'>
<arg declared_type='id _Nullable' index='0' name='placeholder' type='@'/>
<arg declared_type='id _Nullable' index='1' name='marker' type='@'/>
<arg declared_type='NSBindingName _Nonnull' index='2' name='binding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDockTile:'>
<arg declared_type='NSDockTile * _Nullable' index='0' name='dockTile' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingFormation:'>
<arg declared_type='NSDraggingFormation' index='0' name='draggingFormation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFindBarView:'>
<arg declared_type='NSView * _Nullable' index='0' name='findBarView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFindBarVisible:'>
<arg declared_type='BOOL' index='0' name='findBarVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nullable' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntAttribute:value:forGlyphAtIndex:'>
<arg declared_type='NSInteger' index='0' name='attributeTag' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='val' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='2' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkedText:selectedRange:'>
<arg declared_type='id _Null_unspecified' index='0' name='string' type='@'/>
<arg declared_type='NSRange' index='1' name='selRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkedText:selectedRange:replacementRange:'>
<arg declared_type='id _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='2' name='replacementRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='NSColorPanelMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfValidItemsForDrop:'>
<arg declared_type='NSInteger' index='0' name='numberOfValidItemsForDrop' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSectionCollapseButton:'>
<arg declared_type='NSButton * _Nullable' index='0' name='sectionCollapseButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedRanges:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='selectedRanges' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:didCompleteForItems:error:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSError * _Nullable' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:didFailToShareItems:error:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSError * _Nonnull' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:didSaveShare:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='CKShare * _Nonnull' index='1' name='share' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:didShareItems:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:didStopSharing:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='CKShare * _Nonnull' index='1' name='share' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:sourceFrameOnScreenForShareItem:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sharingService:sourceWindowForShareItems:sharingContentScope:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSSharingContentScope * _Nonnull' index='2' name='sharingContentScope' type='^i' type64='^q'/>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='sharingService:transitionImageForShareItem:contentRect:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSRect * _Nonnull' index='2' name='contentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='sharingService:willShareItems:'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingServicePicker:delegateForSharingService:'>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type='@'/>
<arg declared_type='NSSharingService * _Nonnull' index='1' name='sharingService' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='sharingServicePicker:didChooseSharingService:'>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type='@'/>
<arg declared_type='NSSharingService * _Nullable' index='1' name='service' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingServicePicker:sharingServicesForItems:proposedSharingServices:'>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='proposedServices' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='shouldPerformSegueWithIdentifier:sender:'>
<arg declared_type='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldReplaceCharactersInRanges:withStrings:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='ranges' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='strings' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showAllHelpTopicsForSearchString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='searchString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='slideDraggedImageTo:'>
<arg declared_type='NSPoint' index='0' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sound:didFinishPlaying:'>
<arg declared_type='NSSound * _Nonnull' index='0' name='sound' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechRecognizer:didRecognizeCommand:'>
<arg declared_type='NSSpeechRecognizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='command' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSUInteger' index='1' name='characterIndex' type='I' type64='Q'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<arg declared_type='NSString * _Nonnull' index='3' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didEncounterSyncMessage:'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeaking:'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='BOOL' index='1' name='finishedSpeaking' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:willSpeakPhoneme:'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='short' index='1' name='phonemeOpcode' type='s'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:willSpeakWord:ofString:'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSRange' index='1' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitView:additionalEffectiveRectOfDividerAtIndex:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSInteger' index='1' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:canCollapseSubview:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='subview' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitView:constrainMaxCoordinate:ofSubviewAt:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='CGFloat' index='1' name='proposedMaximumPosition' type='f' type64='d'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='splitView:constrainMinCoordinate:ofSubviewAt:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='CGFloat' index='1' name='proposedMinimumPosition' type='f' type64='d'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='splitView:constrainSplitPosition:ofSubviewAt:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='CGFloat' index='1' name='proposedPosition' type='f' type64='d'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSRect' index='1' name='proposedEffectiveRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='2' name='drawnRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' index='3' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:resizeSubviewsWithOldSize:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSSize' index='1' name='oldSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitView:shouldAdjustSizeOfSubview:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='subview' type='@'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitView:shouldHideDividerAtIndex:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSInteger' index='1' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewDidResizeSubviews:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewWillResizeSubviews:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingActivated:draggingInfo:'>
<arg declared_type='BOOL' index='0' name='activated' type='B'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingEntered:'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='NSSpringLoadingOptions' type='I' type64='Q'/>
</method>
<method selector='springLoadingExited:'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingHighlight'>
<retval declared_type='NSSpringLoadingHighlight' type='i' type64='q'/>
</method>
<method selector='springLoadingHighlightChanged:'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingUpdated:'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='NSSpringLoadingOptions' type='I' type64='Q'/>
</method>
<method selector='stackView:didReattachViews:'>
<arg declared_type='NSStackView * _Nonnull' index='0' name='stackView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='views' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stackView:willDetachViews:'>
<arg declared_type='NSStackView * _Nonnull' index='0' name='stackView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='views' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='stringAtIndex:effectiveRange:endsWithSearchBoundary:'>
<arg declared_type='NSUInteger' index='0' name='characterIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nonnull' index='1' name='outRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='BOOL * _Nonnull' index='2' name='outFlag' type='^B'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='stringLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='supportsMode:'>
<arg declared_type='NSColorPanelMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tabView:didSelectTabViewItem:'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabView:shouldSelectTabViewItem:'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tabView:willSelectTabViewItem:'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabViewDidChangeNumberOfTabViewItems:'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:acceptDrop:row:dropOperation:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<arg declared_type='NSTableViewDropOperation' index='3' name='dropOperation' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:dataCellForTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='NSCell * _Nullable' type='@'/>
</method>
<method selector='tableView:didAddRowView:forRow:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableRowView * _Nonnull' index='1' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didClickTableColumn:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didDragTableColumn:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didRemoveRowView:forRow:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableRowView * _Nonnull' index='1' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:draggingSession:endedAtPoint:operation:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='3' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:draggingSession:willBeginAtPoint:forRowIndexes:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSIndexSet * _Nonnull' index='3' name='rowIndexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:heightOfRow:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:isGroupRow:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:mouseDownInHeaderOfTableColumn:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropDestination' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='2' name='indexSet' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='startRow' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='endRow' type='i' type64='q'/>
<arg declared_type='NSString * _Nonnull' index='3' name='searchString' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:objectValueForTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tableView:pasteboardWriterForRow:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tableView:rowActionsForRow:edge:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSTableRowActionEdge' index='2' name='edge' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tableView:rowViewForRow:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='NSTableRowView * _Nullable' type='@'/>
</method>
<method selector='tableView:selectionIndexesForProposedSelection:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type='@'/>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='tableView:setObjectValue:forTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='3' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:shouldEditTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldReorderColumn:toColumn:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='newColumnIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldSelectRow:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldSelectTableColumn:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldShowCellExpansionForTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldTrackCell:forTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='3' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='searchString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:sizeToFitWidthOfColumn:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:sortDescriptorsDidChange:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='oldDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRectPointer _Nonnull' index='2' name='rect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTableColumn * _Nullable' index='3' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='4' name='row' type='i' type64='q'/>
<arg declared_type='NSPoint' index='5' name='mouseLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='tableView:typeSelectStringForTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tableView:updateDraggingItemsForDrag:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:validateDrop:proposedRow:proposedDropOperation:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<arg declared_type='NSTableViewDropOperation' index='3' name='dropOperation' type='I' type64='Q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='tableView:viewForTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='tableView:willDisplayCell:forTableColumn:row:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='3' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:writeRows:toPasteboard:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='rows' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:writeRowsWithIndexes:toPasteboard:'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableViewColumnDidMove:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableViewColumnDidResize:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableViewSelectionDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableViewSelectionIsChanging:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='terminate:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidBeginEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidEndEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textField:textView:candidates:forSelectedRange:'>
<arg declared_type='NSTextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='candidates' type='@'/>
<arg declared_type='NSRange' index='3' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textField:textView:candidatesForSelectedRange:'>
<arg declared_type='NSTextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='NSRange' index='2' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='textField:textView:shouldSelectCandidateAtIndex:'>
<arg declared_type='NSTextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textShouldEndEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textStorage:didProcessEditing:range:changeInLength:'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStorage:willProcessEditing:range:changeInLength:'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStorageDidProcessEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStorageWillProcessEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:URLForContentsOfTextAttachment:atIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='textView:candidates:forSelectedRange:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='candidates' type='@'/>
<arg declared_type='NSRange' index='2' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:candidatesForSelectedRange:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='textView:clickedOnCell:inRect:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:clickedOnCell:inRect:atIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:clickedOnLink:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='link' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:clickedOnLink:atIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='link' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='words' type='@'/>
<arg declared_type='NSRange' index='2' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger * _Nullable' index='3' name='index' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:didCheckTextInRange:types:options:results:orthography:wordCount:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextCheckingTypes' index='2' name='checkingTypes' type='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='options' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='4' name='results' type='@'/>
<arg declared_type='NSOrthography * _Nonnull' index='5' name='orthography' type='@'/>
<arg declared_type='NSInteger' index='6' name='wordCount' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:doCommandBySelector:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='commandSelector' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:atIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:draggedCell:inRect:event:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSEvent * _Null_unspecified' index='3' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:draggedCell:inRect:event:atIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<arg declared_type='NSUInteger' index='4' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:menu:forEvent:atIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSMenu * _Nonnull' index='1' name='menu' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementString:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSRange' index='1' name='affectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nullable' index='2' name='replacementString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldChangeTextInRanges:replacementStrings:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='affectedRanges' type='@'/>
<arg declared_type='NSArray * _Nullable' index='2' name='replacementStrings' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldChangeTypingAttributes:toAttributes:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='oldTypingAttributes' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='newTypingAttributes' type='@'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='textView:shouldSelectCandidateAtIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldSetSpellingState:range:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSInteger' index='1' name='value' type='i' type64='q'/>
<arg declared_type='NSRange' index='2' name='affectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='textView:shouldUpdateTouchBarItemIdentifiers:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='identifiers' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSRange' index='1' name='oldSelectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='2' name='newSelectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='oldSelectedCharRanges' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='newSelectedCharRanges' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:willCheckTextInRange:options:types:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<arg declared_type='NSTextCheckingTypes * _Nonnull' index='3' name='checkingTypes' type='^Q'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='textView:willDisplayToolTip:forCharacterAtIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='tooltip' type='@'/>
<arg declared_type='NSUInteger' index='2' name='characterIndex' type='I' type64='Q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textView:willShowSharingServicePicker:forItems:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='1' name='servicePicker' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='items' type='@'/>
<retval declared_type='NSSharingServicePicker * _Nullable' type='@'/>
</method>
<method selector='textView:writablePasteboardTypesForCell:atIndex:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:writeCell:atIndex:toPasteboard:type:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<arg declared_type='NSPasteboard * _Nonnull' index='3' name='pboard' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='4' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textViewDidChangeSelection:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewDidChangeTypingAttributes:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='substring' type='@'/>
<arg declared_type='NSInteger' index='2' name='tokenIndex' type='i' type64='q'/>
<arg declared_type='NSInteger * _Nullable' index='3' name='selectedIndex' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tokenField:displayStringForRepresentedObject:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tokenField:editingStringForRepresentedObject:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tokenField:hasMenuForRepresentedObject:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tokenField:menuForRepresentedObject:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='tokenField:readFromPasteboard:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pboard' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tokenField:representedObjectForEditingString:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='editingString' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tokenField:shouldAddObjects:atIndex:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='tokens' type='@'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tokenField:styleForRepresentedObject:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSTokenStyle' type='I' type64='Q'/>
</method>
<method selector='tokenField:writeRepresentedObjects:toPasteboard:'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='objects' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='substring' type='@'/>
<arg declared_type='NSInteger' index='2' name='tokenIndex' type='i' type64='q'/>
<arg declared_type='NSInteger * _Nonnull' index='3' name='selectedIndex' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tokenFieldCell:displayStringForRepresentedObject:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:editingStringForRepresentedObject:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:hasMenuForRepresentedObject:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tokenFieldCell:menuForRepresentedObject:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:readFromPasteboard:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pboard' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:representedObjectForEditingString:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='editingString' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:shouldAddObjects:atIndex:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='tokens' type='@'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tokenFieldCell:styleForRepresentedObject:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSTokenStyle' type='I' type64='Q'/>
</method>
<method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='objects' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<arg declared_type='NSToolbarItemIdentifier _Nonnull' index='1' name='itemIdentifier' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='NSToolbarItem * _Nullable' type='@'/>
</method>
<method selector='toolbarAllowedItemIdentifiers:'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbarDefaultItemIdentifiers:'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbarDidRemoveItem:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toolbarSelectableItemIdentifiers:'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbarWillAddItem:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchBar'>
<retval declared_type='NSTouchBar * _Nullable' type='@'/>
</method>
<method selector='touchBar:makeItemForIdentifier:'>
<arg declared_type='NSTouchBar * _Nonnull' index='0' name='touchBar' type='@'/>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='NSTouchBarItem * _Nullable' type='@'/>
</method>
<method selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='theEvent' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='2' name='controlView' type='@'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<arg declared_type='BOOL' index='4' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='theEvent' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='2' name='controlView' type='@'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unbind:'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='undoManagerForTextView:'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSUndoManager * _Nullable' type='@'/>
</method>
<method selector='unmarkText'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateDraggingItemsForDrag:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validAttributesForMarkedText'>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
<method selector='validModesForFontPanel:'>
<arg declared_type='NSFontPanel * _Nonnull' index='0' name='fontPanel' type='@'/>
<retval declared_type='NSFontPanelModeMask' type='I' type64='Q'/>
</method>
<method selector='validateMenuItem:'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='menuItem' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateToolbarItem:'>
<arg declared_type='NSToolbarItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueClassForBinding:'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method selector='view:stringForToolTip:point:userData:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSToolTipTag' index='1' name='tag' type='i' type64='q'/>
<arg declared_type='NSPoint' index='2' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='void * _Nullable' index='3' name='data' type='^v'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='viewSizeChanged:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='visibleCharacterRanges'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='wantsPeriodicDraggingUpdates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToDelayTextChangeNotifications'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToHandleMouseEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToInterpretAllKeystrokes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToTrackMouse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='theEvent' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='2' name='controlView' type='@'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willTransitionFromLayout:toLayout:'>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:didDecodeRestorableState:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSPoint' index='2' name='dragImageLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPasteboard * _Nonnull' index='3' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='window:shouldPopUpDocumentPathMenu:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSMenu * _Nonnull' index='1' name='menu' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSScreen * _Nonnull' index='1' name='screen' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenWithDuration:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:startCustomAnimationToExitFullScreenWithDuration:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:willEncodeRestorableState:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:willPositionSheet:usingRect:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSWindow * _Nonnull' index='1' name='sheet' type='@'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSSize' index='1' name='maxPreferredFrameSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSSize' index='2' name='maxAllowedFrameSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='window:willUseFullScreenContentSize:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSSize' index='1' name='proposedSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='window:willUseFullScreenPresentationOptions:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSApplicationPresentationOptions' index='1' name='proposedOptions' type='I' type64='Q'/>
<retval declared_type='NSApplicationPresentationOptions' type='I' type64='Q'/>
</method>
<method selector='windowDidBecomeKey:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidBecomeMain:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidChangeBackingProperties:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidChangeOcclusionState:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidChangeScreen:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidChangeScreenProfile:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidDeminiaturize:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidEndLiveResize:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidEndSheet:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidEnterFullScreen:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidEnterVersionBrowser:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidExitFullScreen:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidExitVersionBrowser:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidExpose:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidFailToEnterFullScreen:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidFailToExitFullScreen:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidMiniaturize:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidMove:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidResignKey:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidResignMain:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidResize:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidUpdate:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='windowShouldClose:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='windowShouldZoom:toFrame:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSRect' index='1' name='newFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='windowWillBeginSheet:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillClose:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillEnterFullScreen:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillEnterVersionBrowser:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillExitFullScreen:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillExitVersionBrowser:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillMiniaturize:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillMove:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillResize:toSize:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSSize' index='1' name='frameSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='windowWillReturnFieldEditor:toObject:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='id _Nullable' index='1' name='client' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='windowWillReturnUndoManager:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSUndoManager * _Nullable' type='@'/>
</method>
<method selector='windowWillStartLiveResize:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillUseStandardFrame:defaultFrame:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSRect' index='1' name='newFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='writableTypesForPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='writeSelectionToPasteboard:types:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='types' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writingOptionsForType:pasteboard:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pasteboard' type='@'/>
<retval declared_type='NSPasteboardWritingOptions' type='I' type64='Q'/>
</method>
</class>
<class name='NSObjectController'>
<method selector='add:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='automaticallyPreparesContent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canAdd'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canRemove'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='content'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='defaultFetchRequest'>
<retval declared_type='NSFetchRequest * _Nonnull' type='@'/>
</method>
<method selector='entityName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fetch:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fetchPredicate'>
<retval declared_type='NSPredicate * _Nullable' type='@'/>
</method>
<method selector='fetchWithRequest:merge:error:'>
<arg declared_type='NSFetchRequest * _Nullable' index='0' name='fetchRequest' type='@'/>
<arg declared_type='BOOL' index='1' name='merge' type='B'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithContent:'>
<arg declared_type='id _Nullable' index='0' name='content' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext * _Nullable' type='@'/>
</method>
<method selector='newObject'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='prepareContent'>
<retval declared_type='void' type='v'/>
</method>
<method selector='remove:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedObjects'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selection'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='setAutomaticallyPreparesContent:'>
<arg declared_type='BOOL' index='0' name='automaticallyPreparesContent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContent:'>
<arg declared_type='id _Nullable' index='0' name='content' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntityName:'>
<arg declared_type='NSString * _Nullable' index='0' name='entityName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchPredicate:'>
<arg declared_type='NSPredicate * _Nullable' index='0' name='fetchPredicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext * _Nullable' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg declared_type='Class _Nullable' index='0' name='objectClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesLazyFetching:'>
<arg declared_type='BOOL' index='0' name='usesLazyFetching' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesLazyFetching'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSOpenGLContext'>
<method selector='CGLContextObj'>
<retval declared_type='struct _CGLContextObject * _Nullable' type='^{_CGLContextObject=}'/>
</method>
<method class_method='true' selector='clearCurrentContext'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearDrawable'>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyAttributesFromContext:withMask:'>
<arg declared_type='NSOpenGLContext * _Nonnull' index='0' name='context' type='@'/>
<arg declared_type='GLbitfield' index='1' name='mask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='createTexture:fromView:internalFormat:'>
<arg declared_type='GLenum' index='0' name='target' type='I'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='GLenum' index='2' name='format' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='currentContext'>
<retval declared_type='NSOpenGLContext * _Nullable' type='@'/>
</method>
<method selector='currentVirtualScreen'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='flushBuffer'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getValues:forParameter:'>
<arg declared_type='GLint * _Nonnull' index='0' name='vals' type='^i'/>
<arg declared_type='NSOpenGLContextParameter' index='1' name='param' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCGLContextObj:'>
<arg declared_type='struct _CGLContextObject * _Nonnull' index='0' name='context' type='^{_CGLContextObject=}'/>
<retval declared_type='NSOpenGLContext * _Nullable' type='@'/>
</method>
<method selector='initWithFormat:shareContext:'>
<arg declared_type='NSOpenGLPixelFormat * _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='NSOpenGLContext * _Nullable' index='1' name='share' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='makeCurrentContext'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pixelBuffer'>
<retval declared_type='NSOpenGLPixelBuffer * _Nullable' type='@'/>
</method>
<method selector='pixelBufferCubeMapFace'>
<retval declared_type='GLenum' type='I'/>
</method>
<method selector='pixelBufferMipMapLevel'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='pixelFormat'>
<retval declared_type='NSOpenGLPixelFormat * _Nonnull' type='@'/>
</method>
<method selector='setCurrentVirtualScreen:'>
<arg declared_type='GLint' index='0' name='currentVirtualScreen' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFullScreen'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffScreen:width:height:rowbytes:'>
<arg declared_type='void * _Nonnull' index='0' name='baseaddr' type='^v'/>
<arg declared_type='GLsizei' index='1' name='width' type='i'/>
<arg declared_type='GLsizei' index='2' name='height' type='i'/>
<arg declared_type='GLint' index='3' name='rowbytes' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:'>
<arg declared_type='NSOpenGLPixelBuffer * _Nonnull' index='0' name='pixelBuffer' type='@'/>
<arg declared_type='GLenum' index='1' name='face' type='I'/>
<arg declared_type='GLint' index='2' name='level' type='i'/>
<arg declared_type='GLint' index='3' name='screen' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureImageToPixelBuffer:colorBuffer:'>
<arg declared_type='NSOpenGLPixelBuffer * _Nonnull' index='0' name='pixelBuffer' type='@'/>
<arg declared_type='GLenum' index='1' name='source' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValues:forParameter:'>
<arg const='true' declared_type='GLint * _Nonnull' index='0' name='vals' type='^i'/>
<arg declared_type='NSOpenGLContextParameter' index='1' name='param' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='update'>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
</class>
<class name='NSOpenGLLayer'>
<method selector='canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'>
<arg declared_type='NSOpenGLContext * _Nonnull' index='0' name='context' type='@'/>
<arg declared_type='NSOpenGLPixelFormat * _Nonnull' index='1' name='pixelFormat' type='@'/>
<arg declared_type='CFTimeInterval' index='2' name='t' type='d'/>
<arg const='true' declared_type='CVTimeStamp * _Nonnull' index='3' name='ts' type='^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'>
<arg declared_type='NSOpenGLContext * _Nonnull' index='0' name='context' type='@'/>
<arg declared_type='NSOpenGLPixelFormat * _Nonnull' index='1' name='pixelFormat' type='@'/>
<arg declared_type='CFTimeInterval' index='2' name='t' type='d'/>
<arg const='true' declared_type='CVTimeStamp * _Nonnull' index='3' name='ts' type='^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='openGLContext'>
<retval declared_type='NSOpenGLContext * _Nullable' type='@'/>
</method>
<method selector='openGLContextForPixelFormat:'>
<arg declared_type='NSOpenGLPixelFormat * _Nonnull' index='0' name='pixelFormat' type='@'/>
<retval declared_type='NSOpenGLContext * _Nonnull' type='@'/>
</method>
<method selector='openGLPixelFormat'>
<retval declared_type='NSOpenGLPixelFormat * _Nullable' type='@'/>
</method>
<method selector='openGLPixelFormatForDisplayMask:'>
<arg declared_type='uint32_t' index='0' name='mask' type='I'/>
<retval declared_type='NSOpenGLPixelFormat * _Nonnull' type='@'/>
</method>
<method selector='setOpenGLContext:'>
<arg declared_type='NSOpenGLContext * _Nullable' index='0' name='openGLContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpenGLPixelFormat:'>
<arg declared_type='NSOpenGLPixelFormat * _Nullable' index='0' name='openGLPixelFormat' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
</class>
<class name='NSOpenGLPixelBuffer'>
<method selector='CGLPBufferObj'>
<retval declared_type='struct _CGLPBufferObject * _Nullable' type='^{_CGLPBufferObject=}'/>
</method>
<method selector='initWithCGLPBufferObj:'>
<arg declared_type='struct _CGLPBufferObject * _Null_unspecified' index='0' name='pbuffer' type='^{_CGLPBufferObject=}'/>
<retval declared_type='NSOpenGLPixelBuffer * _Nullable' type='@'/>
</method>
<method selector='initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:'>
<arg declared_type='GLenum' index='0' name='target' type='I'/>
<arg declared_type='GLenum' index='1' name='format' type='I'/>
<arg declared_type='GLint' index='2' name='maxLevel' type='i'/>
<arg declared_type='GLsizei' index='3' name='pixelsWide' type='i'/>
<arg declared_type='GLsizei' index='4' name='pixelsHigh' type='i'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='pixelsHigh'>
<retval declared_type='GLsizei' type='i'/>
</method>
<method selector='pixelsWide'>
<retval declared_type='GLsizei' type='i'/>
</method>
<method selector='textureInternalFormat'>
<retval declared_type='GLenum' type='I'/>
</method>
<method selector='textureMaxMipMapLevel'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='textureTarget'>
<retval declared_type='GLenum' type='I'/>
</method>
</class>
<class name='NSOpenGLPixelFormat'>
<method selector='CGLPixelFormatObj'>
<retval declared_type='struct _CGLPixelFormatObject * _Nullable' type='^{_CGLPixelFormatObject=}'/>
</method>
<method selector='attributes'>
<retval declared_type='NSData * _Null_unspecified' type='@'/>
</method>
<method selector='getValues:forAttribute:forVirtualScreen:'>
<arg declared_type='GLint * _Nonnull' index='0' name='vals' type='^i'/>
<arg declared_type='NSOpenGLPixelFormatAttribute' index='1' name='attrib' type='I'/>
<arg declared_type='GLint' index='2' name='screen' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithAttributes:'>
<arg const='true' declared_type='NSOpenGLPixelFormatAttribute * _Nonnull' index='0' name='attribs' type='^I'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithCGLPixelFormatObj:'>
<arg declared_type='struct _CGLPixelFormatObject * _Nonnull' index='0' name='format' type='^{_CGLPixelFormatObject=}'/>
<retval declared_type='NSOpenGLPixelFormat * _Nullable' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Null_unspecified' index='0' name='attribs' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='numberOfVirtualScreens'>
<retval declared_type='GLint' type='i'/>
</method>
<method selector='setAttributes:'>
<arg declared_type='NSData * _Null_unspecified' index='0' name='attribs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSOpenGLView'>
<method selector='clearGLContext'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultPixelFormat'>
<retval declared_type='NSOpenGLPixelFormat * _Nonnull' type='@'/>
</method>
<method selector='initWithFrame:pixelFormat:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSOpenGLPixelFormat * _Nullable' index='1' name='format' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='openGLContext'>
<retval declared_type='NSOpenGLContext * _Nullable' type='@'/>
</method>
<method selector='pixelFormat'>
<retval declared_type='NSOpenGLPixelFormat * _Nullable' type='@'/>
</method>
<method selector='prepareOpenGL'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reshape'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpenGLContext:'>
<arg declared_type='NSOpenGLContext * _Nullable' index='0' name='openGLContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPixelFormat:'>
<arg declared_type='NSOpenGLPixelFormat * _Nullable' index='0' name='pixelFormat' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='update'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSOpenPanel'>
<method selector='URLs'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSString * _Nullable' index='0' name='path' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='name' type='@'/>
<arg declared_type='NSArray * _Nullable' index='2' name='fileTypes' type='@'/>
<arg declared_type='id _Nullable' index='3' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='4' name='didEndSelector' type=':'/>
<arg declared_type='void * _Nullable' index='5' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSString * _Nullable' index='0' name='path' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='name' type='@'/>
<arg declared_type='NSArray * _Nullable' index='2' name='fileTypes' type='@'/>
<arg declared_type='NSWindow * _Nullable' index='3' name='docWindow' type='@'/>
<arg declared_type='id _Nullable' index='4' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='5' name='didEndSelector' type=':'/>
<arg declared_type='void * _Nullable' index='6' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canChooseDirectories'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canChooseFiles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canDownloadUbiquitousContents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canResolveUbiquitousConflicts'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='filenames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='isAccessoryViewDisclosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='openPanel'>
<retval declared_type='NSOpenPanel * _Nonnull' type='@'/>
</method>
<method selector='resolvesAliases'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='runModalForDirectory:file:types:'>
<arg declared_type='NSString * _Nullable' index='0' name='path' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='name' type='@'/>
<arg declared_type='NSArray * _Nullable' index='2' name='fileTypes' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='runModalForTypes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='fileTypes' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAccessoryViewDisclosed:'>
<arg declared_type='BOOL' index='0' name='accessoryViewDisclosed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='allowsMultipleSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanChooseDirectories:'>
<arg declared_type='BOOL' index='0' name='canChooseDirectories' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanChooseFiles:'>
<arg declared_type='BOOL' index='0' name='canChooseFiles' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanDownloadUbiquitousContents:'>
<arg declared_type='BOOL' index='0' name='canDownloadUbiquitousContents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanResolveUbiquitousConflicts:'>
<arg declared_type='BOOL' index='0' name='canResolveUbiquitousConflicts' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResolvesAliases:'>
<arg declared_type='BOOL' index='0' name='resolvesAliases' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSOutlineView'>
<method selector='autoresizesOutlineColumn'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autosaveExpandedItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='child:ofItem:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='childIndexForItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='collapseItem:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collapseItem:collapseChildren:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='collapseChildren' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='expandItem:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='expandItem:expandChildren:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='expandChildren' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='frameOfOutlineCellAtRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='indentationMarkerFollowsCell'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indentationPerLevel'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='insertItemsAtIndexes:inParent:withAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='id _Nullable' index='1' name='parent' type='@'/>
<arg declared_type='NSTableViewAnimationOptions' index='2' name='animationOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isExpandable:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isItemExpanded:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemAtRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='levelForItem:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='levelForRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='moveItemAtIndex:inParent:toIndex:inParent:'>
<arg declared_type='NSInteger' index='0' name='fromIndex' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='1' name='oldParent' type='@'/>
<arg declared_type='NSInteger' index='2' name='toIndex' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='3' name='newParent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfChildrenOfItem:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='outlineTableColumn'>
<retval declared_type='NSTableColumn * _Nullable' type='@'/>
</method>
<method selector='parentForItem:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='reloadItem:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadItem:reloadChildren:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<arg declared_type='BOOL' index='1' name='reloadChildren' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemsAtIndexes:inParent:withAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='id _Nullable' index='1' name='parent' type='@'/>
<arg declared_type='NSTableViewAnimationOptions' index='2' name='animationOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowForItem:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAutoresizesOutlineColumn:'>
<arg declared_type='BOOL' index='0' name='autoresizesOutlineColumn' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosaveExpandedItems:'>
<arg declared_type='BOOL' index='0' name='autosaveExpandedItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDropItem:dropChildIndex:'>
<arg declared_type='id _Nullable' index='0' name='item' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndentationMarkerFollowsCell:'>
<arg declared_type='BOOL' index='0' name='indentationMarkerFollowsCell' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndentationPerLevel:'>
<arg declared_type='CGFloat' index='0' name='indentationPerLevel' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutlineTableColumn:'>
<arg declared_type='NSTableColumn * _Nullable' index='0' name='outlineTableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStronglyReferencesItems:'>
<arg declared_type='BOOL' index='0' name='stronglyReferencesItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldCollapseAutoExpandedItemsForDeposited:'>
<arg declared_type='BOOL' index='0' name='deposited' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stronglyReferencesItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type='NSUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
</class>
<class name='NSPDFImageRep'>
<method selector='PDFRepresentation'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='currentPage'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='imageRepWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='pdfData' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='pdfData' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='pageCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setCurrentPage:'>
<arg declared_type='NSInteger' index='0' name='currentPage' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPDFInfo'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='attributes'>
<retval declared_type='NSMutableDictionary * _Nonnull' type='@'/>
</method>
<method selector='isFileExtensionHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='orientation'>
<retval declared_type='NSPaperOrientation' type='i' type64='q'/>
</method>
<method selector='paperSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='setFileExtensionHidden:'>
<arg declared_type='BOOL' index='0' name='fileExtensionHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type='NSPaperOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaperSize:'>
<arg declared_type='NSSize' index='0' name='paperSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTagNames:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='tagNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tagNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSPDFPanel'>
<method selector='accessoryController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='beginSheetWithPDFInfo:modalForWindow:completionHandler:'>
<arg declared_type='NSPDFInfo * _Nonnull' index='0' name='pdfInfo' type='@'/>
<arg declared_type='NSWindow * _Nullable' index='1' name='docWindow' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSInteger)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSInteger' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultFileName'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='options'>
<retval declared_type='NSPDFPanelOptions' type='i' type64='q'/>
</method>
<method class_method='true' selector='panel'>
<retval declared_type='NSPDFPanel * _Nonnull' type='@'/>
</method>
<method selector='setAccessoryController:'>
<arg declared_type='NSViewController * _Nullable' index='0' name='accessoryController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultFileName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='defaultFileName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOptions:'>
<arg declared_type='NSPDFPanelOptions' index='0' name='options' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPICTImageRep'>
<method selector='PICTRepresentation'>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='boundingBox'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='imageRepWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='pictData' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='pictData' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
</class>
<class name='NSPageController'>
<method selector='arrangedObjects'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='completeTransition'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='navigateBack:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigateForward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='navigateForwardToObject:'>
<arg declared_type='id _Nonnull' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectedViewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='setArrangedObjects:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='arrangedObjects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedIndex:'>
<arg declared_type='NSInteger' index='0' name='selectedIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransitionStyle:'>
<arg declared_type='NSPageControllerTransitionStyle' index='0' name='transitionStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='takeSelectedIndexFrom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transitionStyle'>
<retval declared_type='NSPageControllerTransitionStyle' type='i' type64='q'/>
</method>
</class>
<class name='NSPageLayout'>
<method selector='accessoryControllers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessoryView'>
<retval declared_type='NSView * _Null_unspecified' type='@'/>
</method>
<method selector='addAccessoryController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='accessoryController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='printInfo' type='@'/>
<arg declared_type='NSWindow * _Nonnull' index='1' name='docWindow' type='@'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didEndSelector' type=':'/>
<arg declared_type='void * _Nullable' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='pageLayout'>
<retval declared_type='NSPageLayout * _Nonnull' type='@'/>
</method>
<method selector='printInfo'>
<retval declared_type='NSPrintInfo * _Nullable' type='@'/>
</method>
<method selector='readPrintInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAccessoryController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='accessoryController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runModal'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='runModalWithPrintInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='printInfo' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Null_unspecified' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writePrintInfo'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPanGestureRecognizer'>
<method selector='buttonMask'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setButtonMask:'>
<arg declared_type='NSUInteger' index='0' name='buttonMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type='NSInteger' index='0' name='numberOfTouchesRequired' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslation:inView:'>
<arg declared_type='NSPoint' index='0' name='translation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='translationInView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='velocityInView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='NSPanel'>
<method selector='becomesKeyOnlyIfNeeded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFloatingPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBecomesKeyOnlyIfNeeded:'>
<arg declared_type='BOOL' index='0' name='becomesKeyOnlyIfNeeded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloatingPanel:'>
<arg declared_type='BOOL' index='0' name='floatingPanel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorksWhenModal:'>
<arg declared_type='BOOL' index='0' name='worksWhenModal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='worksWhenModal'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSParagraphStyle'>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method class_method='true' selector='defaultParagraphStyle'>
<retval declared_type='NSParagraphStyle * _Nonnull' type='@'/>
</method>
<method selector='defaultTabInterval'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='defaultWritingDirectionForLanguage:'>
<arg declared_type='NSString * _Nullable' index='0' name='languageName' type='@'/>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method selector='firstLineHeadIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='headIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='headerLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='I' type64='Q'/>
</method>
<method selector='lineHeightMultiple'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maximumLineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumLineHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tabStops'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tailIndent'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='textBlocks'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textLists'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tighteningFactorForTruncation'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='NSPasteboard'>
<method selector='addTypes:owner:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='newTypes' type='@'/>
<arg declared_type='id _Nullable' index='1' name='newOwner' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='availableTypeFromArray:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='types' type='@'/>
<retval declared_type='NSPasteboardType _Nullable' type='@'/>
</method>
<method selector='canReadItemWithDataConformingToTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='types' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canReadObjectForClasses:options:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='classArray' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='changeCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='clearContents'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='dataForType:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='dataType' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='declareTypes:owner:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='newTypes' type='@'/>
<arg declared_type='id _Nullable' index='1' name='newOwner' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='generalPasteboard'>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method selector='indexOfPasteboardItem:'>
<arg declared_type='NSPasteboardItem * _Nonnull' index='0' name='pasteboardItem' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='name'>
<retval declared_type='NSPasteboardName _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pasteboardByFilteringData:ofType:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pasteboardByFilteringFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filename' type='@'/>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pasteboardByFilteringTypesInPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method selector='pasteboardItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='pasteboardWithName:'>
<arg declared_type='NSPasteboardName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='pasteboardWithUniqueName'>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method selector='prepareForNewContentsWithOptions:'>
<arg declared_type='NSPasteboardContentsOptions' index='0' name='options' type='I' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='propertyListForType:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='dataType' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='readFileContentsType:toFile:'>
<arg declared_type='NSPasteboardType _Nullable' index='0' name='type' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='readFileWrapper'>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='readObjectsForClasses:options:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='classArray' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='releaseGlobally'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setData:forType:'>
<arg declared_type='NSData * _Nullable' index='0' name='data' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='dataType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPropertyList:forType:'>
<arg declared_type='id _Nonnull' index='0' name='plist' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='dataType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setString:forType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='dataType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stringForType:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='dataType' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='types'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='typesFilterableTo:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='writeFileContents:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeFileWrapper:'>
<arg declared_type='NSFileWrapper * _Nonnull' index='0' name='wrapper' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeObjects:'>
<arg declared_type='NSArray&gt; * _Nonnull' index='0' name='objects' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSPasteboardItem'>
<method selector='availableTypeFromArray:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='types' type='@'/>
<retval declared_type='NSPasteboardType _Nullable' type='@'/>
</method>
<method selector='dataForType:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='propertyListForType:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setData:forType:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDataProvider:forTypes:'>
<arg declared_type='id _Nonnull' index='0' name='dataProvider' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='types' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPropertyList:forType:'>
<arg declared_type='id _Nonnull' index='0' name='propertyList' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setString:forType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stringForType:'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='types'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSPathCell'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='allowedTypes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='clickedPathComponentCell'>
<retval declared_type='NSPathComponentCell * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='doubleAction'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='mouseEntered:withFrame:inView:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='NSRect' index='1' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseExited:withFrame:inView:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='NSRect' index='1' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pathComponentCellAtPoint:withFrame:inView:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='NSPathComponentCell * _Nullable' type='@'/>
</method>
<method class_method='true' selector='pathComponentCellClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='pathComponentCells'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='pathStyle'>
<retval declared_type='NSPathStyle' type='i' type64='q'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='rectOfPathComponentCell:withFrame:inView:'>
<arg declared_type='NSPathComponentCell * _Nonnull' index='0' name='cell' type='@'/>
<arg declared_type='NSRect' index='1' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='view' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAllowedTypes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='allowedTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type='SEL _Nullable' index='0' name='doubleAction' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectValue:'>
<arg declared_type='id _Nullable' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathComponentCells:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='pathComponentCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathStyle:'>
<arg declared_type='NSPathStyle' index='0' name='pathStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type='NSString * _Nullable' index='0' name='placeholderString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPathComponentCell'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPathControl'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='allowedTypes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='clickedPathComponentCell'>
<retval declared_type='NSPathComponentCell * _Nullable' type='@'/>
</method>
<method selector='clickedPathItem'>
<retval declared_type='NSPathControlItem * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='doubleAction'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='pathComponentCells'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='pathItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='pathStyle'>
<retval declared_type='NSPathStyle' type='i' type64='q'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setAllowedTypes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='allowedTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type='SEL _Nullable' index='0' name='doubleAction' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg declared_type='NSDragOperation' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='isLocal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathComponentCells:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='cells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='pathItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathStyle:'>
<arg declared_type='NSPathStyle' index='0' name='pathStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type='NSString * _Nullable' index='0' name='placeholderString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPathControlItem'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSPersistentDocument'>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:error:'>
<arg declared_type='NSURL * _Null_unspecified' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Null_unspecified' index='1' name='fileType' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='fileType' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='configuration' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='storeOptions' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext * _Nullable' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel * _Nullable' type='@'/>
</method>
<method selector='persistentStoreTypeForFileType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileType' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='readFromURL:ofType:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='absoluteURL' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='revertToContentsOfURL:ofType:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='inAbsoluteURL' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='inTypeName' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setManagedObjectContext:'>
<arg declared_type='NSManagedObjectContext * _Nullable' index='0' name='managedObjectContext' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='absoluteURL' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<arg declared_type='NSSaveOperationType' index='2' name='saveOperation' type='I' type64='Q'/>
<arg declared_type='NSURL * _Nullable' index='3' name='absoluteOriginalContentsURL' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSPopUpButton'>
<method selector='addItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addItemsWithTitles:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='itemTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='autoenablesItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='indexOfItem:'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='obj' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='actionSelector' type=':'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithFrame:pullsDown:'>
<arg declared_type='NSRect' index='0' name='buttonFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertItemWithTitle:atIndex:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='itemArray'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='itemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='itemTitleAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='itemTitles'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='itemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='lastItem'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='menu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='preferredEdge'>
<retval declared_type='NSRectEdge' type='i' type64='Q'/>
</method>
<method selector='pullsDown'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllItems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItem:'>
<arg declared_type='NSMenuItem * _Nullable' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedItem'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='selectedTag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAutoenablesItems:'>
<arg declared_type='BOOL' index='0' name='autoenablesItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredEdge:'>
<arg declared_type='NSRectEdge' index='0' name='preferredEdge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPullsDown:'>
<arg declared_type='BOOL' index='0' name='pullsDown' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='synchronizeTitleAndSelectedItem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='titleOfSelectedItem'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='NSPopUpButtonCell'>
<method selector='addItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addItemsWithTitles:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='itemTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='altersStateOfSelectedItem'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='arrowPosition'>
<retval declared_type='NSPopUpArrowPosition' type='I' type64='Q'/>
</method>
<method selector='attachPopUpWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='autoenablesItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dismissPopUp'>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexOfItem:'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='obj' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='actionSelector' type=':'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initTextCell:pullsDown:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringValue' type='@'/>
<arg declared_type='BOOL' index='1' name='pullDown' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertItemWithTitle:atIndex:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='itemArray'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='itemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='itemTitleAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='itemTitles'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='itemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='lastItem'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='menu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performClickWithFrame:inView:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredEdge'>
<retval declared_type='NSRectEdge' type='i' type64='Q'/>
</method>
<method selector='pullsDown'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllItems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItem:'>
<arg declared_type='NSMenuItem * _Nullable' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectItemWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectItemWithTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedItem'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='setAltersStateOfSelectedItem:'>
<arg declared_type='BOOL' index='0' name='altersStateOfSelectedItem' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrowPosition:'>
<arg declared_type='NSPopUpArrowPosition' index='0' name='arrowPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoenablesItems:'>
<arg declared_type='BOOL' index='0' name='autoenablesItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredEdge:'>
<arg declared_type='NSRectEdge' index='0' name='preferredEdge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPullsDown:'>
<arg declared_type='BOOL' index='0' name='pullsDown' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesItemFromMenu:'>
<arg declared_type='BOOL' index='0' name='usesItemFromMenu' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='synchronizeTitleAndSelectedItem'>
<retval declared_type='void' type='v'/>
</method>
<method selector='titleOfSelectedItem'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='usesItemFromMenu'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSPopover'>
<method selector='animates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appearance'>
<retval declared_type='NSAppearance * _Nullable' type='@'/>
</method>
<method selector='behavior'>
<retval declared_type='NSPopoverBehavior' type='i' type64='q'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='contentViewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='effectiveAppearance'>
<retval declared_type='NSAppearance * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isDetached'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isShown'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performClose:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='positioningRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAnimates:'>
<arg declared_type='BOOL' index='0' name='animates' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppearance:'>
<arg declared_type='NSAppearance * _Nullable' index='0' name='appearance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBehavior:'>
<arg declared_type='NSPopoverBehavior' index='0' name='behavior' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSize:'>
<arg declared_type='NSSize' index='0' name='contentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type='NSViewController * _Nullable' index='0' name='contentViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositioningRect:'>
<arg declared_type='NSRect' index='0' name='positioningRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showRelativeToRect:ofView:preferredEdge:'>
<arg declared_type='NSRect' index='0' name='positioningRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='positioningView' type='@'/>
<arg declared_type='NSRectEdge' index='2' name='preferredEdge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPopoverTouchBarItem'>
<method selector='collapsedRepresentation'>
<retval declared_type='__kindof NSView * _Nonnull' type='@'/>
</method>
<method selector='collapsedRepresentationImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='collapsedRepresentationLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='customizationLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='dismissPopover:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeStandardActivatePopoverGestureRecognizer'>
<retval declared_type='NSGestureRecognizer * _Nonnull' type='@'/>
</method>
<method selector='popoverTouchBar'>
<retval declared_type='NSTouchBar * _Nonnull' type='@'/>
</method>
<method selector='pressAndHoldTouchBar'>
<retval declared_type='NSTouchBar * _Nullable' type='@'/>
</method>
<method selector='setCollapsedRepresentation:'>
<arg declared_type='__kindof NSView * _Nonnull' index='0' name='collapsedRepresentation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollapsedRepresentationImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='collapsedRepresentationImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollapsedRepresentationLabel:'>
<arg declared_type='NSString * _Nonnull' index='0' name='collapsedRepresentationLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='customizationLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPopoverTouchBar:'>
<arg declared_type='NSTouchBar * _Nonnull' index='0' name='popoverTouchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPressAndHoldTouchBar:'>
<arg declared_type='NSTouchBar * _Nullable' index='0' name='pressAndHoldTouchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsCloseButton:'>
<arg declared_type='BOOL' index='0' name='showsCloseButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showPopover:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsCloseButton'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSPredicateEditor'>
<method selector='rowTemplates'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setRowTemplates:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='rowTemplates' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPredicateEditorRowTemplate'>
<method selector='compoundTypes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='displayableSubpredicatesOfPredicate:'>
<arg declared_type='NSPredicate * _Nonnull' index='0' name='predicate' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='initWithCompoundTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='compoundTypes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='leftExpressions' type='@'/>
<arg declared_type='NSAttributeType' index='1' name='attributeType' type='I' type64='Q'/>
<arg declared_type='NSComparisonPredicateModifier' index='2' name='modifier' type='I' type64='Q'/>
<arg declared_type='NSArray * _Nonnull' index='3' name='operators' type='@'/>
<arg declared_type='NSUInteger' index='4' name='options' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithLeftExpressions:rightExpressions:modifier:operators:options:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='leftExpressions' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='rightExpressions' type='@'/>
<arg declared_type='NSComparisonPredicateModifier' index='2' name='modifier' type='I' type64='Q'/>
<arg declared_type='NSArray * _Nonnull' index='3' name='operators' type='@'/>
<arg declared_type='NSUInteger' index='4' name='options' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='leftExpressions'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='matchForPredicate:'>
<arg declared_type='NSPredicate * _Nonnull' index='0' name='predicate' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='modifier'>
<retval declared_type='NSComparisonPredicateModifier' type='I' type64='Q'/>
</method>
<method selector='operators'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='options'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='predicateWithSubpredicates:'>
<arg declared_type='NSArray * _Nullable' index='0' name='subpredicates' type='@'/>
<retval declared_type='NSPredicate * _Nonnull' type='@'/>
</method>
<method selector='rightExpressionAttributeType'>
<retval declared_type='NSAttributeType' type='I' type64='Q'/>
</method>
<method selector='rightExpressions'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setPredicate:'>
<arg declared_type='NSPredicate * _Nonnull' index='0' name='predicate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='templateViews'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='templatesWithAttributeKeyPaths:inEntityDescription:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='keyPaths' type='@'/>
<arg declared_type='NSEntityDescription * _Nonnull' index='1' name='entityDescription' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSPressGestureRecognizer'>
<method selector='allowableMovement'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='buttonMask'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimumPressDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='numberOfTouchesRequired'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAllowableMovement:'>
<arg declared_type='CGFloat' index='0' name='allowableMovement' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonMask:'>
<arg declared_type='NSUInteger' index='0' name='buttonMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumPressDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='minimumPressDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTouchesRequired:'>
<arg declared_type='NSInteger' index='0' name='numberOfTouchesRequired' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPressureConfiguration'>
<method selector='initWithPressureBehavior:'>
<arg declared_type='NSPressureBehavior' index='0' name='pressureBehavior' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='pressureBehavior'>
<retval declared_type='NSPressureBehavior' type='i' type64='q'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPrintInfo'>
<method selector='PMPageFormat'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='PMPrintSession'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='PMPrintSettings'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='bottomMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='defaultPrinter'>
<retval declared_type='NSPrinter * _Nullable' type='@'/>
</method>
<method selector='dictionary'>
<retval declared_type='NSMutableDictionary * _Nonnull' type='@'/>
</method>
<method selector='horizontalPagination'>
<retval declared_type='NSPrintingPaginationMode' type='I' type64='Q'/>
</method>
<method selector='imageablePageBounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='inDecoder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='attributes' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isHorizontallyCentered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectionOnly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVerticallyCentered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='jobDisposition'>
<retval declared_type='NSPrintJobDispositionValue _Nonnull' type='@'/>
</method>
<method selector='leftMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='localizedPaperName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='orientation'>
<retval declared_type='NSPaperOrientation' type='i' type64='q'/>
</method>
<method selector='paperName'>
<retval declared_type='NSPrinterPaperName _Nullable' type='@'/>
</method>
<method selector='paperSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='printSettings'>
<retval declared_type='NSMutableDictionary * _Nonnull' type='@'/>
</method>
<method selector='printer'>
<retval declared_type='NSPrinter * _Nonnull' type='@'/>
</method>
<method selector='rightMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scalingFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setBottomMargin:'>
<arg declared_type='CGFloat' index='0' name='bottomMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultPrinter:'>
<arg declared_type='NSPrinter * _Nullable' index='0' name='printer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalPagination:'>
<arg declared_type='NSPrintingPaginationMode' index='0' name='horizontalPagination' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontallyCentered:'>
<arg declared_type='BOOL' index='0' name='horizontallyCentered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setJobDisposition:'>
<arg declared_type='NSPrintJobDispositionValue _Nonnull' index='0' name='jobDisposition' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftMargin:'>
<arg declared_type='CGFloat' index='0' name='leftMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type='NSPaperOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaperName:'>
<arg declared_type='NSPrinterPaperName _Nullable' index='0' name='paperName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaperSize:'>
<arg declared_type='NSSize' index='0' name='paperSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrinter:'>
<arg declared_type='NSPrinter * _Nonnull' index='0' name='printer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightMargin:'>
<arg declared_type='CGFloat' index='0' name='rightMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScalingFactor:'>
<arg declared_type='CGFloat' index='0' name='scalingFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionOnly:'>
<arg declared_type='BOOL' index='0' name='selectionOnly' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedPrintInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='sharedPrintInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopMargin:'>
<arg declared_type='CGFloat' index='0' name='topMargin' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpPrintOperationDefaultValues'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalPagination:'>
<arg declared_type='NSPrintingPaginationMode' index='0' name='verticalPagination' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticallyCentered:'>
<arg declared_type='BOOL' index='0' name='verticallyCentered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedPrintInfo'>
<retval declared_type='NSPrintInfo * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sizeForPaperName:'>
<arg declared_type='NSPrinterPaperName _Nullable' index='0' name='name' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='takeSettingsFromPDFInfo:'>
<arg declared_type='NSPDFInfo * _Nonnull' index='0' name='inPDFInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='topMargin'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='updateFromPMPageFormat'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFromPMPrintSettings'>
<retval declared_type='void' type='v'/>
</method>
<method selector='verticalPagination'>
<retval declared_type='NSPrintingPaginationMode' type='I' type64='Q'/>
</method>
</class>
<class name='NSPrintOperation'>
<method class_method='true' selector='EPSOperationWithView:insideRect:toData:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSMutableData * _Nullable' index='2' name='data' type='@'/>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='EPSOperationWithView:insideRect:toData:printInfo:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSMutableData * _Nonnull' index='2' name='data' type='@'/>
<arg declared_type='NSPrintInfo * _Nonnull' index='3' name='printInfo' type='@'/>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='EPSOperationWithView:insideRect:toPath:printInfo:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='path' type='@'/>
<arg declared_type='NSPrintInfo * _Nonnull' index='3' name='printInfo' type='@'/>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='PDFOperationWithView:insideRect:toData:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSMutableData * _Nonnull' index='2' name='data' type='@'/>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='PDFOperationWithView:insideRect:toData:printInfo:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSMutableData * _Nonnull' index='2' name='data' type='@'/>
<arg declared_type='NSPrintInfo * _Nonnull' index='3' name='printInfo' type='@'/>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='PDFOperationWithView:insideRect:toPath:printInfo:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='path' type='@'/>
<arg declared_type='NSPrintInfo * _Nonnull' index='3' name='printInfo' type='@'/>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method selector='PDFPanel'>
<retval declared_type='NSPDFPanel * _Nonnull' type='@'/>
</method>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='canSpawnSeparateThread'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cleanUpOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='context'>
<retval declared_type='NSGraphicsContext * _Nullable' type='@'/>
</method>
<method selector='createContext'>
<retval declared_type='NSGraphicsContext * _Nullable' type='@'/>
</method>
<method class_method='true' selector='currentOperation'>
<retval declared_type='NSPrintOperation * _Nullable' type='@'/>
</method>
<method selector='currentPage'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='deliverResult'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='destroyContext'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isCopyingOperation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='jobStyleHint'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='jobTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='pageOrder'>
<retval declared_type='NSPrintingPageOrder' type='i' type64='q'/>
</method>
<method selector='pageRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='preferredRenderingQuality'>
<retval declared_type='NSPrintRenderingQuality' type='i' type64='q'/>
</method>
<method selector='printInfo'>
<retval declared_type='NSPrintInfo * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='printOperationWithView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='printOperationWithView:printInfo:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSPrintInfo * _Nonnull' index='1' name='printInfo' type='@'/>
<retval declared_type='NSPrintOperation * _Nonnull' type='@'/>
</method>
<method selector='printPanel'>
<retval declared_type='NSPrintPanel * _Nonnull' type='@'/>
</method>
<method selector='runOperation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='runOperationModalForWindow:delegate:didRunSelector:contextInfo:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='docWindow' type='@'/>
<arg declared_type='id _Nullable' index='1' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='2' name='didRunSelector' type=':'/>
<arg declared_type='void * _Nullable' index='3' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanSpawnSeparateThread:'>
<arg declared_type='BOOL' index='0' name='canSpawnSeparateThread' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setCurrentOperation:'>
<arg declared_type='NSPrintOperation * _Nullable' index='0' name='currentOperation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setJobStyleHint:'>
<arg declared_type='NSString * _Nullable' index='0' name='hint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setJobTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='jobTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPDFPanel:'>
<arg declared_type='NSPDFPanel * _Nonnull' index='0' name='PDFPanel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPageOrder:'>
<arg declared_type='NSPrintingPageOrder' index='0' name='pageOrder' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='printInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrintPanel:'>
<arg declared_type='NSPrintPanel * _Nonnull' index='0' name='printPanel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowPanels:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsPrintPanel:'>
<arg declared_type='BOOL' index='0' name='showsPrintPanel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsProgressPanel:'>
<arg declared_type='BOOL' index='0' name='showsProgressPanel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showPanels'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsPrintPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsProgressPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
</class>
<class name='NSPrintPanel'>
<method selector='accessoryControllers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='addAccessoryController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='accessoryController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='printInfo' type='@'/>
<arg declared_type='NSWindow * _Nonnull' index='1' name='docWindow' type='@'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didEndSelector' type=':'/>
<arg declared_type='void * _Nullable' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultButtonTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='finalWritePrintInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='helpAnchor'>
<retval declared_type='NSHelpAnchorName _Nullable' type='@'/>
</method>
<method selector='jobStyleHint'>
<retval declared_type='NSPrintPanelJobStyleHint _Nullable' type='@'/>
</method>
<method selector='options'>
<retval declared_type='NSPrintPanelOptions' type='I' type64='Q'/>
</method>
<method selector='printInfo'>
<retval declared_type='NSPrintInfo * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='printPanel'>
<retval declared_type='NSPrintPanel * _Nonnull' type='@'/>
</method>
<method selector='removeAccessoryController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='accessoryController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runModal'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='runModalWithPrintInfo:'>
<arg declared_type='NSPrintInfo * _Nonnull' index='0' name='printInfo' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultButtonTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='defaultButtonTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHelpAnchor:'>
<arg declared_type='NSHelpAnchorName _Nullable' index='0' name='helpAnchor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setJobStyleHint:'>
<arg declared_type='NSPrintPanelJobStyleHint _Nullable' index='0' name='jobStyleHint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOptions:'>
<arg declared_type='NSPrintPanelOptions' index='0' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFromPrintInfo'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSPrinter'>
<method selector='acceptsBinary'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='booleanForKey:inTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='table' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deviceDescription'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='domain'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='floatForKey:inTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='table' type='@'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='host'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='imageRectForPaper:'>
<arg declared_type='NSString * _Nullable' index='0' name='paperName' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='intForKey:inTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='table' type='@'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='isColor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFontAvailable:'>
<arg declared_type='NSString * _Nullable' index='0' name='faceName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKey:inTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='table' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOutputStackInReverseOrder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='languageLevel'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='note'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='pageSizeForPaper:'>
<arg declared_type='NSPrinterPaperName _Nonnull' index='0' name='paperName' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='printerNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='printerTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='printerWithName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSPrinter * _Nullable' type='@'/>
</method>
<method class_method='true' selector='printerWithName:domain:includeUnavailable:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='domain' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='NSPrinter * _Nullable' type='@'/>
</method>
<method class_method='true' selector='printerWithType:'>
<arg declared_type='NSPrinterTypeName _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='NSPrinter * _Nullable' type='@'/>
</method>
<method selector='rectForKey:inTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='table' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sizeForKey:inTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='table' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='statusForTable:'>
<arg declared_type='NSString * _Nonnull' index='0' name='tableName' type='@'/>
<retval declared_type='NSPrinterTableStatus' type='I' type64='Q'/>
</method>
<method selector='stringForKey:inTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='table' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='stringListForKey:inTable:'>
<arg declared_type='NSString * _Nullable' index='0' name='key' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='table' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='type'>
<retval declared_type='NSPrinterTypeName _Nonnull' type='@'/>
</method>
</class>
<class name='NSProgressIndicator'>
<method selector='animate:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='controlSize'>
<retval declared_type='NSControlSize' type='I' type64='Q'/>
</method>
<method selector='controlTint'>
<retval declared_type='NSControlTint' type='I' type64='Q'/>
</method>
<method selector='doubleValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='incrementBy:'>
<arg declared_type='double' index='0' name='delta' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isBezeled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDisplayedWhenStopped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isIndeterminate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setAnimationDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type='BOOL' index='0' name='bezeled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type='NSControlSize' index='0' name='controlSize' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlTint:'>
<arg declared_type='NSControlTint' index='0' name='controlTint' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayedWhenStopped:'>
<arg declared_type='BOOL' index='0' name='displayedWhenStopped' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleValue:'>
<arg declared_type='double' index='0' name='doubleValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndeterminate:'>
<arg declared_type='BOOL' index='0' name='indeterminate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type='double' index='0' name='maxValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type='double' index='0' name='minValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyle:'>
<arg declared_type='NSProgressIndicatorStyle' index='0' name='style' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesThreadedAnimation:'>
<arg declared_type='BOOL' index='0' name='usesThreadedAnimation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimation:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimation:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='NSProgressIndicatorStyle' type='I' type64='Q'/>
</method>
<method selector='usesThreadedAnimation'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSResponder'>
<method selector='acceptsFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='becomeFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginGestureWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelOperation:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='capitalizeWord:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='centerSelectionInVisibleArea:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeCaseOfLetter:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='complete:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cursorUpdate:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteBackward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteBackwardByDecomposingPreviousCharacter:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteForward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteToBeginningOfLine:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteToBeginningOfParagraph:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteToEndOfLine:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteToEndOfParagraph:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteToMark:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteWordBackward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteWordForward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doCommandBySelector:'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeRestorableStateWithCoder:backgroundQueue:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<arg declared_type='NSOperationQueue * _Nonnull' index='1' name='queue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endGestureWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flagsChanged:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushBufferedKeyEvents'>
<retval declared_type='void' type='v'/>
</method>
<method selector='helpRequested:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='eventPtr' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='indent:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='insertBacktab:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertContainerBreak:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertDoubleQuoteIgnoringSubstitution:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertLineBreak:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertNewline:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertNewlineIgnoringFieldEditor:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertParagraphSeparator:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSingleQuoteIgnoringSubstitution:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertTab:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertTabIgnoringFieldEditor:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertText:'>
<arg declared_type='id _Nonnull' index='0' name='insertString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='interfaceStyle'>
<retval declared_type='NSInterfaceStyle' type='I' type64='Q'/>
</method>
<method selector='interpretKeyEvents:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='eventArray' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateRestorableState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lowercaseWord:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='magnifyWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeBaseWritingDirectionLeftToRight:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeBaseWritingDirectionNatural:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeBaseWritingDirectionRightToLeft:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeTextWritingDirectionNatural:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeTouchBar'>
<retval declared_type='NSTouchBar * _Nullable' type='@'/>
</method>
<method selector='menu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='mouseDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseDragged:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseEntered:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseExited:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseMoved:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveBackward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveBackwardAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveDown:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveDownAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveForward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveForwardAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveLeft:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveLeftAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveParagraphBackwardAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveParagraphForwardAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveRight:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveRightAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToBeginningOfDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToBeginningOfDocumentAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToBeginningOfLine:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToBeginningOfLineAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToBeginningOfParagraph:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToBeginningOfParagraphAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToEndOfDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToEndOfDocumentAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToEndOfLine:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToEndOfLineAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToEndOfParagraph:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToEndOfParagraphAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToLeftEndOfLine:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToLeftEndOfLineAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToRightEndOfLine:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToRightEndOfLineAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveUp:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveUpAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveWordBackward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveWordBackwardAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveWordForward:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveWordForwardAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveWordLeft:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveWordLeftAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveWordRight:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveWordRightAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='newWindowForTab:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='nextResponder'>
<retval declared_type='NSResponder * _Nullable' type='@'/>
</method>
<method selector='noResponderFor:'>
<arg declared_type='SEL _Nonnull' index='0' name='eventSelector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseDragged:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='otherMouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageDown:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageDownAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageUp:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageUpAndModifySelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performMnemonic:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performTextFinderAction:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<arg declared_type='NSWindow * _Nonnull' index='1' name='window' type='@'/>
<arg declared_type='id _Nullable' index='2' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='didPresentSelector' type=':'/>
<arg declared_type='void * _Nullable' index='4' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pressureChangeWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quickLookPreviewItems:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quickLookWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resignFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='restorableStateKeyPaths'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='restoreStateWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='restoreUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseDragged:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightMouseUp:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotateWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollLineDown:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollLineUp:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollPageDown:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollPageUp:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToBeginningOfDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollToEndOfDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollWheel:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectLine:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectParagraph:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectToMark:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectWord:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterfaceStyle:'>
<arg declared_type='NSInterfaceStyle' index='0' name='interfaceStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMark:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextResponder:'>
<arg declared_type='NSResponder * _Nullable' index='0' name='nextResponder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTouchBar:'>
<arg declared_type='NSTouchBar * _Nullable' index='0' name='touchBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserActivity:'>
<arg declared_type='NSUserActivity * _Nullable' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldBeTreatedAsInkEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showContextHelp:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='smartMagnifyWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supplementalTargetForAction:sender:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='swapWithMark:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='swipeWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabletPoint:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabletProximity:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchBar'>
<retval declared_type='NSTouchBar * _Nullable' type='@'/>
</method>
<method selector='touchesBeganWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesCancelledWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesEndedWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='touchesMovedWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transpose:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transposeWords:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tryToPerform:with:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='undoManager'>
<retval declared_type='NSUndoManager * _Nullable' type='@'/>
</method>
<method selector='updateUserActivityState:'>
<arg declared_type='NSUserActivity * _Nonnull' index='0' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='uppercaseWord:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userActivity'>
<retval declared_type='NSUserActivity * _Nullable' type='@'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg declared_type='NSPasteboardType _Nullable' index='0' name='sendType' type='@'/>
<arg declared_type='NSPasteboardType _Nullable' index='1' name='returnType' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='validateProposedFirstResponder:forEvent:'>
<arg declared_type='NSResponder * _Nonnull' index='0' name='responder' type='@'/>
<arg declared_type='NSEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsForwardedScrollEventsForAxis:'>
<arg declared_type='NSEventGestureAxis' index='0' name='axis' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsScrollEventsForSwipeTrackingOnAxis:'>
<arg declared_type='NSEventGestureAxis' index='0' name='axis' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willPresentError:'>
<arg declared_type='NSError * _Nonnull' index='0' name='error' type='@'/>
<retval declared_type='NSError * _Nonnull' type='@'/>
</method>
<method selector='yank:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSRotationGestureRecognizer'>
<method selector='rotation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rotationInDegrees'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setRotation:'>
<arg declared_type='CGFloat' index='0' name='rotation' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotationInDegrees:'>
<arg declared_type='CGFloat' index='0' name='rotationInDegrees' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSRuleEditor'>
<method selector='addRow:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canRemoveAllRows'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='criteriaForRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='criteriaKeyPath'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='displayValuesForRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='displayValuesKeyPath'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='formattingDictionary'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='formattingStringsFilename'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='insertRowAtIndex:withType:asSubrowOfRow:animate:'>
<arg declared_type='NSInteger' index='0' name='rowIndex' type='i' type64='q'/>
<arg declared_type='NSRuleEditorRowType' index='1' name='rowType' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='2' name='parentRow' type='i' type64='q'/>
<arg declared_type='BOOL' index='3' name='shouldAnimate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nestingMode'>
<retval declared_type='NSRuleEditorNestingMode' type='I' type64='Q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='parentRowForRow:'>
<arg declared_type='NSInteger' index='0' name='rowIndex' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='predicate'>
<retval declared_type='NSPredicate * _Nullable' type='@'/>
</method>
<method selector='predicateForRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='NSPredicate * _Nullable' type='@'/>
</method>
<method selector='reloadCriteria'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadPredicate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRowAtIndex:'>
<arg declared_type='NSInteger' index='0' name='rowIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRowsAtIndexes:includeSubrows:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type='@'/>
<arg declared_type='BOOL' index='1' name='includeSubrows' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='rowForDisplayValue:'>
<arg declared_type='id _Nonnull' index='0' name='displayValue' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rowHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rowTypeForRow:'>
<arg declared_type='NSInteger' index='0' name='rowIndex' type='i' type64='q'/>
<retval declared_type='NSRuleEditorRowType' type='I' type64='Q'/>
</method>
<method selector='rowTypeKeyPath'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='selectRowIndexes:byExtendingSelection:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='BOOL' index='1' name='extend' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedRowIndexes'>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='setCanRemoveAllRows:'>
<arg declared_type='BOOL' index='0' name='canRemoveAllRows' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCriteria:andDisplayValues:forRowAtIndex:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='criteria' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='values' type='@'/>
<arg declared_type='NSInteger' index='2' name='rowIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCriteriaKeyPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='criteriaKeyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayValuesKeyPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='displayValuesKeyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormattingDictionary:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='formattingDictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormattingStringsFilename:'>
<arg declared_type='NSString * _Nullable' index='0' name='formattingStringsFilename' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNestingMode:'>
<arg declared_type='NSRuleEditorNestingMode' index='0' name='nestingMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowClass:'>
<arg declared_type='Class _Nonnull' index='0' name='rowClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowHeight:'>
<arg declared_type='CGFloat' index='0' name='rowHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowTypeKeyPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='rowTypeKeyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubrowsKeyPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='subrowsKeyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subrowIndexesForRow:'>
<arg declared_type='NSInteger' index='0' name='rowIndex' type='i' type64='q'/>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='subrowsKeyPath'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSRulerMarker'>
<method selector='drawRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='imageOrigin'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='imageRectInRuler'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithRulerView:markerLocation:image:imageOrigin:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='CGFloat' index='1' name='location' type='f' type64='d'/>
<arg declared_type='NSImage * _Nonnull' index='2' name='image' type='@'/>
<arg declared_type='NSPoint' index='3' name='imageOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isDragging'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMovable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRemovable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='markerLocation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='representedObject'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='ruler'>
<retval declared_type='NSRulerView * _Nullable' type='@'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageOrigin:'>
<arg declared_type='NSPoint' index='0' name='imageOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkerLocation:'>
<arg declared_type='CGFloat' index='0' name='markerLocation' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMovable:'>
<arg declared_type='BOOL' index='0' name='movable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemovable:'>
<arg declared_type='BOOL' index='0' name='removable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='representedObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='thicknessRequiredInRuler'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='trackMouse:adding:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='mouseDownEvent' type='@'/>
<arg declared_type='BOOL' index='1' name='isAdding' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSRulerView'>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='addMarker:'>
<arg declared_type='NSRulerMarker * _Nonnull' index='0' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='baselineLocation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='clientView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='drawHashMarksAndLabelsInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawMarkersInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithScrollView:orientation:'>
<arg declared_type='NSScrollView * _Nullable' index='0' name='scrollView' type='@'/>
<arg declared_type='NSRulerOrientation' index='1' name='orientation' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='invalidateHashMarks'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isFlipped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='markers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='measurementUnits'>
<retval declared_type='NSRulerViewUnitName _Nonnull' type='@'/>
</method>
<method selector='moveRulerlineFromLocation:toLocation:'>
<arg declared_type='CGFloat' index='0' name='oldLocation' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='newLocation' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orientation'>
<retval declared_type='NSRulerOrientation' type='I' type64='Q'/>
</method>
<method selector='originOffset'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:'>
<arg declared_type='NSRulerViewUnitName _Nonnull' index='0' name='unitName' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='abbreviation' type='@'/>
<arg declared_type='CGFloat' index='2' name='conversionFactor' type='f' type64='d'/>
<arg declared_type='NSArray * _Nonnull' index='3' name='stepUpCycle' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='4' name='stepDownCycle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeMarker:'>
<arg declared_type='NSRulerMarker * _Nonnull' index='0' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requiredThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='reservedThicknessForAccessoryView'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='reservedThicknessForMarkers'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='ruleThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='scrollView'>
<retval declared_type='NSScrollView * _Nullable' type='@'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientView:'>
<arg declared_type='NSView * _Nullable' index='0' name='clientView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkers:'>
<arg declared_type='NSArray * _Nullable' index='0' name='markers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMeasurementUnits:'>
<arg declared_type='NSRulerViewUnitName _Nonnull' index='0' name='measurementUnits' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type='NSRulerOrientation' index='0' name='orientation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOriginOffset:'>
<arg declared_type='CGFloat' index='0' name='originOffset' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReservedThicknessForAccessoryView:'>
<arg declared_type='CGFloat' index='0' name='reservedThicknessForAccessoryView' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReservedThicknessForMarkers:'>
<arg declared_type='CGFloat' index='0' name='reservedThicknessForMarkers' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRuleThickness:'>
<arg declared_type='CGFloat' index='0' name='ruleThickness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollView:'>
<arg declared_type='NSScrollView * _Nullable' index='0' name='scrollView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackMarker:withMouseEvent:'>
<arg declared_type='NSRulerMarker * _Nonnull' index='0' name='marker' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSRunningApplication'>
<method selector='activateWithOptions:'>
<arg declared_type='NSApplicationActivationOptions' index='0' name='options' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='activationPolicy'>
<retval declared_type='NSApplicationActivationPolicy' type='i' type64='q'/>
</method>
<method selector='bundleIdentifier'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='bundleURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method class_method='true' selector='currentApplication'>
<retval declared_type='__kindof NSRunningApplication * _Nonnull' type='@'/>
</method>
<method selector='executableArchitecture'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='executableURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='forceTerminate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hide'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='icon'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFinishedLaunching'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTerminated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='launchDate'>
<retval declared_type='NSDate * _Nullable' type='@'/>
</method>
<method selector='localizedName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='ownsMenuBar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='processIdentifier'>
<retval declared_type='pid_t' type='i'/>
</method>
<method class_method='true' selector='runningApplicationWithProcessIdentifier:'>
<arg declared_type='pid_t' index='0' name='pid' type='i'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='runningApplicationsWithBundleIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='bundleIdentifier' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='terminate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='terminateAutomaticallyTerminableApplications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unhide'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSSavePanel'>
<method selector='URL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='allowedFileTypes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='allowsOtherFileTypes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='name' type='@'/>
<arg declared_type='NSWindow * _Nullable' index='2' name='docWindow' type='@'/>
<arg declared_type='id _Nullable' index='3' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='4' name='didEndSelector' type=':'/>
<arg declared_type='void * _Nullable' index='5' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSheetModalForWindow:completionHandler:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSModalResponse)' function_pointer='true' index='1' name='handler' type='@?'>
<arg declared_type='NSModalResponse' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginWithCompletionHandler:'>
<arg declared_type='void (^ _Nonnull)(NSModalResponse)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='NSModalResponse' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='canCreateDirectories'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canSelectHiddenExtension'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='directory'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='directoryURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='filename'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='isExpanded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExtensionHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='message'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='nameFieldLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='nameFieldStringValue'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='ok:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prompt'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='requiredFileType'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='runModal'>
<retval declared_type='NSModalResponse' type='i' type64='q'/>
</method>
<method selector='runModalForDirectory:file:'>
<arg declared_type='NSString * _Nullable' index='0' name='path' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='name' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='savePanel'>
<retval declared_type='NSSavePanel * _Nonnull' type='@'/>
</method>
<method selector='selectText:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowedFileTypes:'>
<arg declared_type='NSArray * _Nullable' index='0' name='allowedFileTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsOtherFileTypes:'>
<arg declared_type='BOOL' index='0' name='allowsOtherFileTypes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanCreateDirectories:'>
<arg declared_type='BOOL' index='0' name='canCreateDirectories' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanSelectHiddenExtension:'>
<arg declared_type='BOOL' index='0' name='canSelectHiddenExtension' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirectory:'>
<arg declared_type='NSString * _Nullable' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDirectoryURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='directoryURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExtensionHidden:'>
<arg declared_type='BOOL' index='0' name='extensionHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessage:'>
<arg declared_type='NSString * _Nullable' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNameFieldLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='nameFieldLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNameFieldStringValue:'>
<arg declared_type='NSString * _Nonnull' index='0' name='nameFieldStringValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrompt:'>
<arg declared_type='NSString * _Nullable' index='0' name='prompt' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequiredFileType:'>
<arg declared_type='NSString * _Nullable' index='0' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsHiddenFiles:'>
<arg declared_type='BOOL' index='0' name='showsHiddenFiles' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsTagField:'>
<arg declared_type='BOOL' index='0' name='showsTagField' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTagNames:'>
<arg declared_type='NSArray * _Nullable' index='0' name='tagNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTreatsFilePackagesAsDirectories:'>
<arg declared_type='BOOL' index='0' name='treatsFilePackagesAsDirectories' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsHiddenFiles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsTagField'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tagNames'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='treatsFilePackagesAsDirectories'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateVisibleColumns'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScreen'>
<method selector='backingAlignedRect:options:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSAlignmentOptions' index='1' name='options' type='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='backingScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='canRepresentDisplayGamut:'>
<arg declared_type='NSDisplayGamut' index='0' name='displayGamut' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='colorSpace'>
<retval declared_type='NSColorSpace * _Nullable' type='@'/>
</method>
<method selector='convertRectFromBacking:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToBacking:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='deepestScreen'>
<retval declared_type='NSScreen * _Nullable' type='@'/>
</method>
<method selector='depth'>
<retval declared_type='NSWindowDepth' type='i'/>
</method>
<method selector='deviceDescription'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='mainScreen'>
<retval declared_type='NSScreen * _Nullable' type='@'/>
</method>
<method selector='maximumExtendedDynamicRangeColorComponentValue'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='screens'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='screensHaveSeparateSpaces'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportedWindowDepths'>
<retval const='true' declared_type='NSWindowDepth * _Nonnull' type='^i'/>
</method>
<method selector='userSpaceScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='visibleFrame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSScrollView'>
<method selector='addFloatingSubview:forAxis:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSEventGestureAxis' index='1' name='axis' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsMagnification'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autohidesScrollers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='automaticallyAdjustsContentInsets'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='borderType'>
<retval declared_type='NSBorderType' type='I' type64='Q'/>
</method>
<method selector='contentInsets'>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='contentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:'>
<arg declared_type='NSSize' index='0' name='fSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='BOOL' index='1' name='hFlag' type='B'/>
<arg declared_type='BOOL' index='2' name='vFlag' type='B'/>
<arg declared_type='NSBorderType' index='3' name='type' type='I' type64='Q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='contentSizeForFrameSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:'>
<arg declared_type='NSSize' index='0' name='fSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='Class _Nullable' index='1' name='horizontalScrollerClass' type='#'/>
<arg declared_type='Class _Nullable' index='2' name='verticalScrollerClass' type='#'/>
<arg declared_type='NSBorderType' index='3' name='type' type='I' type64='Q'/>
<arg declared_type='NSControlSize' index='4' name='controlSize' type='I' type64='Q'/>
<arg declared_type='NSScrollerStyle' index='5' name='scrollerStyle' type='i' type64='q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='contentView'>
<retval declared_type='NSClipView * _Nonnull' type='@'/>
</method>
<method selector='documentCursor'>
<retval declared_type='NSCursor * _Nullable' type='@'/>
</method>
<method selector='documentView'>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
<method selector='documentVisibleRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='findBarPosition'>
<retval declared_type='NSScrollViewFindBarPosition' type='i' type64='q'/>
</method>
<method selector='flashScrollers'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:'>
<arg declared_type='NSSize' index='0' name='cSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='BOOL' index='1' name='hFlag' type='B'/>
<arg declared_type='BOOL' index='2' name='vFlag' type='B'/>
<arg declared_type='NSBorderType' index='3' name='type' type='I' type64='Q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='frameSizeForContentSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:'>
<arg declared_type='NSSize' index='0' name='cSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='Class _Nullable' index='1' name='horizontalScrollerClass' type='#'/>
<arg declared_type='Class _Nullable' index='2' name='verticalScrollerClass' type='#'/>
<arg declared_type='NSBorderType' index='3' name='type' type='I' type64='Q'/>
<arg declared_type='NSControlSize' index='4' name='controlSize' type='I' type64='Q'/>
<arg declared_type='NSScrollerStyle' index='5' name='scrollerStyle' type='i' type64='q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='hasHorizontalRuler'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasHorizontalScroller'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasVerticalRuler'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasVerticalScroller'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='horizontalLineScroll'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='horizontalPageScroll'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='horizontalRulerView'>
<retval declared_type='NSRulerView * _Nullable' type='@'/>
</method>
<method selector='horizontalScrollElasticity'>
<retval declared_type='NSScrollElasticity' type='i' type64='q'/>
</method>
<method selector='horizontalScroller'>
<retval declared_type='NSScroller * _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='lineScroll'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='magnification'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='magnifyToFitRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='maxMagnification'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minMagnification'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='pageScroll'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='reflectScrolledClipView:'>
<arg declared_type='NSClipView * _Nonnull' index='0' name='cView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='rulerViewClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='rulersVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scrollWheel:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollerInsets'>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='scrollerKnobStyle'>
<retval declared_type='NSScrollerKnobStyle' type='i' type64='q'/>
</method>
<method selector='scrollerStyle'>
<retval declared_type='NSScrollerStyle' type='i' type64='q'/>
</method>
<method selector='scrollsDynamically'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAllowsMagnification:'>
<arg declared_type='BOOL' index='0' name='allowsMagnification' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutohidesScrollers:'>
<arg declared_type='BOOL' index='0' name='autohidesScrollers' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticallyAdjustsContentInsets:'>
<arg declared_type='BOOL' index='0' name='automaticallyAdjustsContentInsets' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderType:'>
<arg declared_type='NSBorderType' index='0' name='borderType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentInsets:'>
<arg declared_type='NSEdgeInsets' index='0' name='contentInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type='NSClipView * _Nonnull' index='0' name='contentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentCursor:'>
<arg declared_type='NSCursor * _Nullable' index='0' name='documentCursor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentView:'>
<arg declared_type='__kindof NSView * _Nullable' index='0' name='documentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFindBarPosition:'>
<arg declared_type='NSScrollViewFindBarPosition' index='0' name='findBarPosition' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasHorizontalRuler:'>
<arg declared_type='BOOL' index='0' name='hasHorizontalRuler' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg declared_type='BOOL' index='0' name='hasHorizontalScroller' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasVerticalRuler:'>
<arg declared_type='BOOL' index='0' name='hasVerticalRuler' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg declared_type='BOOL' index='0' name='hasVerticalScroller' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalLineScroll:'>
<arg declared_type='CGFloat' index='0' name='horizontalLineScroll' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalPageScroll:'>
<arg declared_type='CGFloat' index='0' name='horizontalPageScroll' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalRulerView:'>
<arg declared_type='NSRulerView * _Nullable' index='0' name='horizontalRulerView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalScrollElasticity:'>
<arg declared_type='NSScrollElasticity' index='0' name='horizontalScrollElasticity' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalScroller:'>
<arg declared_type='NSScroller * _Nullable' index='0' name='horizontalScroller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineScroll:'>
<arg declared_type='CGFloat' index='0' name='lineScroll' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMagnification:'>
<arg declared_type='CGFloat' index='0' name='magnification' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMagnification:centeredAtPoint:'>
<arg declared_type='CGFloat' index='0' name='magnification' type='f' type64='d'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxMagnification:'>
<arg declared_type='CGFloat' index='0' name='maxMagnification' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinMagnification:'>
<arg declared_type='CGFloat' index='0' name='minMagnification' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPageScroll:'>
<arg declared_type='CGFloat' index='0' name='pageScroll' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setRulerViewClass:'>
<arg declared_type='Class _Nullable' index='0' name='rulerViewClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRulersVisible:'>
<arg declared_type='BOOL' index='0' name='rulersVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollerInsets:'>
<arg declared_type='NSEdgeInsets' index='0' name='scrollerInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollerKnobStyle:'>
<arg declared_type='NSScrollerKnobStyle' index='0' name='scrollerKnobStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollerStyle:'>
<arg declared_type='NSScrollerStyle' index='0' name='scrollerStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollsDynamically:'>
<arg declared_type='BOOL' index='0' name='scrollsDynamically' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesPredominantAxisScrolling:'>
<arg declared_type='BOOL' index='0' name='usesPredominantAxisScrolling' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalLineScroll:'>
<arg declared_type='CGFloat' index='0' name='verticalLineScroll' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalPageScroll:'>
<arg declared_type='CGFloat' index='0' name='verticalPageScroll' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalRulerView:'>
<arg declared_type='NSRulerView * _Nullable' index='0' name='verticalRulerView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalScrollElasticity:'>
<arg declared_type='NSScrollElasticity' index='0' name='verticalScrollElasticity' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalScroller:'>
<arg declared_type='NSScroller * _Nullable' index='0' name='verticalScroller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesPredominantAxisScrolling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='verticalLineScroll'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='verticalPageScroll'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='verticalRulerView'>
<retval declared_type='NSRulerView * _Nullable' type='@'/>
</method>
<method selector='verticalScrollElasticity'>
<retval declared_type='NSScrollElasticity' type='i' type64='q'/>
</method>
<method selector='verticalScroller'>
<retval declared_type='NSScroller * _Nullable' type='@'/>
</method>
</class>
<class name='NSScroller'>
<method selector='arrowsPosition'>
<retval declared_type='NSScrollArrowPosition' type='I' type64='Q'/>
</method>
<method selector='checkSpaceForParts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='controlSize'>
<retval declared_type='NSControlSize' type='I' type64='Q'/>
</method>
<method selector='controlTint'>
<retval declared_type='NSControlTint' type='I' type64='Q'/>
</method>
<method selector='drawArrow:highlight:'>
<arg declared_type='NSScrollerArrow' index='0' name='whichArrow' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawKnob'>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawKnobSlotInRect:highlight:'>
<arg declared_type='NSRect' index='0' name='slotRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawParts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='highlight:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hitPart'>
<retval declared_type='NSScrollerPart' type='I' type64='Q'/>
</method>
<method class_method='true' selector='isCompatibleWithOverlayScrollers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='knobProportion'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='knobStyle'>
<retval declared_type='NSScrollerKnobStyle' type='i' type64='q'/>
</method>
<method class_method='true' selector='preferredScrollerStyle'>
<retval declared_type='NSScrollerStyle' type='i' type64='q'/>
</method>
<method selector='rectForPart:'>
<arg declared_type='NSScrollerPart' index='0' name='partCode' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='scrollerStyle'>
<retval declared_type='NSScrollerStyle' type='i' type64='q'/>
</method>
<method class_method='true' selector='scrollerWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='scrollerWidthForControlSize:'>
<arg declared_type='NSControlSize' index='0' name='controlSize' type='I' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='scrollerWidthForControlSize:scrollerStyle:'>
<arg declared_type='NSControlSize' index='0' name='controlSize' type='I' type64='Q'/>
<arg declared_type='NSScrollerStyle' index='1' name='scrollerStyle' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setArrowsPosition:'>
<arg declared_type='NSScrollArrowPosition' index='0' name='arrowsPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type='NSControlSize' index='0' name='controlSize' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlTint:'>
<arg declared_type='NSControlTint' index='0' name='controlTint' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloatValue:knobProportion:'>
<arg declared_type='float' index='0' name='value' type='f'/>
<arg declared_type='CGFloat' index='1' name='proportion' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKnobProportion:'>
<arg declared_type='CGFloat' index='0' name='proportion' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKnobStyle:'>
<arg declared_type='NSScrollerKnobStyle' index='0' name='knobStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrollerStyle:'>
<arg declared_type='NSScrollerStyle' index='0' name='scrollerStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='testPart:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSScrollerPart' type='I' type64='Q'/>
</method>
<method selector='trackKnob:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackScrollButtons:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usableParts'>
<retval declared_type='NSUsableScrollerParts' type='I' type64='Q'/>
</method>
</class>
<class name='NSScrubber'>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='backgroundView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='floatsSelectionViews'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='highlightedIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertItemsAtIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isContinuous'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemAlignment'>
<retval declared_type='NSScrubberAlignment' type='i' type64='q'/>
</method>
<method selector='itemViewForItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='__kindof NSScrubberItemView * _Nullable' type='@'/>
</method>
<method selector='makeItemWithIdentifier:owner:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='itemIdentifier' type='@'/>
<arg declared_type='id _Nullable' index='1' name='owner' type='@'/>
<retval declared_type='__kindof NSScrubberItemView * _Nullable' type='@'/>
</method>
<method selector='mode'>
<retval declared_type='NSScrubberMode' type='i' type64='q'/>
</method>
<method selector='moveItemAtIndex:toIndex:'>
<arg declared_type='NSInteger' index='0' name='oldIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='newIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performSequentialBatchUpdates:'>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='0' name='updateBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerClass:forItemIdentifier:'>
<arg declared_type='Class _Nullable' index='0' name='itemViewClass' type='#'/>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='itemIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerNib:forItemIdentifier:'>
<arg declared_type='NSNib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='itemIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadItemsAtIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeItemsAtIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollItemAtIndex:toAlignment:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<arg declared_type='NSScrubberAlignment' index='1' name='alignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubberLayout'>
<retval declared_type='__kindof NSScrubberLayout * _Nonnull' type='@'/>
</method>
<method selector='selectedIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectionBackgroundStyle'>
<retval declared_type='NSScrubberSelectionStyle * _Nullable' type='@'/>
</method>
<method selector='selectionOverlayStyle'>
<retval declared_type='NSScrubberSelectionStyle * _Nullable' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='NSView * _Nullable' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContinuous:'>
<arg declared_type='BOOL' index='0' name='continuous' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloatsSelectionViews:'>
<arg declared_type='BOOL' index='0' name='floatsSelectionViews' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemAlignment:'>
<arg declared_type='NSScrubberAlignment' index='0' name='itemAlignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='NSScrubberMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScrubberLayout:'>
<arg declared_type='__kindof NSScrubberLayout * _Nonnull' index='0' name='scrubberLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedIndex:'>
<arg declared_type='NSInteger' index='0' name='selectedIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionBackgroundStyle:'>
<arg declared_type='NSScrubberSelectionStyle * _Nullable' index='0' name='selectionBackgroundStyle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionOverlayStyle:'>
<arg declared_type='NSScrubberSelectionStyle * _Nullable' index='0' name='selectionOverlayStyle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsAdditionalContentIndicators:'>
<arg declared_type='BOOL' index='0' name='showsAdditionalContentIndicators' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsArrowButtons:'>
<arg declared_type='BOOL' index='0' name='showsArrowButtons' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsAdditionalContentIndicators'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsArrowButtons'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSScrubberArrangedView'>
<method selector='applyLayoutAttributes:'>
<arg declared_type='__kindof NSScrubberLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isHighlighted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setHighlighted:'>
<arg declared_type='BOOL' index='0' name='highlighted' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScrubberFlowLayout'>
<method selector='invalidateLayoutForItemsAtIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='invalidItemIndexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='itemSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='itemSpacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setItemSize:'>
<arg declared_type='NSSize' index='0' name='itemSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemSpacing:'>
<arg declared_type='CGFloat' index='0' name='itemSpacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScrubberImageItemView'>
<method selector='image'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='imageAlignment'>
<retval declared_type='NSImageAlignment' type='I' type64='Q'/>
</method>
<method selector='imageView'>
<retval declared_type='NSImageView * _Nonnull' type='@'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageAlignment:'>
<arg declared_type='NSImageAlignment' index='0' name='imageAlignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScrubberLayout'>
<method selector='automaticallyMirrorsInRightToLeftLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='invalidateLayout'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='layoutAttributesClass'>
<retval declared_type='Class _Nonnull' type='#'/>
</method>
<method selector='layoutAttributesForItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='__kindof NSScrubberLayoutAttributes * _Nullable' type='@'/>
</method>
<method selector='layoutAttributesForItemsInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='prepareLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubber'>
<retval declared_type='NSScrubber * _Nullable' type='@'/>
</method>
<method selector='scrubberContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='shouldInvalidateLayoutForChangeFromVisibleRect:toVisibleRect:'>
<arg declared_type='NSRect' index='0' name='fromVisibleRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='1' name='toVisibleRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldInvalidateLayoutForHighlightChange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldInvalidateLayoutForSelectionChange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='visibleRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSScrubberLayoutAttributes'>
<method selector='alpha'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='itemIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='layoutAttributesForItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAlpha:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemIndex:'>
<arg declared_type='NSInteger' index='0' name='itemIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScrubberProportionalLayout'>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithNumberOfVisibleItems:'>
<arg declared_type='NSInteger' index='0' name='numberOfVisibleItems' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='numberOfVisibleItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setNumberOfVisibleItems:'>
<arg declared_type='NSInteger' index='0' name='numberOfVisibleItems' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSScrubberSelectionStyle'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='makeSelectionView'>
<retval declared_type='__kindof NSScrubberSelectionView * _Nullable' type='@'/>
</method>
<method class_method='true' selector='outlineOverlayStyle'>
<retval declared_type='NSScrubberSelectionStyle * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='roundedBackgroundStyle'>
<retval declared_type='NSScrubberSelectionStyle * _Nonnull' type='@'/>
</method>
</class>
<class name='NSScrubberTextItemView'>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textField'>
<retval declared_type='NSTextField * _Nonnull' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSSearchField'>
<method selector='centersPlaceholder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='maximumRecents'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='recentSearches'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='recentsAutosaveName'>
<retval declared_type='NSSearchFieldRecentsAutosaveName _Nullable' type='@'/>
</method>
<method selector='rectForCancelButtonWhenCentered:'>
<arg declared_type='BOOL' index='0' name='isCentered' type='B'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForSearchButtonWhenCentered:'>
<arg declared_type='BOOL' index='0' name='isCentered' type='B'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForSearchTextWhenCentered:'>
<arg declared_type='BOOL' index='0' name='isCentered' type='B'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='searchMenuTemplate'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='sendsSearchStringImmediately'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendsWholeSearchString'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCentersPlaceholder:'>
<arg declared_type='BOOL' index='0' name='centersPlaceholder' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumRecents:'>
<arg declared_type='NSInteger' index='0' name='maximumRecents' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecentSearches:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='recentSearches' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecentsAutosaveName:'>
<arg declared_type='NSSearchFieldRecentsAutosaveName _Nullable' index='0' name='recentsAutosaveName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchMenuTemplate:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='searchMenuTemplate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSendsSearchStringImmediately:'>
<arg declared_type='BOOL' index='0' name='sendsSearchStringImmediately' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSendsWholeSearchString:'>
<arg declared_type='BOOL' index='0' name='sendsWholeSearchString' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSearchFieldCell'>
<method selector='cancelButtonCell'>
<retval declared_type='NSButtonCell * _Nullable' type='@'/>
</method>
<method selector='cancelButtonRectForBounds:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initTextCell:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumRecents'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='recentSearches'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='recentsAutosaveName'>
<retval declared_type='NSSearchFieldRecentsAutosaveName _Nullable' type='@'/>
</method>
<method selector='resetCancelButtonCell'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetSearchButtonCell'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchButtonCell'>
<retval declared_type='NSButtonCell * _Nullable' type='@'/>
</method>
<method selector='searchButtonRectForBounds:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='searchMenuTemplate'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='searchTextRectForBounds:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sendsSearchStringImmediately'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sendsWholeSearchString'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCancelButtonCell:'>
<arg declared_type='NSButtonCell * _Nullable' index='0' name='cancelButtonCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumRecents:'>
<arg declared_type='NSInteger' index='0' name='maximumRecents' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecentSearches:'>
<arg declared_type='NSArray * _Nullable' index='0' name='recentSearches' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecentsAutosaveName:'>
<arg declared_type='NSSearchFieldRecentsAutosaveName _Nullable' index='0' name='recentsAutosaveName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchButtonCell:'>
<arg declared_type='NSButtonCell * _Nullable' index='0' name='searchButtonCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchMenuTemplate:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='searchMenuTemplate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSendsSearchStringImmediately:'>
<arg declared_type='BOOL' index='0' name='sendsSearchStringImmediately' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSendsWholeSearchString:'>
<arg declared_type='BOOL' index='0' name='sendsWholeSearchString' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSecureTextFieldCell'>
<method selector='echosBullets'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEchosBullets:'>
<arg declared_type='BOOL' index='0' name='echosBullets' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSegmentedCell'>
<method selector='drawSegment:inFrame:withView:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<arg declared_type='NSRect' index='1' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='imageScalingForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSImageScaling' type='I' type64='Q'/>
</method>
<method selector='interiorBackgroundStyleForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSBackgroundStyle' type='i' type64='q'/>
</method>
<method selector='isEnabledForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectedForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='labelForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='makeNextSegmentKey'>
<retval declared_type='void' type='v'/>
</method>
<method selector='makePreviousSegmentKey'>
<retval declared_type='void' type='v'/>
</method>
<method selector='menuForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='segmentCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='segmentStyle'>
<retval declared_type='NSSegmentStyle' type='i' type64='q'/>
</method>
<method selector='selectSegmentWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectedSegment'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setEnabled:forSegment:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:forSegment:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScaling:forSegment:'>
<arg declared_type='NSImageScaling' index='0' name='scaling' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:forSegment:'>
<arg declared_type='NSString * _Nonnull' index='0' name='label' type='@'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:forSegment:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='segmentCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSegmentStyle:'>
<arg declared_type='NSSegmentStyle' index='0' name='segmentStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:forSegment:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedSegment:'>
<arg declared_type='NSInteger' index='0' name='selectedSegment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:forSegment:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:forSegment:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTip' type='@'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackingMode:'>
<arg declared_type='NSSegmentSwitchTracking' index='0' name='trackingMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:forSegment:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tagForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='toolTipForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='trackingMode'>
<retval declared_type='NSSegmentSwitchTracking' type='I' type64='Q'/>
</method>
<method selector='widthForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSSegmentedControl'>
<method selector='alignmentForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='doubleValueForSelectedSegment'>
<retval declared_type='double' type='d'/>
</method>
<method selector='imageForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='imageScalingForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSImageScaling' type='I' type64='Q'/>
</method>
<method selector='indexOfSelectedItem'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='isEnabledForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectedForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSpringLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='labelForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='menuForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='segmentCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='segmentDistribution'>
<retval declared_type='NSSegmentDistribution' type='i' type64='q'/>
</method>
<method selector='segmentStyle'>
<retval declared_type='NSSegmentStyle' type='i' type64='q'/>
</method>
<method class_method='true' selector='segmentedControlWithImages:trackingMode:target:action:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='images' type='@'/>
<arg declared_type='NSSegmentSwitchTracking' index='1' name='trackingMode' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='2' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='segmentedControlWithLabels:trackingMode:target:action:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='labels' type='@'/>
<arg declared_type='NSSegmentSwitchTracking' index='1' name='trackingMode' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='2' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='3' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='selectSegmentWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectedSegment'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectedSegmentBezelColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='setAlignment:forSegment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:forSegment:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:forSegment:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScaling:forSegment:'>
<arg declared_type='NSImageScaling' index='0' name='scaling' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:forSegment:'>
<arg declared_type='NSString * _Nonnull' index='0' name='label' type='@'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:forSegment:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSegmentCount:'>
<arg declared_type='NSInteger' index='0' name='segmentCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSegmentDistribution:'>
<arg declared_type='NSSegmentDistribution' index='0' name='segmentDistribution' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSegmentStyle:'>
<arg declared_type='NSSegmentStyle' index='0' name='segmentStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:forSegment:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedSegment:'>
<arg declared_type='NSInteger' index='0' name='selectedSegment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedSegmentBezelColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='selectedSegmentBezelColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsMenuIndicator:forSegment:'>
<arg declared_type='BOOL' index='0' name='showsMenuIndicator' type='B'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpringLoaded:'>
<arg declared_type='BOOL' index='0' name='springLoaded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:forSegment:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:forSegment:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTip' type='@'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackingMode:'>
<arg declared_type='NSSegmentSwitchTracking' index='0' name='trackingMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:forSegment:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<arg declared_type='NSInteger' index='1' name='segment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsMenuIndicatorForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tagForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='toolTipForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='trackingMode'>
<retval declared_type='NSSegmentSwitchTracking' type='I' type64='Q'/>
</method>
<method selector='widthForSegment:'>
<arg declared_type='NSInteger' index='0' name='segment' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSSet'>
<method selector='enumerateIndexPathsWithOptions:usingBlock:'>
<arg declared_type='NSEnumerationOptions' index='0' name='opts' type='I' type64='Q'/>
<arg declared_type='void (^ _Nonnull)(NSIndexPath * _Nonnull, BOOL * _Nonnull)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSIndexPath * _Nonnull' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setWithCollectionViewIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='setWithCollectionViewIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSShadow'>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='set'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowBlurRadius:'>
<arg declared_type='CGFloat' index='0' name='shadowBlurRadius' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='shadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type='NSSize' index='0' name='shadowOffset' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowBlurRadius'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='shadowColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='shadowOffset'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSSharingService'>
<method selector='accountName'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='alternateImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='attachmentFileURLs'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='canPerformWithItems:'>
<arg declared_type='NSArray * _Nullable' index='0' name='items' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='initWithTitle:image:alternateImage:handler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='NSImage * _Nonnull' index='1' name='image' type='@'/>
<arg declared_type='NSImage * _Nullable' index='2' name='alternateImage' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='menuItemTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='messageBody'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='performWithItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='permanentLink'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='recipients'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuItemTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='menuItemTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecipients:'>
<arg declared_type='NSArray * _Nullable' index='0' name='recipients' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubject:'>
<arg declared_type='NSString * _Nullable' index='0' name='subject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharingServiceNamed:'>
<arg declared_type='NSSharingServiceName _Nonnull' index='0' name='serviceName' type='@'/>
<retval declared_type='NSSharingService * _Nullable' type='@'/>
</method>
<method class_method='true' selector='sharingServicesForItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='subject'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSSharingServicePicker'>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='items' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showRelativeToRect:ofView:preferredEdge:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSRectEdge' index='2' name='preferredEdge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSharingServicePickerTouchBarItem'>
<method selector='buttonImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='buttonTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setButtonImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='buttonImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='buttonTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSlider'>
<method selector='acceptsFirstMouse:'>
<arg declared_type='NSEvent * _Nullable' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsTickMarkValuesOnly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='altIncrementValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='closestTickMarkValueToValue:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Null_unspecified' type='@'/>
</method>
<method selector='indexOfTickMarkAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='isVertical'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='knobThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maxValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='numberOfTickMarks'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAllowsTickMarkValuesOnly:'>
<arg declared_type='BOOL' index='0' name='allowsTickMarkValuesOnly' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAltIncrementValue:'>
<arg declared_type='double' index='0' name='altIncrementValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='backgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKnobThickness:'>
<arg declared_type='CGFloat' index='0' name='thickness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type='double' index='0' name='maxValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type='double' index='0' name='minValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg declared_type='NSInteger' index='0' name='numberOfTickMarks' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSliderType:'>
<arg declared_type='NSSliderType' index='0' name='sliderType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTickMarkPosition:'>
<arg declared_type='NSTickMarkPosition' index='0' name='tickMarkPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleCell:'>
<arg declared_type='NSCell * _Null_unspecified' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleColor:'>
<arg declared_type='NSColor * _Null_unspecified' index='0' name='newColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type='NSFont * _Null_unspecified' index='0' name='fontObj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrackFillColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='trackFillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertical:'>
<arg declared_type='BOOL' index='0' name='vertical' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sliderType'>
<retval declared_type='NSSliderType' type='I' type64='Q'/>
</method>
<method class_method='true' selector='sliderWithTarget:action:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sliderWithValue:minValue:maxValue:target:action:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<arg declared_type='double' index='1' name='minValue' type='d'/>
<arg declared_type='double' index='2' name='maxValue' type='d'/>
<arg declared_type='id _Nullable' index='3' name='target' type='@'/>
<arg declared_type='SEL _Nullable' index='4' name='action' type=':'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='tickMarkPosition'>
<retval declared_type='NSTickMarkPosition' type='I' type64='Q'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Null_unspecified' type='@'/>
</method>
<method selector='titleCell'>
<retval declared_type='id _Null_unspecified' type='@'/>
</method>
<method selector='titleColor'>
<retval declared_type='NSColor * _Null_unspecified' type='@'/>
</method>
<method selector='titleFont'>
<retval declared_type='NSFont * _Null_unspecified' type='@'/>
</method>
<method selector='trackFillColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
</class>
<class name='NSSliderAccessory'>
<method class_method='true' selector='accessoryWithImage:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<retval declared_type='NSSliderAccessory * _Nonnull' type='@'/>
</method>
<method selector='behavior'>
<retval declared_type='NSSliderAccessoryBehavior * _Nonnull' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBehavior:'>
<arg declared_type='NSSliderAccessoryBehavior * _Nonnull' index='0' name='behavior' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSliderAccessoryBehavior'>
<method class_method='true' selector='automaticBehavior'>
<retval declared_type='NSSliderAccessoryBehavior * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='behaviorWithHandler:'>
<arg declared_type='void (^ _Nonnull)(NSSliderAccessory * _Nonnull)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='NSSliderAccessory * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSSliderAccessoryBehavior * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='behaviorWithTarget:action:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='action' type=':'/>
<retval declared_type='NSSliderAccessoryBehavior * _Nonnull' type='@'/>
</method>
<method selector='handleAction:'>
<arg declared_type='NSSliderAccessory * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='valueResetBehavior'>
<retval declared_type='NSSliderAccessoryBehavior * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='valueStepBehavior'>
<retval declared_type='NSSliderAccessoryBehavior * _Nonnull' type='@'/>
</method>
</class>
<class name='NSSliderCell'>
<method selector='allowsTickMarkValuesOnly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='altIncrementValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='barRectFlipped:'>
<arg declared_type='BOOL' index='0' name='flipped' type='B'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='closestTickMarkValueToValue:'>
<arg declared_type='double' index='0' name='value' type='d'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='drawBarInside:flipped:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='flipped' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawKnob'>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawKnob:'>
<arg declared_type='NSRect' index='0' name='knobRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawTickMarks'>
<retval declared_type='void' type='v'/>
</method>
<method selector='indexOfTickMarkAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='isVertical'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='knobRectFlipped:'>
<arg declared_type='BOOL' index='0' name='flipped' type='B'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='knobThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='maxValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='numberOfTickMarks'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='prefersTrackingUntilMouseUp'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setAllowsTickMarkValuesOnly:'>
<arg declared_type='BOOL' index='0' name='allowsTickMarkValuesOnly' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAltIncrementValue:'>
<arg declared_type='double' index='0' name='altIncrementValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKnobThickness:'>
<arg declared_type='CGFloat' index='0' name='thickness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type='double' index='0' name='maxValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type='double' index='0' name='minValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg declared_type='NSInteger' index='0' name='numberOfTickMarks' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSliderType:'>
<arg declared_type='NSSliderType' index='0' name='sliderType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTickMarkPosition:'>
<arg declared_type='NSTickMarkPosition' index='0' name='tickMarkPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleCell:'>
<arg declared_type='NSCell*' index='0' name='cell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleColor:'>
<arg declared_type='NSColor*' index='0' name='newColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type='NSFont*' index='0' name='fontObj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertical:'>
<arg declared_type='BOOL' index='0' name='vertical' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sliderType'>
<retval declared_type='NSSliderType' type='I' type64='Q'/>
</method>
<method selector='tickMarkPosition'>
<retval declared_type='NSTickMarkPosition' type='I' type64='Q'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleCell'>
<retval declared_type='id' type='@'/>
</method>
<method selector='titleColor'>
<retval declared_type='NSColor*' type='@'/>
</method>
<method selector='titleFont'>
<retval declared_type='NSFont*' type='@'/>
</method>
<method selector='trackRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSSliderTouchBarItem'>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='customizationLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='maximumValueAccessory'>
<retval declared_type='NSSliderAccessory * _Nullable' type='@'/>
</method>
<method selector='minimumValueAccessory'>
<retval declared_type='NSSliderAccessory * _Nullable' type='@'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomizationLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='customizationLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumValueAccessory:'>
<arg declared_type='NSSliderAccessory * _Nullable' index='0' name='maximumValueAccessory' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumValueAccessory:'>
<arg declared_type='NSSliderAccessory * _Nullable' index='0' name='minimumValueAccessory' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSlider:'>
<arg declared_type='NSSlider * _Nonnull' index='0' name='slider' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueAccessoryWidth:'>
<arg declared_type='NSSliderAccessoryWidth' index='0' name='valueAccessoryWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='slider'>
<retval declared_type='NSSlider * _Nonnull' type='@'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='valueAccessoryWidth'>
<retval declared_type='NSSliderAccessoryWidth' type='f' type64='d'/>
</method>
</class>
<class name='NSSound'>
<method class_method='true' selector='canInitWithPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='channelMapping'>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
<method selector='currentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='initWithContentsOfFile:byReference:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<arg declared_type='BOOL' index='1' name='byRef' type='B'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithContentsOfURL:byReference:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='BOOL' index='1' name='byRef' type='B'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type='NSData * _Nonnull' index='0' name='data' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loops'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSSoundName _Nullable' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='play'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='playbackDeviceIdentifier'>
<retval declared_type='NSSoundPlaybackDeviceIdentifier _Nullable' type='@'/>
</method>
<method selector='resume'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setChannelMapping:'>
<arg declared_type='NSArray * _Null_unspecified' index='0' name='channelMapping' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentTime:'>
<arg declared_type='NSTimeInterval' index='0' name='currentTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoops:'>
<arg declared_type='BOOL' index='0' name='loops' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg declared_type='NSSoundName _Nullable' index='0' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPlaybackDeviceIdentifier:'>
<arg declared_type='NSSoundPlaybackDeviceIdentifier _Nullable' index='0' name='playbackDeviceIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='soundNamed:'>
<arg declared_type='NSSoundName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='NSSound * _Nullable' type='@'/>
</method>
<method class_method='true' selector='soundUnfilteredFileTypes'>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
<method class_method='true' selector='soundUnfilteredPasteboardTypes'>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
<method class_method='true' selector='soundUnfilteredTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='stop'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='writeToPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSpeechRecognizer'>
<method selector='blocksOtherRecognizers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commands'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='displayedCommandsTitle'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='listensInForegroundOnly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBlocksOtherRecognizers:'>
<arg declared_type='BOOL' index='0' name='blocksOtherRecognizers' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCommands:'>
<arg declared_type='NSArray * _Nullable' index='0' name='commands' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayedCommandsTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='displayedCommandsTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setListensInForegroundOnly:'>
<arg declared_type='BOOL' index='0' name='listensInForegroundOnly' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startListening'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopListening'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSpeechSynthesizer'>
<method selector='addSpeechDictionary:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='speechDictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='attributesForVoice:'>
<arg declared_type='NSSpeechSynthesizerVoiceName _Nonnull' index='0' name='voice' type='@'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='availableVoices'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='continueSpeaking'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultVoice'>
<retval declared_type='NSSpeechSynthesizerVoiceName _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithVoice:'>
<arg declared_type='NSSpeechSynthesizerVoiceName _Nullable' index='0' name='voice' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method class_method='true' selector='isAnyApplicationSpeaking'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSpeaking'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectForProperty:error:'>
<arg declared_type='NSSpeechPropertyKey _Nonnull' index='0' name='property' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='pauseSpeakingAtBoundary:'>
<arg declared_type='NSSpeechBoundary' index='0' name='boundary' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='phonemesFromText:'>
<arg declared_type='NSString * _Nonnull' index='0' name='text' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='rate'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forProperty:error:'>
<arg declared_type='id _Nullable' index='0' name='object' type='@'/>
<arg declared_type='NSSpeechPropertyKey _Nonnull' index='1' name='property' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setRate:'>
<arg declared_type='float' index='0' name='rate' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFeedbackWindow:'>
<arg declared_type='BOOL' index='0' name='usesFeedbackWindow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVoice:'>
<arg declared_type='NSSpeechSynthesizerVoiceName _Nullable' index='0' name='voice' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setVolume:'>
<arg declared_type='float' index='0' name='volume' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startSpeakingString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='startSpeakingString:toURL:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopSpeaking'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopSpeakingAtBoundary:'>
<arg declared_type='NSSpeechBoundary' index='0' name='boundary' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesFeedbackWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='voice'>
<retval declared_type='NSSpeechSynthesizerVoiceName _Nullable' type='@'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='NSSpellChecker'>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='automaticallyIdentifiesLanguages'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='availableLanguages'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringToCheck' type='@'/>
<arg declared_type='NSInteger' index='1' name='startingOffset' type='i' type64='q'/>
<arg declared_type='NSString * _Nullable' index='2' name='language' type='@'/>
<arg declared_type='BOOL' index='3' name='wrapFlag' type='B'/>
<arg declared_type='NSInteger' index='4' name='tag' type='i' type64='q'/>
<arg declared_type='NSArray *&gt; * _Nullable * _Nullable' index='5' name='details' type='^@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='checkSpellingOfString:startingAt:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringToCheck' type='@'/>
<arg declared_type='NSInteger' index='1' name='startingOffset' type='i' type64='q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringToCheck' type='@'/>
<arg declared_type='NSInteger' index='1' name='startingOffset' type='i' type64='q'/>
<arg declared_type='NSString * _Nullable' index='2' name='language' type='@'/>
<arg declared_type='BOOL' index='3' name='wrapFlag' type='B'/>
<arg declared_type='NSInteger' index='4' name='tag' type='i' type64='q'/>
<arg declared_type='NSInteger * _Nullable' index='5' name='wordCount' type='^i' type64='^q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringToCheck' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextCheckingTypes' index='2' name='checkingTypes' type='Q'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='options' type='@'/>
<arg declared_type='NSInteger' index='4' name='tag' type='i' type64='q'/>
<arg declared_type='NSOrthography * _Nullable * _Nullable' index='5' name='orthography' type='^@'/>
<arg declared_type='NSInteger * _Nullable' index='6' name='wordCount' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='closeSpellDocumentWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='language' type='@'/>
<arg declared_type='NSInteger' index='3' name='tag' type='i' type64='q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='correctionForWordRange:inString:language:inSpellDocumentWithTag:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='language' type='@'/>
<arg declared_type='NSInteger' index='3' name='tag' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='countWordsInString:language:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringToCount' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='language' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='deletesAutospaceBetweenString:andString:language:'>
<arg declared_type='NSString * _Nonnull' index='0' name='precedingString' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='followingString' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='language' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dismissCorrectionIndicatorForView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='forgetWord:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='word' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='guessesForWord:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='word' type='@'/>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
<method selector='guessesForWordRange:inString:language:inSpellDocumentWithTag:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='language' type='@'/>
<arg declared_type='NSInteger' index='3' name='tag' type='i' type64='q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='hasLearnedWord:'>
<arg declared_type='NSString * _Nonnull' index='0' name='word' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ignoreWord:inSpellDocumentWithTag:'>
<arg declared_type='NSString * _Nonnull' index='0' name='wordToIgnore' type='@'/>
<arg declared_type='NSInteger' index='1' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ignoredWordsInSpellDocumentWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='isAutomaticCapitalizationEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isAutomaticDashSubstitutionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isAutomaticPeriodSubstitutionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isAutomaticQuoteSubstitutionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isAutomaticSpellingCorrectionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isAutomaticTextCompletionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='isAutomaticTextReplacementEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='language'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='languageForWordRange:inString:orthography:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSOrthography * _Nullable' index='2' name='orthography' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='learnWord:'>
<arg declared_type='NSString * _Nonnull' index='0' name='word' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='menuForResult:string:options:atLocation:inView:'>
<arg declared_type='NSTextCheckingResult * _Nonnull' index='0' name='result' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='checkedString' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='options' type='@'/>
<arg declared_type='NSPoint' index='3' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nonnull' index='4' name='view' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='preventsAutocorrectionBeforeString:language:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='language' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recordResponse:toCorrection:forWord:language:inSpellDocumentWithTag:'>
<arg declared_type='NSCorrectionResponse' index='0' name='response' type='i' type64='q'/>
<arg declared_type='NSString * _Nonnull' index='1' name='correction' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='word' type='@'/>
<arg declared_type='NSString * _Nullable' index='3' name='language' type='@'/>
<arg declared_type='NSInteger' index='4' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestCandidatesForSelectedRange:inString:types:options:inSpellDocumentWithTag:completionHandler:'>
<arg declared_type='NSRange' index='0' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='stringToCheck' type='@'/>
<arg declared_type='NSTextCheckingTypes' index='2' name='checkingTypes' type='Q'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='options' type='@'/>
<arg declared_type='NSInteger' index='4' name='tag' type='i' type64='q'/>
<arg declared_type='void (^ _Nullable)(NSInteger, NSArray * _Nonnull)' function_pointer='true' index='5' name='completionHandler' type='@?'>
<arg declared_type='NSInteger' type='i' type64='q'/>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringToCheck' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextCheckingTypes' index='2' name='checkingTypes' type='Q'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='options' type='@'/>
<arg declared_type='NSInteger' index='4' name='tag' type='i' type64='q'/>
<arg declared_type='void (^ _Nullable)(NSInteger, NSArray * _Nonnull, NSOrthography * _Nonnull, NSInteger)' function_pointer='true' index='5' name='completionHandler' type='@?'>
<arg declared_type='NSInteger' type='i' type64='q'/>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<arg declared_type='NSOrthography * _Nonnull' type='@'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticallyIdentifiesLanguages:'>
<arg declared_type='BOOL' index='0' name='automaticallyIdentifiesLanguages' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoredWords:inSpellDocumentWithTag:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='words' type='@'/>
<arg declared_type='NSInteger' index='1' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLanguage:'>
<arg declared_type='NSString * _Nonnull' index='0' name='language' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSubstitutionsPanelAccessoryViewController:'>
<arg declared_type='NSViewController * _Nullable' index='0' name='substitutionsPanelAccessoryViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWordFieldStringValue:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedSpellChecker'>
<retval declared_type='NSSpellChecker * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sharedSpellCheckerExists'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showCorrectionIndicatorOfType:primaryString:alternativeStrings:forStringInRect:view:completionHandler:'>
<arg declared_type='NSCorrectionIndicatorType' index='0' name='type' type='i' type64='q'/>
<arg declared_type='NSString * _Nonnull' index='1' name='primaryString' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='alternativeStrings' type='@'/>
<arg declared_type='NSRect' index='3' name='rectOfTypedString' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='4' name='view' type='@'/>
<arg declared_type='void (^ _Nullable)(NSString * _Null_unspecified)' function_pointer='true' index='5' name='completionBlock' type='@?'>
<arg declared_type='NSString * _Null_unspecified' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='spellingPanel'>
<retval declared_type='NSPanel * _Nonnull' type='@'/>
</method>
<method selector='substitutionsPanel'>
<retval declared_type='NSPanel * _Nonnull' type='@'/>
</method>
<method selector='substitutionsPanelAccessoryViewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method class_method='true' selector='uniqueSpellDocumentTag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='unlearnWord:'>
<arg declared_type='NSString * _Nonnull' index='0' name='word' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updatePanels'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateSpellingPanelWithGrammarString:detail:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='detail' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateSpellingPanelWithMisspelledWord:'>
<arg declared_type='NSString * _Nonnull' index='0' name='word' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userPreferredLanguages'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='userQuotesArrayForLanguage:'>
<arg declared_type='NSString * _Nonnull' index='0' name='language' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='userReplacementsDictionary'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
</class>
<class name='NSSplitView'>
<method selector='addArrangedSubview:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='adjustSubviews'>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrangedSubviews'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='arrangesAllSubviews'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autosaveName'>
<retval declared_type='NSSplitViewAutosaveName _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='dividerColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='dividerStyle'>
<retval declared_type='NSSplitViewDividerStyle' type='i' type64='q'/>
</method>
<method selector='dividerThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='drawDividerInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='holdingPriorityForSubviewAtIndex:'>
<arg declared_type='NSInteger' index='0' name='subviewIndex' type='i' type64='q'/>
<retval declared_type='NSLayoutPriority' type='f'/>
</method>
<method selector='insertArrangedSubview:atIndex:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isPaneSplitter'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSubviewCollapsed:'>
<arg declared_type='NSView * _Nonnull' index='0' name='subview' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVertical'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxPossiblePositionOfDividerAtIndex:'>
<arg declared_type='NSInteger' index='0' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minPossiblePositionOfDividerAtIndex:'>
<arg declared_type='NSInteger' index='0' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='removeArrangedSubview:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrangesAllSubviews:'>
<arg declared_type='BOOL' index='0' name='arrangesAllSubviews' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosaveName:'>
<arg declared_type='NSSplitViewAutosaveName _Nullable' index='0' name='autosaveName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDividerStyle:'>
<arg declared_type='NSSplitViewDividerStyle' index='0' name='dividerStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHoldingPriority:forSubviewAtIndex:'>
<arg declared_type='NSLayoutPriority' index='0' name='priority' type='f'/>
<arg declared_type='NSInteger' index='1' name='subviewIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsPaneSplitter:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:ofDividerAtIndex:'>
<arg declared_type='CGFloat' index='0' name='position' type='f' type64='d'/>
<arg declared_type='NSInteger' index='1' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertical:'>
<arg declared_type='BOOL' index='0' name='vertical' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSplitViewController'>
<method selector='addSplitViewItem:'>
<arg declared_type='NSSplitViewItem * _Nonnull' index='0' name='splitViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSplitViewItem:atIndex:'>
<arg declared_type='NSSplitViewItem * _Nonnull' index='0' name='splitViewItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='minimumThicknessForInlineSidebars'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='removeSplitViewItem:'>
<arg declared_type='NSSplitViewItem * _Nonnull' index='0' name='splitViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumThicknessForInlineSidebars:'>
<arg declared_type='CGFloat' index='0' name='minimumThicknessForInlineSidebars' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSplitView:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSplitViewItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='splitViewItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitView'>
<retval declared_type='NSSplitView * _Nonnull' type='@'/>
</method>
<method selector='splitView:additionalEffectiveRectOfDividerAtIndex:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSInteger' index='1' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:canCollapseSubview:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='subview' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSRect' index='1' name='proposedEffectiveRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='2' name='drawnRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' index='3' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='subview' type='@'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitView:shouldHideDividerAtIndex:'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSInteger' index='1' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewItemForViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='NSSplitViewItem * _Nullable' type='@'/>
</method>
<method selector='splitViewItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toggleSidebar:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='viewDidLoad'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSSplitViewItem'>
<method selector='automaticMaximumThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='behavior'>
<retval declared_type='NSSplitViewItemBehavior' type='i' type64='q'/>
</method>
<method selector='canCollapse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collapseBehavior'>
<retval declared_type='NSSplitViewItemCollapseBehavior' type='i' type64='q'/>
</method>
<method class_method='true' selector='contentListWithViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='holdingPriority'>
<retval declared_type='NSLayoutPriority' type='f'/>
</method>
<method selector='isCollapsed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSpringLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maximumThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumThickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='preferredThicknessFraction'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAutomaticMaximumThickness:'>
<arg declared_type='CGFloat' index='0' name='automaticMaximumThickness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanCollapse:'>
<arg declared_type='BOOL' index='0' name='canCollapse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollapseBehavior:'>
<arg declared_type='NSSplitViewItemCollapseBehavior' index='0' name='collapseBehavior' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollapsed:'>
<arg declared_type='BOOL' index='0' name='collapsed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHoldingPriority:'>
<arg declared_type='NSLayoutPriority' index='0' name='holdingPriority' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumThickness:'>
<arg declared_type='CGFloat' index='0' name='maximumThickness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumThickness:'>
<arg declared_type='CGFloat' index='0' name='minimumThickness' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredThicknessFraction:'>
<arg declared_type='CGFloat' index='0' name='preferredThicknessFraction' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpringLoaded:'>
<arg declared_type='BOOL' index='0' name='springLoaded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sidebarWithViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='splitViewItemWithViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='viewController'>
<retval declared_type='NSViewController * _Nonnull' type='@'/>
</method>
</class>
<class name='NSStackView'>
<method selector='addArrangedSubview:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addView:inGravity:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSStackViewGravity' index='1' name='gravity' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignment'>
<retval declared_type='NSLayoutAttribute' type='i' type64='q'/>
</method>
<method selector='arrangedSubviews'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='clippingResistancePriorityForOrientation:'>
<arg declared_type='NSLayoutConstraintOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='NSLayoutPriority' type='f'/>
</method>
<method selector='customSpacingAfterView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='detachedViews'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='detachesHiddenViews'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='distribution'>
<retval declared_type='NSStackViewDistribution' type='i' type64='q'/>
</method>
<method selector='edgeInsets'>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='hasEqualSpacing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='huggingPriorityForOrientation:'>
<arg declared_type='NSLayoutConstraintOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='NSLayoutPriority' type='f'/>
</method>
<method selector='insertArrangedSubview:atIndex:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertView:atIndex:inGravity:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<arg declared_type='NSStackViewGravity' index='2' name='gravity' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orientation'>
<retval declared_type='NSUserInterfaceLayoutOrientation' type='i' type64='q'/>
</method>
<method selector='removeArrangedSubview:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSLayoutAttribute' index='0' name='alignment' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClippingResistancePriority:forOrientation:'>
<arg declared_type='NSLayoutPriority' index='0' name='clippingResistancePriority' type='f'/>
<arg declared_type='NSLayoutConstraintOrientation' index='1' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomSpacing:afterView:'>
<arg declared_type='CGFloat' index='0' name='spacing' type='f' type64='d'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetachesHiddenViews:'>
<arg declared_type='BOOL' index='0' name='detachesHiddenViews' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDistribution:'>
<arg declared_type='NSStackViewDistribution' index='0' name='distribution' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEdgeInsets:'>
<arg declared_type='NSEdgeInsets' index='0' name='edgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasEqualSpacing:'>
<arg declared_type='BOOL' index='0' name='hasEqualSpacing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHuggingPriority:forOrientation:'>
<arg declared_type='NSLayoutPriority' index='0' name='huggingPriority' type='f'/>
<arg declared_type='NSLayoutConstraintOrientation' index='1' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrientation:'>
<arg declared_type='NSUserInterfaceLayoutOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpacing:'>
<arg declared_type='CGFloat' index='0' name='spacing' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViews:inGravity:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='views' type='@'/>
<arg declared_type='NSStackViewGravity' index='1' name='gravity' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisibilityPriority:forView:'>
<arg declared_type='NSStackViewVisibilityPriority' index='0' name='priority' type='f'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spacing'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='stackViewWithViews:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='views' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='views'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='viewsInGravity:'>
<arg declared_type='NSStackViewGravity' index='0' name='gravity' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='visibilityPriorityForView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSStackViewVisibilityPriority' type='f'/>
</method>
</class>
<class name='NSStatusBar'>
<method selector='isVertical'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeStatusItem:'>
<arg declared_type='NSStatusItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusItemWithLength:'>
<arg declared_type='CGFloat' index='0' name='length' type='f' type64='d'/>
<retval declared_type='NSStatusItem * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='systemStatusBar'>
<retval declared_type='NSStatusBar * _Nonnull' type='@'/>
</method>
<method selector='thickness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSStatusBarButton'>
<method selector='appearsDisabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAppearsDisabled:'>
<arg declared_type='BOOL' index='0' name='appearsDisabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSStatusItem'>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='alternateImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='autosaveName'>
<retval declared_type='NSStatusItemAutosaveName _Nonnull' type='@'/>
</method>
<method selector='behavior'>
<retval declared_type='NSStatusItemBehavior' type='I' type64='Q'/>
</method>
<method selector='button'>
<retval declared_type='NSStatusBarButton * _Nullable' type='@'/>
</method>
<method selector='doubleAction'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='drawStatusBarBackgroundInRect:withHighlight:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='highlight' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='highlightMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='menu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='popUpStatusItemMenu:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendActionOn:'>
<arg declared_type='NSInteger' declared_type64='NSEventMask' index='0' name='mask' type='i' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='alternateImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosaveName:'>
<arg declared_type='NSStatusItemAutosaveName _Nullable' index='0' name='autosaveName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBehavior:'>
<arg declared_type='NSStatusItemBehavior' index='0' name='behavior' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type='SEL _Nullable' index='0' name='doubleAction' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightMode:'>
<arg declared_type='BOOL' index='0' name='highlightMode' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLength:'>
<arg declared_type='CGFloat' index='0' name='length' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type='NSMenu * _Nullable' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTip' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type='BOOL' index='0' name='visible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusBar'>
<retval declared_type='NSStatusBar * _Nullable' type='@'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='toolTip'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
</class>
<class name='NSStepper'>
<method selector='autorepeat'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='increment'>
<retval declared_type='double' type='d'/>
</method>
<method selector='maxValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setAutorepeat:'>
<arg declared_type='BOOL' index='0' name='autorepeat' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncrement:'>
<arg declared_type='double' index='0' name='increment' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type='double' index='0' name='maxValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type='double' index='0' name='minValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueWraps:'>
<arg declared_type='BOOL' index='0' name='valueWraps' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueWraps'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSStepperCell'>
<method selector='autorepeat'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='increment'>
<retval declared_type='double' type='d'/>
</method>
<method selector='maxValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minValue'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setAutorepeat:'>
<arg declared_type='BOOL' index='0' name='autorepeat' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncrement:'>
<arg declared_type='double' index='0' name='increment' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxValue:'>
<arg declared_type='double' index='0' name='maxValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinValue:'>
<arg declared_type='double' index='0' name='minValue' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueWraps:'>
<arg declared_type='BOOL' index='0' name='valueWraps' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueWraps'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSStoryboard'>
<method selector='instantiateControllerWithIdentifier:'>
<arg declared_type='NSStoryboardSceneIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='instantiateInitialController'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='mainStoryboard'>
<retval declared_type='NSStoryboard * _Nullable' type='@'/>
</method>
<method class_method='true' selector='storyboardWithName:bundle:'>
<arg declared_type='NSStoryboardName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='storyboardBundleOrNil' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSStoryboardSegue'>
<method selector='destinationController'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSStoryboardSegueIdentifier _Nullable' type='@'/>
</method>
<method selector='initWithIdentifier:source:destination:'>
<arg declared_type='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='sourceController' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='destinationController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='perform'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='segueWithIdentifier:source:destination:performHandler:'>
<arg declared_type='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='sourceController' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='destinationController' type='@'/>
<arg declared_type='void (^ _Nonnull)(void)' function_pointer='true' index='3' name='performHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='sourceController'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</class>
<class name='NSString'>
<method selector='boundingRectWithSize:options:attributes:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='attributes' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundingRectWithSize:options:attributes:context:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='attributes' type='@'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='3' name='context' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='drawAtPoint:withAttributes:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='attrs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawInRect:withAttributes:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='attrs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithRect:options:attributes:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='attributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithRect:options:attributes:context:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSStringDrawingOptions' index='1' name='options' type='i' type64='q'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='attributes' type='@'/>
<arg declared_type='NSStringDrawingContext * _Nullable' index='3' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeWithAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='attrs' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='NSStringDrawingContext'>
<method selector='actualScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minimumScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setMinimumScaleFactor:'>
<arg declared_type='CGFloat' index='0' name='minimumScaleFactor' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='totalBounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSTabView'>
<method selector='addTabViewItem:'>
<arg declared_type='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsTruncatedLabels'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='controlSize'>
<retval declared_type='NSControlSize' type='I' type64='Q'/>
</method>
<method selector='controlTint'>
<retval declared_type='NSControlTint' type='I' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='font'>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='indexOfTabViewItem:'>
<arg declared_type='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='indexOfTabViewItemWithIdentifier:'>
<arg declared_type='id _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='insertTabViewItem:atIndex:'>
<arg declared_type='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='minimumSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='numberOfTabViewItems'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='removeTabViewItem:'>
<arg declared_type='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectFirstTabViewItem:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectLastTabViewItem:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectNextTabViewItem:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectPreviousTabViewItem:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectTabViewItem:'>
<arg declared_type='NSTabViewItem * _Nullable' index='0' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectTabViewItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectTabViewItemWithIdentifier:'>
<arg declared_type='id _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedTabViewItem'>
<retval declared_type='NSTabViewItem * _Nullable' type='@'/>
</method>
<method selector='setAllowsTruncatedLabels:'>
<arg declared_type='BOOL' index='0' name='allowsTruncatedLabels' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlSize:'>
<arg declared_type='NSControlSize' index='0' name='controlSize' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setControlTint:'>
<arg declared_type='NSControlTint' index='0' name='controlTint' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabPosition:'>
<arg declared_type='NSTabPosition' index='0' name='tabPosition' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabViewBorderType:'>
<arg declared_type='NSTabViewBorderType' index='0' name='tabViewBorderType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabViewType:'>
<arg declared_type='NSTabViewType' index='0' name='tabViewType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabPosition'>
<retval declared_type='NSTabPosition' type='I' type64='Q'/>
</method>
<method selector='tabViewBorderType'>
<retval declared_type='NSTabViewBorderType' type='I' type64='Q'/>
</method>
<method selector='tabViewItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSTabViewItem * _Nonnull' type='@'/>
</method>
<method selector='tabViewItemAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSTabViewItem * _Nullable' type='@'/>
</method>
<method selector='tabViewItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tabViewType'>
<retval declared_type='NSTabViewType' type='I' type64='Q'/>
</method>
<method selector='takeSelectedTabViewItemFromSender:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSTabViewController'>
<method selector='addTabViewItem:'>
<arg declared_type='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canPropagateSelectedChildViewControllerTitle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='insertTabViewItem:atIndex:'>
<arg declared_type='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTabViewItem:'>
<arg declared_type='NSTabViewItem * _Nonnull' index='0' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedTabViewItemIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setCanPropagateSelectedChildViewControllerTitle:'>
<arg declared_type='BOOL' index='0' name='canPropagateSelectedChildViewControllerTitle' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedTabViewItemIndex:'>
<arg declared_type='NSInteger' index='0' name='selectedTabViewItemIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabStyle:'>
<arg declared_type='NSTabViewControllerTabStyle' index='0' name='tabStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabView:'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabViewItems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='tabViewItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransitionOptions:'>
<arg declared_type='NSViewControllerTransitionOptions' index='0' name='transitionOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabStyle'>
<retval declared_type='NSTabViewControllerTabStyle' type='i' type64='q'/>
</method>
<method selector='tabView'>
<retval declared_type='NSTabView * _Nonnull' type='@'/>
</method>
<method selector='tabView:didSelectTabViewItem:'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabView:shouldSelectTabViewItem:'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tabView:willSelectTabViewItem:'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabViewItemForViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='NSTabViewItem * _Nullable' type='@'/>
</method>
<method selector='tabViewItems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<arg declared_type='NSToolbarItemIdentifier _Nonnull' index='1' name='itemIdentifier' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='NSToolbarItem * _Nullable' type='@'/>
</method>
<method selector='toolbarAllowedItemIdentifiers:'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbarDefaultItemIdentifiers:'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbarSelectableItemIdentifiers:'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='transitionOptions'>
<retval declared_type='NSViewControllerTransitionOptions' type='I' type64='Q'/>
</method>
<method selector='viewDidLoad'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSTabViewItem'>
<method selector='color'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='drawLabel:inRect:'>
<arg declared_type='BOOL' index='0' name='shouldTruncateLabel' type='B'/>
<arg declared_type='NSRect' index='1' name='labelRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='identifier'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type='id _Nullable' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initialFirstResponder'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='id _Nullable' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialFirstResponder:'>
<arg declared_type='NSView * _Nullable' index='0' name='initialFirstResponder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nonnull' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTip' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewController:'>
<arg declared_type='NSViewController * _Nullable' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeOfLabel:'>
<arg declared_type='BOOL' index='0' name='computeMin' type='B'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='tabState'>
<retval declared_type='NSTabState' type='I' type64='Q'/>
</method>
<method selector='tabView'>
<retval declared_type='NSTabView * _Nullable' type='@'/>
</method>
<method class_method='true' selector='tabViewItemWithViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='toolTip'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='viewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
</class>
<class name='NSTableCellView'>
<method selector='backgroundStyle'>
<retval declared_type='NSBackgroundStyle' type='i' type64='q'/>
</method>
<method selector='draggingImageComponents'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='imageView'>
<retval declared_type='NSImageView * _Nullable' type='@'/>
</method>
<method selector='objectValue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='rowSizeStyle'>
<retval declared_type='NSTableViewRowSizeStyle' type='i' type64='q'/>
</method>
<method selector='setBackgroundStyle:'>
<arg declared_type='NSBackgroundStyle' index='0' name='backgroundStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageView:'>
<arg declared_type='NSImageView * _Nullable' index='0' name='imageView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectValue:'>
<arg declared_type='id _Nullable' index='0' name='objectValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowSizeStyle:'>
<arg declared_type='NSTableViewRowSizeStyle' index='0' name='rowSizeStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextField:'>
<arg declared_type='NSTextField * _Nullable' index='0' name='textField' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textField'>
<retval declared_type='NSTextField * _Nullable' type='@'/>
</method>
</class>
<class name='NSTableColumn'>
<method selector='dataCell'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='dataCellForRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='headerCell'>
<retval declared_type='__kindof NSTableHeaderCell * _Nonnull' type='@'/>
</method>
<method selector='headerToolTip'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSUserInterfaceItemIdentifier _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isResizable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='resizingMask'>
<retval declared_type='NSTableColumnResizingOptions' type='I' type64='Q'/>
</method>
<method selector='setDataCell:'>
<arg declared_type='id _Nonnull' index='0' name='dataCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderCell:'>
<arg declared_type='__kindof NSTableHeaderCell * _Nonnull' index='0' name='headerCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderToolTip:'>
<arg declared_type='NSString * _Nullable' index='0' name='headerToolTip' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxWidth:'>
<arg declared_type='CGFloat' index='0' name='maxWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinWidth:'>
<arg declared_type='CGFloat' index='0' name='minWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResizable:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResizingMask:'>
<arg declared_type='NSTableColumnResizingOptions' index='0' name='resizingMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortDescriptorPrototype:'>
<arg declared_type='NSSortDescriptor * _Nullable' index='0' name='sortDescriptorPrototype' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTableView:'>
<arg declared_type='NSTableView * _Nullable' index='0' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='CGFloat' index='0' name='width' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortDescriptorPrototype'>
<retval declared_type='NSSortDescriptor * _Nullable' type='@'/>
</method>
<method selector='tableView'>
<retval declared_type='NSTableView * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='NSTableHeaderCell'>
<method selector='drawSortIndicatorWithFrame:inView:ascending:priority:'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<arg declared_type='BOOL' index='2' name='ascending' type='B'/>
<arg declared_type='NSInteger' index='3' name='priority' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortIndicatorRectForBounds:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</class>
<class name='NSTableHeaderView'>
<method selector='columnAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='draggedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='draggedDistance'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='headerRectOfColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='resizedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setTableView:'>
<arg declared_type='NSTableView * _Nullable' index='0' name='tableView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView'>
<retval declared_type='NSTableView * _Nullable' type='@'/>
</method>
</class>
<class name='NSTableRowView'>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='draggingDestinationFeedbackStyle'>
<retval declared_type='NSTableViewDraggingDestinationFeedbackStyle' type='i' type64='q'/>
</method>
<method selector='drawBackgroundInRect:'>
<arg declared_type='NSRect' index='0' name='dirtyRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawDraggingDestinationFeedbackInRect:'>
<arg declared_type='NSRect' index='0' name='dirtyRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawSelectionInRect:'>
<arg declared_type='NSRect' index='0' name='dirtyRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawSeparatorInRect:'>
<arg declared_type='NSRect' index='0' name='dirtyRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='indentationForDropOperation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='interiorBackgroundStyle'>
<retval declared_type='NSBackgroundStyle' type='i' type64='q'/>
</method>
<method selector='isEmphasized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFloating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isGroupRowStyle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNextRowSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPreviousRowSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelected'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTargetForDropOperation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectionHighlightStyle'>
<retval declared_type='NSTableViewSelectionHighlightStyle' type='i' type64='q'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingDestinationFeedbackStyle:'>
<arg declared_type='NSTableViewDraggingDestinationFeedbackStyle' index='0' name='draggingDestinationFeedbackStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmphasized:'>
<arg declared_type='BOOL' index='0' name='emphasized' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloating:'>
<arg declared_type='BOOL' index='0' name='floating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupRowStyle:'>
<arg declared_type='BOOL' index='0' name='groupRowStyle' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndentationForDropOperation:'>
<arg declared_type='CGFloat' index='0' name='indentationForDropOperation' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextRowSelected:'>
<arg declared_type='BOOL' index='0' name='nextRowSelected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreviousRowSelected:'>
<arg declared_type='BOOL' index='0' name='previousRowSelected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelected:'>
<arg declared_type='BOOL' index='0' name='selected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionHighlightStyle:'>
<arg declared_type='NSTableViewSelectionHighlightStyle' index='0' name='selectionHighlightStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetForDropOperation:'>
<arg declared_type='BOOL' index='0' name='targetForDropOperation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewAtColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='NSTableView'>
<method selector='addTableColumn:'>
<arg declared_type='NSTableColumn * _Nonnull' index='0' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsColumnReordering'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsColumnResizing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsColumnSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsMultipleSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsTypeSelect'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autoresizesAllColumnsToFit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autosaveName'>
<retval declared_type='NSTableViewAutosaveName _Nullable' type='@'/>
</method>
<method selector='autosaveTableColumns'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='beginUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='canDragRowsWithIndexes:atPoint:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type='@'/>
<arg declared_type='NSPoint' index='1' name='mouseDownPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clickedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='clickedRow'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='columnAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='columnAutoresizingStyle'>
<retval declared_type='NSTableViewColumnAutoresizingStyle' type='I' type64='Q'/>
</method>
<method selector='columnForView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='columnIndexesInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='columnWithIdentifier:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='columnsInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='cornerView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='dataSource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deselectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deselectColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deselectRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddRowView:forRow:'>
<arg declared_type='NSTableRowView * _Nonnull' index='0' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didRemoveRowView:forRow:'>
<arg declared_type='NSTableRowView * _Nonnull' index='0' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleAction'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='dragImageForRows:event:dragImageOffset:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='dragRows' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='dragEvent' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='2' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='dragImageForRowsWithIndexes:tableColumns:event:offset:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='dragRows' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='tableColumns' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='dragEvent' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='draggingDestinationFeedbackStyle'>
<retval declared_type='NSTableViewDraggingDestinationFeedbackStyle' type='i' type64='q'/>
</method>
<method selector='drawBackgroundInClipRect:'>
<arg declared_type='NSRect' index='0' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawGridInClipRect:'>
<arg declared_type='NSRect' index='0' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawRow:clipRect:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSRect' index='1' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawsGrid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='editColumn:row:withEvent:select:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSEvent * _Nullable' index='2' name='event' type='@'/>
<arg declared_type='BOOL' index='3' name='select' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='editedRow'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='effectiveRowSizeStyle'>
<retval declared_type='NSTableViewRowSizeStyle' type='i' type64='q'/>
</method>
<method selector='endUpdates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enumerateAvailableRowViewsUsingBlock:'>
<arg declared_type='void (^ _Nonnull)(__kindof NSTableRowView * _Nonnull, NSInteger)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='__kindof NSTableRowView * _Nonnull' type='@'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='floatsGroupRows'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='focusedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='frameOfCellAtColumn:row:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gridColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='gridStyleMask'>
<retval declared_type='NSTableViewGridLineStyle' type='I' type64='Q'/>
</method>
<method selector='headerView'>
<retval declared_type='NSTableHeaderView * _Nullable' type='@'/>
</method>
<method selector='hiddenRowIndexes'>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='hideRowsAtIndexes:withAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='NSTableViewAnimationOptions' index='1' name='rowAnimation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='highlightSelectionInClipRect:'>
<arg declared_type='NSRect' index='0' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='highlightedTableColumn'>
<retval declared_type='NSTableColumn * _Nullable' type='@'/>
</method>
<method selector='indicatorImageInTableColumn:'>
<arg declared_type='NSTableColumn * _Nonnull' index='0' name='tableColumn' type='@'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertRowsAtIndexes:withAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='NSTableViewAnimationOptions' index='1' name='animationOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='intercellSpacing'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='isColumnSelected:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRowSelected:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='makeViewWithIdentifier:owner:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nullable' index='1' name='owner' type='@'/>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
<method selector='moveColumn:toColumn:'>
<arg declared_type='NSInteger' index='0' name='oldIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='newIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveRowAtIndex:toIndex:'>
<arg declared_type='NSInteger' index='0' name='oldIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='newIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteHeightOfRowsWithIndexesChanged:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexSet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteNumberOfRowsChanged'>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSelectedColumns'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='numberOfSelectedRows'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='performClickOnCellAtColumn:row:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preparedCellAtColumn:row:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='NSCell * _Nullable' type='@'/>
</method>
<method selector='rectOfColumn:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectOfRow:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='registerNib:forIdentifier:'>
<arg declared_type='NSNib * _Nullable' index='0' name='nib' type='@'/>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registeredNibsByIdentifier'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadDataForRowIndexes:columnIndexes:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='rowIndexes' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='columnIndexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeRowsAtIndexes:withAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='NSTableViewAnimationOptions' index='1' name='animationOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTableColumn:'>
<arg declared_type='NSTableColumn * _Nonnull' index='0' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowActionsVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rowAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rowForView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rowHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rowSizeStyle'>
<retval declared_type='NSTableViewRowSizeStyle' type='i' type64='q'/>
</method>
<method selector='rowViewAtRow:makeIfNecessary:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='BOOL' index='1' name='makeIfNecessary' type='B'/>
<retval declared_type='__kindof NSTableRowView * _Nullable' type='@'/>
</method>
<method selector='rowsInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='scrollColumnToVisible:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRowToVisible:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectColumn:byExtendingSelection:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='BOOL' index='1' name='extend' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectColumnIndexes:byExtendingSelection:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='BOOL' index='1' name='extend' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectRow:byExtendingSelection:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='BOOL' index='1' name='extend' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectRowIndexes:byExtendingSelection:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='BOOL' index='1' name='extend' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectedColumnEnumerator'>
<retval declared_type='NSEnumerator * _Nonnull' type='@'/>
</method>
<method selector='selectedColumnIndexes'>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='selectedRow'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='selectedRowEnumerator'>
<retval declared_type='NSEnumerator * _Nonnull' type='@'/>
</method>
<method selector='selectedRowIndexes'>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='selectionHighlightStyle'>
<retval declared_type='NSTableViewSelectionHighlightStyle' type='i' type64='q'/>
</method>
<method selector='setAllowsColumnReordering:'>
<arg declared_type='BOOL' index='0' name='allowsColumnReordering' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsColumnResizing:'>
<arg declared_type='BOOL' index='0' name='allowsColumnResizing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsColumnSelection:'>
<arg declared_type='BOOL' index='0' name='allowsColumnSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg declared_type='BOOL' index='0' name='allowsEmptySelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg declared_type='BOOL' index='0' name='allowsMultipleSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsTypeSelect:'>
<arg declared_type='BOOL' index='0' name='allowsTypeSelect' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoresizesAllColumnsToFit:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosaveName:'>
<arg declared_type='NSTableViewAutosaveName _Nullable' index='0' name='autosaveName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosaveTableColumns:'>
<arg declared_type='BOOL' index='0' name='autosaveTableColumns' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColumnAutoresizingStyle:'>
<arg declared_type='NSTableViewColumnAutoresizingStyle' index='0' name='columnAutoresizingStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerView:'>
<arg declared_type='NSView * _Nullable' index='0' name='cornerView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id _Nullable' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDoubleAction:'>
<arg declared_type='SEL _Nullable' index='0' name='doubleAction' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingDestinationFeedbackStyle:'>
<arg declared_type='NSTableViewDraggingDestinationFeedbackStyle' index='0' name='draggingDestinationFeedbackStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg declared_type='NSDragOperation' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='BOOL' index='1' name='isLocal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsGrid:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDropRow:dropOperation:'>
<arg declared_type='NSInteger' index='0' name='row' type='i' type64='q'/>
<arg declared_type='NSTableViewDropOperation' index='1' name='dropOperation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFloatsGroupRows:'>
<arg declared_type='BOOL' index='0' name='floatsGroupRows' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusedColumn:'>
<arg declared_type='NSInteger' index='0' name='focusedColumn' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGridColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='gridColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGridStyleMask:'>
<arg declared_type='NSTableViewGridLineStyle' index='0' name='gridStyleMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeaderView:'>
<arg declared_type='NSTableHeaderView * _Nullable' index='0' name='headerView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTableColumn:'>
<arg declared_type='NSTableColumn * _Nullable' index='0' name='highlightedTableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndicatorImage:inTableColumn:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIntercellSpacing:'>
<arg declared_type='NSSize' index='0' name='intercellSpacing' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowActionsVisible:'>
<arg declared_type='BOOL' index='0' name='rowActionsVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowHeight:'>
<arg declared_type='CGFloat' index='0' name='rowHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowSizeStyle:'>
<arg declared_type='NSTableViewRowSizeStyle' index='0' name='rowSizeStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionHighlightStyle:'>
<arg declared_type='NSTableViewSelectionHighlightStyle' index='0' name='selectionHighlightStyle' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='sortDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesAlternatingRowBackgroundColors:'>
<arg declared_type='BOOL' index='0' name='usesAlternatingRowBackgroundColors' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesAutomaticRowHeights:'>
<arg declared_type='BOOL' index='0' name='usesAutomaticRowHeights' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesStaticContents:'>
<arg declared_type='BOOL' index='0' name='usesStaticContents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalMotionCanBeginDrag:'>
<arg declared_type='BOOL' index='0' name='verticalMotionCanBeginDrag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldFocusCell:atColumn:row:'>
<arg declared_type='NSCell * _Nonnull' index='0' name='cell' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sizeLastColumnToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortDescriptors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tableColumnWithIdentifier:'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='NSTableColumn * _Nullable' type='@'/>
</method>
<method selector='tableColumns'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textDidBeginEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidEndEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textShouldEndEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unhideRowsAtIndexes:withAnimation:'>
<arg declared_type='NSIndexSet * _Nonnull' index='0' name='indexes' type='@'/>
<arg declared_type='NSTableViewAnimationOptions' index='1' name='rowAnimation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type='NSUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='usesAlternatingRowBackgroundColors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesAutomaticRowHeights'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesStaticContents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='verticalMotionCanBeginDrag'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='viewAtColumn:row:makeIfNecessary:'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='makeIfNecessary' type='B'/>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
</class>
<class name='NSTableViewRowAction'>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method class_method='true' selector='rowActionWithStyle:title:handler:'>
<arg declared_type='NSTableViewRowActionStyle' index='0' name='style' type='i' type64='q'/>
<arg declared_type='NSString * _Nonnull' index='1' name='title' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSTableViewRowAction * _Nonnull, NSInteger)' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='NSTableViewRowAction * _Nonnull' type='@'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='style'>
<retval declared_type='NSTableViewRowActionStyle' type='i' type64='q'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSText'>
<method selector='RTFDFromRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='RTFFromRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='alignCenter:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignLeft:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignRight:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='baseWritingDirection'>
<retval declared_type='NSWritingDirection' type='i' type64='q'/>
</method>
<method selector='changeFont:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='checkSpelling:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copy:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFont:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyRuler:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cut:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='delete:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='font'>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='importsGraphics'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFieldEditor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHorizontallyResizable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRichText'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRulerVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVerticallyResizable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='minSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='paste:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteFont:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteRuler:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readRTFDFromFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='replaceCharactersInRange:withRTF:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSData * _Nonnull' index='1' name='rtfData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceCharactersInRange:withRTFD:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSData * _Nonnull' index='1' name='rtfdData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectAll:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='setAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg declared_type='NSWritingDirection' index='0' name='baseWritingDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldEditor:'>
<arg declared_type='BOOL' index='0' name='fieldEditor' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:range:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='font' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontallyResizable:'>
<arg declared_type='BOOL' index='0' name='horizontallyResizable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImportsGraphics:'>
<arg declared_type='BOOL' index='0' name='importsGraphics' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxSize:'>
<arg declared_type='NSSize' index='0' name='maxSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type='NSSize' index='0' name='minSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRichText:'>
<arg declared_type='BOOL' index='0' name='richText' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type='BOOL' index='0' name='selectable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedRange:'>
<arg declared_type='NSRange' index='0' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:range:'>
<arg declared_type='NSColor * _Nullable' index='0' name='color' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFontPanel:'>
<arg declared_type='BOOL' index='0' name='usesFontPanel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticallyResizable:'>
<arg declared_type='BOOL' index='0' name='verticallyResizable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showGuessPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='string'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='subscript:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='superscript:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='toggleRuler:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='underline:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unscript:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesFontPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeRTFDToFile:atomically:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSTextAlternatives'>
<method selector='alternativeStrings'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='initWithPrimaryString:alternativeStrings:'>
<arg declared_type='NSString * _Nonnull' index='0' name='primaryString' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='alternativeStrings' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='noteSelectedAlternativeString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='alternativeString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='primaryString'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSTextAttachment'>
<method selector='attachmentCell'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contents'>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='fileType'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='fileWrapper'>
<retval declared_type='NSFileWrapper * _Nullable' type='@'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='initWithData:ofType:'>
<arg declared_type='NSData * _Nullable' index='0' name='contentData' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='uti' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFileWrapper:'>
<arg declared_type='NSFileWrapper * _Nullable' index='0' name='fileWrapper' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setAttachmentCell:'>
<arg declared_type='id _Nullable' index='0' name='attachmentCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type='NSRect' index='0' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContents:'>
<arg declared_type='NSData * _Nullable' index='0' name='contents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileType:'>
<arg declared_type='NSString * _Nullable' index='0' name='fileType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileWrapper:'>
<arg declared_type='NSFileWrapper * _Nullable' index='0' name='fileWrapper' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSTextBlock'>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='borderColorForEdge:'>
<arg declared_type='NSRectEdge' index='0' name='edge' type='i' type64='Q'/>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='boundsRectForContentRect:inRect:textContainer:characterRange:'>
<arg declared_type='NSRect' index='0' name='contentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='textContainer' type='@'/>
<arg declared_type='NSRange' index='3' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='contentWidthValueType'>
<retval declared_type='NSTextBlockValueType' type='I' type64='Q'/>
</method>
<method selector='drawBackgroundWithFrame:inView:characterRange:layoutManager:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='controlView' type='@'/>
<arg declared_type='NSRange' index='2' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSLayoutManager * _Nonnull' index='3' name='layoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='rectForLayoutAtPoint:inRect:textContainer:characterRange:'>
<arg declared_type='NSPoint' index='0' name='startingPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='textContainer' type='@'/>
<arg declared_type='NSRange' index='3' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderColor:forEdge:'>
<arg declared_type='NSColor * _Nullable' index='0' name='color' type='@'/>
<arg declared_type='NSRectEdge' index='1' name='edge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentWidth:type:'>
<arg declared_type='CGFloat' index='0' name='val' type='f' type64='d'/>
<arg declared_type='NSTextBlockValueType' index='1' name='type' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:type:forDimension:'>
<arg declared_type='CGFloat' index='0' name='val' type='f' type64='d'/>
<arg declared_type='NSTextBlockValueType' index='1' name='type' type='I' type64='Q'/>
<arg declared_type='NSTextBlockDimension' index='2' name='dimension' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalAlignment:'>
<arg declared_type='NSTextBlockVerticalAlignment' index='0' name='verticalAlignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:type:forLayer:'>
<arg declared_type='CGFloat' index='0' name='val' type='f' type64='d'/>
<arg declared_type='NSTextBlockValueType' index='1' name='type' type='I' type64='Q'/>
<arg declared_type='NSTextBlockLayer' index='2' name='layer' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:type:forLayer:edge:'>
<arg declared_type='CGFloat' index='0' name='val' type='f' type64='d'/>
<arg declared_type='NSTextBlockValueType' index='1' name='type' type='I' type64='Q'/>
<arg declared_type='NSTextBlockLayer' index='2' name='layer' type='i' type64='q'/>
<arg declared_type='NSRectEdge' index='3' name='edge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueForDimension:'>
<arg declared_type='NSTextBlockDimension' index='0' name='dimension' type='I' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='valueTypeForDimension:'>
<arg declared_type='NSTextBlockDimension' index='0' name='dimension' type='I' type64='Q'/>
<retval declared_type='NSTextBlockValueType' type='I' type64='Q'/>
</method>
<method selector='verticalAlignment'>
<retval declared_type='NSTextBlockVerticalAlignment' type='I' type64='Q'/>
</method>
<method selector='widthForLayer:edge:'>
<arg declared_type='NSTextBlockLayer' index='0' name='layer' type='i' type64='q'/>
<arg declared_type='NSRectEdge' index='1' name='edge' type='i' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='widthValueTypeForLayer:edge:'>
<arg declared_type='NSTextBlockLayer' index='0' name='layer' type='i' type64='q'/>
<arg declared_type='NSRectEdge' index='1' name='edge' type='i' type64='Q'/>
<retval declared_type='NSTextBlockValueType' type='I' type64='Q'/>
</method>
</class>
<class name='NSTextContainer'>
<method selector='containerSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='containsPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='exclusionPaths'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='heightTracksTextView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithContainerSize:'>
<arg declared_type='NSSize' index='0' name='aContainerSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isSimpleRectangularTextContainer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager'>
<retval declared_type='NSLayoutManager * _Nullable' type='@'/>
</method>
<method selector='lineBreakMode'>
<retval declared_type='NSLineBreakMode' type='I' type64='Q'/>
</method>
<method selector='lineFragmentPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:'>
<arg declared_type='NSRect' index='0' name='proposedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='1' name='characterIndex' type='I' type64='Q'/>
<arg declared_type='NSWritingDirection' index='2' name='baseWritingDirection' type='i' type64='q'/>
<arg declared_type='NSRect * _Nullable' index='3' name='remainingRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:'>
<arg declared_type='NSRect' index='0' name='proposedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSLineSweepDirection' index='1' name='sweepDirection' type='I' type64='Q'/>
<arg declared_type='NSLineMovementDirection' index='2' name='movementDirection' type='I' type64='Q'/>
<arg declared_type='NSRectPointer _Nullable' index='3' name='remainingRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='maximumNumberOfLines'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='replaceLayoutManager:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='newLayoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContainerSize:'>
<arg declared_type='NSSize' index='0' name='containerSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExclusionPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='exclusionPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeightTracksTextView:'>
<arg declared_type='BOOL' index='0' name='heightTracksTextView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutManager:'>
<arg declared_type='NSLayoutManager * _Nullable' index='0' name='layoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg declared_type='NSLineBreakMode' index='0' name='lineBreakMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg declared_type='CGFloat' index='0' name='lineFragmentPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfLines:'>
<arg declared_type='NSUInteger' index='0' name='maximumNumberOfLines' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextView:'>
<arg declared_type='NSTextView * _Nullable' index='0' name='textView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidthTracksTextView:'>
<arg declared_type='BOOL' index='0' name='widthTracksTextView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='textView'>
<retval declared_type='NSTextView * _Nullable' type='@'/>
</method>
<method selector='widthTracksTextView'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSTextField'>
<method selector='acceptsFirstResponder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsCharacterPickerTouchBarItem'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsDefaultTighteningForTruncation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='bezelStyle'>
<retval declared_type='NSTextFieldBezelStyle' type='I' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='importsGraphics'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAutomaticTextCompletionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isBezeled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isBordered'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='labelWithAttributedString:'>
<arg declared_type='NSAttributedString * _Nonnull' index='0' name='attributedStringValue' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='labelWithString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringValue' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='maximumNumberOfLines'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='preferredMaxLayoutWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='selectText:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsCharacterPickerTouchBarItem:'>
<arg declared_type='BOOL' index='0' name='allowsCharacterPickerTouchBarItem' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsDefaultTighteningForTruncation:'>
<arg declared_type='BOOL' index='0' name='allowsDefaultTighteningForTruncation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg declared_type='BOOL' index='0' name='allowsEditingTextAttributes' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticTextCompletionEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticTextCompletionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezelStyle:'>
<arg declared_type='NSTextFieldBezelStyle' index='0' name='bezelStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezeled:'>
<arg declared_type='BOOL' index='0' name='bezeled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBordered:'>
<arg declared_type='BOOL' index='0' name='bordered' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImportsGraphics:'>
<arg declared_type='BOOL' index='0' name='importsGraphics' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfLines:'>
<arg declared_type='NSInteger' index='0' name='maximumNumberOfLines' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type='NSString * _Nullable' index='0' name='placeholderString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredMaxLayoutWidth:'>
<arg declared_type='CGFloat' index='0' name='preferredMaxLayoutWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type='BOOL' index='0' name='selectable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg declared_type='NSString * _Null_unspecified' index='0' name='stringWithAmpersand' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='textDidBeginEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidChange:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidEndEditing:'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='textFieldWithString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringValue' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textShouldEndEditing:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='wrappingLabelWithString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='stringValue' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSTextFieldCell'>
<method selector='allowedInputSourceLocales'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='bezelStyle'>
<retval declared_type='NSTextFieldBezelStyle' type='I' type64='Q'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initTextCell:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='placeholderAttributedString'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='placeholderString'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg declared_type='NSArray * _Nullable' index='0' name='allowedInputSourceLocales' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBezelStyle:'>
<arg declared_type='NSTextFieldBezelStyle' index='0' name='bezelStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='placeholderAttributedString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceholderString:'>
<arg declared_type='NSString * _Nullable' index='0' name='placeholderString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpFieldEditorAttributes:'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObj' type='@'/>
<retval declared_type='NSText * _Nonnull' type='@'/>
</method>
<method selector='setWantsNotificationForMarkedText:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
</class>
<class name='NSTextFinder'>
<method selector='cancelFindIndicator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='client'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='drawIncrementalMatchHighlightInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='findBarContainer'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='findIndicatorNeedsUpdate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='incrementalMatchRanges'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='incrementalSearchingShouldDimContentView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='decoder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isIncrementalSearchingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='noteClientStringWillChange'>
<retval declared_type='void' type='v'/>
</method>
<method selector='performAction:'>
<arg declared_type='NSTextFinderAction' index='0' name='op' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClient:'>
<arg declared_type='id _Nullable' index='0' name='client' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFindBarContainer:'>
<arg declared_type='id _Nullable' index='0' name='findBarContainer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFindIndicatorNeedsUpdate:'>
<arg declared_type='BOOL' index='0' name='findIndicatorNeedsUpdate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncrementalSearchingEnabled:'>
<arg declared_type='BOOL' index='0' name='incrementalSearchingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncrementalSearchingShouldDimContentView:'>
<arg declared_type='BOOL' index='0' name='incrementalSearchingShouldDimContentView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validateAction:'>
<arg declared_type='NSTextFinderAction' index='0' name='op' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSTextInputContext'>
<method selector='acceptsGlyphInfo'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='activate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowedInputSourceLocales'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='client'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method class_method='true' selector='currentInputContext'>
<retval declared_type='NSTextInputContext * _Nullable' type='@'/>
</method>
<method selector='deactivate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardMarkedText'>
<retval declared_type='void' type='v'/>
</method>
<method selector='handleEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithClient:'>
<arg declared_type='id _Nonnull' index='0' name='client' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='invalidateCharacterCoordinates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyboardInputSources'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method class_method='true' selector='localizedNameForInputSource:'>
<arg declared_type='NSTextInputSourceIdentifier _Nonnull' index='0' name='inputSourceIdentifier' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='selectedKeyboardInputSource'>
<retval declared_type='NSTextInputSourceIdentifier _Nullable' type='@'/>
</method>
<method selector='setAcceptsGlyphInfo:'>
<arg declared_type='BOOL' index='0' name='acceptsGlyphInfo' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg declared_type='NSArray * _Nullable' index='0' name='allowedInputSourceLocales' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedKeyboardInputSource:'>
<arg declared_type='NSTextInputSourceIdentifier _Nullable' index='0' name='selectedKeyboardInputSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSTextList'>
<method selector='initWithMarkerFormat:options:'>
<arg declared_type='NSTextListMarkerFormat _Nonnull' index='0' name='format' type='@'/>
<arg declared_type='NSUInteger' index='1' name='mask' type='I' type64='Q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='listOptions'>
<retval declared_type='NSTextListOptions' type='I' type64='Q'/>
</method>
<method selector='markerForItemNumber:'>
<arg declared_type='NSInteger' index='0' name='itemNum' type='i' type64='q'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='markerFormat'>
<retval declared_type='NSTextListMarkerFormat _Nonnull' type='@'/>
</method>
<method selector='setStartingItemNumber:'>
<arg declared_type='NSInteger' index='0' name='startingItemNumber' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startingItemNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</class>
<class name='NSTextStorage'>
<method selector='addLayoutManager:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='aLayoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeRuns'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='changeInLength'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='characters'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='edited:range:changeInLength:'>
<arg declared_type='NSTextStorageEditActions' index='0' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='1' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='2' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='editedMask'>
<retval declared_type='NSTextStorageEditActions' type='I' type64='Q'/>
</method>
<method selector='editedRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='ensureAttributesAreFixedInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fixesAttributesLazily'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='font'>
<retval declared_type='NSFont * _Nullable' type='@'/>
</method>
<method selector='foregroundColor'>
<retval declared_type='NSColor * _Nullable' type='@'/>
</method>
<method selector='invalidateAttributesInRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManagers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='paragraphs'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='processEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLayoutManager:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='aLayoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributeRuns:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='attributeRuns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCharacters:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='characters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='NSFont * _Nullable' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='foregroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphs:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='paragraphs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWords:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='words' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='words'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSTextTab'>
<method selector='alignment'>
<retval declared_type='NSTextAlignment' type='I' type64='Q'/>
</method>
<method class_method='true' selector='columnTerminatorsForLocale:'>
<arg declared_type='NSLocale * _Nullable' index='0' name='aLocale' type='@'/>
<retval declared_type='NSCharacterSet * _Nonnull' type='@'/>
</method>
<method selector='initWithTextAlignment:location:options:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='1' name='loc' type='f' type64='d'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithType:location:'>
<arg declared_type='NSTextTabType' index='0' name='type' type='I' type64='Q'/>
<arg declared_type='CGFloat' index='1' name='loc' type='f' type64='d'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='location'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='options'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='tabStopType'>
<retval declared_type='NSTextTabType' type='I' type64='Q'/>
</method>
</class>
<class name='NSTextTable'>
<method selector='boundsRectForBlock:contentRect:inRect:textContainer:characterRange:'>
<arg declared_type='NSTextTableBlock * _Nonnull' index='0' name='block' type='@'/>
<arg declared_type='NSRect' index='1' name='contentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='3' name='textContainer' type='@'/>
<arg declared_type='NSRange' index='4' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='collapsesBorders'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:'>
<arg declared_type='NSTextTableBlock * _Nonnull' index='0' name='block' type='@'/>
<arg declared_type='NSRect' index='1' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='controlView' type='@'/>
<arg declared_type='NSRange' index='3' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSLayoutManager * _Nonnull' index='4' name='layoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hidesEmptyCells'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutAlgorithm'>
<retval declared_type='NSTextTableLayoutAlgorithm' type='I' type64='Q'/>
</method>
<method selector='numberOfColumns'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:'>
<arg declared_type='NSTextTableBlock * _Nonnull' index='0' name='block' type='@'/>
<arg declared_type='NSPoint' index='1' name='startingPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nonnull' index='3' name='textContainer' type='@'/>
<arg declared_type='NSRange' index='4' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='setCollapsesBorders:'>
<arg declared_type='BOOL' index='0' name='collapsesBorders' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesEmptyCells:'>
<arg declared_type='BOOL' index='0' name='hidesEmptyCells' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutAlgorithm:'>
<arg declared_type='NSTextTableLayoutAlgorithm' index='0' name='layoutAlgorithm' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfColumns:'>
<arg declared_type='NSUInteger' index='0' name='numberOfColumns' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSTextTableBlock'>
<method selector='columnSpan'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='initWithTable:startingRow:rowSpan:startingColumn:columnSpan:'>
<arg declared_type='NSTextTable * _Nonnull' index='0' name='table' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='rowSpan' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='col' type='i' type64='q'/>
<arg declared_type='NSInteger' index='4' name='colSpan' type='i' type64='q'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='rowSpan'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='startingColumn'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='startingRow'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='table'>
<retval declared_type='NSTextTable * _Nonnull' type='@'/>
</method>
</class>
<class name='NSTextView'>
<method selector='acceptableDragTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='acceptsGlyphInfo'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alignJustified:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowedInputSourceLocales'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='allowsCharacterPickerTouchBarItem'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsDocumentBackgroundColorChange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsImageEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsUndo'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='breakUndoCoalescing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='candidateListTouchBarItem'>
<retval declared_type='NSCandidateListTouchBarItem * _Nullable' type='@'/>
</method>
<method selector='changeAttributes:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeColor:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeDocumentBackgroundColor:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeLayoutOrientation:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='characterIndexForInsertionAtPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='checkTextInDocument:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='checkTextInRange:types:options:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextCheckingTypes' index='1' name='checkingTypes' type='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='checkTextInSelection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cleanUpAfterDragOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clickedOnLink:atIndex:'>
<arg declared_type='id _Nonnull' index='0' name='link' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='complete:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='completionsForPartialWordRange:indexOfSelectedItem:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger * _Nonnull' index='1' name='index' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='defaultParagraphStyle'>
<retval declared_type='NSParagraphStyle * _Nullable' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='didChangeText'>
<retval declared_type='void' type='v'/>
</method>
<method selector='displaysLinkToolTips'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragImageForSelectionWithEvent:origin:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nullable' index='1' name='origin' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='dragOperationForDraggingInfo:type:'>
<arg declared_type='id _Nonnull' index='0' name='dragInfo' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='dragSelectionWithEvent:offset:slideBack:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='NSSize' index='1' name='mouseOffset' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='BOOL' index='2' name='slideBack' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawInsertionPointInRect:color:turnedOn:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSColor * _Nonnull' index='1' name='color' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawViewBackgroundInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawsBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enabledTextCheckingTypes'>
<retval declared_type='NSTextCheckingTypes' type='Q'/>
</method>
<method selector='handleTextCheckingResults:forRange:types:options:orthography:wordCount:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='results' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextCheckingTypes' index='2' name='checkingTypes' type='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='options' type='@'/>
<arg declared_type='NSOrthography * _Nonnull' index='4' name='orthography' type='@'/>
<arg declared_type='NSInteger' index='5' name='wordCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='importsGraphics'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithFrame:textContainer:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='container' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertCompletion:forPartialWordRange:movement:isFinal:'>
<arg declared_type='NSString * _Nonnull' index='0' name='word' type='@'/>
<arg declared_type='NSRange' index='1' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='2' name='movement' type='i' type64='q'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertText:'>
<arg declared_type='id _Nonnull' index='0' name='insertString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertionPointColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='invalidateTextContainerOrigin'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isAutomaticDashSubstitutionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAutomaticDataDetectionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAutomaticLinkDetectionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAutomaticQuoteSubstitutionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAutomaticSpellingCorrectionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAutomaticTextCompletionEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAutomaticTextReplacementEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isCoalescingUndo'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isContinuousSpellCheckingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEditable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFieldEditor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isGrammarCheckingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isIncrementalSearchingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRichText'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRulerVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager'>
<retval declared_type='NSLayoutManager * _Nullable' type='@'/>
</method>
<method selector='linkTextAttributes'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='loosenKerning:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lowerBaseline:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='markedTextAttributes'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='orderFrontLinkPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontListPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontSharingServicePicker:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontSpacingPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontSubstitutionsPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontTablePanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outline:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteAsPlainText:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteAsRichText:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performFindPanelAction:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredPasteboardTypeFromArray:restrictedToTypesFromArray:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='availableTypes' type='@'/>
<arg declared_type='NSArray * _Nullable' index='1' name='allowedTypes' type='@'/>
<retval declared_type='NSPasteboardType _Nullable' type='@'/>
</method>
<method selector='quickLookPreviewableItemsInRanges:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='ranges' type='@'/>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='raiseBaseline:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rangeForUserCharacterAttributeChange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeForUserCompletion'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeForUserParagraphAttributeChange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangeForUserTextChange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='rangesForUserCharacterAttributeChange'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='rangesForUserParagraphAttributeChange'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='rangesForUserTextChange'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='readSelectionFromPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readSelectionFromPasteboard:type:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readablePasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='registerForServices'>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceTextContainer:'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='newContainer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:didAddMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:didMoveMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:didRemoveMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:handleMouseDown:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:shouldAddMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rulerView:shouldMoveMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rulerView:shouldRemoveMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rulerView:willAddMarker:atLocation:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<arg declared_type='CGFloat' index='2' name='location' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rulerView:willMoveMarker:toLocation:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<arg declared_type='CGFloat' index='2' name='location' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='selectedRanges'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selectedTextAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='selectionAffinity'>
<retval declared_type='NSSelectionAffinity' type='I' type64='Q'/>
</method>
<method selector='selectionGranularity'>
<retval declared_type='NSSelectionGranularity' type='I' type64='Q'/>
</method>
<method selector='selectionRangeForProposedRange:granularity:'>
<arg declared_type='NSRange' index='0' name='proposedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSSelectionGranularity' index='1' name='granularity' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='setAcceptsGlyphInfo:'>
<arg declared_type='BOOL' index='0' name='acceptsGlyphInfo' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignment:range:'>
<arg declared_type='NSTextAlignment' index='0' name='alignment' type='I' type64='Q'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg declared_type='NSArray * _Nullable' index='0' name='allowedInputSourceLocales' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsCharacterPickerTouchBarItem:'>
<arg declared_type='BOOL' index='0' name='allowsCharacterPickerTouchBarItem' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsDocumentBackgroundColorChange:'>
<arg declared_type='BOOL' index='0' name='allowsDocumentBackgroundColorChange' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsImageEditing:'>
<arg declared_type='BOOL' index='0' name='allowsImageEditing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsUndo:'>
<arg declared_type='BOOL' index='0' name='allowsUndo' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticDashSubstitutionEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticDashSubstitutionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticDataDetectionEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticDataDetectionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticLinkDetectionEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticLinkDetectionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticQuoteSubstitutionEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticQuoteSubstitutionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticSpellingCorrectionEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticSpellingCorrectionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticTextCompletionEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticTextCompletionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutomaticTextReplacementEnabled:'>
<arg declared_type='BOOL' index='0' name='automaticTextReplacementEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseWritingDirection:range:'>
<arg declared_type='NSWritingDirection' index='0' name='writingDirection' type='i' type64='q'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstrainedFrameSize:'>
<arg declared_type='NSSize' index='0' name='desiredSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContinuousSpellCheckingEnabled:'>
<arg declared_type='BOOL' index='0' name='continuousSpellCheckingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultParagraphStyle:'>
<arg declared_type='NSParagraphStyle * _Nullable' index='0' name='defaultParagraphStyle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysLinkToolTips:'>
<arg declared_type='BOOL' index='0' name='displaysLinkToolTips' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsBackground:'>
<arg declared_type='BOOL' index='0' name='drawsBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEditable:'>
<arg declared_type='BOOL' index='0' name='editable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabledTextCheckingTypes:'>
<arg declared_type='NSTextCheckingTypes' index='0' name='enabledTextCheckingTypes' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFieldEditor:'>
<arg declared_type='BOOL' index='0' name='fieldEditor' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGrammarCheckingEnabled:'>
<arg declared_type='BOOL' index='0' name='grammarCheckingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImportsGraphics:'>
<arg declared_type='BOOL' index='0' name='importsGraphics' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncrementalSearchingEnabled:'>
<arg declared_type='BOOL' index='0' name='incrementalSearchingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInsertionPointColor:'>
<arg declared_type='NSColor * _Nonnull' index='0' name='insertionPointColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutOrientation:'>
<arg declared_type='NSTextLayoutOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLinkTextAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='linkTextAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarkedTextAttributes:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='markedTextAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplayInRect:avoidAdditionalLayout:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRichText:'>
<arg declared_type='BOOL' index='0' name='richText' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRulerVisible:'>
<arg declared_type='BOOL' index='0' name='rulerVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectable:'>
<arg declared_type='BOOL' index='0' name='selectable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedRange:affinity:stillSelecting:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSSelectionAffinity' index='1' name='affinity' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='stillSelectingFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedRanges:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='selectedRanges' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedRanges:affinity:stillSelecting:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='ranges' type='@'/>
<arg declared_type='NSSelectionAffinity' index='1' name='affinity' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='stillSelectingFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedTextAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='selectedTextAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionGranularity:'>
<arg declared_type='NSSelectionGranularity' index='0' name='selectionGranularity' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSmartInsertDeleteEnabled:'>
<arg declared_type='BOOL' index='0' name='smartInsertDeleteEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpellingState:range:'>
<arg declared_type='NSInteger' index='0' name='value' type='i' type64='q'/>
<arg declared_type='NSRange' index='1' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextContainer:'>
<arg declared_type='NSTextContainer * _Nullable' index='0' name='textContainer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextContainerInset:'>
<arg declared_type='NSSize' index='0' name='textContainerInset' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTypingAttributes:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='typingAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFindBar:'>
<arg declared_type='BOOL' index='0' name='usesFindBar' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFindPanel:'>
<arg declared_type='BOOL' index='0' name='usesFindPanel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFontPanel:'>
<arg declared_type='BOOL' index='0' name='usesFontPanel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesInspectorBar:'>
<arg declared_type='BOOL' index='0' name='usesInspectorBar' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesRolloverButtonForSelection:'>
<arg declared_type='BOOL' index='0' name='usesRolloverButtonForSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesRuler:'>
<arg declared_type='BOOL' index='0' name='usesRuler' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldChangeTextInRange:replacementString:'>
<arg declared_type='NSRange' index='0' name='affectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nullable' index='1' name='replacementString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldChangeTextInRanges:replacementStrings:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='affectedRanges' type='@'/>
<arg declared_type='NSArray * _Nullable' index='1' name='replacementStrings' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldDrawInsertionPoint'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showFindIndicatorForRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='smartDeleteRangeForProposedRange:'>
<arg declared_type='NSRange' index='0' name='proposedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='smartInsertAfterStringForString:replacingRange:'>
<arg declared_type='NSString * _Nonnull' index='0' name='pasteString' type='@'/>
<arg declared_type='NSRange' index='1' name='charRangeToReplace' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='smartInsertBeforeStringForString:replacingRange:'>
<arg declared_type='NSString * _Nonnull' index='0' name='pasteString' type='@'/>
<arg declared_type='NSRange' index='1' name='charRangeToReplace' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='smartInsertDeleteEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='smartInsertForString:replacingRange:beforeString:afterString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='pasteString' type='@'/>
<arg declared_type='NSRange' index='1' name='charRangeToReplace' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nullable * _Nullable' index='2' name='beforeString' type='^@'/>
<arg declared_type='NSString * _Nullable * _Nullable' index='3' name='afterString' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spellCheckerDocumentTag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='startSpeaking:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopSpeaking:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stronglyReferencesTextStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textContainer'>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method selector='textContainerInset'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='textContainerOrigin'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='textStorage'>
<retval declared_type='NSTextStorage * _Nullable' type='@'/>
</method>
<method selector='tightenKerning:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleAutomaticDashSubstitution:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleAutomaticDataDetection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleAutomaticLinkDetection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleAutomaticQuoteSubstitution:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleAutomaticSpellingCorrection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleAutomaticTextCompletion:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleAutomaticTextReplacement:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleBaseWritingDirection:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleContinuousSpellChecking:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleGrammarChecking:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleQuickLookPreviewPanel:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleSmartInsertDelete:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleTraditionalCharacterShape:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='turnOffKerning:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='turnOffLigatures:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='typingAttributes'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='updateCandidates'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateDragTypeRegistration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFontPanel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateInsertionPointStateAndRestartTimer:'>
<arg declared_type='BOOL' index='0' name='restartFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateQuickLookPreviewPanel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateRuler'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateTextTouchBarItems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateTouchBarItemIdentifiers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='useAllLigatures:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useStandardKerning:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useStandardLigatures:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usesFindBar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesFindPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesFontPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesInspectorBar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesRolloverButtonForSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='usesRuler'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg declared_type='NSPasteboardType _Nullable' index='0' name='sendType' type='@'/>
<arg declared_type='NSPasteboardType _Nullable' index='1' name='returnType' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='writablePasteboardTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='writeSelectionToPasteboard:type:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeSelectionToPasteboard:types:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='types' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSTitlebarAccessoryViewController'>
<method selector='fullScreenMinHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutAttribute'>
<retval declared_type='NSLayoutAttribute' type='i' type64='q'/>
</method>
<method selector='setFullScreenMinHeight:'>
<arg declared_type='CGFloat' index='0' name='fullScreenMinHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutAttribute:'>
<arg declared_type='NSLayoutAttribute' index='0' name='layoutAttribute' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidAppear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidDisappear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillAppear'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSTokenField'>
<method selector='completionDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='defaultCompletionDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='defaultTokenizingCharacterSet'>
<retval declared_type='NSCharacterSet * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setCompletionDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='completionDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTokenStyle:'>
<arg declared_type='NSTokenStyle' index='0' name='tokenStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTokenizingCharacterSet:'>
<arg declared_type='NSCharacterSet * _Nullable' index='0' name='tokenizingCharacterSet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tokenStyle'>
<retval declared_type='NSTokenStyle' type='I' type64='Q'/>
</method>
<method selector='tokenizingCharacterSet'>
<retval declared_type='NSCharacterSet * _Nonnull' type='@'/>
</method>
</class>
<class name='NSTokenFieldCell'>
<method selector='completionDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='defaultCompletionDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method class_method='true' selector='defaultTokenizingCharacterSet'>
<retval declared_type='NSCharacterSet * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setCompletionDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='completionDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTokenStyle:'>
<arg declared_type='NSTokenStyle' index='0' name='tokenStyle' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTokenizingCharacterSet:'>
<arg declared_type='NSCharacterSet * _Nullable' index='0' name='tokenizingCharacterSet' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tokenStyle'>
<retval declared_type='NSTokenStyle' type='I' type64='Q'/>
</method>
<method selector='tokenizingCharacterSet'>
<retval declared_type='NSCharacterSet * _Nonnull' type='@'/>
</method>
</class>
<class name='NSToolbar'>
<method selector='allowsExtensionItems'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsUserCustomization'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autosavesConfiguration'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='configurationDictionary'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='customizationPaletteIsRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='displayMode'>
<retval declared_type='NSToolbarDisplayMode' type='I' type64='Q'/>
</method>
<method selector='fullScreenAccessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='fullScreenAccessoryViewMaxHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='fullScreenAccessoryViewMinHeight'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='identifier'>
<retval declared_type='NSToolbarIdentifier _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type='NSToolbarIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertItemWithItemIdentifier:atIndex:'>
<arg declared_type='NSToolbarItemIdentifier _Nonnull' index='0' name='itemIdentifier' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='items'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='removeItemAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='runCustomizationPalette:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedItemIdentifier'>
<retval declared_type='NSToolbarItemIdentifier _Nullable' type='@'/>
</method>
<method selector='setAllowsExtensionItems:'>
<arg declared_type='BOOL' index='0' name='allowsExtensionItems' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsUserCustomization:'>
<arg declared_type='BOOL' index='0' name='allowsUserCustomization' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutosavesConfiguration:'>
<arg declared_type='BOOL' index='0' name='autosavesConfiguration' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConfigurationFromDictionary:'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='configDict' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayMode:'>
<arg declared_type='NSToolbarDisplayMode' index='0' name='displayMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFullScreenAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='fullScreenAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFullScreenAccessoryViewMaxHeight:'>
<arg declared_type='CGFloat' index='0' name='fullScreenAccessoryViewMaxHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFullScreenAccessoryViewMinHeight:'>
<arg declared_type='CGFloat' index='0' name='fullScreenAccessoryViewMinHeight' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedItemIdentifier:'>
<arg declared_type='NSToolbarItemIdentifier _Nullable' index='0' name='selectedItemIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsBaselineSeparator:'>
<arg declared_type='BOOL' index='0' name='showsBaselineSeparator' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSizeMode:'>
<arg declared_type='NSToolbarSizeMode' index='0' name='sizeMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg declared_type='BOOL' index='0' name='visible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsBaselineSeparator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sizeMode'>
<retval declared_type='NSToolbarSizeMode' type='I' type64='Q'/>
</method>
<method selector='validateVisibleItems'>
<retval declared_type='void' type='v'/>
</method>
<method selector='visibleItems'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='NSToolbarItem'>
<method selector='action'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='allowsDuplicatesInToolbar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autovalidates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='initWithItemIdentifier:'>
<arg declared_type='NSToolbarItemIdentifier _Nonnull' index='0' name='itemIdentifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemIdentifier'>
<retval declared_type='NSToolbarItemIdentifier _Nonnull' type='@'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='maxSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='menuFormRepresentation'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='minSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='paletteLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='setAction:'>
<arg declared_type='SEL _Nullable' index='0' name='action' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutovalidates:'>
<arg declared_type='BOOL' index='0' name='autovalidates' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nonnull' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxSize:'>
<arg declared_type='NSSize' index='0' name='maxSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuFormRepresentation:'>
<arg declared_type='NSMenuItem * _Nullable' index='0' name='menuFormRepresentation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type='NSSize' index='0' name='minSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaletteLabel:'>
<arg declared_type='NSString * _Nonnull' index='0' name='paletteLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTarget:'>
<arg declared_type='id _Nullable' index='0' name='target' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTip' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisibilityPriority:'>
<arg declared_type='NSToolbarItemVisibilityPriority' index='0' name='visibilityPriority' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='target'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='toolTip'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='toolbar'>
<retval declared_type='NSToolbar * _Nullable' type='@'/>
</method>
<method selector='validate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='visibilityPriority'>
<retval declared_type='NSToolbarItemVisibilityPriority' type='i' type64='q'/>
</method>
</class>
<class name='NSToolbarItemGroup'>
<method selector='setSubitems:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='subitems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subitems'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSTouch'>
<method selector='device'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deviceSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='identity'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='isResting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locationInView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='normalizedPosition'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='phase'>
<retval declared_type='NSTouchPhase' type='I' type64='Q'/>
</method>
<method selector='previousLocationInView:'>
<arg declared_type='NSView * _Nullable' index='0' name='view' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='type'>
<retval declared_type='NSTouchType' type='i' type64='q'/>
</method>
</class>
<class name='NSTouchBar'>
<method selector='customizationAllowedItemIdentifiers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='customizationIdentifier'>
<retval declared_type='NSTouchBarCustomizationIdentifier _Nullable' type='@'/>
</method>
<method selector='customizationRequiredItemIdentifiers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='defaultItemIdentifiers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='escapeKeyReplacementItemIdentifier'>
<retval declared_type='NSTouchBarItemIdentifier _Nullable' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='aDecoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemForIdentifier:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='__kindof NSTouchBarItem * _Nullable' type='@'/>
</method>
<method selector='itemIdentifiers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='principalItemIdentifier'>
<retval declared_type='NSTouchBarItemIdentifier _Nullable' type='@'/>
</method>
<method selector='setCustomizationAllowedItemIdentifiers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='customizationAllowedItemIdentifiers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomizationIdentifier:'>
<arg declared_type='NSTouchBarCustomizationIdentifier _Nullable' index='0' name='customizationIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomizationRequiredItemIdentifiers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='customizationRequiredItemIdentifiers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultItemIdentifiers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='defaultItemIdentifiers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEscapeKeyReplacementItemIdentifier:'>
<arg declared_type='NSTouchBarItemIdentifier _Nullable' index='0' name='escapeKeyReplacementItemIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrincipalItemIdentifier:'>
<arg declared_type='NSTouchBarItemIdentifier _Nullable' index='0' name='principalItemIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTemplateItems:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='templateItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='templateItems'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
</class>
<class name='NSTouchBarItem'>
<method selector='customizationLabel'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='NSTouchBarItemIdentifier _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setVisibilityPriority:'>
<arg declared_type='NSTouchBarItemPriority' index='0' name='visibilityPriority' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='viewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='visibilityPriority'>
<retval declared_type='NSTouchBarItemPriority' type='f'/>
</method>
</class>
<class name='NSTrackingArea'>
<method selector='initWithRect:options:owner:userInfo:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTrackingAreaOptions' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='2' name='owner' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='userInfo' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='options'>
<retval declared_type='NSTrackingAreaOptions' type='I' type64='Q'/>
</method>
<method selector='owner'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='rect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
</class>
<class name='NSTreeController'>
<method selector='add:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addChild:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSelectionIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alwaysUsesMultipleValuesMarker'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='arrangedObjects'>
<retval declared_type='NSTreeNode * _Nonnull' type='@'/>
</method>
<method selector='avoidsEmptySelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canAddChild'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canInsert'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canInsertChild'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='childrenKeyPath'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='childrenKeyPathForNode:'>
<arg declared_type='NSTreeNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='content'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='countKeyPath'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='countKeyPathForNode:'>
<arg declared_type='NSTreeNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='insert:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertChild:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertObject:atArrangedObjectIndexPath:'>
<arg declared_type='id _Nullable' index='0' name='object' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertObjects:atArrangedObjectIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='objects' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='leafKeyPath'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='leafKeyPathForNode:'>
<arg declared_type='NSTreeNode * _Nonnull' index='0' name='node' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='moveNode:toIndexPath:'>
<arg declared_type='NSTreeNode * _Nonnull' index='0' name='node' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveNodes:toIndexPath:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='nodes' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='startingIndexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preservesSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rearrangeObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='remove:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectAtArrangedObjectIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsAtArrangedObjectIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeSelectionIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='selectedNodes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selectedObjects'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selectionIndexPath'>
<retval declared_type='NSIndexPath * _Nullable' type='@'/>
</method>
<method selector='selectionIndexPaths'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selectsInsertedObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlwaysUsesMultipleValuesMarker:'>
<arg declared_type='BOOL' index='0' name='alwaysUsesMultipleValuesMarker' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAvoidsEmptySelection:'>
<arg declared_type='BOOL' index='0' name='avoidsEmptySelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setChildrenKeyPath:'>
<arg declared_type='NSString * _Nullable' index='0' name='childrenKeyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContent:'>
<arg declared_type='id _Nullable' index='0' name='content' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCountKeyPath:'>
<arg declared_type='NSString * _Nullable' index='0' name='countKeyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeafKeyPath:'>
<arg declared_type='NSString * _Nullable' index='0' name='leafKeyPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreservesSelection:'>
<arg declared_type='BOOL' index='0' name='preservesSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectionIndexPath:'>
<arg declared_type='NSIndexPath * _Nullable' index='0' name='indexPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSelectionIndexPaths:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='indexPaths' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSelectsInsertedObjects:'>
<arg declared_type='BOOL' index='0' name='selectsInsertedObjects' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSortDescriptors:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='sortDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortDescriptors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSTreeNode'>
<method selector='childNodes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='descendantNodeAtIndexPath:'>
<arg declared_type='NSIndexPath * _Nonnull' index='0' name='indexPath' type='@'/>
<retval declared_type='NSTreeNode * _Nullable' type='@'/>
</method>
<method selector='indexPath'>
<retval declared_type='NSIndexPath * _Nonnull' type='@'/>
</method>
<method selector='initWithRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='modelObject' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isLeaf'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mutableChildNodes'>
<retval declared_type='NSMutableArray * _Nonnull' type='@'/>
</method>
<method selector='parentNode'>
<retval declared_type='NSTreeNode * _Nullable' type='@'/>
</method>
<method selector='representedObject'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='sortWithSortDescriptors:recursively:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='sortDescriptors' type='@'/>
<arg declared_type='BOOL' index='1' name='recursively' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='treeNodeWithRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='modelObject' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
</class>
<class name='NSTypesetter'>
<method selector='actionForControlCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSTypesetterControlCharacterAction' type='I' type64='Q'/>
</method>
<method selector='attributedString'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='attributesForExtraLineFragment'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='baselineOffsetInLayoutManager:glyphIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutMgr' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='beginLineWithGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginParagraph'>
<retval declared_type='void' type='v'/>
</method>
<method selector='bidiProcessingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='textContainer' type='@'/>
<arg declared_type='NSRect' index='2' name='proposedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' index='3' name='glyphPosition' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='4' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualGlyphRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='currentParagraphStyle'>
<retval declared_type='NSParagraphStyle * _Nullable' type='@'/>
</method>
<method selector='currentTextContainer'>
<retval declared_type='NSTextContainer * _Nullable' type='@'/>
</method>
<method class_method='true' selector='defaultTypesetterBehavior'>
<retval declared_type='NSTypesetterBehavior' type='i' type64='q'/>
</method>
<method selector='deleteGlyphsInRange:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endLineWithGlyphRange:'>
<arg declared_type='NSRange' index='0' name='lineGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endParagraph'>
<retval declared_type='void' type='v'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
<arg declared_type='NSRange' index='0' name='glyphsRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSGlyph * _Null_unspecified' index='1' name='glyphBuffer' type='^I'/>
<arg declared_type='NSUInteger * _Null_unspecified' index='2' name='charIndexBuffer' type='^I' type64='^Q'/>
<arg declared_type='NSGlyphInscription * _Null_unspecified' index='3' name='inscribeBuffer' type='^I' type64='^Q'/>
<arg declared_type='BOOL * _Null_unspecified' index='4' name='elasticBuffer' type='^B'/>
<arg declared_type='unsigned char * _Null_unspecified' index='5' name='bidiLevelBuffer' type='*'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
<arg declared_type='NSRectPointer _Nonnull' index='0' name='lineFragmentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRectPointer _Nonnull' index='1' name='lineFragmentUsedRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='2' name='paragraphSeparatorGlyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSPoint' index='3' name='lineOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:'>
<arg declared_type='NSRectPointer _Null_unspecified' index='0' name='lineFragmentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRectPointer _Null_unspecified' index='1' name='lineFragmentUsedRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRectPointer _Null_unspecified' index='2' name='remainingRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='3' name='startingGlyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='4' name='proposedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' index='5' name='lineSpacing' type='f' type64='d'/>
<arg declared_type='CGFloat' index='6' name='paragraphSpacingBefore' type='f' type64='d'/>
<arg declared_type='CGFloat' index='7' name='paragraphSpacingAfter' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg declared_type='NSRange' index='0' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='hyphenCharacterForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='UTF32Char' type='L' type64='I'/>
</method>
<method selector='hyphenationFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='hyphenationFactorForGlyphAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='insertGlyph:atGlyphIndex:characterIndex:'>
<arg declared_type='NSGlyph' index='0' name='glyph' type='I'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='characterIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:'>
<arg declared_type='NSRange' index='0' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSLayoutManager * _Nonnull' index='1' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='2' name='maxNumLines' type='I' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='startGlyphIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='maxNumLines' type='I' type64='Q'/>
<arg declared_type='NSUInteger * _Nonnull' index='3' name='nextGlyph' type='^I' type64='^Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManager'>
<retval declared_type='NSLayoutManager * _Nullable' type='@'/>
</method>
<method selector='layoutParagraphAtPoint:'>
<arg declared_type='NSPointPointer _Nonnull' index='0' name='lineFragmentOrigin' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='lineFragmentPadding'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphCharacterRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphGlyphRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSeparatorCharacterRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSeparatorGlyphRange'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg declared_type='NSUInteger' index='0' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutMgr' type='@'/>
<arg declared_type='NSRange' index='1' name='nominallySpacedGlyphsRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg const='true' declared_type='unsigned char * _Nonnull' index='2' name='packedGlyphs' type='*'/>
<arg declared_type='NSUInteger' index='3' name='packedGlyphsCount' type='I' type64='Q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg declared_type='NSSize' index='0' name='attachmentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedString:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBidiLevels:forGlyphRange:'>
<arg const='true' declared_type='uint8_t * _Null_unspecified' index='0' name='levels' type='*'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBidiProcessingEnabled:'>
<arg declared_type='BOOL' index='0' name='bidiProcessingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHardInvalidation:forGlyphRange:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHyphenationFactor:'>
<arg declared_type='float' index='0' name='hyphenationFactor' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg declared_type='CGFloat' index='0' name='lineFragmentPadding' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg declared_type='NSRect' index='0' name='fragmentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRect' index='2' name='usedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat' index='3' name='baselineOffset' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
<arg declared_type='NSPoint' index='0' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg const='true' declared_type='CGFloat * _Null_unspecified' index='1' name='advancements' type='^f' type64='^d'/>
<arg declared_type='NSRange' index='2' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotShownAttribute:forGlyphRange:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParagraphGlyphRange:separatorGlyphRange:'>
<arg declared_type='NSRange' index='0' name='paragraphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='1' name='paragraphSeparatorRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg declared_type='NSTypesetterBehavior' index='0' name='typesetterBehavior' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesFontLeading:'>
<arg declared_type='BOOL' index='0' name='usesFontLeading' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedSystemTypesetter'>
<retval declared_type='__kindof NSTypesetter * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='sharedSystemTypesetterForBehavior:'>
<arg declared_type='NSTypesetterBehavior' index='0' name='behavior' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='substituteFontForFont:'>
<arg declared_type='NSFont * _Nonnull' index='0' name='originalFont' type='@'/>
<retval declared_type='NSFont * _Nonnull' type='@'/>
</method>
<method selector='substituteGlyphsInRange:withGlyphs:'>
<arg declared_type='NSRange' index='0' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSGlyph * _Null_unspecified' index='1' name='glyphs' type='^I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textContainers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
<arg declared_type='CGFloat' index='0' name='glyphLocation' type='f' type64='d'/>
<arg declared_type='NSWritingDirection' index='1' name='direction' type='i' type64='q'/>
<arg declared_type='CGFloat' index='2' name='maxLocation' type='f' type64='d'/>
<retval declared_type='NSTextTab * _Nullable' type='@'/>
</method>
<method selector='typesetterBehavior'>
<retval declared_type='NSTypesetterBehavior' type='i' type64='q'/>
</method>
<method selector='usesFontLeading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg declared_type='NSRectPointer _Nonnull' index='0' name='lineRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRange' index='1' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRectPointer _Nonnull' index='2' name='usedRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat * _Nonnull' index='3' name='baselineOffset' type='^f' type64='^d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSURL'>
<method class_method='true' selector='URLFromPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteBoard' type='@'/>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='writeToPasteboard:'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteBoard' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSUserDefaultsController'>
<method selector='appliesImmediately'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='defaults'>
<retval declared_type='NSUserDefaults * _Nonnull' type='@'/>
</method>
<method selector='hasUnappliedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithDefaults:initialValues:'>
<arg declared_type='NSUserDefaults * _Nullable' index='0' name='defaults' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='initialValues' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initialValues'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='revert:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revertToInitialValues:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='save:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppliesImmediately:'>
<arg declared_type='BOOL' index='0' name='appliesImmediately' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialValues:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='initialValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedUserDefaultsController'>
<retval declared_type='NSUserDefaultsController * _Nonnull' type='@'/>
</method>
<method selector='values'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
</class>
<class name='NSUserInterfaceCompressionOptions'>
<method class_method='true' selector='breakEqualWidthsOption'>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method selector='containsOptions:'>
<arg declared_type='NSUserInterfaceCompressionOptions * _Nonnull' index='0' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='hideImagesOption'>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='hideTextOption'>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithCompressionOptions:'>
<arg declared_type='NSSet * _Nonnull' index='0' name='options' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='identifier' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='intersectsOptions:'>
<arg declared_type='NSUserInterfaceCompressionOptions * _Nonnull' index='0' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEmpty'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='optionsByAddingOptions:'>
<arg declared_type='NSUserInterfaceCompressionOptions * _Nonnull' index='0' name='options' type='@'/>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method selector='optionsByRemovingOptions:'>
<arg declared_type='NSUserInterfaceCompressionOptions * _Nonnull' index='0' name='options' type='@'/>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='reduceMetricsOption'>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='standardOptions'>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
</class>
<class name='NSView'>
<method selector='acceptsFirstMouse:'>
<arg declared_type='NSEvent * _Nullable' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='acceptsTouchEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addConstraint:'>
<arg declared_type='NSLayoutConstraint * _Nonnull' index='0' name='constraint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCursorRect:cursor:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCursor * _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLayoutGuide:'>
<arg declared_type='NSLayoutGuide * _Nonnull' index='0' name='guide' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSubview:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSubview:positioned:relativeTo:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSWindowOrderingMode' index='1' name='place' type='i' type64='q'/>
<arg declared_type='NSView * _Nullable' index='2' name='otherView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addToolTipRect:owner:userData:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id _Nonnull' index='1' name='owner' type='@'/>
<arg declared_type='void * _Nullable' index='2' name='data' type='^v'/>
<retval declared_type='NSToolTipTag' type='i' type64='q'/>
</method>
<method selector='addTrackingArea:'>
<arg declared_type='NSTrackingArea * _Nonnull' index='0' name='trackingArea' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTrackingRect:owner:userData:assumeInside:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id _Nonnull' index='1' name='owner' type='@'/>
<arg declared_type='void * _Nullable' index='2' name='data' type='^v'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<retval declared_type='NSTrackingRectTag' type='i' type64='q'/>
</method>
<method selector='adjustPageHeightNew:top:bottom:limit:'>
<arg declared_type='CGFloat * _Nonnull' index='0' name='newBottom' type='^f' type64='^d'/>
<arg declared_type='CGFloat' index='1' name='oldTop' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='oldBottom' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='bottomLimit' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='adjustPageWidthNew:left:right:limit:'>
<arg declared_type='CGFloat * _Nonnull' index='0' name='newRight' type='^f' type64='^d'/>
<arg declared_type='CGFloat' index='1' name='oldLeft' type='f' type64='d'/>
<arg declared_type='CGFloat' index='2' name='oldRight' type='f' type64='d'/>
<arg declared_type='CGFloat' index='3' name='rightLimit' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='adjustScroll:'>
<arg declared_type='NSRect' index='0' name='newVisible' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='alignmentRectForFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='alignmentRectInsets'>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='allocateGState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowedTouchTypes'>
<retval declared_type='NSTouchTypeMask' type='I' type64='Q'/>
</method>
<method selector='allowsVibrancy'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alphaValue'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='ancestorSharedWithView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='autoresizesSubviews'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autoresizingMask'>
<retval declared_type='NSAutoresizingMaskOptions' type='I' type64='Q'/>
</method>
<method selector='autoscroll:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundFilters'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='backingAlignedRect:options:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSAlignmentOptions' index='1' name='options' type='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='baselineOffsetFromBottom'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='beginDocument'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginDraggingSessionWithItems:event:source:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='items' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='source' type='@'/>
<retval declared_type='NSDraggingSession * _Nonnull' type='@'/>
</method>
<method selector='beginPageInRect:atPlacement:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' index='1' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bitmapImageRepForCachingDisplayInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSBitmapImageRep * _Nullable' type='@'/>
</method>
<method selector='bottomAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='bounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='boundsRotation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='cacheDisplayInRect:toBitmapImageRep:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSBitmapImageRep * _Nonnull' index='1' name='bitmapImageRep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canBecomeKeyView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canDraw'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canDrawConcurrently'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canDrawSubviewsIntoLayer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='candidateListTouchBarItem'>
<retval declared_type='NSCandidateListTouchBarItem * _Nullable' type='@'/>
</method>
<method selector='centerScanRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='centerXAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='centerYAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='compositingFilter'>
<retval declared_type='CIFilter * _Nullable' type='@'/>
</method>
<method selector='constraints'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='constraintsAffectingLayoutForOrientation:'>
<arg declared_type='NSLayoutConstraintOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='contentCompressionResistancePriorityForOrientation:'>
<arg declared_type='NSLayoutConstraintOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='NSLayoutPriority' type='f'/>
</method>
<method selector='contentFilters'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='contentHuggingPriorityForOrientation:'>
<arg declared_type='NSLayoutConstraintOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='NSLayoutPriority' type='f'/>
</method>
<method selector='convertPoint:fromView:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPoint:toView:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointFromBacking:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointFromBase:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointFromLayer:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointToBacking:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointToBase:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertPointToLayer:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRect:fromView:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRect:toView:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectFromBacking:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectFromBase:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectFromLayer:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToBacking:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToBase:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToLayer:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertSize:fromView:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='convertSize:toView:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeFromBacking:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeFromBase:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeFromLayer:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeToBacking:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeToBase:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='convertSizeToLayer:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='dataWithEPSInsideRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='dataWithPDFInsideRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='defaultFocusRingType'>
<retval declared_type='NSFocusRingType' type='I' type64='Q'/>
</method>
<method class_method='true' selector='defaultMenu'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='didAddSubview:'>
<arg declared_type='NSView * _Nonnull' index='0' name='subview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didCloseMenu:withEvent:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSEvent * _Nullable' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardCursorRects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='display'>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayIfNeededIgnoringOpacity'>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayIfNeededInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayIfNeededInRectIgnoringOpacity:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayRectIgnoringOpacity:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayRectIgnoringOpacity:inContext:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSGraphicsContext * _Nonnull' index='1' name='context' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragFile:fromRect:slideBack:event:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filename' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='viewLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSSize' index='2' name='initialOffset' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='4' name='pboard' type='@'/>
<arg declared_type='id _Nonnull' index='5' name='sourceObj' type='@'/>
<arg declared_type='BOOL' index='6' name='slideFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dragPromisedFilesOfTypes:fromRect:source:slideBack:event:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='typeArray' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id _Nonnull' index='2' name='sourceObject' type='@'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<arg declared_type='NSEvent * _Nonnull' index='4' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawFocusRingMask'>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPageBorderWithSize:'>
<arg declared_type='NSSize' index='0' name='borderSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawRect:'>
<arg declared_type='NSRect' index='0' name='dirtyRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawSheetBorderWithSize:'>
<arg declared_type='NSSize' index='0' name='borderSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enclosingMenuItem'>
<retval declared_type='NSMenuItem * _Nullable' type='@'/>
</method>
<method selector='enclosingScrollView'>
<retval declared_type='NSScrollView * _Nullable' type='@'/>
</method>
<method selector='endDocument'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enterFullScreenMode:withOptions:'>
<arg declared_type='NSScreen * _Nonnull' index='0' name='screen' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='1' name='options' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='exerciseAmbiguityInLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='exitFullScreenModeWithOptions:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='options' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstBaselineAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='firstBaselineOffsetFromTop'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='fittingSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='focusRingMaskBounds'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='focusRingType'>
<retval declared_type='NSFocusRingType' type='I' type64='Q'/>
</method>
<method class_method='true' selector='focusView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameCenterRotation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='frameForAlignmentRect:'>
<arg declared_type='NSRect' index='0' name='alignmentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameRotation'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='gState'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='gestureRecognizers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='getRectsBeingDrawn:count:'>
<arg const='true' declared_type='NSRect * _Nullable * _Nullable' index='0' name='rects' type='^^{_NSRect}' type64='^^{CGRect}'/>
<arg declared_type='NSInteger * _Nullable' index='1' name='count' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getRectsExposedDuringLiveResize:count:'>
<arg declared_type='NSRect*' index='0' name='exposedRects' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger * _Nonnull' index='1' name='count' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='heightAdjustLimit'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='heightAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='hitTest:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='inLiveResize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='decoder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='inputContext'>
<retval declared_type='NSTextInputContext * _Nullable' type='@'/>
</method>
<method selector='intrinsicContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='invalidateIntrinsicContentSize'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='isCompatibleWithResponsiveScrolling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDescendantOf:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDrawingFindIndicator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFlipped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHiddenOrHasHiddenAncestor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInFullScreenMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRotatedFromBase'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRotatedOrScaledFromBase'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='knowsPageRange:'>
<arg declared_type='NSRangePointer _Nonnull' index='0' name='range' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastBaselineAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='lastBaselineOffsetFromBottom'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layer'>
<retval declared_type='CALayer * _Nullable' type='@'/>
</method>
<method selector='layerContentsPlacement'>
<retval declared_type='NSViewLayerContentsPlacement' type='i' type64='q'/>
</method>
<method selector='layerContentsRedrawPolicy'>
<retval declared_type='NSViewLayerContentsRedrawPolicy' type='i' type64='q'/>
</method>
<method selector='layerUsesCoreImageFilters'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutGuides'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='layoutSubtreeIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='leadingAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='leftAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='locationOfPrintRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='lockFocus'>
<retval declared_type='void' type='v'/>
</method>
<method selector='lockFocusIfCanDraw'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lockFocusIfCanDrawInContext:'>
<arg declared_type='NSGraphicsContext * _Nonnull' index='0' name='context' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='makeBackingLayer'>
<retval declared_type='CALayer * _Nonnull' type='@'/>
</method>
<method selector='menuForEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='mouse:inRect:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mouseDownCanMoveWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='needsDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='needsLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='needsPanelToBecomeKey'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='needsToDrawRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='needsUpdateConstraints'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextKeyView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='nextValidKeyView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='noteFocusRingMaskChanged'>
<retval declared_type='void' type='v'/>
</method>
<method selector='opaqueAncestor'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='pageFooter'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='pageHeader'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='performKeyEquivalent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performMnemonic:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='postsBoundsChangedNotifications'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='postsFrameChangedNotifications'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareContentInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForReuse'>
<retval declared_type='void' type='v'/>
</method>
<method selector='preparedContentRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='preservesContentDuringLiveResize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pressureConfiguration'>
<retval declared_type='NSPressureConfiguration * _Nullable' type='@'/>
</method>
<method selector='previousKeyView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='previousValidKeyView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='print:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='printJobTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='rectForPage:'>
<arg declared_type='NSInteger' index='0' name='page' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectForSmartMagnificationAtPoint:inRect:'>
<arg declared_type='NSPoint' index='0' name='location' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSRect' index='1' name='visibleRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='rectPreservedDuringLiveResize'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='reflectScrolledClipView:'>
<arg declared_type='NSClipView * _Nonnull' index='0' name='clipView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerForDraggedTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='newTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registeredDraggedTypes'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='releaseGState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllToolTips'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeConstraint:'>
<arg declared_type='NSLayoutConstraint * _Nonnull' index='0' name='constraint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeConstraints:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeCursorRect:cursor:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSCursor * _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromSuperview'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromSuperviewWithoutNeedingDisplay'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeGestureRecognizer:'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLayoutGuide:'>
<arg declared_type='NSLayoutGuide * _Nonnull' index='0' name='guide' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeToolTip:'>
<arg declared_type='NSToolTipTag' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTrackingArea:'>
<arg declared_type='NSTrackingArea * _Nonnull' index='0' name='trackingArea' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTrackingRect:'>
<arg declared_type='NSTrackingRectTag' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renewGState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceSubview:with:'>
<arg declared_type='NSView * _Nonnull' index='0' name='oldView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='newView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='requiresConstraintBasedLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='resetCursorRects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resizeSubviewsWithOldSize:'>
<arg declared_type='NSSize' index='0' name='oldSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resizeWithOldSuperviewSize:'>
<arg declared_type='NSSize' index='0' name='oldSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='rotateByAngle:'>
<arg declared_type='CGFloat' index='0' name='angle' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:didAddMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:didMoveMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:didRemoveMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:handleMouseDown:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rulerView:locationForPoint:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rulerView:pointForLocation:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='CGFloat' index='1' name='point' type='f' type64='d'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='rulerView:shouldAddMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rulerView:shouldMoveMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rulerView:shouldRemoveMarker:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rulerView:willAddMarker:atLocation:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<arg declared_type='CGFloat' index='2' name='location' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rulerView:willMoveMarker:toLocation:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSRulerMarker * _Nonnull' index='1' name='marker' type='@'/>
<arg declared_type='CGFloat' index='2' name='location' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='rulerView:willSetClientView:'>
<arg declared_type='NSRulerView * _Nonnull' index='0' name='ruler' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='newClient' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleUnitSquareToSize:'>
<arg declared_type='NSSize' index='0' name='newUnitSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollClipView:toPoint:'>
<arg declared_type='NSClipView * _Nonnull' index='0' name='clipView' type='@'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRect:by:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSSize' index='1' name='delta' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRectToVisible:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAcceptsTouchEvents:'>
<arg declared_type='BOOL' index='0' name='acceptsTouchEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowedTouchTypes:'>
<arg declared_type='NSTouchTypeMask' index='0' name='allowedTouchTypes' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlphaValue:'>
<arg declared_type='CGFloat' index='0' name='alphaValue' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoresizesSubviews:'>
<arg declared_type='BOOL' index='0' name='autoresizesSubviews' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoresizingMask:'>
<arg declared_type='NSAutoresizingMaskOptions' index='0' name='autoresizingMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundFilters:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='backgroundFilters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg declared_type='NSRect' index='0' name='bounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundsOrigin:'>
<arg declared_type='NSPoint' index='0' name='newOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundsRotation:'>
<arg declared_type='CGFloat' index='0' name='boundsRotation' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundsSize:'>
<arg declared_type='NSSize' index='0' name='newSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanDrawConcurrently:'>
<arg declared_type='BOOL' index='0' name='canDrawConcurrently' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanDrawSubviewsIntoLayer:'>
<arg declared_type='BOOL' index='0' name='canDrawSubviewsIntoLayer' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompositingFilter:'>
<arg declared_type='CIFilter * _Nullable' index='0' name='compositingFilter' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentCompressionResistancePriority:forOrientation:'>
<arg declared_type='NSLayoutPriority' index='0' name='priority' type='f'/>
<arg declared_type='NSLayoutConstraintOrientation' index='1' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentFilters:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='contentFilters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentHuggingPriority:forOrientation:'>
<arg declared_type='NSLayoutPriority' index='0' name='priority' type='f'/>
<arg declared_type='NSLayoutConstraintOrientation' index='1' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFocusRingType:'>
<arg declared_type='NSFocusRingType' index='0' name='focusRingType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type='NSRect' index='0' name='frame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameCenterRotation:'>
<arg declared_type='CGFloat' index='0' name='frameCenterRotation' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameOrigin:'>
<arg declared_type='NSPoint' index='0' name='newOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameRotation:'>
<arg declared_type='CGFloat' index='0' name='frameRotation' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameSize:'>
<arg declared_type='NSSize' index='0' name='newSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGestureRecognizers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='gestureRecognizers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:'>
<arg declared_type='BOOL' index='0' name='hidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeyboardFocusRingNeedsDisplayInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayer:'>
<arg declared_type='CALayer * _Nullable' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerContentsPlacement:'>
<arg declared_type='NSViewLayerContentsPlacement' index='0' name='layerContentsPlacement' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerContentsRedrawPolicy:'>
<arg declared_type='NSViewLayerContentsRedrawPolicy' index='0' name='layerContentsRedrawPolicy' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayerUsesCoreImageFilters:'>
<arg declared_type='BOOL' index='0' name='layerUsesCoreImageFilters' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplay:'>
<arg declared_type='BOOL' index='0' name='needsDisplay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplayInRect:'>
<arg declared_type='NSRect' index='0' name='invalidRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsLayout:'>
<arg declared_type='BOOL' index='0' name='needsLayout' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsUpdateConstraints:'>
<arg declared_type='BOOL' index='0' name='needsUpdateConstraints' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextKeyView:'>
<arg declared_type='NSView * _Nullable' index='0' name='nextKeyView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostsBoundsChangedNotifications:'>
<arg declared_type='BOOL' index='0' name='postsBoundsChangedNotifications' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPostsFrameChangedNotifications:'>
<arg declared_type='BOOL' index='0' name='postsFrameChangedNotifications' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreparedContentRect:'>
<arg declared_type='NSRect' index='0' name='preparedContentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPressureConfiguration:'>
<arg declared_type='NSPressureConfiguration * _Nullable' index='0' name='pressureConfiguration' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadow:'>
<arg declared_type='NSShadow * _Nullable' index='0' name='shadow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubviews:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='subviews' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTip' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTranslatesAutoresizingMaskIntoConstraints:'>
<arg declared_type='BOOL' index='0' name='translatesAutoresizingMaskIntoConstraints' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpGState'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg declared_type='NSUserInterfaceLayoutDirection' index='0' name='userInterfaceLayoutDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsBestResolutionOpenGLSurface:'>
<arg declared_type='BOOL' index='0' name='wantsBestResolutionOpenGLSurface' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsExtendedDynamicRangeOpenGLSurface:'>
<arg declared_type='BOOL' index='0' name='wantsExtendedDynamicRangeOpenGLSurface' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsLayer:'>
<arg declared_type='BOOL' index='0' name='wantsLayer' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWantsRestingTouches:'>
<arg declared_type='BOOL' index='0' name='wantsRestingTouches' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadow'>
<retval declared_type='NSShadow * _Nullable' type='@'/>
</method>
<method selector='shouldDelayWindowOrderingForEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldDrawColor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showDefinitionForAttributedString:atPoint:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attrString' type='@'/>
<arg declared_type='NSPoint' index='1' name='textBaselineOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showDefinitionForAttributedString:range:options:baselineOriginProvider:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attrString' type='@'/>
<arg declared_type='NSRange' index='1' name='targetRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nullable' index='2' name='options' type='@'/>
<arg declared_type='NSPoint (^ _Nullable)(NSRange)' function_pointer='true' index='3' name='originProvider' type='@?'>
<arg declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortSubviewsUsingFunction:context:'>
<arg declared_type='NSComparisonResult (* _Nonnull)(__kindof NSView * _Nonnull, __kindof NSView * _Nonnull, void * _Nullable)' function_pointer='true' index='0' name='compare' type='^?'>
<arg declared_type='__kindof NSView * _Nonnull' type='@'/>
<arg declared_type='__kindof NSView * _Nonnull' type='@'/>
<arg declared_type='void * _Nullable' type='^v'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</arg>
<arg declared_type='void * _Nullable' index='1' name='context' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subviews'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='superview'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='toolTip'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='topAnchor'>
<retval declared_type='NSLayoutYAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='trackingAreas'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='trailingAnchor'>
<retval declared_type='NSLayoutXAxisAnchor * _Nonnull' type='@'/>
</method>
<method selector='translateOriginToPoint:'>
<arg declared_type='NSPoint' index='0' name='translation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='translateRectsNeedingDisplayInRect:by:'>
<arg declared_type='NSRect' index='0' name='clipRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSSize' index='1' name='delta' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='translatesAutoresizingMaskIntoConstraints'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unlockFocus'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unregisterDraggedTypes'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateConstraints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateConstraintsForSubtreeIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateLayer'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateTrackingAreas'>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval declared_type='NSUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method selector='viewDidChangeBackingProperties'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidEndLiveResize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidHide'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidMoveToSuperview'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidMoveToWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidUnhide'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillDraw'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillMoveToSuperview:'>
<arg declared_type='NSView * _Nullable' index='0' name='newSuperview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillMoveToWindow:'>
<arg declared_type='NSWindow * _Nullable' index='0' name='newWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillStartLiveResize'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWithTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i' type64='q'/>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
<method selector='visibleRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='wantsBestResolutionOpenGLSurface'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsDefaultClipping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsExtendedDynamicRangeOpenGLSurface'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsLayer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsRestingTouches'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsUpdateLayer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='widthAdjustLimit'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='widthAnchor'>
<retval declared_type='NSLayoutDimension * _Nonnull' type='@'/>
</method>
<method selector='willOpenMenu:withEvent:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willRemoveSubview:'>
<arg declared_type='NSView * _Nonnull' index='0' name='subview' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='writeEPSInsideRect:toPasteboard:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pasteboard' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writePDFInsideRect:toPasteboard:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pasteboard' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSViewAnimation'>
<method selector='initWithViewAnimations:'>
<arg declared_type='NSArray *&gt; * _Nonnull' index='0' name='viewAnimations' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='setViewAnimations:'>
<arg declared_type='NSArray *&gt; * _Nonnull' index='0' name='viewAnimations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewAnimations'>
<retval declared_type='NSArray *&gt; * _Nonnull' type='@'/>
</method>
</class>
<class name='NSViewController'>
<method selector='addChildViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='childViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='childViewControllers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='commitEditing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='didCommitSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardEditing'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissController:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='extensionContext'>
<retval declared_type='NSExtensionContext * _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg declared_type='NSNibName _Nullable' index='0' name='nibNameOrNil' type='@'/>
<arg declared_type='NSBundle * _Nullable' index='1' name='nibBundleOrNil' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='insertChildViewController:atIndex:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='childViewController' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isViewLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadView'>
<retval declared_type='void' type='v'/>
</method>
<method selector='nibBundle'>
<retval declared_type='NSBundle * _Nullable' type='@'/>
</method>
<method selector='nibName'>
<retval declared_type='NSNibName _Nullable' type='@'/>
</method>
<method selector='parentViewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='preferredContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='preferredContentSizeDidChangeForViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredMaximumSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='preferredMinimumSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='preferredScreenOrigin'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='presentViewController:animator:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='animator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentViewController:asPopoverRelativeToRect:ofView:preferredEdge:behavior:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='NSRect' index='1' name='positioningRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nonnull' index='2' name='positioningView' type='@'/>
<arg declared_type='NSRectEdge' index='3' name='preferredEdge' type='i' type64='Q'/>
<arg declared_type='NSPopoverBehavior' index='4' name='behavior' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentViewControllerAsModalWindow:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentViewControllerAsSheet:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentedViewControllers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='presentingViewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='removeChildViewControllerAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeFromParentViewController'>
<retval declared_type='void' type='v'/>
</method>
<method selector='representedObject'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setChildViewControllers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='childViewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredContentSize:'>
<arg declared_type='NSSize' index='0' name='preferredContentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredScreenOrigin:'>
<arg declared_type='NSPoint' index='0' name='preferredScreenOrigin' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentedObject:'>
<arg declared_type='id _Nullable' index='0' name='representedObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceItemView:'>
<arg declared_type='NSView * _Nullable' index='0' name='sourceItemView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceItemView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='storyboard'>
<retval declared_type='NSStoryboard * _Nullable' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='transitionFromViewController:toViewController:options:completionHandler:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='fromViewController' type='@'/>
<arg declared_type='NSViewController * _Nonnull' index='1' name='toViewController' type='@'/>
<arg declared_type='NSViewControllerTransitionOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nullable)(void)' function_pointer='true' index='3' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateViewConstraints'>
<retval declared_type='void' type='v'/>
</method>
<method selector='view'>
<retval declared_type='NSView * _Nonnull' type='@'/>
</method>
<method selector='viewDidAppear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidDisappear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillAppear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillDisappear'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillTransitionToSize:'>
<arg declared_type='NSSize' index='0' name='newSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSVisualEffectView'>
<method selector='blendingMode'>
<retval declared_type='NSVisualEffectBlendingMode' type='i' type64='q'/>
</method>
<method selector='interiorBackgroundStyle'>
<retval declared_type='NSBackgroundStyle' type='i' type64='q'/>
</method>
<method selector='isEmphasized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maskImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='material'>
<retval declared_type='NSVisualEffectMaterial' type='i' type64='q'/>
</method>
<method selector='setBlendingMode:'>
<arg declared_type='NSVisualEffectBlendingMode' index='0' name='blendingMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmphasized:'>
<arg declared_type='BOOL' index='0' name='emphasized' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaskImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='maskImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaterial:'>
<arg declared_type='NSVisualEffectMaterial' index='0' name='material' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setState:'>
<arg declared_type='NSVisualEffectState' index='0' name='state' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='NSVisualEffectState' type='i' type64='q'/>
</method>
<method selector='viewDidMoveToWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillMoveToWindow:'>
<arg declared_type='NSWindow * _Nullable' index='0' name='newWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSWindow'>
<method selector='acceptsMouseMovedEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addChildWindow:ordered:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='childWin' type='@'/>
<arg declared_type='NSWindowOrderingMode' index='1' name='place' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTabbedWindow:ordered:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSWindowOrderingMode' index='1' name='ordered' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTitlebarAccessoryViewController:'>
<arg declared_type='NSTitlebarAccessoryViewController * _Nonnull' index='0' name='childViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='allowsAutomaticWindowTabbing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsConcurrentViewDrawing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsToolTipsWhenApplicationIsInactive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alphaValue'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='anchorAttributeForOrientation:'>
<arg declared_type='NSLayoutConstraintOrientation' index='0' name='orientation' type='i' type64='q'/>
<retval declared_type='NSLayoutAttribute' type='i' type64='q'/>
</method>
<method selector='animationBehavior'>
<retval declared_type='NSWindowAnimationBehavior' type='i' type64='q'/>
</method>
<method selector='animationResizeTime:'>
<arg declared_type='NSRect' index='0' name='newFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='areCursorRectsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='aspectRatio'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='attachedSheet'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='autorecalculatesContentBorderThicknessForEdge:'>
<arg declared_type='NSRectEdge' index='0' name='edge' type='i' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='autorecalculatesKeyViewLoop'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='NSColor * _Nonnull' type='@'/>
</method>
<method selector='backingAlignedRect:options:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSAlignmentOptions' index='1' name='options' type='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='backingLocation'>
<retval declared_type='NSWindowBackingLocation' type='I' type64='Q'/>
</method>
<method selector='backingScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='backingType'>
<retval declared_type='NSBackingStoreType' type='I' type64='Q'/>
</method>
<method selector='becomeKeyWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='becomeMainWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginCriticalSheet:completionHandler:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sheetWindow' type='@'/>
<arg declared_type='void (^ _Nullable)(NSModalResponse)' function_pointer='true' index='1' name='handler' type='@?'>
<arg declared_type='NSModalResponse' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginSheet:completionHandler:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sheetWindow' type='@'/>
<arg declared_type='void (^ _Nullable)(NSModalResponse)' function_pointer='true' index='1' name='handler' type='@?'>
<arg declared_type='NSModalResponse' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='cacheImageInRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canBecomeKeyWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canBecomeMainWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canBecomeVisibleWithoutLogin'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canHide'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canRepresentDisplayGamut:'>
<arg declared_type='NSDisplayGamut' index='0' name='displayGamut' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canStoreColor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cascadeTopLeftFromPoint:'>
<arg declared_type='NSPoint' index='0' name='topLeftPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='center'>
<retval declared_type='void' type='v'/>
</method>
<method selector='childWindows'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionBehavior'>
<retval declared_type='NSWindowCollectionBehavior' type='I' type64='Q'/>
</method>
<method selector='colorSpace'>
<retval declared_type='NSColorSpace * _Nullable' type='@'/>
</method>
<method selector='constrainFrameRect:toScreen:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSScreen * _Nullable' index='1' name='screen' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentAspectRatio'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='contentBorderThicknessForEdge:'>
<arg declared_type='NSRectEdge' index='0' name='edge' type='i' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='contentLayoutGuide'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='contentLayoutRect'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentMaxSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='contentMinSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='contentRectForFrameRect:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='contentRectForFrameRect:styleMask:'>
<arg declared_type='NSRect' index='0' name='fRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSWindowStyleMask' index='1' name='style' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='contentResizeIncrements'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='contentView'>
<retval declared_type='__kindof NSView * _Nullable' type='@'/>
</method>
<method selector='contentViewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='convertBaseToScreen:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='convertRectFromBacking:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectFromScreen:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToBacking:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertRectToScreen:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='convertScreenToBase:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='currentEvent'>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method selector='dataWithEPSInsideRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='dataWithPDFInsideRect:'>
<arg declared_type='NSRect' index='0' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSData * _Nonnull' type='@'/>
</method>
<method selector='deepestScreen'>
<retval declared_type='NSScreen * _Nullable' type='@'/>
</method>
<method selector='defaultButtonCell'>
<retval declared_type='NSButtonCell * _Nullable' type='@'/>
</method>
<method class_method='true' selector='defaultDepthLimit'>
<retval declared_type='NSWindowDepth' type='i'/>
</method>
<method selector='delegate'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='deminiaturize:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='depthLimit'>
<retval declared_type='NSWindowDepth' type='i'/>
</method>
<method selector='deviceDescription'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='disableCursorRects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableFlushWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableKeyEquivalentForDefaultButtonCell'>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableScreenUpdatesUntilFlush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='disableSnapshotRestoration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardCachedImage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardCursorRects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardEventsMatchingMask:beforeEvent:'>
<arg declared_type='NSUInteger' declared_type64='NSEventMask' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='NSEvent * _Nullable' index='1' name='lastEvent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='display'>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='displaysWhenScreenProfileChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dockTile'>
<retval declared_type='NSDockTile * _Nonnull' type='@'/>
</method>
<method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='baseLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSSize' index='2' name='initialOffset' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='4' name='pboard' type='@'/>
<arg declared_type='id _Nonnull' index='5' name='sourceObj' type='@'/>
<arg declared_type='BOOL' index='6' name='slideFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawers'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='enableCursorRects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableFlushWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableKeyEquivalentForDefaultButtonCell'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableSnapshotRestoration'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endEditingFor:'>
<arg declared_type='id _Nullable' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endSheet:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sheetWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endSheet:returnCode:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sheetWindow' type='@'/>
<arg declared_type='NSModalResponse' index='1' name='returnCode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fieldEditor:forObject:'>
<arg declared_type='BOOL' index='0' name='createFlag' type='B'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<retval declared_type='NSText * _Nullable' type='@'/>
</method>
<method selector='firstResponder'>
<retval declared_type='NSResponder * _Nullable' type='@'/>
</method>
<method selector='flushWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushWindowIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='frame'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='frameAutosaveName'>
<retval declared_type='NSWindowFrameAutosaveName _Nonnull' type='@'/>
</method>
<method selector='frameRectForContentRect:'>
<arg declared_type='NSRect' index='0' name='contentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='frameRectForContentRect:styleMask:'>
<arg declared_type='NSRect' index='0' name='cRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSWindowStyleMask' index='1' name='style' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='gState'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='graphicsContext'>
<retval declared_type='NSGraphicsContext * _Nullable' type='@'/>
</method>
<method selector='handleCloseScriptCommand:'>
<arg declared_type='NSCloseCommand * _Nonnull' index='0' name='command' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='handlePrintScriptCommand:'>
<arg declared_type='NSScriptCommand * _Nonnull' index='0' name='command' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='handleSaveScriptCommand:'>
<arg declared_type='NSScriptCommand * _Nonnull' index='0' name='command' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='hasCloseBox'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasDynamicDepthLimit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasShadow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasTitleBar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hidesOnDeactivate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ignoresMouseEvents'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inLiveResize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithContentRect:styleMask:backing:defer:'>
<arg declared_type='NSRect' index='0' name='contentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSWindowStyleMask' index='1' name='style' type='I' type64='Q'/>
<arg declared_type='NSBackingStoreType' index='2' name='backingStoreType' type='I' type64='Q'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithContentRect:styleMask:backing:defer:screen:'>
<arg declared_type='NSRect' index='0' name='contentRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSWindowStyleMask' index='1' name='style' type='I' type64='Q'/>
<arg declared_type='NSBackingStoreType' index='2' name='backingStoreType' type='I' type64='Q'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<arg declared_type='NSScreen * _Nullable' index='4' name='screen' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithWindowRef:'>
<arg declared_type='void * _Nonnull' index='0' name='windowRef' type='^v'/>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='initialFirstResponder'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='insertTitlebarAccessoryViewController:atIndex:'>
<arg declared_type='NSTitlebarAccessoryViewController * _Nonnull' index='0' name='childViewController' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateCursorRectsForView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invalidateShadow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isAutodisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDocumentEdited'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isExcludedFromWindowsMenu'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFloatingPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFlushWindowDisabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKeyWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMainWindow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMiniaturizable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMiniaturized'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isModalPanel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMovable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMovableByWindowBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOnActiveSpace'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOneShot'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReleasedWhenClosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isResizable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRestorable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSheet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isZoomable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isZoomed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyDown:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyViewSelectionDirection'>
<retval declared_type='NSSelectionDirection' type='I' type64='Q'/>
</method>
<method selector='layoutIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='level'>
<retval declared_type='NSWindowLevel' type='i' type64='q'/>
</method>
<method selector='makeFirstResponder:'>
<arg declared_type='NSResponder * _Nullable' index='0' name='responder' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='makeKeyAndOrderFront:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeKeyWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='makeMainWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='maxFullScreenContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='maxSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method class_method='true' selector='menuChanged:'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mergeAllWindows:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='minFrameWidthWithTitle:styleMask:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<arg declared_type='NSWindowStyleMask' index='1' name='style' type='I' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='minFullScreenContentSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='minSize'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='miniaturize:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='miniwindowImage'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='miniwindowTitle'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='mouseLocationOutsideOfEventStream'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='moveTabToNewWindow:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='nextEventMatchingMask:'>
<arg declared_type='NSUInteger' declared_type64='NSEventMask' index='0' name='mask' type='I' type64='Q'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
<arg declared_type='NSUInteger' declared_type64='NSEventMask' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='NSDate * _Nullable' index='1' name='expiration' type='@'/>
<arg declared_type='NSRunLoopMode _Nonnull' index='2' name='mode' type='@'/>
<arg declared_type='BOOL' index='3' name='deqFlag' type='B'/>
<retval declared_type='NSEvent * _Nullable' type='@'/>
</method>
<method selector='occlusionState'>
<retval declared_type='NSWindowOcclusionState' type='I' type64='Q'/>
</method>
<method selector='orderBack:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFront:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderFrontRegardless'>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderOut:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderWindow:relativeTo:'>
<arg declared_type='NSWindowOrderingMode' index='0' name='place' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='otherWin' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='orderedIndex'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='parentWindow'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='performClose:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performMiniaturize:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performWindowDragWithEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='performZoom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='postEvent:atStart:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredBackingLocation'>
<retval declared_type='NSWindowBackingLocation' type='I' type64='Q'/>
</method>
<method selector='preservesContentDuringLiveResize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preventsApplicationTerminationWhenModal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='print:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='recalculateKeyViewLoop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerForDraggedTypes:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='newTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeChildWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='childWin' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removeFrameUsingName:'>
<arg declared_type='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTitlebarAccessoryViewControllerAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='representedFilename'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='representedURL'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='resetCursorRects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resignKeyWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resignMainWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resizeFlags'>
<retval declared_type='NSEventModifierFlags' type='I' type64='Q'/>
</method>
<method selector='resizeIncrements'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='restorationClass'>
<retval declared_type='Class _Nullable' type='#'/>
</method>
<method selector='restoreCachedImage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runToolbarCustomizationPalette:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveFrameUsingName:'>
<arg declared_type='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='screen'>
<retval declared_type='NSScreen * _Nullable' type='@'/>
</method>
<method selector='selectKeyViewFollowingView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectKeyViewPrecedingView:'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectNextKeyView:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectNextTab:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectPreviousKeyView:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectPreviousTab:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sendEvent:'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptsMouseMovedEvents:'>
<arg declared_type='BOOL' index='0' name='acceptsMouseMovedEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setAllowsAutomaticWindowTabbing:'>
<arg declared_type='BOOL' index='0' name='allowsAutomaticWindowTabbing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsConcurrentViewDrawing:'>
<arg declared_type='BOOL' index='0' name='allowsConcurrentViewDrawing' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsToolTipsWhenApplicationIsInactive:'>
<arg declared_type='BOOL' index='0' name='allowsToolTipsWhenApplicationIsInactive' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlphaValue:'>
<arg declared_type='CGFloat' index='0' name='alphaValue' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorAttribute:forOrientation:'>
<arg declared_type='NSLayoutAttribute' index='0' name='attr' type='i' type64='q'/>
<arg declared_type='NSLayoutConstraintOrientation' index='1' name='orientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationBehavior:'>
<arg declared_type='NSWindowAnimationBehavior' index='0' name='animationBehavior' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAspectRatio:'>
<arg declared_type='NSSize' index='0' name='aspectRatio' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutodisplay:'>
<arg declared_type='BOOL' index='0' name='autodisplay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutorecalculatesContentBorderThickness:forEdge:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSRectEdge' index='1' name='edge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutorecalculatesKeyViewLoop:'>
<arg declared_type='BOOL' index='0' name='autorecalculatesKeyViewLoop' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='NSColor * _Nullable' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackingType:'>
<arg declared_type='NSBackingStoreType' index='0' name='backingType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanBecomeVisibleWithoutLogin:'>
<arg declared_type='BOOL' index='0' name='canBecomeVisibleWithoutLogin' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanHide:'>
<arg declared_type='BOOL' index='0' name='canHide' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollectionBehavior:'>
<arg declared_type='NSWindowCollectionBehavior' index='0' name='collectionBehavior' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorSpace:'>
<arg declared_type='NSColorSpace * _Nullable' index='0' name='colorSpace' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentAspectRatio:'>
<arg declared_type='NSSize' index='0' name='contentAspectRatio' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentBorderThickness:forEdge:'>
<arg declared_type='CGFloat' index='0' name='thickness' type='f' type64='d'/>
<arg declared_type='NSRectEdge' index='1' name='edge' type='i' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentMaxSize:'>
<arg declared_type='NSSize' index='0' name='contentMaxSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentMinSize:'>
<arg declared_type='NSSize' index='0' name='contentMinSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentResizeIncrements:'>
<arg declared_type='NSSize' index='0' name='contentResizeIncrements' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentSize:'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type='__kindof NSView * _Nullable' index='0' name='contentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type='NSViewController * _Nullable' index='0' name='contentViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultButtonCell:'>
<arg declared_type='NSButtonCell * _Nullable' index='0' name='defaultButtonCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthLimit:'>
<arg declared_type='NSWindowDepth' index='0' name='depthLimit' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaysWhenScreenProfileChanges:'>
<arg declared_type='BOOL' index='0' name='displaysWhenScreenProfileChanges' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentEdited:'>
<arg declared_type='BOOL' index='0' name='documentEdited' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDynamicDepthLimit:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExcludedFromWindowsMenu:'>
<arg declared_type='BOOL' index='0' name='excludedFromWindowsMenu' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:display:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:display:animate:'>
<arg declared_type='NSRect' index='0' name='frameRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='displayFlag' type='B'/>
<arg declared_type='BOOL' index='2' name='animateFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameAutosaveName:'>
<arg declared_type='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFrameFromString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameOrigin:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameTopLeftPoint:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrameUsingName:'>
<arg declared_type='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFrameUsingName:force:'>
<arg declared_type='NSWindowFrameAutosaveName _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='BOOL' index='1' name='force' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setHasShadow:'>
<arg declared_type='BOOL' index='0' name='hasShadow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesOnDeactivate:'>
<arg declared_type='BOOL' index='0' name='hidesOnDeactivate' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIgnoresMouseEvents:'>
<arg declared_type='BOOL' index='0' name='ignoresMouseEvents' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialFirstResponder:'>
<arg declared_type='NSView * _Nullable' index='0' name='initialFirstResponder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsMiniaturized:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsVisible:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsZoomed:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLevel:'>
<arg declared_type='NSWindowLevel' index='0' name='level' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxFullScreenContentSize:'>
<arg declared_type='NSSize' index='0' name='maxFullScreenContentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxSize:'>
<arg declared_type='NSSize' index='0' name='maxSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinFullScreenContentSize:'>
<arg declared_type='NSSize' index='0' name='minFullScreenContentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type='NSSize' index='0' name='minSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiniwindowImage:'>
<arg declared_type='NSImage * _Nullable' index='0' name='miniwindowImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiniwindowTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='miniwindowTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMovable:'>
<arg declared_type='BOOL' index='0' name='movable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMovableByWindowBackground:'>
<arg declared_type='BOOL' index='0' name='movableByWindowBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOneShot:'>
<arg declared_type='BOOL' index='0' name='oneShot' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type='BOOL' index='0' name='opaque' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrderedIndex:'>
<arg declared_type='NSInteger' index='0' name='orderedIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentWindow:'>
<arg declared_type='NSWindow * _Nullable' index='0' name='parentWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredBackingLocation:'>
<arg declared_type='NSWindowBackingLocation' index='0' name='preferredBackingLocation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreservesContentDuringLiveResize:'>
<arg declared_type='BOOL' index='0' name='preservesContentDuringLiveResize' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreventsApplicationTerminationWhenModal:'>
<arg declared_type='BOOL' index='0' name='preventsApplicationTerminationWhenModal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReleasedWhenClosed:'>
<arg declared_type='BOOL' index='0' name='releasedWhenClosed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentedFilename:'>
<arg declared_type='NSString * _Nonnull' index='0' name='representedFilename' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentedURL:'>
<arg declared_type='NSURL * _Nullable' index='0' name='representedURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResizeIncrements:'>
<arg declared_type='NSSize' index='0' name='resizeIncrements' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestorable:'>
<arg declared_type='BOOL' index='0' name='restorable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRestorationClass:'>
<arg declared_type='Class _Nullable' index='0' name='restorationClass' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSharingType:'>
<arg declared_type='NSWindowSharingType' index='0' name='sharingType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsResizeIndicator:'>
<arg declared_type='BOOL' index='0' name='showsResizeIndicator' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsToolbarButton:'>
<arg declared_type='BOOL' index='0' name='showsToolbarButton' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleMask:'>
<arg declared_type='NSWindowStyleMask' index='0' name='styleMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabbingIdentifier:'>
<arg declared_type='NSWindowTabbingIdentifier _Nonnull' index='0' name='tabbingIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTabbingMode:'>
<arg declared_type='NSWindowTabbingMode' index='0' name='tabbingMode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nonnull' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleVisibility:'>
<arg declared_type='NSWindowTitleVisibility' index='0' name='titleVisibility' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleWithRepresentedFilename:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filename' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitlebarAccessoryViewControllers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='titlebarAccessoryViewControllers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitlebarAppearsTransparent:'>
<arg declared_type='BOOL' index='0' name='titlebarAppearsTransparent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolbar:'>
<arg declared_type='NSToolbar * _Nullable' index='0' name='toolbar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewsNeedDisplay:'>
<arg declared_type='BOOL' index='0' name='viewsNeedDisplay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindowController:'>
<arg declared_type='__kindof NSWindowController * _Nullable' index='0' name='windowController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingType'>
<retval declared_type='NSWindowSharingType' type='I' type64='Q'/>
</method>
<method selector='sheetParent'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='sheets'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='showsResizeIndicator'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsToolbarButton'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='standardWindowButton:'>
<arg declared_type='NSWindowButton' index='0' name='b' type='I' type64='Q'/>
<retval declared_type='NSButton * _Nullable' type='@'/>
</method>
<method class_method='true' selector='standardWindowButton:forStyleMask:'>
<arg declared_type='NSWindowButton' index='0' name='b' type='I' type64='Q'/>
<arg declared_type='NSWindowStyleMask' index='1' name='styleMask' type='I' type64='Q'/>
<retval declared_type='NSButton * _Nullable' type='@'/>
</method>
<method selector='stringWithSavedFrame'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='styleMask'>
<retval declared_type='NSWindowStyleMask' type='I' type64='Q'/>
</method>
<method selector='tab'>
<retval declared_type='NSWindowTab * _Nonnull' type='@'/>
</method>
<method selector='tabGroup'>
<retval declared_type='NSWindowTabGroup * _Nullable' type='@'/>
</method>
<method selector='tabbedWindows'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tabbingIdentifier'>
<retval declared_type='NSWindowTabbingIdentifier _Nonnull' type='@'/>
</method>
<method selector='tabbingMode'>
<retval declared_type='NSWindowTabbingMode' type='i' type64='q'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='titleVisibility'>
<retval declared_type='NSWindowTitleVisibility' type='i' type64='q'/>
</method>
<method selector='titlebarAccessoryViewControllers'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='titlebarAppearsTransparent'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='toggleFullScreen:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleTabBar:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleTabOverview:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toggleToolbarShown:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toolbar'>
<retval declared_type='NSToolbar * _Nullable' type='@'/>
</method>
<method selector='trackEventsMatchingMask:timeout:mode:handler:'>
<arg declared_type='NSEventMask' index='0' name='mask' type='Q'/>
<arg declared_type='NSTimeInterval' index='1' name='timeout' type='d'/>
<arg declared_type='NSRunLoopMode _Nonnull' index='2' name='mode' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSEvent * _Nullable, BOOL * _Nonnull)' function_pointer='true' index='3' name='trackingHandler' type='@?'>
<arg declared_type='NSEvent * _Nullable' type='@'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='tryToPerform:with:'>
<arg declared_type='SEL _Nonnull' index='0' name='action' type=':'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unregisterDraggedTypes'>
<retval declared_type='void' type='v'/>
</method>
<method selector='update'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateConstraintsIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='useOptimizedDrawing:'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userSpaceScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method class_method='true' selector='userTabbingPreference'>
<retval declared_type='NSWindowUserTabbingPreference' type='i' type64='q'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg declared_type='NSPasteboardType _Nullable' index='0' name='sendType' type='@'/>
<arg declared_type='NSPasteboardType _Nullable' index='1' name='returnType' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='viewsNeedDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='visualizeConstraints:'>
<arg declared_type='NSArray * _Nullable' index='0' name='constraints' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowController'>
<retval declared_type='__kindof NSWindowController * _Nullable' type='@'/>
</method>
<method selector='windowNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='windowNumberAtPoint:belowWindowWithWindowNumber:'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSInteger' index='1' name='windowNumber' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method class_method='true' selector='windowNumbersWithOptions:'>
<arg declared_type='NSWindowNumberListOptions' index='0' name='options' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='windowRef'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='windowTitlebarLayoutDirection'>
<retval declared_type='NSUserInterfaceLayoutDirection' type='i' type64='q'/>
</method>
<method class_method='true' selector='windowWithContentViewController:'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='contentViewController' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='worksWhenModal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='zoom:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSWindowController'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentViewController'>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='dismissController:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='document'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type='NSCoder * _Nonnull' index='0' name='coder' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='initWithWindow:'>
<arg declared_type='NSWindow * _Nullable' index='0' name='window' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithWindowNibName:'>
<arg declared_type='NSNibName _Nonnull' index='0' name='windowNibName' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithWindowNibName:owner:'>
<arg declared_type='NSNibName _Nonnull' index='0' name='windowNibName' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='owner' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='initWithWindowNibPath:owner:'>
<arg declared_type='NSString * _Nonnull' index='0' name='windowNibPath' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='owner' type='@'/>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method selector='isWindowLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadWindow'>
<retval declared_type='void' type='v'/>
</method>
<method selector='owner'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setContentViewController:'>
<arg declared_type='NSViewController * _Nullable' index='0' name='contentViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocument:'>
<arg declared_type='id _Nullable' index='0' name='document' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDocumentEdited:'>
<arg declared_type='BOOL' index='0' name='dirtyFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCascadeWindows:'>
<arg declared_type='BOOL' index='0' name='shouldCascadeWindows' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCloseDocument:'>
<arg declared_type='BOOL' index='0' name='shouldCloseDocument' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindow:'>
<arg declared_type='NSWindow * _Nullable' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWindowFrameAutosaveName:'>
<arg declared_type='NSWindowFrameAutosaveName _Nonnull' index='0' name='windowFrameAutosaveName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldCascadeWindows'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shouldCloseDocument'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showWindow:'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storyboard'>
<retval declared_type='NSStoryboard * _Nullable' type='@'/>
</method>
<method selector='synchronizeWindowTitleWithDocumentName'>
<retval declared_type='void' type='v'/>
</method>
<method selector='window'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='windowDidLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowFrameAutosaveName'>
<retval declared_type='NSWindowFrameAutosaveName _Nonnull' type='@'/>
</method>
<method selector='windowNibName'>
<retval declared_type='NSNibName _Nullable' type='@'/>
</method>
<method selector='windowNibPath'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='windowTitleForDocumentDisplayName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='displayName' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='windowWillLoad'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSWindowTab'>
<method selector='accessoryView'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='setAccessoryView:'>
<arg declared_type='NSView * _Nullable' index='0' name='accessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg declared_type='NSAttributedString * _Nullable' index='0' name='attributedTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString * _Nullable' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToolTip:'>
<arg declared_type='NSString * _Nullable' index='0' name='toolTip' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='toolTip'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</class>
<class name='NSWindowTabGroup'>
<method selector='addWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='identifier'>
<retval declared_type='NSWindowTabbingIdentifier _Nonnull' type='@'/>
</method>
<method selector='insertWindow:atIndex:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isOverviewVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTabBarVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeWindow:'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedWindow'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='setOverviewVisible:'>
<arg declared_type='BOOL' index='0' name='overviewVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedWindow:'>
<arg declared_type='NSWindow * _Nullable' index='0' name='selectedWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windows'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='NSWorkspace'>
<method selector='URLForApplicationToOpenURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='URLForApplicationWithBundleIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='bundleIdentifier' type='@'/>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='absolutePathForAppBundleWithIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='bundleIdentifier' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityDisplayShouldDifferentiateWithoutColor'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityDisplayShouldIncreaseContrast'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityDisplayShouldInvertColors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityDisplayShouldReduceMotion'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityDisplayShouldReduceTransparency'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='activateFileViewerSelectingURLs:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='fileURLs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='activeApplication'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='checkForRemovableMedia'>
<retval declared_type='void' type='v'/>
</method>
<method selector='desktopImageOptionsForScreen:'>
<arg declared_type='NSScreen * _Nonnull' index='0' name='screen' type='@'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='desktopImageURLForScreen:'>
<arg declared_type='NSScreen * _Nonnull' index='0' name='screen' type='@'/>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='duplicateURLs:completionHandler:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='URLs' type='@'/>
<arg declared_type='void (^ _Nullable)(NSDictionary * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='handler' type='@?'>
<arg declared_type='NSDictionary * _Nonnull' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='extendPowerOffBy:'>
<arg declared_type='NSInteger' index='0' name='requested' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='fileLabelColors'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='fileLabels'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='fileSystemChanged'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='filenameExtension:isValidForType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filenameExtension' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='typeName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='findApplications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='frontmostApplication'>
<retval declared_type='NSRunningApplication * _Nullable' type='@'/>
</method>
<method selector='fullPathForApplication:'>
<arg declared_type='NSString * _Nonnull' index='0' name='appName' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<arg declared_type='BOOL * _Nullable' index='1' name='removableFlag' type='^B'/>
<arg declared_type='BOOL * _Nullable' index='2' name='writableFlag' type='^B'/>
<arg declared_type='BOOL * _Nullable' index='3' name='unmountableFlag' type='^B'/>
<arg declared_type='NSString * _Nullable * _Nullable' index='4' name='description' type='^@'/>
<arg declared_type='NSString * _Nullable * _Nullable' index='5' name='fileSystemType' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getInfoForFile:application:type:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<arg declared_type='NSString * _Nullable * _Nullable' index='1' name='appName' type='^@'/>
<arg declared_type='NSString * _Nullable * _Nullable' index='2' name='type' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hideOtherApplications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='iconForFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='iconForFileType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fileType' type='@'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='iconForFiles:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='fullPaths' type='@'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='isFilePackageAtPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSwitchControlEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVoiceOverEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:'>
<arg declared_type='NSString * _Nonnull' index='0' name='bundleIdentifier' type='@'/>
<arg declared_type='NSWorkspaceLaunchOptions' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='NSAppleEventDescriptor * _Nullable' index='2' name='descriptor' type='@'/>
<arg declared_type='NSNumber * _Nullable * _Nullable' index='3' name='identifier' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='launchApplication:'>
<arg declared_type='NSString * _Nonnull' index='0' name='appName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='launchApplication:showIcon:autolaunch:'>
<arg declared_type='NSString * _Nonnull' index='0' name='appName' type='@'/>
<arg declared_type='BOOL' index='1' name='showIcon' type='B'/>
<arg declared_type='BOOL' index='2' name='autolaunch' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='launchApplicationAtURL:options:configuration:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSWorkspaceLaunchOptions' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='configuration' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='NSRunningApplication * _Nullable' type='@'/>
</method>
<method selector='launchedApplications'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='localizedDescriptionForType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='menuBarOwningApplication'>
<retval declared_type='NSRunningApplication * _Nullable' type='@'/>
</method>
<method selector='mountNewRemovableMedia'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='mountedLocalVolumePaths'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='mountedRemovableMedia'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='noteFileSystemChanged'>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteFileSystemChanged:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteUserDefaultsChanged'>
<retval declared_type='void' type='v'/>
</method>
<method selector='notificationCenter'>
<retval declared_type='NSNotificationCenter * _Nonnull' type='@'/>
</method>
<method selector='openFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openFile:fromImage:at:inView:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<arg declared_type='NSImage * _Nullable' index='1' name='image' type='@'/>
<arg declared_type='NSPoint' index='2' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSView * _Nullable' index='3' name='view' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openFile:withApplication:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='appName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openFile:withApplication:andDeactivate:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='appName' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openTempFile:'>
<arg declared_type='NSString * _Nonnull' index='0' name='fullPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openURL:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openURL:options:configuration:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSWorkspaceLaunchOptions' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='configuration' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='NSRunningApplication * _Nullable' type='@'/>
</method>
<method selector='openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='urls' type='@'/>
<arg declared_type='NSString * _Nullable' index='1' name='bundleIdentifier' type='@'/>
<arg declared_type='NSWorkspaceLaunchOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='NSAppleEventDescriptor * _Nullable' index='3' name='descriptor' type='@'/>
<arg declared_type='NSArray * _Nullable * _Nullable' index='4' name='identifiers' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openURLs:withApplicationAtURL:options:configuration:error:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='urls' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='applicationURL' type='@'/>
<arg declared_type='NSWorkspaceLaunchOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='configuration' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='4' name='error' type='^@'/>
<retval declared_type='NSRunningApplication * _Nullable' type='@'/>
</method>
<method selector='performFileOperation:source:destination:files:tag:'>
<arg declared_type='NSWorkspaceFileOperationName _Nonnull' index='0' name='operation' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='source' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='destination' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='3' name='files' type='@'/>
<arg declared_type='NSInteger * _Nullable' index='4' name='tag' type='^i' type64='^q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredFilenameExtensionForType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='typeName' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='recycleURLs:completionHandler:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='URLs' type='@'/>
<arg declared_type='void (^ _Nullable)(NSDictionary * _Nonnull, NSError * _Nullable)' function_pointer='true' index='1' name='handler' type='@?'>
<arg declared_type='NSDictionary * _Nonnull' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='runningApplications'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='selectFile:inFileViewerRootedAtPath:'>
<arg declared_type='NSString * _Nullable' index='0' name='fullPath' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='rootFullPath' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDesktopImageURL:forScreen:options:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSScreen * _Nonnull' index='1' name='screen' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setIcon:forFile:options:'>
<arg declared_type='NSImage * _Nullable' index='0' name='image' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='fullPath' type='@'/>
<arg declared_type='NSWorkspaceIconCreationOptions' index='2' name='options' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sharedWorkspace'>
<retval declared_type='NSWorkspace * _Nonnull' type='@'/>
</method>
<method selector='showSearchResultsForQueryString:'>
<arg declared_type='NSString * _Nonnull' index='0' name='queryString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='slideImage:from:to:'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='fromPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPoint' index='2' name='toPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type:conformsToType:'>
<arg declared_type='NSString * _Nonnull' index='0' name='firstTypeName' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='secondTypeName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='typeOfFile:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='absoluteFilePath' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='outError' type='^@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='unmountAndEjectDeviceAtPath:'>
<arg declared_type='NSString * _Nonnull' index='0' name='path' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unmountAndEjectDeviceAtURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userDefaultsChanged'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<informal_protocol name='NSAccessibility'>
<method selector='accessibilityActionDescription:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSAccessibilityActionName _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityActionNames' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityActivationPoint' type='{_NSPoint=ff}8@0:4' type64='{CGPoint=dd}16@0:8'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityAllowedValues' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityApplicationFocusedUIElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityArrayAttributeCount:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='accessibilityArrayAttributeValues:index:maxCount:' type='@20@0:4@8I12I16' type64='@40@0:8@16Q24Q32'>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='maxCount' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityAttributeNames' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityAttributeValue:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributeValue:forParameter:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSAccessibilityParameterizedAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<arg declared_type='id _Nullable' index='1' name='parameter' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityAttributedStringForRange:' type='@16@0:4{_NSRange=II}8' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityCancelButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityCellForColumn:row:' type='@16@0:4i8i12' type64='@32@0:8q16q24'>
<arg declared_type='NSInteger' index='0' name='column' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityChildren' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityChildrenInNavigationOrder' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray&gt; * _Nullable' type='@'/>
</method>
<method selector='accessibilityClearButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityCloseButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityColumnCount' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityColumnHeaderUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityColumnIndexRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityColumnTitles' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityColumns' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityContents' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityCriticalValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityCustomActions' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityCustomRotors' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityDecrementButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDefaultButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDisclosedByRow' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDisclosedRows' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityDisclosureLevel' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityDocument' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityExtrasMenuBar' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityFilename' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityFocusedUIElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='accessibilityFocusedWindow' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFrameForRange:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4{_NSRange=II}8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityFullScreenButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityGrowArea' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHandles' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityHeader' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHelp' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityHitTest:' type='@16@0:4{_NSPoint=ff}8' type64='@32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHorizontalScrollBar' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityHorizontalUnitDescription' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityHorizontalUnits' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSAccessibilityUnits' type='i' type64='q'/>
</method>
<method selector='accessibilityIdentifier' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityIncrementButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityIndex' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityIndexOfChild:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='child' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='accessibilityInsertionPointLineNumber' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityIsAttributeSettable:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='0' name='attribute' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityIsIgnored' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityLabelUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityLabelValue' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='accessibilityLayoutPointForScreenPoint:' type='{_NSPoint=ff}16@0:4{_NSPoint=ff}8' type64='{CGPoint=dd}32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityLayoutSizeForScreenSize:' type='{_NSSize=ff}16@0:4{_NSSize=ff}8' type64='{CGSize=dd}32@0:8{CGSize=dd}16'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='accessibilityLineForIndex:' type='i12@0:4i8' type64='q24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityLinkedUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityMainWindow' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMarkerGroupUIElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMarkerTypeDescription' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityMarkerUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityMarkerValues' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMaxValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMenuBar' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMinValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityMinimizeButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityNextContents' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityNotifiesWhenDestroyed' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityNumberOfCharacters' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityOrientation' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSAccessibilityOrientation' type='i' type64='q'/>
</method>
<method selector='accessibilityOverflowButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityParameterizedAttributeNames' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='accessibilityParent' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityPerformAction:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAccessibilityActionName _Nonnull' index='0' name='action' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilityPerformCancel' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformConfirm' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformDecrement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformDelete' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformIncrement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformPick' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformPress' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformRaise' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformShowAlternateUI' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformShowDefaultUI' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformShowMenu' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPlaceholderValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityPreviousContents' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityProxy' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityRTFForRange:' type='@16@0:4{_NSRange=II}8' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSData * _Nullable' type='@'/>
</method>
<method selector='accessibilityRangeForIndex:' type='{_NSRange=II}12@0:4i8' type64='{_NSRange=QQ}24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeForLine:' type='{_NSRange=II}12@0:4i8' type64='{_NSRange=QQ}24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='line' type='i' type64='q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRangeForPosition:' type='{_NSRange=II}16@0:4{_NSPoint=ff}8' type64='{_NSRange=QQ}32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRole' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAccessibilityRole _Nullable' type='@'/>
</method>
<method selector='accessibilityRoleDescription' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityRowCount' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityRowHeaderUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityRowIndexRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityRows' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityRulerMarkerType' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSAccessibilityRulerMarkerType' type='i' type64='q'/>
</method>
<method selector='accessibilityScreenPointForLayoutPoint:' type='{_NSPoint=ff}16@0:4{_NSPoint=ff}8' type64='{CGPoint=dd}32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='accessibilityScreenSizeForLayoutSize:' type='{_NSSize=ff}16@0:4{_NSSize=ff}8' type64='{CGSize=dd}32@0:8{CGSize=dd}16'>
<arg declared_type='NSSize' index='0' name='size' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='accessibilitySearchButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilitySearchMenu' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedCells' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedChildren' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedColumns' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedRows' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedText' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedTextRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySelectedTextRanges' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityServesAsTitleForUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySetValue:forAttribute:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='id _Nullable' index='0' name='value' type='@'/>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='1' name='attribute' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='accessibilitySharedCharacterRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySharedFocusElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySharedTextUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityShownMenu' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilitySortDirection' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSAccessibilitySortDirection' type='i' type64='q'/>
</method>
<method selector='accessibilitySplitters' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityStringForRange:' type='@16@0:4{_NSRange=II}8' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityStyleRangeForIndex:' type='{_NSRange=II}12@0:4i8' type64='{_NSRange=QQ}24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilitySubrole' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAccessibilitySubrole _Nullable' type='@'/>
</method>
<method selector='accessibilityTabs' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityTitle' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityTitleUIElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityToolbarButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityTopLevelUIElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityURL' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='accessibilityUnitDescription' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityUnits' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSAccessibilityUnits' type='i' type64='q'/>
</method>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityValueDescription' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityVerticalScrollBar' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityVerticalUnitDescription' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityVerticalUnits' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSAccessibilityUnits' type='i' type64='q'/>
</method>
<method selector='accessibilityVisibleCells' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleCharacterRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityVisibleChildren' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleColumns' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleRows' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityWarningValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityWindow' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityWindows' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityZoomButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isAccessibilityAlternateUIVisible' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityDisclosed' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityEdited' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityElement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityEnabled' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityExpanded' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityFocused' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityFrontmost' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityHidden' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityMain' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityMinimized' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityModal' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityOrderedByRow' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityProtectedContent' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityRequired' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilitySelected' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilitySelectorAllowed:' type='B12@0:4:8' type64='B24@0:8:16'>
<arg declared_type='SEL _Nonnull' index='0' name='selector' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAccessibilityActivationPoint:' type='v16@0:4{_NSPoint=ff}8' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='accessibilityActivationPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAllowedValues:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityAllowedValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityAlternateUIVisible:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityAlternateUIVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityApplicationFocusedUIElement:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityApplicationFocusedUIElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCancelButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityCancelButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityChildren:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityChildren' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityChildrenInNavigationOrder:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray&gt; * _Nullable' index='0' name='accessibilityChildrenInNavigationOrder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityClearButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityClearButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCloseButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityCloseButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumnCount:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='accessibilityColumnCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumnHeaderUIElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityColumnHeaderUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumnIndexRange:' type='v16@0:4{_NSRange=II}8' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='accessibilityColumnIndexRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumnTitles:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityColumnTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityColumns:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityColumns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityContents:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityContents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCriticalValue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityCriticalValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCustomActions:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityCustomActions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityCustomRotors:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='accessibilityCustomRotors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDecrementButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityDecrementButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDefaultButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityDefaultButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDisclosed:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityDisclosed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDisclosedByRow:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityDisclosedByRow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDisclosedRows:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityDisclosedRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDisclosureLevel:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='accessibilityDisclosureLevel' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityDocument:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityDocument' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityEdited:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityEdited' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityElement:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityElement' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityEnabled:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityExpanded:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityExpanded' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityExtrasMenuBar:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityExtrasMenuBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFilename:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityFilename' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFocused:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityFocused' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFocusedWindow:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityFocusedWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFrame:' type='v24@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8' type64='v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type='NSRect' index='0' name='accessibilityFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFrontmost:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityFrontmost' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityFullScreenButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityFullScreenButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityGrowArea:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityGrowArea' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHandles:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityHandles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHeader:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityHeader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHelp:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityHelp' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHidden:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityHidden' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHorizontalScrollBar:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityHorizontalScrollBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHorizontalUnitDescription:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityHorizontalUnitDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityHorizontalUnits:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSAccessibilityUnits' index='0' name='accessibilityHorizontalUnits' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityIdentifier:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityIdentifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityIncrementButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityIncrementButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityIndex:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='accessibilityIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityInsertionPointLineNumber:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='accessibilityInsertionPointLineNumber' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabelUIElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityLabelUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLabelValue:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='accessibilityLabelValue' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityLinkedUIElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityLinkedUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMain:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityMain' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMainWindow:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMainWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMarkerGroupUIElement:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMarkerGroupUIElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMarkerTypeDescription:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityMarkerTypeDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMarkerUIElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityMarkerUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMarkerValues:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMarkerValues' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMaxValue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMaxValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMenuBar:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMenuBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMinValue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMinValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMinimizeButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityMinimizeButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityMinimized:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityMinimized' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityModal:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityModal' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityNextContents:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityNextContents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityNumberOfCharacters:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='accessibilityNumberOfCharacters' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityOrderedByRow:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityOrderedByRow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityOrientation:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSAccessibilityOrientation' index='0' name='accessibilityOrientation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityOverflowButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityOverflowButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityParent:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityParent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityPlaceholderValue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityPlaceholderValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityPreviousContents:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityPreviousContents' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityProtectedContent:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityProtectedContent' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityProxy:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityProxy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRequired:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilityRequired' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRole:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAccessibilityRole _Nullable' index='0' name='accessibilityRole' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRoleDescription:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityRoleDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRowCount:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='accessibilityRowCount' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRowHeaderUIElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityRowHeaderUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRowIndexRange:' type='v16@0:4{_NSRange=II}8' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='accessibilityRowIndexRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRows:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityRulerMarkerType:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSAccessibilityRulerMarkerType' index='0' name='accessibilityRulerMarkerType' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySearchButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilitySearchButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySearchMenu:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilitySearchMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelected:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='accessibilitySelected' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedCells:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedChildren:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedChildren' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedColumns:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedColumns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedRows:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedText:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilitySelectedText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedTextRange:' type='v16@0:4{_NSRange=II}8' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='accessibilitySelectedTextRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySelectedTextRanges:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedTextRanges' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityServesAsTitleForUIElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityServesAsTitleForUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySharedCharacterRange:' type='v16@0:4{_NSRange=II}8' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='accessibilitySharedCharacterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySharedFocusElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySharedFocusElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySharedTextUIElements:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySharedTextUIElements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityShownMenu:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityShownMenu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySortDirection:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSAccessibilitySortDirection' index='0' name='accessibilitySortDirection' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySplitters:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySplitters' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilitySubrole:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAccessibilitySubrole _Nullable' index='0' name='accessibilitySubrole' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTabs:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityTabs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTitle:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityTitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTitleUIElement:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityTitleUIElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityToolbarButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityToolbarButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityTopLevelUIElement:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityTopLevelUIElement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityURL:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSURL * _Nullable' index='0' name='accessibilityURL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityUnitDescription:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityUnitDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityUnits:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSAccessibilityUnits' index='0' name='accessibilityUnits' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityValue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityValueDescription:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityValueDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVerticalScrollBar:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityVerticalScrollBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVerticalUnitDescription:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='accessibilityVerticalUnitDescription' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVerticalUnits:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSAccessibilityUnits' index='0' name='accessibilityVerticalUnits' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleCells:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityVisibleCells' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleCharacterRange:' type='v16@0:4{_NSRange=II}8' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='accessibilityVisibleCharacterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleChildren:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityVisibleChildren' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleColumns:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityVisibleColumns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityVisibleRows:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityVisibleRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityWarningValue:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityWarningValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityWindow:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityWindow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityWindows:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilityWindows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccessibilityZoomButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='accessibilityZoomButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityAdditions'>
<method selector='accessibilitySetOverrideValue:forAttribute:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='id _Nullable' index='0' name='value' type='@'/>
<arg declared_type='NSAccessibilityAttributeName _Nonnull' index='1' name='attribute' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityButton'>
<method selector='accessibilityLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityPerformPress' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityCheckBox'>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSNumber * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityContainsTransientUI'>
<method selector='accessibilityPerformShowAlternateUI' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformShowDefaultUI' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAccessibilityAlternateUIVisible' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityCustomRotorItemSearchDelegate'>
<method selector='rotor:resultForSearchParameters:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSAccessibilityCustomRotor * _Nonnull' index='0' name='rotor' type='@'/>
<arg declared_type='NSAccessibilityCustomRotorSearchParameters * _Nonnull' index='1' name='searchParameters' type='@'/>
<retval declared_type='NSAccessibilityCustomRotorItemResult * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityElement'>
<method selector='accessibilityFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@0:4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityIdentifier' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityParent' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isAccessibilityFocused' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityElementLoading'>
<method selector='accessibilityElementWithToken:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSAccessibilityLoadingToken _Nonnull' index='0' name='token' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='accessibilityRangeInTargetElementWithToken:' type='{_NSRange=II}12@0:4@8' type64='{_NSRange=QQ}24@0:8@16'>
<arg declared_type='NSAccessibilityLoadingToken _Nonnull' index='0' name='token' type='@'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityImage'>
<method selector='accessibilityLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityLayoutArea'>
<method selector='accessibilityChildren' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityFocusedUIElement' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='accessibilityLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='accessibilitySelectedChildren' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityLayoutItem'>
<method selector='setAccessibilityFrame:' type='v24@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8' type64='v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16'>
<arg declared_type='NSRect' index='0' name='accessibilityFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityNavigableStaticText'>
<method selector='accessibilityFrameForRange:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4{_NSRange=II}8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='accessibilityLineForIndex:' type='i12@0:4i8' type64='q24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='index' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityRangeForLine:' type='{_NSRange=II}12@0:4i8' type64='{_NSRange=QQ}24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='line' type='i' type64='q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='accessibilityStringForRange:' type='@16@0:4{_NSRange=II}8' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityProgressIndicator'>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSNumber * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityRadioButton'>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSNumber * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityRow'>
<method selector='accessibilityDisclosureLevel' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='accessibilityIndex' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilitySlider'>
<method selector='accessibilityLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityPerformDecrement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformIncrement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityStaticText'>
<method selector='accessibilityAttributedStringForRange:' type='@16@0:4{_NSRange=II}8' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleCharacterRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityStepper'>
<method selector='accessibilityLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityPerformDecrement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformIncrement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilitySwitch'>
<method selector='accessibilityPerformDecrement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityPerformIncrement' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='accessibilityValue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityTable'>
<method selector='accessibilityColumnHeaderUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityColumns' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityHeaderGroup' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityLabel' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='accessibilityRowHeaderUIElements' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityRows' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedCells' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedColumns' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilitySelectedRows' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleCells' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleColumns' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='accessibilityVisibleRows' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='setAccessibilitySelectedRows:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nullable' index='0' name='accessibilitySelectedRows' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSAlertDelegate'>
<method selector='alertShowHelp:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSAlert * _Nonnull' index='0' name='alert' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAnimatablePropertyContainer'>
<method selector='animationForKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSAnimatablePropertyKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='animations' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='animator' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='instancetype _Nonnull' type='@'/>
</method>
<method class_method='true' selector='defaultAnimationForKey:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSAnimatablePropertyKey _Nonnull' index='0' name='key' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setAnimations:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSDictionary * _Nonnull' index='0' name='animations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSAnimationDelegate'>
<method selector='animation:didReachProgressMark:' type='v16@0:4@8f12' type64='v28@0:8@16f24'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<arg declared_type='NSAnimationProgress' index='1' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animation:valueForProgress:' type='f16@0:4@8f12' type64='f28@0:8@16f24'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<arg declared_type='NSAnimationProgress' index='1' name='progress' type='f'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='animationDidEnd:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDidStop:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationShouldStart:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSAnimation * _Nonnull' index='0' name='animation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSAppearanceCustomization'>
<method selector='appearance' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAppearance * _Nullable' type='@'/>
</method>
<method selector='effectiveAppearance' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAppearance * _Nonnull' type='@'/>
</method>
<method selector='setAppearance:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSAppearance * _Nullable' index='0' name='appearance' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSApplicationDelegate'>
<method selector='application:continueUserActivity:restorationHandler:' type='B20@0:4@8@12@?16' type64='B40@0:8@16@24@?32'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSUserActivity * _Nonnull' index='1' name='userActivity' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='2' name='restorationHandler' type='@?'>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:didDecodeRestorableState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='app' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFailToContinueUserActivityWithType:error:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='userActivityType' type='@'/>
<arg declared_type='NSError * _Nonnull' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didReceiveRemoteNotification:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSData * _Nonnull' index='1' name='deviceToken' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:didUpdateUserActivity:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSUserActivity * _Nonnull' index='1' name='userActivity' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:openFile:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:openFileWithoutUI:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:openFiles:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='filenames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:openTempFile:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:openURLs:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='urls' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:printFile:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:printFiles:withSettings:showPrintPanels:' type='I24@0:4@8@12@16B20' type64='Q44@0:8@16@24@32B40'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='fileNames' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='printSettings' type='@'/>
<arg declared_type='BOOL' index='3' name='showPrintPanels' type='B'/>
<retval declared_type='NSApplicationPrintReply' type='I' type64='Q'/>
</method>
<method selector='application:userDidAcceptCloudKitShareWithMetadata:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='CKShareMetadata * _Nonnull' index='1' name='metadata' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willContinueUserActivityWithType:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='userActivityType' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='application:willEncodeRestorableState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='app' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='coder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='application:willPresentError:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='application' type='@'/>
<arg declared_type='NSError * _Nonnull' index='1' name='error' type='@'/>
<retval declared_type='NSError * _Nonnull' type='@'/>
</method>
<method selector='applicationDidBecomeActive:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidChangeOcclusionState:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidChangeScreenParameters:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidFinishLaunching:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidHide:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidResignActive:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidUnhide:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDidUpdate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationDockMenu:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='applicationOpenUntitledFile:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationShouldHandleReopen:hasVisibleWindows:' type='B16@0:4@8B12' type64='B28@0:8@16B24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationShouldOpenUntitledFile:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationShouldTerminate:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='NSApplicationTerminateReply' type='I' type64='Q'/>
</method>
<method selector='applicationShouldTerminateAfterLastWindowClosed:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationWillBecomeActive:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillFinishLaunching:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillHide:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillResignActive:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillTerminate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillUnhide:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillUpdate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSApplicationScriptingDelegation'>
<method selector='application:delegateHandlesKey:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSApplication * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSBrowserDelegate'>
<method selector='browser:acceptDrop:atRow:column:dropOperation:' type='B28@0:4@8@12i16i20I24' type64='B56@0:8@16@24q32q40Q48'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='column' type='i' type64='q'/>
<arg declared_type='NSBrowserDropOperation' index='4' name='dropOperation' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:' type='B24@0:4@8@12i16@20' type64='B48@0:8@16@24q32@40'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:child:ofItem:' type='@20@0:4@8i12@16' type64='@40@0:8@16q24@32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='browser:createRowsForColumn:inMatrix:' type='v20@0:4@8i12@16' type64='v40@0:8@16q24@32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<arg declared_type='NSMatrix * _Nonnull' index='2' name='matrix' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:didChangeLastColumn:toColumn:' type='v20@0:4@8i12i16' type64='v40@0:8@16q24q32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='oldLastColumn' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:' type='@28@0:4@8@12i16@20^{_NSPoint=ff}24' type64='@56@0:8@16@24q32@40^{CGPoint=dd}48'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='4' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='browser:headerViewControllerForItem:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='browser:heightOfRow:inColumn:' type='f20@0:4@8i12i16' type64='d40@0:8@16q24q32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='columnIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='browser:isColumnValid:' type='B16@0:4@8i12' type64='B32@0:8@16q24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:isLeafItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:' type='@24@0:4@8@12@16i20' type64='@48@0:8@16@24@32q40'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropDestination' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='2' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='3' name='column' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:' type='i28@0:4@8i12i16i20@24' type64='q56@0:8@16q24q32q40@48'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='startRow' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='endRow' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='column' type='i' type64='q'/>
<arg declared_type='NSString * _Nullable' index='4' name='searchString' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='browser:numberOfChildrenOfItem:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='browser:numberOfRowsInColumn:' type='i16@0:4@8i12' type64='q32@0:8@16q24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='browser:objectValueForItem:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='browser:previewViewControllerForLeafItem:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='NSViewController * _Nullable' type='@'/>
</method>
<method selector='browser:selectCellWithString:inColumn:' type='B20@0:4@8@12i16' type64='B40@0:8@16@24q32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='title' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:selectRow:inColumn:' type='B20@0:4@8i12i16' type64='B40@0:8@16q24q32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:selectionIndexesForProposedSelection:inColumn:' type='@20@0:4@8@12i16' type64='@40@0:8@16@24q32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='browser:setObjectValue:forItem:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:shouldEditItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:shouldShowCellExpansionForRow:column:' type='B20@0:4@8i12i16' type64='B40@0:8@16q24q32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:shouldSizeColumn:forUserResize:toWidth:' type='f24@0:4@8i12B16f20' type64='d44@0:8@16q24B32d36'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<arg declared_type='BOOL' index='2' name='forUserResize' type='B'/>
<arg declared_type='CGFloat' index='3' name='suggestedWidth' type='f' type64='d'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='searchString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browser:sizeToFitWidthOfColumn:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='browser:titleOfColumn:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='browser:typeSelectStringForRow:inColumn:' type='@20@0:4@8i12i16' type64='@40@0:8@16q24q32'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='browser:validateDrop:proposedRow:column:dropOperation:' type='I28@0:4@8@12^i16^i20^I24' type64='Q56@0:8@16@24^q32^q40^Q48'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='NSInteger * _Nonnull' index='2' name='row' type='^i' type64='^q'/>
<arg declared_type='NSInteger * _Nonnull' index='3' name='column' type='^i' type64='^q'/>
<arg declared_type='NSBrowserDropOperation * _Nonnull' index='4' name='dropOperation' type='^I' type64='^Q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='browser:willDisplayCell:atRow:column:' type='v24@0:4@8@12i16i20' type64='v48@0:8@16@24q32q40'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<arg declared_type='NSInteger' index='3' name='column' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:' type='B24@0:4@8@12i16@20' type64='B48@0:8@16@24q32@40'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type='@'/>
<arg declared_type='NSInteger' index='2' name='column' type='i' type64='q'/>
<arg declared_type='NSPasteboard * _Nonnull' index='3' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='browserColumnConfigurationDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browserDidScroll:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='browserWillScroll:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rootItemForBrowser:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSBrowser * _Nonnull' index='0' name='browser' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSCandidateListTouchBarItemDelegate'>
<method selector='candidateListTouchBarItem:beginSelectingCandidateAtIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='candidateListTouchBarItem:changeSelectionFromCandidateAtIndex:toIndex:' type='v20@0:4@8i12i16' type64='v40@0:8@16q24q32'>
<arg declared_type='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='previousIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='candidateListTouchBarItem:changedCandidateListVisibility:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type='@'/>
<arg declared_type='BOOL' index='1' name='isVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='candidateListTouchBarItem:endSelectingCandidateAtIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='NSCandidateListTouchBarItem * _Nonnull' index='0' name='anItem' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSChangeSpelling'>
<method selector='changeSpelling:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSCloudSharingServiceDelegate'>
<method selector='optionsForSharingService:shareProvider:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='cloudKitSharingService' type='@'/>
<arg declared_type='NSItemProvider * _Nonnull' index='1' name='provider' type='@'/>
<retval declared_type='NSCloudKitSharingServiceOptions' type='I' type64='Q'/>
</method>
<method selector='sharingService:didCompleteForItems:error:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSError * _Nullable' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:didSaveShare:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='CKShare * _Nonnull' index='1' name='share' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:didStopSharing:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='CKShare * _Nonnull' index='1' name='share' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSCloudSharingValidation'>
<method selector='cloudShareForUserInterfaceItem:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='CKShare * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewDataSource'>
<method selector='collectionView:itemForRepresentedObjectAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='NSCollectionViewItem * _Nonnull' type='@'/>
</method>
<method selector='collectionView:numberOfItemsInSection:' type='i16@0:4@8i12' type64='q32@0:8@16q24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSInteger' index='1' name='section' type='i' type64='q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='collectionView:viewForSupplementaryElementOfKind:atIndexPath:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='1' name='kind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='NSView * _Nonnull' type='@'/>
</method>
<method selector='numberOfSectionsInCollectionView:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewDelegate'>
<method selector='collectionView:acceptDrop:index:dropOperation:' type='B24@0:4@8@12i16i20' type64='B48@0:8@16@24q32q40'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<arg declared_type='NSCollectionViewDropOperation' index='3' name='dropOperation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:acceptDrop:indexPath:dropOperation:' type='B24@0:4@8@12@16i20' type64='B48@0:8@16@24@32q40'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<arg declared_type='NSCollectionViewDropOperation' index='3' name='dropOperation' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexPaths:withEvent:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:canDragItemsAtIndexes:withEvent:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='indexes' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:didChangeItemsAtIndexPaths:toHighlightState:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSCollectionViewItemHighlightState' index='2' name='highlightState' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didDeselectItemsAtIndexPaths:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='2' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='3' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:didSelectItemsAtIndexPaths:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:' type='@24@0:4@8@12@16^{_NSPoint=ff}20' type64='@48@0:8@16@24@32^{CGPoint=dd}40'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexes:withEvent:offset:' type='@24@0:4@8@12@16^{_NSPoint=ff}20' type64='@48@0:8@16@24@32^{CGPoint=dd}40'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='indexes' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<arg declared_type='NSPointPointer _Nonnull' index='3' name='dragImageOffset' type='^{_NSPoint=ff}' type64='^{CGPoint=dd}'/>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='collectionView:draggingSession:endedAtPoint:dragOperation:' type='v28@0:4@8@12{_NSPoint=ff}16I24' type64='v56@0:8@16@24{CGPoint=dd}32Q48'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='3' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:' type='v28@0:4@8@12{_NSPoint=ff}16@24' type64='v56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSSet * _Nonnull' index='3' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:' type='v28@0:4@8@12{_NSPoint=ff}16@24' type64='v56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSIndexSet * _Nonnull' index='3' name='indexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropURL' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='2' name='indexPaths' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropURL' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='2' name='indexes' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndex:' type='@16@0:4@8I12' type64='@32@0:8@16Q24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndexPath:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='1' name='indexPath' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='collectionView:shouldChangeItemsAtIndexPaths:toHighlightState:' type='@20@0:4@8@12i16' type64='@40@0:8@16@24q32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSCollectionViewItemHighlightState' index='2' name='highlightState' type='i' type64='q'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='collectionView:shouldDeselectItemsAtIndexPaths:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='collectionView:shouldSelectItemsAtIndexPaths:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='collectionView:transitionLayoutForOldLayout:newLayout:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='fromLayout' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='2' name='toLayout' type='@'/>
<retval declared_type='NSCollectionViewTransitionLayout * _Nonnull' type='@'/>
</method>
<method selector='collectionView:updateDraggingItemsForDrag:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:validateDrop:proposedIndex:dropOperation:' type='I24@0:4@8@12^i16^i20' type64='Q48@0:8@16@24^q32^q40'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<arg declared_type='NSInteger * _Nonnull' index='2' name='proposedDropIndex' type='^i' type64='^q'/>
<arg declared_type='NSCollectionViewDropOperation * _Nonnull' index='3' name='proposedDropOperation' type='^i' type64='^q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='collectionView:validateDrop:proposedIndexPath:dropOperation:' type='I24@0:4@8@12^@16^i20' type64='Q48@0:8@16@24^@32^q40'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull * _Nonnull' index='2' name='proposedDropIndexPath' type='^@'/>
<arg declared_type='NSCollectionViewDropOperation * _Nonnull' index='3' name='proposedDropOperation' type='^i' type64='^q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<arg declared_type='NSCollectionViewSupplementaryElementKind _Nonnull' index='2' name='elementKind' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='3' name='indexPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:writeItemsAtIndexPaths:toPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSSet * _Nonnull' index='1' name='indexPaths' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collectionView:writeItemsAtIndexes:toPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='indexes' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewDelegateFlowLayout'>
<method selector='collectionView:layout:insetForSectionAtIndex:' type='{NSEdgeInsets=ffff}20@0:4@8@12i16' type64='{NSEdgeInsets=dddd}40@0:8@16@24q32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='NSEdgeInsets' type='{NSEdgeInsets=ffff}' type64='{NSEdgeInsets=dddd}'/>
</method>
<method selector='collectionView:layout:minimumInteritemSpacingForSectionAtIndex:' type='f20@0:4@8@12i16' type64='d40@0:8@16@24q32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='collectionView:layout:minimumLineSpacingForSectionAtIndex:' type='f20@0:4@8@12i16' type64='d40@0:8@16@24q32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='collectionView:layout:referenceSizeForFooterInSection:' type='{_NSSize=ff}20@0:4@8@12i16' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:referenceSizeForHeaderInSection:' type='{_NSSize=ff}20@0:4@8@12i16' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSInteger' index='2' name='section' type='i' type64='q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='collectionView:layout:sizeForItemAtIndexPath:' type='{_NSSize=ff}20@0:4@8@12@16' type64='{CGSize=dd}40@0:8@16@24@32'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='collectionViewLayout' type='@'/>
<arg declared_type='NSIndexPath * _Nonnull' index='2' name='indexPath' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewElement'>
<method selector='applyLayoutAttributes:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didTransitionFromLayout:toLayout:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preferredLayoutAttributesFittingAttributes:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSCollectionViewLayoutAttributes * _Nonnull' index='0' name='layoutAttributes' type='@'/>
<retval declared_type='NSCollectionViewLayoutAttributes * _Nonnull' type='@'/>
</method>
<method selector='prepareForReuse' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='willTransitionFromLayout:toLayout:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='0' name='oldLayout' type='@'/>
<arg declared_type='NSCollectionViewLayout * _Nonnull' index='1' name='newLayout' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewPrefetching'>
<method selector='collectionView:cancelPrefetchingForItemsAtIndexPaths:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='collectionView:prefetchItemsAtIndexPaths:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSCollectionView * _Nonnull' index='0' name='collectionView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='indexPaths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewSectionHeaderView'>
<method selector='sectionCollapseButton' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSButton * _Nullable' type='@'/>
</method>
<method selector='setSectionCollapseButton:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSButton * _Nullable' index='0' name='sectionCollapseButton' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPanelResponderMethod'>
<method selector='changeColor:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPickingCustom'>
<method selector='currentMode' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSColorPanelMode' type='i' type64='q'/>
</method>
<method selector='provideNewView:' type='@12@0:4B8' type64='@20@0:8B16'>
<arg declared_type='BOOL' index='0' name='initialRequest' type='B'/>
<retval declared_type='NSView * _Nonnull' type='@'/>
</method>
<method selector='setColor:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSColor * _Nonnull' index='0' name='newColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportsMode:' type='B12@0:4i8' type64='B24@0:8q16'>
<arg declared_type='NSColorPanelMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPickingDefault'>
<method selector='alphaControlAddedOrRemoved:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attachColorList:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSColorList * _Nonnull' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='buttonToolTip' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='detachColorList:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSColorList * _Nonnull' index='0' name='colorList' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPickerMask:colorPanel:' type='@16@0:4I8@12' type64='@32@0:8Q16@24'>
<arg declared_type='NSUInteger' index='0' name='mask' type='I' type64='Q'/>
<arg declared_type='NSColorPanel * _Nonnull' index='1' name='owningColorPanel' type='@'/>
<retval declared_type='instancetype _Nullable' type='@'/>
</method>
<method selector='insertNewButtonImage:in:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSImage * _Nonnull' index='0' name='newButtonImage' type='@'/>
<arg declared_type='NSButtonCell * _Nonnull' index='1' name='buttonCell' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='minContentSize' type='{_NSSize=ff}8@0:4' type64='{CGSize=dd}16@0:8'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='provideNewButtonImage' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSImage * _Nonnull' type='@'/>
</method>
<method selector='setMode:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSColorPanelMode' index='0' name='mode' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewSizeChanged:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxCellDataSource'>
<method selector='comboBoxCell:completedString:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='uncompletedString' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='comboBoxCell:indexOfItemWithStringValue:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='comboBoxCell:objectValueForItemAtIndex:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='numberOfItemsInComboBoxCell:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='NSComboBoxCell * _Nonnull' index='0' name='comboBoxCell' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxDataSource'>
<method selector='comboBox:completedString:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSComboBox * _Nonnull' index='0' name='comboBox' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='comboBox:indexOfItemWithStringValue:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='NSComboBox * _Nonnull' index='0' name='comboBox' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='comboBox:objectValueForItemAtIndex:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='NSComboBox * _Nonnull' index='0' name='comboBox' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='numberOfItemsInComboBox:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='NSComboBox * _Nonnull' index='0' name='comboBox' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxDelegate'>
<method selector='comboBoxSelectionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='comboBoxSelectionIsChanging:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='comboBoxWillDismiss:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='comboBoxWillPopUp:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSControlSubclassNotifications'>
<method selector='controlTextDidBeginEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='controlTextDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='controlTextDidEndEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='obj' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSControlTextEditingDelegate'>
<method selector='control:didFailToFormatString:errorDescription:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='error' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='control:didFailToValidatePartialString:errorDescription:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='control:isValidObject:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='id _Nullable' index='1' name='obj' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='control:textShouldBeginEditing:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSText * _Nonnull' index='1' name='fieldEditor' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='control:textShouldEndEditing:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSText * _Nonnull' index='1' name='fieldEditor' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:' type='@32@0:4@8@12@16{_NSRange=II}20^i28' type64='@64@0:8@16@24@32{_NSRange=QQ}40^q56'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='words' type='@'/>
<arg declared_type='NSRange' index='3' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger * _Nonnull' index='4' name='index' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='control:textView:doCommandBySelector:' type='B20@0:4@8@12:16' type64='B40@0:8@16@24:32'>
<arg declared_type='NSControl * _Nonnull' index='0' name='control' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='SEL _Nonnull' index='2' name='commandSelector' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSDatePickerCellDelegate'>
<method selector='datePickerCell:validateProposedDateValue:timeInterval:' type='v20@0:4@8^@12^d16' type64='v40@0:8@16^@24^d32'>
<arg declared_type='NSDatePickerCell * _Nonnull' index='0' name='datePickerCell' type='@'/>
<arg declared_type='NSDate * _Nonnull * _Nonnull' index='1' name='proposedDateValue' type='^@'/>
<arg declared_type='NSTimeInterval * _Nullable' index='2' name='proposedTimeInterval' type='^d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedTextStorageDelegateInterface'>
<method selector='textStorageDidProcessEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStorageWillProcessEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSDockTilePlugIn'>
<method selector='dockMenu' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='setDockTile:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSDockTile * _Nullable' index='0' name='dockTile' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingDestination'>
<method selector='concludeDragOperation:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingEnded:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingEntered:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='draggingExited:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingUpdated:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='performDragOperation:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareForDragOperation:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateDraggingItemsForDrag:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wantsPeriodicDraggingUpdates' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingInfo'>
<method selector='animatesToDestination' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='draggedImage' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='draggedImageLocation' type='{_NSPoint=ff}8@0:4' type64='{CGPoint=dd}16@0:8'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingDestinationWindow' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='draggingFormation' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSDraggingFormation' type='i' type64='q'/>
</method>
<method selector='draggingLocation' type='{_NSPoint=ff}8@0:4' type64='{CGPoint=dd}16@0:8'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='draggingPasteboard' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSPasteboard * _Nonnull' type='@'/>
</method>
<method selector='draggingSequenceNumber' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='draggingSource' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='draggingSourceOperationMask' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:' type='v28@0:4I8@12@16@20@?24' type64='v56@0:8Q16@24@32@40@?48'>
<arg declared_type='NSDraggingItemEnumerationOptions' index='0' name='enumOpts' type='I' type64='Q'/>
<arg declared_type='NSView * _Nullable' index='1' name='view' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='classArray' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='searchOptions' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSDraggingItem * _Nonnull, NSInteger, BOOL * _Nonnull)' function_pointer='true' index='4' name='block' type='@?'>
<arg declared_type='NSDraggingItem * _Nonnull' type='@'/>
<arg declared_type='NSInteger' type='i' type64='q'/>
<arg declared_type='BOOL * _Nonnull' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='namesOfPromisedFilesDroppedAtDestination:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSURL * _Nonnull' index='0' name='dropDestination' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='numberOfValidItemsForDrop' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='resetSpringLoading' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimatesToDestination:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='animatesToDestination' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingFormation:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSDraggingFormation' index='0' name='draggingFormation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfValidItemsForDrop:' type='v12@0:4i8' type64='v24@0:8q16'>
<arg declared_type='NSInteger' index='0' name='numberOfValidItemsForDrop' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='slideDraggedImageTo:' type='v16@0:4{_NSPoint=ff}8' type64='v32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingHighlight' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSSpringLoadingHighlight' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingSource'>
<method selector='draggingSession:endedAtPoint:operation:' type='v24@0:4@8{_NSPoint=ff}12I20' type64='v48@0:8@16{CGPoint=dd}24Q40'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingSession:movedToPoint:' type='v20@0:4@8{_NSPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingSession:sourceOperationMaskForDraggingContext:' type='I16@0:4@8i12' type64='Q32@0:8@16q24'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSDraggingContext' index='1' name='context' type='i' type64='q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='draggingSession:willBeginAtPoint:' type='v20@0:4@8{_NSPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ignoreModifierKeysForDraggingSession:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSDraggingSession * _Nonnull' index='0' name='session' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingSourceDeprecated'>
<method selector='draggedImage:beganAt:' type='v20@0:4@8{_NSPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggedImage:endedAt:deposited:' type='v24@0:4@8{_NSPoint=ff}12B20' type64='v44@0:8@16{CGPoint=dd}24B40'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggedImage:endedAt:operation:' type='v24@0:4@8{_NSPoint=ff}12I20' type64='v48@0:8@16{CGPoint=dd}24Q40'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='2' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggedImage:movedTo:' type='v20@0:4@8{_NSPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type='NSImage * _Null_unspecified' index='0' name='image' type='@'/>
<arg declared_type='NSPoint' index='1' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='draggingSourceOperationMaskForLocal:' type='I12@0:4B8' type64='Q20@0:8B16'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='ignoreModifierKeysWhileDragging' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='namesOfPromisedFilesDroppedAtDestination:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSURL * _Nonnull' index='0' name='dropDestination' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSDrawerDelegate'>
<method selector='drawerDidClose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerDidOpen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerShouldClose:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSDrawer * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawerShouldOpen:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSDrawer * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawerWillClose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerWillOpen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawerWillResizeContents:toSize:' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12' type64='{CGSize=dd}40@0:8@16{CGSize=dd}24'>
<arg declared_type='NSDrawer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSSize' index='1' name='contentSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSEditor'>
<method selector='commitEditing' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitEditingAndReturnError:' type='B12@0:4^@8' type64='B24@0:8^@16'>
<arg declared_type='NSError * _Nullable * _Nullable' index='0' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:' type='v20@0:4@8:12^v16' type64='v40@0:8@16:24^v32'>
<arg declared_type='id _Nullable' index='0' name='delegate' type='@'/>
<arg declared_type='SEL _Nullable' index='1' name='didCommitSelector' type=':'/>
<arg declared_type='void * _Nullable' index='2' name='contextInfo' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='discardEditing' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSEditorRegistration'>
<method selector='objectDidBeginEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='editor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='objectDidEndEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='editor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSFilePromiseProviderDelegate'>
<method selector='filePromiseProvider:fileNameForType:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='fileType' type='@'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='filePromiseProvider:writePromiseToURL:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='operationQueueForFilePromiseProvider:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSFilePromiseProvider * _Nonnull' index='0' name='filePromiseProvider' type='@'/>
<retval declared_type='NSOperationQueue * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontManagerDelegate'>
<method selector='fontManager:willIncludeFont:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='fontName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontManagerResponderMethod'>
<method selector='changeFont:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontPanelValidationAdditions'>
<method selector='validModesForFontPanel:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='NSFontPanel * _Nonnull' index='0' name='fontPanel' type='@'/>
<retval declared_type='NSFontPanelModeMask' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSGestureRecognizerDelegate'>
<method selector='gestureRecognizer:shouldAttemptToRecognizeWithEvent:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldReceiveTouch:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSTouch * _Nonnull' index='1' name='touch' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizer:shouldRequireFailureOfGestureRecognizer:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='1' name='otherGestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='gestureRecognizerShouldBegin:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSGestureRecognizer * _Nonnull' index='0' name='gestureRecognizer' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSGlyphStorage'>
<method selector='attributedString' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:' type='v24@0:4r^I8I12I16I20' type64='v48@0:8r^I16Q24Q32Q40'>
<arg const='true' declared_type='NSGlyph * _Nonnull' index='0' name='glyphs' type='^I'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutOptions' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setIntAttribute:value:forGlyphAtIndex:' type='v20@0:4i8i12I16' type64='v40@0:8q16q24Q32'>
<arg declared_type='NSInteger' index='0' name='attributeTag' type='i' type64='q'/>
<arg declared_type='NSInteger' index='1' name='val' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='2' name='glyphIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSHapticFeedbackPerformer'>
<method selector='performFeedbackPattern:performanceTime:' type='v16@0:4i8I12' type64='v32@0:8q16Q24'>
<arg declared_type='NSHapticFeedbackPattern' index='0' name='pattern' type='i' type64='q'/>
<arg declared_type='NSHapticFeedbackPerformanceTime' index='1' name='performanceTime' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSIgnoreMisspelledWords'>
<method selector='ignoreSpelling:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSImageDelegate'>
<method selector='image:didLoadPartOfRepresentation:withValidRows:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSImageRep * _Nonnull' index='1' name='rep' type='@'/>
<arg declared_type='NSInteger' index='2' name='rows' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image:didLoadRepresentation:withStatus:' type='v20@0:4@8@12I16' type64='v40@0:8@16@24Q32'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSImageRep * _Nonnull' index='1' name='rep' type='@'/>
<arg declared_type='NSImageLoadStatus' index='2' name='status' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image:didLoadRepresentationHeader:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSImageRep * _Nonnull' index='1' name='rep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image:willLoadRepresentation:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSImage * _Nonnull' index='0' name='image' type='@'/>
<arg declared_type='NSImageRep * _Nonnull' index='1' name='rep' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageDidNotDraw:inRect:' type='@28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' type64='@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type='NSImage * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSRect' index='1' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSInputServerMouseTracker'>
<method selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:' type='B28@0:4I8{_NSPoint=ff}12I20@24' type64='B56@0:8Q16{CGPoint=dd}24Q40@48'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='id _Null_unspecified' index='3' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:' type='B28@0:4I8{_NSPoint=ff}12I20@24' type64='B56@0:8Q16{CGPoint=dd}24Q40@48'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='id _Null_unspecified' index='3' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:' type='v28@0:4I8{_NSPoint=ff}12I20@24' type64='v56@0:8Q16{CGPoint=dd}24Q40@48'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSPoint' index='1' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='2' name='flags' type='I' type64='Q'/>
<arg declared_type='id _Null_unspecified' index='3' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSInputServiceProvider'>
<method selector='activeConversationChanged:toNewConversation:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='id _Null_unspecified' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='newConversation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='activeConversationWillChange:fromOldConversation:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='id _Null_unspecified' index='0' name='sender' type='@'/>
<arg declared_type='NSInteger' index='1' name='oldConversation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canBeDisabled' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='doCommandBySelector:client:' type='v16@0:4:8@12' type64='v32@0:8:16@24'>
<arg declared_type='SEL _Null_unspecified' index='0' name='selector' type=':'/>
<arg declared_type='id _Null_unspecified' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputClientBecomeActive:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputClientDisabled:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputClientEnabled:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputClientResignActive:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertText:client:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='id _Null_unspecified' index='0' name='string' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='markedTextAbandoned:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='markedTextSelectionChanged:client:' type='v20@0:4{_NSRange=II}8@16' type64='v40@0:8{_NSRange=QQ}16@32'>
<arg declared_type='NSRange' index='0' name='newSel' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='id _Null_unspecified' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='terminate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wantsToDelayTextChangeNotifications' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToHandleMouseEvents' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToInterpretAllKeystrokes' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueBindingCreation'>
<method selector='bind:toObject:withKeyPath:options:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='observable' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='keyPath' type='@'/>
<arg declared_type='NSDictionary * _Nullable' index='3' name='options' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='exposeBinding:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='exposedBindings' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='infoForBinding:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='optionDescriptionsForBinding:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='unbind:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueClassForBinding:' type='#12@0:4@8' type64='#24@0:8@16'>
<arg declared_type='NSBindingName _Nonnull' index='0' name='binding' type='@'/>
<retval declared_type='Class _Nullable' type='#'/>
</method>
</informal_protocol>
<informal_protocol name='NSLayerDelegateContentsScaleUpdating'>
<method selector='layer:shouldInheritContentsScale:fromWindow:' type='B20@0:4@8f12@16' type64='B40@0:8@16d24@32'>
<arg declared_type='CALayer * _Nonnull' index='0' name='layer' type='@'/>
<arg declared_type='CGFloat' index='1' name='newScale' type='f' type64='d'/>
<arg declared_type='NSWindow * _Nonnull' index='2' name='window' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSLayoutManagerDelegate'>
<method selector='layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}48@0:4@8I12@16{_NSRect={_NSPoint=ff}{_NSSize=ff}}20{_NSPoint=ff}36I44' type64='{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16Q24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGPoint=dd}72Q88'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSTextContainer * _Nonnull' index='2' name='textContainer' type='@'/>
<arg declared_type='NSRect' index='3' name='proposedRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' index='4' name='glyphPosition' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='5' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<arg declared_type='BOOL' index='2' name='layoutFinishedFlag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:' type='f32@0:4@8I12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:' type='f32@0:4@8I12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:' type='f32@0:4@8I12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='d64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='glyphIndex' type='I' type64='Q'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:' type='B16@0:4@8I12' type64='B32@0:8@16Q24'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:' type='B16@0:4@8I12' type64='B32@0:8@16Q24'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSUInteger' index='1' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:' type='I36@0:4@8r^S12r^i16r^I20@24{_NSRange=II}28' type64='Q72@0:8@16r^S24r^q32r^Q40@48{_NSRange=QQ}56'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg const='true' declared_type='CGGlyph * _Nonnull' index='1' name='glyphs' type='^S'/>
<arg const='true' declared_type='NSGlyphProperty * _Nonnull' index='2' name='props' type='^i' type64='^q'/>
<arg const='true' declared_type='NSUInteger * _Nonnull' index='3' name='charIndexes' type='^I' type64='^Q'/>
<arg declared_type='NSFont * _Nonnull' index='4' name='aFont' type='@'/>
<arg declared_type='NSRange' index='5' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:' type='B36@0:4@8N^{_NSRect={_NSPoint=ff}{_NSSize=ff}}12N^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16N^f20@24{_NSRange=II}28' type64='B72@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^{CGRect={CGPoint=dd}{CGSize=dd}}32N^d40@48{_NSRange=QQ}56'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSRect * _Nonnull' index='1' name='lineFragmentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect * _Nonnull' index='2' name='lineFragmentUsedRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGFloat * _Nonnull' index='3' name='baselineOffset' type='^f' type64='^d'/>
<arg declared_type='NSTextContainer * _Nonnull' index='4' name='textContainer' type='@'/>
<arg declared_type='NSRange' index='5' name='glyphRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layoutManager:shouldUseAction:forControlCharacterAtIndex:' type='i20@0:4@8i12I16' type64='q40@0:8@16q24Q32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSControlCharacterAction' index='1' name='action' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSControlCharacterAction' type='i' type64='q'/>
</method>
<method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:' type='@28@0:4@8@12B16I20^{_NSRange=II}24' type64='@52@0:8@16@24B32Q36^{_NSRange=QQ}44'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='attrs' type='@'/>
<arg declared_type='BOOL' index='2' name='toScreen' type='B'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nullable' index='4' name='effectiveCharRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='layoutManager:textContainer:didChangeGeometryFromSize:' type='v24@0:4@8@12{_NSSize=ff}16' type64='v48@0:8@16@24{CGSize=dd}32'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='layoutManager' type='@'/>
<arg declared_type='NSTextContainer * _Nonnull' index='1' name='textContainer' type='@'/>
<arg declared_type='NSSize' index='2' name='oldSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSLayoutManager * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSMenuDelegate'>
<method selector='confinementRectForMenu:onScreen:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8@12' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSScreen * _Nullable' index='1' name='screen' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='menu:updateItem:atIndex:shouldCancel:' type='B24@0:4@8@12i16B20' type64='B44@0:8@16@24q32B40'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSMenuItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<arg declared_type='BOOL' index='3' name='shouldCancel' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menu:willHighlightItem:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSMenuItem * _Nullable' index='1' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='menuDidClose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='menuHasKeyEquivalent:forEvent:target:action:' type='B24@0:4@8@12^@16^:20' type64='B48@0:8@16@24^@32^:40'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='id _Nullable * _Nonnull' index='2' name='target' type='^@'/>
<arg declared_type='SEL _Nullable * _Nonnull' index='3' name='action' type='^:'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menuNeedsUpdate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='menuWillOpen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfItemsInMenu:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='NSMenu * _Nonnull' index='0' name='menu' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSMenuValidation'>
<method selector='validateMenuItem:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSMenuItem * _Nonnull' index='0' name='menuItem' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSNibAwaking'>
<method selector='awakeFromNib' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForInterfaceBuilder' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSOpenSavePanelDelegate'>
<method selector='panel:didChangeToDirectoryURL:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSURL * _Nullable' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panel:shouldEnableURL:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panel:userEnteredFilename:confirmed:' type='@20@0:4@8@12B16' type64='@36@0:8@16@24B32'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<arg declared_type='BOOL' index='2' name='okFlag' type='B'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='panel:validateURL:error:' type='B20@0:4@8@12^@16' type64='B40@0:8@16@24^@32'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panel:willExpand:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='BOOL' index='1' name='expanding' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panelSelectionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSOutlineViewDataSource'>
<method selector='outlineView:acceptDrop:item:childIndex:' type='B24@0:4@8@12@16i20' type64='B48@0:8@16@24@32q40'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<arg declared_type='NSInteger' index='3' name='index' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:child:ofItem:' type='@20@0:4@8i12@16' type64='@40@0:8@16q24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='outlineView:draggingSession:endedAtPoint:operation:' type='v28@0:4@8@12{_NSPoint=ff}16I24' type64='v56@0:8@16@24{CGPoint=dd}32Q48'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='3' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:draggingSession:willBeginAtPoint:forItems:' type='v28@0:4@8@12{_NSPoint=ff}16@24' type64='v56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSArray * _Nonnull' index='3' name='draggedItems' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:isItemExpandable:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:itemForPersistentObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropDestination' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='items' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='outlineView:numberOfChildrenOfItem:' type='i16@0:4@8@12' type64='q32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='outlineView:objectValueForTableColumn:byItem:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:pasteboardWriterForItem:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:persistentObjectForItem:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nullable' index='1' name='item' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:setObjectValue:forTableColumn:byItem:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='id _Nullable' index='3' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:sortDescriptorsDidChange:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='oldDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:updateDraggingItemsForDrag:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:' type='I24@0:4@8@12@16i20' type64='Q48@0:8@16@24@32q40'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='id _Nullable' index='2' name='item' type='@'/>
<arg declared_type='NSInteger' index='3' name='index' type='i' type64='q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='outlineView:writeItems:toPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSOutlineViewDelegate'>
<method selector='outlineView:dataCellForTableColumn:item:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='NSCell * _Nullable' type='@'/>
</method>
<method selector='outlineView:didAddRowView:forRow:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableRowView * _Nonnull' index='1' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:didClickTableColumn:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:didDragTableColumn:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:didRemoveRowView:forRow:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableRowView * _Nonnull' index='1' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:heightOfRowByItem:' type='f16@0:4@8@12' type64='d32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='outlineView:isGroupItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:mouseDownInHeaderOfTableColumn:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:' type='@24@0:4@8@12@16@20' type64='@48@0:8@16@24@32@40'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='startItem' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='endItem' type='@'/>
<arg declared_type='NSString * _Nonnull' index='3' name='searchString' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='outlineView:rowViewForItem:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='NSTableRowView * _Nullable' type='@'/>
</method>
<method selector='outlineView:selectionIndexesForProposedSelection:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type='@'/>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='outlineView:shouldCollapseItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldEditTableColumn:item:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldExpandItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldReorderColumn:toColumn:' type='B20@0:4@8i12i16' type64='B40@0:8@16q24q32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='newColumnIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldSelectItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldSelectTableColumn:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldShowCellExpansionForTableColumn:item:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldShowOutlineCellForItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldTrackCell:forTableColumn:item:' type='B24@0:4@8@12@16@20' type64='B48@0:8@16@24@32@40'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='3' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='searchString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outlineView:sizeToFitWidthOfColumn:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:' type='@36@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@20@24{_NSPoint=ff}28' type64='@72@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32@40@48{CGPoint=dd}56'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRectPointer _Nonnull' index='2' name='rect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTableColumn * _Nullable' index='3' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='4' name='item' type='@'/>
<arg declared_type='NSPoint' index='5' name='mouseLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='outlineView:typeSelectStringForTableColumn:item:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='outlineView:viewForTableColumn:item:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='item' type='@'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='outlineView:willDisplayCell:forTableColumn:item:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='3' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='id _Nonnull' index='3' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewColumnDidMove:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewColumnDidResize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewItemDidCollapse:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewItemDidExpand:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewItemWillCollapse:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewItemWillExpand:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewSelectionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='outlineViewSelectionIsChanging:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectionShouldChangeInOutlineView:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSOutlineView * _Nonnull' index='0' name='outlineView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSPageControllerDelegate'>
<method selector='pageController:didTransitionToObject:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageController:frameForObject:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8@12' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='pageController:identifierForObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='object' type='@'/>
<retval declared_type='NSPageControllerObjectIdentifier _Nonnull' type='@'/>
</method>
<method selector='pageController:prepareViewController:withObject:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='NSViewController * _Nonnull' index='1' name='viewController' type='@'/>
<arg declared_type='id _Nullable' index='2' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageController:viewControllerForIdentifier:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<arg declared_type='NSPageControllerObjectIdentifier _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='NSViewController * _Nonnull' type='@'/>
</method>
<method selector='pageControllerDidEndLiveTransition:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pageControllerWillStartLiveTransition:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSPageController * _Nonnull' index='0' name='pageController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardItemDataProvider'>
<method selector='pasteboard:item:provideDataForType:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSPasteboard * _Nullable' index='0' name='pasteboard' type='@'/>
<arg declared_type='NSPasteboardItem * _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='2' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteboardFinishedWithDataProvider:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardOwner'>
<method selector='pasteboard:provideDataForType:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pasteboardChangedOwner:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardReading'>
<method selector='initWithPasteboardPropertyList:ofType:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='propertyList' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='1' name='type' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='readableTypesForPasteboard:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='readingOptionsForType:pasteboard:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pasteboard' type='@'/>
<retval declared_type='NSPasteboardReadingOptions' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardWriting'>
<method selector='pasteboardPropertyListForType:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='writableTypesForPasteboard:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pasteboard' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='writingOptionsForType:pasteboard:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='NSPasteboardType _Nonnull' index='0' name='type' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pasteboard' type='@'/>
<retval declared_type='NSPasteboardWritingOptions' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSPathCellDelegate'>
<method selector='pathCell:willDisplayOpenPanel:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSPathCell * _Nonnull' index='0' name='pathCell' type='@'/>
<arg declared_type='NSOpenPanel * _Nonnull' index='1' name='openPanel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pathCell:willPopUpMenu:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSPathCell * _Nonnull' index='0' name='pathCell' type='@'/>
<arg declared_type='NSMenu * _Nonnull' index='1' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPathControlDelegate'>
<method selector='pathControl:acceptDrop:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathControl:shouldDragItem:withPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='NSPathControlItem * _Nonnull' index='1' name='pathItem' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathControl:shouldDragPathComponentCell:withPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='NSPathComponentCell * _Nonnull' index='1' name='pathComponentCell' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathControl:validateDrop:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='pathControl:willDisplayOpenPanel:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='NSOpenPanel * _Nonnull' index='1' name='openPanel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pathControl:willPopUpMenu:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSPathControl * _Nonnull' index='0' name='pathControl' type='@'/>
<arg declared_type='NSMenu * _Nonnull' index='1' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPlaceholders'>
<method class_method='true' selector='defaultPlaceholderForMarker:withBinding:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='id _Nullable' index='0' name='marker' type='@'/>
<arg declared_type='NSBindingName _Nonnull' index='1' name='binding' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method class_method='true' selector='setDefaultPlaceholder:forMarker:withBinding:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='id _Nullable' index='0' name='placeholder' type='@'/>
<arg declared_type='id _Nullable' index='1' name='marker' type='@'/>
<arg declared_type='NSBindingName _Nonnull' index='2' name='binding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPopoverDelegate'>
<method selector='detachableWindowForPopover:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSPopover * _Nonnull' index='0' name='popover' type='@'/>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='popoverDidClose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverDidDetach:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSPopover * _Nonnull' index='0' name='popover' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverDidShow:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverShouldClose:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSPopover * _Nonnull' index='0' name='popover' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='popoverShouldDetach:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSPopover * _Nonnull' index='0' name='popover' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='popoverWillClose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='popoverWillShow:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSPrintPanelAccessorizing'>
<method selector='keyPathsForValuesAffectingPreview' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSSet * _Nonnull' type='@'/>
</method>
<method selector='localizedSummaryItems' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray *&gt; * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSRuleEditorDelegate'>
<method selector='ruleEditor:child:forCriterion:withRowType:' type='@24@0:4@8i12@16I20' type64='@48@0:8@16q24@32Q40'>
<arg declared_type='NSRuleEditor * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<arg declared_type='id _Nullable' index='2' name='criterion' type='@'/>
<arg declared_type='NSRuleEditorRowType' index='3' name='rowType' type='I' type64='Q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='ruleEditor:displayValueForCriterion:inRow:' type='@20@0:4@8@12i16' type64='@40@0:8@16@24q32'>
<arg declared_type='NSRuleEditor * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='criterion' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='ruleEditor:numberOfChildrenForCriterion:withRowType:' type='i20@0:4@8@12I16' type64='q40@0:8@16@24Q32'>
<arg declared_type='NSRuleEditor * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='id _Nullable' index='1' name='criterion' type='@'/>
<arg declared_type='NSRuleEditorRowType' index='2' name='rowType' type='I' type64='Q'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:' type='@24@0:4@8@12@16i20' type64='@48@0:8@16@24@32q40'>
<arg declared_type='NSRuleEditor * _Nonnull' index='0' name='editor' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='criterion' type='@'/>
<arg declared_type='id _Nonnull' index='2' name='value' type='@'/>
<arg declared_type='NSInteger' index='3' name='row' type='i' type64='q'/>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='ruleEditorRowsDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSavePanelDelegateDeprecated'>
<method selector='panel:compareFilename:with:caseSensitive:' type='i24@0:4@8@12@16B20' type64='q44@0:8@16@24@32B40'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='name1' type='@'/>
<arg declared_type='NSString * _Nonnull' index='2' name='name2' type='@'/>
<arg declared_type='BOOL' index='3' name='caseSensitive' type='B'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='panel:directoryDidChange:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='panel:isValidFilename:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panel:shouldShowFilename:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='id _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='filename' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSScrubberDataSource'>
<method selector='numberOfItemsForScrubber:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='scrubber:viewForItemAtIndex:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSInteger' index='1' name='index' type='i' type64='q'/>
<retval declared_type='__kindof NSScrubberItemView * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSScrubberDelegate'>
<method selector='didBeginInteractingWithScrubber:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didCancelInteractingWithScrubber:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFinishInteractingWithScrubber:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubber:didChangeVisibleRange:' type='v20@0:4@8{_NSRange=II}12' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSRange' index='1' name='visibleRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubber:didHighlightItemAtIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSInteger' index='1' name='highlightedIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrubber:didSelectItemAtIndex:' type='v16@0:4@8i12' type64='v32@0:8@16q24'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSInteger' index='1' name='selectedIndex' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSScrubberFlowLayoutDelegate'>
<method selector='scrubber:layout:sizeForItemAtIndex:' type='{_NSSize=ff}20@0:4@8@12i16' type64='{CGSize=dd}40@0:8@16@24q32'>
<arg declared_type='NSScrubber * _Nonnull' index='0' name='scrubber' type='@'/>
<arg declared_type='NSScrubberFlowLayout * _Nonnull' index='1' name='layout' type='@'/>
<arg declared_type='NSInteger' index='2' name='itemIndex' type='i' type64='q'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSSearchFieldDelegate'>
<method selector='searchFieldDidEndSearching:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSSearchField * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchFieldDidStartSearching:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSSearchField * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSeguePerforming'>
<method selector='performSegueWithIdentifier:sender:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prepareForSegue:sender:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSStoryboardSegue * _Nonnull' index='0' name='segue' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldPerformSegueWithIdentifier:sender:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSStoryboardSegueIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='id _Nullable' index='1' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSServicesMenuRequestor'>
<method selector='readSelectionFromPasteboard:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='writeSelectionToPasteboard:types:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSPasteboard * _Nonnull' index='0' name='pboard' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='types' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServiceDelegate'>
<method selector='anchoringViewForSharingService:showRelativeToRect:preferredEdge:' type='@20@0:4@8^{_NSRect={_NSPoint=ff}{_NSSize=ff}}12^i16' type64='@40@0:8@16^{CGRect={CGPoint=dd}{CGSize=dd}}24^Q32'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSRect * _Nonnull' index='1' name='positioningRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRectEdge * _Nonnull' index='2' name='preferredEdge' type='^i' type64='^Q'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='sharingService:didFailToShareItems:error:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSError * _Nonnull' index='2' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:didShareItems:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingService:sourceFrameOnScreenForShareItem:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8@12' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='sharingService:sourceWindowForShareItems:sharingContentScope:' type='@20@0:4@8@12^i16' type64='@40@0:8@16@24^q32'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSSharingContentScope * _Nonnull' index='2' name='sharingContentScope' type='^i' type64='^q'/>
<retval declared_type='NSWindow * _Nullable' type='@'/>
</method>
<method selector='sharingService:transitionImageForShareItem:contentRect:' type='@20@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='@40@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='item' type='@'/>
<arg declared_type='NSRect * _Nonnull' index='2' name='contentRect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
<method selector='sharingService:willShareItems:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSSharingService * _Nonnull' index='0' name='sharingService' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServicePickerDelegate'>
<method selector='sharingServicePicker:delegateForSharingService:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type='@'/>
<arg declared_type='NSSharingService * _Nonnull' index='1' name='sharingService' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='sharingServicePicker:didChooseSharingService:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type='@'/>
<arg declared_type='NSSharingService * _Nullable' index='1' name='service' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharingServicePicker:sharingServicesForItems:proposedSharingServices:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='0' name='sharingServicePicker' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='items' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='proposedServices' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServicePickerTouchBarItemDelegate'>
<method selector='itemsForSharingServicePickerTouchBarItem:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSSharingServicePickerTouchBarItem * _Nonnull' index='0' name='pickerTouchBarItem' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSSoundDelegate'>
<method selector='sound:didFinishPlaying:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='NSSound * _Nonnull' index='0' name='sound' type='@'/>
<arg declared_type='BOOL' index='1' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpeechRecognizerDelegate'>
<method selector='speechRecognizer:didRecognizeCommand:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSSpeechRecognizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='command' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpeechSynthesizerDelegate'>
<method selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:' type='v24@0:4@8I12@16@20' type64='v48@0:8@16Q24@32@40'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSUInteger' index='1' name='characterIndex' type='I' type64='Q'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<arg declared_type='NSString * _Nonnull' index='3' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didEncounterSyncMessage:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:didFinishSpeaking:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='BOOL' index='1' name='finishedSpeaking' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:willSpeakPhoneme:' type='v16@0:4@8s12' type64='v28@0:8@16s24'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='short' index='1' name='phonemeOpcode' type='s'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='speechSynthesizer:willSpeakWord:ofString:' type='v24@0:4@8{_NSRange=II}12@20' type64='v48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type='NSSpeechSynthesizer * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSRange' index='1' name='characterRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='2' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSplitViewDelegate'>
<method selector='splitView:additionalEffectiveRectOfDividerAtIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8i12' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16q24'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSInteger' index='1' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:canCollapseSubview:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='subview' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitView:constrainMaxCoordinate:ofSubviewAt:' type='f20@0:4@8f12i16' type64='d40@0:8@16d24q32'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='CGFloat' index='1' name='proposedMaximumPosition' type='f' type64='d'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='splitView:constrainMinCoordinate:ofSubviewAt:' type='f20@0:4@8f12i16' type64='d40@0:8@16d24q32'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='CGFloat' index='1' name='proposedMinimumPosition' type='f' type64='d'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='splitView:constrainSplitPosition:ofSubviewAt:' type='f20@0:4@8f12i16' type64='d40@0:8@16d24q32'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='CGFloat' index='1' name='proposedPosition' type='f' type64='d'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}48@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12{_NSRect={_NSPoint=ff}{_NSSize=ff}}28i44' type64='{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56q88'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSRect' index='1' name='proposedEffectiveRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSRect' index='2' name='drawnRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSInteger' index='3' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='splitView:resizeSubviewsWithOldSize:' type='v20@0:4@8{_NSSize=ff}12' type64='v40@0:8@16{CGSize=dd}24'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSSize' index='1' name='oldSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitView:shouldAdjustSizeOfSubview:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:' type='B20@0:4@8@12i16' type64='B40@0:8@16@24q32'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSView * _Nonnull' index='1' name='subview' type='@'/>
<arg declared_type='NSInteger' index='2' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitView:shouldHideDividerAtIndex:' type='B16@0:4@8i12' type64='B32@0:8@16q24'>
<arg declared_type='NSSplitView * _Nonnull' index='0' name='splitView' type='@'/>
<arg declared_type='NSInteger' index='1' name='dividerIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='splitViewDidResizeSubviews:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='splitViewWillResizeSubviews:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpringLoadingDestination'>
<method selector='draggingEnded:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingActivated:draggingInfo:' type='v16@0:4B8@12' type64='v28@0:8B16@20'>
<arg declared_type='BOOL' index='0' name='activated' type='B'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingEntered:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='NSSpringLoadingOptions' type='I' type64='Q'/>
</method>
<method selector='springLoadingExited:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingHighlightChanged:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='springLoadingUpdated:' type='I12@0:4@8' type64='Q24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='draggingInfo' type='@'/>
<retval declared_type='NSSpringLoadingOptions' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='NSStackViewDelegate'>
<method selector='stackView:didReattachViews:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSStackView * _Nonnull' index='0' name='stackView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='views' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stackView:willDetachViews:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSStackView * _Nonnull' index='0' name='stackView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='views' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTabViewDelegate'>
<method selector='tabView:didSelectTabViewItem:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabView:shouldSelectTabViewItem:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tabView:willSelectTabViewItem:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<arg declared_type='NSTabViewItem * _Nullable' index='1' name='tabViewItem' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tabViewDidChangeNumberOfTabViewItems:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSTabView * _Nonnull' index='0' name='tabView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDataSource'>
<method selector='numberOfRowsInTableView:' type='i12@0:4@8' type64='q24@0:8@16'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:acceptDrop:row:dropOperation:' type='B24@0:4@8@12i16I20' type64='B48@0:8@16@24q32Q40'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<arg declared_type='NSTableViewDropOperation' index='3' name='dropOperation' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:draggingSession:endedAtPoint:operation:' type='v28@0:4@8@12{_NSPoint=ff}16I24' type64='v56@0:8@16@24{CGPoint=dd}32Q48'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSDragOperation' index='3' name='operation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:draggingSession:willBeginAtPoint:forRowIndexes:' type='v28@0:4@8@12{_NSPoint=ff}16@24' type64='v56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSDraggingSession * _Nonnull' index='1' name='session' type='@'/>
<arg declared_type='NSPoint' index='2' name='screenPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSIndexSet * _Nonnull' index='3' name='rowIndexes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSURL * _Nonnull' index='1' name='dropDestination' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='2' name='indexSet' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tableView:objectValueForTableColumn:row:' type='@20@0:4@8@12i16' type64='@40@0:8@16@24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tableView:pasteboardWriterForRow:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tableView:setObjectValue:forTableColumn:row:' type='v24@0:4@8@12@16i20' type64='v48@0:8@16@24@32q40'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nullable' index='1' name='object' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='3' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:sortDescriptorsDidChange:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='oldDescriptors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:updateDraggingItemsForDrag:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='draggingInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:validateDrop:proposedRow:proposedDropOperation:' type='I24@0:4@8@12i16I20' type64='Q48@0:8@16@24q32Q40'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='info' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<arg declared_type='NSTableViewDropOperation' index='3' name='dropOperation' type='I' type64='Q'/>
<retval declared_type='NSDragOperation' type='I' type64='Q'/>
</method>
<method selector='tableView:writeRowsWithIndexes:toPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='rowIndexes' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDataSourceDeprecated'>
<method selector='tableView:writeRows:toPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='rows' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDelegate'>
<method selector='selectionShouldChangeInTableView:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:dataCellForTableColumn:row:' type='@20@0:4@8@12i16' type64='@40@0:8@16@24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='NSCell * _Nullable' type='@'/>
</method>
<method selector='tableView:didAddRowView:forRow:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableRowView * _Nonnull' index='1' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didClickTableColumn:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didDragTableColumn:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:didRemoveRowView:forRow:' type='v20@0:4@8@12i16' type64='v40@0:8@16@24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableRowView * _Nonnull' index='1' name='rowView' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:heightOfRow:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:isGroupRow:' type='B16@0:4@8i12' type64='B32@0:8@16q24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:mouseDownInHeaderOfTableColumn:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nonnull' index='1' name='tableColumn' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:' type='i24@0:4@8i12i16@20' type64='q48@0:8@16q24q32@40'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='startRow' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='endRow' type='i' type64='q'/>
<arg declared_type='NSString * _Nonnull' index='3' name='searchString' type='@'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tableView:rowActionsForRow:edge:' type='@20@0:4@8i12i16' type64='@40@0:8@16q24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<arg declared_type='NSTableRowActionEdge' index='2' name='edge' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tableView:rowViewForRow:' type='@16@0:4@8i12' type64='@32@0:8@16q24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='NSTableRowView * _Nullable' type='@'/>
</method>
<method selector='tableView:selectionIndexesForProposedSelection:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSIndexSet * _Nonnull' index='1' name='proposedSelectionIndexes' type='@'/>
<retval declared_type='NSIndexSet * _Nonnull' type='@'/>
</method>
<method selector='tableView:shouldEditTableColumn:row:' type='B20@0:4@8@12i16' type64='B40@0:8@16@24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldReorderColumn:toColumn:' type='B20@0:4@8i12i16' type64='B40@0:8@16q24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='columnIndex' type='i' type64='q'/>
<arg declared_type='NSInteger' index='2' name='newColumnIndex' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldSelectRow:' type='B16@0:4@8i12' type64='B32@0:8@16q24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldSelectTableColumn:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldShowCellExpansionForTableColumn:row:' type='B20@0:4@8@12i16' type64='B40@0:8@16@24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldTrackCell:forTableColumn:row:' type='B24@0:4@8@12@16i20' type64='B48@0:8@16@24@32q40'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='3' name='row' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSString * _Nullable' index='2' name='searchString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tableView:sizeToFitWidthOfColumn:' type='f16@0:4@8i12' type64='d32@0:8@16q24'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSInteger' index='1' name='column' type='i' type64='q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:' type='@36@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@20i24{_NSPoint=ff}28' type64='@72@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32@40q48{CGPoint=dd}56'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSCell * _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRectPointer _Nonnull' index='2' name='rect' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTableColumn * _Nullable' index='3' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='4' name='row' type='i' type64='q'/>
<arg declared_type='NSPoint' index='5' name='mouseLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='tableView:typeSelectStringForTableColumn:row:' type='@20@0:4@8@12i16' type64='@40@0:8@16@24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tableView:viewForTableColumn:row:' type='@20@0:4@8@12i16' type64='@40@0:8@16@24q32'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='1' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='2' name='row' type='i' type64='q'/>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='tableView:willDisplayCell:forTableColumn:row:' type='v24@0:4@8@12@16i20' type64='v48@0:8@16@24@32q40'>
<arg declared_type='NSTableView * _Nonnull' index='0' name='tableView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSTableColumn * _Nullable' index='2' name='tableColumn' type='@'/>
<arg declared_type='NSInteger' index='3' name='row' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableViewColumnDidMove:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableViewColumnDidResize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableViewSelectionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tableViewSelectionIsChanging:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextAttachmentCell'>
<method selector='attachment' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSTextAttachment * _Nullable' type='@'/>
</method>
<method selector='cellBaselineOffset' type='{_NSPoint=ff}8@0:4' type64='{CGPoint=dd}16@0:8'>
<retval declared_type='NSPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12{_NSPoint=ff}28I36' type64='{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGPoint=dd}56Q72'>
<arg declared_type='NSTextContainer * _Nonnull' index='0' name='textContainer' type='@'/>
<arg declared_type='NSRect' index='1' name='lineFrag' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSPoint' index='2' name='position' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='cellSize' type='{_NSSize=ff}8@0:4' type64='{CGSize=dd}16@0:8'>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='drawWithFrame:inView:' type='v28@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24' type64='v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='1' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:' type='v32@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28' type64='v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='1' name='controlView' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:layoutManager:' type='v36@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28@32' type64='v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56@64'>
<arg declared_type='NSRect' index='0' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='1' name='controlView' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<arg declared_type='NSLayoutManager * _Nonnull' index='3' name='layoutManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='highlight:withFrame:inView:' type='v32@0:4B8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28' type64='v60@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20@52'>
<arg declared_type='BOOL' index='0' name='flag' type='B'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='2' name='controlView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachment:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSTextAttachment * _Nullable' index='0' name='attachment' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:' type='B40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28I32B36' type64='B76@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64B72'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='theEvent' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='2' name='controlView' type='@'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<arg declared_type='BOOL' index='4' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:' type='B36@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28B32' type64='B68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56B64'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='theEvent' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='2' name='controlView' type='@'/>
<arg declared_type='BOOL' index='3' name='flag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToTrackMouse' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:' type='B36@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28I32' type64='B72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64'>
<arg declared_type='NSEvent * _Nonnull' index='0' name='theEvent' type='@'/>
<arg declared_type='NSRect' index='1' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSView * _Nullable' index='2' name='controlView' type='@'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextAttachmentContainer'>
<method selector='attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12{CGPoint=ff}28I36' type64='{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGPoint=dd}56Q72'>
<arg declared_type='NSTextContainer * _Nullable' index='0' name='textContainer' type='@'/>
<arg declared_type='NSRect' index='1' name='lineFrag' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGPoint' index='2' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageForBounds:textContainer:characterIndex:' type='@32@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28' type64='@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56'>
<arg declared_type='NSRect' index='0' name='imageBounds' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSTextContainer * _Nullable' index='1' name='textContainer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSImage * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextDelegate'>
<method selector='textDidBeginEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textDidEndEditing:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textShouldBeginEditing:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textShouldEndEditing:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSText * _Nonnull' index='0' name='textObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextFieldDelegate'>
<method selector='textField:textView:candidates:forSelectedRange:' type='@28@0:4@8@12@16{_NSRange=II}20' type64='@56@0:8@16@24@32{_NSRange=QQ}40'>
<arg declared_type='NSTextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='candidates' type='@'/>
<arg declared_type='NSRange' index='3' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textField:textView:candidatesForSelectedRange:' type='@24@0:4@8@12{_NSRange=II}16' type64='@48@0:8@16@24{_NSRange=QQ}32'>
<arg declared_type='NSTextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='NSRange' index='2' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='textField:textView:shouldSelectCandidateAtIndex:' type='B20@0:4@8@12I16' type64='B40@0:8@16@24Q32'>
<arg declared_type='NSTextField * _Nonnull' index='0' name='textField' type='@'/>
<arg declared_type='NSTextView * _Nonnull' index='1' name='textView' type='@'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextFinderBarContainer'>
<method selector='contentView' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='findBarView' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSView * _Nullable' type='@'/>
</method>
<method selector='findBarViewDidChangeHeight' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isFindBarVisible' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFindBarView:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSView * _Nullable' index='0' name='findBarView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFindBarVisible:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='findBarVisible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextFinderClient'>
<method selector='allowsMultipleSelection' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentViewAtIndex:effectiveCharacterRange:' type='@16@0:4I8^{_NSRange=II}12' type64='@32@0:8Q16^{_NSRange=QQ}24'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nonnull' index='1' name='outRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSView * _Nonnull' type='@'/>
</method>
<method selector='didReplaceCharacters' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawCharactersInRange:forContentView:' type='v20@0:4{_NSRange=II}8@16' type64='v40@0:8{_NSRange=QQ}16@32'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSView * _Nonnull' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstSelectedRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='isEditable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isSelectable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rectsForCharacterRange:' type='@16@0:4{_NSRange=II}8' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='replaceCharactersInRange:withString:' type='v20@0:4{_NSRange=II}8@16' type64='v40@0:8{_NSRange=QQ}16@32'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nonnull' index='1' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollRangeToVisible:' type='v16@0:4{_NSRange=II}8' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedRanges' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='setSelectedRanges:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='selectedRanges' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldReplaceCharactersInRanges:withStrings:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSArray * _Nonnull' index='0' name='ranges' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='strings' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='string' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='stringAtIndex:effectiveRange:endsWithSearchBoundary:' type='@20@0:4I8^{_NSRange=II}12^B16' type64='@40@0:8Q16^{_NSRange=QQ}24^B32'>
<arg declared_type='NSUInteger' index='0' name='characterIndex' type='I' type64='Q'/>
<arg declared_type='NSRangePointer _Nonnull' index='1' name='outRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<arg declared_type='BOOL * _Nonnull' index='2' name='outFlag' type='^B'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='stringLength' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='visibleCharacterRanges' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextInput'>
<method selector='attributedSubstringFromRange:' type='@16@0:4{_NSRange=II}8' type64='@32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSAttributedString * _Null_unspecified' type='@'/>
</method>
<method selector='characterIndexForPoint:' type='I16@0:4{_NSPoint=ff}8' type64='Q32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='conversationIdentifier' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='doCommandBySelector:' type='v12@0:4:8' type64='v24@0:8:16'>
<arg declared_type='SEL _Null_unspecified' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='firstRectForCharacterRange:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4{_NSRange=II}8' type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='hasMarkedText' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='insertText:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Null_unspecified' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='markedRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='selectedRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='setMarkedText:selectedRange:' type='v20@0:4@8{_NSRange=II}12' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type='id _Null_unspecified' index='0' name='string' type='@'/>
<arg declared_type='NSRange' index='1' name='selRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unmarkText' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='validAttributesForMarkedText' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextInputClient'>
<method selector='attributedString' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSAttributedString * _Nonnull' type='@'/>
</method>
<method selector='attributedSubstringForProposedRange:actualRange:' type='@20@0:4{_NSRange=II}8^{_NSRange=II}16' type64='@40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSAttributedString * _Nullable' type='@'/>
</method>
<method selector='baselineDeltaForCharacterAtIndex:' type='f12@0:4I8' type64='d24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='anIndex' type='I' type64='Q'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='characterIndexForPoint:' type='I16@0:4{_NSPoint=ff}8' type64='Q32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='doCommandBySelector:' type='v12@0:4:8' type64='v24@0:8:16'>
<arg declared_type='SEL _Null_unspecified' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawsVerticallyForCharacterAtIndex:' type='B12@0:4I8' type64='B24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='firstRectForCharacterRange:actualRange:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}20@0:4{_NSRange=II}8^{_NSRange=II}16' type64='{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRangePointer _Nullable' index='1' name='actualRange' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:' type='f16@0:4{_NSPoint=ff}8' type64='d32@0:8{CGPoint=dd}16'>
<arg declared_type='NSPoint' index='0' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='hasMarkedText' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='insertText:replacementRange:' type='v20@0:4@8{_NSRange=II}12' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type='id _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSRange' index='1' name='replacementRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='markedRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='selectedRange' type='{_NSRange=II}8@0:4' type64='{_NSRange=QQ}16@0:8'>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='setMarkedText:selectedRange:replacementRange:' type='v28@0:4@8{_NSRange=II}12{_NSRange=II}20' type64='v56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40'>
<arg declared_type='id _Nonnull' index='0' name='string' type='@'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='2' name='replacementRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unmarkText' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='validAttributesForMarkedText' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Null_unspecified' type='@'/>
</method>
<method selector='windowLevel' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextLayoutOrientationProvider'>
<method selector='layoutOrientation' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSTextLayoutOrientation' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextStorageDelegate'>
<method selector='textStorage:didProcessEditing:range:changeInLength:' type='v28@0:4@8I12{_NSRange=II}16i24' type64='v56@0:8@16Q24{_NSRange=QQ}32q48'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStorage:willProcessEditing:range:changeInLength:' type='v28@0:4@8I12{_NSRange=II}16i24' type64='v56@0:8@16Q24{_NSRange=QQ}32q48'>
<arg declared_type='NSTextStorage * _Nonnull' index='0' name='textStorage' type='@'/>
<arg declared_type='NSTextStorageEditActions' index='1' name='editedMask' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='editedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger' index='3' name='delta' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextViewDelegate'>
<method selector='textView:URLForContentsOfTextAttachment:atIndex:' type='@20@0:4@8@12I16' type64='@40@0:8@16@24Q32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSTextAttachment * _Nonnull' index='1' name='textAttachment' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSURL * _Nullable' type='@'/>
</method>
<method selector='textView:candidates:forSelectedRange:' type='@24@0:4@8@12{_NSRange=II}16' type64='@48@0:8@16@24{_NSRange=QQ}32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='candidates' type='@'/>
<arg declared_type='NSRange' index='2' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:candidatesForSelectedRange:' type='@20@0:4@8{_NSRange=II}12' type64='@40@0:8@16{_NSRange=QQ}24'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSRange' index='1' name='selectedRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='textView:clickedOnCell:inRect:' type='v32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:clickedOnCell:inRect:atIndex:' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16I32' type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:clickedOnLink:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='link' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:clickedOnLink:atIndex:' type='B20@0:4@8@12I16' type64='B40@0:8@16@24Q32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='link' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:' type='@28@0:4@8@12{_NSRange=II}16^i24' type64='@56@0:8@16@24{_NSRange=QQ}32^q48'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='words' type='@'/>
<arg declared_type='NSRange' index='2' name='charRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSInteger * _Nullable' index='3' name='index' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:didCheckTextInRange:types:options:results:orthography:wordCount:' type='@44@0:4@8{_NSRange=II}12Q20@28@32@36i40' type64='@80@0:8@16{_NSRange=QQ}24Q40@48@56@64q72'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSTextCheckingTypes' index='2' name='checkingTypes' type='Q'/>
<arg declared_type='NSDictionary * _Nonnull' index='3' name='options' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='4' name='results' type='@'/>
<arg declared_type='NSOrthography * _Nonnull' index='5' name='orthography' type='@'/>
<arg declared_type='NSInteger' index='6' name='wordCount' type='i' type64='q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:doCommandBySelector:' type='B16@0:4@8:12' type64='B32@0:8@16:24'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='SEL _Nonnull' index='1' name='commandSelector' type=':'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:' type='v32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:atIndex:' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16I32' type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='cellFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:draggedCell:inRect:event:' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32' type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='id _Null_unspecified' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSEvent * _Null_unspecified' index='3' name='event' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:draggedCell:inRect:event:atIndex:' type='v40@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32I36' type64='v80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64Q72'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSEvent * _Nonnull' index='3' name='event' type='@'/>
<arg declared_type='NSUInteger' index='4' name='charIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textView:menu:forEvent:atIndex:' type='@24@0:4@8@12@16I20' type64='@48@0:8@16@24@32Q40'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSMenu * _Nonnull' index='1' name='menu' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='2' name='event' type='@'/>
<arg declared_type='NSUInteger' index='3' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementString:' type='B24@0:4@8{_NSRange=II}12@20' type64='B48@0:8@16{_NSRange=QQ}24@40'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSRange' index='1' name='affectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSString * _Nullable' index='2' name='replacementString' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldChangeTextInRanges:replacementStrings:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='affectedRanges' type='@'/>
<arg declared_type='NSArray * _Nullable' index='2' name='replacementStrings' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldChangeTypingAttributes:toAttributes:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='1' name='oldTypingAttributes' type='@'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='newTypingAttributes' type='@'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='textView:shouldSelectCandidateAtIndex:' type='B16@0:4@8I12' type64='B32@0:8@16Q24'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textView:shouldSetSpellingState:range:' type='i24@0:4@8i12{_NSRange=II}16' type64='q48@0:8@16q24{_NSRange=QQ}32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSInteger' index='1' name='value' type='i' type64='q'/>
<arg declared_type='NSRange' index='2' name='affectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='textView:shouldUpdateTouchBarItemIdentifiers:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='identifiers' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:' type='{_NSRange=II}28@0:4@8{_NSRange=II}12{_NSRange=II}20' type64='{_NSRange=QQ}56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSRange' index='1' name='oldSelectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='2' name='newSelectedCharRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='oldSelectedCharRanges' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='newSelectedCharRanges' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:willCheckTextInRange:options:types:' type='@28@0:4@8{_NSRange=II}12@20^Q24' type64='@56@0:8@16{_NSRange=QQ}24@40^Q48'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSDictionary * _Nonnull' index='2' name='options' type='@'/>
<arg declared_type='NSTextCheckingTypes * _Nonnull' index='3' name='checkingTypes' type='^Q'/>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='textView:willDisplayToolTip:forCharacterAtIndex:' type='@20@0:4@8@12I16' type64='@40@0:8@16@24Q32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='tooltip' type='@'/>
<arg declared_type='NSUInteger' index='2' name='characterIndex' type='I' type64='Q'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='textView:willShowSharingServicePicker:forItems:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='textView' type='@'/>
<arg declared_type='NSSharingServicePicker * _Nonnull' index='1' name='servicePicker' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='2' name='items' type='@'/>
<retval declared_type='NSSharingServicePicker * _Nullable' type='@'/>
</method>
<method selector='textView:writablePasteboardTypesForCell:atIndex:' type='@20@0:4@8@12I16' type64='@40@0:8@16@24Q32'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='textView:writeCell:atIndex:toPasteboard:type:' type='B28@0:4@8@12I16@20@24' type64='B56@0:8@16@24Q32@40@48'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='cell' type='@'/>
<arg declared_type='NSUInteger' index='2' name='charIndex' type='I' type64='Q'/>
<arg declared_type='NSPasteboard * _Nonnull' index='3' name='pboard' type='@'/>
<arg declared_type='NSPasteboardType _Nonnull' index='4' name='type' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textViewDidChangeSelection:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textViewDidChangeTypingAttributes:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='undoManagerForTextView:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSTextView * _Nonnull' index='0' name='view' type='@'/>
<retval declared_type='NSUndoManager * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTokenFieldCellDelegate'>
<method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type='@24@0:4@8@12i16^i20' type64='@48@0:8@16@24q32^q40'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='substring' type='@'/>
<arg declared_type='NSInteger' index='2' name='tokenIndex' type='i' type64='q'/>
<arg declared_type='NSInteger * _Nonnull' index='3' name='selectedIndex' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tokenFieldCell:displayStringForRepresentedObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:editingStringForRepresentedObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:hasMenuForRepresentedObject:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tokenFieldCell:menuForRepresentedObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:readFromPasteboard:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pboard' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:representedObjectForEditingString:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='editingString' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tokenFieldCell:shouldAddObjects:atIndex:' type='@20@0:4@8@12I16' type64='@40@0:8@16@24Q32'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='tokens' type='@'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tokenFieldCell:styleForRepresentedObject:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSTokenStyle' type='I' type64='Q'/>
</method>
<method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSTokenFieldCell * _Nonnull' index='0' name='tokenFieldCell' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='objects' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTokenFieldDelegate'>
<method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type='@24@0:4@8@12i16^i20' type64='@48@0:8@16@24q32^q40'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='substring' type='@'/>
<arg declared_type='NSInteger' index='2' name='tokenIndex' type='i' type64='q'/>
<arg declared_type='NSInteger * _Nullable' index='3' name='selectedIndex' type='^i' type64='^q'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tokenField:displayStringForRepresentedObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tokenField:editingStringForRepresentedObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='tokenField:hasMenuForRepresentedObject:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tokenField:menuForRepresentedObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSMenu * _Nullable' type='@'/>
</method>
<method selector='tokenField:readFromPasteboard:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='1' name='pboard' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='tokenField:representedObjectForEditingString:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSString * _Nonnull' index='1' name='editingString' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='tokenField:shouldAddObjects:atIndex:' type='@20@0:4@8@12I16' type64='@40@0:8@16@24Q32'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='tokens' type='@'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='tokenField:styleForRepresentedObject:' type='I16@0:4@8@12' type64='Q32@0:8@16@24'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='id _Nonnull' index='1' name='representedObject' type='@'/>
<retval declared_type='NSTokenStyle' type='I' type64='Q'/>
</method>
<method selector='tokenField:writeRepresentedObjects:toPasteboard:' type='B20@0:4@8@12@16' type64='B40@0:8@16@24@32'>
<arg declared_type='NSTokenField * _Nonnull' index='0' name='tokenField' type='@'/>
<arg declared_type='NSArray * _Nonnull' index='1' name='objects' type='@'/>
<arg declared_type='NSPasteboard * _Nonnull' index='2' name='pboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolTipOwner'>
<method selector='view:stringForToolTip:point:userData:' type='@28@0:4@8i12{_NSPoint=ff}16^v24' type64='@56@0:8@16q24{CGPoint=dd}32^v48'>
<arg declared_type='NSView * _Nonnull' index='0' name='view' type='@'/>
<arg declared_type='NSToolTipTag' index='1' name='tag' type='i' type64='q'/>
<arg declared_type='NSPoint' index='2' name='point' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='void * _Nullable' index='3' name='data' type='^v'/>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolbarDelegate'>
<method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:' type='@20@0:4@8@12B16' type64='@36@0:8@16@24B32'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<arg declared_type='NSToolbarItemIdentifier _Nonnull' index='1' name='itemIdentifier' type='@'/>
<arg declared_type='BOOL' index='2' name='flag' type='B'/>
<retval declared_type='NSToolbarItem * _Nullable' type='@'/>
</method>
<method selector='toolbarAllowedItemIdentifiers:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbarDefaultItemIdentifiers:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbarDidRemoveItem:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='toolbarSelectableItemIdentifiers:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSToolbar * _Nonnull' index='0' name='toolbar' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='toolbarWillAddItem:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolbarItemValidation'>
<method selector='validateToolbarItem:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSToolbarItem * _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSTouchBarDelegate'>
<method selector='touchBar:makeItemForIdentifier:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSTouchBar * _Nonnull' index='0' name='touchBar' type='@'/>
<arg declared_type='NSTouchBarItemIdentifier _Nonnull' index='1' name='identifier' type='@'/>
<retval declared_type='NSTouchBarItem * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSTouchBarProvider'>
<method selector='touchBar' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSTouchBar * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceCompression'>
<method selector='activeCompressionOptions' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSUserInterfaceCompressionOptions * _Nonnull' type='@'/>
</method>
<method selector='compressWithPrioritizedCompressionOptions:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='prioritizedOptions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='minimumSizeWithPrioritizedCompressionOptions:' type='{_NSSize=ff}12@0:4@8' type64='{CGSize=dd}24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='prioritizedOptions' type='@'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceItemIdentification'>
<method selector='identifier' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSUserInterfaceItemIdentifier _Nullable' type='@'/>
</method>
<method selector='setIdentifier:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nullable' index='0' name='identifier' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceItemSearching'>
<method selector='localizedTitlesForItem:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='performActionForItem:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchForItemsWithSearchString:resultLimit:matchedItemHandler:' type='v20@0:4@8i12@?16' type64='v40@0:8@16q24@?32'>
<arg declared_type='NSString * _Nonnull' index='0' name='searchString' type='@'/>
<arg declared_type='NSInteger' index='1' name='resultLimit' type='i' type64='q'/>
<arg declared_type='void (^ _Nonnull)(NSArray * _Nonnull)' function_pointer='true' index='2' name='handleMatchedItems' type='@?'>
<arg declared_type='NSArray * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAllHelpTopicsForSearchString:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='searchString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceValidations'>
<method selector='validateUserInterfaceItem:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='item' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='NSValidatedUserInterfaceItem'>
<method selector='action' type=':8@0:4' type64=':16@0:8'>
<retval declared_type='SEL _Nullable' type=':'/>
</method>
<method selector='tag' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
</informal_protocol>
<informal_protocol name='NSViewControllerPresentationAnimator'>
<method selector='animateDismissalOfViewController:fromViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='NSViewController * _Nonnull' index='1' name='fromViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animatePresentationOfViewController:fromViewController:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSViewController * _Nonnull' index='0' name='viewController' type='@'/>
<arg declared_type='NSViewController * _Nonnull' index='1' name='fromViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSWindowDelegate'>
<method selector='customWindowsToEnterFullScreenForWindow:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='customWindowsToEnterFullScreenForWindow:onScreen:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSScreen * _Nonnull' index='1' name='screen' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='customWindowsToExitFullScreenForWindow:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='window:didDecodeRestorableState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:' type='B28@0:4@8@12{_NSPoint=ff}16@24' type64='B56@0:8@16@24{CGPoint=dd}32@48'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSEvent * _Nonnull' index='1' name='event' type='@'/>
<arg declared_type='NSPoint' index='2' name='dragImageLocation' type='{_NSPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='NSPasteboard * _Nonnull' index='3' name='pasteboard' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='window:shouldPopUpDocumentPathMenu:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSMenu * _Nonnull' index='1' name='menu' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:' type='v24@0:4@8@12d16' type64='v40@0:8@16@24d32'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSScreen * _Nonnull' index='1' name='screen' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenWithDuration:' type='v20@0:4@8d12' type64='v32@0:8@16d24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:startCustomAnimationToExitFullScreenWithDuration:' type='v20@0:4@8d12' type64='v32@0:8@16d24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSTimeInterval' index='1' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:willEncodeRestorableState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='window:willPositionSheet:usingRect:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16' type64='{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSWindow * _Nonnull' index='1' name='sheet' type='@'/>
<arg declared_type='NSRect' index='2' name='rect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:' type='{_NSSize=ff}28@0:4@8{_NSSize=ff}12{_NSSize=ff}20' type64='{CGSize=dd}56@0:8@16{CGSize=dd}24{CGSize=dd}40'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSSize' index='1' name='maxPreferredFrameSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<arg declared_type='NSSize' index='2' name='maxAllowedFrameSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='window:willUseFullScreenContentSize:' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12' type64='{CGSize=dd}40@0:8@16{CGSize=dd}24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSSize' index='1' name='proposedSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='window:willUseFullScreenPresentationOptions:' type='I16@0:4@8I12' type64='Q32@0:8@16Q24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSApplicationPresentationOptions' index='1' name='proposedOptions' type='I' type64='Q'/>
<retval declared_type='NSApplicationPresentationOptions' type='I' type64='Q'/>
</method>
<method selector='windowDidBecomeKey:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidBecomeMain:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidChangeBackingProperties:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidChangeOcclusionState:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidChangeScreen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidChangeScreenProfile:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidDeminiaturize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidEndLiveResize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidEndSheet:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidEnterFullScreen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidEnterVersionBrowser:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidExitFullScreen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidExitVersionBrowser:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidExpose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidFailToEnterFullScreen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidFailToExitFullScreen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidMiniaturize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidMove:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidResignKey:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidResignMain:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidResize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowDidUpdate:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowShouldClose:' type='B12@0:4@8' type64='B24@0:8@16'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sender' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='windowShouldZoom:toFrame:' type='B28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' type64='B56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSRect' index='1' name='newFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='windowWillBeginSheet:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillClose:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillEnterFullScreen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillEnterVersionBrowser:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillExitFullScreen:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillExitVersionBrowser:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillMiniaturize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillMove:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillResize:toSize:' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12' type64='{CGSize=dd}40@0:8@16{CGSize=dd}24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='NSSize' index='1' name='frameSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSSize' type='{_NSSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='windowWillReturnFieldEditor:toObject:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='sender' type='@'/>
<arg declared_type='id _Nullable' index='1' name='client' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='windowWillReturnUndoManager:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<retval declared_type='NSUndoManager * _Nullable' type='@'/>
</method>
<method selector='windowWillStartLiveResize:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSNotification * _Nonnull' index='0' name='notification' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='windowWillUseStandardFrame:defaultFrame:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12' type64='{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24'>
<arg declared_type='NSWindow * _Nonnull' index='0' name='window' type='@'/>
<arg declared_type='NSRect' index='1' name='newFrame' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='NSRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
</informal_protocol>
<informal_protocol name='NSWindowRestoration'>
<method class_method='true' selector='restoreWindowWithIdentifier:state:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='NSUserInterfaceItemIdentifier _Nonnull' index='0' name='identifier' type='@'/>
<arg declared_type='NSCoder * _Nonnull' index='1' name='state' type='@'/>
<arg declared_type='void (^ _Nonnull)(NSWindow * _Nullable, NSError * _Nullable)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSWindow * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
