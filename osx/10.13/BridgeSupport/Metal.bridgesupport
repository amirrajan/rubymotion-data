<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/IOSurface.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='MTLClearColor' type='{_MTLClearColor=&quot;red&quot;d&quot;green&quot;d&quot;blue&quot;d&quot;alpha&quot;d}'>
<field declared_type='double' name='red' type='d'/>
<field declared_type='double' name='green' type='d'/>
<field declared_type='double' name='blue' type='d'/>
<field declared_type='double' name='alpha' type='d'/>
</struct>
<struct name='MTLDispatchThreadgroupsIndirectArguments' type='{_MTLDispatchThreadgroupsIndirectArguments=&quot;threadgroupsPerGrid&quot;[3I]}'>
<field declared_type='uint32_t*' name='threadgroupsPerGrid' type='[3I]'/>
</struct>
<struct name='MTLDrawIndexedPrimitivesIndirectArguments' type='{_MTLDrawIndexedPrimitivesIndirectArguments=&quot;indexCount&quot;I&quot;instanceCount&quot;I&quot;indexStart&quot;I&quot;baseVertex&quot;i&quot;baseInstance&quot;I}'>
<field declared_type='uint32_t' name='indexCount' type='I'/>
<field declared_type='uint32_t' name='instanceCount' type='I'/>
<field declared_type='uint32_t' name='indexStart' type='I'/>
<field declared_type='int32_t' name='baseVertex' type='i'/>
<field declared_type='uint32_t' name='baseInstance' type='I'/>
</struct>
<struct name='MTLDrawPatchIndirectArguments' type='{_MTLDrawPatchIndirectArguments=&quot;patchCount&quot;I&quot;instanceCount&quot;I&quot;patchStart&quot;I&quot;baseInstance&quot;I}'>
<field declared_type='uint32_t' name='patchCount' type='I'/>
<field declared_type='uint32_t' name='instanceCount' type='I'/>
<field declared_type='uint32_t' name='patchStart' type='I'/>
<field declared_type='uint32_t' name='baseInstance' type='I'/>
</struct>
<struct name='MTLDrawPrimitivesIndirectArguments' type='{_MTLDrawPrimitivesIndirectArguments=&quot;vertexCount&quot;I&quot;instanceCount&quot;I&quot;vertexStart&quot;I&quot;baseInstance&quot;I}'>
<field declared_type='uint32_t' name='vertexCount' type='I'/>
<field declared_type='uint32_t' name='instanceCount' type='I'/>
<field declared_type='uint32_t' name='vertexStart' type='I'/>
<field declared_type='uint32_t' name='baseInstance' type='I'/>
</struct>
<struct name='MTLOrigin' type='{_MTLOrigin=&quot;x&quot;I&quot;y&quot;I&quot;z&quot;I}' type64='{_MTLOrigin=&quot;x&quot;Q&quot;y&quot;Q&quot;z&quot;Q}'>
<field declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<field declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<field declared_type='NSUInteger' name='z' type='I' type64='Q'/>
</struct>
<struct name='MTLQuadTessellationFactorsHalf' type='{_MTLQuadTessellationFactorsHalf=&quot;edgeTessellationFactor&quot;[4S]&quot;insideTessellationFactor&quot;[2S]}'>
<field declared_type='uint16_t*' name='edgeTessellationFactor' type='[4S]'/>
<field declared_type='uint16_t*' name='insideTessellationFactor' type='[2S]'/>
</struct>
<struct name='MTLRegion' type='{_MTLRegion=&quot;origin&quot;{_MTLOrigin=&quot;x&quot;I&quot;y&quot;I&quot;z&quot;I}&quot;size&quot;{_MTLSize=&quot;width&quot;I&quot;height&quot;I&quot;depth&quot;I}}' type64='{_MTLRegion=&quot;origin&quot;{_MTLOrigin=&quot;x&quot;Q&quot;y&quot;Q&quot;z&quot;Q}&quot;size&quot;{_MTLSize=&quot;width&quot;Q&quot;height&quot;Q&quot;depth&quot;Q}}'>
<field declared_type='MTLOrigin' name='origin' type='{_MTLOrigin=&quot;x&quot;I&quot;y&quot;I&quot;z&quot;I}' type64='{_MTLOrigin=&quot;x&quot;Q&quot;y&quot;Q&quot;z&quot;Q}'/>
<field declared_type='MTLSize' name='size' type='{_MTLSize=&quot;width&quot;I&quot;height&quot;I&quot;depth&quot;I}' type64='{_MTLSize=&quot;width&quot;Q&quot;height&quot;Q&quot;depth&quot;Q}'/>
</struct>
<struct name='MTLSamplePosition' type='{_MTLSamplePosition=&quot;x&quot;f&quot;y&quot;f}'>
<field declared_type='float' name='x' type='f'/>
<field declared_type='float' name='y' type='f'/>
</struct>
<struct name='MTLScissorRect' type='{_MTLScissorRect=&quot;x&quot;I&quot;y&quot;I&quot;width&quot;I&quot;height&quot;I}' type64='{_MTLScissorRect=&quot;x&quot;Q&quot;y&quot;Q&quot;width&quot;Q&quot;height&quot;Q}'>
<field declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<field declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<field declared_type='NSUInteger' name='width' type='I' type64='Q'/>
<field declared_type='NSUInteger' name='height' type='I' type64='Q'/>
</struct>
<struct name='MTLSize' type='{_MTLSize=&quot;width&quot;I&quot;height&quot;I&quot;depth&quot;I}' type64='{_MTLSize=&quot;width&quot;Q&quot;height&quot;Q&quot;depth&quot;Q}'>
<field declared_type='NSUInteger' name='width' type='I' type64='Q'/>
<field declared_type='NSUInteger' name='height' type='I' type64='Q'/>
<field declared_type='NSUInteger' name='depth' type='I' type64='Q'/>
</struct>
<struct name='MTLSizeAndAlign' type='{_MTLSizeAndAlign=&quot;size&quot;I&quot;align&quot;I}' type64='{_MTLSizeAndAlign=&quot;size&quot;Q&quot;align&quot;Q}'>
<field declared_type='NSUInteger' name='size' type='I' type64='Q'/>
<field declared_type='NSUInteger' name='align' type='I' type64='Q'/>
</struct>
<struct name='MTLTriangleTessellationFactorsHalf' type='{_MTLTriangleTessellationFactorsHalf=&quot;edgeTessellationFactor&quot;[3S]&quot;insideTessellationFactor&quot;S}'>
<field declared_type='uint16_t*' name='edgeTessellationFactor' type='[3S]'/>
<field declared_type='uint16_t' name='insideTessellationFactor' type='S'/>
</struct>
<struct name='MTLViewport' type='{_MTLViewport=&quot;originX&quot;d&quot;originY&quot;d&quot;width&quot;d&quot;height&quot;d&quot;znear&quot;d&quot;zfar&quot;d}'>
<field declared_type='double' name='originX' type='d'/>
<field declared_type='double' name='originY' type='d'/>
<field declared_type='double' name='width' type='d'/>
<field declared_type='double' name='height' type='d'/>
<field declared_type='double' name='znear' type='d'/>
<field declared_type='double' name='zfar' type='d'/>
</struct>
<constant const='true' declared_type='NSString * _Nonnull' name='MTLCommandBufferErrorDomain' type='@'/>
<constant const='true' declared_type='MTLDeviceNotificationName _Nonnull' name='MTLDeviceRemovalRequestedNotification' type='@'/>
<constant const='true' declared_type='MTLDeviceNotificationName _Nonnull' name='MTLDeviceWasAddedNotification' type='@'/>
<constant const='true' declared_type='MTLDeviceNotificationName _Nonnull' name='MTLDeviceWasRemovedNotification' type='@'/>
<constant const='true' declared_type='NSString * _Nonnull' name='MTLLibraryErrorDomain' type='@'/>
<enum name='MTLArgumentAccessReadOnly' value='0'/>
<enum name='MTLArgumentAccessReadWrite' value='1'/>
<enum name='MTLArgumentAccessWriteOnly' value='2'/>
<enum name='MTLArgumentBuffersTier1' value='0'/>
<enum name='MTLArgumentBuffersTier2' value='1'/>
<enum name='MTLArgumentTypeBuffer' value='0'/>
<enum name='MTLArgumentTypeSampler' value='3'/>
<enum name='MTLArgumentTypeTexture' value='2'/>
<enum name='MTLArgumentTypeThreadgroupMemory' value='1'/>
<enum name='MTLAttributeFormatChar' value='46'/>
<enum name='MTLAttributeFormatChar2' value='4'/>
<enum name='MTLAttributeFormatChar2Normalized' value='10'/>
<enum name='MTLAttributeFormatChar3' value='5'/>
<enum name='MTLAttributeFormatChar3Normalized' value='11'/>
<enum name='MTLAttributeFormatChar4' value='6'/>
<enum name='MTLAttributeFormatChar4Normalized' value='12'/>
<enum name='MTLAttributeFormatCharNormalized' value='48'/>
<enum name='MTLAttributeFormatFloat' value='28'/>
<enum name='MTLAttributeFormatFloat2' value='29'/>
<enum name='MTLAttributeFormatFloat3' value='30'/>
<enum name='MTLAttributeFormatFloat4' value='31'/>
<enum name='MTLAttributeFormatHalf' value='53'/>
<enum name='MTLAttributeFormatHalf2' value='25'/>
<enum name='MTLAttributeFormatHalf3' value='26'/>
<enum name='MTLAttributeFormatHalf4' value='27'/>
<enum name='MTLAttributeFormatInt' value='32'/>
<enum name='MTLAttributeFormatInt1010102Normalized' value='40'/>
<enum name='MTLAttributeFormatInt2' value='33'/>
<enum name='MTLAttributeFormatInt3' value='34'/>
<enum name='MTLAttributeFormatInt4' value='35'/>
<enum name='MTLAttributeFormatInvalid' value='0'/>
<enum name='MTLAttributeFormatShort' value='50'/>
<enum name='MTLAttributeFormatShort2' value='16'/>
<enum name='MTLAttributeFormatShort2Normalized' value='22'/>
<enum name='MTLAttributeFormatShort3' value='17'/>
<enum name='MTLAttributeFormatShort3Normalized' value='23'/>
<enum name='MTLAttributeFormatShort4' value='18'/>
<enum name='MTLAttributeFormatShort4Normalized' value='24'/>
<enum name='MTLAttributeFormatShortNormalized' value='52'/>
<enum name='MTLAttributeFormatUChar' value='45'/>
<enum name='MTLAttributeFormatUChar2' value='1'/>
<enum name='MTLAttributeFormatUChar2Normalized' value='7'/>
<enum name='MTLAttributeFormatUChar3' value='2'/>
<enum name='MTLAttributeFormatUChar3Normalized' value='8'/>
<enum name='MTLAttributeFormatUChar4' value='3'/>
<enum name='MTLAttributeFormatUChar4Normalized' value='9'/>
<enum name='MTLAttributeFormatUChar4Normalized_BGRA' value='42'/>
<enum name='MTLAttributeFormatUCharNormalized' value='47'/>
<enum name='MTLAttributeFormatUInt' value='36'/>
<enum name='MTLAttributeFormatUInt1010102Normalized' value='41'/>
<enum name='MTLAttributeFormatUInt2' value='37'/>
<enum name='MTLAttributeFormatUInt3' value='38'/>
<enum name='MTLAttributeFormatUInt4' value='39'/>
<enum name='MTLAttributeFormatUShort' value='49'/>
<enum name='MTLAttributeFormatUShort2' value='13'/>
<enum name='MTLAttributeFormatUShort2Normalized' value='19'/>
<enum name='MTLAttributeFormatUShort3' value='14'/>
<enum name='MTLAttributeFormatUShort3Normalized' value='20'/>
<enum name='MTLAttributeFormatUShort4' value='15'/>
<enum name='MTLAttributeFormatUShort4Normalized' value='21'/>
<enum name='MTLAttributeFormatUShortNormalized' value='51'/>
<enum name='MTLBlendFactorBlendAlpha' value='13'/>
<enum name='MTLBlendFactorBlendColor' value='11'/>
<enum name='MTLBlendFactorDestinationAlpha' value='8'/>
<enum name='MTLBlendFactorDestinationColor' value='6'/>
<enum name='MTLBlendFactorOne' value='1'/>
<enum name='MTLBlendFactorOneMinusBlendAlpha' value='14'/>
<enum name='MTLBlendFactorOneMinusBlendColor' value='12'/>
<enum name='MTLBlendFactorOneMinusDestinationAlpha' value='9'/>
<enum name='MTLBlendFactorOneMinusDestinationColor' value='7'/>
<enum name='MTLBlendFactorOneMinusSource1Alpha' value='18'/>
<enum name='MTLBlendFactorOneMinusSource1Color' value='16'/>
<enum name='MTLBlendFactorOneMinusSourceAlpha' value='5'/>
<enum name='MTLBlendFactorOneMinusSourceColor' value='3'/>
<enum name='MTLBlendFactorSource1Alpha' value='17'/>
<enum name='MTLBlendFactorSource1Color' value='15'/>
<enum name='MTLBlendFactorSourceAlpha' value='4'/>
<enum name='MTLBlendFactorSourceAlphaSaturated' value='10'/>
<enum name='MTLBlendFactorSourceColor' value='2'/>
<enum name='MTLBlendFactorZero' value='0'/>
<enum name='MTLBlendOperationAdd' value='0'/>
<enum name='MTLBlendOperationMax' value='4'/>
<enum name='MTLBlendOperationMin' value='3'/>
<enum name='MTLBlendOperationReverseSubtract' value='2'/>
<enum name='MTLBlendOperationSubtract' value='1'/>
<enum name='MTLBlitOptionDepthFromDepthStencil' value='1'/>
<enum name='MTLBlitOptionNone' value='0'/>
<enum name='MTLBlitOptionRowLinearPVRTC' value='4'/>
<enum name='MTLBlitOptionStencilFromDepthStencil' value='2'/>
<enum name='MTLCPUCacheModeDefaultCache' value='0'/>
<enum name='MTLCPUCacheModeWriteCombined' value='1'/>
<enum name='MTLColorWriteMaskAll' value='15'/>
<enum name='MTLColorWriteMaskAlpha' value='1'/>
<enum name='MTLColorWriteMaskBlue' value='2'/>
<enum name='MTLColorWriteMaskGreen' value='4'/>
<enum name='MTLColorWriteMaskNone' value='0'/>
<enum name='MTLColorWriteMaskRed' value='8'/>
<enum name='MTLCommandBufferErrorBlacklisted' value='4'/>
<enum name='MTLCommandBufferErrorDeviceRemoved' value='11'/>
<enum name='MTLCommandBufferErrorInternal' value='1'/>
<enum name='MTLCommandBufferErrorInvalidResource' value='9'/>
<enum name='MTLCommandBufferErrorMemoryless' value='10'/>
<enum name='MTLCommandBufferErrorNone' value='0'/>
<enum name='MTLCommandBufferErrorNotPermitted' value='7'/>
<enum name='MTLCommandBufferErrorOutOfMemory' value='8'/>
<enum name='MTLCommandBufferErrorPageFault' value='3'/>
<enum name='MTLCommandBufferErrorTimeout' value='2'/>
<enum name='MTLCommandBufferStatusCommitted' value='2'/>
<enum name='MTLCommandBufferStatusCompleted' value='4'/>
<enum name='MTLCommandBufferStatusEnqueued' value='1'/>
<enum name='MTLCommandBufferStatusError' value='5'/>
<enum name='MTLCommandBufferStatusNotEnqueued' value='0'/>
<enum name='MTLCommandBufferStatusScheduled' value='3'/>
<enum name='MTLCompareFunctionAlways' value='7'/>
<enum name='MTLCompareFunctionEqual' value='2'/>
<enum name='MTLCompareFunctionGreater' value='4'/>
<enum name='MTLCompareFunctionGreaterEqual' value='6'/>
<enum name='MTLCompareFunctionLess' value='1'/>
<enum name='MTLCompareFunctionLessEqual' value='3'/>
<enum name='MTLCompareFunctionNever' value='0'/>
<enum name='MTLCompareFunctionNotEqual' value='5'/>
<enum name='MTLCullModeBack' value='2'/>
<enum name='MTLCullModeFront' value='1'/>
<enum name='MTLCullModeNone' value='0'/>
<enum name='MTLDataTypeArray' value='2'/>
<enum name='MTLDataTypeBool' value='53'/>
<enum name='MTLDataTypeBool2' value='54'/>
<enum name='MTLDataTypeBool3' value='55'/>
<enum name='MTLDataTypeBool4' value='56'/>
<enum name='MTLDataTypeChar' value='45'/>
<enum name='MTLDataTypeChar2' value='46'/>
<enum name='MTLDataTypeChar3' value='47'/>
<enum name='MTLDataTypeChar4' value='48'/>
<enum name='MTLDataTypeFloat' value='3'/>
<enum name='MTLDataTypeFloat2' value='4'/>
<enum name='MTLDataTypeFloat2x2' value='7'/>
<enum name='MTLDataTypeFloat2x3' value='8'/>
<enum name='MTLDataTypeFloat2x4' value='9'/>
<enum name='MTLDataTypeFloat3' value='5'/>
<enum name='MTLDataTypeFloat3x2' value='10'/>
<enum name='MTLDataTypeFloat3x3' value='11'/>
<enum name='MTLDataTypeFloat3x4' value='12'/>
<enum name='MTLDataTypeFloat4' value='6'/>
<enum name='MTLDataTypeFloat4x2' value='13'/>
<enum name='MTLDataTypeFloat4x3' value='14'/>
<enum name='MTLDataTypeFloat4x4' value='15'/>
<enum name='MTLDataTypeHalf' value='16'/>
<enum name='MTLDataTypeHalf2' value='17'/>
<enum name='MTLDataTypeHalf2x2' value='20'/>
<enum name='MTLDataTypeHalf2x3' value='21'/>
<enum name='MTLDataTypeHalf2x4' value='22'/>
<enum name='MTLDataTypeHalf3' value='18'/>
<enum name='MTLDataTypeHalf3x2' value='23'/>
<enum name='MTLDataTypeHalf3x3' value='24'/>
<enum name='MTLDataTypeHalf3x4' value='25'/>
<enum name='MTLDataTypeHalf4' value='19'/>
<enum name='MTLDataTypeHalf4x2' value='26'/>
<enum name='MTLDataTypeHalf4x3' value='27'/>
<enum name='MTLDataTypeHalf4x4' value='28'/>
<enum name='MTLDataTypeInt' value='29'/>
<enum name='MTLDataTypeInt2' value='30'/>
<enum name='MTLDataTypeInt3' value='31'/>
<enum name='MTLDataTypeInt4' value='32'/>
<enum name='MTLDataTypeNone' value='0'/>
<enum name='MTLDataTypePointer' value='60'/>
<enum name='MTLDataTypeSampler' value='59'/>
<enum name='MTLDataTypeShort' value='37'/>
<enum name='MTLDataTypeShort2' value='38'/>
<enum name='MTLDataTypeShort3' value='39'/>
<enum name='MTLDataTypeShort4' value='40'/>
<enum name='MTLDataTypeStruct' value='1'/>
<enum name='MTLDataTypeTexture' value='58'/>
<enum name='MTLDataTypeUChar' value='49'/>
<enum name='MTLDataTypeUChar2' value='50'/>
<enum name='MTLDataTypeUChar3' value='51'/>
<enum name='MTLDataTypeUChar4' value='52'/>
<enum name='MTLDataTypeUInt' value='33'/>
<enum name='MTLDataTypeUInt2' value='34'/>
<enum name='MTLDataTypeUInt3' value='35'/>
<enum name='MTLDataTypeUInt4' value='36'/>
<enum name='MTLDataTypeUShort' value='41'/>
<enum name='MTLDataTypeUShort2' value='42'/>
<enum name='MTLDataTypeUShort3' value='43'/>
<enum name='MTLDataTypeUShort4' value='44'/>
<enum name='MTLDepthClipModeClamp' value='1'/>
<enum name='MTLDepthClipModeClip' value='0'/>
<enum name='MTLFeatureSet_OSX_GPUFamily1_v1' value='10000'/>
<enum name='MTLFeatureSet_OSX_GPUFamily1_v2' value='10001'/>
<enum name='MTLFeatureSet_OSX_ReadWriteTextureTier2' value='10002'/>
<enum name='MTLFeatureSet_TVOS_GPUFamily1_v1' value='30000'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v1' value='0'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v2' value='2'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v3' value='5'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v4' value='8'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v1' value='1'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v2' value='3'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v3' value='6'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v4' value='9'/>
<enum name='MTLFeatureSet_iOS_GPUFamily3_v1' value='4'/>
<enum name='MTLFeatureSet_iOS_GPUFamily3_v2' value='7'/>
<enum name='MTLFeatureSet_iOS_GPUFamily3_v3' value='10'/>
<enum name='MTLFeatureSet_macOS_GPUFamily1_v1' value='10000'/>
<enum name='MTLFeatureSet_macOS_GPUFamily1_v2' value='10001'/>
<enum name='MTLFeatureSet_macOS_GPUFamily1_v3' value='10003'/>
<enum name='MTLFeatureSet_macOS_ReadWriteTextureTier2' value='10002'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily1_v1' value='30000'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily1_v2' value='30001'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily1_v3' value='30002'/>
<enum name='MTLFunctionTypeFragment' value='2'/>
<enum name='MTLFunctionTypeKernel' value='3'/>
<enum name='MTLFunctionTypeVertex' value='1'/>
<enum name='MTLIndexTypeUInt16' value='0'/>
<enum name='MTLIndexTypeUInt32' value='1'/>
<enum name='MTLLanguageVersion1_0' value='65536'/>
<enum name='MTLLanguageVersion1_1' value='65537'/>
<enum name='MTLLanguageVersion1_2' value='65538'/>
<enum name='MTLLanguageVersion2_0' value='131072'/>
<enum name='MTLLibraryErrorCompileFailure' value='3'/>
<enum name='MTLLibraryErrorCompileWarning' value='4'/>
<enum name='MTLLibraryErrorFileNotFound' value='6'/>
<enum name='MTLLibraryErrorFunctionNotFound' value='5'/>
<enum name='MTLLibraryErrorInternal' value='2'/>
<enum name='MTLLibraryErrorUnsupported' value='1'/>
<enum name='MTLLoadActionClear' value='2'/>
<enum name='MTLLoadActionDontCare' value='0'/>
<enum name='MTLLoadActionLoad' value='1'/>
<enum name='MTLMutabilityDefault' value='0'/>
<enum name='MTLMutabilityImmutable' value='2'/>
<enum name='MTLMutabilityMutable' value='1'/>
<enum name='MTLPatchTypeNone' value='0'/>
<enum name='MTLPatchTypeQuad' value='2'/>
<enum name='MTLPatchTypeTriangle' value='1'/>
<enum name='MTLPipelineOptionArgumentInfo' value='1'/>
<enum name='MTLPipelineOptionBufferTypeInfo' value='2'/>
<enum name='MTLPipelineOptionNone' value='0'/>
<enum name='MTLPixelFormatA1BGR5Unorm' value='41'/>
<enum name='MTLPixelFormatA8Unorm' value='1'/>
<enum name='MTLPixelFormatABGR4Unorm' value='42'/>
<enum name='MTLPixelFormatASTC_10x10_LDR' value='216'/>
<enum name='MTLPixelFormatASTC_10x10_sRGB' value='198'/>
<enum name='MTLPixelFormatASTC_10x5_LDR' value='213'/>
<enum name='MTLPixelFormatASTC_10x5_sRGB' value='195'/>
<enum name='MTLPixelFormatASTC_10x6_LDR' value='214'/>
<enum name='MTLPixelFormatASTC_10x6_sRGB' value='196'/>
<enum name='MTLPixelFormatASTC_10x8_LDR' value='215'/>
<enum name='MTLPixelFormatASTC_10x8_sRGB' value='197'/>
<enum name='MTLPixelFormatASTC_12x10_LDR' value='217'/>
<enum name='MTLPixelFormatASTC_12x10_sRGB' value='199'/>
<enum name='MTLPixelFormatASTC_12x12_LDR' value='218'/>
<enum name='MTLPixelFormatASTC_12x12_sRGB' value='200'/>
<enum name='MTLPixelFormatASTC_4x4_LDR' value='204'/>
<enum name='MTLPixelFormatASTC_4x4_sRGB' value='186'/>
<enum name='MTLPixelFormatASTC_5x4_LDR' value='205'/>
<enum name='MTLPixelFormatASTC_5x4_sRGB' value='187'/>
<enum name='MTLPixelFormatASTC_5x5_LDR' value='206'/>
<enum name='MTLPixelFormatASTC_5x5_sRGB' value='188'/>
<enum name='MTLPixelFormatASTC_6x5_LDR' value='207'/>
<enum name='MTLPixelFormatASTC_6x5_sRGB' value='189'/>
<enum name='MTLPixelFormatASTC_6x6_LDR' value='208'/>
<enum name='MTLPixelFormatASTC_6x6_sRGB' value='190'/>
<enum name='MTLPixelFormatASTC_8x5_LDR' value='210'/>
<enum name='MTLPixelFormatASTC_8x5_sRGB' value='192'/>
<enum name='MTLPixelFormatASTC_8x6_LDR' value='211'/>
<enum name='MTLPixelFormatASTC_8x6_sRGB' value='193'/>
<enum name='MTLPixelFormatASTC_8x8_LDR' value='212'/>
<enum name='MTLPixelFormatASTC_8x8_sRGB' value='194'/>
<enum name='MTLPixelFormatB5G6R5Unorm' value='40'/>
<enum name='MTLPixelFormatBC1_RGBA' value='130'/>
<enum name='MTLPixelFormatBC1_RGBA_sRGB' value='131'/>
<enum name='MTLPixelFormatBC2_RGBA' value='132'/>
<enum name='MTLPixelFormatBC2_RGBA_sRGB' value='133'/>
<enum name='MTLPixelFormatBC3_RGBA' value='134'/>
<enum name='MTLPixelFormatBC3_RGBA_sRGB' value='135'/>
<enum name='MTLPixelFormatBC4_RSnorm' value='141'/>
<enum name='MTLPixelFormatBC4_RUnorm' value='140'/>
<enum name='MTLPixelFormatBC5_RGSnorm' value='143'/>
<enum name='MTLPixelFormatBC5_RGUnorm' value='142'/>
<enum name='MTLPixelFormatBC6H_RGBFloat' value='150'/>
<enum name='MTLPixelFormatBC6H_RGBUfloat' value='151'/>
<enum name='MTLPixelFormatBC7_RGBAUnorm' value='152'/>
<enum name='MTLPixelFormatBC7_RGBAUnorm_sRGB' value='153'/>
<enum name='MTLPixelFormatBGR10A2Unorm' value='94'/>
<enum name='MTLPixelFormatBGR10_XR' value='554'/>
<enum name='MTLPixelFormatBGR10_XR_sRGB' value='555'/>
<enum name='MTLPixelFormatBGR5A1Unorm' value='43'/>
<enum name='MTLPixelFormatBGRA10_XR' value='552'/>
<enum name='MTLPixelFormatBGRA10_XR_sRGB' value='553'/>
<enum name='MTLPixelFormatBGRA8Unorm' value='80'/>
<enum name='MTLPixelFormatBGRA8Unorm_sRGB' value='81'/>
<enum name='MTLPixelFormatBGRG422' value='241'/>
<enum name='MTLPixelFormatDepth16Unorm' value='250'/>
<enum name='MTLPixelFormatDepth24Unorm_Stencil8' value='255'/>
<enum name='MTLPixelFormatDepth32Float' value='252'/>
<enum name='MTLPixelFormatDepth32Float_Stencil8' value='260'/>
<enum name='MTLPixelFormatEAC_R11Snorm' value='172'/>
<enum name='MTLPixelFormatEAC_R11Unorm' value='170'/>
<enum name='MTLPixelFormatEAC_RG11Snorm' value='176'/>
<enum name='MTLPixelFormatEAC_RG11Unorm' value='174'/>
<enum name='MTLPixelFormatEAC_RGBA8' value='178'/>
<enum name='MTLPixelFormatEAC_RGBA8_sRGB' value='179'/>
<enum name='MTLPixelFormatETC2_RGB8' value='180'/>
<enum name='MTLPixelFormatETC2_RGB8A1' value='182'/>
<enum name='MTLPixelFormatETC2_RGB8A1_sRGB' value='183'/>
<enum name='MTLPixelFormatETC2_RGB8_sRGB' value='181'/>
<enum name='MTLPixelFormatGBGR422' value='240'/>
<enum name='MTLPixelFormatInvalid' value='0'/>
<enum name='MTLPixelFormatPVRTC_RGBA_2BPP' value='164'/>
<enum name='MTLPixelFormatPVRTC_RGBA_2BPP_sRGB' value='165'/>
<enum name='MTLPixelFormatPVRTC_RGBA_4BPP' value='166'/>
<enum name='MTLPixelFormatPVRTC_RGBA_4BPP_sRGB' value='167'/>
<enum name='MTLPixelFormatPVRTC_RGB_2BPP' value='160'/>
<enum name='MTLPixelFormatPVRTC_RGB_2BPP_sRGB' value='161'/>
<enum name='MTLPixelFormatPVRTC_RGB_4BPP' value='162'/>
<enum name='MTLPixelFormatPVRTC_RGB_4BPP_sRGB' value='163'/>
<enum name='MTLPixelFormatR16Float' value='25'/>
<enum name='MTLPixelFormatR16Sint' value='24'/>
<enum name='MTLPixelFormatR16Snorm' value='22'/>
<enum name='MTLPixelFormatR16Uint' value='23'/>
<enum name='MTLPixelFormatR16Unorm' value='20'/>
<enum name='MTLPixelFormatR32Float' value='55'/>
<enum name='MTLPixelFormatR32Sint' value='54'/>
<enum name='MTLPixelFormatR32Uint' value='53'/>
<enum name='MTLPixelFormatR8Sint' value='14'/>
<enum name='MTLPixelFormatR8Snorm' value='12'/>
<enum name='MTLPixelFormatR8Uint' value='13'/>
<enum name='MTLPixelFormatR8Unorm' value='10'/>
<enum name='MTLPixelFormatR8Unorm_sRGB' value='11'/>
<enum name='MTLPixelFormatRG11B10Float' value='92'/>
<enum name='MTLPixelFormatRG16Float' value='65'/>
<enum name='MTLPixelFormatRG16Sint' value='64'/>
<enum name='MTLPixelFormatRG16Snorm' value='62'/>
<enum name='MTLPixelFormatRG16Uint' value='63'/>
<enum name='MTLPixelFormatRG16Unorm' value='60'/>
<enum name='MTLPixelFormatRG32Float' value='105'/>
<enum name='MTLPixelFormatRG32Sint' value='104'/>
<enum name='MTLPixelFormatRG32Uint' value='103'/>
<enum name='MTLPixelFormatRG8Sint' value='34'/>
<enum name='MTLPixelFormatRG8Snorm' value='32'/>
<enum name='MTLPixelFormatRG8Uint' value='33'/>
<enum name='MTLPixelFormatRG8Unorm' value='30'/>
<enum name='MTLPixelFormatRG8Unorm_sRGB' value='31'/>
<enum name='MTLPixelFormatRGB10A2Uint' value='91'/>
<enum name='MTLPixelFormatRGB10A2Unorm' value='90'/>
<enum name='MTLPixelFormatRGB9E5Float' value='93'/>
<enum name='MTLPixelFormatRGBA16Float' value='115'/>
<enum name='MTLPixelFormatRGBA16Sint' value='114'/>
<enum name='MTLPixelFormatRGBA16Snorm' value='112'/>
<enum name='MTLPixelFormatRGBA16Uint' value='113'/>
<enum name='MTLPixelFormatRGBA16Unorm' value='110'/>
<enum name='MTLPixelFormatRGBA32Float' value='125'/>
<enum name='MTLPixelFormatRGBA32Sint' value='124'/>
<enum name='MTLPixelFormatRGBA32Uint' value='123'/>
<enum name='MTLPixelFormatRGBA8Sint' value='74'/>
<enum name='MTLPixelFormatRGBA8Snorm' value='72'/>
<enum name='MTLPixelFormatRGBA8Uint' value='73'/>
<enum name='MTLPixelFormatRGBA8Unorm' value='70'/>
<enum name='MTLPixelFormatRGBA8Unorm_sRGB' value='71'/>
<enum name='MTLPixelFormatStencil8' value='253'/>
<enum name='MTLPixelFormatX24_Stencil8' value='262'/>
<enum name='MTLPixelFormatX32_Stencil8' value='261'/>
<enum name='MTLPrimitiveTopologyClassLine' value='2'/>
<enum name='MTLPrimitiveTopologyClassPoint' value='1'/>
<enum name='MTLPrimitiveTopologyClassTriangle' value='3'/>
<enum name='MTLPrimitiveTopologyClassUnspecified' value='0'/>
<enum name='MTLPrimitiveTypeLine' value='1'/>
<enum name='MTLPrimitiveTypeLineStrip' value='2'/>
<enum name='MTLPrimitiveTypePoint' value='0'/>
<enum name='MTLPrimitiveTypeTriangle' value='3'/>
<enum name='MTLPrimitiveTypeTriangleStrip' value='4'/>
<enum name='MTLPurgeableStateEmpty' value='4'/>
<enum name='MTLPurgeableStateKeepCurrent' value='1'/>
<enum name='MTLPurgeableStateNonVolatile' value='2'/>
<enum name='MTLPurgeableStateVolatile' value='3'/>
<enum name='MTLReadWriteTextureTier1' value='1'/>
<enum name='MTLReadWriteTextureTier2' value='2'/>
<enum name='MTLReadWriteTextureTierNone' value='0'/>
<enum name='MTLRenderStageFragment' value='2'/>
<enum name='MTLRenderStageVertex' value='1'/>
<enum name='MTLResourceCPUCacheModeDefaultCache' value='0'/>
<enum name='MTLResourceCPUCacheModeMask' value='15'/>
<enum name='MTLResourceCPUCacheModeShift' value='0'/>
<enum name='MTLResourceCPUCacheModeWriteCombined' value='1'/>
<enum name='MTLResourceHazardTrackingModeMask' value='256'/>
<enum name='MTLResourceHazardTrackingModeShift' value='8'/>
<enum name='MTLResourceHazardTrackingModeUntracked' value='256'/>
<enum name='MTLResourceOptionCPUCacheModeDefault' value='0'/>
<enum name='MTLResourceOptionCPUCacheModeWriteCombined' value='1'/>
<enum name='MTLResourceStorageModeManaged' value='16'/>
<enum name='MTLResourceStorageModeMask' value='240'/>
<enum name='MTLResourceStorageModeMemoryless' value='48'/>
<enum name='MTLResourceStorageModePrivate' value='32'/>
<enum name='MTLResourceStorageModeShared' value='0'/>
<enum name='MTLResourceStorageModeShift' value='4'/>
<enum name='MTLResourceUsageRead' value='1'/>
<enum name='MTLResourceUsageSample' value='4'/>
<enum name='MTLResourceUsageWrite' value='2'/>
<enum name='MTLSamplerAddressModeClampToBorderColor' value='5'/>
<enum name='MTLSamplerAddressModeClampToEdge' value='0'/>
<enum name='MTLSamplerAddressModeClampToZero' value='4'/>
<enum name='MTLSamplerAddressModeMirrorClampToEdge' value='1'/>
<enum name='MTLSamplerAddressModeMirrorRepeat' value='3'/>
<enum name='MTLSamplerAddressModeRepeat' value='2'/>
<enum name='MTLSamplerBorderColorOpaqueBlack' value='1'/>
<enum name='MTLSamplerBorderColorOpaqueWhite' value='2'/>
<enum name='MTLSamplerBorderColorTransparentBlack' value='0'/>
<enum name='MTLSamplerMinMagFilterLinear' value='1'/>
<enum name='MTLSamplerMinMagFilterNearest' value='0'/>
<enum name='MTLSamplerMipFilterLinear' value='2'/>
<enum name='MTLSamplerMipFilterNearest' value='1'/>
<enum name='MTLSamplerMipFilterNotMipmapped' value='0'/>
<enum name='MTLStencilOperationDecrementClamp' value='4'/>
<enum name='MTLStencilOperationDecrementWrap' value='7'/>
<enum name='MTLStencilOperationIncrementClamp' value='3'/>
<enum name='MTLStencilOperationIncrementWrap' value='6'/>
<enum name='MTLStencilOperationInvert' value='5'/>
<enum name='MTLStencilOperationKeep' value='0'/>
<enum name='MTLStencilOperationReplace' value='2'/>
<enum name='MTLStencilOperationZero' value='1'/>
<enum name='MTLStepFunctionConstant' value='0'/>
<enum name='MTLStepFunctionPerInstance' value='2'/>
<enum name='MTLStepFunctionPerPatch' value='3'/>
<enum name='MTLStepFunctionPerPatchControlPoint' value='4'/>
<enum name='MTLStepFunctionPerVertex' value='1'/>
<enum name='MTLStepFunctionThreadPositionInGridX' value='5'/>
<enum name='MTLStepFunctionThreadPositionInGridXIndexed' value='7'/>
<enum name='MTLStepFunctionThreadPositionInGridY' value='6'/>
<enum name='MTLStepFunctionThreadPositionInGridYIndexed' value='8'/>
<enum name='MTLStorageModeManaged' value='1'/>
<enum name='MTLStorageModeMemoryless' value='3'/>
<enum name='MTLStorageModePrivate' value='2'/>
<enum name='MTLStorageModeShared' value='0'/>
<enum name='MTLStoreActionCustomSampleDepthStore' value='5'/>
<enum name='MTLStoreActionDontCare' value='0'/>
<enum name='MTLStoreActionMultisampleResolve' value='2'/>
<enum name='MTLStoreActionOptionCustomSamplePositions' value='1'/>
<enum name='MTLStoreActionOptionNone' value='0'/>
<enum name='MTLStoreActionStore' value='1'/>
<enum name='MTLStoreActionStoreAndMultisampleResolve' value='3'/>
<enum name='MTLStoreActionUnknown' value='4'/>
<enum name='MTLTessellationControlPointIndexTypeNone' value='0'/>
<enum name='MTLTessellationControlPointIndexTypeUInt16' value='1'/>
<enum name='MTLTessellationControlPointIndexTypeUInt32' value='2'/>
<enum name='MTLTessellationFactorFormatHalf' value='0'/>
<enum name='MTLTessellationFactorStepFunctionConstant' value='0'/>
<enum name='MTLTessellationFactorStepFunctionPerInstance' value='2'/>
<enum name='MTLTessellationFactorStepFunctionPerPatch' value='1'/>
<enum name='MTLTessellationFactorStepFunctionPerPatchAndPerInstance' value='3'/>
<enum name='MTLTessellationPartitionModeFractionalEven' value='3'/>
<enum name='MTLTessellationPartitionModeFractionalOdd' value='2'/>
<enum name='MTLTessellationPartitionModeInteger' value='1'/>
<enum name='MTLTessellationPartitionModePow2' value='0'/>
<enum name='MTLTextureType1D' value='0'/>
<enum name='MTLTextureType1DArray' value='1'/>
<enum name='MTLTextureType2D' value='2'/>
<enum name='MTLTextureType2DArray' value='3'/>
<enum name='MTLTextureType2DMultisample' value='4'/>
<enum name='MTLTextureType3D' value='7'/>
<enum name='MTLTextureTypeCube' value='5'/>
<enum name='MTLTextureTypeCubeArray' value='6'/>
<enum name='MTLTextureUsagePixelFormatView' value='16'/>
<enum name='MTLTextureUsageRenderTarget' value='4'/>
<enum name='MTLTextureUsageShaderRead' value='1'/>
<enum name='MTLTextureUsageShaderWrite' value='2'/>
<enum name='MTLTextureUsageUnknown' value='0'/>
<enum name='MTLTriangleFillModeFill' value='0'/>
<enum name='MTLTriangleFillModeLines' value='1'/>
<enum name='MTLVertexFormatChar' value='46'/>
<enum name='MTLVertexFormatChar2' value='4'/>
<enum name='MTLVertexFormatChar2Normalized' value='10'/>
<enum name='MTLVertexFormatChar3' value='5'/>
<enum name='MTLVertexFormatChar3Normalized' value='11'/>
<enum name='MTLVertexFormatChar4' value='6'/>
<enum name='MTLVertexFormatChar4Normalized' value='12'/>
<enum name='MTLVertexFormatCharNormalized' value='48'/>
<enum name='MTLVertexFormatFloat' value='28'/>
<enum name='MTLVertexFormatFloat2' value='29'/>
<enum name='MTLVertexFormatFloat3' value='30'/>
<enum name='MTLVertexFormatFloat4' value='31'/>
<enum name='MTLVertexFormatHalf' value='53'/>
<enum name='MTLVertexFormatHalf2' value='25'/>
<enum name='MTLVertexFormatHalf3' value='26'/>
<enum name='MTLVertexFormatHalf4' value='27'/>
<enum name='MTLVertexFormatInt' value='32'/>
<enum name='MTLVertexFormatInt1010102Normalized' value='40'/>
<enum name='MTLVertexFormatInt2' value='33'/>
<enum name='MTLVertexFormatInt3' value='34'/>
<enum name='MTLVertexFormatInt4' value='35'/>
<enum name='MTLVertexFormatInvalid' value='0'/>
<enum name='MTLVertexFormatShort' value='50'/>
<enum name='MTLVertexFormatShort2' value='16'/>
<enum name='MTLVertexFormatShort2Normalized' value='22'/>
<enum name='MTLVertexFormatShort3' value='17'/>
<enum name='MTLVertexFormatShort3Normalized' value='23'/>
<enum name='MTLVertexFormatShort4' value='18'/>
<enum name='MTLVertexFormatShort4Normalized' value='24'/>
<enum name='MTLVertexFormatShortNormalized' value='52'/>
<enum name='MTLVertexFormatUChar' value='45'/>
<enum name='MTLVertexFormatUChar2' value='1'/>
<enum name='MTLVertexFormatUChar2Normalized' value='7'/>
<enum name='MTLVertexFormatUChar3' value='2'/>
<enum name='MTLVertexFormatUChar3Normalized' value='8'/>
<enum name='MTLVertexFormatUChar4' value='3'/>
<enum name='MTLVertexFormatUChar4Normalized' value='9'/>
<enum name='MTLVertexFormatUChar4Normalized_BGRA' value='42'/>
<enum name='MTLVertexFormatUCharNormalized' value='47'/>
<enum name='MTLVertexFormatUInt' value='36'/>
<enum name='MTLVertexFormatUInt1010102Normalized' value='41'/>
<enum name='MTLVertexFormatUInt2' value='37'/>
<enum name='MTLVertexFormatUInt3' value='38'/>
<enum name='MTLVertexFormatUInt4' value='39'/>
<enum name='MTLVertexFormatUShort' value='49'/>
<enum name='MTLVertexFormatUShort2' value='13'/>
<enum name='MTLVertexFormatUShort2Normalized' value='19'/>
<enum name='MTLVertexFormatUShort3' value='14'/>
<enum name='MTLVertexFormatUShort3Normalized' value='20'/>
<enum name='MTLVertexFormatUShort4' value='15'/>
<enum name='MTLVertexFormatUShort4Normalized' value='21'/>
<enum name='MTLVertexFormatUShortNormalized' value='51'/>
<enum name='MTLVertexStepFunctionConstant' value='0'/>
<enum name='MTLVertexStepFunctionPerInstance' value='2'/>
<enum name='MTLVertexStepFunctionPerPatch' value='3'/>
<enum name='MTLVertexStepFunctionPerPatchControlPoint' value='4'/>
<enum name='MTLVertexStepFunctionPerVertex' value='1'/>
<enum name='MTLVisibilityResultModeBoolean' value='1'/>
<enum name='MTLVisibilityResultModeCounting' value='2'/>
<enum name='MTLVisibilityResultModeDisabled' value='0'/>
<enum name='MTLWindingClockwise' value='0'/>
<enum name='MTLWindingCounterClockwise' value='1'/>
<function inline='true' name='MTLClearColorMake'>
<arg declared_type='double' name='red' type='d'/>
<arg declared_type='double' name='green' type='d'/>
<arg declared_type='double' name='blue' type='d'/>
<arg declared_type='double' name='alpha' type='d'/>
<retval declared_type='MTLClearColor' type='{_MTLClearColor=dddd}'/>
</function>
<function name='MTLCopyAllDevices'>
<retval already_retained='true' declared_type='NSArray&gt; * _Nonnull' type='@'/>
</function>
<function name='MTLCopyAllDevicesWithObserver'>
<arg declared_type='id _Nullable * _Nonnull' name='observer' type='^@'/>
<arg declared_type='MTLDeviceNotificationHandler _Nonnull' function_pointer='true' name='handler' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<arg declared_type='MTLDeviceNotificationName _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval already_retained='true' declared_type='NSArray&gt; * _Nonnull' type='@'/>
</function>
<function name='MTLCreateSystemDefaultDevice'>
<retval already_retained='true' declared_type='id _Nullable' type='@'/>
</function>
<function inline='true' name='MTLOriginMake'>
<arg declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='z' type='I' type64='Q'/>
<retval declared_type='MTLOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
</function>
<function inline='true' name='MTLRegionMake1D'>
<arg declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='width' type='I' type64='Q'/>
<retval declared_type='MTLRegion' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
</function>
<function inline='true' name='MTLRegionMake2D'>
<arg declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='width' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='height' type='I' type64='Q'/>
<retval declared_type='MTLRegion' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
</function>
<function inline='true' name='MTLRegionMake3D'>
<arg declared_type='NSUInteger' name='x' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='y' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='z' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='width' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='height' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='depth' type='I' type64='Q'/>
<retval declared_type='MTLRegion' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
</function>
<function name='MTLRemoveDeviceObserver'>
<arg declared_type='id _Nonnull' name='observer' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function inline='true' name='MTLSamplePositionMake'>
<arg declared_type='float' name='x' type='f'/>
<arg declared_type='float' name='y' type='f'/>
<retval declared_type='MTLSamplePosition' type='{_MTLSamplePosition=ff}'/>
</function>
<function inline='true' name='MTLSizeMake'>
<arg declared_type='NSUInteger' name='width' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='height' type='I' type64='Q'/>
<arg declared_type='NSUInteger' name='depth' type='I' type64='Q'/>
<retval declared_type='MTLSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
</function>
<class name='MTLArgument'>
<method selector='access'>
<retval declared_type='MTLArgumentAccess' type='I' type64='Q'/>
</method>
<method selector='arrayLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferAlignment'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferDataSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferDataType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
<method selector='bufferPointerType'>
<retval declared_type='MTLPointerType * _Nullable' type='@'/>
</method>
<method selector='bufferStructType'>
<retval declared_type='MTLStructType * _Nonnull' type='@'/>
</method>
<method selector='index'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDepthTexture'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='textureDataType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
<method selector='textureType'>
<retval declared_type='MTLTextureType' type='I' type64='Q'/>
</method>
<method selector='threadgroupMemoryAlignment'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='threadgroupMemoryDataSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='type'>
<retval declared_type='MTLArgumentType' type='I' type64='Q'/>
</method>
</class>
<class name='MTLArgumentDescriptor'>
<method selector='access'>
<retval declared_type='MTLArgumentAccess' type='I' type64='Q'/>
</method>
<method class_method='true' selector='argumentDescriptor'>
<retval declared_type='MTLArgumentDescriptor * _Nonnull' type='@'/>
</method>
<method selector='arrayLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='constantBlockAlignment'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='dataType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
<method selector='index'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setAccess:'>
<arg declared_type='MTLArgumentAccess' index='0' name='access' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrayLength:'>
<arg declared_type='NSUInteger' index='0' name='arrayLength' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstantBlockAlignment:'>
<arg declared_type='NSUInteger' index='0' name='constantBlockAlignment' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataType:'>
<arg declared_type='MTLDataType' index='0' name='dataType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureType:'>
<arg declared_type='MTLTextureType' index='0' name='textureType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureType'>
<retval declared_type='MTLTextureType' type='I' type64='Q'/>
</method>
</class>
<class name='MTLArrayType'>
<method selector='argumentIndexStride'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='arrayLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='elementArrayType'>
<retval declared_type='MTLArrayType * _Nullable' type='@'/>
</method>
<method selector='elementPointerType'>
<retval declared_type='MTLPointerType * _Nullable' type='@'/>
</method>
<method selector='elementStructType'>
<retval declared_type='MTLStructType * _Nullable' type='@'/>
</method>
<method selector='elementTextureReferenceType'>
<retval declared_type='MTLTextureReferenceType * _Nullable' type='@'/>
</method>
<method selector='elementType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
<method selector='stride'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='MTLAttribute'>
<method selector='attributeIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='attributeType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPatchControlPointData'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPatchData'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='MTLAttributeDescriptor'>
<method selector='bufferIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='format'>
<retval declared_type='MTLAttributeFormat' type='I' type64='Q'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setBufferIndex:'>
<arg declared_type='NSUInteger' index='0' name='bufferIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormat:'>
<arg declared_type='MTLAttributeFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLAttributeDescriptorArray'>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='MTLAttributeDescriptor * _Nonnull' type='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type='MTLAttributeDescriptor * _Nullable' index='0' name='attributeDesc' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLBufferLayoutDescriptor'>
<method selector='setStepFunction:'>
<arg declared_type='MTLStepFunction' index='0' name='stepFunction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStepRate:'>
<arg declared_type='NSUInteger' index='0' name='stepRate' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStride:'>
<arg declared_type='NSUInteger' index='0' name='stride' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stepFunction'>
<retval declared_type='MTLStepFunction' type='I' type64='Q'/>
</method>
<method selector='stepRate'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='stride'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='MTLBufferLayoutDescriptorArray'>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='MTLBufferLayoutDescriptor * _Nonnull' type='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type='MTLBufferLayoutDescriptor * _Nullable' index='0' name='bufferDesc' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLCaptureManager'>
<method selector='defaultCaptureScope'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isCapturing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='newCaptureScopeWithCommandQueue:'>
<arg declared_type='id _Nonnull' index='0' name='commandQueue' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newCaptureScopeWithDevice:'>
<arg declared_type='id _Nonnull' index='0' name='device' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='setDefaultCaptureScope:'>
<arg declared_type='id _Nullable' index='0' name='defaultCaptureScope' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedCaptureManager'>
<retval declared_type='MTLCaptureManager * _Nonnull' type='@'/>
</method>
<method selector='startCaptureWithCommandQueue:'>
<arg declared_type='id _Nonnull' index='0' name='commandQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startCaptureWithDevice:'>
<arg declared_type='id _Nonnull' index='0' name='device' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startCaptureWithScope:'>
<arg declared_type='id _Nonnull' index='0' name='captureScope' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopCapture'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLCompileOptions'>
<method selector='fastMathEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='languageVersion'>
<retval declared_type='MTLLanguageVersion' type='I' type64='Q'/>
</method>
<method selector='preprocessorMacros'>
<retval declared_type='NSDictionary * _Nullable' type='@'/>
</method>
<method selector='setFastMathEnabled:'>
<arg declared_type='BOOL' index='0' name='fastMathEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLanguageVersion:'>
<arg declared_type='MTLLanguageVersion' index='0' name='languageVersion' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreprocessorMacros:'>
<arg declared_type='NSDictionary * _Nullable' index='0' name='preprocessorMacros' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLComputePipelineDescriptor'>
<method selector='buffers'>
<retval declared_type='MTLPipelineBufferDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='computeFunction'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setComputeFunction:'>
<arg declared_type='id _Nullable' index='0' name='computeFunction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStageInputDescriptor:'>
<arg declared_type='MTLStageInputOutputDescriptor * _Nullable' index='0' name='stageInputDescriptor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setThreadGroupSizeIsMultipleOfThreadExecutionWidth:'>
<arg declared_type='BOOL' index='0' name='threadGroupSizeIsMultipleOfThreadExecutionWidth' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stageInputDescriptor'>
<retval declared_type='MTLStageInputOutputDescriptor * _Nullable' type='@'/>
</method>
<method selector='threadGroupSizeIsMultipleOfThreadExecutionWidth'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='MTLComputePipelineReflection'>
<method selector='arguments'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='MTLDepthStencilDescriptor'>
<method selector='backFaceStencil'>
<retval declared_type='MTLStencilDescriptor * _Nonnull' type='@'/>
</method>
<method selector='depthCompareFunction'>
<retval declared_type='MTLCompareFunction' type='I' type64='Q'/>
</method>
<method selector='frontFaceStencil'>
<retval declared_type='MTLStencilDescriptor * _Nonnull' type='@'/>
</method>
<method selector='isDepthWriteEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setBackFaceStencil:'>
<arg declared_type='MTLStencilDescriptor * _Nullable' index='0' name='backFaceStencil' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthCompareFunction:'>
<arg declared_type='MTLCompareFunction' index='0' name='depthCompareFunction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthWriteEnabled:'>
<arg declared_type='BOOL' index='0' name='depthWriteEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrontFaceStencil:'>
<arg declared_type='MTLStencilDescriptor * _Nullable' index='0' name='frontFaceStencil' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLFunctionConstant'>
<method selector='index'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='required'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='type'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
</class>
<class name='MTLFunctionConstantValues'>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstantValue:type:atIndex:'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='value' type='^v'/>
<arg declared_type='MTLDataType' index='1' name='type' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstantValue:type:withName:'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='value' type='^v'/>
<arg declared_type='MTLDataType' index='1' name='type' type='I' type64='Q'/>
<arg declared_type='NSString * _Nonnull' index='2' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstantValues:type:withRange:'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='values' type='^v'/>
<arg declared_type='MTLDataType' index='1' name='type' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLHeapDescriptor'>
<method selector='cpuCacheMode'>
<retval declared_type='MTLCPUCacheMode' type='I' type64='Q'/>
</method>
<method selector='setCpuCacheMode:'>
<arg declared_type='MTLCPUCacheMode' index='0' name='cpuCacheMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg declared_type='NSUInteger' index='0' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStorageMode:'>
<arg declared_type='MTLStorageMode' index='0' name='storageMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='storageMode'>
<retval declared_type='MTLStorageMode' type='I' type64='Q'/>
</method>
</class>
<class name='MTLPipelineBufferDescriptor'>
<method selector='mutability'>
<retval declared_type='MTLMutability' type='I' type64='Q'/>
</method>
<method selector='setMutability:'>
<arg declared_type='MTLMutability' index='0' name='mutability' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLPipelineBufferDescriptorArray'>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='bufferIndex' type='I' type64='Q'/>
<retval declared_type='MTLPipelineBufferDescriptor * _Nonnull' type='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type='MTLPipelineBufferDescriptor * _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='bufferIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLPointerType'>
<method selector='access'>
<retval declared_type='MTLArgumentAccess' type='I' type64='Q'/>
</method>
<method selector='alignment'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='dataSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='elementArrayType'>
<retval declared_type='MTLArrayType * _Nullable' type='@'/>
</method>
<method selector='elementIsArgumentBuffer'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='elementStructType'>
<retval declared_type='MTLStructType * _Nullable' type='@'/>
</method>
<method selector='elementType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
</class>
<class name='MTLRenderPassAttachmentDescriptor'>
<method selector='depthPlane'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='level'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='loadAction'>
<retval declared_type='MTLLoadAction' type='I' type64='Q'/>
</method>
<method selector='resolveDepthPlane'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='resolveLevel'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='resolveSlice'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='resolveTexture'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setDepthPlane:'>
<arg declared_type='NSUInteger' index='0' name='depthPlane' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLevel:'>
<arg declared_type='NSUInteger' index='0' name='level' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLoadAction:'>
<arg declared_type='MTLLoadAction' index='0' name='loadAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResolveDepthPlane:'>
<arg declared_type='NSUInteger' index='0' name='resolveDepthPlane' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResolveLevel:'>
<arg declared_type='NSUInteger' index='0' name='resolveLevel' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResolveSlice:'>
<arg declared_type='NSUInteger' index='0' name='resolveSlice' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResolveTexture:'>
<arg declared_type='id _Nullable' index='0' name='resolveTexture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSlice:'>
<arg declared_type='NSUInteger' index='0' name='slice' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStoreAction:'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStoreActionOptions:'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:'>
<arg declared_type='id _Nullable' index='0' name='texture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='slice'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='storeAction'>
<retval declared_type='MTLStoreAction' type='I' type64='Q'/>
</method>
<method selector='storeActionOptions'>
<retval declared_type='MTLStoreActionOptions' type='I' type64='Q'/>
</method>
<method selector='texture'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='MTLRenderPassColorAttachmentDescriptor'>
<method selector='clearColor'>
<retval declared_type='MTLClearColor' type='{_MTLClearColor=dddd}'/>
</method>
<method selector='setClearColor:'>
<arg declared_type='MTLClearColor' index='0' name='clearColor' type='{_MTLClearColor=dddd}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLRenderPassColorAttachmentDescriptorArray'>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='attachmentIndex' type='I' type64='Q'/>
<retval declared_type='MTLRenderPassColorAttachmentDescriptor * _Nonnull' type='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type='MTLRenderPassColorAttachmentDescriptor * _Nullable' index='0' name='attachment' type='@'/>
<arg declared_type='NSUInteger' index='1' name='attachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLRenderPassDepthAttachmentDescriptor'>
<method selector='clearDepth'>
<retval declared_type='double' type='d'/>
</method>
<method selector='setClearDepth:'>
<arg declared_type='double' index='0' name='clearDepth' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLRenderPassDescriptor'>
<method selector='colorAttachments'>
<retval declared_type='MTLRenderPassColorAttachmentDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='depthAttachment'>
<retval declared_type='MTLRenderPassDepthAttachmentDescriptor * _Nonnull' type='@'/>
</method>
<method selector='getSamplePositions:count:'>
<arg declared_type='MTLSamplePosition * _Nullable' index='0' name='positions' type='^{_MTLSamplePosition=ff}'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='renderPassDescriptor'>
<retval declared_type='MTLRenderPassDescriptor * _Nonnull' type='@'/>
</method>
<method selector='renderTargetArrayLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setDepthAttachment:'>
<arg declared_type='MTLRenderPassDepthAttachmentDescriptor * _Nullable' index='0' name='depthAttachment' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRenderTargetArrayLength:'>
<arg declared_type='NSUInteger' index='0' name='renderTargetArrayLength' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplePositions:count:'>
<arg const='true' declared_type='MTLSamplePosition * _Nullable' index='0' name='positions' type='^{_MTLSamplePosition=ff}'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilAttachment:'>
<arg declared_type='MTLRenderPassStencilAttachmentDescriptor * _Nullable' index='0' name='stencilAttachment' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisibilityResultBuffer:'>
<arg declared_type='id _Nullable' index='0' name='visibilityResultBuffer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stencilAttachment'>
<retval declared_type='MTLRenderPassStencilAttachmentDescriptor * _Nonnull' type='@'/>
</method>
<method selector='visibilityResultBuffer'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='MTLRenderPassStencilAttachmentDescriptor'>
<method selector='clearStencil'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='setClearStencil:'>
<arg declared_type='uint32_t' index='0' name='clearStencil' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLRenderPipelineColorAttachmentDescriptor'>
<method selector='alphaBlendOperation'>
<retval declared_type='MTLBlendOperation' type='I' type64='Q'/>
</method>
<method selector='destinationAlphaBlendFactor'>
<retval declared_type='MTLBlendFactor' type='I' type64='Q'/>
</method>
<method selector='destinationRGBBlendFactor'>
<retval declared_type='MTLBlendFactor' type='I' type64='Q'/>
</method>
<method selector='isBlendingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pixelFormat'>
<retval declared_type='MTLPixelFormat' type='I' type64='Q'/>
</method>
<method selector='rgbBlendOperation'>
<retval declared_type='MTLBlendOperation' type='I' type64='Q'/>
</method>
<method selector='setAlphaBlendOperation:'>
<arg declared_type='MTLBlendOperation' index='0' name='alphaBlendOperation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendingEnabled:'>
<arg declared_type='BOOL' index='0' name='blendingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationAlphaBlendFactor:'>
<arg declared_type='MTLBlendFactor' index='0' name='destinationAlphaBlendFactor' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationRGBBlendFactor:'>
<arg declared_type='MTLBlendFactor' index='0' name='destinationRGBBlendFactor' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPixelFormat:'>
<arg declared_type='MTLPixelFormat' index='0' name='pixelFormat' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRgbBlendOperation:'>
<arg declared_type='MTLBlendOperation' index='0' name='rgbBlendOperation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceAlphaBlendFactor:'>
<arg declared_type='MTLBlendFactor' index='0' name='sourceAlphaBlendFactor' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceRGBBlendFactor:'>
<arg declared_type='MTLBlendFactor' index='0' name='sourceRGBBlendFactor' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWriteMask:'>
<arg declared_type='MTLColorWriteMask' index='0' name='writeMask' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceAlphaBlendFactor'>
<retval declared_type='MTLBlendFactor' type='I' type64='Q'/>
</method>
<method selector='sourceRGBBlendFactor'>
<retval declared_type='MTLBlendFactor' type='I' type64='Q'/>
</method>
<method selector='writeMask'>
<retval declared_type='MTLColorWriteMask' type='I' type64='Q'/>
</method>
</class>
<class name='MTLRenderPipelineColorAttachmentDescriptorArray'>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='attachmentIndex' type='I' type64='Q'/>
<retval declared_type='MTLRenderPipelineColorAttachmentDescriptor * _Nonnull' type='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type='MTLRenderPipelineColorAttachmentDescriptor * _Nullable' index='0' name='attachment' type='@'/>
<arg declared_type='NSUInteger' index='1' name='attachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLRenderPipelineDescriptor'>
<method selector='colorAttachments'>
<retval declared_type='MTLRenderPipelineColorAttachmentDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='depthAttachmentPixelFormat'>
<retval declared_type='MTLPixelFormat' type='I' type64='Q'/>
</method>
<method selector='fragmentBuffers'>
<retval declared_type='MTLPipelineBufferDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='fragmentFunction'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='inputPrimitiveTopology'>
<retval declared_type='MTLPrimitiveTopologyClass' type='I' type64='Q'/>
</method>
<method selector='isAlphaToCoverageEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAlphaToOneEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRasterizationEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTessellationFactorScaleEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='maxTessellationFactor'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='rasterSampleCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='sampleCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setAlphaToCoverageEnabled:'>
<arg declared_type='BOOL' index='0' name='alphaToCoverageEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlphaToOneEnabled:'>
<arg declared_type='BOOL' index='0' name='alphaToOneEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthAttachmentPixelFormat:'>
<arg declared_type='MTLPixelFormat' index='0' name='depthAttachmentPixelFormat' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentFunction:'>
<arg declared_type='id _Nullable' index='0' name='fragmentFunction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputPrimitiveTopology:'>
<arg declared_type='MTLPrimitiveTopologyClass' index='0' name='inputPrimitiveTopology' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxTessellationFactor:'>
<arg declared_type='NSUInteger' index='0' name='maxTessellationFactor' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRasterSampleCount:'>
<arg declared_type='NSUInteger' index='0' name='rasterSampleCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRasterizationEnabled:'>
<arg declared_type='BOOL' index='0' name='rasterizationEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleCount:'>
<arg declared_type='NSUInteger' index='0' name='sampleCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilAttachmentPixelFormat:'>
<arg declared_type='MTLPixelFormat' index='0' name='stencilAttachmentPixelFormat' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationControlPointIndexType:'>
<arg declared_type='MTLTessellationControlPointIndexType' index='0' name='tessellationControlPointIndexType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationFactorFormat:'>
<arg declared_type='MTLTessellationFactorFormat' index='0' name='tessellationFactorFormat' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationFactorScaleEnabled:'>
<arg declared_type='BOOL' index='0' name='tessellationFactorScaleEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationFactorStepFunction:'>
<arg declared_type='MTLTessellationFactorStepFunction' index='0' name='tessellationFactorStepFunction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationOutputWindingOrder:'>
<arg declared_type='MTLWinding' index='0' name='tessellationOutputWindingOrder' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationPartitionMode:'>
<arg declared_type='MTLTessellationPartitionMode' index='0' name='tessellationPartitionMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexDescriptor:'>
<arg declared_type='MTLVertexDescriptor * _Nullable' index='0' name='vertexDescriptor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexFunction:'>
<arg declared_type='id _Nullable' index='0' name='vertexFunction' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stencilAttachmentPixelFormat'>
<retval declared_type='MTLPixelFormat' type='I' type64='Q'/>
</method>
<method selector='tessellationControlPointIndexType'>
<retval declared_type='MTLTessellationControlPointIndexType' type='I' type64='Q'/>
</method>
<method selector='tessellationFactorFormat'>
<retval declared_type='MTLTessellationFactorFormat' type='I' type64='Q'/>
</method>
<method selector='tessellationFactorStepFunction'>
<retval declared_type='MTLTessellationFactorStepFunction' type='I' type64='Q'/>
</method>
<method selector='tessellationOutputWindingOrder'>
<retval declared_type='MTLWinding' type='I' type64='Q'/>
</method>
<method selector='tessellationPartitionMode'>
<retval declared_type='MTLTessellationPartitionMode' type='I' type64='Q'/>
</method>
<method selector='vertexBuffers'>
<retval declared_type='MTLPipelineBufferDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='vertexDescriptor'>
<retval declared_type='MTLVertexDescriptor * _Nullable' type='@'/>
</method>
<method selector='vertexFunction'>
<retval declared_type='id _Nullable' type='@'/>
</method>
</class>
<class name='MTLRenderPipelineReflection'>
<method selector='fragmentArguments'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='vertexArguments'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</class>
<class name='MTLSamplerDescriptor'>
<method selector='borderColor'>
<retval declared_type='MTLSamplerBorderColor' type='I' type64='Q'/>
</method>
<method selector='compareFunction'>
<retval declared_type='MTLCompareFunction' type='I' type64='Q'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='lodMaxClamp'>
<retval declared_type='float' type='f'/>
</method>
<method selector='lodMinClamp'>
<retval declared_type='float' type='f'/>
</method>
<method selector='magFilter'>
<retval declared_type='MTLSamplerMinMagFilter' type='I' type64='Q'/>
</method>
<method selector='maxAnisotropy'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minFilter'>
<retval declared_type='MTLSamplerMinMagFilter' type='I' type64='Q'/>
</method>
<method selector='mipFilter'>
<retval declared_type='MTLSamplerMipFilter' type='I' type64='Q'/>
</method>
<method selector='normalizedCoordinates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rAddressMode'>
<retval declared_type='MTLSamplerAddressMode' type='I' type64='Q'/>
</method>
<method selector='sAddressMode'>
<retval declared_type='MTLSamplerAddressMode' type='I' type64='Q'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type='MTLSamplerBorderColor' index='0' name='borderColor' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompareFunction:'>
<arg declared_type='MTLCompareFunction' index='0' name='compareFunction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLodMaxClamp:'>
<arg declared_type='float' index='0' name='lodMaxClamp' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLodMinClamp:'>
<arg declared_type='float' index='0' name='lodMinClamp' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMagFilter:'>
<arg declared_type='MTLSamplerMinMagFilter' index='0' name='magFilter' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAnisotropy:'>
<arg declared_type='NSUInteger' index='0' name='maxAnisotropy' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinFilter:'>
<arg declared_type='MTLSamplerMinMagFilter' index='0' name='minFilter' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMipFilter:'>
<arg declared_type='MTLSamplerMipFilter' index='0' name='mipFilter' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNormalizedCoordinates:'>
<arg declared_type='BOOL' index='0' name='normalizedCoordinates' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRAddressMode:'>
<arg declared_type='MTLSamplerAddressMode' index='0' name='rAddressMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSAddressMode:'>
<arg declared_type='MTLSamplerAddressMode' index='0' name='sAddressMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSupportArgumentBuffers:'>
<arg declared_type='BOOL' index='0' name='supportArgumentBuffers' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTAddressMode:'>
<arg declared_type='MTLSamplerAddressMode' index='0' name='tAddressMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportArgumentBuffers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tAddressMode'>
<retval declared_type='MTLSamplerAddressMode' type='I' type64='Q'/>
</method>
</class>
<class name='MTLStageInputOutputDescriptor'>
<method selector='attributes'>
<retval declared_type='MTLAttributeDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='indexBufferIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='indexType'>
<retval declared_type='MTLIndexType' type='I' type64='Q'/>
</method>
<method selector='layouts'>
<retval declared_type='MTLBufferLayoutDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndexBufferIndex:'>
<arg declared_type='NSUInteger' index='0' name='indexBufferIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndexType:'>
<arg declared_type='MTLIndexType' index='0' name='indexType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stageInputOutputDescriptor'>
<retval declared_type='MTLStageInputOutputDescriptor * _Nonnull' type='@'/>
</method>
</class>
<class name='MTLStencilDescriptor'>
<method selector='depthFailureOperation'>
<retval declared_type='MTLStencilOperation' type='I' type64='Q'/>
</method>
<method selector='depthStencilPassOperation'>
<retval declared_type='MTLStencilOperation' type='I' type64='Q'/>
</method>
<method selector='readMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='setDepthFailureOperation:'>
<arg declared_type='MTLStencilOperation' index='0' name='depthFailureOperation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStencilPassOperation:'>
<arg declared_type='MTLStencilOperation' index='0' name='depthStencilPassOperation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReadMask:'>
<arg declared_type='uint32_t' index='0' name='readMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilCompareFunction:'>
<arg declared_type='MTLCompareFunction' index='0' name='stencilCompareFunction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilFailureOperation:'>
<arg declared_type='MTLStencilOperation' index='0' name='stencilFailureOperation' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWriteMask:'>
<arg declared_type='uint32_t' index='0' name='writeMask' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stencilCompareFunction'>
<retval declared_type='MTLCompareFunction' type='I' type64='Q'/>
</method>
<method selector='stencilFailureOperation'>
<retval declared_type='MTLStencilOperation' type='I' type64='Q'/>
</method>
<method selector='writeMask'>
<retval declared_type='uint32_t' type='I'/>
</method>
</class>
<class name='MTLStructMember'>
<method selector='argumentIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='arrayType'>
<retval declared_type='MTLArrayType * _Nullable' type='@'/>
</method>
<method selector='dataType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pointerType'>
<retval declared_type='MTLPointerType * _Nullable' type='@'/>
</method>
<method selector='structType'>
<retval declared_type='MTLStructType * _Nullable' type='@'/>
</method>
<method selector='textureReferenceType'>
<retval declared_type='MTLTextureReferenceType * _Nullable' type='@'/>
</method>
</class>
<class name='MTLStructType'>
<method selector='memberByName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<retval declared_type='MTLStructMember * _Nullable' type='@'/>
</method>
<method selector='members'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
</class>
<class name='MTLTextureDescriptor'>
<method selector='arrayLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='cpuCacheMode'>
<retval declared_type='MTLCPUCacheMode' type='I' type64='Q'/>
</method>
<method selector='depth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='height'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='mipmapLevelCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='pixelFormat'>
<retval declared_type='MTLPixelFormat' type='I' type64='Q'/>
</method>
<method selector='resourceOptions'>
<retval declared_type='MTLResourceOptions' type='I' type64='Q'/>
</method>
<method selector='sampleCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setArrayLength:'>
<arg declared_type='NSUInteger' index='0' name='arrayLength' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCpuCacheMode:'>
<arg declared_type='MTLCPUCacheMode' index='0' name='cpuCacheMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepth:'>
<arg declared_type='NSUInteger' index='0' name='depth' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type='NSUInteger' index='0' name='height' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMipmapLevelCount:'>
<arg declared_type='NSUInteger' index='0' name='mipmapLevelCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPixelFormat:'>
<arg declared_type='MTLPixelFormat' index='0' name='pixelFormat' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResourceOptions:'>
<arg declared_type='MTLResourceOptions' index='0' name='resourceOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleCount:'>
<arg declared_type='NSUInteger' index='0' name='sampleCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStorageMode:'>
<arg declared_type='MTLStorageMode' index='0' name='storageMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextureType:'>
<arg declared_type='MTLTextureType' index='0' name='textureType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsage:'>
<arg declared_type='MTLTextureUsage' index='0' name='usage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type='NSUInteger' index='0' name='width' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storageMode'>
<retval declared_type='MTLStorageMode' type='I' type64='Q'/>
</method>
<method class_method='true' selector='texture2DDescriptorWithPixelFormat:width:height:mipmapped:'>
<arg declared_type='MTLPixelFormat' index='0' name='pixelFormat' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='width' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='height' type='I' type64='Q'/>
<arg declared_type='BOOL' index='3' name='mipmapped' type='B'/>
<retval declared_type='MTLTextureDescriptor * _Nonnull' type='@'/>
</method>
<method class_method='true' selector='textureCubeDescriptorWithPixelFormat:size:mipmapped:'>
<arg declared_type='MTLPixelFormat' index='0' name='pixelFormat' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='size' type='I' type64='Q'/>
<arg declared_type='BOOL' index='2' name='mipmapped' type='B'/>
<retval declared_type='MTLTextureDescriptor * _Nonnull' type='@'/>
</method>
<method selector='textureType'>
<retval declared_type='MTLTextureType' type='I' type64='Q'/>
</method>
<method selector='usage'>
<retval declared_type='MTLTextureUsage' type='I' type64='Q'/>
</method>
<method selector='width'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='MTLTextureReferenceType'>
<method selector='access'>
<retval declared_type='MTLArgumentAccess' type='I' type64='Q'/>
</method>
<method selector='isDepthTexture'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='textureDataType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
<method selector='textureType'>
<retval declared_type='MTLTextureType' type='I' type64='Q'/>
</method>
</class>
<class name='MTLType'>
<method selector='dataType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
</class>
<class name='MTLVertexAttribute'>
<method selector='attributeIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='attributeType'>
<retval declared_type='MTLDataType' type='I' type64='Q'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPatchControlPointData'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPatchData'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</class>
<class name='MTLVertexAttributeDescriptor'>
<method selector='bufferIndex'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='format'>
<retval declared_type='MTLVertexFormat' type='I' type64='Q'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setBufferIndex:'>
<arg declared_type='NSUInteger' index='0' name='bufferIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormat:'>
<arg declared_type='MTLVertexFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLVertexAttributeDescriptorArray'>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='MTLVertexAttributeDescriptor * _Nonnull' type='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type='MTLVertexAttributeDescriptor * _Nullable' index='0' name='attributeDesc' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLVertexBufferLayoutDescriptor'>
<method selector='setStepFunction:'>
<arg declared_type='MTLVertexStepFunction' index='0' name='stepFunction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStepRate:'>
<arg declared_type='NSUInteger' index='0' name='stepRate' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStride:'>
<arg declared_type='NSUInteger' index='0' name='stride' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stepFunction'>
<retval declared_type='MTLVertexStepFunction' type='I' type64='Q'/>
</method>
<method selector='stepRate'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='stride'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='MTLVertexBufferLayoutDescriptorArray'>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='MTLVertexBufferLayoutDescriptor * _Nonnull' type='@'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg declared_type='MTLVertexBufferLayoutDescriptor * _Nullable' index='0' name='bufferDesc' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MTLVertexDescriptor'>
<method selector='attributes'>
<retval declared_type='MTLVertexAttributeDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='layouts'>
<retval declared_type='MTLVertexBufferLayoutDescriptorArray * _Nonnull' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='vertexDescriptor'>
<retval declared_type='MTLVertexDescriptor * _Nonnull' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='addCompletedHandler:'>
<arg declared_type='MTLCommandBufferHandler _Nonnull' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDebugMarker:range:'>
<arg declared_type='NSString * _Nonnull' index='0' name='marker' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addScheduledHandler:'>
<arg declared_type='MTLCommandBufferHandler _Nonnull' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='alignment'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='allocatedSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='areProgrammableSamplePositionsSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='areRasterOrderGroupsSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='argumentBuffersSupport'>
<retval declared_type='MTLArgumentBuffersTier' type='I' type64='Q'/>
</method>
<method selector='arrayLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='beginScope'>
<retval declared_type='void' type='v'/>
</method>
<method selector='blitCommandEncoder'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='buffer'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='bufferBytesPerRow'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferOffset'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='commandBuffer'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='commandBufferWithUnretainedReferences'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='commandQueue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='commit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='computeCommandEncoder'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='constantDataAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='contents'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:'>
<arg declared_type='id _Nonnull' index='0' name='sourceBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceBytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='sourceBytesPerImage' type='I' type64='Q'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationTexture' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='8' name='destinationOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:'>
<arg declared_type='id _Nonnull' index='0' name='sourceBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceBytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='sourceBytesPerImage' type='I' type64='Q'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationTexture' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='8' name='destinationOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<arg declared_type='MTLBlitOption' index='9' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:'>
<arg declared_type='id _Nonnull' index='0' name='sourceBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='2' name='destinationBuffer' type='@'/>
<arg declared_type='NSUInteger' index='3' name='destinationOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='4' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:'>
<arg declared_type='id _Nonnull' index='0' name='sourceTexture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='3' name='sourceOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationBuffer' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationBytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='8' name='destinationBytesPerImage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:'>
<arg declared_type='id _Nonnull' index='0' name='sourceTexture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='3' name='sourceOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationBuffer' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationBytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='8' name='destinationBytesPerImage' type='I' type64='Q'/>
<arg declared_type='MTLBlitOption' index='9' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:'>
<arg declared_type='id _Nonnull' index='0' name='sourceTexture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='3' name='sourceOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationTexture' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='8' name='destinationOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cpuCacheMode'>
<retval declared_type='MTLCPUCacheMode' type='I' type64='Q'/>
</method>
<method selector='currentAllocatedSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='depth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='device'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='didModifyRange:'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchThreadgroups:threadsPerThreadgroup:'>
<arg declared_type='MTLSize' index='0' name='threadgroupsPerGrid' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='MTLSize' index='1' name='threadsPerThreadgroup' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:'>
<arg declared_type='id _Nonnull' index='0' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='indirectBufferOffset' type='I' type64='Q'/>
<arg declared_type='MTLSize' index='2' name='threadsPerThreadgroup' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchThreads:threadsPerThreadgroup:'>
<arg declared_type='MTLSize' index='0' name='threadsPerGrid' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='MTLSize' index='1' name='threadsPerThreadgroup' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:'>
<arg declared_type='NSUInteger' index='0' name='numberOfPatchControlPoints' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='1' name='patchIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='patchIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='controlPointIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='controlPointIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='5' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='6' name='indirectBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:'>
<arg declared_type='NSUInteger' index='0' name='numberOfPatchControlPoints' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='patchStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='patchCount' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='3' name='patchIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='patchIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='5' name='controlPointIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='6' name='controlPointIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='instanceCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='8' name='baseInstance' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='indexCount' type='I' type64='Q'/>
<arg declared_type='MTLIndexType' index='2' name='indexType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='indexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='indexBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='indexCount' type='I' type64='Q'/>
<arg declared_type='MTLIndexType' index='2' name='indexType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='indexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='indexBufferOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='instanceCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='indexCount' type='I' type64='Q'/>
<arg declared_type='MTLIndexType' index='2' name='indexType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='indexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='indexBufferOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='instanceCount' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='6' name='baseVertex' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='7' name='baseInstance' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='MTLIndexType' index='1' name='indexType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='2' name='indexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='3' name='indexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='4' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='5' name='indirectBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:'>
<arg declared_type='NSUInteger' index='0' name='numberOfPatchControlPoints' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='1' name='patchIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='patchIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='indirectBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:'>
<arg declared_type='NSUInteger' index='0' name='numberOfPatchControlPoints' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='patchStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='patchCount' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='3' name='patchIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='patchIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='instanceCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='6' name='baseInstance' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrimitives:indirectBuffer:indirectBufferOffset:'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='1' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='indirectBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrimitives:vertexStart:vertexCount:'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='vertexStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='vertexCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrimitives:vertexStart:vertexCount:instanceCount:'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='vertexStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='vertexCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='instanceCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='vertexStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='vertexCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='instanceCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='4' name='baseInstance' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodedLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='endEncoding'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endScope'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueue'>
<retval declared_type='void' type='v'/>
</method>
<method selector='error'>
<retval declared_type='NSError * _Nullable' type='@'/>
</method>
<method selector='fillBuffer:range:value:'>
<arg declared_type='id _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='uint8_t' index='2' name='value' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='functionConstantsDictionary'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='functionNames'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='functionType'>
<retval declared_type='MTLFunctionType' type='I' type64='Q'/>
</method>
<method selector='generateMipmapsForTexture:'>
<arg declared_type='id _Nonnull' index='0' name='texture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:'>
<arg declared_type='void * _Nonnull' index='0' name='pixelBytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='bytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='bytesPerImage' type='I' type64='Q'/>
<arg declared_type='MTLRegion' index='3' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<arg declared_type='NSUInteger' index='4' name='level' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='slice' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBytes:bytesPerRow:fromRegion:mipmapLevel:'>
<arg declared_type='void * _Nonnull' index='0' name='pixelBytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='bytesPerRow' type='I' type64='Q'/>
<arg declared_type='MTLRegion' index='2' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<arg declared_type='NSUInteger' index='3' name='level' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getDefaultSamplePositions:count:'>
<arg declared_type='MTLSamplePosition * _Nonnull' index='0' name='positions' type='^{_MTLSamplePosition=ff}'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='heap'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='heapBufferSizeAndAlignWithLength:options:'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='MTLSizeAndAlign' type='{_MTLSizeAndAlign=II}' type64='{_MTLSizeAndAlign=QQ}'/>
</method>
<method selector='heapTextureSizeAndAlignWithDescriptor:'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='desc' type='@'/>
<retval declared_type='MTLSizeAndAlign' type='{_MTLSizeAndAlign=II}' type64='{_MTLSizeAndAlign=QQ}'/>
</method>
<method selector='height'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='insertDebugCaptureBoundary'>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertDebugSignpost:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='iosurface'>
<retval declared_type='IOSurfaceRef _Nullable' type='^{__IOSurface=}'/>
</method>
<method selector='iosurfacePlane'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='isAliasable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDepth24Stencil8PixelFormatSupported'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFramebufferOnly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHeadless'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLowPower'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRemovable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='label'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='length'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='makeAliasable'>
<retval declared_type='void' type='v'/>
</method>
<method selector='maxAvailableSizeWithAlignment:'>
<arg declared_type='NSUInteger' index='0' name='alignment' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='maxThreadgroupMemoryLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='maxThreadsPerThreadgroup'>
<retval declared_type='MTLSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='maxTotalThreadsPerThreadgroup'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minimumLinearTextureAlignmentForPixelFormat:'>
<arg declared_type='MTLPixelFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='mipmapLevelCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='name'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='newArgumentEncoderForBufferAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newArgumentEncoderWithArguments:'>
<arg declared_type='NSArray * _Nonnull' index='0' name='arguments' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newArgumentEncoderWithBufferIndex:'>
<arg declared_type='NSUInteger' index='0' name='bufferIndex' type='I' type64='Q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newArgumentEncoderWithBufferIndex:reflection:'>
<arg declared_type='NSUInteger' index='0' name='bufferIndex' type='I' type64='Q'/>
<arg declared_type='MTLAutoreleasedArgument * _Nullable' index='1' name='reflection' type='^@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newBufferWithBytes:length:options:'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='pointer' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='2' name='options' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newBufferWithBytesNoCopy:length:options:deallocator:'>
<arg declared_type='void * _Nonnull' index='0' name='pointer' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nullable)(void * _Nonnull, NSUInteger)' function_pointer='true' index='3' name='deallocator' type='@?'>
<arg declared_type='void * _Nonnull' type='^v'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newBufferWithLength:options:'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newCommandQueue'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newCommandQueueWithMaxCommandBufferCount:'>
<arg declared_type='NSUInteger' index='0' name='maxCommandBufferCount' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newComputePipelineStateWithDescriptor:options:completionHandler:'>
<arg declared_type='MTLComputePipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLNewComputePipelineStateWithReflectionCompletionHandler _Nonnull' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='MTLComputePipelineReflection * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newComputePipelineStateWithDescriptor:options:reflection:error:'>
<arg declared_type='MTLComputePipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLAutoreleasedComputePipelineReflection * _Nullable' index='2' name='reflection' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newComputePipelineStateWithFunction:completionHandler:'>
<arg declared_type='id _Nonnull' index='0' name='computeFunction' type='@'/>
<arg declared_type='MTLNewComputePipelineStateCompletionHandler _Nonnull' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newComputePipelineStateWithFunction:error:'>
<arg declared_type='id _Nonnull' index='0' name='computeFunction' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newComputePipelineStateWithFunction:options:completionHandler:'>
<arg declared_type='id _Nonnull' index='0' name='computeFunction' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLNewComputePipelineStateWithReflectionCompletionHandler _Nonnull' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='MTLComputePipelineReflection * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newComputePipelineStateWithFunction:options:reflection:error:'>
<arg declared_type='id _Nonnull' index='0' name='computeFunction' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLAutoreleasedComputePipelineReflection * _Nullable' index='2' name='reflection' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newDefaultLibrary'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newDefaultLibraryWithBundle:error:'>
<arg declared_type='NSBundle * _Nonnull' index='0' name='bundle' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newDepthStencilStateWithDescriptor:'>
<arg declared_type='MTLDepthStencilDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newFence'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newFunctionWithName:'>
<arg declared_type='NSString * _Nonnull' index='0' name='functionName' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newFunctionWithName:constantValues:completionHandler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='MTLFunctionConstantValues * _Nonnull' index='1' name='constantValues' type='@'/>
<arg declared_type='void (^ _Nonnull)(id _Nullable, NSError * _Nonnull)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='NSError * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newFunctionWithName:constantValues:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='MTLFunctionConstantValues * _Nonnull' index='1' name='constantValues' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newHeapWithDescriptor:'>
<arg declared_type='MTLHeapDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newLibraryWithData:error:'>
<arg declared_type='dispatch_data_t _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newLibraryWithFile:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='filepath' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newLibraryWithSource:options:completionHandler:'>
<arg declared_type='NSString * _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='MTLCompileOptions * _Nullable' index='1' name='options' type='@'/>
<arg declared_type='MTLNewLibraryCompletionHandler _Nonnull' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newLibraryWithSource:options:error:'>
<arg declared_type='NSString * _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='MTLCompileOptions * _Nullable' index='1' name='options' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newLibraryWithURL:error:'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newRenderPipelineStateWithDescriptor:completionHandler:'>
<arg declared_type='MTLRenderPipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLNewRenderPipelineStateCompletionHandler _Nonnull' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newRenderPipelineStateWithDescriptor:error:'>
<arg declared_type='MTLRenderPipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newRenderPipelineStateWithDescriptor:options:completionHandler:'>
<arg declared_type='MTLRenderPipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLNewRenderPipelineStateWithReflectionCompletionHandler _Nonnull' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='MTLRenderPipelineReflection * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newRenderPipelineStateWithDescriptor:options:reflection:error:'>
<arg declared_type='MTLRenderPipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLAutoreleasedRenderPipelineReflection * _Nullable' index='2' name='reflection' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newSamplerStateWithDescriptor:'>
<arg declared_type='MTLSamplerDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newTextureViewWithPixelFormat:'>
<arg declared_type='MTLPixelFormat' index='0' name='pixelFormat' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newTextureViewWithPixelFormat:textureType:levels:slices:'>
<arg declared_type='MTLPixelFormat' index='0' name='pixelFormat' type='I' type64='Q'/>
<arg declared_type='MTLTextureType' index='1' name='textureType' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='levelRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='3' name='sliceRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newTextureWithDescriptor:'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='desc' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newTextureWithDescriptor:iosurface:plane:'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='IOSurfaceRef _Nonnull' index='1' name='iosurface' type='^{__IOSurface=}'/>
<arg declared_type='NSUInteger' index='2' name='plane' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newTextureWithDescriptor:offset:bytesPerRow:'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='bytesPerRow' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='parallelRenderCommandEncoderWithDescriptor:'>
<arg declared_type='MTLRenderPassDescriptor * _Nonnull' index='0' name='renderPassDescriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='parentRelativeLevel'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='parentRelativeSlice'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='parentTexture'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='patchControlPointCount'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='patchType'>
<retval declared_type='MTLPatchType' type='I' type64='Q'/>
</method>
<method selector='pixelFormat'>
<retval declared_type='MTLPixelFormat' type='I' type64='Q'/>
</method>
<method selector='popDebugGroup'>
<retval declared_type='void' type='v'/>
</method>
<method selector='present'>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentAtTime:'>
<arg declared_type='CFTimeInterval' index='0' name='presentationTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentDrawable:'>
<arg declared_type='id _Nonnull' index='0' name='drawable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentDrawable:atTime:'>
<arg declared_type='id _Nonnull' index='0' name='drawable' type='@'/>
<arg declared_type='CFTimeInterval' index='1' name='presentationTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushDebugGroup:'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readWriteTextureSupport'>
<retval declared_type='MTLReadWriteTextureTier' type='I' type64='Q'/>
</method>
<method selector='recommendedMaxWorkingSetSize'>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method selector='registryID'>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method selector='removeAllDebugMarkers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderCommandEncoder'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='renderCommandEncoderWithDescriptor:'>
<arg declared_type='MTLRenderPassDescriptor * _Nonnull' index='0' name='renderPassDescriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:'>
<arg declared_type='MTLRegion' index='0' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<arg declared_type='NSUInteger' index='1' name='level' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='slice' type='I' type64='Q'/>
<arg const='true' declared_type='void * _Nonnull' index='3' name='pixelBytes' type='^v'/>
<arg declared_type='NSUInteger' index='4' name='bytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='bytesPerImage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceRegion:mipmapLevel:withBytes:bytesPerRow:'>
<arg declared_type='MTLRegion' index='0' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<arg declared_type='NSUInteger' index='1' name='level' type='I' type64='Q'/>
<arg const='true' declared_type='void * _Nonnull' index='2' name='pixelBytes' type='^v'/>
<arg declared_type='NSUInteger' index='3' name='bytesPerRow' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='retainedReferences'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rootResource'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='sampleCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setArgumentBuffer:offset:'>
<arg declared_type='id _Nonnull' index='0' name='argumentBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArgumentBuffer:startOffset:arrayElement:'>
<arg declared_type='id _Nullable' index='0' name='argumentBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='startOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='arrayElement' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendColorRed:green:blue:alpha:'>
<arg declared_type='float' index='0' name='red' type='f'/>
<arg declared_type='float' index='1' name='green' type='f'/>
<arg declared_type='float' index='2' name='blue' type='f'/>
<arg declared_type='float' index='3' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBuffer:offset:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBufferOffset:atIndex:'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBuffers:offsets:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='buffers' type='^@'/>
<arg const='true' declared_type='NSUInteger*' index='1' name='offsets' type='^I' type64='^Q'/>
<arg declared_type='NSRange' index='2' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBytes:length:atIndex:'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='bytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorStoreAction:atIndex:'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='colorAttachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorStoreActionOptions:atIndex:'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='colorAttachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setComputePipelineState:'>
<arg declared_type='id _Nonnull' index='0' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCullMode:'>
<arg declared_type='MTLCullMode' index='0' name='cullMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthBias:slopeScale:clamp:'>
<arg declared_type='float' index='0' name='depthBias' type='f'/>
<arg declared_type='float' index='1' name='slopeScale' type='f'/>
<arg declared_type='float' index='2' name='clamp' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthClipMode:'>
<arg declared_type='MTLDepthClipMode' index='0' name='depthClipMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStencilState:'>
<arg declared_type='id _Nullable' index='0' name='depthStencilState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStoreAction:'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStoreActionOptions:'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentBuffer:offset:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentBufferOffset:atIndex:'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentBuffers:offsets:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='buffers' type='^@'/>
<arg const='true' declared_type='NSUInteger*' index='1' name='offsets' type='^I' type64='^Q'/>
<arg declared_type='NSRange' index='2' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentBytes:length:atIndex:'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='bytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentSamplerState:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='float' index='1' name='lodMinClamp' type='f'/>
<arg declared_type='float' index='2' name='lodMaxClamp' type='f'/>
<arg declared_type='NSUInteger' index='3' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg const='true' declared_type='float*' index='1' name='lodMinClamps' type='^f'/>
<arg const='true' declared_type='float*' index='2' name='lodMaxClamps' type='^f'/>
<arg declared_type='NSRange' index='3' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentSamplerStates:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentTexture:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentTextures:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='textures' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrontFacingWinding:'>
<arg declared_type='MTLWinding' index='0' name='frontFacingWinding' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurgeableState:'>
<arg declared_type='MTLPurgeableState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='MTLPurgeableState' type='I' type64='Q'/>
</method>
<method selector='setRenderPipelineState:'>
<arg declared_type='id _Nonnull' index='0' name='pipelineState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerState:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerState:lodMinClamp:lodMaxClamp:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='float' index='1' name='lodMinClamp' type='f'/>
<arg declared_type='float' index='2' name='lodMaxClamp' type='f'/>
<arg declared_type='NSUInteger' index='3' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerStates:lodMinClamps:lodMaxClamps:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg const='true' declared_type='float*' index='1' name='lodMinClamps' type='^f'/>
<arg const='true' declared_type='float*' index='2' name='lodMaxClamps' type='^f'/>
<arg declared_type='NSRange' index='3' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerStates:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScissorRect:'>
<arg declared_type='MTLScissorRect' index='0' name='rect' type='{_MTLScissorRect=IIII}' type64='{_MTLScissorRect=QQQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScissorRects:count:'>
<arg const='true' declared_type='MTLScissorRect*' index='0' name='scissorRects' type='^{_MTLScissorRect=IIII}' type64='^{_MTLScissorRect=QQQQ}'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStageInRegion:'>
<arg declared_type='MTLRegion' index='0' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilFrontReferenceValue:backReferenceValue:'>
<arg declared_type='uint32_t' index='0' name='frontReferenceValue' type='I'/>
<arg declared_type='uint32_t' index='1' name='backReferenceValue' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilReferenceValue:'>
<arg declared_type='uint32_t' index='0' name='referenceValue' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilStoreAction:'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilStoreActionOptions:'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationFactorBuffer:offset:instanceStride:'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='instanceStride' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationFactorScale:'>
<arg declared_type='float' index='0' name='scale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextures:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='textures' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setThreadgroupMemoryLength:atIndex:'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTriangleFillMode:'>
<arg declared_type='MTLTriangleFillMode' index='0' name='fillMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexBuffer:offset:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexBufferOffset:atIndex:'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexBuffers:offsets:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='buffers' type='^@'/>
<arg const='true' declared_type='NSUInteger*' index='1' name='offsets' type='^I' type64='^Q'/>
<arg declared_type='NSRange' index='2' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexBytes:length:atIndex:'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='bytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexSamplerState:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='float' index='1' name='lodMinClamp' type='f'/>
<arg declared_type='float' index='2' name='lodMaxClamp' type='f'/>
<arg declared_type='NSUInteger' index='3' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg const='true' declared_type='float*' index='1' name='lodMinClamps' type='^f'/>
<arg const='true' declared_type='float*' index='2' name='lodMaxClamps' type='^f'/>
<arg declared_type='NSRange' index='3' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexSamplerStates:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexTexture:atIndex:'>
<arg declared_type='id _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexTextures:withRange:'>
<arg const='true' declared_type='id _Nullable*' index='0' name='textures' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewport:'>
<arg declared_type='MTLViewport' index='0' name='viewport' type='{_MTLViewport=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewports:count:'>
<arg const='true' declared_type='MTLViewport*' index='0' name='viewports' type='^{_MTLViewport=dddddd}'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisibilityResultMode:offset:'>
<arg declared_type='MTLVisibilityResultMode' index='0' name='mode' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='stageInputAttributes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='staticThreadgroupMemoryLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='status'>
<retval declared_type='MTLCommandBufferStatus' type='I' type64='Q'/>
</method>
<method selector='storageMode'>
<retval declared_type='MTLStorageMode' type='I' type64='Q'/>
</method>
<method selector='supportsFeatureSet:'>
<arg declared_type='MTLFeatureSet' index='0' name='featureSet' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsTextureSampleCount:'>
<arg declared_type='NSUInteger' index='0' name='sampleCount' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='synchronizeResource:'>
<arg declared_type='id _Nonnull' index='0' name='resource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='synchronizeTexture:slice:level:'>
<arg declared_type='id _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='slice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='level' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureBarrier'>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureType'>
<retval declared_type='MTLTextureType' type='I' type64='Q'/>
</method>
<method selector='threadExecutionWidth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='updateFence:'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFence:afterStages:'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<arg declared_type='MTLRenderStages' index='1' name='stages' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usage'>
<retval declared_type='MTLTextureUsage' type='I' type64='Q'/>
</method>
<method selector='useHeap:'>
<arg declared_type='id _Nonnull' index='0' name='heap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useHeaps:count:'>
<arg const='true' declared_type='id _Nonnull*' index='0' name='heaps' type='^@'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useResource:usage:'>
<arg declared_type='id _Nonnull' index='0' name='resource' type='@'/>
<arg declared_type='MTLResourceUsage' index='1' name='usage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useResources:count:usage:'>
<arg const='true' declared_type='id _Nonnull*' index='0' name='resources' type='^@'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<arg declared_type='MTLResourceUsage' index='2' name='usage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='usedSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='vertexAttributes'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='waitForFence:'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitForFence:beforeStages:'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<arg declared_type='MTLRenderStages' index='1' name='stages' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitUntilCompleted'>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitUntilScheduled'>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<informal_protocol name='MTLArgumentEncoder'>
<method selector='alignment' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='constantDataAtIndex:' type='^v12@0:4I8' type64='^v24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='encodedLength' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='newArgumentEncoderForBufferAtIndex:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setArgumentBuffer:offset:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nonnull' index='0' name='argumentBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArgumentBuffer:startOffset:arrayElement:' type='v20@0:4@8I12I16' type64='v40@0:8@16Q24Q32'>
<arg declared_type='id _Nullable' index='0' name='argumentBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='startOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='arrayElement' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBuffer:offset:atIndex:' type='v20@0:4@8I12I16' type64='v40@0:8@16Q24Q32'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBuffers:offsets:withRange:' type='v24@0:4r^@8r^I12{_NSRange=II}16' type64='v48@0:8r^@16r^Q24{_NSRange=QQ}32'>
<arg const='true' declared_type='id _Nullable*' index='0' name='buffers' type='^@'/>
<arg const='true' declared_type='NSUInteger*' index='1' name='offsets' type='^I' type64='^Q'/>
<arg declared_type='NSRange' index='2' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerState:atIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerStates:withRange:' type='v20@0:4r^@8{_NSRange=II}12' type64='v40@0:8r^@16{_NSRange=QQ}24'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:atIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextures:withRange:' type='v20@0:4r^@8{_NSRange=II}12' type64='v40@0:8r^@16{_NSRange=QQ}24'>
<arg const='true' declared_type='id _Nullable*' index='0' name='textures' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLBlitCommandEncoder'>
<method selector='copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:' type='v60@0:4@8I12I16I20{?=III}24@36I40I44{?=III}48' type64='v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96'>
<arg declared_type='id _Nonnull' index='0' name='sourceBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceBytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='sourceBytesPerImage' type='I' type64='Q'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationTexture' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='8' name='destinationOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:' type='v64@0:4@8I12I16I20{?=III}24@36I40I44{?=III}48I60' type64='v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120'>
<arg declared_type='id _Nonnull' index='0' name='sourceBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceBytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='sourceBytesPerImage' type='I' type64='Q'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationTexture' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='8' name='destinationOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<arg declared_type='MTLBlitOption' index='9' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:' type='v28@0:4@8I12@16I20I24' type64='v56@0:8@16Q24@32Q40Q48'>
<arg declared_type='id _Nonnull' index='0' name='sourceBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='2' name='destinationBuffer' type='@'/>
<arg declared_type='NSUInteger' index='3' name='destinationOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='4' name='size' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:' type='v60@0:4@8I12I16{?=III}20{?=III}32@44I48I52I56' type64='v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112'>
<arg declared_type='id _Nonnull' index='0' name='sourceTexture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='3' name='sourceOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationBuffer' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationBytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='8' name='destinationBytesPerImage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:' type='v64@0:4@8I12I16{?=III}20{?=III}32@44I48I52I56I60' type64='v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120'>
<arg declared_type='id _Nonnull' index='0' name='sourceTexture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='3' name='sourceOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationBuffer' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationBytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='8' name='destinationBytesPerImage' type='I' type64='Q'/>
<arg declared_type='MTLBlitOption' index='9' name='options' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:' type='v68@0:4@8I12I16{?=III}20{?=III}32@44I48I52{?=III}56' type64='v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112'>
<arg declared_type='id _Nonnull' index='0' name='sourceTexture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='sourceSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='sourceLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='3' name='sourceOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<arg declared_type='MTLSize' index='4' name='sourceSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='id _Nonnull' index='5' name='destinationTexture' type='@'/>
<arg declared_type='NSUInteger' index='6' name='destinationSlice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='destinationLevel' type='I' type64='Q'/>
<arg declared_type='MTLOrigin' index='8' name='destinationOrigin' type='{_MTLOrigin=III}' type64='{_MTLOrigin=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillBuffer:range:value:' type='v24@0:4@8{_NSRange=II}12C20' type64='v44@0:8@16{_NSRange=QQ}24C40'>
<arg declared_type='id _Nonnull' index='0' name='buffer' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='uint8_t' index='2' name='value' type='C'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='generateMipmapsForTexture:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='texture' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='synchronizeResource:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='resource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='synchronizeTexture:slice:level:' type='v20@0:4@8I12I16' type64='v40@0:8@16Q24Q32'>
<arg declared_type='id _Nonnull' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='slice' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='level' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFence:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitForFence:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLBuffer'>
<method selector='addDebugMarker:range:' type='v20@0:4@8{_NSRange=II}12' type64='v40@0:8@16{_NSRange=QQ}24'>
<arg declared_type='NSString * _Nonnull' index='0' name='marker' type='@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contents' type='^v8@0:4' type64='^v16@0:8'>
<retval declared_type='void * _Nonnull' type='^v'/>
</method>
<method selector='didModifyRange:' type='v16@0:4{_NSRange=II}8' type64='v32@0:8{_NSRange=QQ}16'>
<arg declared_type='NSRange' index='0' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='length' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='newTextureWithDescriptor:offset:bytesPerRow:' type='@20@0:4@8I12I16' type64='@40@0:8@16Q24Q32'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='bytesPerRow' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='removeAllDebugMarkers' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLCaptureScope'>
<method selector='beginScope' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='commandQueue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='endScope' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLCommandBuffer'>
<method selector='addCompletedHandler:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='MTLCommandBufferHandler _Nonnull' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addScheduledHandler:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='MTLCommandBufferHandler _Nonnull' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='blitCommandEncoder' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='commandQueue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='commit' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='computeCommandEncoder' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='enqueue' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='error' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSError * _Nullable' type='@'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='parallelRenderCommandEncoderWithDescriptor:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='MTLRenderPassDescriptor * _Nonnull' index='0' name='renderPassDescriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='popDebugGroup' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentDrawable:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='drawable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentDrawable:atTime:' type='v20@0:4@8d12' type64='v32@0:8@16d24'>
<arg declared_type='id _Nonnull' index='0' name='drawable' type='@'/>
<arg declared_type='CFTimeInterval' index='1' name='presentationTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushDebugGroup:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderCommandEncoderWithDescriptor:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='MTLRenderPassDescriptor * _Nonnull' index='0' name='renderPassDescriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='retainedReferences' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='status' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLCommandBufferStatus' type='I' type64='Q'/>
</method>
<method selector='waitUntilCompleted' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitUntilScheduled' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLCommandEncoder'>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='endEncoding' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertDebugSignpost:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='popDebugGroup' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='pushDebugGroup:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLCommandQueue'>
<method selector='commandBuffer' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='commandBufferWithUnretainedReferences' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='insertDebugCaptureBoundary' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLComputeCommandEncoder'>
<method selector='dispatchThreadgroups:threadsPerThreadgroup:' type='v32@0:4{?=III}8{?=III}20' type64='v64@0:8{?=QQQ}16{?=QQQ}40'>
<arg declared_type='MTLSize' index='0' name='threadgroupsPerGrid' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='MTLSize' index='1' name='threadsPerThreadgroup' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:' type='v28@0:4@8I12{?=III}16' type64='v56@0:8@16Q24{?=QQQ}32'>
<arg declared_type='id _Nonnull' index='0' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='indirectBufferOffset' type='I' type64='Q'/>
<arg declared_type='MTLSize' index='2' name='threadsPerThreadgroup' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dispatchThreads:threadsPerThreadgroup:' type='v32@0:4{?=III}8{?=III}20' type64='v64@0:8{?=QQQ}16{?=QQQ}40'>
<arg declared_type='MTLSize' index='0' name='threadsPerGrid' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<arg declared_type='MTLSize' index='1' name='threadsPerThreadgroup' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBuffer:offset:atIndex:' type='v20@0:4@8I12I16' type64='v40@0:8@16Q24Q32'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBufferOffset:atIndex:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBuffers:offsets:withRange:' type='v24@0:4r^@8r^I12{_NSRange=II}16' type64='v48@0:8r^@16r^Q24{_NSRange=QQ}32'>
<arg const='true' declared_type='id _Nullable*' index='0' name='buffers' type='^@'/>
<arg const='true' declared_type='NSUInteger*' index='1' name='offsets' type='^I' type64='^Q'/>
<arg declared_type='NSRange' index='2' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBytes:length:atIndex:' type='v20@0:4r^v8I12I16' type64='v40@0:8r^v16Q24Q32'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='bytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setComputePipelineState:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerState:atIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerState:lodMinClamp:lodMaxClamp:atIndex:' type='v24@0:4@8f12f16I20' type64='v40@0:8@16f24f28Q32'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='float' index='1' name='lodMinClamp' type='f'/>
<arg declared_type='float' index='2' name='lodMaxClamp' type='f'/>
<arg declared_type='NSUInteger' index='3' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerStates:lodMinClamps:lodMaxClamps:withRange:' type='v28@0:4r^@8r^f12r^f16{_NSRange=II}20' type64='v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg const='true' declared_type='float*' index='1' name='lodMinClamps' type='^f'/>
<arg const='true' declared_type='float*' index='2' name='lodMaxClamps' type='^f'/>
<arg declared_type='NSRange' index='3' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSamplerStates:withRange:' type='v20@0:4r^@8{_NSRange=II}12' type64='v40@0:8r^@16{_NSRange=QQ}24'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStageInRegion:' type='v32@0:4{?={?=III}{?=III}}8' type64='v64@0:8{?={?=QQQ}{?=QQQ}}16'>
<arg declared_type='MTLRegion' index='0' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTexture:atIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextures:withRange:' type='v20@0:4r^@8{_NSRange=II}12' type64='v40@0:8r^@16{_NSRange=QQ}24'>
<arg const='true' declared_type='id _Nullable*' index='0' name='textures' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setThreadgroupMemoryLength:atIndex:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFence:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useHeap:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='heap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useHeaps:count:' type='v16@0:4r^@8I12' type64='v32@0:8r^@16Q24'>
<arg const='true' declared_type='id _Nonnull*' index='0' name='heaps' type='^@'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useResource:usage:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nonnull' index='0' name='resource' type='@'/>
<arg declared_type='MTLResourceUsage' index='1' name='usage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useResources:count:usage:' type='v20@0:4r^@8I12I16' type64='v40@0:8r^@16Q24Q32'>
<arg const='true' declared_type='id _Nonnull*' index='0' name='resources' type='^@'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<arg declared_type='MTLResourceUsage' index='2' name='usage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitForFence:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLComputePipelineState'>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='maxTotalThreadsPerThreadgroup' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='staticThreadgroupMemoryLength' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='threadExecutionWidth' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='MTLDepthStencilState'>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='MTLDevice'>
<method selector='areProgrammableSamplePositionsSupported' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='areRasterOrderGroupsSupported' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='argumentBuffersSupport' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLArgumentBuffersTier' type='I' type64='Q'/>
</method>
<method selector='currentAllocatedSize' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getDefaultSamplePositions:count:' type='v16@0:4^{?=ff}8I12' type64='v32@0:8^{?=ff}16Q24'>
<arg declared_type='MTLSamplePosition * _Nonnull' index='0' name='positions' type='^{_MTLSamplePosition=ff}'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='heapBufferSizeAndAlignWithLength:options:' type='{?=II}16@0:4I8I12' type64='{?=QQ}32@0:8Q16Q24'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='MTLSizeAndAlign' type='{_MTLSizeAndAlign=II}' type64='{_MTLSizeAndAlign=QQ}'/>
</method>
<method selector='heapTextureSizeAndAlignWithDescriptor:' type='{?=II}12@0:4@8' type64='{?=QQ}24@0:8@16'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='desc' type='@'/>
<retval declared_type='MTLSizeAndAlign' type='{_MTLSizeAndAlign=II}' type64='{_MTLSizeAndAlign=QQ}'/>
</method>
<method selector='isDepth24Stencil8PixelFormatSupported' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isHeadless' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLowPower' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRemovable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxThreadgroupMemoryLength' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='maxThreadsPerThreadgroup' type='{?=III}8@0:4' type64='{?=QQQ}16@0:8'>
<retval declared_type='MTLSize' type='{_MTLSize=III}' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='minimumLinearTextureAlignmentForPixelFormat:' type='I12@0:4I8' type64='Q24@0:8Q16'>
<arg declared_type='MTLPixelFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='name' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='newArgumentEncoderWithArguments:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSArray * _Nonnull' index='0' name='arguments' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newBufferWithBytes:length:options:' type='@20@0:4r^v8I12I16' type64='@40@0:8r^v16Q24Q32'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='pointer' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='2' name='options' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newBufferWithBytesNoCopy:length:options:deallocator:' type='@24@0:4^v8I12I16@?20' type64='@48@0:8^v16Q24Q32@?40'>
<arg declared_type='void * _Nonnull' index='0' name='pointer' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='2' name='options' type='I' type64='Q'/>
<arg declared_type='void (^ _Nullable)(void * _Nonnull, NSUInteger)' function_pointer='true' index='3' name='deallocator' type='@?'>
<arg declared_type='void * _Nonnull' type='^v'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newBufferWithLength:options:' type='@16@0:4I8I12' type64='@32@0:8Q16Q24'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newCommandQueue' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newCommandQueueWithMaxCommandBufferCount:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='maxCommandBufferCount' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newComputePipelineStateWithDescriptor:options:completionHandler:' type='v20@0:4@8I12@?16' type64='v40@0:8@16Q24@?32'>
<arg declared_type='MTLComputePipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLNewComputePipelineStateWithReflectionCompletionHandler _Nonnull' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='MTLComputePipelineReflection * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newComputePipelineStateWithDescriptor:options:reflection:error:' type='@24@0:4@8I12^@16^@20' type64='@48@0:8@16Q24^@32^@40'>
<arg declared_type='MTLComputePipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLAutoreleasedComputePipelineReflection * _Nullable' index='2' name='reflection' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newComputePipelineStateWithFunction:completionHandler:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='id _Nonnull' index='0' name='computeFunction' type='@'/>
<arg declared_type='MTLNewComputePipelineStateCompletionHandler _Nonnull' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newComputePipelineStateWithFunction:error:' type='@16@0:4@8^@12' type64='@32@0:8@16^@24'>
<arg declared_type='id _Nonnull' index='0' name='computeFunction' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newComputePipelineStateWithFunction:options:completionHandler:' type='v20@0:4@8I12@?16' type64='v40@0:8@16Q24@?32'>
<arg declared_type='id _Nonnull' index='0' name='computeFunction' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLNewComputePipelineStateWithReflectionCompletionHandler _Nonnull' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='MTLComputePipelineReflection * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newComputePipelineStateWithFunction:options:reflection:error:' type='@24@0:4@8I12^@16^@20' type64='@48@0:8@16Q24^@32^@40'>
<arg declared_type='id _Nonnull' index='0' name='computeFunction' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLAutoreleasedComputePipelineReflection * _Nullable' index='2' name='reflection' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newDefaultLibrary' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newDefaultLibraryWithBundle:error:' type='@16@0:4@8^@12' type64='@32@0:8@16^@24'>
<arg declared_type='NSBundle * _Nonnull' index='0' name='bundle' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newDepthStencilStateWithDescriptor:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='MTLDepthStencilDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newFence' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newHeapWithDescriptor:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='MTLHeapDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newLibraryWithData:error:' type='@16@0:4@8^@12' type64='@32@0:8@16^@24'>
<arg declared_type='dispatch_data_t _Nonnull' index='0' name='data' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newLibraryWithFile:error:' type='@16@0:4@8^@12' type64='@32@0:8@16^@24'>
<arg declared_type='NSString * _Nonnull' index='0' name='filepath' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newLibraryWithSource:options:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='NSString * _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='MTLCompileOptions * _Nullable' index='1' name='options' type='@'/>
<arg declared_type='MTLNewLibraryCompletionHandler _Nonnull' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newLibraryWithSource:options:error:' type='@20@0:4@8@12^@16' type64='@40@0:8@16@24^@32'>
<arg declared_type='NSString * _Nonnull' index='0' name='source' type='@'/>
<arg declared_type='MTLCompileOptions * _Nullable' index='1' name='options' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newLibraryWithURL:error:' type='@16@0:4@8^@12' type64='@32@0:8@16^@24'>
<arg declared_type='NSURL * _Nonnull' index='0' name='url' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newRenderPipelineStateWithDescriptor:completionHandler:' type='v16@0:4@8@?12' type64='v32@0:8@16@?24'>
<arg declared_type='MTLRenderPipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLNewRenderPipelineStateCompletionHandler _Nonnull' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newRenderPipelineStateWithDescriptor:error:' type='@16@0:4@8^@12' type64='@32@0:8@16^@24'>
<arg declared_type='MTLRenderPipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='1' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newRenderPipelineStateWithDescriptor:options:completionHandler:' type='v20@0:4@8I12@?16' type64='v40@0:8@16Q24@?32'>
<arg declared_type='MTLRenderPipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLNewRenderPipelineStateWithReflectionCompletionHandler _Nonnull' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='MTLRenderPipelineReflection * _Nullable' type='@'/>
<arg declared_type='NSError * _Nullable' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newRenderPipelineStateWithDescriptor:options:reflection:error:' type='@24@0:4@8I12^@16^@20' type64='@48@0:8@16Q24^@32^@40'>
<arg declared_type='MTLRenderPipelineDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='MTLPipelineOption' index='1' name='options' type='I' type64='Q'/>
<arg declared_type='MTLAutoreleasedRenderPipelineReflection * _Nullable' index='2' name='reflection' type='^@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='3' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newSamplerStateWithDescriptor:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='MTLSamplerDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newTextureWithDescriptor:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='desc' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newTextureWithDescriptor:iosurface:plane:' type='@20@0:4@8^{__IOSurface=}12I16' type64='@40@0:8@16^{__IOSurface=}24Q32'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='descriptor' type='@'/>
<arg declared_type='IOSurfaceRef _Nonnull' index='1' name='iosurface' type='^{__IOSurface=}'/>
<arg declared_type='NSUInteger' index='2' name='plane' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='readWriteTextureSupport' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLReadWriteTextureTier' type='I' type64='Q'/>
</method>
<method selector='recommendedMaxWorkingSetSize' type='Q8@0:4' type64='Q16@0:8'>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method selector='registryID' type='Q8@0:4' type64='Q16@0:8'>
<retval declared_type='uint64_t' type='Q'/>
</method>
<method selector='supportsFeatureSet:' type='B12@0:4I8' type64='B24@0:8Q16'>
<arg declared_type='MTLFeatureSet' index='0' name='featureSet' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsTextureSampleCount:' type='B12@0:4I8' type64='B24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='sampleCount' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='MTLDrawable'>
<method selector='present' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentAtTime:' type='v16@0:4d8' type64='v24@0:8d16'>
<arg declared_type='CFTimeInterval' index='0' name='presentationTime' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLFence'>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLFunction'>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='functionConstantsDictionary' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSDictionary * _Nonnull' type='@'/>
</method>
<method selector='functionType' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLFunctionType' type='I' type64='Q'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='name' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nonnull' type='@'/>
</method>
<method selector='newArgumentEncoderWithBufferIndex:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='bufferIndex' type='I' type64='Q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newArgumentEncoderWithBufferIndex:reflection:' type='@16@0:4I8^@12' type64='@32@0:8Q16^@24'>
<arg declared_type='NSUInteger' index='0' name='bufferIndex' type='I' type64='Q'/>
<arg declared_type='MTLAutoreleasedArgument * _Nullable' index='1' name='reflection' type='^@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='patchControlPointCount' type='i8@0:4' type64='q16@0:8'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='patchType' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLPatchType' type='I' type64='Q'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stageInputAttributes' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
<method selector='vertexAttributes' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='MTLHeap'>
<method selector='cpuCacheMode' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLCPUCacheMode' type='I' type64='Q'/>
</method>
<method selector='currentAllocatedSize' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='maxAvailableSizeWithAlignment:' type='I12@0:4I8' type64='Q24@0:8Q16'>
<arg declared_type='NSUInteger' index='0' name='alignment' type='I' type64='Q'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='newBufferWithLength:options:' type='@16@0:4I8I12' type64='@32@0:8Q16Q24'>
<arg declared_type='NSUInteger' index='0' name='length' type='I' type64='Q'/>
<arg declared_type='MTLResourceOptions' index='1' name='options' type='I' type64='Q'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='newTextureWithDescriptor:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='MTLTextureDescriptor * _Nonnull' index='0' name='desc' type='@'/>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurgeableState:' type='I12@0:4I8' type64='Q24@0:8Q16'>
<arg declared_type='MTLPurgeableState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='MTLPurgeableState' type='I' type64='Q'/>
</method>
<method selector='size' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='storageMode' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLStorageMode' type='I' type64='Q'/>
</method>
<method selector='usedSize' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='MTLLibrary'>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='functionNames' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSArray * _Nonnull' type='@'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='newFunctionWithName:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSString * _Nonnull' index='0' name='functionName' type='@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newFunctionWithName:constantValues:completionHandler:' type='v20@0:4@8@12@?16' type64='v40@0:8@16@24@?32'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='MTLFunctionConstantValues * _Nonnull' index='1' name='constantValues' type='@'/>
<arg declared_type='void (^ _Nonnull)(id _Nullable, NSError * _Nonnull)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='id _Nullable' type='@'/>
<arg declared_type='NSError * _Nonnull' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='newFunctionWithName:constantValues:error:' type='@20@0:4@8@12^@16' type64='@40@0:8@16@24^@32'>
<arg declared_type='NSString * _Nonnull' index='0' name='name' type='@'/>
<arg declared_type='MTLFunctionConstantValues * _Nonnull' index='1' name='constantValues' type='@'/>
<arg declared_type='NSError * _Nullable * _Nullable' index='2' name='error' type='^@'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLParallelRenderCommandEncoder'>
<method selector='renderCommandEncoder' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='setColorStoreAction:atIndex:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='colorAttachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorStoreActionOptions:atIndex:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='colorAttachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStoreAction:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStoreActionOptions:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilStoreAction:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilStoreActionOptions:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLRenderCommandEncoder'>
<method selector='drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:' type='v36@0:4I8@12I16@20I24@28I32' type64='v72@0:8Q16@24Q32@40Q48@56Q64'>
<arg declared_type='NSUInteger' index='0' name='numberOfPatchControlPoints' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='1' name='patchIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='patchIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='controlPointIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='controlPointIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='5' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='6' name='indirectBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:' type='v44@0:4I8I12I16@20I24@28I32I36I40' type64='v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80'>
<arg declared_type='NSUInteger' index='0' name='numberOfPatchControlPoints' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='patchStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='patchCount' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='3' name='patchIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='patchIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='5' name='controlPointIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='6' name='controlPointIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='7' name='instanceCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='8' name='baseInstance' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:' type='v28@0:4I8I12I16@20I24' type64='v56@0:8Q16Q24Q32@40Q48'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='indexCount' type='I' type64='Q'/>
<arg declared_type='MTLIndexType' index='2' name='indexType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='indexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='indexBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:' type='v32@0:4I8I12I16@20I24I28' type64='v64@0:8Q16Q24Q32@40Q48Q56'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='indexCount' type='I' type64='Q'/>
<arg declared_type='MTLIndexType' index='2' name='indexType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='indexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='indexBufferOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='instanceCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:' type='v40@0:4I8I12I16@20I24I28i32I36' type64='v80@0:8Q16Q24Q32@40Q48Q56q64Q72'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='indexCount' type='I' type64='Q'/>
<arg declared_type='MTLIndexType' index='2' name='indexType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='indexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='indexBufferOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='instanceCount' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='6' name='baseVertex' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='7' name='baseInstance' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:' type='v32@0:4I8I12@16I20@24I28' type64='v64@0:8Q16Q24@32Q40@48Q56'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='MTLIndexType' index='1' name='indexType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='2' name='indexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='3' name='indexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='4' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='5' name='indirectBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:' type='v28@0:4I8@12I16@20I24' type64='v56@0:8Q16@24Q32@40Q48'>
<arg declared_type='NSUInteger' index='0' name='numberOfPatchControlPoints' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='1' name='patchIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='patchIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='3' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='indirectBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:' type='v36@0:4I8I12I16@20I24I28I32' type64='v72@0:8Q16Q24Q32@40Q48Q56Q64'>
<arg declared_type='NSUInteger' index='0' name='numberOfPatchControlPoints' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='patchStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='patchCount' type='I' type64='Q'/>
<arg declared_type='id _Nullable' index='3' name='patchIndexBuffer' type='@'/>
<arg declared_type='NSUInteger' index='4' name='patchIndexBufferOffset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='instanceCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='6' name='baseInstance' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrimitives:indirectBuffer:indirectBufferOffset:' type='v20@0:4I8@12I16' type64='v40@0:8Q16@24Q32'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='id _Nonnull' index='1' name='indirectBuffer' type='@'/>
<arg declared_type='NSUInteger' index='2' name='indirectBufferOffset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrimitives:vertexStart:vertexCount:' type='v20@0:4I8I12I16' type64='v40@0:8Q16Q24Q32'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='vertexStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='vertexCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrimitives:vertexStart:vertexCount:instanceCount:' type='v24@0:4I8I12I16I20' type64='v48@0:8Q16Q24Q32Q40'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='vertexStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='vertexCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='instanceCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:' type='v28@0:4I8I12I16I20I24' type64='v56@0:8Q16Q24Q32Q40Q48'>
<arg declared_type='MTLPrimitiveType' index='0' name='primitiveType' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='vertexStart' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='vertexCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='instanceCount' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='4' name='baseInstance' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlendColorRed:green:blue:alpha:' type='v24@0:4f8f12f16f20' type64='v32@0:8f16f20f24f28'>
<arg declared_type='float' index='0' name='red' type='f'/>
<arg declared_type='float' index='1' name='green' type='f'/>
<arg declared_type='float' index='2' name='blue' type='f'/>
<arg declared_type='float' index='3' name='alpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorStoreAction:atIndex:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='colorAttachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColorStoreActionOptions:atIndex:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='colorAttachmentIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCullMode:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLCullMode' index='0' name='cullMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthBias:slopeScale:clamp:' type='v20@0:4f8f12f16' type64='v28@0:8f16f20f24'>
<arg declared_type='float' index='0' name='depthBias' type='f'/>
<arg declared_type='float' index='1' name='slopeScale' type='f'/>
<arg declared_type='float' index='2' name='clamp' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthClipMode:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLDepthClipMode' index='0' name='depthClipMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStencilState:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nullable' index='0' name='depthStencilState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStoreAction:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDepthStoreActionOptions:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentBuffer:offset:atIndex:' type='v20@0:4@8I12I16' type64='v40@0:8@16Q24Q32'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentBufferOffset:atIndex:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentBuffers:offsets:withRange:' type='v24@0:4r^@8r^I12{_NSRange=II}16' type64='v48@0:8r^@16r^Q24{_NSRange=QQ}32'>
<arg const='true' declared_type='id _Nullable*' index='0' name='buffers' type='^@'/>
<arg const='true' declared_type='NSUInteger*' index='1' name='offsets' type='^I' type64='^Q'/>
<arg declared_type='NSRange' index='2' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentBytes:length:atIndex:' type='v20@0:4r^v8I12I16' type64='v40@0:8r^v16Q24Q32'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='bytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentSamplerState:atIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:' type='v24@0:4@8f12f16I20' type64='v40@0:8@16f24f28Q32'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='float' index='1' name='lodMinClamp' type='f'/>
<arg declared_type='float' index='2' name='lodMaxClamp' type='f'/>
<arg declared_type='NSUInteger' index='3' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:' type='v28@0:4r^@8r^f12r^f16{_NSRange=II}20' type64='v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg const='true' declared_type='float*' index='1' name='lodMinClamps' type='^f'/>
<arg const='true' declared_type='float*' index='2' name='lodMaxClamps' type='^f'/>
<arg declared_type='NSRange' index='3' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentSamplerStates:withRange:' type='v20@0:4r^@8{_NSRange=II}12' type64='v40@0:8r^@16{_NSRange=QQ}24'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentTexture:atIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFragmentTextures:withRange:' type='v20@0:4r^@8{_NSRange=II}12' type64='v40@0:8r^@16{_NSRange=QQ}24'>
<arg const='true' declared_type='id _Nullable*' index='0' name='textures' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrontFacingWinding:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLWinding' index='0' name='frontFacingWinding' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRenderPipelineState:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='pipelineState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScissorRect:' type='v24@0:4{?=IIII}8' type64='v48@0:8{?=QQQQ}16'>
<arg declared_type='MTLScissorRect' index='0' name='rect' type='{_MTLScissorRect=IIII}' type64='{_MTLScissorRect=QQQQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScissorRects:count:' type='v16@0:4r^{?=IIII}8I12' type64='v32@0:8r^{?=QQQQ}16Q24'>
<arg const='true' declared_type='MTLScissorRect*' index='0' name='scissorRects' type='^{_MTLScissorRect=IIII}' type64='^{_MTLScissorRect=QQQQ}'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilFrontReferenceValue:backReferenceValue:' type='v16@0:4I8I12' type64='v24@0:8I16I20'>
<arg declared_type='uint32_t' index='0' name='frontReferenceValue' type='I'/>
<arg declared_type='uint32_t' index='1' name='backReferenceValue' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilReferenceValue:' type='v12@0:4I8' type64='v20@0:8I16'>
<arg declared_type='uint32_t' index='0' name='referenceValue' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilStoreAction:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLStoreAction' index='0' name='storeAction' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStencilStoreActionOptions:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLStoreActionOptions' index='0' name='storeActionOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationFactorBuffer:offset:instanceStride:' type='v20@0:4@8I12I16' type64='v40@0:8@16Q24Q32'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='instanceStride' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTessellationFactorScale:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='scale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTriangleFillMode:' type='v12@0:4I8' type64='v24@0:8Q16'>
<arg declared_type='MTLTriangleFillMode' index='0' name='fillMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexBuffer:offset:atIndex:' type='v20@0:4@8I12I16' type64='v40@0:8@16Q24Q32'>
<arg declared_type='id _Nullable' index='0' name='buffer' type='@'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexBufferOffset:atIndex:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='NSUInteger' index='0' name='offset' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexBuffers:offsets:withRange:' type='v24@0:4r^@8r^I12{_NSRange=II}16' type64='v48@0:8r^@16r^Q24{_NSRange=QQ}32'>
<arg const='true' declared_type='id _Nullable*' index='0' name='buffers' type='^@'/>
<arg const='true' declared_type='NSUInteger*' index='1' name='offsets' type='^I' type64='^Q'/>
<arg declared_type='NSRange' index='2' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexBytes:length:atIndex:' type='v20@0:4r^v8I12I16' type64='v40@0:8r^v16Q24Q32'>
<arg const='true' declared_type='void * _Nonnull' index='0' name='bytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='length' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexSamplerState:atIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:' type='v24@0:4@8f12f16I20' type64='v40@0:8@16f24f28Q32'>
<arg declared_type='id _Nullable' index='0' name='sampler' type='@'/>
<arg declared_type='float' index='1' name='lodMinClamp' type='f'/>
<arg declared_type='float' index='2' name='lodMaxClamp' type='f'/>
<arg declared_type='NSUInteger' index='3' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:' type='v28@0:4r^@8r^f12r^f16{_NSRange=II}20' type64='v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg const='true' declared_type='float*' index='1' name='lodMinClamps' type='^f'/>
<arg const='true' declared_type='float*' index='2' name='lodMaxClamps' type='^f'/>
<arg declared_type='NSRange' index='3' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexSamplerStates:withRange:' type='v20@0:4r^@8{_NSRange=II}12' type64='v40@0:8r^@16{_NSRange=QQ}24'>
<arg const='true' declared_type='id _Nullable*' index='0' name='samplers' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexTexture:atIndex:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nullable' index='0' name='texture' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVertexTextures:withRange:' type='v20@0:4r^@8{_NSRange=II}12' type64='v40@0:8r^@16{_NSRange=QQ}24'>
<arg const='true' declared_type='id _Nullable*' index='0' name='textures' type='^@'/>
<arg declared_type='NSRange' index='1' name='range' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewport:' type='v56@0:4{?=dddddd}8' type64='v64@0:8{?=dddddd}16'>
<arg declared_type='MTLViewport' index='0' name='viewport' type='{_MTLViewport=dddddd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewports:count:' type='v16@0:4r^{?=dddddd}8I12' type64='v32@0:8r^{?=dddddd}16Q24'>
<arg const='true' declared_type='MTLViewport*' index='0' name='viewports' type='^{_MTLViewport=dddddd}'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisibilityResultMode:offset:' type='v16@0:4I8I12' type64='v32@0:8Q16Q24'>
<arg declared_type='MTLVisibilityResultMode' index='0' name='mode' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='offset' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textureBarrier' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateFence:afterStages:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<arg declared_type='MTLRenderStages' index='1' name='stages' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useHeap:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='id _Nonnull' index='0' name='heap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useHeaps:count:' type='v16@0:4r^@8I12' type64='v32@0:8r^@16Q24'>
<arg const='true' declared_type='id _Nonnull*' index='0' name='heaps' type='^@'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useResource:usage:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nonnull' index='0' name='resource' type='@'/>
<arg declared_type='MTLResourceUsage' index='1' name='usage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='useResources:count:usage:' type='v20@0:4r^@8I12I16' type64='v40@0:8r^@16Q24Q32'>
<arg const='true' declared_type='id _Nonnull*' index='0' name='resources' type='^@'/>
<arg declared_type='NSUInteger' index='1' name='count' type='I' type64='Q'/>
<arg declared_type='MTLResourceUsage' index='2' name='usage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='waitForFence:beforeStages:' type='v16@0:4@8I12' type64='v32@0:8@16Q24'>
<arg declared_type='id _Nonnull' index='0' name='fence' type='@'/>
<arg declared_type='MTLRenderStages' index='1' name='stages' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MTLRenderPipelineState'>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='MTLResource'>
<method selector='allocatedSize' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='cpuCacheMode' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLCPUCacheMode' type='I' type64='Q'/>
</method>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='heap' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='isAliasable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
<method selector='makeAliasable' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString * _Nullable' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurgeableState:' type='I12@0:4I8' type64='Q24@0:8Q16'>
<arg declared_type='MTLPurgeableState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='MTLPurgeableState' type='I' type64='Q'/>
</method>
<method selector='storageMode' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLStorageMode' type='I' type64='Q'/>
</method>
</informal_protocol>
<informal_protocol name='MTLSamplerState'>
<method selector='device' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nonnull' type='@'/>
</method>
<method selector='label' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString * _Nullable' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='MTLTexture'>
<method selector='arrayLength' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='buffer' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='bufferBytesPerRow' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='bufferOffset' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='depth' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:' type='v52@0:4^v8I12I16{?={?=III}{?=III}}20I44I48' type64='v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96'>
<arg declared_type='void * _Nonnull' index='0' name='pixelBytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='bytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='bytesPerImage' type='I' type64='Q'/>
<arg declared_type='MTLRegion' index='3' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<arg declared_type='NSUInteger' index='4' name='level' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='slice' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBytes:bytesPerRow:fromRegion:mipmapLevel:' type='v44@0:4^v8I12{?={?=III}{?=III}}16I40' type64='v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80'>
<arg declared_type='void * _Nonnull' index='0' name='pixelBytes' type='^v'/>
<arg declared_type='NSUInteger' index='1' name='bytesPerRow' type='I' type64='Q'/>
<arg declared_type='MTLRegion' index='2' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<arg declared_type='NSUInteger' index='3' name='level' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='height' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='iosurface' type='^{__IOSurface=}8@0:4' type64='^{__IOSurface=}16@0:8'>
<retval declared_type='IOSurfaceRef _Nullable' type='^{__IOSurface=}'/>
</method>
<method selector='iosurfacePlane' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='isFramebufferOnly' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mipmapLevelCount' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='newTextureViewWithPixelFormat:' type='@12@0:4I8' type64='@24@0:8Q16'>
<arg declared_type='MTLPixelFormat' index='0' name='pixelFormat' type='I' type64='Q'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='newTextureViewWithPixelFormat:textureType:levels:slices:' type='@32@0:4I8I12{_NSRange=II}16{_NSRange=II}24' type64='@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48'>
<arg declared_type='MTLPixelFormat' index='0' name='pixelFormat' type='I' type64='Q'/>
<arg declared_type='MTLTextureType' index='1' name='textureType' type='I' type64='Q'/>
<arg declared_type='NSRange' index='2' name='levelRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<arg declared_type='NSRange' index='3' name='sliceRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='parentRelativeLevel' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='parentRelativeSlice' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='parentTexture' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='pixelFormat' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLPixelFormat' type='I' type64='Q'/>
</method>
<method selector='replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:' type='v52@0:4{?={?=III}{?=III}}8I32I36r^v40I44I48' type64='v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96'>
<arg declared_type='MTLRegion' index='0' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<arg declared_type='NSUInteger' index='1' name='level' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='slice' type='I' type64='Q'/>
<arg const='true' declared_type='void * _Nonnull' index='3' name='pixelBytes' type='^v'/>
<arg declared_type='NSUInteger' index='4' name='bytesPerRow' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='5' name='bytesPerImage' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceRegion:mipmapLevel:withBytes:bytesPerRow:' type='v44@0:4{?={?=III}{?=III}}8I32r^v36I40' type64='v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80'>
<arg declared_type='MTLRegion' index='0' name='region' type='{_MTLRegion={_MTLOrigin=III}{_MTLSize=III}}' type64='{_MTLRegion={_MTLOrigin=QQQ}{_MTLSize=QQQ}}'/>
<arg declared_type='NSUInteger' index='1' name='level' type='I' type64='Q'/>
<arg const='true' declared_type='void * _Nonnull' index='2' name='pixelBytes' type='^v'/>
<arg declared_type='NSUInteger' index='3' name='bytesPerRow' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rootResource' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='id _Nullable' type='@'/>
</method>
<method selector='sampleCount' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='textureType' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLTextureType' type='I' type64='Q'/>
</method>
<method selector='usage' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='MTLTextureUsage' type='I' type64='Q'/>
</method>
<method selector='width' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</informal_protocol>
</signatures>
