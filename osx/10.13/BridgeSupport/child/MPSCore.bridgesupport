<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='MPSImageReadWriteParams' type64='{_MPSImageReadWriteParams=&quot;featureChannelOffset&quot;Q&quot;numberOfFeatureChannelsToReadWrite&quot;Q}'>
<field declared_type64='NSUInteger' name='featureChannelOffset' type64='Q'/>
<field declared_type64='NSUInteger' name='numberOfFeatureChannelsToReadWrite' type64='Q'/>
</struct>
<struct name='MPSOffset' type64='{_MPSOffset=&quot;x&quot;q&quot;y&quot;q&quot;z&quot;q}'>
<field declared_type64='NSInteger' name='x' type64='q'/>
<field declared_type64='NSInteger' name='y' type64='q'/>
<field declared_type64='NSInteger' name='z' type64='q'/>
</struct>
<struct name='MPSOrigin' type64='{MPSOrigin=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d}'>
<field declared_type64='double' name='x' type64='d'/>
<field declared_type64='double' name='y' type64='d'/>
<field declared_type64='double' name='z' type64='d'/>
</struct>
<struct name='MPSRegion' type64='{MPSRegion=&quot;origin&quot;{MPSOrigin=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d}&quot;size&quot;{MPSSize=&quot;width&quot;d&quot;height&quot;d&quot;depth&quot;d}}'>
<field declared_type64='MPSOrigin' name='origin' type64='{MPSOrigin=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d}'/>
<field declared_type64='MPSSize' name='size' type64='{MPSSize=&quot;width&quot;d&quot;height&quot;d&quot;depth&quot;d}'/>
</struct>
<struct name='MPSScaleTransform' type64='{MPSScaleTransform=&quot;scaleX&quot;d&quot;scaleY&quot;d&quot;translateX&quot;d&quot;translateY&quot;d}'>
<field declared_type64='double' name='scaleX' type64='d'/>
<field declared_type64='double' name='scaleY' type64='d'/>
<field declared_type64='double' name='translateX' type64='d'/>
<field declared_type64='double' name='translateY' type64='d'/>
</struct>
<struct name='MPSSize' type64='{MPSSize=&quot;width&quot;d&quot;height&quot;d&quot;depth&quot;d}'>
<field declared_type64='double' name='width' type64='d'/>
<field declared_type64='double' name='height' type64='d'/>
<field declared_type64='double' name='depth' type64='d'/>
</struct>
<constant const='true' declared_type64='MTLRegion' name='MPSRectNoClip' type64='{_MTLRegion={?=QQQ}{?=QQQ}}'/>
<enum name='MPSDataLayoutFeatureChannelsxHeightxWidth' value64='1'/>
<enum name='MPSDataLayoutHeightxWidthxFeatureChannels' value64='0'/>
<enum name='MPSDataTypeFloat16' value64='268435472'/>
<enum name='MPSDataTypeFloat32' value64='268435488'/>
<enum name='MPSDataTypeFloatBit' value64='268435456'/>
<enum name='MPSDataTypeInt16' value64='536870928'/>
<enum name='MPSDataTypeInt8' value64='536870920'/>
<enum name='MPSDataTypeIntBit' value64='536870912'/>
<enum name='MPSDataTypeInvalid' value64='0'/>
<enum name='MPSDataTypeNormalizedBit' value64='1073741824'/>
<enum name='MPSDataTypeSignedBit' value64='536870912'/>
<enum name='MPSDataTypeUInt16' value64='16'/>
<enum name='MPSDataTypeUInt32' value64='32'/>
<enum name='MPSDataTypeUInt8' value64='8'/>
<enum name='MPSDataTypeUnorm1' value64='1073741825'/>
<enum name='MPSDataTypeUnorm8' value64='1073741832'/>
<enum name='MPSImageEdgeModeClamp' value64='1'/>
<enum name='MPSImageEdgeModeZero' value64='0'/>
<enum name='MPSImageFeatureChannelFormatFloat16' value64='3'/>
<enum name='MPSImageFeatureChannelFormatFloat32' value64='4'/>
<enum name='MPSImageFeatureChannelFormatNone' value64='0'/>
<enum name='MPSImageFeatureChannelFormatUnorm16' value64='2'/>
<enum name='MPSImageFeatureChannelFormatUnorm8' value64='1'/>
<enum name='MPSKernelOptionsAllowReducedPrecision' value64='2'/>
<enum name='MPSKernelOptionsDisableInternalTiling' value64='4'/>
<enum name='MPSKernelOptionsInsertDebugGroups' value64='8'/>
<enum name='MPSKernelOptionsNone' value64='0'/>
<enum name='MPSKernelOptionsSkipAPIValidation' value64='1'/>
<enum name='MPSKernelOptionsVerbose' value64='16'/>
<enum name='MPSPurgeableStateAllocationDeferred' value64='0'/>
<enum name='MPSPurgeableStateEmpty' value64='4'/>
<enum name='MPSPurgeableStateKeepCurrent' value64='1'/>
<enum name='MPSPurgeableStateNonVolatile' value64='2'/>
<enum name='MPSPurgeableStateVolatile' value64='3'/>
<class name='MPSImage'>
<method class_method='true' selector='defaultAllocator'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='device'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='featureChannels'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='height'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='initWithDevice:imageDescriptor:'>
<arg declared_type64='id _Nonnull' index='0' name='device' type64='@'/>
<arg const='true' declared_type64='MPSImageDescriptor * _Nonnull' index='1' name='imageDescriptor' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTexture:featureChannels:'>
<arg declared_type64='id _Nonnull' index='0' name='texture' type64='@'/>
<arg declared_type64='NSUInteger' index='1' name='featureChannels' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='label'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='numberOfImages'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='pixelFormat'>
<retval declared_type64='MTLPixelFormat' type64='Q'/>
</method>
<method selector='pixelSize'>
<retval declared_type64='size_t' type64='Q'/>
</method>
<method selector='precision'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='readBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:'>
<arg declared_type64='void * _Nonnull' index='0' name='dataBytes' type64='^v'/>
<arg declared_type64='MPSDataLayout' index='1' name='dataLayout' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='bytesPerRow' type64='Q'/>
<arg declared_type64='MTLRegion' index='3' name='region' type64='{_MTLRegion={?=QQQ}{?=QQQ}}'/>
<arg declared_type64='MPSImageReadWriteParams' index='4' name='featureChannelInfo' type64='{_MPSImageReadWriteParams=QQ}'/>
<arg declared_type64='NSUInteger' index='5' name='imageIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readBytes:dataLayout:imageIndex:'>
<arg declared_type64='void * _Nonnull' index='0' name='dataBytes' type64='^v'/>
<arg declared_type64='MPSDataLayout' index='1' name='dataLayout' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='imageIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setPurgeableState:'>
<arg declared_type64='MPSPurgeableState' index='0' name='state' type64='Q'/>
<retval declared_type64='MPSPurgeableState' type64='Q'/>
</method>
<method selector='texture'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='textureType'>
<retval declared_type64='MTLTextureType' type64='Q'/>
</method>
<method selector='usage'>
<retval declared_type64='MTLTextureUsage' type64='Q'/>
</method>
<method selector='width'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='writeBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:'>
<arg const='true' declared_type64='void * _Nonnull' index='0' name='dataBytes' type64='^v'/>
<arg declared_type64='MPSDataLayout' index='1' name='dataLayout' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='bytesPerRow' type64='Q'/>
<arg declared_type64='MTLRegion' index='3' name='region' type64='{_MTLRegion={?=QQQ}{?=QQQ}}'/>
<arg declared_type64='MPSImageReadWriteParams' index='4' name='featureChannelInfo' type64='{_MPSImageReadWriteParams=QQ}'/>
<arg declared_type64='NSUInteger' index='5' name='imageIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='writeBytes:dataLayout:imageIndex:'>
<arg const='true' declared_type64='void * _Nonnull' index='0' name='dataBytes' type64='^v'/>
<arg declared_type64='MPSDataLayout' index='1' name='dataLayout' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='imageIndex' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPSImageDescriptor'>
<method selector='channelFormat'>
<retval declared_type64='MPSImageFeatureChannelFormat' type64='Q'/>
</method>
<method selector='cpuCacheMode'>
<retval declared_type64='MTLCPUCacheMode' type64='Q'/>
</method>
<method selector='featureChannels'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='height'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method class_method='true' selector='imageDescriptorWithChannelFormat:width:height:featureChannels:'>
<arg declared_type64='MPSImageFeatureChannelFormat' index='0' name='channelFormat' type64='Q'/>
<arg declared_type64='NSUInteger' index='1' name='width' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='height' type64='Q'/>
<arg declared_type64='NSUInteger' index='3' name='featureChannels' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageDescriptorWithChannelFormat:width:height:featureChannels:numberOfImages:usage:'>
<arg declared_type64='MPSImageFeatureChannelFormat' index='0' name='channelFormat' type64='Q'/>
<arg declared_type64='NSUInteger' index='1' name='width' type64='Q'/>
<arg declared_type64='NSUInteger' index='2' name='height' type64='Q'/>
<arg declared_type64='NSUInteger' index='3' name='featureChannels' type64='Q'/>
<arg declared_type64='NSUInteger' index='4' name='numberOfImages' type64='Q'/>
<arg declared_type64='MTLTextureUsage' index='5' name='usage' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='numberOfImages'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='pixelFormat'>
<retval declared_type64='MTLPixelFormat' type64='Q'/>
</method>
<method selector='setChannelFormat:'>
<arg declared_type64='MPSImageFeatureChannelFormat' index='0' name='channelFormat' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setCpuCacheMode:'>
<arg declared_type64='MTLCPUCacheMode' index='0' name='cpuCacheMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setFeatureChannels:'>
<arg declared_type64='NSUInteger' index='0' name='featureChannels' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setHeight:'>
<arg declared_type64='NSUInteger' index='0' name='height' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setNumberOfImages:'>
<arg declared_type64='NSUInteger' index='0' name='numberOfImages' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setStorageMode:'>
<arg declared_type64='MTLStorageMode' index='0' name='storageMode' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setUsage:'>
<arg declared_type64='MTLTextureUsage' index='0' name='usage' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setWidth:'>
<arg declared_type64='NSUInteger' index='0' name='width' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='storageMode'>
<retval declared_type64='MTLStorageMode' type64='Q'/>
</method>
<method selector='usage'>
<retval declared_type64='MTLTextureUsage' type64='Q'/>
</method>
<method selector='width'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
</class>
<class name='MPSKernel'>
<method selector='copyWithZone:device:'>
<arg declared_type64='NSZone * _Nullable' index='0' name='zone' type64='^{_NSZone=}'/>
<arg declared_type64='id _Nullable' index='1' name='device' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='device'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method selector='initWithCoder:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithCoder:device:'>
<arg declared_type64='NSCoder * _Nonnull' index='0' name='aDecoder' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='device' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithDevice:'>
<arg declared_type64='id _Nonnull' index='0' name='device' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='label'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='options'>
<retval declared_type64='MPSKernelOptions' type64='Q'/>
</method>
<method selector='setLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setOptions:'>
<arg declared_type64='MPSKernelOptions' index='0' name='options' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPSState'>
<method selector='isTemporary'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='label'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='readCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='setLabel:'>
<arg declared_type64='NSString * _Nullable' index='0' name='label' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setReadCount:'>
<arg declared_type64='NSUInteger' index='0' name='readCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='MPSTemporaryImage'>
<method class_method='true' selector='defaultAllocator'>
<retval declared_type64='id _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='prefetchStorageWithCommandBuffer:imageDescriptorList:'>
<arg declared_type64='id _Nonnull' index='0' name='commandBuffer' type64='@'/>
<arg declared_type64='NSArray * _Nonnull' index='1' name='descriptorList' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='readCount'>
<retval declared_type64='NSUInteger' type64='Q'/>
</method>
<method selector='setReadCount:'>
<arg declared_type64='NSUInteger' index='0' name='readCount' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='temporaryImageWithCommandBuffer:imageDescriptor:'>
<arg declared_type64='id _Nonnull' index='0' name='commandBuffer' type64='@'/>
<arg const='true' declared_type64='MPSImageDescriptor * _Nonnull' index='1' name='imageDescriptor' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='temporaryImageWithCommandBuffer:textureDescriptor:'>
<arg declared_type64='id _Nonnull' index='0' name='commandBuffer' type64='@'/>
<arg const='true' declared_type64='MTLTextureDescriptor * _Nonnull' index='1' name='textureDescriptor' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='imageForCommandBuffer:imageDescriptor:kernel:'>
<arg declared_type64='id _Nonnull' index='0' name='cmdBuf' type64='@'/>
<arg declared_type64='MPSImageDescriptor * _Nonnull' index='1' name='descriptor' type64='@'/>
<arg declared_type64='MPSKernel * _Nonnull' index='2' name='kernel' type64='@'/>
<retval declared_type64='MPSImage * _Nonnull' type64='@'/>
</method>
<method selector='mpsMTLDevice'>
<retval declared_type64='id' type64='@'/>
</method>
</class>
<informal_protocol name='MPSDeviceProvider'>
<method selector='mpsMTLDevice' type64='@16@0:8'>
<retval declared_type64='id' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='MPSImageAllocator'>
<method selector='imageForCommandBuffer:imageDescriptor:kernel:' type64='@40@0:8@16@24@32'>
<arg declared_type64='id _Nonnull' index='0' name='cmdBuf' type64='@'/>
<arg declared_type64='MPSImageDescriptor * _Nonnull' index='1' name='descriptor' type64='@'/>
<arg declared_type64='MPSKernel * _Nonnull' index='2' name='kernel' type64='@'/>
<retval declared_type64='MPSImage * _Nonnull' type64='@'/>
</method>
</informal_protocol>
</signatures>
