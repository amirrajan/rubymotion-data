<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/Cocoa.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/IOBluetooth.framework'/>
<depends_on path='/System/Library/Frameworks/DiskArbitration.framework'/>
<depends_on path='/System/Library/Frameworks/QuickLook.framework'/>
<depends_on path='/System/Library/Frameworks/AVFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreMedia.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/ColorSync.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<struct name='ICACloseSessionPB' type='{ICACloseSessionPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;sessionID&quot;I}' type64='{ICACloseSessionPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;sessionID&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICASessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICACopyObjectDataPB' type='{ICACopyObjectDataPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;startByte&quot;I&quot;requestedSize&quot;I&quot;data&quot;^^{__CFData}}' type64='{ICACopyObjectDataPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;startByte&quot;Q&quot;requestedSize&quot;Q&quot;data&quot;^^{__CFData}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='size_t' name='startByte' type='L' type64='Q'/>
<field declared_type='size_t' name='requestedSize' type='L' type64='Q'/>
<field declared_type='CFDataRef*' name='data' type='^^{__CFData}'/>
</struct>
<struct name='ICACopyObjectPropertyDictionaryPB' type='{ICACopyObjectPropertyDictionaryPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;theDict&quot;^^{__CFDictionary}}' type64='{ICACopyObjectPropertyDictionaryPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;theDict&quot;^^{__CFDictionary}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='CFDictionaryRef*' name='theDict' type='^^{__CFDictionary}'/>
</struct>
<struct name='ICACopyObjectThumbnailPB' type='{ICACopyObjectThumbnailPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;thumbnailFormat&quot;I&quot;thumbnailData&quot;^^{__CFData}}' type64='{ICACopyObjectThumbnailPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;thumbnailFormat&quot;I&quot;thumbnailData&quot;^^{__CFData}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='OSType' name='thumbnailFormat' type='L' type64='I'/>
<field declared_type='CFDataRef*' name='thumbnailData' type='^^{__CFData}'/>
</struct>
<struct name='ICADownloadFilePB' type='{ICADownloadFilePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;dirFSRef&quot;^{FSRef}&quot;flags&quot;I&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;rotationAngle&quot;i&quot;fileFSRef&quot;^{FSRef}}' type64='{ICADownloadFilePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;dirFSRef&quot;^{FSRef}&quot;flags&quot;I&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;rotationAngle&quot;i&quot;fileFSRef&quot;^{FSRef}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='FSRef*' name='dirFSRef' type='^{FSRef=[80C]}'/>
<field declared_type='UInt32' name='flags' type='L' type64='I'/>
<field declared_type='OSType' name='fileType' type='L' type64='I'/>
<field declared_type='OSType' name='fileCreator' type='L' type64='I'/>
<field declared_type='Fixed' name='rotationAngle' type='l' type64='i'/>
<field declared_type='FSRef*' name='fileFSRef' type='^{FSRef=[80C]}'/>
</struct>
<struct name='ICAGetDeviceListPB' type='{ICAGetDeviceListPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I}' type64='{ICAGetDeviceListPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
</struct>
<struct name='ICAHeader' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'>
<field declared_type='ICAError' name='err' type='s'/>
<field declared_type='unsigned long' name='refcon' type='L' type64='Q'/>
</struct>
<struct name='ICAImportImagePB' type='{ICAImportImagePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;deviceObject&quot;I&quot;flags&quot;I&quot;supportedFileTypes&quot;^{__CFArray}&quot;filterProc&quot;^?&quot;importedImages&quot;^^{__CFArray}}' type64='{ICAImportImagePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;deviceObject&quot;I&quot;flags&quot;I&quot;supportedFileTypes&quot;^{__CFArray}&quot;filterProc&quot;^?&quot;importedImages&quot;^^{__CFArray}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='deviceObject' type='L' type64='I'/>
<field declared_type='UInt32' name='flags' type='L' type64='I'/>
<field declared_type='CFArrayRef' name='supportedFileTypes' type='^{__CFArray=}'/>
<field declared_type='ICAImportFilterProc' function_pointer='true' name='filterProc' type='^?'>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='unsigned long' type='L' type64='Q'/>
<retval declared_type='Boolean' type='B'/>
</field>
<field declared_type='CFArrayRef*' name='importedImages' type='^^{__CFArray}'/>
</struct>
<struct name='ICALoadDeviceModulePB' type='{ICALoadDeviceModulePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;paramDictionary&quot;^{__CFDictionary}}' type64='{ICALoadDeviceModulePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;paramDictionary&quot;^{__CFDictionary}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='CFDictionaryRef' name='paramDictionary' type='^{__CFDictionary=}'/>
</struct>
<struct name='ICAMessage' type='{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}'>
<field declared_type='OSType' name='messageType' type='L' type64='I'/>
<field declared_type='UInt32' name='startByte' type='L' type64='I'/>
<field declared_type='void*' name='dataPtr' type='^v'/>
<field declared_type='UInt32' name='dataSize' type='L' type64='I'/>
<field declared_type='OSType' name='dataType' type='L' type64='I'/>
</struct>
<struct name='ICAObjectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'>
<field declared_type='OSType' name='objectType' type='L' type64='I'/>
<field declared_type='OSType' name='objectSubtype' type='L' type64='I'/>
</struct>
<struct name='ICAObjectSendMessagePB' type='{ICAObjectSendMessagePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;message&quot;{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}&quot;result&quot;I}' type64='{ICAObjectSendMessagePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;message&quot;{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}&quot;result&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAMessage' name='message' type='{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}'/>
<field declared_type='UInt32' name='result' type='L' type64='I'/>
</struct>
<struct name='ICAOpenSessionPB' type='{ICAOpenSessionPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;deviceObject&quot;I&quot;sessionID&quot;I}' type64='{ICAOpenSessionPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;deviceObject&quot;I&quot;sessionID&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='deviceObject' type='L' type64='I'/>
<field declared_type='ICASessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICAPTPEventDataset' type='{ICAPTPEventDataset=&quot;dataLength&quot;I&quot;containerType&quot;S&quot;eventCode&quot;S&quot;transactionID&quot;I&quot;params&quot;[3L]}' type64='{ICAPTPEventDataset=&quot;dataLength&quot;I&quot;containerType&quot;S&quot;eventCode&quot;S&quot;transactionID&quot;I&quot;params&quot;[3I]}'>
<field declared_type='UInt32' name='dataLength' type='L' type64='I'/>
<field declared_type='UInt16' name='containerType' type='S'/>
<field declared_type='UInt16' name='eventCode' type='S'/>
<field declared_type='UInt32' name='transactionID' type='L' type64='I'/>
<field declared_type='UInt32*' name='params' type='[3L]' type64='[3I]'/>
</struct>
<struct name='ICAPTPPassThroughPB' type='{ICAPTPPassThroughPB=&quot;commandCode&quot;I&quot;resultCode&quot;I&quot;numOfInputParams&quot;I&quot;numOfOutputParams&quot;I&quot;params&quot;[4L]&quot;dataUsageMode&quot;I&quot;flags&quot;I&quot;dataSize&quot;I&quot;data&quot;[1C]}' type64='{ICAPTPPassThroughPB=&quot;commandCode&quot;I&quot;resultCode&quot;I&quot;numOfInputParams&quot;I&quot;numOfOutputParams&quot;I&quot;params&quot;[4I]&quot;dataUsageMode&quot;I&quot;flags&quot;I&quot;dataSize&quot;I&quot;data&quot;[1C]}'>
<field declared_type='UInt32' name='commandCode' type='L' type64='I'/>
<field declared_type='UInt32' name='resultCode' type='L' type64='I'/>
<field declared_type='UInt32' name='numOfInputParams' type='L' type64='I'/>
<field declared_type='UInt32' name='numOfOutputParams' type='L' type64='I'/>
<field declared_type='UInt32*' name='params' type='[4L]' type64='[4I]'/>
<field declared_type='UInt32' name='dataUsageMode' type='L' type64='I'/>
<field declared_type='UInt32' name='flags' type='L' type64='I'/>
<field declared_type='UInt32' name='dataSize' type='L' type64='I'/>
<field declared_type='UInt8*' name='data' type='[1C]'/>
</struct>
<struct name='ICARawFileHeader' type='{ICARawFileHeader=&quot;imageDataOffset&quot;I&quot;version&quot;I&quot;imageWidth&quot;I&quot;imageHeight&quot;I&quot;bytesPerRow&quot;I&quot;numberOfComponents&quot;I&quot;bitsPerComponent&quot;I&quot;bitsPerPixel&quot;I&quot;cgColorSpaceModel&quot;I&quot;bitmapInfo&quot;I&quot;orientation&quot;I&quot;dpi&quot;I&quot;colorSyncModeStr&quot;[64c]}'>
<field declared_type='UInt32' name='imageDataOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='version' type='L' type64='I'/>
<field declared_type='UInt32' name='imageWidth' type='L' type64='I'/>
<field declared_type='UInt32' name='imageHeight' type='L' type64='I'/>
<field declared_type='UInt32' name='bytesPerRow' type='L' type64='I'/>
<field declared_type='UInt32' name='numberOfComponents' type='L' type64='I'/>
<field declared_type='UInt32' name='bitsPerComponent' type='L' type64='I'/>
<field declared_type='UInt32' name='bitsPerPixel' type='L' type64='I'/>
<field declared_type='UInt32' name='cgColorSpaceModel' type='L' type64='I'/>
<field declared_type='UInt32' name='bitmapInfo' type='L' type64='I'/>
<field declared_type='UInt32' name='orientation' type='L' type64='I'/>
<field declared_type='UInt32' name='dpi' type='L' type64='I'/>
<field declared_type='char*' name='colorSyncModeStr' type='[64c]'/>
</struct>
<struct name='ICARegisterForEventNotificationPB' type='{ICARegisterForEventNotificationPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;objectOfInterest&quot;I&quot;eventsOfInterest&quot;^{__CFArray}&quot;notificationProc&quot;^?&quot;options&quot;^{__CFDictionary}}' type64='{ICARegisterForEventNotificationPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;objectOfInterest&quot;I&quot;eventsOfInterest&quot;^{__CFArray}&quot;notificationProc&quot;^?&quot;options&quot;^{__CFDictionary}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='objectOfInterest' type='L' type64='I'/>
<field declared_type='CFArrayRef' name='eventsOfInterest' type='^{__CFArray=}'/>
<field declared_type='ICANotification' function_pointer='true' name='notificationProc' type='^?'>
<arg declared_type='CFStringRef' type='^{__CFString=}'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFDictionaryRef' name='options' type='^{__CFDictionary=}'/>
</struct>
<struct name='ICAScannerCloseSessionPB' type='{ICAScannerCloseSessionPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;sessionID&quot;I}' type64='{ICAScannerCloseSessionPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;sessionID&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICAScannerGetParametersPB' type='{ICAScannerGetParametersPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;sessionID&quot;I&quot;theDict&quot;^{__CFDictionary}}' type64='{ICAScannerGetParametersPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;sessionID&quot;I&quot;theDict&quot;^{__CFDictionary}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
<field declared_type='CFMutableDictionaryRef' name='theDict' type='^{__CFDictionary=}'/>
</struct>
<struct name='ICAScannerInitializePB' type='{ICAScannerInitializePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;sessionID&quot;I}' type64='{ICAScannerInitializePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;sessionID&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICAScannerOpenSessionPB' type='{ICAScannerOpenSessionPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;sessionID&quot;I}' type64='{ICAScannerOpenSessionPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;sessionID&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICAScannerSetParametersPB' type='{ICAScannerSetParametersPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;sessionID&quot;I&quot;theDict&quot;^{__CFDictionary}}' type64='{ICAScannerSetParametersPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;sessionID&quot;I&quot;theDict&quot;^{__CFDictionary}}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
<field declared_type='CFMutableDictionaryRef' name='theDict' type='^{__CFDictionary=}'/>
</struct>
<struct name='ICAScannerStartPB' type='{ICAScannerStartPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;sessionID&quot;I}' type64='{ICAScannerStartPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;sessionID&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICAScannerStatusPB' type='{ICAScannerStatusPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;sessionID&quot;I&quot;status&quot;I}' type64='{ICAScannerStatusPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;sessionID&quot;I&quot;status&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
<field declared_type='UInt32' name='status' type='L' type64='I'/>
</struct>
<struct name='ICASendNotificationPB' type='{ICASendNotificationPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;notificationDictionary&quot;^{__CFDictionary}&quot;replyCode&quot;I}' type64='{ICASendNotificationPB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;notificationDictionary&quot;^{__CFDictionary}&quot;replyCode&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='CFMutableDictionaryRef' name='notificationDictionary' type='^{__CFDictionary=}'/>
<field declared_type='UInt32' name='replyCode' type='L' type64='I'/>
</struct>
<struct name='ICAUnloadDeviceModulePB' type='{ICAUnloadDeviceModulePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;deviceObject&quot;I}' type64='{ICAUnloadDeviceModulePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;deviceObject&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='deviceObject' type='L' type64='I'/>
</struct>
<struct name='ICAUploadFilePB' type='{ICAUploadFilePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;parentObject&quot;I&quot;fileFSRef&quot;^{FSRef}&quot;flags&quot;I}' type64='{ICAUploadFilePB=&quot;header&quot;{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;parentObject&quot;I&quot;fileFSRef&quot;^{FSRef}&quot;flags&quot;I}'>
<field declared_type='ICAHeader' name='header' type='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICAHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='parentObject' type='L' type64='I'/>
<field declared_type='FSRef*' name='fileFSRef' type='^{FSRef=[80C]}'/>
<field declared_type='UInt32' name='flags' type='L' type64='I'/>
</struct>
<struct name='ICDHeader' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'>
<field declared_type='ICAError' name='err' type='s'/>
<field declared_type='unsigned long' name='refcon' type='L' type64='Q'/>
</struct>
<struct name='ICD_DisposeObjectPB' type='{ICD_DisposeObjectPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I}' type64='{ICD_DisposeObjectPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
</struct>
<struct name='ICD_NewObjectPB' type='{ICD_NewObjectPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;parentObject&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;object&quot;I}' type64='{ICD_NewObjectPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;parentObject&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;object&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='parentObject' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
</struct>
<struct name='ICD_ObjectSendMessagePB' type='{ICD_ObjectSendMessagePB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;message&quot;{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}&quot;totalDataSize&quot;I&quot;result&quot;I}' type64='{ICD_ObjectSendMessagePB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;message&quot;{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}&quot;totalDataSize&quot;I&quot;result&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAMessage' name='message' type='{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}'/>
<field declared_type='UInt32' name='totalDataSize' type='L' type64='I'/>
<field declared_type='UInt32' name='result' type='L' type64='I'/>
</struct>
<struct name='ICD_ScannerCloseSessionPB' type='{ICD_ScannerCloseSessionPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I}' type64='{ICD_ScannerCloseSessionPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICD_ScannerGetParametersPB' type='{ICD_ScannerGetParametersPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I&quot;theDict&quot;^{__CFDictionary}}' type64='{ICD_ScannerGetParametersPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I&quot;theDict&quot;^{__CFDictionary}}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
<field declared_type='CFMutableDictionaryRef' name='theDict' type='^{__CFDictionary=}'/>
</struct>
<struct name='ICD_ScannerInitializePB' type='{ICD_ScannerInitializePB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I}' type64='{ICD_ScannerInitializePB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICD_ScannerObjectSendMessagePB' type='{ICD_ScannerObjectSendMessagePB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;message&quot;{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}&quot;totalDataSize&quot;I&quot;result&quot;I}' type64='{ICD_ScannerObjectSendMessagePB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;message&quot;{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}&quot;totalDataSize&quot;I&quot;result&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAMessage' name='message' type='{ICAMessage=&quot;messageType&quot;I&quot;startByte&quot;I&quot;dataPtr&quot;^v&quot;dataSize&quot;I&quot;dataType&quot;I}'/>
<field declared_type='UInt32' name='totalDataSize' type='L' type64='I'/>
<field declared_type='UInt32' name='result' type='L' type64='I'/>
</struct>
<struct name='ICD_ScannerOpenSessionPB' type='{ICD_ScannerOpenSessionPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I}' type64='{ICD_ScannerOpenSessionPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICD_ScannerSetParametersPB' type='{ICD_ScannerSetParametersPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I&quot;theDict&quot;^{__CFDictionary}}' type64='{ICD_ScannerSetParametersPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I&quot;theDict&quot;^{__CFDictionary}}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
<field declared_type='CFMutableDictionaryRef' name='theDict' type='^{__CFDictionary=}'/>
</struct>
<struct name='ICD_ScannerStartPB' type='{ICD_ScannerStartPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I}' type64='{ICD_ScannerStartPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
</struct>
<struct name='ICD_ScannerStatusPB' type='{ICD_ScannerStatusPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I&quot;status&quot;I}' type64='{ICD_ScannerStatusPB=&quot;header&quot;{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}&quot;object&quot;I&quot;objectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;connectionID&quot;I&quot;sessionID&quot;I&quot;status&quot;I}'>
<field declared_type='ICDHeader' name='header' type='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;L}' type64='{ICDHeader=&quot;err&quot;s&quot;refcon&quot;Q}'/>
<field declared_type='ICAObject' name='object' type='L' type64='I'/>
<field declared_type='ICAObjectInfo' name='objectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='ICAConnectionID' name='connectionID' type='L' type64='I'/>
<field declared_type='ICAScannerSessionID' name='sessionID' type='L' type64='I'/>
<field declared_type='UInt32' name='status' type='L' type64='I'/>
</struct>
<struct name='ICD_Scannerscanner_callback_functions' type='{ICD_Scannerscanner_callback_functions=&quot;f_ICD_ScannerOpenUSBDevice&quot;^?&quot;f_ICD_ScannerOpenUSBDeviceWithIORegPath&quot;^?&quot;f_ICD_ScannerCloseDevice&quot;^?&quot;f_ICD_ScannerPeriodicTask&quot;^?&quot;f_ICD_ScannerGetObjectInfo&quot;^?&quot;f_ICD_ScannerCleanup&quot;^?&quot;f_ICD_ScannerGetPropertyData&quot;^?&quot;f_ICD_ScannerSetPropertyData&quot;^?&quot;f_ICD_ScannerReadFileData&quot;^?&quot;f_ICD_ScannerWriteFileData&quot;^?&quot;f_ICD_ScannerSendMessage&quot;^?&quot;f_ICD_ScannerAddPropertiesToCFDictionary&quot;^?&quot;f_ICD_ScannerOpenFireWireDevice&quot;^?&quot;f_ICD_ScannerOpenFireWireDeviceWithIORegPath&quot;^?&quot;f_ICD_ScannerOpenSession&quot;^?&quot;f_ICD_ScannerCloseSession&quot;^?&quot;f_ICD_ScannerInitialize&quot;^?&quot;f_ICD_ScannerGetParameters&quot;^?&quot;f_ICD_ScannerSetParameters&quot;^?&quot;f_ICD_ScannerStatus&quot;^?&quot;f_ICD_ScannerStart&quot;^?&quot;f_ICD_ScannerOpenBluetoothDevice&quot;^?&quot;f_ICD_ScannerOpenTCPIPDevice&quot;^?&quot;f_ICD_ScannerWriteDataToFile&quot;^?&quot;f_ICD_ScannerOpenMassStorageDevice&quot;^?&quot;f_ICD_ScannerWriteDataToFileDescriptor&quot;^?&quot;f_ICD_ScannerWriteDataToFileDescriptor64&quot;^?}'>
<field declared_type='__ICD_ScannerOpenUSBDevice' function_pointer='true' name='f_ICD_ScannerOpenUSBDevice' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenUSBDeviceWithIORegPath' function_pointer='true' name='f_ICD_ScannerOpenUSBDeviceWithIORegPath' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerCloseDevice' function_pointer='true' name='f_ICD_ScannerCloseDevice' type='^?'>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerPeriodicTask' function_pointer='true' name='f_ICD_ScannerPeriodicTask' type='^?'>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerGetObjectInfo' function_pointer='true' name='f_ICD_ScannerGetObjectInfo' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerCleanup' function_pointer='true' name='f_ICD_ScannerCleanup' type='^?'>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerGetPropertyData' function_pointer='true' name='f_ICD_ScannerGetPropertyData' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerSetPropertyData' function_pointer='true' name='f_ICD_ScannerSetPropertyData' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerReadFileData' function_pointer='true' name='f_ICD_ScannerReadFileData' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Ptr' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='UInt32*' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerWriteFileData' function_pointer='true' name='f_ICD_ScannerWriteFileData' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Ptr' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='UInt32*' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerSendMessage' function_pointer='true' name='f_ICD_ScannerSendMessage' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerObjectSendMessagePB*' type='^{ICD_ScannerObjectSendMessagePB={ICDHeader=sL}I{ICAObjectInfo=II}I{ICAMessage=II^vII}II}' type64='^{ICD_ScannerObjectSendMessagePB={ICDHeader=sQ}I{ICAObjectInfo=II}I{ICAMessage=II^vII}II}'/>
<arg declared_type='ICDCompletion' function_pointer='true' type='^?'>
<arg declared_type='ICDHeader*' type='^{ICDHeader=sL}' type64='^{ICDHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerAddPropertiesToCFDictionary' function_pointer='true' name='f_ICD_ScannerAddPropertiesToCFDictionary' type='^?'>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenFireWireDevice' function_pointer='true' name='f_ICD_ScannerOpenFireWireDevice' type='^?'>
<arg declared_type='UInt64' type='Q'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenFireWireDeviceWithIORegPath' function_pointer='true' name='f_ICD_ScannerOpenFireWireDeviceWithIORegPath' type='^?'>
<arg declared_type='UInt64' type='Q'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenSession' function_pointer='true' name='f_ICD_ScannerOpenSession' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerOpenSessionPB*' type='^{ICD_ScannerOpenSessionPB={ICDHeader=sL}I{ICAObjectInfo=II}II}' type64='^{ICD_ScannerOpenSessionPB={ICDHeader=sQ}I{ICAObjectInfo=II}II}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerCloseSession' function_pointer='true' name='f_ICD_ScannerCloseSession' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerCloseSessionPB*' type='^{ICD_ScannerCloseSessionPB={ICDHeader=sL}I{ICAObjectInfo=II}II}' type64='^{ICD_ScannerCloseSessionPB={ICDHeader=sQ}I{ICAObjectInfo=II}II}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerInitialize' function_pointer='true' name='f_ICD_ScannerInitialize' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerInitializePB*' type='^{ICD_ScannerInitializePB={ICDHeader=sL}I{ICAObjectInfo=II}II}' type64='^{ICD_ScannerInitializePB={ICDHeader=sQ}I{ICAObjectInfo=II}II}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerGetParameters' function_pointer='true' name='f_ICD_ScannerGetParameters' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerGetParametersPB*' type='^{ICD_ScannerGetParametersPB={ICDHeader=sL}I{ICAObjectInfo=II}II^{__CFDictionary}}' type64='^{ICD_ScannerGetParametersPB={ICDHeader=sQ}I{ICAObjectInfo=II}II^{__CFDictionary}}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerSetParameters' function_pointer='true' name='f_ICD_ScannerSetParameters' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerSetParametersPB*' type='^{ICD_ScannerSetParametersPB={ICDHeader=sL}I{ICAObjectInfo=II}II^{__CFDictionary}}' type64='^{ICD_ScannerSetParametersPB={ICDHeader=sQ}I{ICAObjectInfo=II}II^{__CFDictionary}}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerStatus' function_pointer='true' name='f_ICD_ScannerStatus' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerStatusPB*' type='^{ICD_ScannerStatusPB={ICDHeader=sL}I{ICAObjectInfo=II}III}' type64='^{ICD_ScannerStatusPB={ICDHeader=sQ}I{ICAObjectInfo=II}III}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerStart' function_pointer='true' name='f_ICD_ScannerStart' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerStartPB*' type='^{ICD_ScannerStartPB={ICDHeader=sL}I{ICAObjectInfo=II}II}' type64='^{ICD_ScannerStartPB={ICDHeader=sQ}I{ICAObjectInfo=II}II}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenBluetoothDevice' function_pointer='true' name='f_ICD_ScannerOpenBluetoothDevice' type='^?'>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenTCPIPDevice' function_pointer='true' name='f_ICD_ScannerOpenTCPIPDevice' type='^?'>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerWriteDataToFile' function_pointer='true' name='f_ICD_ScannerWriteDataToFile' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenMassStorageDevice' function_pointer='true' name='f_ICD_ScannerOpenMassStorageDevice' type='^?'>
<arg declared_type='CFStringRef' type='^{__CFString=}'/>
<arg declared_type='DASessionRef' type='^{__DASession=}'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerWriteDataToFileDescriptor' function_pointer='true' name='f_ICD_ScannerWriteDataToFileDescriptor' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerWriteDataToFileDescriptor64' function_pointer='true' name='f_ICD_ScannerWriteDataToFileDescriptor64' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='ICAError' type='s'/>
</field>
</struct>
<struct name='ICD_callback_functions' type='{ICD_callback_functions=&quot;f_ICD_OpenUSBDevice&quot;^?&quot;f_ICD_CloseDevice&quot;^?&quot;f_ICD_PeriodicTask&quot;^?&quot;f_ICD_GetObjectInfo&quot;^?&quot;f_ICD_Cleanup&quot;^?&quot;f_ICD_GetPropertyData&quot;^?&quot;f_ICD_SetPropertyData&quot;^?&quot;f_ICD_ReadFileData&quot;^?&quot;f_ICD_WriteFileData&quot;^?&quot;f_ICD_SendMessage&quot;^?&quot;f_ICD_AddPropertiesToCFDictionary&quot;^?&quot;f_ICD_OpenFireWireDevice&quot;^?&quot;f_ICD_OpenUSBDeviceWithIORegPath&quot;^?&quot;f_ICD_OpenFireWireDeviceWithIORegPath&quot;^?&quot;f_ICD_OpenBluetoothDevice&quot;^?&quot;f_ICD_OpenTCPIPDevice&quot;^?&quot;f_ICD_WriteDataToFile&quot;^?&quot;f_ICD_OpenMassStorageDevice&quot;^?&quot;f_ICD_WriteDataToFileDescriptor&quot;^?&quot;f_ICD_WriteDataToFileDescriptor64&quot;^?}'>
<field declared_type='__ICD_OpenUSBDevice' function_pointer='true' name='f_ICD_OpenUSBDevice' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_CloseDevice' function_pointer='true' name='f_ICD_CloseDevice' type='^?'>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_PeriodicTask' function_pointer='true' name='f_ICD_PeriodicTask' type='^?'>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_GetObjectInfo' function_pointer='true' name='f_ICD_GetObjectInfo' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_Cleanup' function_pointer='true' name='f_ICD_Cleanup' type='^?'>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_GetPropertyData' function_pointer='true' name='f_ICD_GetPropertyData' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_SetPropertyData' function_pointer='true' name='f_ICD_SetPropertyData' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ReadFileData' function_pointer='true' name='f_ICD_ReadFileData' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Ptr' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='UInt32*' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_WriteFileData' function_pointer='true' name='f_ICD_WriteFileData' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Ptr' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='UInt32*' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_SendMessage' function_pointer='true' name='f_ICD_SendMessage' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='ICD_ObjectSendMessagePB*' type='^{ICD_ObjectSendMessagePB={ICDHeader=sL}I{ICAObjectInfo=II}I{ICAMessage=II^vII}II}' type64='^{ICD_ObjectSendMessagePB={ICDHeader=sQ}I{ICAObjectInfo=II}I{ICAMessage=II^vII}II}'/>
<arg declared_type='ICDCompletion' function_pointer='true' type='^?'>
<arg declared_type='ICDHeader*' type='^{ICDHeader=sL}' type64='^{ICDHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_AddPropertiesToCFDictionary' function_pointer='true' name='f_ICD_AddPropertiesToCFDictionary' type='^?'>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_OpenFireWireDevice' function_pointer='true' name='f_ICD_OpenFireWireDevice' type='^?'>
<arg declared_type='UInt64' type='Q'/>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_OpenUSBDeviceWithIORegPath' function_pointer='true' name='f_ICD_OpenUSBDeviceWithIORegPath' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_OpenFireWireDeviceWithIORegPath' function_pointer='true' name='f_ICD_OpenFireWireDeviceWithIORegPath' type='^?'>
<arg declared_type='UInt64' type='Q'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_OpenBluetoothDevice' function_pointer='true' name='f_ICD_OpenBluetoothDevice' type='^?'>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_OpenTCPIPDevice' function_pointer='true' name='f_ICD_OpenTCPIPDevice' type='^?'>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_WriteDataToFile' function_pointer='true' name='f_ICD_WriteDataToFile' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_OpenMassStorageDevice' function_pointer='true' name='f_ICD_OpenMassStorageDevice' type='^?'>
<arg declared_type='CFStringRef' type='^{__CFString=}'/>
<arg declared_type='DASessionRef' type='^{__DASession=}'/>
<arg declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_WriteDataToFileDescriptor' function_pointer='true' name='f_ICD_WriteDataToFileDescriptor' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_WriteDataToFileDescriptor64' function_pointer='true' name='f_ICD_WriteDataToFileDescriptor64' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='ICAError' type='s'/>
</field>
</struct>
<struct name='ICD_scanner_callback_functions' type='{ICD_Scannerscanner_callback_functions=&quot;f_ICD_ScannerOpenUSBDevice&quot;^?&quot;f_ICD_ScannerOpenUSBDeviceWithIORegPath&quot;^?&quot;f_ICD_ScannerCloseDevice&quot;^?&quot;f_ICD_ScannerPeriodicTask&quot;^?&quot;f_ICD_ScannerGetObjectInfo&quot;^?&quot;f_ICD_ScannerCleanup&quot;^?&quot;f_ICD_ScannerGetPropertyData&quot;^?&quot;f_ICD_ScannerSetPropertyData&quot;^?&quot;f_ICD_ScannerReadFileData&quot;^?&quot;f_ICD_ScannerWriteFileData&quot;^?&quot;f_ICD_ScannerSendMessage&quot;^?&quot;f_ICD_ScannerAddPropertiesToCFDictionary&quot;^?&quot;f_ICD_ScannerOpenFireWireDevice&quot;^?&quot;f_ICD_ScannerOpenFireWireDeviceWithIORegPath&quot;^?&quot;f_ICD_ScannerOpenSession&quot;^?&quot;f_ICD_ScannerCloseSession&quot;^?&quot;f_ICD_ScannerInitialize&quot;^?&quot;f_ICD_ScannerGetParameters&quot;^?&quot;f_ICD_ScannerSetParameters&quot;^?&quot;f_ICD_ScannerStatus&quot;^?&quot;f_ICD_ScannerStart&quot;^?&quot;f_ICD_ScannerOpenBluetoothDevice&quot;^?&quot;f_ICD_ScannerOpenTCPIPDevice&quot;^?&quot;f_ICD_ScannerWriteDataToFile&quot;^?&quot;f_ICD_ScannerOpenMassStorageDevice&quot;^?&quot;f_ICD_ScannerWriteDataToFileDescriptor&quot;^?&quot;f_ICD_ScannerWriteDataToFileDescriptor64&quot;^?}'>
<field declared_type='__ICD_ScannerOpenUSBDevice' function_pointer='true' name='f_ICD_ScannerOpenUSBDevice' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenUSBDeviceWithIORegPath' function_pointer='true' name='f_ICD_ScannerOpenUSBDeviceWithIORegPath' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerCloseDevice' function_pointer='true' name='f_ICD_ScannerCloseDevice' type='^?'>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerPeriodicTask' function_pointer='true' name='f_ICD_ScannerPeriodicTask' type='^?'>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerGetObjectInfo' function_pointer='true' name='f_ICD_ScannerGetObjectInfo' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerCleanup' function_pointer='true' name='f_ICD_ScannerCleanup' type='^?'>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerGetPropertyData' function_pointer='true' name='f_ICD_ScannerGetPropertyData' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerSetPropertyData' function_pointer='true' name='f_ICD_ScannerSetPropertyData' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerReadFileData' function_pointer='true' name='f_ICD_ScannerReadFileData' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Ptr' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='UInt32*' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerWriteFileData' function_pointer='true' name='f_ICD_ScannerWriteFileData' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Ptr' type='*'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='UInt32*' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerSendMessage' function_pointer='true' name='f_ICD_ScannerSendMessage' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerObjectSendMessagePB*' type='^{ICD_ScannerObjectSendMessagePB={ICDHeader=sL}I{ICAObjectInfo=II}I{ICAMessage=II^vII}II}' type64='^{ICD_ScannerObjectSendMessagePB={ICDHeader=sQ}I{ICAObjectInfo=II}I{ICAMessage=II^vII}II}'/>
<arg declared_type='ICDCompletion' function_pointer='true' type='^?'>
<arg declared_type='ICDHeader*' type='^{ICDHeader=sL}' type64='^{ICDHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerAddPropertiesToCFDictionary' function_pointer='true' name='f_ICD_ScannerAddPropertiesToCFDictionary' type='^?'>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='CFMutableDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenFireWireDevice' function_pointer='true' name='f_ICD_ScannerOpenFireWireDevice' type='^?'>
<arg declared_type='UInt64' type='Q'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenFireWireDeviceWithIORegPath' function_pointer='true' name='f_ICD_ScannerOpenFireWireDeviceWithIORegPath' type='^?'>
<arg declared_type='UInt64' type='Q'/>
<arg declared_type='char*' type='*'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenSession' function_pointer='true' name='f_ICD_ScannerOpenSession' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerOpenSessionPB*' type='^{ICD_ScannerOpenSessionPB={ICDHeader=sL}I{ICAObjectInfo=II}II}' type64='^{ICD_ScannerOpenSessionPB={ICDHeader=sQ}I{ICAObjectInfo=II}II}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerCloseSession' function_pointer='true' name='f_ICD_ScannerCloseSession' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerCloseSessionPB*' type='^{ICD_ScannerCloseSessionPB={ICDHeader=sL}I{ICAObjectInfo=II}II}' type64='^{ICD_ScannerCloseSessionPB={ICDHeader=sQ}I{ICAObjectInfo=II}II}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerInitialize' function_pointer='true' name='f_ICD_ScannerInitialize' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerInitializePB*' type='^{ICD_ScannerInitializePB={ICDHeader=sL}I{ICAObjectInfo=II}II}' type64='^{ICD_ScannerInitializePB={ICDHeader=sQ}I{ICAObjectInfo=II}II}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerGetParameters' function_pointer='true' name='f_ICD_ScannerGetParameters' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerGetParametersPB*' type='^{ICD_ScannerGetParametersPB={ICDHeader=sL}I{ICAObjectInfo=II}II^{__CFDictionary}}' type64='^{ICD_ScannerGetParametersPB={ICDHeader=sQ}I{ICAObjectInfo=II}II^{__CFDictionary}}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerSetParameters' function_pointer='true' name='f_ICD_ScannerSetParameters' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerSetParametersPB*' type='^{ICD_ScannerSetParametersPB={ICDHeader=sL}I{ICAObjectInfo=II}II^{__CFDictionary}}' type64='^{ICD_ScannerSetParametersPB={ICDHeader=sQ}I{ICAObjectInfo=II}II^{__CFDictionary}}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerStatus' function_pointer='true' name='f_ICD_ScannerStatus' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerStatusPB*' type='^{ICD_ScannerStatusPB={ICDHeader=sL}I{ICAObjectInfo=II}III}' type64='^{ICD_ScannerStatusPB={ICDHeader=sQ}I{ICAObjectInfo=II}III}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerStart' function_pointer='true' name='f_ICD_ScannerStart' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='ICD_ScannerStartPB*' type='^{ICD_ScannerStartPB={ICDHeader=sL}I{ICAObjectInfo=II}II}' type64='^{ICD_ScannerStartPB={ICDHeader=sQ}I{ICAObjectInfo=II}II}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenBluetoothDevice' function_pointer='true' name='f_ICD_ScannerOpenBluetoothDevice' type='^?'>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenTCPIPDevice' function_pointer='true' name='f_ICD_ScannerOpenTCPIPDevice' type='^?'>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerWriteDataToFile' function_pointer='true' name='f_ICD_ScannerWriteDataToFile' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerOpenMassStorageDevice' function_pointer='true' name='f_ICD_ScannerOpenMassStorageDevice' type='^?'>
<arg declared_type='CFStringRef' type='^{__CFString=}'/>
<arg declared_type='DASessionRef' type='^{__DASession=}'/>
<arg declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerWriteDataToFileDescriptor' function_pointer='true' name='f_ICD_ScannerWriteDataToFileDescriptor' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='ICAError' type='s'/>
</field>
<field declared_type='__ICD_ScannerWriteDataToFileDescriptor64' function_pointer='true' name='f_ICD_ScannerWriteDataToFileDescriptor64' type='^?'>
<arg const='true' declared_type='ScannerObjectInfo*' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='ICAError' type='s'/>
</field>
</struct>
<struct name='ObjectInfo' type='{ObjectInfo=&quot;icaObject&quot;I&quot;reserved&quot;L&quot;icaObjectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;uniqueID&quot;I&quot;thumbnailSize&quot;I&quot;dataSize&quot;I&quot;dataWidth&quot;I&quot;dataHeight&quot;I&quot;name&quot;[32C]&quot;creationDate&quot;[20C]&quot;flags&quot;I&quot;privateData&quot;*&quot;uniqueIDFireWire&quot;Q&quot;tag&quot;I&quot;dataSize64&quot;Q}' type64='{ObjectInfo=&quot;icaObject&quot;I&quot;reserved&quot;Q&quot;icaObjectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;uniqueID&quot;I&quot;thumbnailSize&quot;I&quot;dataSize&quot;I&quot;dataWidth&quot;I&quot;dataHeight&quot;I&quot;name&quot;[32C]&quot;creationDate&quot;[20C]&quot;flags&quot;I&quot;privateData&quot;*&quot;uniqueIDFireWire&quot;Q&quot;tag&quot;I&quot;dataSize64&quot;Q}'>
<field declared_type='ICAObject' name='icaObject' type='L' type64='I'/>
<field declared_type='unsigned long' name='reserved' type='L' type64='Q'/>
<field declared_type='ICAObjectInfo' name='icaObjectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='UInt32' name='uniqueID' type='L' type64='I'/>
<field declared_type='UInt32' name='thumbnailSize' type='L' type64='I'/>
<field declared_type='UInt32' name='dataSize' type='L' type64='I'/>
<field declared_type='UInt32' name='dataWidth' type='L' type64='I'/>
<field declared_type='UInt32' name='dataHeight' type='L' type64='I'/>
<field declared_type='UInt8*' name='name' type='[32C]'/>
<field declared_type='UInt8*' name='creationDate' type='[20C]'/>
<field declared_type='UInt32' name='flags' type='L' type64='I'/>
<field declared_type='Ptr' name='privateData' type='*'/>
<field declared_type='UInt64' name='uniqueIDFireWire' type='Q'/>
<field declared_type='UInt32' name='tag' type='L' type64='I'/>
<field declared_type='UInt64' name='dataSize64' type='Q'/>
</struct>
<struct name='ScannerObjectInfo' type='{ScannerObjectInfo=&quot;icaObject&quot;I&quot;reserved&quot;L&quot;icaObjectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;uniqueID&quot;I&quot;uniqueIDFireWire&quot;Q&quot;thumbnailSize&quot;I&quot;dataSize&quot;I&quot;dataWidth&quot;I&quot;dataHeight&quot;I&quot;name&quot;[32C]&quot;creationDate&quot;[20C]&quot;flags&quot;I&quot;privateData&quot;*&quot;tag&quot;I}' type64='{ScannerObjectInfo=&quot;icaObject&quot;I&quot;reserved&quot;Q&quot;icaObjectInfo&quot;{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}&quot;uniqueID&quot;I&quot;uniqueIDFireWire&quot;Q&quot;thumbnailSize&quot;I&quot;dataSize&quot;I&quot;dataWidth&quot;I&quot;dataHeight&quot;I&quot;name&quot;[32C]&quot;creationDate&quot;[20C]&quot;flags&quot;I&quot;privateData&quot;*&quot;tag&quot;I}'>
<field declared_type='ICAObject' name='icaObject' type='L' type64='I'/>
<field declared_type='unsigned long' name='reserved' type='L' type64='Q'/>
<field declared_type='ICAObjectInfo' name='icaObjectInfo' type='{ICAObjectInfo=&quot;objectType&quot;I&quot;objectSubtype&quot;I}'/>
<field declared_type='UInt32' name='uniqueID' type='L' type64='I'/>
<field declared_type='UInt64' name='uniqueIDFireWire' type='Q'/>
<field declared_type='UInt32' name='thumbnailSize' type='L' type64='I'/>
<field declared_type='UInt32' name='dataSize' type='L' type64='I'/>
<field declared_type='UInt32' name='dataWidth' type='L' type64='I'/>
<field declared_type='UInt32' name='dataHeight' type='L' type64='I'/>
<field declared_type='UInt8*' name='name' type='[32C]'/>
<field declared_type='UInt8*' name='creationDate' type='[20C]'/>
<field declared_type='UInt32' name='flags' type='L' type64='I'/>
<field declared_type='Ptr' name='privateData' type='*'/>
<field declared_type='UInt32' name='tag' type='L' type64='I'/>
</struct>
<constant declared_type='int' name='ICLoggingEnabled' type='i'/>
<constant const='true' declared_type='int' name='ICLoggingLevelBasicInfo' type='i'/>
<constant const='true' declared_type='int' name='ICLoggingLevelError' type='i'/>
<constant declared_type='int' name='ICLoggingLevelMask' type='i'/>
<constant const='true' declared_type='int' name='ICLoggingLevelTimingInfo' type='i'/>
<constant const='true' declared_type='int' name='ICLoggingLevelVerboseInfo' type='i'/>
<constant const='true' declared_type='int' name='ICLoggingLevelWarning' type='i'/>
<constant declared_type='ICD_callback_functions' name='gICDCallbackFunctions' type='{ICD_callback_functions=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<constant declared_type='ICD_scanner_callback_functions' name='gICDScannerCallbackFunctions' type='{ICD_Scannerscanner_callback_functions=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<constant const='true' declared_type='CFStringRef' name='kICABluetoothAddressKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICABluetoothTransportType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICABonjourServiceNameKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICABonjourServiceTypeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICABonjourTXTRecordKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICACreationDateStringKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADataPropertyKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADataSizeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADataTypeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceBrowserDeviceRefKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceCapabilitiesKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceIconPathKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceModulePathKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropArtist' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropBatteryLevel' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropBurstInterval' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropBurstNumber' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropCaptureDelay' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropCompressionSetting' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropContrast' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropCopyrightInfo' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropDateTime' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropDigitalZoom' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropEffectMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropExposureBiasCompensation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropExposureIndex' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropExposureMeteringMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropExposureProgramMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropExposureTime' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropFNumber' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropFlashMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropFocalLength' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropFocusDistance' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropFocusMeteringMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropFocusMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropFunctionalMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropImageSize' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropRGBGain' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropSharpness' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropStillCaptureMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropTimelapseInterval' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropTimelapseNumber' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropUndefined' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropUploadURL' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicePropWhiteBalance' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceSharedKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceTypeCamera' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceTypeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceTypeScanner' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceUsedKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADeviceWebSharedKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICADevicesArrayKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAErrorKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAExecutableArchitectureKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAFireWireGUIDKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAFireWireTransportType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAIOServicePathKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAIPAddressKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAIPGUIDKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAIPNameKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAIPPortKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICALockStatusKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAMediaDurationInSecondsKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAMediaHeightKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAMediaWidthKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAModificationDateStringKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationClassKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationClassPTPStandard' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationClassPTPVendor' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationClassProprietary' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationDataCookieKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationDataIsBigEndianKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationDataKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationDataSizeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationDeviceICAObjectKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationDeviceListICAObjectKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationICAObjectKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationImageBytesPerRowKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationImageDataKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationImageDataSizeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationImageHeightKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationImageKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationImageNumberOfRowsKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationImageStartRowKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationImageWidthKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationNumerOfImagesRemainingKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationPercentDownloadedKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationRawEventKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationScannerButtonTypeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationScannerDocumentNameKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationSubTypeDocumentLoaded' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationSubTypeDocumentNotLoaded' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationSubTypeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationSubTypePerformOverviewScan' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationSubTypeWarmUpDone' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationSubTypeWarmUpStarted' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeCaptureComplete' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDeviceAdded' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDeviceConnectionProgress' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDeviceInfoChanged' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDevicePropertyChanged' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDeviceRemoved' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDeviceStatusError' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDeviceStatusInfo' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDeviceWasReset' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeDownloadProgressStatus' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeObjectAdded' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeObjectInfoChanged' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeObjectRemoved' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeProprietary' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeRequestObjectTransfer' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeScanProgressStatus' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeScannerButtonPressed' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeScannerOverviewOverlayAvailable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeScannerPageDone' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeScannerScanDone' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeScannerSessionClosed' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeStoreAdded' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeStoreFull' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeStoreInfoChanged' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeStoreRemoved' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeTransactionCanceled' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationTypeUnreportedStatus' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICANotificationVendorErrorCodeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAObjectKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAObjectNameKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICARawKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICARefconKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICARemoteDeviceKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICASCSITransportType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICATCPIPTransportType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICATWAINDSPathKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICATWAINTransportType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAThumbnailPropertyKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAThumbnailSizeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICATransportTypeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAUSBLocationIDKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAUSBProductIDKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAUSBTransportType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAUSBVendorIDKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICAUserAssignedDeviceNameKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kICUTTypeRaw' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMetaDataDictionaryKey' type='^{__CFString=}'/>
<enum name='addedAfterCCCMask' value='32'/>
<enum name='fileInTempCacheMask' value='16'/>
<enum name='fileLockedMask' value='4'/>
<enum name='hasChildrenMask' value='1'/>
<enum name='hasThumbnailMask' value='2'/>
<enum name='kAddMetaDataToFinderComment' value='4'/>
<enum name='kAdjustCreationDate' value='8'/>
<enum name='kCreateCustomIcon' value='2'/>
<enum name='kDeleteAfterDownload' value='1'/>
<enum name='kDontEmbedColorSyncProfile' value='128'/>
<enum name='kICAAccessReadOnly' value='1'/>
<enum name='kICAAccessReadOnlyWithObjectDeletion' value='2'/>
<enum name='kICAAccessReadWrite' value='0'/>
<enum name='kICAAllowMultipleImages' value='1'/>
<enum name='kICAButtonCopy' value='1668247673'/>
<enum name='kICAButtonEMail' value='1835100524'/>
<enum name='kICAButtonScan' value='1935892846'/>
<enum name='kICAButtonWeb' value='2003132960'/>
<enum name='kICACameraPassThruNotUsed' value='2'/>
<enum name='kICACameraPassThruReceive' value='1'/>
<enum name='kICACameraPassThruSend' value='0'/>
<enum name='kICACannotYieldDevice' value='-9909'/>
<enum name='kICACapabilityCanCameraCaptureNewImage' value='1667460713'/>
<enum name='kICACapabilityCanCameraDeleteAll' value='1684368481'/>
<enum name='kICACapabilityCanCameraDeleteOne' value='1684368433'/>
<enum name='kICACapabilityCanCameraSyncClock' value='1935895659'/>
<enum name='kICACapabilityCanCameraUploadData' value='1819238756'/>
<enum name='kICACapabilityMayStoreNewImagesInTempStore' value='1952804208'/>
<enum name='kICACapabilityMessageCameraSupportsApplePTP' value='1634759792'/>
<enum name='kICACommunicationErr' value='-9900'/>
<enum name='kICADataTypeNotFoundErr' value='-9910'/>
<enum name='kICADevice' value='1768121462'/>
<enum name='kICADeviceAlreadyOpenErr' value='-9914'/>
<enum name='kICADeviceCamera' value='1668117089'/>
<enum name='kICADeviceGUIDNotFoundErr' value='-9916'/>
<enum name='kICADeviceIOServicePathNotFoundErr' value='-9917'/>
<enum name='kICADeviceInternalErr' value='-9912'/>
<enum name='kICADeviceInvalidParamErr' value='-9913'/>
<enum name='kICADeviceLocationIDNotFoundErr' value='-9915'/>
<enum name='kICADeviceMFP' value='1835429920'/>
<enum name='kICADeviceMemoryAllocationErr' value='-9911'/>
<enum name='kICADeviceNotFoundErr' value='-9901'/>
<enum name='kICADeviceNotOpenErr' value='-9902'/>
<enum name='kICADeviceOther' value='1685025896'/>
<enum name='kICADevicePDA' value='1885626656'/>
<enum name='kICADevicePhone' value='1885892462'/>
<enum name='kICADeviceScanner' value='1935892846'/>
<enum name='kICADeviceUnsupportedErr' value='-9918'/>
<enum name='kICADirectory' value='1684632165'/>
<enum name='kICADownloadAndReturnPathArray' value='2'/>
<enum name='kICAExtensionInternalErr' value='-9920'/>
<enum name='kICAFile' value='1718185061'/>
<enum name='kICAFileAudio' value='1635083375'/>
<enum name='kICAFileCorruptedErr' value='-9903'/>
<enum name='kICAFileFirmware' value='1718186605'/>
<enum name='kICAFileImage' value='1768776039'/>
<enum name='kICAFileMovie' value='1836019574'/>
<enum name='kICAFileOther' value='1869899877'/>
<enum name='kICAFileystemDCF' value='3'/>
<enum name='kICAFileystemGenericFlat' value='1'/>
<enum name='kICAFileystemGenericHierarchical' value='2'/>
<enum name='kICAFileystemUndefined' value='0'/>
<enum name='kICAFlagReadAccess' value='2'/>
<enum name='kICAFlagReadWriteAccess' value='1'/>
<enum name='kICAFrameworkInternalErr' value='-9919'/>
<enum name='kICAIOPendingErr' value='-9904'/>
<enum name='kICAIndexOutOfRangeErr' value='-9907'/>
<enum name='kICAInvalidObjectErr' value='-9905'/>
<enum name='kICAInvalidPropertyErr' value='-9906'/>
<enum name='kICAInvalidSessionErr' value='-9921'/>
<enum name='kICAList' value='1868720748'/>
<enum name='kICAMessageCameraCaptureNewImage' value='1667460713'/>
<enum name='kICAMessageCameraDeleteAll' value='1684368481'/>
<enum name='kICAMessageCameraDeleteOne' value='1684368433'/>
<enum name='kICAMessageCameraPassThrough' value='1885434739'/>
<enum name='kICAMessageCameraReadClock' value='1919118443'/>
<enum name='kICAMessageCameraSyncClock' value='1935895659'/>
<enum name='kICAMessageCameraUploadData' value='1819238756'/>
<enum name='kICAMessageCheckDevice' value='1667787620'/>
<enum name='kICAMessageConnect' value='1869636974'/>
<enum name='kICAMessageDeviceYield' value='2036950380'/>
<enum name='kICAMessageDisconnect' value='1668050803'/>
<enum name='kICAMessageGetEventData' value='1835492708'/>
<enum name='kICAMessageGetLastButtonPressed' value='1651797567'/>
<enum name='kICAMessageReset' value='1919251301'/>
<enum name='kICAMessageScannerOverviewSelectionChanged' value='1634887009'/>
<enum name='kICAPBVersion' value='65536'/>
<enum name='kICAProperty' value='1886547824'/>
<enum name='kICAPropertyCameraAccessCapability' value='1633902960'/>
<enum name='kICAPropertyCameraArtist' value='892350789'/>
<enum name='kICAPropertyCameraBatteryLevel' value='892350513'/>
<enum name='kICAPropertyCameraBurstInterval' value='892350777'/>
<enum name='kICAPropertyCameraBurstNumber' value='892350776'/>
<enum name='kICAPropertyCameraCaptureDelay' value='892350770'/>
<enum name='kICAPropertyCameraCompressionSetting' value='892350516'/>
<enum name='kICAPropertyCameraContrast' value='892350772'/>
<enum name='kICAPropertyCameraCopyrightInfo' value='892350790'/>
<enum name='kICAPropertyCameraDateTime' value='892350769'/>
<enum name='kICAPropertyCameraDigitalZoom' value='892350774'/>
<enum name='kICAPropertyCameraEffectMode' value='892350775'/>
<enum name='kICAPropertyCameraExposureBiasCompensation' value='892350768'/>
<enum name='kICAPropertyCameraExposureIndex' value='892350534'/>
<enum name='kICAPropertyCameraExposureMeteringMode' value='892350530'/>
<enum name='kICAPropertyCameraExposureProgramMode' value='892350533'/>
<enum name='kICAPropertyCameraExposureTime' value='892350532'/>
<enum name='kICAPropertyCameraFNumber' value='892350519'/>
<enum name='kICAPropertyCameraFilesystemType' value='1718843763'/>
<enum name='kICAPropertyCameraFlashMode' value='892350531'/>
<enum name='kICAPropertyCameraFocalLength' value='892350520'/>
<enum name='kICAPropertyCameraFocusDistance' value='892350521'/>
<enum name='kICAPropertyCameraFocusMeteringMode' value='892350787'/>
<enum name='kICAPropertyCameraFocusMode' value='892350529'/>
<enum name='kICAPropertyCameraFreeSpaceInBytes' value='1718773107'/>
<enum name='kICAPropertyCameraFreeSpaceInImages' value='1718773097'/>
<enum name='kICAPropertyCameraFunctionalMode' value='892350514'/>
<enum name='kICAPropertyCameraIcon' value='1768124270'/>
<enum name='kICAPropertyCameraImageSize' value='892350515'/>
<enum name='kICAPropertyCameraMaxCapacity' value='1835104355'/>
<enum name='kICAPropertyCameraRGBGain' value='892350518'/>
<enum name='kICAPropertyCameraSharpness' value='892350773'/>
<enum name='kICAPropertyCameraStillCaptureMode' value='892350771'/>
<enum name='kICAPropertyCameraStorageDescription' value='1937010532'/>
<enum name='kICAPropertyCameraStorageType' value='1937010546'/>
<enum name='kICAPropertyCameraSupportedMessages' value='1836279667'/>
<enum name='kICAPropertyCameraTimelapseInterval' value='892350786'/>
<enum name='kICAPropertyCameraTimelapseNumber' value='892350785'/>
<enum name='kICAPropertyCameraUploadURL' value='892350788'/>
<enum name='kICAPropertyCameraVolumeLabel' value='1987013740'/>
<enum name='kICAPropertyCameraWhiteBalance' value='892350517'/>
<enum name='kICAPropertyColorSpace' value='1093677105'/>
<enum name='kICAPropertyColorSyncProfile' value='1886547814'/>
<enum name='kICAPropertyImageAperture' value='959590450'/>
<enum name='kICAPropertyImageBitDepth' value='808529970'/>
<enum name='kICAPropertyImageDPI' value='808530241'/>
<enum name='kICAPropertyImageData' value='1768186228'/>
<enum name='kICAPropertyImageDateDigitized' value='959459380'/>
<enum name='kICAPropertyImageDateOriginal' value='959459379'/>
<enum name='kICAPropertyImageExposureTime' value='942815553'/>
<enum name='kICAPropertyImageFNumber' value='942815556'/>
<enum name='kICAPropertyImageFilename' value='1768319340'/>
<enum name='kICAPropertyImageFlash' value='959590457'/>
<enum name='kICAPropertyImageHeight' value='808529969'/>
<enum name='kICAPropertyImageShutterSpeed' value='959590449'/>
<enum name='kICAPropertyImageSize' value='1769171322'/>
<enum name='kICAPropertyImageThumbnail' value='1953002861'/>
<enum name='kICAPropertyImageWidth' value='808529968'/>
<enum name='kICAPropertyTypeNotFoundErr' value='-9908'/>
<enum name='kICASandboxViolation' value='-9922'/>
<enum name='kICASecureSessionRequired' value='-9923'/>
<enum name='kICAStorageFixedRAM' value='3'/>
<enum name='kICAStorageFixedROM' value='1'/>
<enum name='kICAStorageRemovableRAM' value='4'/>
<enum name='kICAStorageRemovableROM' value='2'/>
<enum name='kICAStorageUndefined' value='0'/>
<enum name='kICAThumbnailFormatJPEG' value='1785750887'/>
<enum name='kICAThumbnailFormatPNG' value='1886283552'/>
<enum name='kICAThumbnailFormatTIFF' value='1953064550'/>
<enum name='kICATypeBoolean' value='1651470188'/>
<enum name='kICATypeData' value='1684108385'/>
<enum name='kICATypeFixed' value='1936289383'/>
<enum name='kICATypeFloat' value='1718382433'/>
<enum name='kICATypeSInt16' value='1936273718'/>
<enum name='kICATypeSInt32' value='1936274226'/>
<enum name='kICATypeSInt64' value='1936274996'/>
<enum name='kICATypeString' value='1413830740'/>
<enum name='kICATypeThumbnail' value='1953002861'/>
<enum name='kICATypeUInt16' value='1969828150'/>
<enum name='kICATypeUInt32' value='1969828658'/>
<enum name='kICATypeUInt64' value='1969829428'/>
<enum name='kICATypeUInt8' value='1969827896'/>
<enum name='kICAUploadFileAsIs' value='0'/>
<enum name='kICAUploadFileScaleToFit' value='1'/>
<enum name='kICD_FileData' value='1718185061'/>
<enum name='kICD_MetaData' value='1835365473'/>
<enum name='kICD_ThumbnailData' value='1953002861'/>
<enum name='kICD_ThumbnailDataFormatJPEG' value='1953132647'/>
<enum name='kICD_ThumbnailDataFormatPNG' value='1953525351'/>
<enum name='kICD_ThumbnailDataFormatTIFF' value='1953786214'/>
<enum name='kICS_FileData' value='1718185061'/>
<enum name='kICS_MetaData' value='1835365473'/>
<enum name='kICS_ThumbnailData' value='1953002861'/>
<enum name='kICS_ThumbnailDataFormatJPEG' value='1953132647'/>
<enum name='kICS_ThumbnailDataFormatPNG' value='1953525351'/>
<enum name='kICS_ThumbnailDataFormatTIFF' value='1953786214'/>
<enum name='kRotateImage' value='64'/>
<enum name='kSetFileTypeAndCreator' value='16'/>
<enum name='largeFileSizeMask' value='256'/>
<enum name='rawImageFormatMask' value='8'/>
<function name='ICACloseSession'>
<arg declared_type='ICACloseSessionPB*' name='pb' type='^{ICACloseSessionPB={ICAHeader=sL}I}' type64='^{ICACloseSessionPB={ICAHeader=sQ}I}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICACopyObjectData'>
<arg declared_type='ICACopyObjectDataPB*' name='params' type='^{ICACopyObjectDataPB={ICAHeader=sL}III^^{__CFData}}' type64='^{ICACopyObjectDataPB={ICAHeader=sQ}IQQ^^{__CFData}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completionProc' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICACopyObjectPropertyDictionary'>
<arg declared_type='ICACopyObjectPropertyDictionaryPB*' name='pb' type='^{ICACopyObjectPropertyDictionaryPB={ICAHeader=sL}I^^{__CFDictionary}}' type64='^{ICACopyObjectPropertyDictionaryPB={ICAHeader=sQ}I^^{__CFDictionary}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICACopyObjectThumbnail'>
<arg declared_type='ICACopyObjectThumbnailPB*' name='pb' type='^{ICACopyObjectThumbnailPB={ICAHeader=sL}II^^{__CFData}}' type64='^{ICACopyObjectThumbnailPB={ICAHeader=sQ}II^^{__CFData}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICADownloadFile'>
<arg declared_type='ICADownloadFilePB*' name='pb' type='^{ICADownloadFilePB={ICAHeader=sL}I^{FSRef}IIIi^{FSRef}}' type64='^{ICADownloadFilePB={ICAHeader=sQ}I^{FSRef}IIIi^{FSRef}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAGetDeviceList'>
<arg declared_type='ICAGetDeviceListPB*' name='pb' type='^{ICAGetDeviceListPB={ICAHeader=sL}I}' type64='^{ICAGetDeviceListPB={ICAHeader=sQ}I}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAImportImage'>
<arg declared_type='ICAImportImagePB*' name='pb' type='^{ICAImportImagePB={ICAHeader=sL}II^{__CFArray}^?^^{__CFArray}}' type64='^{ICAImportImagePB={ICAHeader=sQ}II^{__CFArray}^?^^{__CFArray}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICALoadDeviceModule'>
<arg declared_type='ICALoadDeviceModulePB*' name='pb' type='^{ICALoadDeviceModulePB={ICAHeader=sL}^{__CFDictionary}}' type64='^{ICALoadDeviceModulePB={ICAHeader=sQ}^{__CFDictionary}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAObjectSendMessage'>
<arg declared_type='ICAObjectSendMessagePB*' name='pb' type='^{ICAObjectSendMessagePB={ICAHeader=sL}I{ICAMessage=II^vII}I}' type64='^{ICAObjectSendMessagePB={ICAHeader=sQ}I{ICAMessage=II^vII}I}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAOpenSession'>
<arg declared_type='ICAOpenSessionPB*' name='pb' type='^{ICAOpenSessionPB={ICAHeader=sL}II}' type64='^{ICAOpenSessionPB={ICAHeader=sQ}II}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICARegisterForEventNotification'>
<arg declared_type='ICARegisterForEventNotificationPB*' name='params' type='^{ICARegisterForEventNotificationPB={ICAHeader=sL}I^{__CFArray}^?^{__CFDictionary}}' type64='^{ICARegisterForEventNotificationPB={ICAHeader=sQ}I^{__CFArray}^?^{__CFDictionary}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completionProc' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAScannerCloseSession'>
<arg declared_type='ICAScannerCloseSessionPB*' name='pb' type='^{ICAScannerCloseSessionPB={ICAHeader=sL}I}' type64='^{ICAScannerCloseSessionPB={ICAHeader=sQ}I}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAScannerGetParameters'>
<arg declared_type='ICAScannerGetParametersPB*' name='pb' type='^{ICAScannerGetParametersPB={ICAHeader=sL}I^{__CFDictionary}}' type64='^{ICAScannerGetParametersPB={ICAHeader=sQ}I^{__CFDictionary}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAScannerInitialize'>
<arg declared_type='ICAScannerInitializePB*' name='pb' type='^{ICAScannerInitializePB={ICAHeader=sL}I}' type64='^{ICAScannerInitializePB={ICAHeader=sQ}I}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAScannerOpenSession'>
<arg declared_type='ICAScannerOpenSessionPB*' name='pb' type='^{ICAScannerOpenSessionPB={ICAHeader=sL}II}' type64='^{ICAScannerOpenSessionPB={ICAHeader=sQ}II}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAScannerSetParameters'>
<arg declared_type='ICAScannerSetParametersPB*' name='pb' type='^{ICAScannerSetParametersPB={ICAHeader=sL}I^{__CFDictionary}}' type64='^{ICAScannerSetParametersPB={ICAHeader=sQ}I^{__CFDictionary}}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAScannerStart'>
<arg declared_type='ICAScannerStartPB*' name='pb' type='^{ICAScannerStartPB={ICAHeader=sL}I}' type64='^{ICAScannerStartPB={ICAHeader=sQ}I}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAScannerStatus'>
<arg declared_type='ICAScannerStatusPB*' name='pb' type='^{ICAScannerStatusPB={ICAHeader=sL}II}' type64='^{ICAScannerStatusPB={ICAHeader=sQ}II}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICASendNotification'>
<arg declared_type='ICASendNotificationPB*' name='pb' type='^{ICASendNotificationPB={ICAHeader=sL}^{__CFDictionary}I}' type64='^{ICASendNotificationPB={ICAHeader=sQ}^{__CFDictionary}I}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICASendNotificationAndWaitForReply'>
<arg declared_type='ICASendNotificationPB*' name='pb' type='^{ICASendNotificationPB={ICAHeader=sL}^{__CFDictionary}I}' type64='^{ICASendNotificationPB={ICAHeader=sQ}^{__CFDictionary}I}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAShowDeviceBrowser'>
<arg declared_type='CFDictionaryRef' name='options' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAUnloadDeviceModule'>
<arg declared_type='ICAUnloadDeviceModulePB*' name='pb' type='^{ICAUnloadDeviceModulePB={ICAHeader=sL}I}' type64='^{ICAUnloadDeviceModulePB={ICAHeader=sQ}I}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICAUploadFile'>
<arg declared_type='ICAUploadFilePB*' name='pb' type='^{ICAUploadFilePB={ICAHeader=sL}I^{FSRef}I}' type64='^{ICAUploadFilePB={ICAHeader=sQ}I^{FSRef}I}'/>
<arg declared_type='ICACompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICAHeader*' type='^{ICAHeader=sL}' type64='^{ICAHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDAddBandInfoToNotificationDictionary'>
<arg declared_type='CFMutableDictionaryRef' name='dict' type='^{__CFDictionary=}'/>
<arg declared_type='UInt32' name='width' type='L' type64='I'/>
<arg declared_type='UInt32' name='height' type='L' type64='I'/>
<arg declared_type='UInt32' name='bitsPerPixel' type='L' type64='I'/>
<arg declared_type='UInt32' name='bitsPerComponent' type='L' type64='I'/>
<arg declared_type='UInt32' name='numComponents' type='L' type64='I'/>
<arg declared_type='UInt32' name='endianness' type='L' type64='I'/>
<arg declared_type='UInt32' name='pixelDataType' type='L' type64='I'/>
<arg declared_type='UInt32' name='bytesPerRow' type='L' type64='I'/>
<arg declared_type='UInt32' name='dataStartRow' type='L' type64='I'/>
<arg declared_type='UInt32' name='dataNumberOfRows' type='L' type64='I'/>
<arg declared_type='UInt32' name='dataSize' type='L' type64='I'/>
<arg declared_type='void*' name='dataBuffer' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDAddImageInfoToNotificationDictionary'>
<arg declared_type='CFMutableDictionaryRef' name='dict' type='^{__CFDictionary=}'/>
<arg declared_type='UInt32' name='width' type='L' type64='I'/>
<arg declared_type='UInt32' name='height' type='L' type64='I'/>
<arg declared_type='UInt32' name='bytesPerRow' type='L' type64='I'/>
<arg declared_type='UInt32' name='dataStartRow' type='L' type64='I'/>
<arg declared_type='UInt32' name='dataNumberOfRows' type='L' type64='I'/>
<arg declared_type='UInt32' name='dataSize' type='L' type64='I'/>
<arg declared_type='void*' name='dataBuffer' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDConnectBluetoothDevice'>
<arg declared_type='CFDictionaryRef' name='params' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDConnectFWDevice'>
<arg declared_type='UInt64' name='guid' type='Q'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDConnectFWDeviceWithIORegPath'>
<arg declared_type='UInt64' name='guid' type='Q'/>
<arg declared_type='char*' name='ioregPath' type='*'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDConnectTCPIPDevice'>
<arg declared_type='CFDictionaryRef' name='params' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDConnectUSBDevice'>
<arg declared_type='UInt32' name='locationID' type='L' type64='I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDConnectUSBDeviceWithIORegPath'>
<arg declared_type='UInt32' name='locationID' type='L' type64='I'/>
<arg declared_type='char*' name='ioregPath' type='*'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDCopyDeviceInfoDictionary'>
<arg const='true' declared_type='char*' name='deviceName' type='*'/>
<arg declared_type='CFDictionaryRef*' name='theDict' type='^^{__CFDictionary}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDCreateColorSpace'>
<arg declared_type='UInt32' name='bitsPerPixel' type='L' type64='I'/>
<arg declared_type='UInt32' name='samplesPerPixel' type='L' type64='I'/>
<arg declared_type='ICAObject' name='icaObject' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='colorSyncMode' type='^{__CFString=}'/>
<arg declared_type='CFDataRef' name='abstractProfile' type='^{__CFData=}'/>
<arg declared_type='char*' name='tmpProfilePath' type='*'/>
<retval already_retained='true' declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</function>
<function name='ICDCreateEventDataCookie'>
<arg const='true' declared_type='ICAObject' name='object' type='L' type64='I'/>
<arg declared_type='ICAEventDataCookie*' name='cookie' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDCreateICAThumbnailFromICNS'>
<arg const='true' declared_type='char*' name='fileName' type='*'/>
<arg declared_type='void*' name='thumbnail' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDCreateICAThumbnailFromIconRef'>
<arg const='true' declared_type='IconRef' name='iconRef' type='^{OpaqueIconRef=}'/>
<arg declared_type='void*' name='thumbnail' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDDisconnectBluetoothDevice'>
<arg declared_type='CFDictionaryRef' name='params' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDDisconnectFWDevice'>
<arg declared_type='UInt64' name='guid' type='Q'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDDisconnectFWDeviceWithIORegPath'>
<arg declared_type='UInt64' name='guid' type='Q'/>
<arg declared_type='char*' name='ioregPath' type='*'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDDisconnectTCPIPDevice'>
<arg declared_type='CFDictionaryRef' name='params' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDDisconnectUSBDevice'>
<arg declared_type='UInt32' name='locationID' type='L' type64='I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDDisconnectUSBDeviceWithIORegPath'>
<arg declared_type='UInt32' name='locationID' type='L' type64='I'/>
<arg declared_type='char*' name='ioregPath' type='*'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDDisposeObject'>
<arg declared_type='ICD_DisposeObjectPB*' name='pb' type='^{ICD_DisposeObjectPB={ICDHeader=sL}I}' type64='^{ICD_DisposeObjectPB={ICDHeader=sQ}I}'/>
<arg declared_type='ICDCompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICDHeader*' type='^{ICDHeader=sL}' type64='^{ICDHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDGetStandardPropertyData'>
<arg const='true' declared_type='ObjectInfo*' name='objectInfo' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='void*' name='pb' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDInitiateNotificationCallback'>
<arg const='true' declared_type='void*' name='pb' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDNewObject'>
<arg declared_type='ICD_NewObjectPB*' name='pb' type='^{ICD_NewObjectPB={ICDHeader=sL}I{ICAObjectInfo=II}I}' type64='^{ICD_NewObjectPB={ICDHeader=sQ}I{ICAObjectInfo=II}I}'/>
<arg declared_type='ICDCompletion' function_pointer='true' name='completion' type='^?'>
<arg declared_type='ICDHeader*' type='^{ICDHeader=sL}' type64='^{ICDHeader=sQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDNewObjectCreated'>
<arg const='true' declared_type='ObjectInfo*' name='parentInfo' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg const='true' declared_type='ObjectInfo*' name='objectInfo' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='ICDNewObjectCreatedCompletion' function_pointer='true' name='completion' type='^?'>
<arg const='true' declared_type='ObjectInfo*' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDNewObjectInfoCreated'>
<arg const='true' declared_type='ObjectInfo*' name='parentInfo' type='^{ObjectInfo=IL{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}' type64='^{ObjectInfo=IQ{ICAObjectInfo=II}IIIII[32C][20C]I*QIQ}'/>
<arg declared_type='UInt32' name='index' type='L' type64='I'/>
<arg declared_type='ICAObject*' name='newICAObject' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerConnectBluetoothDevice'>
<arg declared_type='CFDictionaryRef' name='params' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerConnectFWDevice'>
<arg declared_type='UInt64' name='guid' type='Q'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerConnectFWDeviceWithIORegPath'>
<arg declared_type='UInt64' name='guid' type='Q'/>
<arg declared_type='char*' name='ioregPath' type='*'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerConnectTCPIPDevice'>
<arg declared_type='CFDictionaryRef' name='params' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerConnectUSBDevice'>
<arg declared_type='UInt32' name='locationID' type='L' type64='I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerConnectUSBDeviceWithIORegPath'>
<arg declared_type='UInt32' name='locationID' type='L' type64='I'/>
<arg declared_type='char*' name='ioregPath' type='*'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerCopyDeviceInfoDictionary'>
<arg const='true' declared_type='char*' name='deviceName' type='*'/>
<arg declared_type='CFDictionaryRef*' name='theDict' type='^^{__CFDictionary}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerCreateEventDataCookie'>
<arg const='true' declared_type='ICAObject' name='object' type='L' type64='I'/>
<arg declared_type='ICAEventDataCookie*' name='cookie' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerCreateICAThumbnailFromICNS'>
<arg const='true' declared_type='char*' name='fileName' type='*'/>
<arg declared_type='void*' name='thumbnail' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerDisconnectBluetoothDevice'>
<arg declared_type='CFDictionaryRef' name='params' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerDisconnectFWDevice'>
<arg declared_type='UInt64' name='guid' type='Q'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerDisconnectFWDeviceWithIORegPath'>
<arg declared_type='UInt64' name='guid' type='Q'/>
<arg declared_type='char*' name='ioregPath' type='*'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerDisconnectTCPIPDevice'>
<arg declared_type='CFDictionaryRef' name='params' type='^{__CFDictionary=}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerDisconnectUSBDevice'>
<arg declared_type='UInt32' name='locationID' type='L' type64='I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerDisconnectUSBDeviceWithIORegPath'>
<arg declared_type='UInt32' name='locationID' type='L' type64='I'/>
<arg declared_type='char*' name='ioregPath' type='*'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerGetStandardPropertyData'>
<arg const='true' declared_type='ScannerObjectInfo*' name='objectInfo' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='void*' name='pb' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerInitiateNotificationCallback'>
<arg const='true' declared_type='void*' name='pb' type='^v'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDScannerNewObjectInfoCreated'>
<arg const='true' declared_type='ScannerObjectInfo*' name='parentInfo' type='^{ScannerObjectInfo=IL{ICAObjectInfo=II}IQIIII[32C][20C]I*I}' type64='^{ScannerObjectInfo=IQ{ICAObjectInfo=II}IQIIII[32C][20C]I*I}'/>
<arg declared_type='UInt32' name='index' type='L' type64='I'/>
<arg declared_type='ICAObject*' name='newICAObject' type='^I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDSendNotification'>
<arg declared_type='ICASendNotificationPB*' name='pb' type='^{ICASendNotificationPB={ICAHeader=sL}^{__CFDictionary}I}' type64='^{ICASendNotificationPB={ICAHeader=sQ}^{__CFDictionary}I}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDSendNotificationAndWaitForReply'>
<arg declared_type='ICASendNotificationPB*' name='pb' type='^{ICASendNotificationPB={ICAHeader=sL}^{__CFDictionary}I}' type64='^{ICASendNotificationPB={ICAHeader=sQ}^{__CFDictionary}I}'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICDStatusChanged'>
<arg declared_type='ICAObject' name='object' type='L' type64='I'/>
<arg declared_type='OSType' name='message' type='L' type64='I'/>
<retval declared_type='ICAError' type='s'/>
</function>
<function name='ICD_ScannerMain'>
<arg declared_type='int' name='argc' type='i'/>
<arg const='true' declared_type='char**' name='argv' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='ICD_main'>
<arg declared_type='int' name='argc' type='i'/>
<arg const='true' declared_type='char**' name='argv' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
</signatures>
