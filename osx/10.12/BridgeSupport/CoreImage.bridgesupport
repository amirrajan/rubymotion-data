<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Metal.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/OpenCL.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<depends_on path='/System/Library/Frameworks/IOSurface.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorAccuracy' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorAccuracyHigh' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorAccuracyLow' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorAspectRatio' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorEyeBlink' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorFocalLength' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorImageOrientation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorMaxFeatureCount' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorMinFeatureSize' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorNumberOfAngles' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorReturnSubFeatures' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorSmile' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorTracking' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorTypeFace' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorTypeQRCode' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorTypeRectangle' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIDetectorTypeText' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIFeatureTypeFace' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIFeatureTypeQRCode' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIFeatureTypeRectangle' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='CIFeatureTypeText' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIActiveKeys' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIApplyOptionColorSpace' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIApplyOptionDefinition' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIApplyOptionExtent' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIApplyOptionUserInfo' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeClass' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeDefault' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeDescription' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeDisplayName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeFilterAvailable_Mac' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeFilterAvailable_iOS' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeFilterCategories' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeFilterDisplayName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeFilterName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeIdentity' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeMax' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeMin' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeReferenceDocumentation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeSliderMax' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeSliderMin' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeType' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeAngle' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeBoolean' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeColor' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeCount' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeDistance' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeGradient' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeImage' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeInteger' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeOffset' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeOpaqueColor' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypePosition' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypePosition3' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeRectangle' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeScalar' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeTime' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIAttributeTypeTransform' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryBlur' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryBuiltIn' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryColorAdjustment' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryColorEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryCompositeOperation' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryDistortionEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryFilterGenerator' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryGenerator' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryGeometryAdjustment' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryGradient' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryHalftoneEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryHighDynamicRange' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryInterlaced' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryNonSquarePixels' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryReduction' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategorySharpen' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryStillImage' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryStylize' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryTileEffect' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryTransition' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCICategoryVideo' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIContextCacheIntermediates' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIContextHighQualityDownsample' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIContextOutputColorSpace' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIContextOutputPremultiplied' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIContextPriorityRequestLow' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIContextUseSoftwareRenderer' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIContextWorkingColorSpace' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIContextWorkingFormat' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIFilterGeneratorExportedKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIFilterGeneratorExportedKeyName' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIFilterGeneratorExportedKeyTargetObject' type64='@'/>
<constant declared_type64='CIFormat' name='kCIFormatA16' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatA8' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatABGR8' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatARGB8' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatAf' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatAh' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatBGRA8' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatR16' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatR8' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRG16' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRG8' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRGBA16' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRGBA8' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRGBAf' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRGBAh' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRGf' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRGh' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRf' type64='i'/>
<constant declared_type64='CIFormat' name='kCIFormatRh' type64='i'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageAutoAdjustCrop' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageAutoAdjustEnhance' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageAutoAdjustFeatures' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageAutoAdjustLevel' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageAutoAdjustRedEye' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageColorSpace' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageProperties' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageProviderTileSize' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageProviderUserInfo' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageTextureFormat' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIImageTextureTarget' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputAllowDraftModeKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputAngleKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputAspectRatioKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputBackgroundImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputBaselineExposureKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputBiasKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputBoostKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputBoostShadowAmountKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputBrightnessKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputCenterKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputColorKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputColorNoiseReductionAmountKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputContrastKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputDecoderVersionKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputDisableGamutMapKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputEVKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputEnableChromaticNoiseTrackingKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputEnableSharpeningKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputEnableVendorLensCorrectionKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputExtentKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputGradientImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputIgnoreImageOrientationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputImageOrientationKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputIntensityKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputLinearSpaceFilter' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputLuminanceNoiseReductionAmountKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputMaskImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNeutralChromaticityXKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNeutralChromaticityYKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNeutralLocationKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNeutralTemperatureKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNeutralTintKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNoiseReductionAmountKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNoiseReductionContrastAmountKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNoiseReductionDetailAmountKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputNoiseReductionSharpnessAmountKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputRadiusKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputRefractionKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputSaturationKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIInputScaleFactorKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputScaleKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputShadingImageKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputSharpnessKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputTargetImageKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputTimeKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputTransformKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputVersionKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputWeightsKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIInputWidthKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIOutputImageKey' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCIOutputNativeSizeKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCISamplerAffineMatrix' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCISamplerColorSpace' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCISamplerFilterLinear' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCISamplerFilterMode' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCISamplerFilterNearest' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCISamplerWrapBlack' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCISamplerWrapClamp' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCISamplerWrapMode' type64='@'/>
<constant const='true' declared_type64='NSString*' name='kCISupportedDecoderVersionsKey' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIUIParameterSet' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIUISetAdvanced' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIUISetBasic' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIUISetDevelopment' type64='@'/>
<constant const='true' declared_type64='NSString * _Nonnull' name='kCIUISetIntermediate' type64='@'/>
<enum name='UNIFIED_CORE_IMAGE' value64='1'/>
<class name='CIColor'>
<method selector='alpha'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='blackColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='blue'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='blueColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='clearColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='colorSpace'>
<retval declared_type64='CGColorSpaceRef _Nonnull' type64='^{CGColorSpace=}'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg declared_type64='CGColorRef _Nonnull' index='0' name='c' type64='^{CGColor=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:'>
<arg declared_type64='CGFloat' index='0' name='r' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='g' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='b' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='r' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='g' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='b' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='a' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:alpha:colorSpace:'>
<arg declared_type64='CGFloat' index='0' name='r' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='g' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='b' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='a' type64='d'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='4' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='colorWithRed:green:blue:colorSpace:'>
<arg declared_type64='CGFloat' index='0' name='r' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='g' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='b' type64='d'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='colorWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='representation' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='components'>
<retval const='true' declared_type64='CGFloat * _Nonnull' type64='^d'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='grayColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='green'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='greenColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGColor:'>
<arg declared_type64='CGColorRef _Nonnull' index='0' name='c' type64='^{CGColor=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRed:green:blue:'>
<arg declared_type64='CGFloat' index='0' name='r' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='g' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='b' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRed:green:blue:alpha:'>
<arg declared_type64='CGFloat' index='0' name='r' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='g' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='b' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='a' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithRed:green:blue:alpha:colorSpace:'>
<arg declared_type64='CGFloat' index='0' name='r' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='g' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='b' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='a' type64='d'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='4' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithRed:green:blue:colorSpace:'>
<arg declared_type64='CGFloat' index='0' name='r' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='g' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='b' type64='d'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='numberOfComponents'>
<retval declared_type64='size_t' type64='Q'/>
</method>
<method selector='red'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='redColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='stringRepresentation'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='CIColorKernel'>
<method selector='applyWithExtent:arguments:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='args' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='kernelWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='CIContext'>
<method selector='JPEGRepresentationOfImage:colorSpace:options:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='1' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='options' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='TIFFRepresentationOfImage:format:colorSpace:options:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CIFormat' index='1' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='2' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='options' type64='@'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='clearCaches'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='context'>
<retval declared_type64='CIContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contextForOfflineGPUAtIndex:'>
<arg declared_type64='unsigned int' index='0' name='index' type64='I'/>
<retval declared_type64='CIContext * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='contextForOfflineGPUAtIndex:colorSpace:options:sharedContext:'>
<arg declared_type64='unsigned int' index='0' name='index' type64='I'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='1' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<arg declared_type64='CGLContextObj _Nullable' index='3' name='sharedContext' type64='^{_CGLContextObject=}'/>
<retval declared_type64='CIContext * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='contextWithCGContext:options:'>
<arg declared_type64='CGContextRef _Nonnull' index='0' name='cgctx' type64='^{CGContext=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contextWithCGLContext:pixelFormat:colorSpace:options:'>
<arg declared_type64='CGLContextObj _Nonnull' index='0' name='cglctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='CGLPixelFormatObj _Nullable' index='1' name='pixelFormat' type64='^{_CGLPixelFormatObject=}'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='2' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<retval declared_type64='CIContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contextWithCGLContext:pixelFormat:options:'>
<arg declared_type64='CGLContextObj _Nonnull' index='0' name='cglctx' type64='^{_CGLContextObject=}'/>
<arg declared_type64='CGLPixelFormatObj _Nullable' index='1' name='pixelFormat' type64='^{_CGLPixelFormatObject=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='CIContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contextWithMTLDevice:'>
<arg declared_type64='id _Nonnull' index='0' name='device' type64='@'/>
<retval declared_type64='CIContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contextWithMTLDevice:options:'>
<arg declared_type64='id _Nonnull' index='0' name='device' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIContext * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='contextWithOptions:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='options' type64='@'/>
<retval declared_type64='CIContext * _Nonnull' type64='@'/>
</method>
<method selector='createCGImage:fromRect:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CGRect' index='1' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='createCGImage:fromRect:format:colorSpace:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CGRect' index='1' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIFormat' index='2' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='createCGImage:fromRect:format:colorSpace:deferred:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CGRect' index='1' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIFormat' index='2' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='BOOL' index='4' name='deferred' type64='B'/>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='createCGLayerWithSize:info:'>
<arg declared_type64='CGSize' index='0' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='CFDictionaryRef _Nullable' index='1' name='info' type64='^{__CFDictionary=}'/>
<retval declared_type64='CGLayerRef _Nullable' type64='^{CGLayer=}'/>
</method>
<method selector='drawImage:atPoint:fromRect:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CGPoint' index='1' name='atPoint' type64='{CGPoint=dd}'/>
<arg declared_type64='CGRect' index='2' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='drawImage:inRect:fromRect:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CGRect' index='1' name='inRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGRect' index='2' name='fromRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='init'>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithOptions:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='offlineGPUCount'>
<retval declared_type64='unsigned int' type64='I'/>
</method>
<method selector='reclaimResources'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='render:toBitmap:rowBytes:bounds:format:colorSpace:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='void * _Nonnull' index='1' name='data' type64='^v'/>
<arg declared_type64='ptrdiff_t' index='2' name='rowBytes' type64='q'/>
<arg declared_type64='CGRect' index='3' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIFormat' index='4' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='5' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='render:toCVPixelBuffer:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='1' name='buffer' type64='^{__CVBuffer=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='render:toCVPixelBuffer:bounds:colorSpace:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='1' name='buffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='CGRect' index='2' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='render:toIOSurface:bounds:colorSpace:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='IOSurfaceRef _Nonnull' index='1' name='surface' type64='^{__IOSurface=}'/>
<arg declared_type64='CGRect' index='2' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='render:toMTLTexture:commandBuffer:bounds:colorSpace:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='texture' type64='@'/>
<arg declared_type64='id _Nullable' index='2' name='commandBuffer' type64='@'/>
<arg declared_type64='CGRect' index='3' name='bounds' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='4' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='workingColorSpace'>
<retval declared_type64='CGColorSpaceRef _Nullable' type64='^{CGColorSpace=}'/>
</method>
<method selector='workingFormat'>
<retval declared_type64='CIFormat' type64='i'/>
</method>
<method selector='writeJPEGRepresentationOfImage:toURL:colorSpace:options:error:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='2' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='3' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='4' name='errorPtr' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='writeTIFFRepresentationOfImage:toURL:format:colorSpace:options:error:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSURL * _Nonnull' index='1' name='url' type64='@'/>
<arg declared_type64='CIFormat' index='2' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSDictionary * _Nonnull' index='4' name='options' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='5' name='errorPtr' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='CIDetector'>
<method class_method='true' selector='detectorOfType:context:options:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='type' type64='@'/>
<arg declared_type64='CIContext * _Nullable' index='1' name='context' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='options' type64='@'/>
<retval declared_type64='CIDetector * _Nullable' type64='@'/>
</method>
<method selector='featuresInImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='featuresInImage:options:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
</class>
<class name='CIFaceFeature'>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='faceAngle'>
<retval declared_type64='float' type64='f'/>
</method>
<method selector='hasFaceAngle'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasLeftEyePosition'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasMouthPosition'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasRightEyePosition'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasSmile'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasTrackingFrameCount'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='hasTrackingID'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='leftEyeClosed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='leftEyePosition'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='mouthPosition'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='rightEyeClosed'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='rightEyePosition'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='trackingFrameCount'>
<retval declared_type64='int' type64='i'/>
</method>
<method selector='trackingID'>
<retval declared_type64='int' type64='i'/>
</method>
</class>
<class name='CIFeature'>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='type'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
</class>
<class name='CIFilter'>
<method selector='apply:' sentinel='0' variadic='true'>
<arg declared_type64='CIKernel * _Nonnull' index='0' name='k' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method selector='apply:arguments:options:'>
<arg declared_type64='CIKernel * _Nonnull' index='0' name='k' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='args' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='dict' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method selector='attributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='filterArrayFromSerializedXMP:inputImageExtent:error:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='xmpData' type64='@'/>
<arg declared_type64='CGRect' index='1' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='2' name='outError' type64='^@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='filterNamesInCategories:'>
<arg declared_type64='NSArray * _Nullable' index='0' name='categories' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='filterNamesInCategory:'>
<arg declared_type64='NSString * _Nullable' index='0' name='category' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='filterWithCVPixelBuffer:properties:options:'>
<arg declared_type64='CVPixelBufferRef' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='NSDictionary*' index='1' name='properties' type64='@'/>
<arg declared_type64='NSDictionary*' index='2' name='options' type64='@'/>
<retval declared_type64='CIFilter*' type64='@'/>
</method>
<method class_method='true' selector='filterWithImageData:options:'>
<arg declared_type64='NSData*' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary*' index='1' name='options' type64='@'/>
<retval declared_type64='CIFilter*' type64='@'/>
</method>
<method class_method='true' selector='filterWithImageURL:options:'>
<arg declared_type64='NSURL*' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary*' index='1' name='options' type64='@'/>
<retval declared_type64='CIFilter*' type64='@'/>
</method>
<method class_method='true' selector='filterWithName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='CIFilter * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='filterWithName:keysAndValues:' sentinel='0' variadic='true'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='id' index='1' name='key0' type64='@'/>
<retval declared_type64='CIFilter * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='filterWithName:withInputParameters:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='params' type64='@'/>
<retval declared_type64='CIFilter * _Nullable' type64='@'/>
</method>
<method selector='inputKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='isEnabled'>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='localizedDescriptionForFilterName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filterName' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='localizedNameForCategory:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='category' type64='@'/>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='localizedNameForFilterName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filterName' type64='@'/>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='localizedReferenceDocumentationForFilterName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filterName' type64='@'/>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='outputImage'>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method selector='outputKeys'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='registerFilterName:constructor:classAttributes:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='anObject' type64='@'/>
<arg declared_type64='NSDictionary * _Nonnull' index='2' name='attributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='serializedXMPFromFilters:inputImageExtent:'>
<arg declared_type64='NSArray * _Nonnull' index='0' name='filters' type64='@'/>
<arg declared_type64='CGRect' index='1' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='NSData * _Nullable' type64='@'/>
</method>
<method selector='setDefaults'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type64='BOOL' index='0' name='enabled' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='aString' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CIFilterGenerator'>
<method selector='classAttributes'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='connectObject:withKey:toObject:withKey:'>
<arg declared_type64='id _Nonnull' index='0' name='sourceObject' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='1' name='sourceKey' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='targetObject' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='targetKey' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='disconnectObject:withKey:toObject:withKey:'>
<arg declared_type64='id _Nonnull' index='0' name='sourceObject' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='sourceKey' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='targetObject' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='3' name='targetKey' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='exportKey:fromObject:withName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='key' type64='@'/>
<arg declared_type64='id _Nonnull' index='1' name='targetObject' type64='@'/>
<arg declared_type64='NSString * _Nullable' index='2' name='exportedKeyName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='exportedKeys'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='filter'>
<retval declared_type64='CIFilter * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='filterGenerator'>
<retval declared_type64='CIFilterGenerator * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='filterGeneratorWithContentsOfURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='aURL' type64='@'/>
<retval declared_type64='CIFilterGenerator * _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='aURL' type64='@'/>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='registerFilterName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='removeExportedKey:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='exportedKeyName' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setAttributes:forExportedKey:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='attributes' type64='@'/>
<arg declared_type64='NSString * _Nonnull' index='1' name='key' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setClassAttributes:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='classAttributes' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='writeToURL:atomically:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='aURL' type64='@'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</class>
<class name='CIFilterShape'>
<method selector='extent'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithRect:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='insetByX:Y:'>
<arg declared_type64='int' index='0' name='dx' type64='i'/>
<arg declared_type64='int' index='1' name='dy' type64='i'/>
<retval declared_type64='CIFilterShape * _Nonnull' type64='@'/>
</method>
<method selector='intersectWith:'>
<arg declared_type64='CIFilterShape * _Nonnull' index='0' name='s2' type64='@'/>
<retval declared_type64='CIFilterShape * _Nonnull' type64='@'/>
</method>
<method selector='intersectWithRect:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CIFilterShape * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='shapeWithRect:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='transformBy:interior:'>
<arg declared_type64='CGAffineTransform' index='0' name='m' type64='{CGAffineTransform=dddddd}'/>
<arg declared_type64='BOOL' index='1' name='flag' type64='B'/>
<retval declared_type64='CIFilterShape * _Nonnull' type64='@'/>
</method>
<method selector='unionWith:'>
<arg declared_type64='CIFilterShape * _Nonnull' index='0' name='s2' type64='@'/>
<retval declared_type64='CIFilterShape * _Nonnull' type64='@'/>
</method>
<method selector='unionWithRect:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CIFilterShape * _Nonnull' type64='@'/>
</method>
</class>
<class name='CIImage'>
<method selector='CGImage'>
<retval declared_type64='CGImageRef _Nullable' type64='^{CGImage=}'/>
</method>
<method selector='autoAdjustmentFilters'>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='autoAdjustmentFiltersWithOptions:'>
<arg declared_type64='NSDictionary * _Nullable' index='0' name='options' type64='@'/>
<retval declared_type64='NSArray * _Nonnull' type64='@'/>
</method>
<method selector='colorSpace'>
<retval declared_type64='CGColorSpaceRef _Nullable' type64='^{CGColorSpace=}'/>
</method>
<method selector='definition'>
<retval declared_type64='CIFilterShape * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='emptyImage'>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='extent'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='imageByApplyingFilter:withInputParameters:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='filterName' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='params' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByApplyingGaussianBlurWithSigma:'>
<arg declared_type64='double' index='0' name='sigma' type64='d'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByApplyingOrientation:'>
<arg declared_type64='int' index='0' name='orientation' type64='i'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByApplyingTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='matrix' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByClampingToExtent'>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByClampingToRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByColorMatchingColorSpaceToWorkingSpace:'>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='0' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method selector='imageByColorMatchingWorkingSpaceToColorSpace:'>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='0' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method selector='imageByCompositingOverImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='dest' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByCroppingToRect:'>
<arg declared_type64='CGRect' index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByPremultiplyingAlpha'>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageBySettingAlphaOneInExtent:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageBySettingProperties:'>
<arg declared_type64='NSDictionary * _Nonnull' index='0' name='properties' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageByUnpremultiplyingAlpha'>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='imageTransformForOrientation:'>
<arg declared_type64='int' index='0' name='orientation' type64='i'/>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method class_method='true' selector='imageWithBitmapData:bytesPerRow:size:format:colorSpace:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='size_t' index='1' name='bytesPerRow' type64='Q'/>
<arg declared_type64='CGSize' index='2' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='CIFormat' index='3' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='4' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='image' type64='^{CGImage=}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:options:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='image' type64='^{CGImage=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCGLayer:'>
<arg declared_type64='CGLayerRef _Nonnull' index='0' name='layer' type64='^{CGLayer=}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCGLayer:options:'>
<arg declared_type64='CGLayerRef _Nonnull' index='0' name='layer' type64='^{CGLayer=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCVImageBuffer:'>
<arg declared_type64='CVImageBufferRef _Nonnull' index='0' name='imageBuffer' type64='^{__CVBuffer=}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCVImageBuffer:options:'>
<arg declared_type64='CVImageBufferRef _Nonnull' index='0' name='imageBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCVPixelBuffer:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithCVPixelBuffer:options:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithColor:'>
<arg declared_type64='CIColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithContentsOfURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageWithContentsOfURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageWithData:options:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageWithIOSurface:'>
<arg declared_type64='IOSurfaceRef _Nonnull' index='0' name='surface' type64='^{__IOSurface=}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithIOSurface:options:'>
<arg declared_type64='IOSurfaceRef _Nonnull' index='0' name='surface' type64='^{__IOSurface=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithImageProvider:size::format:colorSpace:options:'>
<arg declared_type64='id _Nonnull' index='0' name='p' type64='@'/>
<arg declared_type64='size_t' index='1' name='width' type64='Q'/>
<arg declared_type64='size_t' index='2' name='height' type64='Q'/>
<arg declared_type64='CIFormat' index='3' name='f' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='4' name='cs' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='5' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithMTLTexture:options:'>
<arg declared_type64='id _Nonnull' index='0' name='texture' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageWithTexture:size:flipped:colorSpace:'>
<arg declared_type64='unsigned int' index='0' name='name' type64='I'/>
<arg declared_type64='CGSize' index='1' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='2' name='flipped' type64='B'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageWithTexture:size:flipped:options:'>
<arg declared_type64='unsigned int' index='0' name='name' type64='I'/>
<arg declared_type64='CGSize' index='1' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='2' name='flipped' type64='B'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method selector='initWithBitmapData:bytesPerRow:size:format:colorSpace:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='size_t' index='1' name='bytesPerRow' type64='Q'/>
<arg declared_type64='CGSize' index='2' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='CIFormat' index='3' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='4' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGImage:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='image' type64='^{CGImage=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGImage:options:'>
<arg declared_type64='CGImageRef _Nonnull' index='0' name='image' type64='^{CGImage=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGLayer:'>
<arg declared_type64='CGLayerRef _Nonnull' index='0' name='layer' type64='^{CGLayer=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGLayer:options:'>
<arg declared_type64='CGLayerRef _Nonnull' index='0' name='layer' type64='^{CGLayer=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCVImageBuffer:'>
<arg declared_type64='CVImageBufferRef _Nonnull' index='0' name='imageBuffer' type64='^{__CVBuffer=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCVImageBuffer:options:'>
<arg declared_type64='CVImageBufferRef _Nonnull' index='0' name='imageBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCVPixelBuffer:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCVPixelBuffer:options:'>
<arg declared_type64='CVPixelBufferRef _Nonnull' index='0' name='pixelBuffer' type64='^{__CVBuffer=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithColor:'>
<arg declared_type64='CIColor * _Nonnull' index='0' name='color' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithContentsOfURL:options:'>
<arg declared_type64='NSURL * _Nonnull' index='0' name='url' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithData:options:'>
<arg declared_type64='NSData * _Nonnull' index='0' name='data' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithIOSurface:'>
<arg declared_type64='IOSurfaceRef _Nonnull' index='0' name='surface' type64='^{__IOSurface=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithIOSurface:options:'>
<arg declared_type64='IOSurfaceRef _Nonnull' index='0' name='surface' type64='^{__IOSurface=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithIOSurface:plane:format:options:'>
<arg declared_type64='IOSurfaceRef _Nonnull' index='0' name='surface' type64='^{__IOSurface=}'/>
<arg declared_type64='size_t' index='1' name='plane' type64='Q'/>
<arg declared_type64='CIFormat' index='2' name='format' type64='i'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImageProvider:size::format:colorSpace:options:'>
<arg declared_type64='id _Nonnull' index='0' name='p' type64='@'/>
<arg declared_type64='size_t' index='1' name='width' type64='Q'/>
<arg declared_type64='size_t' index='2' name='height' type64='Q'/>
<arg declared_type64='CIFormat' index='3' name='f' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='4' name='cs' type64='^{CGColorSpace=}'/>
<arg declared_type64='NSDictionary * _Nullable' index='5' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithMTLTexture:options:'>
<arg declared_type64='id _Nonnull' index='0' name='texture' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='options' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithTexture:size:flipped:colorSpace:'>
<arg declared_type64='unsigned int' index='0' name='name' type64='I'/>
<arg declared_type64='CGSize' index='1' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='2' name='flipped' type64='B'/>
<arg declared_type64='CGColorSpaceRef _Nullable' index='3' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithTexture:size:flipped:options:'>
<arg declared_type64='unsigned int' index='0' name='name' type64='I'/>
<arg declared_type64='CGSize' index='1' name='size' type64='{CGSize=dd}'/>
<arg declared_type64='BOOL' index='2' name='flipped' type64='B'/>
<arg declared_type64='NSDictionary * _Nullable' index='3' name='options' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='pixelBuffer'>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='properties'>
<retval declared_type64='NSDictionary * _Nonnull' type64='@'/>
</method>
<method selector='regionOfInterestForImage:inRect:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CGRect' index='1' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='url'>
<retval declared_type64='NSURL * _Nullable' type64='@'/>
</method>
</class>
<class name='CIImageAccumulator'>
<method selector='clear'>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='extent'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='format'>
<retval declared_type64='CIFormat' type64='i'/>
</method>
<method selector='image'>
<retval declared_type64='CIImage * _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='imageAccumulatorWithExtent:format:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIFormat' index='1' name='format' type64='i'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='imageAccumulatorWithExtent:format:colorSpace:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIFormat' index='1' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='2' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithExtent:format:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIFormat' index='1' name='format' type64='i'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='initWithExtent:format:colorSpace:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIFormat' index='1' name='format' type64='i'/>
<arg declared_type64='CGColorSpaceRef _Nonnull' index='2' name='colorSpace' type64='^{CGColorSpace=}'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method selector='setImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='setImage:dirtyRect:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='image' type64='@'/>
<arg declared_type64='CGRect' index='1' name='dirtyRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CIImageProcessorKernel'>
<method class_method='true' selector='applyWithExtent:inputs:arguments:error:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='NSArray * _Nullable' index='1' name='inputs' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='2' name='args' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='formatForInputAtIndex:'>
<arg declared_type64='int' index='0' name='input' type64='i'/>
<retval declared_type64='CIFormat' type64='i'/>
</method>
<method class_method='true' selector='outputFormat'>
<retval declared_type64='CIFormat' type64='i'/>
</method>
<method class_method='true' selector='processWithInputs:arguments:output:error:'>
<arg declared_type64='NSArray&gt; * _Nullable' index='0' name='inputs' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='arguments' type64='@'/>
<arg declared_type64='id _Nonnull' index='2' name='output' type64='@'/>
<arg declared_type64='NSError * _Nullable * _Nullable' index='3' name='error' type64='^@'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method class_method='true' selector='roiForInput:arguments:outputRect:'>
<arg declared_type64='int' index='0' name='input' type64='i'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='arguments' type64='@'/>
<arg declared_type64='CGRect' index='2' name='outputRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method class_method='true' selector='synchronizeInputs'>
<retval declared_type64='_Bool' type64='B'/>
</method>
</class>
<class name='CIKernel'>
<method selector='applyWithExtent:roiCallback:arguments:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIKernelROICallback _Nonnull' function_pointer='true' index='1' name='callback' type64='@?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</arg>
<arg declared_type64='NSArray * _Nullable' index='2' name='args' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='kernelWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
<method class_method='true' selector='kernelsWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='name'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='setROISelector:'>
<arg declared_type64='SEL _Nonnull' index='0' name='method' type64=':'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CIPlugIn'>
<method class_method='true' selector='loadAllPlugIns'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='loadNonExecutablePlugIns'>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='loadPlugIn:allowExecutableCode:'>
<arg declared_type64='NSURL*' index='0' name='url' type64='@'/>
<arg declared_type64='BOOL' index='1' name='allowExecutableCode' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
<method class_method='true' selector='loadPlugIn:allowNonExecutable:'>
<arg declared_type64='NSURL*' index='0' name='url' type64='@'/>
<arg declared_type64='BOOL' index='1' name='allowNonExecutable' type64='B'/>
<retval declared_type64='void' type64='v'/>
</method>
</class>
<class name='CIQRCodeFeature'>
<method selector='bottomLeft'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='bottomRight'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='messageString'>
<retval declared_type64='NSString * _Nullable' type64='@'/>
</method>
<method selector='topLeft'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='topRight'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='CIRectangleFeature'>
<method selector='bottomLeft'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='bottomRight'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='topLeft'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='topRight'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='CISampler'>
<method selector='definition'>
<retval declared_type64='CIFilterShape * _Nonnull' type64='@'/>
</method>
<method selector='extent'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='initWithImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='im' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImage:keysAndValues:' variadic='true'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='im' type64='@'/>
<arg declared_type64='id' index='1' name='key0' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithImage:options:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='im' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='dict' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='samplerWithImage:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='im' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='samplerWithImage:keysAndValues:' sentinel='0' variadic='true'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='im' type64='@'/>
<arg declared_type64='id' index='1' name='key0' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='samplerWithImage:options:'>
<arg declared_type64='CIImage * _Nonnull' index='0' name='im' type64='@'/>
<arg declared_type64='NSDictionary * _Nullable' index='1' name='dict' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='CITextFeature'>
<method selector='bottomLeft'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='bottomRight'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='bounds'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='subFeatures'>
<retval declared_type64='NSArray * _Nullable' type64='@'/>
</method>
<method selector='topLeft'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='topRight'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
</class>
<class name='CIVector'>
<method selector='CGAffineTransformValue'>
<retval declared_type64='CGAffineTransform' type64='{CGAffineTransform=dddddd}'/>
</method>
<method selector='CGPointValue'>
<retval declared_type64='CGPoint' type64='{CGPoint=dd}'/>
</method>
<method selector='CGRectValue'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='W'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='X'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='Y'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='Z'>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method selector='count'>
<retval declared_type64='size_t' type64='Q'/>
</method>
<method selector='initWithCGAffineTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='r' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGPoint:'>
<arg declared_type64='CGPoint' index='0' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithCGRect:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='representation' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithValues:count:'>
<arg const='true' declared_type64='CGFloat * _Nonnull' index='0' name='values' type64='^d'/>
<arg declared_type64='size_t' index='1' name='count' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithX:'>
<arg declared_type64='CGFloat' index='0' name='x' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithX:Y:'>
<arg declared_type64='CGFloat' index='0' name='x' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='y' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithX:Y:Z:'>
<arg declared_type64='CGFloat' index='0' name='x' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='y' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='z' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='initWithX:Y:Z:W:'>
<arg declared_type64='CGFloat' index='0' name='x' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='y' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='z' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='w' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method selector='stringRepresentation'>
<retval declared_type64='NSString * _Nonnull' type64='@'/>
</method>
<method selector='valueAtIndex:'>
<arg declared_type64='size_t' index='0' name='index' type64='Q'/>
<retval declared_type64='CGFloat' type64='d'/>
</method>
<method class_method='true' selector='vectorWithCGAffineTransform:'>
<arg declared_type64='CGAffineTransform' index='0' name='t' type64='{CGAffineTransform=dddddd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vectorWithCGPoint:'>
<arg declared_type64='CGPoint' index='0' name='p' type64='{CGPoint=dd}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vectorWithCGRect:'>
<arg declared_type64='CGRect' index='0' name='r' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vectorWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='representation' type64='@'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vectorWithValues:count:'>
<arg const='true' declared_type64='CGFloat * _Nonnull' index='0' name='values' type64='^d'/>
<arg declared_type64='size_t' index='1' name='count' type64='Q'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vectorWithX:'>
<arg declared_type64='CGFloat' index='0' name='x' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vectorWithX:Y:'>
<arg declared_type64='CGFloat' index='0' name='x' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='y' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vectorWithX:Y:Z:'>
<arg declared_type64='CGFloat' index='0' name='x' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='y' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='z' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
<method class_method='true' selector='vectorWithX:Y:Z:W:'>
<arg declared_type64='CGFloat' index='0' name='x' type64='d'/>
<arg declared_type64='CGFloat' index='1' name='y' type64='d'/>
<arg declared_type64='CGFloat' index='2' name='z' type64='d'/>
<arg declared_type64='CGFloat' index='3' name='w' type64='d'/>
<retval declared_type64='instancetype _Nonnull' type64='@'/>
</method>
</class>
<class name='CIWarpKernel'>
<method selector='applyWithExtent:roiCallback:inputImage:arguments:'>
<arg declared_type64='CGRect' index='0' name='extent' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type64='CIKernelROICallback _Nonnull' function_pointer='true' index='1' name='callback' type64='@?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</arg>
<arg declared_type64='CIImage * _Nonnull' index='2' name='image' type64='@'/>
<arg declared_type64='NSArray * _Nullable' index='3' name='args' type64='@'/>
<retval declared_type64='CIImage * _Nullable' type64='@'/>
</method>
<method class_method='true' selector='kernelWithString:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='string' type64='@'/>
<retval declared_type64='instancetype _Nullable' type64='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='baseAddress'>
<retval const='true' declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='bytesPerRow'>
<retval declared_type64='size_t' type64='Q'/>
</method>
<method selector='filterWithName:'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='CIFilter * _Nullable' type64='@'/>
</method>
<method selector='format'>
<retval declared_type64='CIFormat' type64='i'/>
</method>
<method selector='load:'>
<arg declared_type64='void*' index='0' name='host' type64='^v'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
<method selector='metalCommandBuffer'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='metalTexture'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='pixelBuffer'>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='provideImageData:bytesPerRow:origin::size::userInfo:'>
<arg declared_type64='void * _Nonnull' index='0' name='data' type64='^v'/>
<arg declared_type64='size_t' index='1' name='rowbytes' type64='Q'/>
<arg declared_type64='size_t' index='2' name='x' type64='Q'/>
<arg declared_type64='size_t' index='3' name='y' type64='Q'/>
<arg declared_type64='size_t' index='4' name='width' type64='Q'/>
<arg declared_type64='size_t' index='5' name='height' type64='Q'/>
<arg declared_type64='id _Nullable' index='6' name='info' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
<method selector='region'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='surface'>
<retval declared_type64='IOSurfaceRef _Nonnull' type64='^{__IOSurface=}'/>
</method>
</class>
<informal_protocol name='CIFilterConstructor'>
<method selector='filterWithName:' type64='@24@0:8@16'>
<arg declared_type64='NSString * _Nonnull' index='0' name='name' type64='@'/>
<retval declared_type64='CIFilter * _Nullable' type64='@'/>
</method>
</informal_protocol>
<informal_protocol name='CIImageProcessorInput'>
<method selector='baseAddress' type64='r^v16@0:8'>
<retval const='true' declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='bytesPerRow' type64='Q16@0:8'>
<retval declared_type64='size_t' type64='Q'/>
</method>
<method selector='format' type64='i16@0:8'>
<retval declared_type64='CIFormat' type64='i'/>
</method>
<method selector='metalTexture' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='pixelBuffer' type64='^{__CVBuffer=}16@0:8'>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='region' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='surface' type64='^{__IOSurface=}16@0:8'>
<retval declared_type64='IOSurfaceRef _Nonnull' type64='^{__IOSurface=}'/>
</method>
</informal_protocol>
<informal_protocol name='CIImageProcessorOutput'>
<method selector='baseAddress' type64='^v16@0:8'>
<retval declared_type64='void * _Nonnull' type64='^v'/>
</method>
<method selector='bytesPerRow' type64='Q16@0:8'>
<retval declared_type64='size_t' type64='Q'/>
</method>
<method selector='format' type64='i16@0:8'>
<retval declared_type64='CIFormat' type64='i'/>
</method>
<method selector='metalCommandBuffer' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='metalTexture' type64='@16@0:8'>
<retval declared_type64='id _Nullable' type64='@'/>
</method>
<method selector='pixelBuffer' type64='^{__CVBuffer=}16@0:8'>
<retval declared_type64='CVPixelBufferRef _Nullable' type64='^{__CVBuffer=}'/>
</method>
<method selector='region' type64='{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8'>
<retval declared_type64='CGRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='surface' type64='^{__IOSurface=}16@0:8'>
<retval declared_type64='IOSurfaceRef _Nonnull' type64='^{__IOSurface=}'/>
</method>
</informal_protocol>
<informal_protocol name='CIImageProvider'>
<method selector='provideImageData:bytesPerRow:origin::size::userInfo:' type64='v72@0:8^v16Q24Q32Q40Q48Q56@64'>
<arg declared_type64='void * _Nonnull' index='0' name='data' type64='^v'/>
<arg declared_type64='size_t' index='1' name='rowbytes' type64='Q'/>
<arg declared_type64='size_t' index='2' name='x' type64='Q'/>
<arg declared_type64='size_t' index='3' name='y' type64='Q'/>
<arg declared_type64='size_t' index='4' name='width' type64='Q'/>
<arg declared_type64='size_t' index='5' name='height' type64='Q'/>
<arg declared_type64='id _Nullable' index='6' name='info' type64='@'/>
<retval declared_type64='void' type64='v'/>
</method>
</informal_protocol>
<informal_protocol name='CIPlugInRegistration'>
<method selector='load:' type64='B24@0:8^v16'>
<arg declared_type64='void*' index='0' name='host' type64='^v'/>
<retval declared_type64='BOOL' type64='B'/>
</method>
</informal_protocol>
</signatures>
