<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/Cocoa.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<struct name='Depth' type64='{_Depth=&quot;depth&quot;i&quot;nvisuals&quot;i&quot;visuals&quot;^{_Visual=}}'>
<field declared_type64='int' name='depth' type64='i'/>
<field declared_type64='int' name='nvisuals' type64='i'/>
<field declared_type64='Visual*' name='visuals' type64='^{_Visual=}'/>
</struct>
<struct name='Display' type64='{_XDisplay=}'>
<field declared_type64='XExtData*' name='ext_data' type64='^{_XExtData=i^{_XExtData}^?*}'/>
<field declared_type64='struct _XFreeFuncs*' name='free_funcs' type64='^{_XFreeFuncs=}'/>
<field declared_type64='int' name='fd' type64='i'/>
<field declared_type64='int' name='conn_checker' type64='i'/>
<field declared_type64='int' name='proto_major_version' type64='i'/>
<field declared_type64='int' name='proto_minor_version' type64='i'/>
<field declared_type64='char*' name='vendor' type64='*'/>
<field declared_type64='int' name='resource_base' type64='i'/>
<field declared_type64='int' name='resource_mask' type64='i'/>
<field declared_type64='int' name='resource_id' type64='i'/>
<field declared_type64='int' name='resource_shift' type64='i'/>
<field declared_type64='int (int *)' name='XID' type64='?'/>
<field declared_type64='int' name='byte_order' type64='i'/>
<field declared_type64='int' name='bitmap_unit' type64='i'/>
<field declared_type64='int' name='bitmap_pad' type64='i'/>
<field declared_type64='int' name='bitmap_bit_order' type64='i'/>
<field declared_type64='int' name='nformats' type64='i'/>
<field declared_type64='ScreenFormat*' name='pixmap_format' type64='^{_ScreenFormat=^{_XExtData}iii}'/>
<field declared_type64='int' name='vnumber' type64='i'/>
<field declared_type64='int' name='release' type64='i'/>
<field declared_type64='struct _XSQEvent*' name='head' type64='^{_XSQEvent=}'/>
<field declared_type64='struct _XSQEvent*' name='tail' type64='^{_XSQEvent=}'/>
<field declared_type64='int' name='qlen' type64='i'/>
<field declared_type64='unsigned long' name='request' type64='Q'/>
<field declared_type64='char*' name='last_req' type64='*'/>
<field declared_type64='char*' name='buffer' type64='*'/>
<field declared_type64='char*' name='bufptr' type64='*'/>
<field declared_type64='char*' name='bufmax' type64='*'/>
<field declared_type64='unsigned int' name='max_request_size' type64='I'/>
<field declared_type64='struct _XrmHashBucketRec*' name='db' type64='^{_XrmHashBucketRec=}'/>
<field declared_type64='int (*)()' function_pointer='true' name='synchandler' type64='^?'>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char*' name='display_name' type64='*'/>
<field declared_type64='int' name='default_screen' type64='i'/>
<field declared_type64='int' name='nscreens' type64='i'/>
<field declared_type64='Screen*' name='screens' type64='^{_Screen=}'/>
<field declared_type64='unsigned long' name='motion_buffer' type64='Q'/>
<field declared_type64='unsigned long' name='flags' type64='Q'/>
<field declared_type64='int' name='min_keycode' type64='i'/>
<field declared_type64='int' name='max_keycode' type64='i'/>
<field declared_type64='int*' name='keysyms' type64='^i'/>
<field declared_type64='XModifierKeymap*' name='modifiermap' type64='^{_XModifierKeymap=}'/>
<field declared_type64='int' name='keysyms_per_keycode' type64='i'/>
<field declared_type64='char*' name='xdefaults' type64='*'/>
<field declared_type64='char*' name='scratch_buffer' type64='*'/>
<field declared_type64='unsigned long' name='scratch_length' type64='Q'/>
<field declared_type64='int' name='ext_number' type64='i'/>
<field declared_type64='struct _XExten*' name='ext_procs' type64='^{_XExten=}'/>
<field declared_type64='int (**)()' name='event_vec' type64='[128^?]'/>
<field declared_type64='Status (**)()' name='wire_vec' type64='[128^?]'/>
<field declared_type64='int' name='lock_meaning' type64='i'/>
<field declared_type64='struct _XLockInfo*' name='lock' type64='^{_XLockInfo=}'/>
<field declared_type64='struct _XInternalAsync*' name='async_handlers' type64='^{_XInternalAsync=}'/>
<field declared_type64='unsigned long' name='bigreq_size' type64='Q'/>
<field declared_type64='struct _XLockPtrs*' name='lock_fns' type64='^{_XLockPtrs=}'/>
<field declared_type64='struct _XKeytrans*' name='key_bindings' type64='^{_XKeytrans=}'/>
<field declared_type64='int' name='cursor_font' type64='i'/>
<field declared_type64='struct _XDisplayAtoms*' name='atoms' type64='^{_XDisplayAtoms=}'/>
<field declared_type64='unsigned int' name='mode_switch' type64='I'/>
<field declared_type64='struct _XContextDB*' name='context_db' type64='^{_XContextDB=}'/>
<field declared_type64='int (**)()' name='error_vec' type64='^^?'/>
<field declared_type64='struct (anonymous struct at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/X11/Xlib.h:513:2)' name='cms' type64='{_structanonymousstructatApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX1012sdkSystemLibraryFrameworksTkframeworkHeadersX11Xlibh5132=&quot;defaultCCCs&quot;*&quot;clientCmaps&quot;*&quot;perVisualIntensityMaps&quot;*}'/>
<field declared_type64='struct _XIMFilter*' name='im_filters' type64='^{_XIMFilter=}'/>
<field declared_type64='struct _XSQEvent*' name='qfree' type64='^{_XSQEvent=}'/>
<field declared_type64='unsigned long' name='next_event_serial_num' type64='Q'/>
<field declared_type64='int (*)()' function_pointer='true' name='savedsynchandler' type64='^?'>
<retval declared_type64='int' type64='i'/>
</field>
</struct>
<struct name='MacDrawable' type64='{TkWindowPrivate=&quot;winPtr&quot;^{TkWindow}&quot;view&quot;@&quot;NSView&quot;&quot;context&quot;^{CGContext}&quot;xOff&quot;i&quot;yOff&quot;i&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}&quot;visRgn&quot;^{__HIShape}&quot;aboveVisRgn&quot;^{__HIShape}&quot;drawRgn&quot;^{__HIShape}&quot;referenceCount&quot;i&quot;toplevel&quot;^{TkWindowPrivate}&quot;flags&quot;i}'>
<field declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<field declared_type64='NSView*' name='view' type64='@&quot;NSView&quot;'/>
<field declared_type64='CGContextRef' name='context' type64='^{CGContext=}'/>
<field declared_type64='int' name='xOff' type64='i'/>
<field declared_type64='int' name='yOff' type64='i'/>
<field declared_type64='CGSize' name='size' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}'/>
<field declared_type64='HIShapeRef' name='visRgn' type64='^{__HIShape=}'/>
<field declared_type64='HIShapeRef' name='aboveVisRgn' type64='^{__HIShape=}'/>
<field declared_type64='HIShapeRef' name='drawRgn' type64='^{__HIShape=}'/>
<field declared_type64='int' name='referenceCount' type64='i'/>
<field declared_type64='struct TkWindowPrivate*' name='toplevel' type64='^{TkWindowPrivate=^{TkWindow}@^{CGContext}ii{CGSize=dd}^{__HIShape}^{__HIShape}^{__HIShape}i^{TkWindowPrivate}i}'/>
<field declared_type64='int' name='flags' type64='i'/>
</struct>
<struct name='NullElement' type64='{_NullElement=&quot;unused&quot;^{Tcl_Obj}}'>
<field declared_type64='Tcl_Obj*' name='unused' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</struct>
<struct name='Screen' type64='{_Screen=}'>
<field declared_type64='XExtData*' name='ext_data' type64='^{_XExtData=i^{_XExtData}^?*}'/>
<field declared_type64='struct _XDisplay*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='mwidth' type64='i'/>
<field declared_type64='int' name='mheight' type64='i'/>
<field declared_type64='int' name='ndepths' type64='i'/>
<field declared_type64='Depth*' name='depths' type64='^{_Depth=ii^{?}}'/>
<field declared_type64='int' name='root_depth' type64='i'/>
<field declared_type64='Visual*' name='root_visual' type64='^{_Visual=}'/>
<field declared_type64='GC' name='default_gc' type64='^{_GC=}'/>
<field declared_type64='int' name='cmap' type64='i'/>
<field declared_type64='unsigned long' name='white_pixel' type64='Q'/>
<field declared_type64='unsigned long' name='black_pixel' type64='Q'/>
<field declared_type64='int' name='max_maps' type64='i'/>
<field declared_type64='int' name='min_maps' type64='i'/>
<field declared_type64='int' name='backing_store' type64='i'/>
<field declared_type64='int' name='save_unders' type64='i'/>
<field declared_type64='long' name='root_input_mask' type64='q'/>
</struct>
<struct name='ScreenFormat' type64='{_ScreenFormat=&quot;ext_data&quot;^{_XExtData}&quot;depth&quot;i&quot;bits_per_pixel&quot;i&quot;scanline_pad&quot;i}'>
<field declared_type64='XExtData*' name='ext_data' type64='^{_XExtData=i^{_XExtData}^?*}'/>
<field declared_type64='int' name='depth' type64='i'/>
<field declared_type64='int' name='bits_per_pixel' type64='i'/>
<field declared_type64='int' name='scanline_pad' type64='i'/>
</struct>
<struct name='TTKLayoutInstruction' type64='{_TTKLayoutInstruction=&quot;elementName&quot;*&quot;opcode&quot;I}'>
<field const='true' declared_type64='char*' name='elementName' type64='*'/>
<field declared_type64='unsigned int' name='opcode' type64='I'/>
</struct>
<struct name='TkCaret' type64='{TkCaret=&quot;winPtr&quot;^{TkWindow}&quot;x&quot;i&quot;y&quot;i&quot;height&quot;i}'>
<field declared_type64='struct TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
</struct>
<struct name='TkCursor' type64='{TkCursor=&quot;cursor&quot;^{Tk_Cursor_}&quot;display&quot;^{_XDisplay}&quot;resourceRefCount&quot;i&quot;objRefCount&quot;i&quot;otherTable&quot;^{Tcl_HashTable}&quot;hashPtr&quot;^{Tcl_HashEntry}&quot;idHashPtr&quot;^{Tcl_HashEntry}&quot;nextPtr&quot;^{TkCursor}}'>
<field declared_type64='Tk_Cursor' name='cursor' type64='^{Tk_Cursor_=}'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='resourceRefCount' type64='i'/>
<field declared_type64='int' name='objRefCount' type64='i'/>
<field declared_type64='Tcl_HashTable*' name='otherTable' type64='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashEntry*' name='hashPtr' type64='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][1c])}'/>
<field declared_type64='Tcl_HashEntry*' name='idHashPtr' type64='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][1c])}'/>
<field declared_type64='struct TkCursor*' name='nextPtr' type64='^{TkCursor=^{Tk_Cursor_}^{_XDisplay}ii^{Tcl_HashTable}^{Tcl_HashEntry}^{Tcl_HashEntry}^{TkCursor}}'/>
</struct>
<struct name='TkDisplay' type64='{TkDisplay=}'>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='struct TkDisplay*' name='nextPtr' type64='^{TkDisplay=}'/>
<field declared_type64='char*' name='name' type64='*'/>
<field declared_type64='int' name='lastEventTime' type64='i'/>
<field declared_type64='int' name='borderInit' type64='i'/>
<field declared_type64='Tcl_HashTable' name='borderTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='atomInit' type64='i'/>
<field declared_type64='Tcl_HashTable' name='nameTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashTable' name='atomTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='bindInfoStale' type64='i'/>
<field declared_type64='unsigned int' name='modeModMask' type64='I'/>
<field declared_type64='unsigned int' name='metaModMask' type64='I'/>
<field declared_type64='unsigned int' name='altModMask' type64='I'/>
<field declared_type64='enum (anonymous enum at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/tk-private/tkInt.h:209:5)' name='lockUsage' type64='i'/>
<field declared_type64='int' name='numModKeyCodes' type64='i'/>
<field declared_type64='int*' name='modKeyCodes' type64='^i'/>
<field declared_type64='int' name='bitmapInit' type64='i'/>
<field declared_type64='int' name='bitmapAutoNumber' type64='i'/>
<field declared_type64='Tcl_HashTable' name='bitmapNameTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashTable' name='bitmapIdTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashTable' name='bitmapDataTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='numIdSearches' type64='i'/>
<field declared_type64='int' name='numSlowSearches' type64='i'/>
<field declared_type64='int' name='colorInit' type64='i'/>
<field declared_type64='TkStressedCmap*' name='stressPtr' type64='^{TkStressedCmap=}'/>
<field declared_type64='Tcl_HashTable' name='colorNameTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashTable' name='colorValueTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='cursorInit' type64='i'/>
<field declared_type64='Tcl_HashTable' name='cursorNameTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashTable' name='cursorDataTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashTable' name='cursorIdTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='char*' name='cursorString' type64='[20c]'/>
<field declared_type64='int' name='cursorFont' type64='i'/>
<field declared_type64='struct TkErrorHandler*' name='errorPtr' type64='^{TkErrorHandler=^{TkDisplay}QQiii^?^v^{TkErrorHandler}}'/>
<field declared_type64='int' name='deleteCount' type64='i'/>
<field declared_type64='struct TkWindowEvent*' name='delayedMotionPtr' type64='^{TkWindowEvent=}'/>
<field declared_type64='int' name='focusDebug' type64='i'/>
<field declared_type64='struct TkWindow*' name='implicitWinPtr' type64='^{TkWindow=}'/>
<field declared_type64='struct TkWindow*' name='focusPtr' type64='^{TkWindow=}'/>
<field declared_type64='Tcl_HashTable' name='gcValueTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashTable' name='gcIdTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='gcInit' type64='i'/>
<field declared_type64='Tcl_HashTable' name='maintainHashTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='geomInit' type64='i'/>
<field declared_type64='Tcl_HashTable' name='uidTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='uidInit' type64='i'/>
<field declared_type64='struct TkWindow*' name='grabWinPtr' type64='^{TkWindow=}'/>
<field declared_type64='struct TkWindow*' name='eventualGrabWinPtr' type64='^{TkWindow=}'/>
<field declared_type64='struct TkWindow*' name='buttonWinPtr' type64='^{TkWindow=}'/>
<field declared_type64='struct TkWindow*' name='serverWinPtr' type64='^{TkWindow=}'/>
<field declared_type64='TkGrabEvent*' name='firstGrabEventPtr' type64='^{TkGrabEvent=}'/>
<field declared_type64='TkGrabEvent*' name='lastGrabEventPtr' type64='^{TkGrabEvent=}'/>
<field declared_type64='int' name='grabFlags' type64='i'/>
<field declared_type64='int' name='gridInit' type64='i'/>
<field declared_type64='Tcl_HashTable' name='gridHashTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='imageId' type64='i'/>
<field declared_type64='int' name='postCommandGeneration' type64='i'/>
<field declared_type64='int' name='packInit' type64='i'/>
<field declared_type64='Tcl_HashTable' name='packerHashTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='placeInit' type64='i'/>
<field declared_type64='Tcl_HashTable' name='masterTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='Tcl_HashTable' name='slaveTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='struct TkSelectionInfo*' name='selectionInfoPtr' type64='^{TkSelectionInfo=}'/>
<field declared_type64='int' name='multipleAtom' type64='i'/>
<field declared_type64='int' name='incrAtom' type64='i'/>
<field declared_type64='int' name='targetsAtom' type64='i'/>
<field declared_type64='int' name='timestampAtom' type64='i'/>
<field declared_type64='int' name='textAtom' type64='i'/>
<field declared_type64='int' name='compoundTextAtom' type64='i'/>
<field declared_type64='int' name='applicationAtom' type64='i'/>
<field declared_type64='int' name='windowAtom' type64='i'/>
<field declared_type64='int' name='clipboardAtom' type64='i'/>
<field declared_type64='int' name='utf8Atom' type64='i'/>
<field declared_type64='Tk_Window' name='clipWindow' type64='^{Tk_Window_=}'/>
<field declared_type64='int' name='clipboardActive' type64='i'/>
<field declared_type64='struct TkMainInfo*' name='clipboardAppPtr' type64='^{TkMainInfo=}'/>
<field declared_type64='struct TkClipboardTarget*' name='clipTargetPtr' type64='^{TkClipboardTarget=}'/>
<field declared_type64='Tk_Window' name='commTkwin' type64='^{Tk_Window_=}'/>
<field declared_type64='int' name='commProperty' type64='i'/>
<field declared_type64='int' name='registryProperty' type64='i'/>
<field declared_type64='int' name='appNameProperty' type64='i'/>
<field declared_type64='struct TkIdStack*' name='idStackPtr' type64='^{TkIdStack=}'/>
<field declared_type64='int (int *)' name='XID' type64='?'/>
<field declared_type64='struct TkIdStack*' name='windowStackPtr' type64='^{TkIdStack=}'/>
<field declared_type64='Tcl_TimerToken' name='idCleanupScheduled' type64='^{Tcl_TimerToken_=}'/>
<field declared_type64='struct TkWmInfo*' name='firstWmPtr' type64='^{TkWmInfo=}'/>
<field declared_type64='struct TkWmInfo*' name='foregroundWmPtr' type64='^{TkWmInfo=}'/>
<field declared_type64='int' name='destroyCount' type64='i'/>
<field declared_type64='unsigned long' name='lastDestroyRequest' type64='Q'/>
<field declared_type64='TkColormap*' name='cmapPtr' type64='^{TkColormap=}'/>
<field declared_type64='Tcl_HashTable' name='winTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='refCount' type64='i'/>
<field declared_type64='int' name='mouseButtonState' type64='i'/>
<field declared_type64='Window' name='mouseButtonWindow' type64='?'/>
<field declared_type64='Window' name='warpWindow' type64='?'/>
<field declared_type64='int' name='warpX' type64='i'/>
<field declared_type64='int' name='warpY' type64='i'/>
<field declared_type64='unsigned int' name='flags' type64='I'/>
<field declared_type64='TkCaret' name='caret' type64='{TkCaret=&quot;winPtr&quot;^{TkWindow}&quot;x&quot;i&quot;y&quot;i&quot;height&quot;i}'/>
<field declared_type64='int' name='iconDataSize' type64='i'/>
<field declared_type64='unsigned char*' name='iconDataPtr' type64='*'/>
</struct>
<struct name='TkErrorHandler' type64='{TkErrorHandler=&quot;dispPtr&quot;^{TkDisplay}&quot;firstRequest&quot;Q&quot;lastRequest&quot;Q&quot;error&quot;i&quot;request&quot;i&quot;minorCode&quot;i&quot;errorProc&quot;^?&quot;clientData&quot;^v&quot;nextPtr&quot;^{TkErrorHandler}}'>
<field declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<field declared_type64='unsigned long' name='firstRequest' type64='Q'/>
<field declared_type64='unsigned long' name='lastRequest' type64='Q'/>
<field declared_type64='int' name='error' type64='i'/>
<field declared_type64='int' name='request' type64='i'/>
<field declared_type64='int' name='minorCode' type64='i'/>
<field declared_type64='Tk_ErrorProc*' function_pointer='true' name='errorProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XErrorEvent*' type64='^{_XErrorEvent=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='ClientData' name='clientData' type64='^v'/>
<field declared_type64='struct TkErrorHandler*' name='nextPtr' type64='^{TkErrorHandler=^{TkDisplay}QQiii^?^v^{TkErrorHandler}}'/>
</struct>
<struct name='TkEventHandler' type64='{TkEventHandler=&quot;mask&quot;Q&quot;proc&quot;^?&quot;clientData&quot;^v&quot;nextPtr&quot;^{TkEventHandler}}'>
<field declared_type64='unsigned long' name='mask' type64='Q'/>
<field declared_type64='Tk_EventProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='ClientData' name='clientData' type64='^v'/>
<field declared_type64='struct TkEventHandler*' name='nextPtr' type64='^{TkEventHandler=Q^?^v^{TkEventHandler}}'/>
</struct>
<struct name='TkFont' type64='{TkFont=}'>
<field declared_type64='int' name='resourceRefCount' type64='i'/>
<field declared_type64='int' name='objRefCount' type64='i'/>
<field declared_type64='Tcl_HashEntry*' name='cacheHashPtr' type64='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][1c])}'/>
<field declared_type64='Tcl_HashEntry*' name='namedHashPtr' type64='^{Tcl_HashEntry=^{Tcl_HashEntry}^{Tcl_HashTable}^v^v(?=*^{Tcl_Obj}[1i][1c])}'/>
<field declared_type64='Screen*' name='screen' type64='^{_Screen=}'/>
<field declared_type64='int' name='tabWidth' type64='i'/>
<field declared_type64='int' name='underlinePos' type64='i'/>
<field declared_type64='int' name='underlineHeight' type64='i'/>
<field declared_type64='int' name='fid' type64='i'/>
<field declared_type64='struct TkFontAttributes' name='fa' type64='{TkFontAttributes=&quot;family&quot;*&quot;size&quot;i&quot;weight&quot;i&quot;slant&quot;i&quot;underline&quot;i&quot;overstrike&quot;i}'/>
<field declared_type64='TkFontMetrics' name='fm' type64='{TkFontMetrics=&quot;ascent&quot;i&quot;descent&quot;i&quot;maxWidth&quot;i&quot;fixed&quot;i}'/>
<field declared_type64='struct TkFont*' name='nextPtr' type64='^{TkFont=}'/>
</struct>
<struct name='TkFontAttributes' type64='{TkFontAttributes=&quot;family&quot;*&quot;size&quot;i&quot;weight&quot;i&quot;slant&quot;i&quot;underline&quot;i&quot;overstrike&quot;i}'>
<field declared_type64='Tk_Uid' name='family' type64='*'/>
<field declared_type64='int' name='size' type64='i'/>
<field declared_type64='int' name='weight' type64='i'/>
<field declared_type64='int' name='slant' type64='i'/>
<field declared_type64='int' name='underline' type64='i'/>
<field declared_type64='int' name='overstrike' type64='i'/>
</struct>
<struct name='TkFontMetrics' type64='{TkFontMetrics=&quot;ascent&quot;i&quot;descent&quot;i&quot;maxWidth&quot;i&quot;fixed&quot;i}'>
<field declared_type64='int' name='ascent' type64='i'/>
<field declared_type64='int' name='descent' type64='i'/>
<field declared_type64='int' name='maxWidth' type64='i'/>
<field declared_type64='int' name='fixed' type64='i'/>
</struct>
<struct name='TkIntPlatStubs' type64='{TkIntPlatStubs=}'>
<field declared_type64='int' name='magic' type64='i'/>
<field declared_type64='struct TkIntPlatStubHooks*' name='hooks' type64='^{TkIntPlatStubHooks=}'/>
<field declared_type64='void (*)(void)' function_pointer='true' name='tkCreateXEventSource' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkDisplay *, Window *)' function_pointer='true' name='tkFreeWindowId' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkDisplay *)' function_pointer='true' name='tkInitXId' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_Window, int)' function_pointer='true' name='tkpCmapStressed' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Display *)' function_pointer='true' name='tkpSync' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(TkWindow *)' function_pointer='true' name='tkUnixContainerId' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Time *)' function_pointer='true' name='tkUnixDoOneXEvent' type64='^?'>
<arg declared_type64='Tcl_Time*' type64='^{Tcl_Time=qq}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tk_Window)' function_pointer='true' name='tkUnixSetMenubar' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, Window *)' function_pointer='true' name='tkpScanWindowId' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(TkDisplay *)' function_pointer='true' name='tkWmCleanup' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkDisplay *)' function_pointer='true' name='tkSendCleanup' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkDisplay *)' function_pointer='true' name='tkFreeXId' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(TkWindow *, int)' function_pointer='true' name='tkpWmSetState' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, int, char **)' function_pointer='true' name='tkpTestsendCmd' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char**' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</field>
</struct>
<struct name='TkIntStubs' type64='{TkIntStubs=}'>
<field declared_type64='int' name='magic' type64='i'/>
<field declared_type64='struct TkIntStubHooks*' name='hooks' type64='^{TkIntStubHooks=}'/>
<field declared_type64='TkWindow *(*)(TkDisplay *, int, TkWindow *)' function_pointer='true' name='tkAllocWindow' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</field>
<field declared_type64='void (*)(double *, int, double *)' function_pointer='true' name='tkBezierPoints' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Canvas, double *, int, XPoint *)' function_pointer='true' name='tkBezierScreenPoints' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XPoint*' type64='^{_XPoint=ss}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkBindDeadWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *, XEvent *)' function_pointer='true' name='tkBindEventProc' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkMainInfo *)' function_pointer='true' name='tkBindFree' type64='^?'>
<arg declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkMainInfo *)' function_pointer='true' name='tkBindInit' type64='^?'>
<arg declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(XEvent *, TkWindow *)' function_pointer='true' name='tkChangeEventWindow' type64='^?'>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, TkDisplay *)' function_pointer='true' name='tkClipInit' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Anchor, Tk_Window, int, int, int, int, int *, int *)' function_pointer='true' name='tkComputeAnchor' type64='^?'>
<arg declared_type64='Tk_Anchor' type64='i'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *)' function_pointer='true' name='tkCopyAndGlobalEval' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='unsigned long (*)(Tcl_Interp *, int, ClientData, char *, TkBindEvalProc *, TkBindFreeProc *, ClientData)' function_pointer='true' name='tkCreateBindingProcedure' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='ClientData' type64='^v'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='TkBindEvalProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='TkBindFreeProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='unsigned long' type64='Q'/>
</field>
<field declared_type64='TkCursor *(*)(Tk_Window, char *, char *, int, int, int, int, XColor, XColor)' function_pointer='true' name='tkCreateCursorFromData' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XColor' type64='{_XColor=QSSScc}'/>
<arg declared_type64='XColor' type64='{_XColor=QSSScc}'/>
<retval declared_type64='TkCursor*' type64='^{TkCursor=^{Tk_Cursor_}^{_XDisplay}ii^{Tcl_HashTable}^{Tcl_HashEntry}^{Tcl_HashEntry}^{TkCursor}}'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, int, char **, int, char *)' function_pointer='true' name='tkCreateFrame' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char**' type64='^*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_Window (*)(Tcl_Interp *, char *, char *)' function_pointer='true' name='tkCreateMainWindow' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='int (int *)' name='Time' type64='?'/>
<field declared_type64='void (*)(TkMainInfo *)' function_pointer='true' name='tkDeleteAllImages' type64='^?'>
<arg declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkDoConfigureNotify' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, GC, int, int, int)' function_pointer='true' name='tkDrawInsetFocusHighlight' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkEventDeadWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Canvas, double *, int, Display *, int, GC, GC)' function_pointer='true' name='tkFillPolygon' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, TkStateMap *, char *)' function_pointer='true' name='tkFindStateNum' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='TkStateMap*' type64='^{TkStateMap=i*}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)( TkStateMap *, int)' function_pointer='true' name='tkFindStateString' type64='^?'>
<arg const='true' declared_type64='TkStateMap*' type64='^{TkStateMap=i*}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkFocusDeadWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(TkWindow *, XEvent *)' function_pointer='true' name='tkFocusFilterEvent' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='TkWindow *(*)(TkWindow *, XEvent *)' function_pointer='true' name='tkFocusKeyEvent' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</field>
<field declared_type64='void (*)(TkMainInfo *)' function_pointer='true' name='tkFontPkgInit' type64='^?'>
<arg declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkMainInfo *)' function_pointer='true' name='tkFontPkgFree' type64='^?'>
<arg declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkFreeBindingTags' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkCursor *)' function_pointer='true' name='tkpFreeCursor' type64='^?'>
<arg declared_type64='TkCursor*' type64='^{TkCursor=^{Tk_Cursor_}^{_XDisplay}ii^{Tcl_HashTable}^{Tcl_HashEntry}^{Tcl_HashEntry}^{TkCursor}}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='char *(*)(Tcl_Interp *, char *, char *, int *, int *, int *, int *)' function_pointer='true' name='tkGetBitmapData' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='void (*)(double *, double *, double, int, double *, double *)' function_pointer='true' name='tkGetButtPoints' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='TkCursor *(*)(Tcl_Interp *, Tk_Window, Tk_Uid)' function_pointer='true' name='tkGetCursorByName' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Uid' type64='*'/>
<retval declared_type64='TkCursor*' type64='^{TkCursor=^{Tk_Cursor_}^{_XDisplay}ii^{Tcl_HashTable}^{Tcl_HashEntry}^{Tcl_HashEntry}^{TkCursor}}'/>
</field>
<field const='true' declared_type64='char *(*)(Tcl_Interp *, char *)' function_pointer='true' name='tkGetDefaultScreenName' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field declared_type64='TkDisplay *(*)(Display *)' function_pointer='true' name='tkGetDisplay' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<retval declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, int, Tcl_Obj * *, Tk_Window *)' function_pointer='true' name='tkGetDisplayOf' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<arg declared_type64='Tk_Window*' type64='^^{Tk_Window_}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='TkWindow *(*)(TkWindow *)' function_pointer='true' name='tkGetFocusWin' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window)' function_pointer='true' name='tkGetInterpNames' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(double *, double *, double *, double, double *, double *)' function_pointer='true' name='tkGetMiterPoints' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, int *, int *)' function_pointer='true' name='tkGetPointerCoords' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_Window)' function_pointer='true' name='tkGetServerInfo' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkGrabDeadWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(TkWindow *)' function_pointer='true' name='tkGrabState' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Item *, double *)' function_pointer='true' name='tkIncludePoint' type64='^?'>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(XEvent *, TkWindow *, TkWindow *, int, int, Tcl_QueuePosition)' function_pointer='true' name='tkInOutEvents' type64='^?'>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_QueuePosition' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tkInstallFrameMenu' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='char *(*)(int)' function_pointer='true' name='tkKeysymToString' type64='^?'>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='int (*)(double *, double *, double *)' function_pointer='true' name='tkLineToArea' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='double (*)(double *, double *, double *)' function_pointer='true' name='tkLineToPoint' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</field>
<field declared_type64='int (*)(Tk_Canvas, double *, int, int, XPoint *, double *)' function_pointer='true' name='tkMakeBezierCurve' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XPoint*' type64='^{_XPoint=ss}'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_Canvas, double *, int)' function_pointer='true' name='tkMakeBezierPostscript' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkOptionClassChanged' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkOptionDeadWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(double *, double *)' function_pointer='true' name='tkOvalToArea' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='double (*)(double *, double, int, double *)' function_pointer='true' name='tkOvalToPoint' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</field>
<field declared_type64='int (*)(TkWindow *, int)' function_pointer='true' name='tkpChangeFocus' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(TkDisplay *)' function_pointer='true' name='tkpCloseDisplay' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *, int)' function_pointer='true' name='tkpClaimFocus' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)( char *, char *)' function_pointer='true' name='tkpDisplayWarning' type64='^?'>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tcl_DString *)' function_pointer='true' name='tkpGetAppName' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_DString*' type64='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='TkWindow *(*)(TkWindow *)' function_pointer='true' name='tkpGetOtherWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</field>
<field declared_type64='TkWindow *(*)(TkWindow *)' function_pointer='true' name='tkpGetWrapperWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *)' function_pointer='true' name='tkpInit' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, int)' function_pointer='true' name='tkpInitializeMenuBindings' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tkpMakeContainer' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int)' function_pointer='true' name='tkpMakeMenuWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(TkWindow *, Window *)' function_pointer='true' name='tkpMakeWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, char *)' function_pointer='true' name='tkpMenuNotifyToplevelCreate' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='TkDisplay *(*)( char *)' function_pointer='true' name='tkpOpenDisplay' type64='^?'>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
</field>
<field declared_type64='int (*)(XEvent *, TkWindow *)' function_pointer='true' name='tkPointerEvent' type64='^?'>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(double *, int, double *)' function_pointer='true' name='tkPolygonToArea' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='double (*)(double *, int, double *)' function_pointer='true' name='tkPolygonToPoint' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</field>
<field declared_type64='int (*)(TkWindow *, TkWindow *)' function_pointer='true' name='tkPositionInTree' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(TkWindow *, XEvent *)' function_pointer='true' name='tkpRedirectKeyEvent' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_Window, char *)' function_pointer='true' name='tkpSetMainMenubar' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, char *)' function_pointer='true' name='tkpUseWindow' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Window *, TkDisplay *)' function_pointer='true' name='tkpWindowWasRecentlyDeleted' type64='^?'>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(TkWindow *, XEvent *)' function_pointer='true' name='tkQueueEventForAllChildren' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Display *, int, char *, unsigned int *, unsigned int *, int *, int *, int *)' function_pointer='true' name='tkReadBitmapFile' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='unsigned int*' type64='^I'/>
<arg declared_type64='unsigned int*' type64='^I'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tk_Window, GC, int, int, int, int, int, int, TkRegion)' function_pointer='true' name='tkScrollWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='TkRegion' type64='^{TkRegion_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkSelDeadWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, XEvent *)' function_pointer='true' name='tkSelEventProc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tkSelInit' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(XEvent *)' function_pointer='true' name='tkSelPropProc' type64='^?'>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void*' name='reserved84' type64='^v'/>
<field declared_type64='void (*)(Tcl_Interp *, Tk_Window, char *, char *)' function_pointer='true' name='tkSetWindowMenuBar' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (int *)' name='KeySym' type64='?'/>
<field declared_type64='int (*)(double *, int, double, int, int, double *)' function_pointer='true' name='tkThickPolyLineToArea' type64='^?'>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkWmAddToColormapWindows' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkWmDeadWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='TkWindow *(*)(TkWindow *)' function_pointer='true' name='tkWmFocusToplevel' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkWmMapWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkWmNewWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *, XEvent *)' function_pointer='true' name='tkWmProtocolEventProc' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkWmRemoveFromColormapWindows' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *, int, TkWindow *)' function_pointer='true' name='tkWmRestackToplevel' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkWmSetClass' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *)' function_pointer='true' name='tkWmUnmapWindow' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tk_Window, char *)' function_pointer='true' name='tkDebugBitmap' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tk_Window, char *)' function_pointer='true' name='tkDebugBorder' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tk_Window, char *)' function_pointer='true' name='tkDebugCursor' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tk_Window, char *)' function_pointer='true' name='tkDebugColor' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tcl_Interp *, Tk_OptionTable)' function_pointer='true' name='tkDebugConfig' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tk_Window, char *)' function_pointer='true' name='tkDebugFont' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tcl_Obj *, TkStateMap *, Tcl_Obj *)' function_pointer='true' name='tkFindStateNumObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg const='true' declared_type64='TkStateMap*' type64='^{TkStateMap=i*}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tcl_HashTable *(*)(void)' function_pointer='true' name='tkGetBitmapPredefTable' type64='^?'>
<retval declared_type64='Tcl_HashTable*' type64='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
</field>
<field declared_type64='TkDisplay *(*)(void)' function_pointer='true' name='tkGetDisplayList' type64='^?'>
<retval declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
</field>
<field declared_type64='TkMainInfo *(*)(void)' function_pointer='true' name='tkGetMainInfoList' type64='^?'>
<retval declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tcl_Obj *, Tk_Window *)' function_pointer='true' name='tkGetWindowFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Window*' type64='^^{Tk_Window_}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)(TkWindow *, XEvent *, Tcl_DString *)' function_pointer='true' name='tkpGetString' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='Tcl_DString*' type64='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_Font)' function_pointer='true' name='tkpGetSubFonts' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tk_Window, char *, char *)' function_pointer='true' name='tkpGetSystemDefault' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='tkpMenuThreadInit' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void*' name='reserved113' type64='^v'/>
<field declared_type64='void*' name='reserved114' type64='^v'/>
<field declared_type64='void*' name='reserved115' type64='^v'/>
<field declared_type64='void*' name='reserved116' type64='^v'/>
<field declared_type64='void*' name='reserved117' type64='^v'/>
<field declared_type64='void*' name='reserved118' type64='^v'/>
<field declared_type64='void*' name='reserved119' type64='^v'/>
<field declared_type64='void*' name='reserved120' type64='^v'/>
<field declared_type64='void*' name='reserved121' type64='^v'/>
<field declared_type64='void*' name='reserved122' type64='^v'/>
<field declared_type64='void*' name='reserved123' type64='^v'/>
<field declared_type64='void*' name='reserved124' type64='^v'/>
<field declared_type64='void*' name='reserved125' type64='^v'/>
<field declared_type64='void*' name='reserved126' type64='^v'/>
<field declared_type64='void*' name='reserved127' type64='^v'/>
<field declared_type64='void*' name='reserved128' type64='^v'/>
<field declared_type64='void*' name='reserved129' type64='^v'/>
<field declared_type64='void*' name='reserved130' type64='^v'/>
<field declared_type64='void*' name='reserved131' type64='^v'/>
<field declared_type64='void*' name='reserved132' type64='^v'/>
<field declared_type64='void*' name='reserved133' type64='^v'/>
<field declared_type64='void*' name='reserved134' type64='^v'/>
<field declared_type64='void (*)(Tk_Window, GC, GC, int, int)' function_pointer='true' name='tkpDrawHighlightBorder' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkWindow *, int)' function_pointer='true' name='tkSetFocusWin' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, XEvent *)' function_pointer='true' name='tkpSetKeycodeAndState' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkDisplay *)' function_pointer='true' name='tkpInitKeymapInfo' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='TkRegion (*)(Tk_PhotoHandle)' function_pointer='true' name='tkPhotoGetValidRegion' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<retval declared_type64='TkRegion' type64='^{TkRegion_=}'/>
</field>
<field declared_type64='TkWindow **(*)(TkWindow *)' function_pointer='true' name='tkWmStackorderToplevel' type64='^?'>
<arg declared_type64='TkWindow*' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow**' type64='^^{TkWindow}'/>
</field>
<field declared_type64='void (*)(TkMainInfo *)' function_pointer='true' name='tkFocusFree' type64='^?'>
<arg declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkDisplay *)' function_pointer='true' name='tkClipCleanup' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkDisplay *)' function_pointer='true' name='tkGCCleanup' type64='^?'>
<arg declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void*' name='reserved145' type64='^v'/>
<field declared_type64='void (*)(TkMainInfo *)' function_pointer='true' name='tkStylePkgInit' type64='^?'>
<arg declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(TkMainInfo *)' function_pointer='true' name='tkStylePkgFree' type64='^?'>
<arg declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_Window (*)(Tcl_Interp *, char *)' function_pointer='true' name='tkToplevelWindowForCommand' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field const='true' declared_type64='Tk_OptionSpec *(*)( char *, Tk_OptionTable)' function_pointer='true' name='tkGetOptionSpec' type64='^?'>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<retval const='true' declared_type64='Tk_OptionSpec*' type64='^{Tk_OptionSpec=i****iii^vi}'/>
</field>
<field declared_type64='int (*)(Tk_Canvas, double *, int, int, XPoint *, double *)' function_pointer='true' name='tkMakeRawCurve' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XPoint*' type64='^{_XPoint=ss}'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_Canvas, double *, int)' function_pointer='true' name='tkMakeRawCurvePostscript' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tk_3DBorder, int, int, int)' function_pointer='true' name='tkpDrawFrame' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tcl_ExitProc *, ClientData)' function_pointer='true' name='tkCreateThreadExitHandler' type64='^?'>
<arg declared_type64='Tcl_ExitProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tcl_ExitProc *, ClientData)' function_pointer='true' name='tkDeleteThreadExitHandler' type64='^?'>
<arg declared_type64='Tcl_ExitProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void*' name='reserved155' type64='^v'/>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, int, char **)' function_pointer='true' name='tkpTestembedCmd' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char**' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, int, char **)' function_pointer='true' name='tkpTesttextCmd' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char**' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void*' name='reserved158' type64='^v'/>
<field declared_type64='void*' name='reserved159' type64='^v'/>
<field declared_type64='void*' name='reserved160' type64='^v'/>
<field declared_type64='void*' name='reserved161' type64='^v'/>
<field declared_type64='void*' name='reserved162' type64='^v'/>
<field declared_type64='void*' name='reserved163' type64='^v'/>
<field declared_type64='void*' name='reserved164' type64='^v'/>
<field declared_type64='void*' name='reserved165' type64='^v'/>
<field declared_type64='void*' name='reserved166' type64='^v'/>
<field declared_type64='void*' name='reserved167' type64='^v'/>
<field declared_type64='void*' name='reserved168' type64='^v'/>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, Tk_Window, char *, char *, int)' function_pointer='true' name='tkStateParseProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)(ClientData, Tk_Window, char *, int, Tcl_FreeProc **)' function_pointer='true' name='tkStatePrintProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, Tk_Window, char *, char *, int)' function_pointer='true' name='tkCanvasDashParseProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)(ClientData, Tk_Window, char *, int, Tcl_FreeProc **)' function_pointer='true' name='tkCanvasDashPrintProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, Tk_Window, char *, char *, int)' function_pointer='true' name='tkOffsetParseProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)(ClientData, Tk_Window, char *, int, Tcl_FreeProc **)' function_pointer='true' name='tkOffsetPrintProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, Tk_Window, char *, char *, int)' function_pointer='true' name='tkPixelParseProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)(ClientData, Tk_Window, char *, int, Tcl_FreeProc **)' function_pointer='true' name='tkPixelPrintProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, Tk_Window, char *, char *, int)' function_pointer='true' name='tkOrientParseProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)(ClientData, Tk_Window, char *, int, Tcl_FreeProc **)' function_pointer='true' name='tkOrientPrintProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, Tk_Window, char *, char *, int)' function_pointer='true' name='tkSmoothParseProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)(ClientData, Tk_Window, char *, int, Tcl_FreeProc **)' function_pointer='true' name='tkSmoothPrintProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</field>
</struct>
<struct name='TkKeyEvent' type64='{_TkKeyEvent=}'>
<field declared_type64='XKeyEvent' name='keyEvent' type64='{_XKeyEvent=}'/>
<field declared_type64='char*' name='charValuePtr' type64='*'/>
<field declared_type64='int' name='charValueLen' type64='i'/>
</struct>
<struct name='TkMacOSXEmbedHandler' type64='{_TkMacOSXEmbedHandler=&quot;registerWinProc&quot;^?&quot;getPortProc&quot;^?&quot;containerExistProc&quot;^?&quot;getClipProc&quot;^?&quot;getOffsetProc&quot;^?}'>
<field declared_type64='Tk_MacOSXEmbedRegisterWinProc*' function_pointer='true' name='registerWinProc' type64='^?'>
<arg declared_type64='long' type64='q'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_MacOSXEmbedGetGrafPortProc*' function_pointer='true' name='getPortProc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void*' type64='^v'/>
</field>
<field declared_type64='Tk_MacOSXEmbedMakeContainerExistProc*' function_pointer='true' name='containerExistProc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_MacOSXEmbedGetClipProc*' function_pointer='true' name='getClipProc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='TkRegion' type64='^{TkRegion_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_MacOSXEmbedGetOffsetInParentProc*' function_pointer='true' name='getOffsetProc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='TkMainInfo' type64='{TkMainInfo=}'>
<field declared_type64='int' name='refCount' type64='i'/>
<field declared_type64='struct TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<field declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<field declared_type64='Tcl_HashTable' name='nameTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='long' name='deletionEpoch' type64='q'/>
<field declared_type64='int' name='bindingTable' type64='i'/>
<field declared_type64='TkBindInfo' name='bindInfo' type64='^{TkBindInfo_=}'/>
<field declared_type64='struct TkFontInfo*' name='fontInfoPtr' type64='^{TkFontInfo=}'/>
<field declared_type64='struct TkToplevelFocusInfo*' name='tlFocusPtr' type64='^{TkToplevelFocusInfo=}'/>
<field declared_type64='struct TkDisplayFocusInfo*' name='displayFocusPtr' type64='^{TkDisplayFocusInfo=}'/>
<field declared_type64='struct ElArray*' name='optionRootPtr' type64='^{ElArray=}'/>
<field declared_type64='Tcl_HashTable' name='imageTable' type64='{Tcl_HashTable=&quot;buckets&quot;^^{Tcl_HashEntry}&quot;staticBuckets&quot;[4^{Tcl_HashEntry}]&quot;numBuckets&quot;i&quot;numEntries&quot;i&quot;rebuildSize&quot;i&quot;downShift&quot;i&quot;mask&quot;i&quot;keyType&quot;i&quot;findProc&quot;^?&quot;createProc&quot;^?&quot;typePtr&quot;^{Tcl_HashKeyType}}'/>
<field declared_type64='int' name='strictMotif' type64='i'/>
<field declared_type64='int' name='alwaysShowSelection' type64='i'/>
<field declared_type64='struct TkMainInfo*' name='nextPtr' type64='^{TkMainInfo=}'/>
</struct>
<struct name='TkPredefBitmap' type64='{_TkPredefBitmap=&quot;source&quot;*&quot;width&quot;i&quot;height&quot;i&quot;native&quot;i}'>
<field const='true' declared_type64='char*' name='source' type64='*'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='native' type64='i'/>
</struct>
<struct name='TkStateMap' type64='{TkStateMap=&quot;numKey&quot;i&quot;strKey&quot;*}'>
<field declared_type64='int' name='numKey' type64='i'/>
<field const='true' declared_type64='char*' name='strKey' type64='*'/>
</struct>
<struct name='TkStubHooks' type64='{TkStubHooks=&quot;tkPlatStubs&quot;^{TkPlatStubs}&quot;tkIntStubs&quot;^{TkIntStubs}&quot;tkIntPlatStubs&quot;^{TkIntPlatStubs}&quot;tkIntXlibStubs&quot;^{TkIntXlibStubs}}'>
<field declared_type64='struct TkPlatStubs*' name='tkPlatStubs' type64='^{TkPlatStubs=i^{TkPlatStubHooks}}'/>
<field declared_type64='struct TkIntStubs*' name='tkIntStubs' type64='^{TkIntStubs=}'/>
<field declared_type64='struct TkIntPlatStubs*' name='tkIntPlatStubs' type64='^{TkIntPlatStubs=}'/>
<field declared_type64='struct TkIntXlibStubs*' name='tkIntXlibStubs' type64='^{TkIntXlibStubs=}'/>
</struct>
<struct name='TkStubs' type64='{TkStubs=}'>
<field declared_type64='int' name='magic' type64='i'/>
<field declared_type64='struct TkStubHooks*' name='hooks' type64='^{TkStubHooks=^{TkPlatStubs}^{TkIntStubs}^{TkIntPlatStubs}^{TkIntXlibStubs}}'/>
<field declared_type64='void (*)(void)' function_pointer='true' name='tk_MainLoop' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='XColor *(*)(Tk_3DBorder)' function_pointer='true' name='tk_3DBorderColor' type64='^?'>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</field>
<field declared_type64='GC (*)(Tk_Window, Tk_3DBorder, int)' function_pointer='true' name='tk_3DBorderGC' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='GC' type64='^{_GC=}'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, Tk_3DBorder, int, int, int, int, int, int, int, int)' function_pointer='true' name='tk_3DHorizontalBevel' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, Tk_3DBorder, int, int, int, int, int, int)' function_pointer='true' name='tk_3DVerticalBevel' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, char *, char *, int)' function_pointer='true' name='tk_AddOption' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(int, XEvent *, Tk_Window, int, ClientData *)' function_pointer='true' name='tk_BindEvent' type64='^?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='ClientData*' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Canvas, double, double, short *, short *)' function_pointer='true' name='tk_CanvasDrawableCoords' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='short*' type64='^s'/>
<arg declared_type64='short*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Canvas, int, int, int, int)' function_pointer='true' name='tk_CanvasEventuallyRedraw' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Canvas, char *, double *)' function_pointer='true' name='tk_CanvasGetCoord' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_CanvasTextInfo *(*)(Tk_Canvas)' function_pointer='true' name='tk_CanvasGetTextInfo' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<retval declared_type64='Tk_CanvasTextInfo*' type64='^{Tk_CanvasTextInfo=^{Tk_3DBorder_}i^{_XColor=QSSScc}^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}ii^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}i^{Tk_3DBorder_}ii^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}ii}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Canvas, int, int, int, int, int)' function_pointer='true' name='tk_CanvasPsBitmap' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Canvas, XColor *)' function_pointer='true' name='tk_CanvasPsColor' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Canvas, Tk_Font)' function_pointer='true' name='tk_CanvasPsFont' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_Canvas, double *, int)' function_pointer='true' name='tk_CanvasPsPath' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Canvas, int)' function_pointer='true' name='tk_CanvasPsStipple' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='double (*)(Tk_Canvas, double)' function_pointer='true' name='tk_CanvasPsY' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double' type64='d'/>
<retval declared_type64='double' type64='d'/>
</field>
<field declared_type64='void (*)(Tk_Canvas, GC)' function_pointer='true' name='tk_CanvasSetStippleOrigin' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(ClientData, Tcl_Interp *, Tk_Window, char *, char *, int)' function_pointer='true' name='tk_CanvasTagsParseProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='char *(*)(ClientData, Tk_Window, char *, int, Tcl_FreeProc **)' function_pointer='true' name='tk_CanvasTagsPrintProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='Tk_Window (*)(Tk_Canvas)' function_pointer='true' name='tk_CanvasTkwin' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='void (*)(Tk_Canvas, double, double, short *, short *)' function_pointer='true' name='tk_CanvasWindowCoords' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='short*' type64='^s'/>
<arg declared_type64='short*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, unsigned long, XSetWindowAttributes *)' function_pointer='true' name='tk_ChangeWindowAttributes' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' type64='Q'/>
<arg declared_type64='XSetWindowAttributes*' type64='^{_XSetWindowAttributes=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_TextLayout, int, int *, int *, int *, int *)' function_pointer='true' name='tk_CharBbox' type64='^?'>
<arg declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, int)' function_pointer='true' name='tk_ClearSelection' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, int, int, char *)' function_pointer='true' name='tk_ClipboardAppend' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window)' function_pointer='true' name='tk_ClipboardClear' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tk_ConfigSpec *, char *, char *, int)' function_pointer='true' name='tk_ConfigureInfo' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_ConfigSpec*' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<arg declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tk_ConfigSpec *, char *, char *, int)' function_pointer='true' name='tk_ConfigureValue' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_ConfigSpec*' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<arg declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tk_ConfigSpec *, int, char **, char *, int)' function_pointer='true' name='tk_ConfigureWidget' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_ConfigSpec*' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char**' type64='^*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, unsigned int, XWindowChanges *)' function_pointer='true' name='tk_ConfigureWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='XWindowChanges*' type64='^{_XWindowChanges=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_TextLayout (*)(Tk_Font, char *, int, int, Tk_Justify, int, int *, int *)' function_pointer='true' name='tk_ComputeTextLayout' type64='^?'>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_Justify' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
</field>
<field declared_type64='Tk_Window (*)(int, int, Tk_Window)' function_pointer='true' name='tk_CoordsToWindow' type64='^?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='unsigned long (*)(Tcl_Interp *, int, ClientData, char *, char *, int)' function_pointer='true' name='tk_CreateBinding' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='ClientData' type64='^v'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='unsigned long' type64='Q'/>
</field>
<field declared_type64='int (int *)' name='Tk_BindingTable' type64='?'/>
<field declared_type64='Tk_ErrorHandler (*)(Display *, int, int, int, Tk_ErrorProc *, ClientData)' function_pointer='true' name='tk_CreateErrorHandler' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_ErrorProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XErrorEvent*' type64='^{_XErrorEvent=}'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='Tk_ErrorHandler' type64='^{Tk_ErrorHandler_=}'/>
</field>
<field declared_type64='void (*)(Tk_Window, unsigned long, Tk_EventProc *, ClientData)' function_pointer='true' name='tk_CreateEventHandler' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' type64='Q'/>
<arg declared_type64='Tk_EventProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_GenericProc *, ClientData)' function_pointer='true' name='tk_CreateGenericHandler' type64='^?'>
<arg declared_type64='Tk_GenericProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_ImageType *)' function_pointer='true' name='tk_CreateImageType' type64='^?'>
<arg declared_type64='Tk_ImageType*' type64='^{Tk_ImageType=*^?^?^?^?^?^?^{Tk_ImageType}*}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_ItemType *)' function_pointer='true' name='tk_CreateItemType' type64='^?'>
<arg declared_type64='Tk_ItemType*' type64='^{Tk_ItemType=*i^?^{Tk_ConfigSpec}^?^?^?^?i^?^?^?^?^?^?^?^?^?^?^{Tk_ItemType}*i**}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoImageFormat *)' function_pointer='true' name='tk_CreatePhotoImageFormat' type64='^?'>
<arg declared_type64='Tk_PhotoImageFormat*' type64='^{Tk_PhotoImageFormat=*^?^?^?^?^?^?^{Tk_PhotoImageFormat}}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int, Tk_SelectionProc *, ClientData, int)' function_pointer='true' name='tk_CreateSelHandler' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_SelectionProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_Window (*)(Tcl_Interp *, Tk_Window, char *, char *)' function_pointer='true' name='tk_CreateWindow' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='Tk_Window (*)(Tcl_Interp *, Tk_Window, char *, char *)' function_pointer='true' name='tk_CreateWindowFromPath' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, char *, int, int)' function_pointer='true' name='tk_DefineBitmap' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tk_Cursor)' function_pointer='true' name='tk_DefineCursor' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(int, ClientData)' function_pointer='true' name='tk_DeleteAllBindings' type64='^?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, int, ClientData, char *)' function_pointer='true' name='tk_DeleteBinding' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='ClientData' type64='^v'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(int)' function_pointer='true' name='tk_DeleteBindingTable' type64='^?'>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_ErrorHandler)' function_pointer='true' name='tk_DeleteErrorHandler' type64='^?'>
<arg declared_type64='Tk_ErrorHandler' type64='^{Tk_ErrorHandler_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, unsigned long, Tk_EventProc *, ClientData)' function_pointer='true' name='tk_DeleteEventHandler' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' type64='Q'/>
<arg declared_type64='Tk_EventProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_GenericProc *, ClientData)' function_pointer='true' name='tk_DeleteGenericHandler' type64='^?'>
<arg declared_type64='Tk_GenericProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, char *)' function_pointer='true' name='tk_DeleteImage' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int)' function_pointer='true' name='tk_DeleteSelHandler' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tk_DestroyWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_Window)' function_pointer='true' name='tk_DisplayName' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field declared_type64='int (*)(Tk_TextLayout, int, int)' function_pointer='true' name='tk_DistanceToTextLayout' type64='^?'>
<arg declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, Tk_3DBorder, XPoint *, int, int, int)' function_pointer='true' name='tk_Draw3DPolygon' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='XPoint*' type64='^{_XPoint=ss}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, Tk_3DBorder, int, int, int, int, int, int)' function_pointer='true' name='tk_Draw3DRectangle' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, int, GC, Tk_Font, char *, int, int, int)' function_pointer='true' name='tk_DrawChars' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, GC, int, int)' function_pointer='true' name='tk_DrawFocusHighlight' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, int, GC, Tk_TextLayout, int, int, int, int)' function_pointer='true' name='tk_DrawTextLayout' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, Tk_3DBorder, XPoint *, int, int, int)' function_pointer='true' name='tk_Fill3DPolygon' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='XPoint*' type64='^{_XPoint=ss}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, Tk_3DBorder, int, int, int, int, int, int)' function_pointer='true' name='tk_Fill3DRectangle' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_PhotoHandle (*)(Tcl_Interp *, char *)' function_pointer='true' name='tk_FindPhoto' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_PhotoHandle' type64='^v'/>
</field>
<field declared_type64='int (int *)' name='Font' type64='?'/>
<field declared_type64='void (*)(Tk_3DBorder)' function_pointer='true' name='tk_Free3DBorder' type64='^?'>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, int)' function_pointer='true' name='tk_FreeBitmap' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(XColor *)' function_pointer='true' name='tk_FreeColor' type64='^?'>
<arg declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, int)' function_pointer='true' name='tk_FreeColormap' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, Tk_Cursor)' function_pointer='true' name='tk_FreeCursor' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Font)' function_pointer='true' name='tk_FreeFont' type64='^?'>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, GC)' function_pointer='true' name='tk_FreeGC' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Image)' function_pointer='true' name='tk_FreeImage' type64='^?'>
<arg declared_type64='Tk_Image' type64='^{Tk_Image__=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_ConfigSpec *, char *, Display *, int)' function_pointer='true' name='tk_FreeOptions' type64='^?'>
<arg declared_type64='Tk_ConfigSpec*' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, int)' function_pointer='true' name='tk_FreePixmap' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_TextLayout)' function_pointer='true' name='tk_FreeTextLayout' type64='^?'>
<arg declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, int)' function_pointer='true' name='tk_FreeXId' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GC (*)(XColor *, int)' function_pointer='true' name='tk_GCForColor' type64='^?'>
<arg declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='GC' type64='^{_GC=}'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int)' function_pointer='true' name='tk_GeometryRequest' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_3DBorder (*)(Tcl_Interp *, Tk_Window, Tk_Uid)' function_pointer='true' name='tk_Get3DBorder' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Uid' type64='*'/>
<retval declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, int, ClientData)' function_pointer='true' name='tk_GetAllBindings' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, Tk_Anchor *)' function_pointer='true' name='tk_GetAnchor' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_Anchor*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_Window, int)' function_pointer='true' name='tk_GetAtomName' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(Tcl_Interp *, int, ClientData, char *)' function_pointer='true' name='tk_GetBinding' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='ClientData' type64='^v'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field declared_type64='int (int *)' name='Pixmap' type64='?'/>
<field declared_type64='int (*)(Tcl_Interp *, char *, int *)' function_pointer='true' name='tk_GetCapStyle' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='XColor *(*)(Tcl_Interp *, Tk_Window, Tk_Uid)' function_pointer='true' name='tk_GetColor' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Uid' type64='*'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</field>
<field declared_type64='XColor *(*)(Tk_Window, XColor *)' function_pointer='true' name='tk_GetColorByValue' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</field>
<field declared_type64='int (int *)' name='Colormap' type64='?'/>
<field declared_type64='Tk_Cursor (*)(Tcl_Interp *, Tk_Window, Tk_Uid)' function_pointer='true' name='tk_GetCursor' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Uid' type64='*'/>
<retval declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
</field>
<field declared_type64='Tk_Cursor (*)(Tcl_Interp *, Tk_Window, char *, char *, int, int, int, int, Tk_Uid, Tk_Uid)' function_pointer='true' name='tk_GetCursorFromData' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_Uid' type64='*'/>
<arg declared_type64='Tk_Uid' type64='*'/>
<retval declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
</field>
<field declared_type64='Tk_Font (*)(Tcl_Interp *, Tk_Window, char *)' function_pointer='true' name='tk_GetFont' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
</field>
<field declared_type64='Tk_Font (*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_GetFontFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
</field>
<field declared_type64='void (*)(Tk_Font, Tk_FontMetrics *)' function_pointer='true' name='tk_GetFontMetrics' type64='^?'>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<arg declared_type64='Tk_FontMetrics*' type64='^{Tk_FontMetrics=iii}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GC (*)(Tk_Window, unsigned long, XGCValues *)' function_pointer='true' name='tk_GetGC' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' type64='Q'/>
<arg declared_type64='XGCValues*' type64='^{_XGCValues=}'/>
<retval declared_type64='GC' type64='^{_GC=}'/>
</field>
<field declared_type64='Tk_Image (*)(Tcl_Interp *, Tk_Window, char *, Tk_ImageChangedProc *, ClientData)' function_pointer='true' name='tk_GetImage' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_ImageChangedProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='Tk_Image' type64='^{Tk_Image__=}'/>
</field>
<field declared_type64='ClientData (*)(Tcl_Interp *, char *, Tk_ImageType **)' function_pointer='true' name='tk_GetImageMasterData' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_ImageType**' type64='^^{Tk_ImageType}'/>
<retval declared_type64='ClientData' type64='^v'/>
</field>
<field declared_type64='Tk_ItemType *(*)(void)' function_pointer='true' name='tk_GetItemTypes' type64='^?'>
<retval declared_type64='Tk_ItemType*' type64='^{Tk_ItemType=*i^?^{Tk_ConfigSpec}^?^?^?^?i^?^?^?^?^?^?^?^?^?^?^{Tk_ItemType}*i**}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, int *)' function_pointer='true' name='tk_GetJoinStyle' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, Tk_Justify *)' function_pointer='true' name='tk_GetJustify' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_Justify*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(void)' function_pointer='true' name='tk_GetNumMainWindows' type64='^?'>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_Uid (*)(Tk_Window, char *, char *)' function_pointer='true' name='tk_GetOption' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Uid' type64='*'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, char *, int *)' function_pointer='true' name='tk_GetPixels' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, int *)' function_pointer='true' name='tk_GetRelief' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, int *, int *)' function_pointer='true' name='tk_GetRootCoords' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, int, char **, double *, int *)' function_pointer='true' name='tk_GetScrollInfo' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char**' type64='^*'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, char *, double *)' function_pointer='true' name='tk_GetScreenMM' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, int, int, Tk_GetSelProc *, ClientData)' function_pointer='true' name='tk_GetSelection' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_GetSelProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_Uid (*)( char *)' function_pointer='true' name='tk_GetUid' type64='^?'>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Uid' type64='*'/>
</field>
<field declared_type64='Visual *(*)(Tcl_Interp *, Tk_Window, char *, int *, int *)' function_pointer='true' name='tk_GetVisual' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='Visual*' type64='^{_Visual=}'/>
</field>
<field declared_type64='void (*)(Tk_Window, int *, int *, int *, int *)' function_pointer='true' name='tk_GetVRootGeometry' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, int)' function_pointer='true' name='tk_Grab' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(XEvent *)' function_pointer='true' name='tk_HandleEvent' type64='^?'>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_Window (*)(Display *, Window *)' function_pointer='true' name='tk_IdToWindow' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='void (*)(Tk_ImageMaster, int, int, int, int, int, int)' function_pointer='true' name='tk_ImageChanged' type64='^?'>
<arg declared_type64='Tk_ImageMaster' type64='^{Tk_ImageMaster_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *)' function_pointer='true' name='tk_Init' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (int *)' name='Atom' type64='?'/>
<field declared_type64='int (*)(Tk_TextLayout, int, int, int, int)' function_pointer='true' name='tk_IntersectTextLayout' type64='^?'>
<arg declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tk_Window, int, int, int, int)' function_pointer='true' name='tk_MaintainGeometry' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_Window (*)(Tcl_Interp *)' function_pointer='true' name='tk_MainWindow' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tk_MakeWindowExist' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tk_GeomMgr *, ClientData)' function_pointer='true' name='tk_ManageGeometry' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='Tk_GeomMgr*' type64='^{Tk_GeomMgr=*^?^?}'/>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tk_MapWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_Font, char *, int, int, int, int *)' function_pointer='true' name='tk_MeasureChars' type64='^?'>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int, int, int)' function_pointer='true' name='tk_MoveResizeWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int)' function_pointer='true' name='tk_MoveWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int)' function_pointer='true' name='tk_MoveToplevelWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_3DBorder)' function_pointer='true' name='tk_NameOf3DBorder' type64='^?'>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_Anchor)' function_pointer='true' name='tk_NameOfAnchor' type64='^?'>
<arg declared_type64='Tk_Anchor' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(Display *, int)' function_pointer='true' name='tk_NameOfBitmap' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(int)' function_pointer='true' name='tk_NameOfCapStyle' type64='^?'>
<arg declared_type64='int' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(XColor *)' function_pointer='true' name='tk_NameOfColor' type64='^?'>
<arg declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(Display *, Tk_Cursor)' function_pointer='true' name='tk_NameOfCursor' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_Font)' function_pointer='true' name='tk_NameOfFont' type64='^?'>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_ImageMaster)' function_pointer='true' name='tk_NameOfImage' type64='^?'>
<arg declared_type64='Tk_ImageMaster' type64='^{Tk_ImageMaster_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(int)' function_pointer='true' name='tk_NameOfJoinStyle' type64='^?'>
<arg declared_type64='int' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_Justify)' function_pointer='true' name='tk_NameOfJustify' type64='^?'>
<arg declared_type64='Tk_Justify' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field const='true' declared_type64='char *(*)(int)' function_pointer='true' name='tk_NameOfRelief' type64='^?'>
<arg declared_type64='int' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field declared_type64='Tk_Window (*)(Tcl_Interp *, char *, Tk_Window)' function_pointer='true' name='tk_NameToWindow' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, Tk_LostSelProc *, ClientData)' function_pointer='true' name='tk_OwnSelection' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_LostSelProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, int *, char **, Tk_ArgvInfo *, int)' function_pointer='true' name='tk_ParseArgv' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' type64='^i'/>
<arg const='true' declared_type64='char**' type64='^*'/>
<arg declared_type64='Tk_ArgvInfo*' type64='^{_Tk_ArgvInfo=*i***}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle, Tk_PhotoImageBlock *, int, int, int, int)' function_pointer='true' name='tk_PhotoPutBlock_NoComposite' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle, Tk_PhotoImageBlock *, int, int, int, int, int, int, int, int)' function_pointer='true' name='tk_PhotoPutZoomedBlock_NoComposite' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_PhotoHandle, Tk_PhotoImageBlock *)' function_pointer='true' name='tk_PhotoGetImage' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle)' function_pointer='true' name='tk_PhotoBlank' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle, int, int)' function_pointer='true' name='tk_PhotoExpand_Panic' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle, int *, int *)' function_pointer='true' name='tk_PhotoGetSize' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle, int, int)' function_pointer='true' name='tk_PhotoSetSize_Panic' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_TextLayout, int, int)' function_pointer='true' name='tk_PointToChar' type64='^?'>
<arg declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tk_Font, Tcl_DString *)' function_pointer='true' name='tk_PostscriptFontName' type64='^?'>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<arg declared_type64='Tcl_DString*' type64='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Display *, int)' function_pointer='true' name='tk_PreserveColormap' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(XEvent *, Tcl_QueuePosition)' function_pointer='true' name='tk_QueueWindowEvent' type64='^?'>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='Tcl_QueuePosition' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Image, int, int, int, int, int, int, int)' function_pointer='true' name='tk_RedrawImage' type64='^?'>
<arg declared_type64='Tk_Image' type64='^{Tk_Image__=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int)' function_pointer='true' name='tk_ResizeWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_Window, int, Tk_Window)' function_pointer='true' name='tk_RestackWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_RestrictProc *(*)(Tk_RestrictProc *, ClientData, ClientData *)' function_pointer='true' name='tk_RestrictEvents' type64='^?'>
<arg declared_type64='Tk_RestrictProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='Tk_RestrictAction' type64='i'/>
</arg>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='ClientData*' type64='^^v'/>
<retval declared_type64='Tk_RestrictProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='Tk_RestrictAction' type64='i'/>
</retval>
</field>
<field declared_type64='int (*)(Tcl_Interp *)' function_pointer='true' name='tk_SafeInit' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_Window, char *)' function_pointer='true' name='tk_SetAppName' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tk_3DBorder)' function_pointer='true' name='tk_SetBackgroundFromBorder' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, char *)' function_pointer='true' name='tk_SetClass' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int, int, int)' function_pointer='true' name='tk_SetGrid' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int)' function_pointer='true' name='tk_SetInternalBorder' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, unsigned long)' function_pointer='true' name='tk_SetWindowBackground' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int)' function_pointer='true' name='tk_SetWindowBackgroundPixmap' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, unsigned long)' function_pointer='true' name='tk_SetWindowBorder' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int)' function_pointer='true' name='tk_SetWindowBorderWidth' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int)' function_pointer='true' name='tk_SetWindowBorderPixmap' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int)' function_pointer='true' name='tk_SetWindowColormap' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_Window, Visual *, int, int)' function_pointer='true' name='tk_SetWindowVisual' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Visual*' type64='^{_Visual=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Display *, int, int *, int *)' function_pointer='true' name='tk_SizeOfBitmap' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Image, int *, int *)' function_pointer='true' name='tk_SizeOfImage' type64='^?'>
<arg declared_type64='Tk_Image' type64='^{Tk_Image__=}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_Window)' function_pointer='true' name='tk_StrictMotif' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_TextLayout)' function_pointer='true' name='tk_TextLayoutToPostscript' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_Font, char *, int)' function_pointer='true' name='tk_TextWidth' type64='^?'>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tk_UndefineCursor' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, int, GC, Tk_Font, char *, int, int, int, int)' function_pointer='true' name='tk_UnderlineChars' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, int, GC, Tk_TextLayout, int, int, int)' function_pointer='true' name='tk_UnderlineTextLayout' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tk_Ungrab' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tk_Window)' function_pointer='true' name='tk_UnmaintainGeometry' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tk_UnmapWindow' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window)' function_pointer='true' name='tk_UnsetGrid' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int, int)' function_pointer='true' name='tk_UpdatePointer' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_3DBorder (*)(Tcl_Interp *, Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_Alloc3DBorderFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
</field>
<field declared_type64='XColor *(*)(Tcl_Interp *, Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_AllocColorFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</field>
<field declared_type64='Tk_Cursor (*)(Tcl_Interp *, Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_AllocCursorFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
</field>
<field declared_type64='Tk_Font (*)(Tcl_Interp *, Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_AllocFontFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
</field>
<field declared_type64='Tk_OptionTable (*)(Tcl_Interp *, Tk_OptionSpec *)' function_pointer='true' name='tk_CreateOptionTable' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='Tk_OptionSpec*' type64='^{Tk_OptionSpec=i****iii^vi}'/>
<retval declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
</field>
<field declared_type64='void (*)(Tk_OptionTable)' function_pointer='true' name='tk_DeleteOptionTable' type64='^?'>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_Free3DBorderFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_FreeBitmapFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_FreeColorFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(char *, Tk_OptionTable, Tk_Window)' function_pointer='true' name='tk_FreeConfigOptions' type64='^?'>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_SavedOptions *)' function_pointer='true' name='tk_FreeSavedOptions' type64='^?'>
<arg declared_type64='Tk_SavedOptions*' type64='^{Tk_SavedOptions=*^{Tk_Window_}i[20{Tk_SavedOption=^{TkOption}^{Tcl_Obj}d}]^{Tk_SavedOptions}}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_FreeCursorFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_FreeFontFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_3DBorder (*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_Get3DBorderFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tcl_Obj *, Tk_Anchor *)' function_pointer='true' name='tk_GetAnchorFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Anchor*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='XColor *(*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_GetColorFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</field>
<field declared_type64='Tk_Cursor (*)(Tk_Window, Tcl_Obj *)' function_pointer='true' name='tk_GetCursorFromObj' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tcl_Interp *, char *, Tk_OptionTable, Tcl_Obj *, Tk_Window)' function_pointer='true' name='tk_GetOptionInfo' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='Tcl_Obj *(*)(Tcl_Interp *, char *, Tk_OptionTable, Tcl_Obj *, Tk_Window)' function_pointer='true' name='tk_GetOptionValue' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tcl_Obj *, Tk_Justify *)' function_pointer='true' name='tk_GetJustifyFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Justify*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tcl_Obj *, double *)' function_pointer='true' name='tk_GetMMFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tcl_Obj *, int *)' function_pointer='true' name='tk_GetPixelsFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' function_pointer='true' name='tk_GetReliefFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, int, Tcl_Obj * *, double *, int *)' function_pointer='true' name='tk_GetScrollInfoObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, Tk_OptionTable, Tk_Window)' function_pointer='true' name='tk_InitOptions' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(int, char **, Tcl_AppInitProc *, Tcl_Interp *)' function_pointer='true' name='tk_MainEx' type64='^?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char**' type64='^*'/>
<arg declared_type64='Tcl_AppInitProc*' function_pointer='true' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_SavedOptions *)' function_pointer='true' name='tk_RestoreSavedOptions' type64='^?'>
<arg declared_type64='Tk_SavedOptions*' type64='^{Tk_SavedOptions=*^{Tk_Window_}i[20{Tk_SavedOption=^{TkOption}^{Tcl_Obj}d}]^{Tk_SavedOptions}}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, Tk_OptionTable, int, Tcl_Obj * *, Tk_Window, Tk_SavedOptions *, int *)' function_pointer='true' name='tk_SetOptions' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_SavedOptions*' type64='^{Tk_SavedOptions=*^{Tk_Window_}i[20{Tk_SavedOption=^{TkOption}^{Tcl_Obj}d}]^{Tk_SavedOptions}}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *)' function_pointer='true' name='tk_InitConsoleChannels' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *)' function_pointer='true' name='tk_CreateConsoleWindow' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_SmoothMethod *)' function_pointer='true' name='tk_CreateSmoothMethod' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_SmoothMethod*' type64='^{Tk_SmoothMethod=*^?^?}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void*' name='reserved218' type64='^v'/>
<field declared_type64='void*' name='reserved219' type64='^v'/>
<field declared_type64='int (*)(Tcl_Interp *, char *, Tk_Dash *)' function_pointer='true' name='tk_GetDash' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_Dash*' type64='^{Tk_Dash=i(?=*[8c])}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Outline *)' function_pointer='true' name='tk_CreateOutline' type64='^?'>
<arg declared_type64='Tk_Outline*' type64='^{Tk_Outline=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Display *, Tk_Outline *)' function_pointer='true' name='tk_DeleteOutline' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Tk_Outline*' type64='^{Tk_Outline=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(XGCValues *, Tk_Canvas, Tk_Item *, Tk_Outline *)' function_pointer='true' name='tk_ConfigOutlineGC' type64='^?'>
<arg declared_type64='XGCValues*' type64='^{_XGCValues=}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Tk_Outline*' type64='^{Tk_Outline=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tk_Canvas, Tk_Item *, Tk_Outline *)' function_pointer='true' name='tk_ChangeOutlineGC' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Tk_Outline*' type64='^{Tk_Outline=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tk_Canvas, Tk_Item *, Tk_Outline *)' function_pointer='true' name='tk_ResetOutlineGC' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Tk_Outline*' type64='^{Tk_Outline=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tk_Canvas, Tk_Item *, Tk_Outline *)' function_pointer='true' name='tk_CanvasPsOutline' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Tk_Outline*' type64='^{Tk_Outline=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Window, GC, int, int)' function_pointer='true' name='tk_SetTSOrigin' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Canvas, Tcl_Obj *, double *)' function_pointer='true' name='tk_CanvasGetCoordFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Canvas, GC, Tk_TSOffset *)' function_pointer='true' name='tk_CanvasSetOffset' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='Tk_TSOffset*' type64='^{Tk_TSOffset=iii}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle, int, int, int, int)' function_pointer='true' name='tk_DitherPhoto' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tk_PostscriptInfo, int, int, int, int, int)' function_pointer='true' name='tk_PostscriptBitmap' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_PostscriptInfo, XColor *)' function_pointer='true' name='tk_PostscriptColor' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_PostscriptInfo, Tk_Font)' function_pointer='true' name='tk_PostscriptFont' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tk_Image, Tcl_Interp *, Tk_Window, Tk_PostscriptInfo, int, int, int, int, int)' function_pointer='true' name='tk_PostscriptImage' type64='^?'>
<arg declared_type64='Tk_Image' type64='^{Tk_Image__=}'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_PostscriptInfo, double *, int)' function_pointer='true' name='tk_PostscriptPath' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tk_PostscriptInfo, int)' function_pointer='true' name='tk_PostscriptStipple' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='double (*)(double, Tk_PostscriptInfo)' function_pointer='true' name='tk_PostscriptY' type64='^?'>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<retval declared_type64='double' type64='d'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_PhotoImageBlock *, Tk_PostscriptInfo, int, int)' function_pointer='true' name='tk_PostscriptPhoto' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_ClientMessageProc *)' function_pointer='true' name='tk_CreateClientMessageHandler' type64='^?'>
<arg declared_type64='Tk_ClientMessageProc*' function_pointer='true' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_ClientMessageProc *)' function_pointer='true' name='tk_DeleteClientMessageHandler' type64='^?'>
<arg declared_type64='Tk_ClientMessageProc*' function_pointer='true' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_Window (*)(Tcl_Interp *, Tk_Window, char *)' function_pointer='true' name='tk_CreateAnonymousWindow' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</field>
<field declared_type64='void (*)(Tk_Window, Tk_ClassProcs *, ClientData)' function_pointer='true' name='tk_SetClassProcs' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_ClassProcs*' type64='^{Tk_ClassProcs=}'/>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int, int, int)' function_pointer='true' name='tk_SetInternalBorderEx' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int)' function_pointer='true' name='tk_SetMinimumRequestSize' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Window, int, int, int)' function_pointer='true' name='tk_SetCaretPos' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle, Tk_PhotoImageBlock *, int, int, int, int, int)' function_pointer='true' name='tk_PhotoPutBlock_Panic' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoHandle, Tk_PhotoImageBlock *, int, int, int, int, int, int, int, int, int)' function_pointer='true' name='tk_PhotoPutZoomedBlock_Panic' type64='^?'>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Display *, int)' function_pointer='true' name='tk_CollapseMotionEvents' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_StyleEngine (*)( char *, Tk_StyleEngine)' function_pointer='true' name='tk_RegisterStyleEngine' type64='^?'>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_StyleEngine' type64='^{Tk_StyleEngine_=}'/>
<retval declared_type64='Tk_StyleEngine' type64='^{Tk_StyleEngine_=}'/>
</field>
<field declared_type64='Tk_StyleEngine (*)( char *)' function_pointer='true' name='tk_GetStyleEngine' type64='^?'>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_StyleEngine' type64='^{Tk_StyleEngine_=}'/>
</field>
<field declared_type64='int (*)(Tk_StyleEngine, Tk_ElementSpec *)' function_pointer='true' name='tk_RegisterStyledElement' type64='^?'>
<arg declared_type64='Tk_StyleEngine' type64='^{Tk_StyleEngine_=}'/>
<arg declared_type64='Tk_ElementSpec*' type64='^{Tk_ElementSpec=i*^{Tk_ElementOptionSpec}^?^?^?^?}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)( char *)' function_pointer='true' name='tk_GetElementId' type64='^?'>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_Style (*)( char *, Tk_StyleEngine, ClientData)' function_pointer='true' name='tk_CreateStyle' type64='^?'>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_StyleEngine' type64='^{Tk_StyleEngine_=}'/>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
</field>
<field declared_type64='Tk_Style (*)(Tcl_Interp *, char *)' function_pointer='true' name='tk_GetStyle' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
</field>
<field declared_type64='void (*)(Tk_Style)' function_pointer='true' name='tk_FreeStyle' type64='^?'>
<arg declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field const='true' declared_type64='char *(*)(Tk_Style)' function_pointer='true' name='tk_NameOfStyle' type64='^?'>
<arg declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</field>
<field declared_type64='Tk_Style (*)(Tcl_Interp *, Tcl_Obj *)' function_pointer='true' name='tk_AllocStyleFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
</field>
<field declared_type64='Tk_Style (*)(Tcl_Obj *)' function_pointer='true' name='tk_GetStyleFromObj' type64='^?'>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
</field>
<field declared_type64='void (*)(Tcl_Obj *)' function_pointer='true' name='tk_FreeStyleFromObj' type64='^?'>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_StyledElement (*)(Tk_Style, int, Tk_OptionTable)' function_pointer='true' name='tk_GetStyledElement' type64='^?'>
<arg declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<retval declared_type64='Tk_StyledElement' type64='^{Tk_StyledElement_=}'/>
</field>
<field declared_type64='void (*)(Tk_Style, Tk_StyledElement, char *, Tk_Window, int, int, int, int *, int *)' function_pointer='true' name='tk_GetElementSize' type64='^?'>
<arg declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
<arg declared_type64='Tk_StyledElement' type64='^{Tk_StyledElement_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_Style, Tk_StyledElement, char *, Tk_Window, int, int, int, int, int, int *, int *, int *, int *)' function_pointer='true' name='tk_GetElementBox' type64='^?'>
<arg declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
<arg declared_type64='Tk_StyledElement' type64='^{Tk_StyledElement_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tk_Style, Tk_StyledElement, char *, Tk_Window)' function_pointer='true' name='tk_GetElementBorderWidth' type64='^?'>
<arg declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
<arg declared_type64='Tk_StyledElement' type64='^{Tk_StyledElement_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tk_Style, Tk_StyledElement, char *, Tk_Window, int, int, int, int, int, int)' function_pointer='true' name='tk_DrawElement' type64='^?'>
<arg declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
<arg declared_type64='Tk_StyledElement' type64='^{Tk_StyledElement_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_PhotoHandle, int, int)' function_pointer='true' name='tk_PhotoExpand' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_PhotoHandle, Tk_PhotoImageBlock *, int, int, int, int, int)' function_pointer='true' name='tk_PhotoPutBlock' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_PhotoHandle, Tk_PhotoImageBlock *, int, int, int, int, int, int, int, int, int)' function_pointer='true' name='tk_PhotoPutZoomedBlock' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_PhotoHandle, int, int)' function_pointer='true' name='tk_PhotoSetSize' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='long (*)(Display *)' function_pointer='true' name='tk_GetUserInactiveTime' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<retval declared_type64='long' type64='q'/>
</field>
<field declared_type64='void (*)(Display *)' function_pointer='true' name='tk_ResetUserInactiveTime' type64='^?'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tcl_Interp *(*)(Tk_Window)' function_pointer='true' name='tk_Interp' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
</field>
<field declared_type64='void (*)(Tk_ImageType *)' function_pointer='true' name='tk_CreateOldImageType' type64='^?'>
<arg declared_type64='Tk_ImageType*' type64='^{Tk_ImageType=*^?^?^?^?^?^?^{Tk_ImageType}*}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(Tk_PhotoImageFormat *)' function_pointer='true' name='tk_CreateOldPhotoImageFormat' type64='^?'>
<arg declared_type64='Tk_PhotoImageFormat*' type64='^{Tk_PhotoImageFormat=*^?^?^?^?^?^?^{Tk_PhotoImageFormat}}'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='TkWindow' type64='{TkWindow=}'>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<field declared_type64='int' name='screenNum' type64='i'/>
<field declared_type64='Visual*' name='visual' type64='^{_Visual=}'/>
<field declared_type64='int' name='depth' type64='i'/>
<field declared_type64='Window' name='window' type64='?'/>
<field declared_type64='struct TkWindow*' name='childList' type64='^{TkWindow=}'/>
<field declared_type64='struct TkWindow*' name='lastChildPtr' type64='^{TkWindow=}'/>
<field declared_type64='struct TkWindow*' name='parentPtr' type64='^{TkWindow=}'/>
<field declared_type64='struct TkWindow*' name='nextPtr' type64='^{TkWindow=}'/>
<field declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<field declared_type64='char*' name='pathName' type64='*'/>
<field declared_type64='Tk_Uid' name='nameUid' type64='*'/>
<field declared_type64='Tk_Uid' name='classUid' type64='*'/>
<field declared_type64='XWindowChanges' name='changes' type64='{_XWindowChanges=}'/>
<field declared_type64='unsigned int' name='dirtyChanges' type64='I'/>
<field declared_type64='XSetWindowAttributes' name='atts' type64='{_XSetWindowAttributes=}'/>
<field declared_type64='unsigned long' name='dirtyAtts' type64='Q'/>
<field declared_type64='unsigned int' name='flags' type64='I'/>
<field declared_type64='TkEventHandler*' name='handlerList' type64='^{TkEventHandler=Q^?^v^{TkEventHandler}}'/>
<field declared_type64='ClientData*' name='tagPtr' type64='^^v'/>
<field declared_type64='int' name='numTags' type64='i'/>
<field declared_type64='int' name='optionLevel' type64='i'/>
<field declared_type64='struct TkSelHandler*' name='selHandlerList' type64='^{TkSelHandler=}'/>
<field const='true' declared_type64='Tk_GeomMgr*' name='geomMgrPtr' type64='^{Tk_GeomMgr=*^?^?}'/>
<field declared_type64='ClientData' name='geomData' type64='^v'/>
<field declared_type64='int' name='reqWidth' type64='i'/>
<field declared_type64='int' name='reqHeight' type64='i'/>
<field declared_type64='int' name='internalBorderLeft' type64='i'/>
<field declared_type64='struct TkWmInfo*' name='wmInfoPtr' type64='^{TkWmInfo=}'/>
<field declared_type64='Tk_ClassProcs*' name='classProcsPtr' type64='^{Tk_ClassProcs=}'/>
<field declared_type64='ClientData' name='instanceData' type64='^v'/>
<field declared_type64='struct TkWindowPrivate*' name='privatePtr' type64='^{TkWindowPrivate=^{TkWindow}@^{CGContext}ii{CGSize=dd}^{__HIShape}^{__HIShape}^{__HIShape}i^{TkWindowPrivate}i}'/>
<field declared_type64='int' name='internalBorderRight' type64='i'/>
<field declared_type64='int' name='internalBorderTop' type64='i'/>
<field declared_type64='int' name='internalBorderBottom' type64='i'/>
<field declared_type64='int' name='minReqWidth' type64='i'/>
<field declared_type64='int' name='minReqHeight' type64='i'/>
</struct>
<struct name='TkWindowPrivate' type64='{TkWindowPrivate=&quot;winPtr&quot;^{TkWindow}&quot;view&quot;@&quot;NSView&quot;&quot;context&quot;^{CGContext}&quot;xOff&quot;i&quot;yOff&quot;i&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}&quot;visRgn&quot;^{__HIShape}&quot;aboveVisRgn&quot;^{__HIShape}&quot;drawRgn&quot;^{__HIShape}&quot;referenceCount&quot;i&quot;toplevel&quot;^{TkWindowPrivate}&quot;flags&quot;i}'>
<field declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<field declared_type64='NSView*' name='view' type64='@&quot;NSView&quot;'/>
<field declared_type64='CGContextRef' name='context' type64='^{CGContext=}'/>
<field declared_type64='int' name='xOff' type64='i'/>
<field declared_type64='int' name='yOff' type64='i'/>
<field declared_type64='CGSize' name='size' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}'/>
<field declared_type64='HIShapeRef' name='visRgn' type64='^{__HIShape=}'/>
<field declared_type64='HIShapeRef' name='aboveVisRgn' type64='^{__HIShape=}'/>
<field declared_type64='HIShapeRef' name='drawRgn' type64='^{__HIShape=}'/>
<field declared_type64='int' name='referenceCount' type64='i'/>
<field declared_type64='struct TkWindowPrivate*' name='toplevel' type64='^{TkWindowPrivate=^{TkWindow}@^{CGContext}ii{CGSize=dd}^{__HIShape}^{__HIShape}^{__HIShape}i^{TkWindowPrivate}i}'/>
<field declared_type64='int' name='flags' type64='i'/>
</struct>
<struct name='TkXLFDAttributes' type64='{TkXLFDAttributes=&quot;foundry&quot;*&quot;slant&quot;i&quot;setwidth&quot;i&quot;charset&quot;*}'>
<field declared_type64='Tk_Uid' name='foundry' type64='*'/>
<field declared_type64='int' name='slant' type64='i'/>
<field declared_type64='int' name='setwidth' type64='i'/>
<field declared_type64='Tk_Uid' name='charset' type64='*'/>
</struct>
<struct name='Tk_ArgvInfo' type64='{_Tk_ArgvInfo=&quot;key&quot;*&quot;type&quot;i&quot;src&quot;*&quot;dst&quot;*&quot;help&quot;*}'>
<field declared_type64='char*' name='key' type64='*'/>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='char*' name='src' type64='*'/>
<field declared_type64='char*' name='dst' type64='*'/>
<field declared_type64='char*' name='help' type64='*'/>
</struct>
<struct name='Tk_CanvasTextInfo' type64='{Tk_CanvasTextInfo=&quot;selBorder&quot;^{Tk_3DBorder_}&quot;selBorderWidth&quot;i&quot;selFgColorPtr&quot;^{_XColor=&quot;pixel&quot;Q&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S&quot;flags&quot;c&quot;pad&quot;c}&quot;selItemPtr&quot;^{Tk_Item=&quot;id&quot;i&quot;nextPtr&quot;^{Tk_Item}&quot;staticTagSpace&quot;[3*]&quot;tagPtr&quot;^*&quot;tagSpace&quot;i&quot;numTags&quot;i&quot;typePtr&quot;^{Tk_ItemType}&quot;x1&quot;i&quot;y1&quot;i&quot;x2&quot;i&quot;y2&quot;i&quot;prevPtr&quot;^{Tk_Item}&quot;state&quot;i&quot;reserved1&quot;*&quot;redraw_flags&quot;i}&quot;selectFirst&quot;i&quot;selectLast&quot;i&quot;anchorItemPtr&quot;^{Tk_Item=&quot;id&quot;i&quot;nextPtr&quot;^{Tk_Item}&quot;staticTagSpace&quot;[3*]&quot;tagPtr&quot;^*&quot;tagSpace&quot;i&quot;numTags&quot;i&quot;typePtr&quot;^{Tk_ItemType}&quot;x1&quot;i&quot;y1&quot;i&quot;x2&quot;i&quot;y2&quot;i&quot;prevPtr&quot;^{Tk_Item}&quot;state&quot;i&quot;reserved1&quot;*&quot;redraw_flags&quot;i}&quot;selectAnchor&quot;i&quot;insertBorder&quot;^{Tk_3DBorder_}&quot;insertWidth&quot;i&quot;insertBorderWidth&quot;i&quot;focusItemPtr&quot;^{Tk_Item=&quot;id&quot;i&quot;nextPtr&quot;^{Tk_Item}&quot;staticTagSpace&quot;[3*]&quot;tagPtr&quot;^*&quot;tagSpace&quot;i&quot;numTags&quot;i&quot;typePtr&quot;^{Tk_ItemType}&quot;x1&quot;i&quot;y1&quot;i&quot;x2&quot;i&quot;y2&quot;i&quot;prevPtr&quot;^{Tk_Item}&quot;state&quot;i&quot;reserved1&quot;*&quot;redraw_flags&quot;i}&quot;gotFocus&quot;i&quot;cursorOn&quot;i}'>
<field declared_type64='Tk_3DBorder' name='selBorder' type64='^{Tk_3DBorder_=}'/>
<field declared_type64='int' name='selBorderWidth' type64='i'/>
<field declared_type64='XColor*' name='selFgColorPtr' type64='^{_XColor=&quot;pixel&quot;Q&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S&quot;flags&quot;c&quot;pad&quot;c}'/>
<field declared_type64='Tk_Item*' name='selItemPtr' type64='^{Tk_Item=&quot;id&quot;i&quot;nextPtr&quot;^{Tk_Item}&quot;staticTagSpace&quot;[3*]&quot;tagPtr&quot;^*&quot;tagSpace&quot;i&quot;numTags&quot;i&quot;typePtr&quot;^{Tk_ItemType}&quot;x1&quot;i&quot;y1&quot;i&quot;x2&quot;i&quot;y2&quot;i&quot;prevPtr&quot;^{Tk_Item}&quot;state&quot;i&quot;reserved1&quot;*&quot;redraw_flags&quot;i}'/>
<field declared_type64='int' name='selectFirst' type64='i'/>
<field declared_type64='int' name='selectLast' type64='i'/>
<field declared_type64='Tk_Item*' name='anchorItemPtr' type64='^{Tk_Item=&quot;id&quot;i&quot;nextPtr&quot;^{Tk_Item}&quot;staticTagSpace&quot;[3*]&quot;tagPtr&quot;^*&quot;tagSpace&quot;i&quot;numTags&quot;i&quot;typePtr&quot;^{Tk_ItemType}&quot;x1&quot;i&quot;y1&quot;i&quot;x2&quot;i&quot;y2&quot;i&quot;prevPtr&quot;^{Tk_Item}&quot;state&quot;i&quot;reserved1&quot;*&quot;redraw_flags&quot;i}'/>
<field declared_type64='int' name='selectAnchor' type64='i'/>
<field declared_type64='Tk_3DBorder' name='insertBorder' type64='^{Tk_3DBorder_=}'/>
<field declared_type64='int' name='insertWidth' type64='i'/>
<field declared_type64='int' name='insertBorderWidth' type64='i'/>
<field declared_type64='Tk_Item*' name='focusItemPtr' type64='^{Tk_Item=&quot;id&quot;i&quot;nextPtr&quot;^{Tk_Item}&quot;staticTagSpace&quot;[3*]&quot;tagPtr&quot;^*&quot;tagSpace&quot;i&quot;numTags&quot;i&quot;typePtr&quot;^{Tk_ItemType}&quot;x1&quot;i&quot;y1&quot;i&quot;x2&quot;i&quot;y2&quot;i&quot;prevPtr&quot;^{Tk_Item}&quot;state&quot;i&quot;reserved1&quot;*&quot;redraw_flags&quot;i}'/>
<field declared_type64='int' name='gotFocus' type64='i'/>
<field declared_type64='int' name='cursorOn' type64='i'/>
</struct>
<struct name='Tk_ClassProcs' type64='{Tk_ClassProcs=}'>
<field declared_type64='unsigned int' name='size' type64='I'/>
<field declared_type64='Tk_ClassWorldChangedProc*' function_pointer='true' name='worldChangedProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int*' name='createProc' type64='^i'/>
<field declared_type64='Tk_ClassModalProc*' function_pointer='true' name='modalProc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='Tk_ConfigSpec' type64='{Tk_ConfigSpec=&quot;type&quot;i&quot;argvName&quot;*&quot;dbName&quot;*&quot;dbClass&quot;*&quot;defValue&quot;*&quot;offset&quot;i&quot;specFlags&quot;i&quot;customPtr&quot;^{Tk_CustomOption}}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='char*' name='argvName' type64='*'/>
<field declared_type64='Tk_Uid' name='dbName' type64='*'/>
<field declared_type64='Tk_Uid' name='dbClass' type64='*'/>
<field declared_type64='Tk_Uid' name='defValue' type64='*'/>
<field declared_type64='int' name='offset' type64='i'/>
<field declared_type64='int' name='specFlags' type64='i'/>
<field declared_type64='Tk_CustomOption*' name='customPtr' type64='^{Tk_CustomOption=^?^?^v}'/>
</struct>
<struct name='Tk_CustomOption' type64='{Tk_CustomOption=&quot;parseProc&quot;^?&quot;printProc&quot;^?&quot;clientData&quot;^v}'>
<field declared_type64='Tk_OptionParseProc*' function_pointer='true' name='parseProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_OptionPrintProc*' function_pointer='true' name='printProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</field>
<field declared_type64='ClientData' name='clientData' type64='^v'/>
</struct>
<struct name='Tk_Dash' type64='{Tk_Dash=&quot;number&quot;i&quot;pattern&quot;(?=&quot;pt&quot;*&quot;array&quot;[8c])}'>
<field declared_type64='int' name='number' type64='i'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/tk.h:1136:5)' name='pattern' type64='(?=&quot;pt&quot;*&quot;array&quot;[8c])'/>
</struct>
<struct name='Tk_ElementOptionSpec' type64='{Tk_ElementOptionSpec=&quot;name&quot;*&quot;type&quot;i}'>
<field declared_type64='char*' name='name' type64='*'/>
<field declared_type64='Tk_OptionType' name='type' type64='i'/>
</struct>
<struct name='Tk_ElementSpec' type64='{Tk_ElementSpec=&quot;version&quot;i&quot;name&quot;*&quot;options&quot;^{Tk_ElementOptionSpec}&quot;getSize&quot;^?&quot;getBox&quot;^?&quot;getBorderWidth&quot;^?&quot;draw&quot;^?}'>
<field declared_type64='int' name='version' type64='i'/>
<field declared_type64='char*' name='name' type64='*'/>
<field declared_type64='Tk_ElementOptionSpec*' name='options' type64='^{Tk_ElementOptionSpec=*i}'/>
<field declared_type64='Tk_GetElementSizeProc*' function_pointer='true' name='getSize' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='Tk_OptionSpec**' type64='^^{Tk_OptionSpec}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_GetElementBoxProc*' function_pointer='true' name='getBox' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='Tk_OptionSpec**' type64='^^{Tk_OptionSpec}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_GetElementBorderWidthProc*' function_pointer='true' name='getBorderWidth' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='Tk_OptionSpec**' type64='^^{Tk_OptionSpec}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_DrawElementProc*' function_pointer='true' name='draw' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='Tk_OptionSpec**' type64='^^{Tk_OptionSpec}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='Tk_FakeWin' type64='{Tk_FakeWin=}'>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='char*' name='dummy1' type64='*'/>
<field declared_type64='int' name='screenNum' type64='i'/>
<field declared_type64='Visual*' name='visual' type64='^{_Visual=}'/>
<field declared_type64='int' name='depth' type64='i'/>
<field declared_type64='Window' name='window' type64='?'/>
<field declared_type64='char*' name='dummy2' type64='*'/>
<field declared_type64='char*' name='dummy3' type64='*'/>
<field declared_type64='Tk_Window' name='parentPtr' type64='^{Tk_Window_=}'/>
<field declared_type64='char*' name='dummy4' type64='*'/>
<field declared_type64='char*' name='dummy5' type64='*'/>
<field declared_type64='char*' name='pathName' type64='*'/>
<field declared_type64='Tk_Uid' name='nameUid' type64='*'/>
<field declared_type64='Tk_Uid' name='classUid' type64='*'/>
<field declared_type64='XWindowChanges' name='changes' type64='{_XWindowChanges=}'/>
<field declared_type64='unsigned int' name='dummy6' type64='I'/>
<field declared_type64='XSetWindowAttributes' name='atts' type64='{_XSetWindowAttributes=}'/>
<field declared_type64='unsigned long' name='dummy7' type64='Q'/>
<field declared_type64='unsigned int' name='flags' type64='I'/>
<field declared_type64='char*' name='dummy8' type64='*'/>
<field declared_type64='ClientData*' name='dummy10' type64='^^v'/>
<field declared_type64='int' name='dummy11' type64='i'/>
<field declared_type64='int' name='dummy12' type64='i'/>
<field declared_type64='char*' name='dummy13' type64='*'/>
<field declared_type64='char*' name='dummy14' type64='*'/>
<field declared_type64='ClientData' name='dummy15' type64='^v'/>
<field declared_type64='int' name='reqWidth' type64='i'/>
<field declared_type64='int' name='reqHeight' type64='i'/>
<field declared_type64='int' name='internalBorderLeft' type64='i'/>
<field declared_type64='char*' name='dummy16' type64='*'/>
<field declared_type64='char*' name='dummy17' type64='*'/>
<field declared_type64='ClientData' name='dummy18' type64='^v'/>
<field declared_type64='char*' name='dummy19' type64='*'/>
<field declared_type64='int' name='internalBorderRight' type64='i'/>
<field declared_type64='int' name='internalBorderTop' type64='i'/>
<field declared_type64='int' name='internalBorderBottom' type64='i'/>
<field declared_type64='int' name='minReqWidth' type64='i'/>
<field declared_type64='int' name='minReqHeight' type64='i'/>
</struct>
<struct name='Tk_FontMetrics' type64='{Tk_FontMetrics=&quot;ascent&quot;i&quot;descent&quot;i&quot;linespace&quot;i}'>
<field declared_type64='int' name='ascent' type64='i'/>
<field declared_type64='int' name='descent' type64='i'/>
<field declared_type64='int' name='linespace' type64='i'/>
</struct>
<struct name='Tk_GeomMgr' type64='{Tk_GeomMgr=&quot;name&quot;*&quot;requestProc&quot;^?&quot;lostSlaveProc&quot;^?}'>
<field const='true' declared_type64='char*' name='name' type64='*'/>
<field declared_type64='Tk_GeomRequestProc*' function_pointer='true' name='requestProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_GeomLostSlaveProc*' function_pointer='true' name='lostSlaveProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='Tk_ImageType' type64='{Tk_ImageType=&quot;name&quot;*&quot;createProc&quot;^?&quot;getProc&quot;^?&quot;displayProc&quot;^?&quot;freeProc&quot;^?&quot;deleteProc&quot;^?&quot;postscriptProc&quot;^?&quot;nextPtr&quot;^{Tk_ImageType}&quot;reserved&quot;*}'>
<field declared_type64='char*' name='name' type64='*'/>
<field declared_type64='Tk_ImageCreateProc*' function_pointer='true' name='createProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<arg declared_type64='Tk_ImageType*' type64='^{Tk_ImageType=*^?^?^?^?^?^?^{Tk_ImageType}*}'/>
<arg declared_type64='Tk_ImageMaster' type64='^{Tk_ImageMaster_=}'/>
<arg declared_type64='ClientData*' type64='^^v'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ImageGetProc*' function_pointer='true' name='getProc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='ClientData' type64='^v'/>
</field>
<field declared_type64='Tk_ImageDisplayProc*' function_pointer='true' name='displayProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_ImageFreeProc*' function_pointer='true' name='freeProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_ImageDeleteProc*' function_pointer='true' name='deleteProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_ImagePostscriptProc*' function_pointer='true' name='postscriptProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='struct Tk_ImageType*' name='nextPtr' type64='^{Tk_ImageType=*^?^?^?^?^?^?^{Tk_ImageType}*}'/>
<field declared_type64='char*' name='reserved' type64='*'/>
</struct>
<struct name='Tk_Item' type64='{Tk_Item=&quot;id&quot;i&quot;nextPtr&quot;^{Tk_Item}&quot;staticTagSpace&quot;[3*]&quot;tagPtr&quot;^*&quot;tagSpace&quot;i&quot;numTags&quot;i&quot;typePtr&quot;^{Tk_ItemType}&quot;x1&quot;i&quot;y1&quot;i&quot;x2&quot;i&quot;y2&quot;i&quot;prevPtr&quot;^{Tk_Item}&quot;state&quot;i&quot;reserved1&quot;*&quot;redraw_flags&quot;i}'>
<field declared_type64='int' name='id' type64='i'/>
<field declared_type64='struct Tk_Item*' name='nextPtr' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<field declared_type64='Tk_Uid*' name='staticTagSpace' type64='[3*]'/>
<field declared_type64='Tk_Uid*' name='tagPtr' type64='^*'/>
<field declared_type64='int' name='tagSpace' type64='i'/>
<field declared_type64='int' name='numTags' type64='i'/>
<field declared_type64='struct Tk_ItemType*' name='typePtr' type64='^{Tk_ItemType=*i^?^{Tk_ConfigSpec}^?^?^?^?i^?^?^?^?^?^?^?^?^?^?^{Tk_ItemType}*i**}'/>
<field declared_type64='int' name='x1' type64='i'/>
<field declared_type64='int' name='y1' type64='i'/>
<field declared_type64='int' name='x2' type64='i'/>
<field declared_type64='int' name='y2' type64='i'/>
<field declared_type64='struct Tk_Item*' name='prevPtr' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<field declared_type64='Tk_State' name='state' type64='i'/>
<field declared_type64='char*' name='reserved1' type64='*'/>
<field declared_type64='int' name='redraw_flags' type64='i'/>
</struct>
<struct name='Tk_ItemType' type64='{Tk_ItemType=&quot;name&quot;*&quot;itemSize&quot;i&quot;createProc&quot;^?&quot;configSpecs&quot;^{Tk_ConfigSpec}&quot;configProc&quot;^?&quot;coordProc&quot;^?&quot;deleteProc&quot;^?&quot;displayProc&quot;^?&quot;alwaysRedraw&quot;i&quot;pointProc&quot;^?&quot;areaProc&quot;^?&quot;postscriptProc&quot;^?&quot;scaleProc&quot;^?&quot;translateProc&quot;^?&quot;indexProc&quot;^?&quot;icursorProc&quot;^?&quot;selectionProc&quot;^?&quot;insertProc&quot;^?&quot;dCharsProc&quot;^?&quot;nextPtr&quot;^{Tk_ItemType}&quot;reserved1&quot;*&quot;reserved2&quot;i&quot;reserved3&quot;*&quot;reserved4&quot;*}'>
<field declared_type64='char*' name='name' type64='*'/>
<field declared_type64='int' name='itemSize' type64='i'/>
<field declared_type64='Tk_ItemCreateProc*' function_pointer='true' name='createProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ConfigSpec*' name='configSpecs' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<field declared_type64='Tk_ItemConfigureProc*' function_pointer='true' name='configProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ItemCoordProc*' function_pointer='true' name='coordProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ItemDeleteProc*' function_pointer='true' name='deleteProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_ItemDisplayProc*' function_pointer='true' name='displayProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int' name='alwaysRedraw' type64='i'/>
<field declared_type64='Tk_ItemPointProc*' function_pointer='true' name='pointProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</field>
<field declared_type64='Tk_ItemAreaProc*' function_pointer='true' name='areaProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ItemPostscriptProc*' function_pointer='true' name='postscriptProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ItemScaleProc*' function_pointer='true' name='scaleProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='double' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_ItemTranslateProc*' function_pointer='true' name='translateProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='double' type64='d'/>
<arg declared_type64='double' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_ItemIndexProc*' function_pointer='true' name='indexProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ItemCursorProc*' function_pointer='true' name='icursorProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_ItemSelectionProc*' function_pointer='true' name='selectionProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ItemInsertProc*' function_pointer='true' name='insertProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_ItemDCharsProc*' function_pointer='true' name='dCharsProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='struct Tk_ItemType*' name='nextPtr' type64='^{Tk_ItemType=*i^?^{Tk_ConfigSpec}^?^?^?^?i^?^?^?^?^?^?^?^?^?^?^{Tk_ItemType}*i**}'/>
<field declared_type64='char*' name='reserved1' type64='*'/>
<field declared_type64='int' name='reserved2' type64='i'/>
<field declared_type64='char*' name='reserved3' type64='*'/>
<field declared_type64='char*' name='reserved4' type64='*'/>
</struct>
<struct name='Tk_ObjCustomOption' type64='{Tk_ObjCustomOption=&quot;name&quot;*&quot;setProc&quot;^?&quot;getProc&quot;^?&quot;restoreProc&quot;^?&quot;freeProc&quot;^?&quot;clientData&quot;^v}'>
<field const='true' declared_type64='char*' name='name' type64='*'/>
<field declared_type64='Tk_CustomOptionSetProc*' function_pointer='true' name='setProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj**' type64='^^{Tcl_Obj}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_CustomOptionGetProc*' function_pointer='true' name='getProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='Tk_CustomOptionRestoreProc*' function_pointer='true' name='restoreProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Tk_CustomOptionFreeProc*' function_pointer='true' name='freeProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='ClientData' name='clientData' type64='^v'/>
</struct>
<struct name='Tk_OptionSpec' type64='{Tk_OptionSpec=&quot;type&quot;i&quot;optionName&quot;*&quot;dbName&quot;*&quot;dbClass&quot;*&quot;defValue&quot;*&quot;objOffset&quot;i&quot;internalOffset&quot;i&quot;flags&quot;i&quot;clientData&quot;^v&quot;typeMask&quot;i}'>
<field declared_type64='Tk_OptionType' name='type' type64='i'/>
<field const='true' declared_type64='char*' name='optionName' type64='*'/>
<field const='true' declared_type64='char*' name='dbName' type64='*'/>
<field const='true' declared_type64='char*' name='dbClass' type64='*'/>
<field const='true' declared_type64='char*' name='defValue' type64='*'/>
<field declared_type64='int' name='objOffset' type64='i'/>
<field declared_type64='int' name='internalOffset' type64='i'/>
<field declared_type64='int' name='flags' type64='i'/>
<field declared_type64='ClientData' name='clientData' type64='^v'/>
<field declared_type64='int' name='typeMask' type64='i'/>
</struct>
<struct name='Tk_Outline' type64='{Tk_Outline=}'>
<field declared_type64='GC' name='gc' type64='^{_GC=}'/>
<field declared_type64='double' name='width' type64='d'/>
<field declared_type64='double' name='activeWidth' type64='d'/>
<field declared_type64='double' name='disabledWidth' type64='d'/>
<field declared_type64='int' name='offset' type64='i'/>
<field declared_type64='Tk_Dash' name='dash' type64='{Tk_Dash=&quot;number&quot;i&quot;pattern&quot;(?=&quot;pt&quot;*&quot;array&quot;[8c])}'/>
<field declared_type64='Tk_Dash' name='activeDash' type64='{Tk_Dash=&quot;number&quot;i&quot;pattern&quot;(?=&quot;pt&quot;*&quot;array&quot;[8c])}'/>
<field declared_type64='Tk_Dash' name='disabledDash' type64='{Tk_Dash=&quot;number&quot;i&quot;pattern&quot;(?=&quot;pt&quot;*&quot;array&quot;[8c])}'/>
<field declared_type64='void*' name='reserved1' type64='^v'/>
<field declared_type64='void*' name='reserved2' type64='^v'/>
<field declared_type64='void*' name='reserved3' type64='^v'/>
<field declared_type64='Tk_TSOffset' name='tsoffset' type64='{Tk_TSOffset=&quot;flags&quot;i&quot;xoffset&quot;i&quot;yoffset&quot;i}'/>
<field declared_type64='XColor*' name='color' type64='^{_XColor=QSSScc}'/>
<field declared_type64='XColor*' name='activeColor' type64='^{_XColor=QSSScc}'/>
<field declared_type64='XColor*' name='disabledColor' type64='^{_XColor=QSSScc}'/>
<field declared_type64='int' name='stipple' type64='i'/>
<field declared_type64='int' name='activeStipple' type64='i'/>
<field declared_type64='int' name='disabledStipple' type64='i'/>
</struct>
<struct name='Tk_PhotoImageBlock' type64='{Tk_PhotoImageBlock=&quot;pixelPtr&quot;*&quot;width&quot;i&quot;height&quot;i&quot;pitch&quot;i&quot;pixelSize&quot;i&quot;offset&quot;[4i]}'>
<field declared_type64='unsigned char*' name='pixelPtr' type64='*'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='pitch' type64='i'/>
<field declared_type64='int' name='pixelSize' type64='i'/>
<field declared_type64='int*' name='offset' type64='[4i]'/>
</struct>
<struct name='Tk_PhotoImageFormat' type64='{Tk_PhotoImageFormat=&quot;name&quot;*&quot;fileMatchProc&quot;^?&quot;stringMatchProc&quot;^?&quot;fileReadProc&quot;^?&quot;stringReadProc&quot;^?&quot;fileWriteProc&quot;^?&quot;stringWriteProc&quot;^?&quot;nextPtr&quot;^{Tk_PhotoImageFormat}}'>
<field declared_type64='char*' name='name' type64='*'/>
<field declared_type64='Tk_ImageFileMatchProc*' function_pointer='true' name='fileMatchProc' type64='^?'>
<arg declared_type64='Tcl_Channel' type64='^{Tcl_Channel_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ImageStringMatchProc*' function_pointer='true' name='stringMatchProc' type64='^?'>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ImageFileReadProc*' function_pointer='true' name='fileReadProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Channel' type64='^{Tcl_Channel_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ImageStringReadProc*' function_pointer='true' name='stringReadProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_PhotoHandle' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ImageFileWriteProc*' function_pointer='true' name='fileWriteProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tk_ImageStringWriteProc*' function_pointer='true' name='stringWriteProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_PhotoImageBlock*' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='struct Tk_PhotoImageFormat*' name='nextPtr' type64='^{Tk_PhotoImageFormat=*^?^?^?^?^?^?^{Tk_PhotoImageFormat}}'/>
</struct>
<struct name='Tk_SavedOption' type64='{Tk_SavedOption=&quot;optionPtr&quot;^{TkOption}&quot;valuePtr&quot;^{Tcl_Obj}&quot;internalForm&quot;d}'>
<field declared_type64='struct TkOption*' name='optionPtr' type64='^{TkOption=}'/>
<field declared_type64='Tcl_Obj*' name='valuePtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<field declared_type64='double' name='internalForm' type64='d'/>
</struct>
<struct name='Tk_SavedOptions' type64='{Tk_SavedOptions=&quot;recordPtr&quot;*&quot;tkwin&quot;^{Tk_Window_}&quot;numItems&quot;i&quot;items&quot;[20{Tk_SavedOption=&quot;optionPtr&quot;^{TkOption}&quot;valuePtr&quot;^{Tcl_Obj}&quot;internalForm&quot;d}]&quot;nextPtr&quot;^{Tk_SavedOptions}}'>
<field declared_type64='char*' name='recordPtr' type64='*'/>
<field declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<field declared_type64='int' name='numItems' type64='i'/>
<field declared_type64='Tk_SavedOption*' name='items' type64='[20{Tk_SavedOption=&quot;optionPtr&quot;^{TkOption}&quot;valuePtr&quot;^{Tcl_Obj}&quot;internalForm&quot;d}]'/>
<field declared_type64='struct Tk_SavedOptions*' name='nextPtr' type64='^{Tk_SavedOptions=*^{Tk_Window_}i[20{Tk_SavedOption=^{TkOption}^{Tcl_Obj}d}]^{Tk_SavedOptions}}'/>
</struct>
<struct name='Tk_SmoothMethod' type64='{Tk_SmoothMethod=&quot;name&quot;*&quot;coordProc&quot;^?&quot;postscriptProc&quot;^?}'>
<field declared_type64='char*' name='name' type64='*'/>
<field declared_type64='int (*)(Tk_Canvas, double *, int, int, XPoint *, double *)' function_pointer='true' name='coordProc' type64='^?'>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XPoint*' type64='^{_XPoint=ss}'/>
<arg declared_type64='double*' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(Tcl_Interp *, Tk_Canvas, double *, int, int)' function_pointer='true' name='postscriptProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' type64='^d'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='Tk_TSOffset' type64='{Tk_TSOffset=&quot;flags&quot;i&quot;xoffset&quot;i&quot;yoffset&quot;i}'>
<field declared_type64='int' name='flags' type64='i'/>
<field declared_type64='int' name='xoffset' type64='i'/>
<field declared_type64='int' name='yoffset' type64='i'/>
</struct>
<struct name='TkpClipMask' type64='{TkpClipMask=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/tk-private/tkInt.h:889:5)' name='value' type64='(?=&quot;pixmap&quot;i&quot;region&quot;^{TkRegion_})'/>
</struct>
<struct name='TkpGCCache' type64='{_TkpGCCache=&quot;cachedForeground&quot;Q&quot;cachedForegroundColor&quot;^{CGColor}&quot;cachedBackground&quot;Q&quot;cachedBackgroundColor&quot;^{CGColor}}'>
<field declared_type64='unsigned long' name='cachedForeground' type64='Q'/>
<field declared_type64='CGColorRef' name='cachedForegroundColor' type64='^{CGColor=}'/>
<field declared_type64='unsigned long' name='cachedBackground' type64='Q'/>
<field declared_type64='CGColorRef' name='cachedBackgroundColor' type64='^{CGColor=}'/>
</struct>
<struct name='TtkEnsemble' type64='{TtkEnsemble=&quot;name&quot;*&quot;command&quot;^?&quot;ensemble&quot;^{TtkEnsemble}}'>
<field const='true' declared_type64='char*' name='name' type64='*'/>
<field declared_type64='Tcl_ObjCmdProc*' function_pointer='true' name='command' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='struct Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field const='true' declared_type64='struct TtkEnsemble*' name='ensemble' type64='^{TtkEnsemble=*^?^{TtkEnsemble}}'/>
</struct>
<struct name='TtkStubs' type64='{TtkStubs=}'>
<field declared_type64='int' name='magic' type64='i'/>
<field declared_type64='int' name='epoch' type64='i'/>
<field declared_type64='int' name='revision' type64='i'/>
<field const='true' declared_type64='struct TtkStubHooks*' name='hooks' type64='^{TtkStubHooks=}'/>
<field declared_type64='int (int *)' name='Ttk_Theme' type64='?'/>
<field declared_type64='void (*)(Tcl_Interp *, void *, int *)' function_pointer='true' name='ttk_RegisterCleanup' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(int, char *, int *, void *)' function_pointer='true' name='ttk_RegisterElementSpec' type64='^?'>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int *(*)(Tcl_Interp *, int, char *, int *, void *)' function_pointer='true' name='ttk_RegisterElement' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='int*' type64='^i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, char *, int, void *)' function_pointer='true' name='ttk_RegisterElementFactory' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(int, char *, int)' function_pointer='true' name='ttk_RegisterLayout' type64='^?'>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved9' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' function_pointer='true' name='ttk_GetStateSpecFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tcl_Obj *(*)(unsigned int, unsigned int)' function_pointer='true' name='ttk_NewStateSpecObj' type64='^?'>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='unsigned int' type64='I'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='int (int *)' name='Ttk_StateMap' type64='?'/>
<field declared_type64='Tcl_Obj *(*)(Tcl_Interp *, int, int)' function_pointer='true' name='ttk_StateMapLookup' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='int (*)(int *, int)' function_pointer='true' name='ttk_StateTableLookup' type64='^?'>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved15' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved16' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved17' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved18' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved19' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tk_Window, Tcl_Obj *, int *)' function_pointer='true' name='ttk_GetPaddingFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' function_pointer='true' name='ttk_GetBorderFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' function_pointer='true' name='ttk_GetStickyFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='int (int *)' name='Ttk_Padding' type64='?'/>
<field declared_type64='int (int *)' name='Ttk_Box' type64='?'/>
<field declared_type64='int (*)(int, int, int)' function_pointer='true' name='ttk_BoxContains' type64='^?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='Tcl_Obj *(*)(int)' function_pointer='true' name='ttk_NewBoxObj' type64='^?'>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved36' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved37' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved38' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(void)' function_pointer='true' name='reserved39' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='int (*)(Tcl_Interp *, Tcl_Obj *, int *)' function_pointer='true' name='ttk_GetOrientFromObj' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</field>
</struct>
<struct name='Ttk_Box' type64='{_Ttk_Box=&quot;x&quot;i&quot;y&quot;i&quot;width&quot;i&quot;height&quot;i}'>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
</struct>
<struct name='Ttk_ElementOptionSpec' type64='{Ttk_ElementOptionSpec=&quot;optionName&quot;*&quot;type&quot;i&quot;offset&quot;i&quot;defaultValue&quot;*}'>
<field const='true' declared_type64='char*' name='optionName' type64='*'/>
<field declared_type64='Tk_OptionType' name='type' type64='i'/>
<field declared_type64='int' name='offset' type64='i'/>
<field const='true' declared_type64='char*' name='defaultValue' type64='*'/>
</struct>
<struct name='Ttk_ElementSpec' type64='{Ttk_ElementSpec=&quot;version&quot;i&quot;elementSize&quot;Q&quot;options&quot;^{Ttk_ElementOptionSpec}&quot;size&quot;^?&quot;draw&quot;^?}'>
<field declared_type64='enum TTKStyleVersion2' name='version' type64='i'/>
<field declared_type64='size_t' name='elementSize' type64='Q'/>
<field declared_type64='Ttk_ElementOptionSpec*' name='options' type64='^{Ttk_ElementOptionSpec=*ii*}'/>
<field declared_type64='Ttk_ElementSizeProc*' function_pointer='true' name='size' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='Ttk_ElementDrawProc*' function_pointer='true' name='draw' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Ttk_State' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='Ttk_Ensemble' type64='{TtkEnsemble=&quot;name&quot;*&quot;command&quot;^?&quot;ensemble&quot;^{TtkEnsemble}}'>
<field const='true' declared_type64='char*' name='name' type64='*'/>
<field declared_type64='Tcl_ObjCmdProc*' function_pointer='true' name='command' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='struct Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</field>
<field const='true' declared_type64='struct TtkEnsemble*' name='ensemble' type64='^{TtkEnsemble=*^?^{TtkEnsemble}}'/>
</struct>
<struct name='Ttk_LayoutSpec' type64='{_Ttk_LayoutSpec=&quot;elementName&quot;*&quot;opcode&quot;I}'>
<field const='true' declared_type64='char*' name='elementName' type64='*'/>
<field declared_type64='unsigned int' name='opcode' type64='I'/>
</struct>
<struct name='Ttk_Padding' type64='{_Ttk_Padding=&quot;left&quot;s&quot;top&quot;s&quot;right&quot;s&quot;bottom&quot;s}'>
<field declared_type64='short' name='left' type64='s'/>
<field declared_type64='short' name='top' type64='s'/>
<field declared_type64='short' name='right' type64='s'/>
<field declared_type64='short' name='bottom' type64='s'/>
</struct>
<struct name='Ttk_StateSpec' type64='{_Ttk_StateSpec=&quot;onbits&quot;I&quot;offbits&quot;I}'>
<field declared_type64='unsigned int' name='onbits' type64='I'/>
<field declared_type64='unsigned int' name='offbits' type64='I'/>
</struct>
<struct name='Ttk_StateTable' type64='{_Ttk_StateTable=&quot;index&quot;i&quot;onBits&quot;I&quot;offBits&quot;I}'>
<field declared_type64='int' name='index' type64='i'/>
<field declared_type64='unsigned int' name='onBits' type64='I'/>
<field declared_type64='unsigned int' name='offBits' type64='I'/>
</struct>
<struct name='Visual' type64='{_Visual=}'>
<field declared_type64='XExtData*' name='ext_data' type64='^{_XExtData=i^{_XExtData}^?*}'/>
<field declared_type64='int' name='visualid' type64='i'/>
<field declared_type64='int' name='class' type64='i'/>
<field declared_type64='unsigned long' name='red_mask' type64='Q'/>
<field declared_type64='unsigned long' name='green_mask' type64='Q'/>
<field declared_type64='unsigned long' name='blue_mask' type64='Q'/>
<field declared_type64='int' name='bits_per_rgb' type64='i'/>
<field declared_type64='int' name='map_entries' type64='i'/>
</struct>
<struct name='XActivateDeactivateEvent' type64='{_XActivateDeactivateEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='Window' name='window' type64='?'/>
</struct>
<struct name='XActivateEvent' type64='{_XActivateEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='Window' name='window' type64='?'/>
</struct>
<struct name='XAnyEvent' type64='{_XAnyEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
</struct>
<struct name='XArc' type64='{_XArc=&quot;x&quot;s&quot;y&quot;s&quot;width&quot;S&quot;height&quot;S&quot;angle1&quot;s&quot;angle2&quot;s}'>
<field declared_type64='short' name='x' type64='s'/>
<field declared_type64='short' name='y' type64='s'/>
<field declared_type64='unsigned short' name='width' type64='S'/>
<field declared_type64='unsigned short' name='height' type64='S'/>
<field declared_type64='short' name='angle1' type64='s'/>
<field declared_type64='short' name='angle2' type64='s'/>
</struct>
<struct name='XButtonEvent' type64='{_XButtonEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='unsigned int' name='button' type64='I'/>
<field declared_type64='int' name='same_screen' type64='i'/>
</struct>
<struct name='XButtonPressedEvent' type64='{_XButtonPressedEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='unsigned int' name='button' type64='I'/>
<field declared_type64='int' name='same_screen' type64='i'/>
</struct>
<struct name='XButtonReleasedEvent' type64='{_XButtonReleasedEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='unsigned int' name='button' type64='I'/>
<field declared_type64='int' name='same_screen' type64='i'/>
</struct>
<struct name='XChar2b' type64='{_XChar2b=&quot;byte1&quot;C&quot;byte2&quot;C}'>
<field declared_type64='unsigned char' name='byte1' type64='C'/>
<field declared_type64='unsigned char' name='byte2' type64='C'/>
</struct>
<struct name='XCharStruct' type64='{_XCharStruct=&quot;lbearing&quot;s&quot;rbearing&quot;s&quot;width&quot;s&quot;ascent&quot;s&quot;descent&quot;s&quot;attributes&quot;S}'>
<field declared_type64='short' name='lbearing' type64='s'/>
<field declared_type64='short' name='rbearing' type64='s'/>
<field declared_type64='short' name='width' type64='s'/>
<field declared_type64='short' name='ascent' type64='s'/>
<field declared_type64='short' name='descent' type64='s'/>
<field declared_type64='unsigned short' name='attributes' type64='S'/>
</struct>
<struct name='XCirculateEvent' type64='{_XCirculateEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='event' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='place' type64='i'/>
</struct>
<struct name='XCirculateRequestEvent' type64='{_XCirculateRequestEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='parent' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='place' type64='i'/>
</struct>
<struct name='XClassHint' type64='{_XClassHint=&quot;res_name&quot;*&quot;res_class&quot;*}'>
<field declared_type64='char*' name='res_name' type64='*'/>
<field declared_type64='char*' name='res_class' type64='*'/>
</struct>
<struct name='XClientMessageEvent' type64='{_XClientMessageEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='message_type' type64='i'/>
<field declared_type64='int' name='format' type64='i'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/X11/Xlib.h:885:2)' name='data' type64='(?=&quot;b&quot;[20c]&quot;s&quot;[10s]&quot;l&quot;[5q])'/>
</struct>
<struct name='XColor' type64='{_XColor=&quot;pixel&quot;Q&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S&quot;flags&quot;c&quot;pad&quot;c}'>
<field declared_type64='unsigned long' name='pixel' type64='Q'/>
<field declared_type64='unsigned short' name='red' type64='S'/>
<field declared_type64='unsigned short' name='green' type64='S'/>
<field declared_type64='unsigned short' name='blue' type64='S'/>
<field declared_type64='char' name='flags' type64='c'/>
<field declared_type64='char' name='pad' type64='c'/>
</struct>
<struct name='XColormapEvent' type64='{_XColormapEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='colormap' type64='i'/>
<field declared_type64='int' name='new' type64='i'/>
<field declared_type64='int' name='state' type64='i'/>
</struct>
<struct name='XComposeStatus' type64='{_XComposeStatus=&quot;compose_ptr&quot;*&quot;chars_matched&quot;i}'>
<field declared_type64='XPointer' name='compose_ptr' type64='*'/>
<field declared_type64='int' name='chars_matched' type64='i'/>
</struct>
<struct name='XConfigureEvent' type64='{_XConfigureEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='event' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='border_width' type64='i'/>
<field declared_type64='int' name='above' type64='i'/>
<field declared_type64='int' name='override_redirect' type64='i'/>
</struct>
<struct name='XConfigureRequestEvent' type64='{_XConfigureRequestEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='parent' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='border_width' type64='i'/>
<field declared_type64='int' name='above' type64='i'/>
<field declared_type64='int' name='detail' type64='i'/>
<field declared_type64='unsigned long' name='value_mask' type64='Q'/>
</struct>
<struct name='XCreateWindowEvent' type64='{_XCreateWindowEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='parent' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='border_width' type64='i'/>
<field declared_type64='int' name='override_redirect' type64='i'/>
</struct>
<struct name='XCrossingEvent' type64='{_XCrossingEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='int' name='mode' type64='i'/>
<field declared_type64='int' name='detail' type64='i'/>
<field declared_type64='int' name='same_screen' type64='i'/>
<field declared_type64='int' name='focus' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
</struct>
<struct name='XDeactivateEvent' type64='{_XDeactivateEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='Window' name='window' type64='?'/>
</struct>
<struct name='XDestroyWindowEvent' type64='{_XDestroyWindowEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='event' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
</struct>
<struct name='XEnterWindowEvent' type64='{_XEnterWindowEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='int' name='mode' type64='i'/>
<field declared_type64='int' name='detail' type64='i'/>
<field declared_type64='int' name='same_screen' type64='i'/>
<field declared_type64='int' name='focus' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
</struct>
<struct name='XErrorEvent' type64='{_XErrorEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='resourceid' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='unsigned char' name='error_code' type64='C'/>
<field declared_type64='unsigned char' name='request_code' type64='C'/>
<field declared_type64='unsigned char' name='minor_code' type64='C'/>
</struct>
<struct name='XExposeEvent' type64='{_XExposeEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='count' type64='i'/>
</struct>
<struct name='XExtCodes' type64='{_XExtCodes=&quot;extension&quot;i&quot;major_opcode&quot;i&quot;first_event&quot;i&quot;first_error&quot;i}'>
<field declared_type64='int' name='extension' type64='i'/>
<field declared_type64='int' name='major_opcode' type64='i'/>
<field declared_type64='int' name='first_event' type64='i'/>
<field declared_type64='int' name='first_error' type64='i'/>
</struct>
<struct name='XExtData' type64='{_XExtData=&quot;number&quot;i&quot;next&quot;^{_XExtData}&quot;free_private&quot;^?&quot;private_data&quot;*}'>
<field declared_type64='int' name='number' type64='i'/>
<field declared_type64='struct _XExtData*' name='next' type64='^{_XExtData=i^{_XExtData}^?*}'/>
<field declared_type64='int (*)()' function_pointer='true' name='free_private' type64='^?'>
<retval declared_type64='int' type64='i'/>
</field>
<field declared_type64='XPointer' name='private_data' type64='*'/>
</struct>
<struct name='XFocusChangeEvent' type64='{_XFocusChangeEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='mode' type64='i'/>
<field declared_type64='int' name='detail' type64='i'/>
</struct>
<struct name='XFocusInEvent' type64='{_XFocusInEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='mode' type64='i'/>
<field declared_type64='int' name='detail' type64='i'/>
</struct>
<struct name='XFocusOutEvent' type64='{_XFocusOutEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='mode' type64='i'/>
<field declared_type64='int' name='detail' type64='i'/>
</struct>
<struct name='XFontProp' type64='{_XFontProp=}'>
<field declared_type64='int' name='name' type64='i'/>
<field declared_type64='unsigned long' name='card32' type64='Q'/>
</struct>
<struct name='XFontSetExtents' type64='{_XFontSetExtents=&quot;max_ink_extent&quot;{_XRectangle=&quot;x&quot;s&quot;y&quot;s&quot;width&quot;S&quot;height&quot;S}&quot;max_logical_extent&quot;{_XRectangle=&quot;x&quot;s&quot;y&quot;s&quot;width&quot;S&quot;height&quot;S}}'>
<field declared_type64='XRectangle' name='max_ink_extent' type64='{_XRectangle=&quot;x&quot;s&quot;y&quot;s&quot;width&quot;S&quot;height&quot;S}'/>
<field declared_type64='XRectangle' name='max_logical_extent' type64='{_XRectangle=&quot;x&quot;s&quot;y&quot;s&quot;width&quot;S&quot;height&quot;S}'/>
</struct>
<struct name='XFontStruct' type64='{_XFontStruct=}'>
<field declared_type64='XExtData*' name='ext_data' type64='^{_XExtData=i^{_XExtData}^?*}'/>
<field declared_type64='int' name='fid' type64='i'/>
<field declared_type64='unsigned int' name='direction' type64='I'/>
<field declared_type64='unsigned int' name='min_char_or_byte2' type64='I'/>
<field declared_type64='unsigned int' name='max_char_or_byte2' type64='I'/>
<field declared_type64='unsigned int' name='min_byte1' type64='I'/>
<field declared_type64='unsigned int' name='max_byte1' type64='I'/>
<field declared_type64='int' name='all_chars_exist' type64='i'/>
<field declared_type64='unsigned int' name='default_char' type64='I'/>
<field declared_type64='int' name='n_properties' type64='i'/>
<field declared_type64='XFontProp*' name='properties' type64='^{_XFontProp=}'/>
<field declared_type64='XCharStruct' name='min_bounds' type64='{_XCharStruct=&quot;lbearing&quot;s&quot;rbearing&quot;s&quot;width&quot;s&quot;ascent&quot;s&quot;descent&quot;s&quot;attributes&quot;S}'/>
<field declared_type64='XCharStruct' name='max_bounds' type64='{_XCharStruct=&quot;lbearing&quot;s&quot;rbearing&quot;s&quot;width&quot;s&quot;ascent&quot;s&quot;descent&quot;s&quot;attributes&quot;S}'/>
<field declared_type64='XCharStruct*' name='per_char' type64='^{_XCharStruct=sssssS}'/>
<field declared_type64='int' name='ascent' type64='i'/>
<field declared_type64='int' name='descent' type64='i'/>
</struct>
<struct name='XGCValues' type64='{_XGCValues=}'>
<field declared_type64='int' name='function' type64='i'/>
<field declared_type64='unsigned long' name='plane_mask' type64='Q'/>
<field declared_type64='unsigned long' name='foreground' type64='Q'/>
<field declared_type64='unsigned long' name='background' type64='Q'/>
<field declared_type64='int' name='line_width' type64='i'/>
<field declared_type64='int' name='line_style' type64='i'/>
<field declared_type64='int' name='cap_style' type64='i'/>
<field declared_type64='int' name='join_style' type64='i'/>
<field declared_type64='int' name='fill_style' type64='i'/>
<field declared_type64='int' name='fill_rule' type64='i'/>
<field declared_type64='int' name='arc_mode' type64='i'/>
<field declared_type64='int' name='tile' type64='i'/>
<field declared_type64='int' name='stipple' type64='i'/>
<field declared_type64='int' name='ts_x_origin' type64='i'/>
<field declared_type64='int' name='ts_y_origin' type64='i'/>
<field declared_type64='int' name='font' type64='i'/>
<field declared_type64='int' name='subwindow_mode' type64='i'/>
<field declared_type64='int' name='graphics_exposures' type64='i'/>
<field declared_type64='int' name='clip_x_origin' type64='i'/>
<field declared_type64='int' name='clip_y_origin' type64='i'/>
<field declared_type64='int' name='clip_mask' type64='i'/>
<field declared_type64='int' name='dash_offset' type64='i'/>
<field declared_type64='char' name='dashes' type64='c'/>
</struct>
<struct name='XGraphicsExposeEvent' type64='{_XGraphicsExposeEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='drawable' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='count' type64='i'/>
<field declared_type64='int' name='major_code' type64='i'/>
<field declared_type64='int' name='minor_code' type64='i'/>
</struct>
<struct name='XGravityEvent' type64='{_XGravityEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='event' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
</struct>
<struct name='XHostAddress' type64='{_XHostAddress=&quot;family&quot;i&quot;length&quot;i&quot;address&quot;*}'>
<field declared_type64='int' name='family' type64='i'/>
<field declared_type64='int' name='length' type64='i'/>
<field declared_type64='char*' name='address' type64='*'/>
</struct>
<struct name='XIMCallback' type64='{_XIMCallback=&quot;client_data&quot;*&quot;callback&quot;^?}'>
<field declared_type64='XPointer' name='client_data' type64='*'/>
<field declared_type64='XIMProc' function_pointer='true' name='callback' type64='^?'>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<struct name='XIMPreeditCaretCallbackStruct' type64='{_XIMPreeditCaretCallbackStruct=&quot;position&quot;i&quot;direction&quot;i&quot;style&quot;i}'>
<field declared_type64='int' name='position' type64='i'/>
<field declared_type64='XIMCaretDirection' name='direction' type64='i'/>
<field declared_type64='XIMCaretStyle' name='style' type64='i'/>
</struct>
<struct name='XIMPreeditDrawCallbackStruct' type64='{_XIMPreeditDrawCallbackStruct=&quot;caret&quot;i&quot;chg_first&quot;i&quot;chg_length&quot;i&quot;text&quot;^{_XIMText}}'>
<field declared_type64='int' name='caret' type64='i'/>
<field declared_type64='int' name='chg_first' type64='i'/>
<field declared_type64='int' name='chg_length' type64='i'/>
<field declared_type64='XIMText*' name='text' type64='^{_XIMText=S^Qi(?=*^i)}'/>
</struct>
<struct name='XIMStatusDrawCallbackStruct' type64='{_XIMStatusDrawCallbackStruct=}'>
<field declared_type64='XIMStatusDataType' name='type' type64='i'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/X11/Xlib.h:1179:5)' name='data' type64='(?=&quot;text&quot;^{_XIMText}&quot;bitmap&quot;i)'/>
</struct>
<struct name='XIMStyles' type64='{_XIMStyles=&quot;count_styles&quot;S&quot;supported_styles&quot;^Q}'>
<field declared_type64='unsigned short' name='count_styles' type64='S'/>
<field declared_type64='XIMStyle*' name='supported_styles' type64='^Q'/>
</struct>
<struct name='XIMText' type64='{_XIMText=&quot;length&quot;S&quot;feedback&quot;^Q&quot;encoding_is_wchar&quot;i&quot;string&quot;(?=&quot;multi_byte&quot;*&quot;wide_char&quot;^i)}'>
<field declared_type64='unsigned short' name='length' type64='S'/>
<field declared_type64='XIMFeedback*' name='feedback' type64='^Q'/>
<field declared_type64='int' name='encoding_is_wchar' type64='i'/>
<field declared_type64='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/X11/Xlib.h:1137:5)' name='string' type64='(?=&quot;multi_byte&quot;*&quot;wide_char&quot;^i)'/>
</struct>
<struct name='XIconSize' type64='{_XIconSize=&quot;min_width&quot;i&quot;min_height&quot;i&quot;max_width&quot;i&quot;max_height&quot;i&quot;width_inc&quot;i&quot;height_inc&quot;i}'>
<field declared_type64='int' name='min_width' type64='i'/>
<field declared_type64='int' name='min_height' type64='i'/>
<field declared_type64='int' name='max_width' type64='i'/>
<field declared_type64='int' name='max_height' type64='i'/>
<field declared_type64='int' name='width_inc' type64='i'/>
<field declared_type64='int' name='height_inc' type64='i'/>
</struct>
<struct name='XImage' type64='{_XImage=&quot;width&quot;i&quot;height&quot;i&quot;xoffset&quot;i&quot;format&quot;i&quot;data&quot;*&quot;byte_order&quot;i&quot;bitmap_unit&quot;i&quot;bitmap_bit_order&quot;i&quot;bitmap_pad&quot;i&quot;depth&quot;i&quot;bytes_per_line&quot;i&quot;bits_per_pixel&quot;i&quot;red_mask&quot;Q&quot;green_mask&quot;Q&quot;blue_mask&quot;Q&quot;obdata&quot;*&quot;f&quot;{funcs=&quot;create_image&quot;^?&quot;destroy_image&quot;^?&quot;get_pixel&quot;^?&quot;put_pixel&quot;^?&quot;sub_image&quot;^?&quot;add_pixel&quot;^?}}'>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='xoffset' type64='i'/>
<field declared_type64='int' name='format' type64='i'/>
<field declared_type64='char*' name='data' type64='*'/>
<field declared_type64='int' name='byte_order' type64='i'/>
<field declared_type64='int' name='bitmap_unit' type64='i'/>
<field declared_type64='int' name='bitmap_bit_order' type64='i'/>
<field declared_type64='int' name='bitmap_pad' type64='i'/>
<field declared_type64='int' name='depth' type64='i'/>
<field declared_type64='int' name='bytes_per_line' type64='i'/>
<field declared_type64='int' name='bits_per_pixel' type64='i'/>
<field declared_type64='unsigned long' name='red_mask' type64='Q'/>
<field declared_type64='unsigned long' name='green_mask' type64='Q'/>
<field declared_type64='unsigned long' name='blue_mask' type64='Q'/>
<field declared_type64='XPointer' name='obdata' type64='*'/>
<field declared_type64='struct funcs' name='f' type64='{funcs=&quot;create_image&quot;^?&quot;destroy_image&quot;^?&quot;get_pixel&quot;^?&quot;put_pixel&quot;^?&quot;sub_image&quot;^?&quot;add_pixel&quot;^?}'/>
</struct>
<struct name='XKeyEvent' type64='{_XKeyEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='unsigned int' name='keycode' type64='I'/>
<field declared_type64='int' name='same_screen' type64='i'/>
<field declared_type64='char*' name='trans_chars' type64='[4c]'/>
<field declared_type64='int' name='nbytes' type64='i'/>
</struct>
<struct name='XKeyPressedEvent' type64='{_XKeyPressedEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='unsigned int' name='keycode' type64='I'/>
<field declared_type64='int' name='same_screen' type64='i'/>
<field declared_type64='char*' name='trans_chars' type64='[4c]'/>
<field declared_type64='int' name='nbytes' type64='i'/>
</struct>
<struct name='XKeyReleasedEvent' type64='{_XKeyReleasedEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='unsigned int' name='keycode' type64='I'/>
<field declared_type64='int' name='same_screen' type64='i'/>
<field declared_type64='char*' name='trans_chars' type64='[4c]'/>
<field declared_type64='int' name='nbytes' type64='i'/>
</struct>
<struct name='XKeyboardControl' type64='{_XKeyboardControl=&quot;key_click_percent&quot;i&quot;bell_percent&quot;i&quot;bell_pitch&quot;i&quot;bell_duration&quot;i&quot;led&quot;i&quot;led_mode&quot;i&quot;key&quot;i&quot;auto_repeat_mode&quot;i}'>
<field declared_type64='int' name='key_click_percent' type64='i'/>
<field declared_type64='int' name='bell_percent' type64='i'/>
<field declared_type64='int' name='bell_pitch' type64='i'/>
<field declared_type64='int' name='bell_duration' type64='i'/>
<field declared_type64='int' name='led' type64='i'/>
<field declared_type64='int' name='led_mode' type64='i'/>
<field declared_type64='int' name='key' type64='i'/>
<field declared_type64='int' name='auto_repeat_mode' type64='i'/>
</struct>
<struct name='XKeyboardState' type64='{_XKeyboardState=&quot;key_click_percent&quot;i&quot;bell_percent&quot;i&quot;bell_pitch&quot;I&quot;bell_duration&quot;I&quot;led_mask&quot;Q&quot;global_auto_repeat&quot;i&quot;auto_repeats&quot;[32c]}'>
<field declared_type64='int' name='key_click_percent' type64='i'/>
<field declared_type64='int' name='bell_percent' type64='i'/>
<field declared_type64='unsigned int' name='bell_pitch' type64='I'/>
<field declared_type64='unsigned int' name='bell_duration' type64='I'/>
<field declared_type64='unsigned long' name='led_mask' type64='Q'/>
<field declared_type64='int' name='global_auto_repeat' type64='i'/>
<field declared_type64='char*' name='auto_repeats' type64='[32c]'/>
</struct>
<struct name='XKeymapEvent' type64='{_XKeymapEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='char*' name='key_vector' type64='[32c]'/>
</struct>
<struct name='XLeaveWindowEvent' type64='{_XLeaveWindowEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='int' name='mode' type64='i'/>
<field declared_type64='int' name='detail' type64='i'/>
<field declared_type64='int' name='same_screen' type64='i'/>
<field declared_type64='int' name='focus' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
</struct>
<struct name='XMapEvent' type64='{_XMapEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='event' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='override_redirect' type64='i'/>
</struct>
<struct name='XMapRequestEvent' type64='{_XMapRequestEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='parent' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
</struct>
<struct name='XMappingEvent' type64='{_XMappingEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='request' type64='i'/>
<field declared_type64='int' name='first_keycode' type64='i'/>
<field declared_type64='int' name='count' type64='i'/>
</struct>
<struct name='XModifierKeymap' type64='{_XModifierKeymap=}'>
<field declared_type64='int' name='max_keypermod' type64='i'/>
<field declared_type64='int*' name='modifiermap' type64='^i'/>
</struct>
<struct name='XMotionEvent' type64='{_XMotionEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='char' name='is_hint' type64='c'/>
<field declared_type64='int' name='same_screen' type64='i'/>
</struct>
<struct name='XNoExposeEvent' type64='{_XNoExposeEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='drawable' type64='i'/>
<field declared_type64='int' name='major_code' type64='i'/>
<field declared_type64='int' name='minor_code' type64='i'/>
</struct>
<struct name='XPixmapFormatValues' type64='{_XPixmapFormatValues=&quot;depth&quot;i&quot;bits_per_pixel&quot;i&quot;scanline_pad&quot;i}'>
<field declared_type64='int' name='depth' type64='i'/>
<field declared_type64='int' name='bits_per_pixel' type64='i'/>
<field declared_type64='int' name='scanline_pad' type64='i'/>
</struct>
<struct name='XPoint' type64='{_XPoint=&quot;x&quot;s&quot;y&quot;s}'>
<field declared_type64='short' name='x' type64='s'/>
<field declared_type64='short' name='y' type64='s'/>
</struct>
<struct name='XPointerMovedEvent' type64='{_XPointerMovedEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='subwindow' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='char' name='is_hint' type64='c'/>
<field declared_type64='int' name='same_screen' type64='i'/>
</struct>
<struct name='XPropertyEvent' type64='{_XPropertyEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='atom' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='state' type64='i'/>
</struct>
<struct name='XRectangle' type64='{_XRectangle=&quot;x&quot;s&quot;y&quot;s&quot;width&quot;S&quot;height&quot;S}'>
<field declared_type64='short' name='x' type64='s'/>
<field declared_type64='short' name='y' type64='s'/>
<field declared_type64='unsigned short' name='width' type64='S'/>
<field declared_type64='unsigned short' name='height' type64='S'/>
</struct>
<struct name='XReparentEvent' type64='{_XReparentEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='event' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='parent' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='override_redirect' type64='i'/>
</struct>
<struct name='XResizeRequestEvent' type64='{_XResizeRequestEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
</struct>
<struct name='XSegment' type64='{_XSegment=&quot;x1&quot;s&quot;y1&quot;s&quot;x2&quot;s&quot;y2&quot;s}'>
<field declared_type64='short' name='x1' type64='s'/>
<field declared_type64='short' name='y1' type64='s'/>
<field declared_type64='short' name='x2' type64='s'/>
<field declared_type64='short' name='y2' type64='s'/>
</struct>
<struct name='XSelectionClearEvent' type64='{_XSelectionClearEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='selection' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
</struct>
<struct name='XSelectionEvent' type64='{_XSelectionEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='requestor' type64='i'/>
<field declared_type64='int' name='selection' type64='i'/>
<field declared_type64='int' name='target' type64='i'/>
<field declared_type64='int' name='property' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
</struct>
<struct name='XSelectionRequestEvent' type64='{_XSelectionRequestEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='owner' type64='i'/>
<field declared_type64='int' name='requestor' type64='i'/>
<field declared_type64='int' name='selection' type64='i'/>
<field declared_type64='int' name='target' type64='i'/>
<field declared_type64='int' name='property' type64='i'/>
<field declared_type64='int' name='time' type64='i'/>
</struct>
<struct name='XSetWindowAttributes' type64='{_XSetWindowAttributes=}'>
<field declared_type64='int' name='background_pixmap' type64='i'/>
<field declared_type64='unsigned long' name='background_pixel' type64='Q'/>
<field declared_type64='int' name='border_pixmap' type64='i'/>
<field declared_type64='unsigned long' name='border_pixel' type64='Q'/>
<field declared_type64='int' name='bit_gravity' type64='i'/>
<field declared_type64='int' name='win_gravity' type64='i'/>
<field declared_type64='int' name='backing_store' type64='i'/>
<field declared_type64='unsigned long' name='backing_planes' type64='Q'/>
<field declared_type64='unsigned long' name='backing_pixel' type64='Q'/>
<field declared_type64='int' name='save_under' type64='i'/>
<field declared_type64='long' name='event_mask' type64='q'/>
<field declared_type64='long' name='do_not_propagate_mask' type64='q'/>
<field declared_type64='int' name='override_redirect' type64='i'/>
<field declared_type64='int' name='colormap' type64='i'/>
<field declared_type64='int' name='cursor' type64='i'/>
</struct>
<struct name='XSizeHints' type64='{_XSizeHints=&quot;flags&quot;q&quot;x&quot;i&quot;y&quot;i&quot;width&quot;i&quot;height&quot;i&quot;min_width&quot;i&quot;min_height&quot;i&quot;max_width&quot;i&quot;max_height&quot;i&quot;width_inc&quot;i&quot;height_inc&quot;i&quot;min_aspect&quot;{?=&quot;x&quot;i&quot;y&quot;i}&quot;max_aspect&quot;{?=&quot;x&quot;i&quot;y&quot;i}&quot;base_width&quot;i&quot;base_height&quot;i&quot;win_gravity&quot;i}'>
<field declared_type64='long' name='flags' type64='q'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='min_width' type64='i'/>
<field declared_type64='int' name='min_height' type64='i'/>
<field declared_type64='int' name='max_width' type64='i'/>
<field declared_type64='int' name='max_height' type64='i'/>
<field declared_type64='int' name='width_inc' type64='i'/>
<field declared_type64='int' name='height_inc' type64='i'/>
<field declared_type64='struct (anonymous struct at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/X11/Xutil.h:60:2)' name='min_aspect' type64='{_structanonymousstructatApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX1012sdkSystemLibraryFrameworksTkframeworkHeadersX11Xutilh602=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='struct (anonymous struct at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks/Tk.framework/Headers/X11/Xutil.h:60:2)' name='max_aspect' type64='{_structanonymousstructatApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX1012sdkSystemLibraryFrameworksTkframeworkHeadersX11Xutilh602=&quot;x&quot;i&quot;y&quot;i}'/>
<field declared_type64='int' name='base_width' type64='i'/>
<field declared_type64='int' name='base_height' type64='i'/>
<field declared_type64='int' name='win_gravity' type64='i'/>
</struct>
<struct name='XStandardColormap' type64='{_XStandardColormap=&quot;colormap&quot;Q&quot;red_max&quot;Q&quot;red_mult&quot;Q&quot;green_max&quot;Q&quot;green_mult&quot;Q&quot;blue_max&quot;Q&quot;blue_mult&quot;Q&quot;base_pixel&quot;Q&quot;visualid&quot;Q&quot;killid&quot;Q}'>
<field declared_type64='Colormap' name='colormap' type64='Q'/>
<field declared_type64='unsigned long' name='red_max' type64='Q'/>
<field declared_type64='unsigned long' name='red_mult' type64='Q'/>
<field declared_type64='unsigned long' name='green_max' type64='Q'/>
<field declared_type64='unsigned long' name='green_mult' type64='Q'/>
<field declared_type64='unsigned long' name='blue_max' type64='Q'/>
<field declared_type64='unsigned long' name='blue_mult' type64='Q'/>
<field declared_type64='unsigned long' name='base_pixel' type64='Q'/>
<field declared_type64='VisualID' name='visualid' type64='Q'/>
<field declared_type64='XID' name='killid' type64='Q'/>
</struct>
<struct name='XTextItem' type64='{_XTextItem=}'>
<field declared_type64='char*' name='chars' type64='*'/>
<field declared_type64='int' name='nchars' type64='i'/>
<field declared_type64='int' name='delta' type64='i'/>
<field declared_type64='int' name='font' type64='i'/>
</struct>
<struct name='XTextItem16' type64='{_XTextItem16=}'>
<field declared_type64='XChar2b*' name='chars' type64='^{_XChar2b=CC}'/>
<field declared_type64='int' name='nchars' type64='i'/>
<field declared_type64='int' name='delta' type64='i'/>
<field declared_type64='int' name='font' type64='i'/>
</struct>
<struct name='XTextProperty' type64='{_XTextProperty=&quot;value&quot;*&quot;encoding&quot;Q&quot;format&quot;i&quot;nitems&quot;Q}'>
<field declared_type64='unsigned char*' name='value' type64='*'/>
<field declared_type64='Atom' name='encoding' type64='Q'/>
<field declared_type64='int' name='format' type64='i'/>
<field declared_type64='unsigned long' name='nitems' type64='Q'/>
</struct>
<struct name='XTimeCoord' type64='{_XTimeCoord=}'>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='short' name='x' type64='s'/>
<field declared_type64='short' name='y' type64='s'/>
</struct>
<struct name='XUnmapEvent' type64='{_XUnmapEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='event' type64='i'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='from_configure' type64='i'/>
</struct>
<struct name='XVirtualEvent' type64='{_XVirtualEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='Window' name='event' type64='?'/>
<field declared_type64='Window' name='root' type64='?'/>
<field declared_type64='Window' name='subwindow' type64='?'/>
<field declared_type64='int' name='time' type64='i'/>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='x_root' type64='i'/>
<field declared_type64='int' name='y_root' type64='i'/>
<field declared_type64='unsigned int' name='state' type64='I'/>
<field declared_type64='Tk_Uid' name='name' type64='*'/>
<field declared_type64='int' name='same_screen' type64='i'/>
<field declared_type64='Tcl_Obj*' name='user_data' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</struct>
<struct name='XVisibilityEvent' type64='{_XVisibilityEvent=}'>
<field declared_type64='int' name='type' type64='i'/>
<field declared_type64='unsigned long' name='serial' type64='Q'/>
<field declared_type64='int' name='send_event' type64='i'/>
<field declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<field declared_type64='int' name='window' type64='i'/>
<field declared_type64='int' name='state' type64='i'/>
</struct>
<struct name='XVisualInfo' type64='{_XVisualInfo=&quot;visual&quot;^{_Visual=}&quot;visualid&quot;Q&quot;screen&quot;i&quot;depth&quot;i&quot;class&quot;i&quot;red_mask&quot;Q&quot;green_mask&quot;Q&quot;blue_mask&quot;Q&quot;colormap_size&quot;i&quot;bits_per_rgb&quot;i}'>
<field declared_type64='Visual*' name='visual' type64='^{_Visual=}'/>
<field declared_type64='VisualID' name='visualid' type64='Q'/>
<field declared_type64='int' name='screen' type64='i'/>
<field declared_type64='int' name='depth' type64='i'/>
<field declared_type64='int' name='class' type64='i'/>
<field declared_type64='unsigned long' name='red_mask' type64='Q'/>
<field declared_type64='unsigned long' name='green_mask' type64='Q'/>
<field declared_type64='unsigned long' name='blue_mask' type64='Q'/>
<field declared_type64='int' name='colormap_size' type64='i'/>
<field declared_type64='int' name='bits_per_rgb' type64='i'/>
</struct>
<struct name='XWMHints' type64='{_XWMHints=}'>
<field declared_type64='long' name='flags' type64='q'/>
<field declared_type64='int' name='input' type64='i'/>
<field declared_type64='int' name='initial_state' type64='i'/>
<field declared_type64='Pixmap' name='icon_pixmap' type64='Q'/>
<field declared_type64='Window' name='icon_window' type64='?'/>
<field declared_type64='int' name='icon_x' type64='i'/>
<field declared_type64='int' name='icon_y' type64='i'/>
<field declared_type64='Pixmap' name='icon_mask' type64='Q'/>
<field declared_type64='XID' name='window_group' type64='Q'/>
</struct>
<struct name='XWindowAttributes' type64='{_XWindowAttributes=}'>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='border_width' type64='i'/>
<field declared_type64='int' name='depth' type64='i'/>
<field declared_type64='Visual*' name='visual' type64='^{_Visual=}'/>
<field declared_type64='int' name='root' type64='i'/>
<field declared_type64='int' name='class' type64='i'/>
<field declared_type64='int' name='bit_gravity' type64='i'/>
<field declared_type64='int' name='win_gravity' type64='i'/>
<field declared_type64='int' name='backing_store' type64='i'/>
<field declared_type64='unsigned long' name='backing_planes' type64='Q'/>
<field declared_type64='unsigned long' name='backing_pixel' type64='Q'/>
<field declared_type64='int' name='save_under' type64='i'/>
<field declared_type64='int' name='colormap' type64='i'/>
<field declared_type64='int' name='map_installed' type64='i'/>
<field declared_type64='int' name='map_state' type64='i'/>
<field declared_type64='long' name='all_event_masks' type64='q'/>
<field declared_type64='long' name='your_event_mask' type64='q'/>
<field declared_type64='long' name='do_not_propagate_mask' type64='q'/>
<field declared_type64='int' name='override_redirect' type64='i'/>
<field declared_type64='Screen*' name='screen' type64='^{_Screen=}'/>
</struct>
<struct name='XWindowChanges' type64='{_XWindowChanges=}'>
<field declared_type64='int' name='x' type64='i'/>
<field declared_type64='int' name='y' type64='i'/>
<field declared_type64='int' name='width' type64='i'/>
<field declared_type64='int' name='height' type64='i'/>
<field declared_type64='int' name='border_width' type64='i'/>
<field declared_type64='int' name='sibling' type64='i'/>
<field declared_type64='int' name='stack_mode' type64='i'/>
</struct>
<struct name='XmbTextItem' type64='{_XmbTextItem=&quot;chars&quot;*&quot;nchars&quot;i&quot;delta&quot;i&quot;font_set&quot;^{_XFontSet}}'>
<field declared_type64='char*' name='chars' type64='*'/>
<field declared_type64='int' name='nchars' type64='i'/>
<field declared_type64='int' name='delta' type64='i'/>
<field declared_type64='XFontSet' name='font_set' type64='^{_XFontSet=}'/>
</struct>
<struct name='XwcTextItem' type64='{_XwcTextItem=&quot;chars&quot;^i&quot;nchars&quot;i&quot;delta&quot;i&quot;font_set&quot;^{_XFontSet}}'>
<field declared_type64='wchar_t*' name='chars' type64='^i'/>
<field declared_type64='int' name='nchars' type64='i'/>
<field declared_type64='int' name='delta' type64='i'/>
<field declared_type64='XFontSet' name='font_set' type64='^{_XFontSet=}'/>
</struct>
<cftype name='Region' type64='^{_XRegion=}'/>
<cftype name='TkBindInfo' type64='^{TkBindInfo_=}'/>
<cftype name='TkColormap' type64='^{TkColormap=}'/>
<cftype name='TkGrabEvent' type64='^{TkGrabEvent=}'/>
<cftype name='TkRegion' type64='^{TkRegion_=}'/>
<cftype name='TkStressedCmap' type64='^{TkStressedCmap=}'/>
<cftype name='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
<cftype name='Tk_Canvas' type64='^{Tk_Canvas_=}'/>
<cftype name='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
<cftype name='Tk_ErrorHandler' type64='^{Tk_ErrorHandler_=}'/>
<cftype name='Tk_Font' type64='^{Tk_Font_=}'/>
<cftype name='Tk_Image' type64='^{Tk_Image__=}'/>
<cftype name='Tk_ImageMaster' type64='^{Tk_ImageMaster_=}'/>
<cftype name='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<cftype name='Tk_PostscriptInfo' type64='^{Tk_PostscriptInfo_=}'/>
<cftype name='Tk_Style' type64='^{Tk_Style_=}'/>
<cftype name='Tk_StyleEngine' type64='^{Tk_StyleEngine_=}'/>
<cftype name='Tk_StyledElement' type64='^{Tk_StyledElement_=}'/>
<cftype name='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
<cftype name='Tk_Window' type64='^{Tk_Window_=}'/>
<cftype name='TkpCursor' type64='^{TkpCursor_=}'/>
<cftype name='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
<cftype name='Ttk_ElementClass' type64='^{Ttk_ElementClass_=}'/>
<cftype name='Ttk_ImageSpec' type64='^{TtkImageSpec=}'/>
<cftype name='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<cftype name='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
<cftype name='Ttk_Style' type64='^{Ttk_Style_=}'/>
<cftype name='Ttk_Theme' type64='^{Ttk_Theme_=}'/>
<cftype name='XFontSet' type64='^{_XFontSet=}'/>
<cftype name='XIC' type64='^{_XIC=}'/>
<cftype name='XIM' type64='^{_XIM=}'/>
<constant declared_type64='int' name='Tcl_Obj' type64='i'/>
<constant declared_type64='int' name='TkFont' type64='i'/>
<constant declared_type64='Ttk_ElementOptionSpec*' name='TtkNullElementOptions' type64='^{Ttk_ElementOptionSpec=*ii*}'/>
<constant declared_type64='int' name='Ttk_Box' type64='i'/>
<constant declared_type64='int' name='Ttk_ElementClass' type64='i'/>
<constant declared_type64='int' name='Ttk_Padding' type64='i'/>
<constant declared_type64='int' name='Ttk_StateMap' type64='i'/>
<constant declared_type64='int' name='Ttk_Theme' type64='i'/>
<constant declared_type64='Tk_SmoothMethod' name='tkBezierSmoothMethod' type64='{Tk_SmoothMethod=*^?^?}'/>
<constant declared_type64='Tk_ImageType' name='tkBitmapImageType' type64='{Tk_ImageType=*^?^?^?^?^?^?^{Tk_ImageType}*}'/>
<constant declared_type64='Tcl_ObjType' name='tkBitmapObjType' type64='{Tcl_ObjType=*^?^?^?^?}'/>
<constant declared_type64='Tcl_ObjType' name='tkBorderObjType' type64='{Tcl_ObjType=*^?^?^?^?}'/>
<constant declared_type64='Tcl_ObjType' name='tkColorObjType' type64='{Tcl_ObjType=*^?^?^?^?}'/>
<constant declared_type64='Tcl_ObjType' name='tkCursorObjType' type64='{Tcl_ObjType=*^?^?^?^?}'/>
<constant declared_type64='TkDisplay*' name='tkDisplayList' type64='^{TkDisplay=}'/>
<constant declared_type64='Tcl_ObjType' name='tkFontObjType' type64='{Tcl_ObjType=*^?^?^?^?}'/>
<constant declared_type64='Tk_PhotoImageFormat' name='tkImgFmtGIF' type64='{Tk_PhotoImageFormat=*^?^?^?^?^?^?^{Tk_PhotoImageFormat}}'/>
<constant declared_type64='Tk_PhotoImageFormat' name='tkImgFmtPPM' type64='{Tk_PhotoImageFormat=*^?^?^?^?^?^?^{Tk_PhotoImageFormat}}'/>
<constant declared_type64='TkIntPlatStubs*' name='tkIntPlatStubsPtr' type64='^{TkIntPlatStubs=}'/>
<constant declared_type64='TkIntStubs*' name='tkIntStubsPtr' type64='^{TkIntStubs=}'/>
<constant declared_type64='TkMacOSXEmbedHandler*' name='tkMacOSXEmbedHandler' type64='^{_TkMacOSXEmbedHandler=^?^?^?^?^?}'/>
<constant declared_type64='TkMainInfo*' name='tkMainWindowList' type64='^{TkMainInfo=}'/>
<constant declared_type64='Tcl_ObjType' name='tkOptionObjType' type64='{Tcl_ObjType=*^?^?^?^?}'/>
<constant declared_type64='Tk_ImageType' name='tkPhotoImageType' type64='{Tk_ImageType=*^?^?^?^?^?^?^{Tk_ImageType}*}'/>
<constant declared_type64='Tcl_HashTable' name='tkPredefBitmapTable' type64='{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<constant declared_type64='Tcl_ObjType' name='tkStateKeyObjType' type64='{Tcl_ObjType=*^?^?^?^?}'/>
<constant declared_type64='TkStubs*' name='tkStubsPtr' type64='^{TkStubs=}'/>
<constant declared_type64='Tcl_ObjType' name='tkTextIndexType' type64='{Tcl_ObjType=*^?^?^?^?}'/>
<constant declared_type64='Ttk_ElementSpec' name='ttkNullElementSpec' type64='{Ttk_ElementSpec=iQ^{Ttk_ElementOptionSpec}^?^?}'/>
<constant const='true' declared_type64='TtkStubs*' name='ttkStubsPtr' type64='^{TtkStubs=}'/>
<constant declared_type64='unsigned char*' name='xBitReverseTable' type64='[256C]'/>
<string_constant name='ACTIVE_BG' value='systemButtonFacePressed'/>
<string_constant name='ACTIVE_FG' value='systemPushButtonPressedText'/>
<string_constant name='BLACK' value='Black'/>
<string_constant name='DEFAULT_BACKGROUND' value='#d9d9d9'/>
<string_constant name='DEFAULT_FONT' value='TkDefaultFont'/>
<string_constant name='DEFAULT_FOREGROUND' value='black'/>
<string_constant name='DEF_BUTTON_ACTIVE_BG_COLOR' value='systemButtonFacePressed'/>
<string_constant name='DEF_BUTTON_ACTIVE_BG_MONO' value='Black'/>
<string_constant name='DEF_BUTTON_ACTIVE_FG_COLOR' value='systemPushButtonPressedText'/>
<string_constant name='DEF_BUTTON_ACTIVE_FG_MONO' value='White'/>
<string_constant name='DEF_BUTTON_ANCHOR' value='center'/>
<string_constant name='DEF_BUTTON_BG_COLOR' value='White'/>
<string_constant name='DEF_BUTTON_BG_MONO' value='White'/>
<string_constant name='DEF_BUTTON_BITMAP' value=''/>
<string_constant name='DEF_BUTTON_BORDER_WIDTH' value='2'/>
<string_constant name='DEF_BUTTON_COMMAND' value=''/>
<string_constant name='DEF_BUTTON_COMPOUND' value='none'/>
<string_constant name='DEF_BUTTON_CURSOR' value=''/>
<string_constant name='DEF_BUTTON_DEFAULT' value='disabled'/>
<string_constant name='DEF_BUTTON_DISABLED_FG_COLOR' value='#a3a3a3'/>
<string_constant name='DEF_BUTTON_DISABLED_FG_MONO' value=''/>
<string_constant name='DEF_BUTTON_FG' value='systemButtonText'/>
<string_constant name='DEF_BUTTON_FONT' value='TkDefaultFont'/>
<string_constant name='DEF_BUTTON_HEIGHT' value='0'/>
<string_constant name='DEF_BUTTON_HIGHLIGHT' value='systemButtonFrame'/>
<string_constant name='DEF_BUTTON_HIGHLIGHT_BG_COLOR' value='White'/>
<string_constant name='DEF_BUTTON_HIGHLIGHT_BG_MONO' value='White'/>
<string_constant name='DEF_BUTTON_HIGHLIGHT_WIDTH' value='4'/>
<string_constant name='DEF_BUTTON_HIGHLIGHT_WIDTH_NOCM' value='1'/>
<string_constant name='DEF_BUTTON_INDICATOR' value='1'/>
<string_constant name='DEF_BUTTON_JUSTIFY' value='center'/>
<string_constant name='DEF_BUTTON_OFF_VALUE' value='0'/>
<string_constant name='DEF_BUTTON_ON_VALUE' value='1'/>
<string_constant name='DEF_BUTTON_OVER_RELIEF' value=''/>
<string_constant name='DEF_BUTTON_PADX' value='12'/>
<string_constant name='DEF_BUTTON_PADX_NOCM' value='1'/>
<string_constant name='DEF_BUTTON_PADY' value='3'/>
<string_constant name='DEF_BUTTON_PADY_NOCM' value='1'/>
<string_constant name='DEF_BUTTON_RELIEF' value='flat'/>
<string_constant name='DEF_BUTTON_REPEAT_DELAY' value='0'/>
<string_constant name='DEF_BUTTON_REPEAT_INTERVAL' value='0'/>
<string_constant name='DEF_BUTTON_SELECT_COLOR' value='#b03060'/>
<string_constant name='DEF_BUTTON_SELECT_MONO' value='Black'/>
<string_constant name='DEF_BUTTON_STATE' value='normal'/>
<string_constant name='DEF_BUTTON_TEXT' value=''/>
<string_constant name='DEF_BUTTON_TEXT_VARIABLE' value=''/>
<string_constant name='DEF_BUTTON_TRISTATE_VALUE' value=''/>
<string_constant name='DEF_BUTTON_UNDERLINE' value='-1'/>
<string_constant name='DEF_BUTTON_VALUE' value=''/>
<string_constant name='DEF_BUTTON_WIDTH' value='0'/>
<string_constant name='DEF_BUTTON_WRAP_LENGTH' value='0'/>
<string_constant name='DEF_CANVAS_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_CANVAS_BG_MONO' value='White'/>
<string_constant name='DEF_CANVAS_BORDER_WIDTH' value='0'/>
<string_constant name='DEF_CANVAS_CLOSE_ENOUGH' value='1'/>
<string_constant name='DEF_CANVAS_CONFINE' value='1'/>
<string_constant name='DEF_CANVAS_CURSOR' value=''/>
<string_constant name='DEF_CANVAS_HEIGHT' value='7c'/>
<string_constant name='DEF_CANVAS_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_CANVAS_HIGHLIGHT_BG' value='systemWindowBody'/>
<string_constant name='DEF_CANVAS_HIGHLIGHT_WIDTH' value='3'/>
<string_constant name='DEF_CANVAS_INSERT_BD_COLOR' value='0'/>
<string_constant name='DEF_CANVAS_INSERT_BD_MONO' value='0'/>
<string_constant name='DEF_CANVAS_INSERT_BG' value='Black'/>
<string_constant name='DEF_CANVAS_INSERT_OFF_TIME' value='300'/>
<string_constant name='DEF_CANVAS_INSERT_ON_TIME' value='600'/>
<string_constant name='DEF_CANVAS_INSERT_WIDTH' value='2'/>
<string_constant name='DEF_CANVAS_RELIEF' value='flat'/>
<string_constant name='DEF_CANVAS_SCROLL_REGION' value=''/>
<string_constant name='DEF_CANVAS_SELECT_BD_COLOR' value='1'/>
<string_constant name='DEF_CANVAS_SELECT_BD_MONO' value='0'/>
<string_constant name='DEF_CANVAS_SELECT_COLOR' value='systemHighlight'/>
<string_constant name='DEF_CANVAS_SELECT_FG_MONO' value='White'/>
<string_constant name='DEF_CANVAS_SELECT_MONO' value='Black'/>
<string_constant name='DEF_CANVAS_WIDTH' value='10c'/>
<string_constant name='DEF_CANVAS_X_SCROLL_CMD' value=''/>
<string_constant name='DEF_CANVAS_X_SCROLL_INCREMENT' value='0'/>
<string_constant name='DEF_CANVAS_Y_SCROLL_CMD' value=''/>
<string_constant name='DEF_CANVAS_Y_SCROLL_INCREMENT' value='0'/>
<string_constant name='DEF_CANVTEXT_FONT' value='TkDefaultFont'/>
<string_constant name='DEF_CHECKBUTTON_VARIABLE' value=''/>
<string_constant name='DEF_CHKRAD_ACTIVE_FG_COLOR' value='systemPushButtonPressedText'/>
<string_constant name='DEF_CHKRAD_FG' value='systemButtonText'/>
<string_constant name='DEF_ENTRY_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_ENTRY_BG_MONO' value='White'/>
<string_constant name='DEF_ENTRY_BORDER_WIDTH' value='2'/>
<string_constant name='DEF_ENTRY_CURSOR' value='xterm'/>
<string_constant name='DEF_ENTRY_DISABLED_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_ENTRY_DISABLED_BG_MONO' value='White'/>
<string_constant name='DEF_ENTRY_DISABLED_FG' value='#a3a3a3'/>
<string_constant name='DEF_ENTRY_EXPORT_SELECTION' value='1'/>
<string_constant name='DEF_ENTRY_FG' value='Black'/>
<string_constant name='DEF_ENTRY_FONT' value='TkTextFont'/>
<string_constant name='DEF_ENTRY_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_ENTRY_HIGHLIGHT_BG' value='systemWindowBody'/>
<string_constant name='DEF_ENTRY_HIGHLIGHT_WIDTH' value='3'/>
<string_constant name='DEF_ENTRY_INSERT_BD_COLOR' value='0'/>
<string_constant name='DEF_ENTRY_INSERT_BD_MONO' value='0'/>
<string_constant name='DEF_ENTRY_INSERT_BG' value='Black'/>
<string_constant name='DEF_ENTRY_INSERT_OFF_TIME' value='300'/>
<string_constant name='DEF_ENTRY_INSERT_ON_TIME' value='600'/>
<string_constant name='DEF_ENTRY_INSERT_WIDTH' value='1'/>
<string_constant name='DEF_ENTRY_JUSTIFY' value='left'/>
<string_constant name='DEF_ENTRY_READONLY_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_ENTRY_READONLY_BG_MONO' value='White'/>
<string_constant name='DEF_ENTRY_RELIEF' value='sunken'/>
<string_constant name='DEF_ENTRY_SCROLL_COMMAND' value=''/>
<string_constant name='DEF_ENTRY_SELECT_BD_COLOR' value='1'/>
<string_constant name='DEF_ENTRY_SELECT_BD_MONO' value='0'/>
<string_constant name='DEF_ENTRY_SELECT_COLOR' value='systemHighlight'/>
<string_constant name='DEF_ENTRY_SELECT_FG_MONO' value='White'/>
<string_constant name='DEF_ENTRY_SELECT_MONO' value='Black'/>
<string_constant name='DEF_ENTRY_STATE' value='normal'/>
<string_constant name='DEF_ENTRY_TEXT_VARIABLE' value=''/>
<string_constant name='DEF_ENTRY_WIDTH' value='20'/>
<string_constant name='DEF_FRAME_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_FRAME_BG_MONO' value='White'/>
<string_constant name='DEF_FRAME_BORDER_WIDTH' value='0'/>
<string_constant name='DEF_FRAME_CLASS' value='Frame'/>
<string_constant name='DEF_FRAME_COLORMAP' value=''/>
<string_constant name='DEF_FRAME_CONTAINER' value='0'/>
<string_constant name='DEF_FRAME_CURSOR' value=''/>
<string_constant name='DEF_FRAME_HEIGHT' value='0'/>
<string_constant name='DEF_FRAME_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_FRAME_HIGHLIGHT_BG' value='systemWindowBody'/>
<string_constant name='DEF_FRAME_HIGHLIGHT_WIDTH' value='0'/>
<string_constant name='DEF_FRAME_PADX' value='0'/>
<string_constant name='DEF_FRAME_PADY' value='0'/>
<string_constant name='DEF_FRAME_RELIEF' value='flat'/>
<string_constant name='DEF_FRAME_TAKE_FOCUS' value='0'/>
<string_constant name='DEF_FRAME_VISUAL' value=''/>
<string_constant name='DEF_FRAME_WIDTH' value='0'/>
<string_constant name='DEF_LABCHKRAD_PADX' value='1'/>
<string_constant name='DEF_LABCHKRAD_PADY' value='1'/>
<string_constant name='DEF_LABCHKRAD_RELIEF' value='flat'/>
<string_constant name='DEF_LABELFRAME_BORDER_WIDTH' value='2'/>
<string_constant name='DEF_LABELFRAME_CLASS' value='Labelframe'/>
<string_constant name='DEF_LABELFRAME_FG' value='systemButtonText'/>
<string_constant name='DEF_LABELFRAME_FONT' value='TkDefaultFont'/>
<string_constant name='DEF_LABELFRAME_LABELANCHOR' value='nw'/>
<string_constant name='DEF_LABELFRAME_RELIEF' value='groove'/>
<string_constant name='DEF_LABELFRAME_TEXT' value=''/>
<string_constant name='DEF_LABEL_HIGHLIGHT_WIDTH' value='0'/>
<string_constant name='DEF_LABEL_TAKE_FOCUS' value='0'/>
<string_constant name='DEF_LISTBOX_ACTIVE_STYLE' value='dotbox'/>
<string_constant name='DEF_LISTBOX_BG_COLOR' value='White'/>
<string_constant name='DEF_LISTBOX_BG_MONO' value='White'/>
<string_constant name='DEF_LISTBOX_BORDER_WIDTH' value='1'/>
<string_constant name='DEF_LISTBOX_CURSOR' value=''/>
<string_constant name='DEF_LISTBOX_DISABLED_FG' value='#a3a3a3'/>
<string_constant name='DEF_LISTBOX_EXPORT_SELECTION' value='1'/>
<string_constant name='DEF_LISTBOX_FG' value='Black'/>
<string_constant name='DEF_LISTBOX_FONT' value='TkTextFont'/>
<string_constant name='DEF_LISTBOX_HEIGHT' value='10'/>
<string_constant name='DEF_LISTBOX_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_LISTBOX_HIGHLIGHT_BG' value='systemWindowBody'/>
<string_constant name='DEF_LISTBOX_HIGHLIGHT_WIDTH' value='0'/>
<string_constant name='DEF_LISTBOX_LIST_VARIABLE' value=''/>
<string_constant name='DEF_LISTBOX_RELIEF' value='solid'/>
<string_constant name='DEF_LISTBOX_SCROLL_COMMAND' value=''/>
<string_constant name='DEF_LISTBOX_SELECT_BD' value='0'/>
<string_constant name='DEF_LISTBOX_SELECT_COLOR' value='systemHighlight'/>
<string_constant name='DEF_LISTBOX_SELECT_FG_MONO' value='White'/>
<string_constant name='DEF_LISTBOX_SELECT_MODE' value='browse'/>
<string_constant name='DEF_LISTBOX_SELECT_MONO' value='Black'/>
<string_constant name='DEF_LISTBOX_SET_GRID' value='0'/>
<string_constant name='DEF_LISTBOX_STATE' value='normal'/>
<string_constant name='DEF_LISTBOX_WIDTH' value='20'/>
<string_constant name='DEF_MENUBUTTON_ACTIVE_BG_COLOR' value='systemButtonFacePressed'/>
<string_constant name='DEF_MENUBUTTON_ACTIVE_BG_MONO' value='Black'/>
<string_constant name='DEF_MENUBUTTON_ACTIVE_FG_COLOR' value='systemPushButtonPressedText'/>
<string_constant name='DEF_MENUBUTTON_ACTIVE_FG_MONO' value='White'/>
<string_constant name='DEF_MENUBUTTON_ANCHOR' value='center'/>
<string_constant name='DEF_MENUBUTTON_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_MENUBUTTON_BG_MONO' value='White'/>
<string_constant name='DEF_MENUBUTTON_BITMAP' value=''/>
<string_constant name='DEF_MENUBUTTON_BORDER_WIDTH' value='2'/>
<string_constant name='DEF_MENUBUTTON_CURSOR' value=''/>
<string_constant name='DEF_MENUBUTTON_DIRECTION' value='below'/>
<string_constant name='DEF_MENUBUTTON_DISABLED_FG_COLOR' value='#a3a3a3'/>
<string_constant name='DEF_MENUBUTTON_DISABLED_FG_MONO' value=''/>
<string_constant name='DEF_MENUBUTTON_FG' value='Black'/>
<string_constant name='DEF_MENUBUTTON_FONT' value='TkDefaultFont'/>
<string_constant name='DEF_MENUBUTTON_HEIGHT' value='0'/>
<string_constant name='DEF_MENUBUTTON_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_MENUBUTTON_HIGHLIGHT_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_MENUBUTTON_HIGHLIGHT_BG_MONO' value='White'/>
<string_constant name='DEF_MENUBUTTON_HIGHLIGHT_WIDTH' value='0'/>
<string_constant name='DEF_MENUBUTTON_INDICATOR' value='1'/>
<string_constant name='DEF_MENUBUTTON_JUSTIFY' value='left'/>
<string_constant name='DEF_MENUBUTTON_MENU' value=''/>
<string_constant name='DEF_MENUBUTTON_PADX' value='4'/>
<string_constant name='DEF_MENUBUTTON_PADY' value='3'/>
<string_constant name='DEF_MENUBUTTON_RELIEF' value='flat'/>
<string_constant name='DEF_MENUBUTTON_STATE' value='normal'/>
<string_constant name='DEF_MENUBUTTON_TAKE_FOCUS' value='0'/>
<string_constant name='DEF_MENUBUTTON_TEXT' value=''/>
<string_constant name='DEF_MENUBUTTON_TEXT_VARIABLE' value=''/>
<string_constant name='DEF_MENUBUTTON_UNDERLINE' value='-1'/>
<string_constant name='DEF_MENUBUTTON_WIDTH' value='0'/>
<string_constant name='DEF_MENUBUTTON_WRAP_LENGTH' value='0'/>
<string_constant name='DEF_MENU_ACTIVE_BG_COLOR' value='systemMenuActive'/>
<string_constant name='DEF_MENU_ACTIVE_BG_MONO' value='Black'/>
<string_constant name='DEF_MENU_ACTIVE_BORDER_WIDTH' value='0'/>
<string_constant name='DEF_MENU_ACTIVE_FG_COLOR' value='systemMenuActiveText'/>
<string_constant name='DEF_MENU_ACTIVE_FG_MONO' value='White'/>
<string_constant name='DEF_MENU_BG_COLOR' value='systemMenu'/>
<string_constant name='DEF_MENU_BG_MONO' value='White'/>
<string_constant name='DEF_MENU_BORDER_WIDTH' value='0'/>
<string_constant name='DEF_MENU_CURSOR' value='arrow'/>
<string_constant name='DEF_MENU_DISABLED_FG_COLOR' value='systemMenuDisabled'/>
<string_constant name='DEF_MENU_DISABLED_FG_MONO' value=''/>
<string_constant name='DEF_MENU_ENTRY_COLUMN_BREAK' value='0'/>
<string_constant name='DEF_MENU_ENTRY_COMPOUND' value='none'/>
<string_constant name='DEF_MENU_ENTRY_HIDE_MARGIN' value='0'/>
<string_constant name='DEF_MENU_ENTRY_INDICATOR' value='1'/>
<string_constant name='DEF_MENU_ENTRY_OFF_VALUE' value='0'/>
<string_constant name='DEF_MENU_ENTRY_ON_VALUE' value='1'/>
<string_constant name='DEF_MENU_ENTRY_RADIO_VARIABLE' value='selectedButton'/>
<string_constant name='DEF_MENU_ENTRY_STATE' value='normal'/>
<string_constant name='DEF_MENU_ENTRY_UNDERLINE' value='-1'/>
<string_constant name='DEF_MENU_FG' value='systemMenuText'/>
<string_constant name='DEF_MENU_FONT' value='menu'/>
<string_constant name='DEF_MENU_POST_COMMAND' value=''/>
<string_constant name='DEF_MENU_RELIEF' value='flat'/>
<string_constant name='DEF_MENU_SELECT_COLOR' value='systemMenuActive'/>
<string_constant name='DEF_MENU_SELECT_MONO' value='Black'/>
<string_constant name='DEF_MENU_TAKE_FOCUS' value='0'/>
<string_constant name='DEF_MENU_TEAROFF' value='0'/>
<string_constant name='DEF_MENU_TITLE' value=''/>
<string_constant name='DEF_MENU_TYPE' value='normal'/>
<string_constant name='DEF_MESSAGE_ANCHOR' value='center'/>
<string_constant name='DEF_MESSAGE_ASPECT' value='150'/>
<string_constant name='DEF_MESSAGE_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_MESSAGE_BG_MONO' value='White'/>
<string_constant name='DEF_MESSAGE_BORDER_WIDTH' value='1'/>
<string_constant name='DEF_MESSAGE_CURSOR' value=''/>
<string_constant name='DEF_MESSAGE_FG' value='Black'/>
<string_constant name='DEF_MESSAGE_FONT' value='TkDefaultFont'/>
<string_constant name='DEF_MESSAGE_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_MESSAGE_HIGHLIGHT_BG' value='systemWindowBody'/>
<string_constant name='DEF_MESSAGE_HIGHLIGHT_WIDTH' value='0'/>
<string_constant name='DEF_MESSAGE_JUSTIFY' value='left'/>
<string_constant name='DEF_MESSAGE_PADX' value='-1'/>
<string_constant name='DEF_MESSAGE_PADY' value='-1'/>
<string_constant name='DEF_MESSAGE_RELIEF' value='flat'/>
<string_constant name='DEF_MESSAGE_TAKE_FOCUS' value='0'/>
<string_constant name='DEF_MESSAGE_TEXT' value=''/>
<string_constant name='DEF_MESSAGE_TEXT_VARIABLE' value=''/>
<string_constant name='DEF_MESSAGE_WIDTH' value='0'/>
<string_constant name='DEF_PANEDWINDOW_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_PANEDWINDOW_BG_MONO' value='White'/>
<string_constant name='DEF_PANEDWINDOW_BORDERWIDTH' value='1'/>
<string_constant name='DEF_PANEDWINDOW_CURSOR' value=''/>
<string_constant name='DEF_PANEDWINDOW_HANDLEPAD' value='8'/>
<string_constant name='DEF_PANEDWINDOW_HANDLESIZE' value='8'/>
<string_constant name='DEF_PANEDWINDOW_HEIGHT' value=''/>
<string_constant name='DEF_PANEDWINDOW_OPAQUERESIZE' value='1'/>
<string_constant name='DEF_PANEDWINDOW_ORIENT' value='horizontal'/>
<string_constant name='DEF_PANEDWINDOW_PANE_AFTER' value=''/>
<string_constant name='DEF_PANEDWINDOW_PANE_BEFORE' value=''/>
<string_constant name='DEF_PANEDWINDOW_PANE_HEIGHT' value=''/>
<string_constant name='DEF_PANEDWINDOW_PANE_HIDE' value='0'/>
<string_constant name='DEF_PANEDWINDOW_PANE_MINSIZE' value='0'/>
<string_constant name='DEF_PANEDWINDOW_PANE_PADX' value='0'/>
<string_constant name='DEF_PANEDWINDOW_PANE_PADY' value='0'/>
<string_constant name='DEF_PANEDWINDOW_PANE_STICKY' value='nsew'/>
<string_constant name='DEF_PANEDWINDOW_PANE_STRETCH' value='last'/>
<string_constant name='DEF_PANEDWINDOW_PANE_WIDTH' value=''/>
<string_constant name='DEF_PANEDWINDOW_RELIEF' value='flat'/>
<string_constant name='DEF_PANEDWINDOW_SASHCURSOR' value=''/>
<string_constant name='DEF_PANEDWINDOW_SASHPAD' value='0'/>
<string_constant name='DEF_PANEDWINDOW_SASHRELIEF' value='flat'/>
<string_constant name='DEF_PANEDWINDOW_SASHWIDTH' value='3'/>
<string_constant name='DEF_PANEDWINDOW_SHOWHANDLE' value='0'/>
<string_constant name='DEF_PANEDWINDOW_WIDTH' value=''/>
<string_constant name='DEF_RADIOBUTTON_VARIABLE' value='selectedButton'/>
<string_constant name='DEF_SCALE_ACTIVE_BG_COLOR' value='systemButtonFacePressed'/>
<string_constant name='DEF_SCALE_ACTIVE_BG_MONO' value='Black'/>
<string_constant name='DEF_SCALE_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_SCALE_BG_MONO' value='White'/>
<string_constant name='DEF_SCALE_BIG_INCREMENT' value='0'/>
<string_constant name='DEF_SCALE_BORDER_WIDTH' value='1'/>
<string_constant name='DEF_SCALE_COMMAND' value=''/>
<string_constant name='DEF_SCALE_CURSOR' value=''/>
<string_constant name='DEF_SCALE_DIGITS' value='0'/>
<string_constant name='DEF_SCALE_FG_COLOR' value='Black'/>
<string_constant name='DEF_SCALE_FG_MONO' value='Black'/>
<string_constant name='DEF_SCALE_FONT' value='TkDefaultFont'/>
<string_constant name='DEF_SCALE_FROM' value='0'/>
<string_constant name='DEF_SCALE_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_SCALE_HIGHLIGHT_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_SCALE_HIGHLIGHT_BG_MONO' value='White'/>
<string_constant name='DEF_SCALE_HIGHLIGHT_WIDTH' value='0'/>
<string_constant name='DEF_SCALE_LABEL' value=''/>
<string_constant name='DEF_SCALE_LENGTH' value='100'/>
<string_constant name='DEF_SCALE_ORIENT' value='vertical'/>
<string_constant name='DEF_SCALE_RELIEF' value='flat'/>
<string_constant name='DEF_SCALE_REPEAT_DELAY' value='300'/>
<string_constant name='DEF_SCALE_REPEAT_INTERVAL' value='100'/>
<string_constant name='DEF_SCALE_RESOLUTION' value='1'/>
<string_constant name='DEF_SCALE_SHOW_VALUE' value='1'/>
<string_constant name='DEF_SCALE_SLIDER_LENGTH' value='30'/>
<string_constant name='DEF_SCALE_SLIDER_RELIEF' value='raised'/>
<string_constant name='DEF_SCALE_STATE' value='normal'/>
<string_constant name='DEF_SCALE_TICK_INTERVAL' value='0'/>
<string_constant name='DEF_SCALE_TO' value='100'/>
<string_constant name='DEF_SCALE_TROUGH_COLOR' value='#c3c3c3'/>
<string_constant name='DEF_SCALE_TROUGH_MONO' value='White'/>
<string_constant name='DEF_SCALE_VARIABLE' value=''/>
<string_constant name='DEF_SCALE_WIDTH' value='15'/>
<string_constant name='DEF_SCROLLBAR_ACTIVE_BG_COLOR' value='systemButtonFacePressed'/>
<string_constant name='DEF_SCROLLBAR_ACTIVE_BG_MONO' value='Black'/>
<string_constant name='DEF_SCROLLBAR_ACTIVE_RELIEF' value='raised'/>
<string_constant name='DEF_SCROLLBAR_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_SCROLLBAR_BG_MONO' value='White'/>
<string_constant name='DEF_SCROLLBAR_BORDER_WIDTH' value='0'/>
<string_constant name='DEF_SCROLLBAR_COMMAND' value=''/>
<string_constant name='DEF_SCROLLBAR_CURSOR' value=''/>
<string_constant name='DEF_SCROLLBAR_EL_BORDER_WIDTH' value='-1'/>
<string_constant name='DEF_SCROLLBAR_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_SCROLLBAR_HIGHLIGHT_BG' value='systemWindowBody'/>
<string_constant name='DEF_SCROLLBAR_HIGHLIGHT_WIDTH' value='0'/>
<string_constant name='DEF_SCROLLBAR_JUMP' value='0'/>
<string_constant name='DEF_SCROLLBAR_ORIENT' value='vertical'/>
<string_constant name='DEF_SCROLLBAR_RELIEF' value='flat'/>
<string_constant name='DEF_SCROLLBAR_REPEAT_DELAY' value='300'/>
<string_constant name='DEF_SCROLLBAR_REPEAT_INTERVAL' value='100'/>
<string_constant name='DEF_SCROLLBAR_TROUGH_COLOR' value='#c3c3c3'/>
<string_constant name='DEF_SCROLLBAR_TROUGH_MONO' value='White'/>
<string_constant name='DEF_SCROLLBAR_WIDTH' value='15'/>
<string_constant name='DEF_TEXT_AUTO_SEPARATORS' value='1'/>
<string_constant name='DEF_TEXT_BG_COLOR' value='systemWindowBody'/>
<string_constant name='DEF_TEXT_BG_MONO' value='White'/>
<string_constant name='DEF_TEXT_BLOCK_CURSOR' value='0'/>
<string_constant name='DEF_TEXT_BORDER_WIDTH' value='0'/>
<string_constant name='DEF_TEXT_CURSOR' value='xterm'/>
<string_constant name='DEF_TEXT_EXPORT_SELECTION' value='1'/>
<string_constant name='DEF_TEXT_FG' value='Black'/>
<string_constant name='DEF_TEXT_FONT' value='TkFixedFont'/>
<string_constant name='DEF_TEXT_HEIGHT' value='24'/>
<string_constant name='DEF_TEXT_HIGHLIGHT' value='Black'/>
<string_constant name='DEF_TEXT_HIGHLIGHT_BG' value='systemWindowBody'/>
<string_constant name='DEF_TEXT_HIGHLIGHT_WIDTH' value='3'/>
<string_constant name='DEF_TEXT_INACTIVE_SELECT_COLOR' value='systemHighlightSecondary'/>
<string_constant name='DEF_TEXT_INSERT_BD_COLOR' value='0'/>
<string_constant name='DEF_TEXT_INSERT_BD_MONO' value='0'/>
<string_constant name='DEF_TEXT_INSERT_BG' value='Black'/>
<string_constant name='DEF_TEXT_INSERT_OFF_TIME' value='300'/>
<string_constant name='DEF_TEXT_INSERT_ON_TIME' value='600'/>
<string_constant name='DEF_TEXT_INSERT_WIDTH' value='1'/>
<string_constant name='DEF_TEXT_MAX_UNDO' value='0'/>
<string_constant name='DEF_TEXT_PADX' value='1'/>
<string_constant name='DEF_TEXT_PADY' value='1'/>
<string_constant name='DEF_TEXT_RELIEF' value='flat'/>
<string_constant name='DEF_TEXT_SELECT_BD_COLOR' value='1'/>
<string_constant name='DEF_TEXT_SELECT_BD_MONO' value='0'/>
<string_constant name='DEF_TEXT_SELECT_COLOR' value='systemHighlight'/>
<string_constant name='DEF_TEXT_SELECT_FG_MONO' value='White'/>
<string_constant name='DEF_TEXT_SELECT_MONO' value='Black'/>
<string_constant name='DEF_TEXT_SELECT_RELIEF' value='flat'/>
<string_constant name='DEF_TEXT_SET_GRID' value='0'/>
<string_constant name='DEF_TEXT_SPACING1' value='0'/>
<string_constant name='DEF_TEXT_SPACING2' value='0'/>
<string_constant name='DEF_TEXT_SPACING3' value='0'/>
<string_constant name='DEF_TEXT_STATE' value='normal'/>
<string_constant name='DEF_TEXT_TABS' value=''/>
<string_constant name='DEF_TEXT_TABSTYLE' value='tabular'/>
<string_constant name='DEF_TEXT_UNDO' value='0'/>
<string_constant name='DEF_TEXT_WIDTH' value='80'/>
<string_constant name='DEF_TEXT_WRAP' value='char'/>
<string_constant name='DEF_TEXT_XSCROLL_COMMAND' value=''/>
<string_constant name='DEF_TEXT_YSCROLL_COMMAND' value=''/>
<string_constant name='DEF_TOPLEVEL_CLASS' value='Toplevel'/>
<string_constant name='DEF_TOPLEVEL_MENU' value=''/>
<string_constant name='DEF_TOPLEVEL_SCREEN' value=''/>
<string_constant name='DEF_TOPLEVEL_USE' value=''/>
<string_constant name='DISABLED' value='#a3a3a3'/>
<string_constant name='INACTIVE_SELECT_BG' value='systemHighlightSecondary'/>
<string_constant name='INDICATOR' value='#b03060'/>
<string_constant name='NORMAL_BG' value='systemWindowBody'/>
<string_constant name='SELECT_BG' value='systemHighlight'/>
<string_constant name='TK_PATCH_LEVEL' value='8.5.9'/>
<string_constant name='TK_VERSION' value='8.5'/>
<string_constant name='TROUGH' value='#c3c3c3'/>
<string_constant name='TTK_PATCH_LEVEL' value='8.5.9'/>
<string_constant name='TTK_VERSION' value='8.5'/>
<string_constant name='WHITE' value='White'/>
<string_constant name='XNArea' value='area'/>
<string_constant name='XNAreaNeeded' value='areaNeeded'/>
<string_constant name='XNBackground' value='background'/>
<string_constant name='XNBackgroundPixmap' value='backgroundPixmap'/>
<string_constant name='XNClientWindow' value='clientWindow'/>
<string_constant name='XNColormap' value='colorMap'/>
<string_constant name='XNCursor' value='cursor'/>
<string_constant name='XNFilterEvents' value='filterEvents'/>
<string_constant name='XNFocusWindow' value='focusWindow'/>
<string_constant name='XNFontSet' value='fontSet'/>
<string_constant name='XNForeground' value='foreground'/>
<string_constant name='XNGeometryCallback' value='geometryCallback'/>
<string_constant name='XNInputStyle' value='inputStyle'/>
<string_constant name='XNLineSpace' value='lineSpace'/>
<string_constant name='XNPreeditAttributes' value='preeditAttributes'/>
<string_constant name='XNPreeditCaretCallback' value='preeditCaretCallback'/>
<string_constant name='XNPreeditDoneCallback' value='preeditDoneCallback'/>
<string_constant name='XNPreeditDrawCallback' value='preeditDrawCallback'/>
<string_constant name='XNPreeditStartCallback' value='preeditStartCallback'/>
<string_constant name='XNResourceClass' value='resourceClass'/>
<string_constant name='XNResourceName' value='resourceName'/>
<string_constant name='XNSpotLocation' value='spotLocation'/>
<string_constant name='XNStatusAttributes' value='statusAttributes'/>
<string_constant name='XNStatusDoneCallback' value='statusDoneCallback'/>
<string_constant name='XNStatusDrawCallback' value='statusDrawCallback'/>
<string_constant name='XNStatusStartCallback' value='statusStartCallback'/>
<string_constant name='XNStdColormap' value='stdColorMap'/>
<string_constant name='XNVaNestedList' value='XNVaNestedList'/>
<enum name='ALT_MASK' value64='131072'/>
<enum name='APPEARANCE_PIXEL' value64='52'/>
<enum name='ARROW_DOWN' value64='1'/>
<enum name='ARROW_LEFT' value64='2'/>
<enum name='ARROW_RIGHT' value64='3'/>
<enum name='ARROW_UP' value64='0'/>
<enum name='Above' value64='0'/>
<enum name='ActivateMask' value64='536870912'/>
<enum name='ActivateNotify' value64='36'/>
<enum name='AllHints' value64='127'/>
<enum name='AllPlanes' value64='18446744073709551615'/>
<enum name='AllTemporary' value64='0'/>
<enum name='AllValues' value64='15'/>
<enum name='AllocAll' value64='1'/>
<enum name='AllocNone' value64='0'/>
<enum name='AllowExposures' value64='1'/>
<enum name='AlreadyGrabbed' value64='1'/>
<enum name='Always' value64='2'/>
<enum name='AnyButton' value64='0'/>
<enum name='AnyKey' value64='0'/>
<enum name='AnyModifier' value64='32768'/>
<enum name='AnyPropertyType' value64='0'/>
<enum name='ArcChord' value64='0'/>
<enum name='ArcPieSlice' value64='1'/>
<enum name='AsyncBoth' value64='6'/>
<enum name='AsyncKeyboard' value64='3'/>
<enum name='AsyncPointer' value64='0'/>
<enum name='AutoRepeatModeDefault' value64='2'/>
<enum name='AutoRepeatModeOff' value64='0'/>
<enum name='AutoRepeatModeOn' value64='1'/>
<enum name='BadAccess' value64='10'/>
<enum name='BadAlloc' value64='11'/>
<enum name='BadAtom' value64='5'/>
<enum name='BadColor' value64='12'/>
<enum name='BadCursor' value64='6'/>
<enum name='BadDrawable' value64='9'/>
<enum name='BadFont' value64='7'/>
<enum name='BadGC' value64='13'/>
<enum name='BadIDChoice' value64='14'/>
<enum name='BadImplementation' value64='17'/>
<enum name='BadLength' value64='16'/>
<enum name='BadMatch' value64='8'/>
<enum name='BadName' value64='15'/>
<enum name='BadPixmap' value64='4'/>
<enum name='BadRequest' value64='1'/>
<enum name='BadValue' value64='2'/>
<enum name='BadWindow' value64='3'/>
<enum name='Below' value64='1'/>
<enum name='BitmapFileInvalid' value64='2'/>
<enum name='BitmapNoMemory' value64='3'/>
<enum name='BitmapOpenFailed' value64='1'/>
<enum name='BitmapSuccess' value64='0'/>
<enum name='BottomIf' value64='3'/>
<enum name='Button1' value64='1'/>
<enum name='Button1Mask' value64='256'/>
<enum name='Button1MotionMask' value64='256'/>
<enum name='Button2' value64='2'/>
<enum name='Button2Mask' value64='512'/>
<enum name='Button2MotionMask' value64='512'/>
<enum name='Button3' value64='3'/>
<enum name='Button3Mask' value64='1024'/>
<enum name='Button3MotionMask' value64='1024'/>
<enum name='Button4' value64='4'/>
<enum name='Button4Mask' value64='2048'/>
<enum name='Button4MotionMask' value64='2048'/>
<enum name='Button5' value64='5'/>
<enum name='Button5Mask' value64='4096'/>
<enum name='Button5MotionMask' value64='4096'/>
<enum name='ButtonMotionMask' value64='8192'/>
<enum name='ButtonPress' value64='4'/>
<enum name='ButtonPressMask' value64='4'/>
<enum name='ButtonRelease' value64='5'/>
<enum name='ButtonReleaseMask' value64='8'/>
<enum name='CONTROL_BODY_PIXEL' value64='37'/>
<enum name='CONTROL_FRAME_PIXEL' value64='39'/>
<enum name='CONTROL_TEXT_PIXEL' value64='35'/>
<enum name='CWBackPixel' value64='2'/>
<enum name='CWBackPixmap' value64='1'/>
<enum name='CWBackingPixel' value64='256'/>
<enum name='CWBackingPlanes' value64='128'/>
<enum name='CWBackingStore' value64='64'/>
<enum name='CWBitGravity' value64='16'/>
<enum name='CWBorderPixel' value64='8'/>
<enum name='CWBorderPixmap' value64='4'/>
<enum name='CWBorderWidth' value64='16'/>
<enum name='CWColormap' value64='8192'/>
<enum name='CWCursor' value64='16384'/>
<enum name='CWDontPropagate' value64='4096'/>
<enum name='CWEventMask' value64='2048'/>
<enum name='CWHeight' value64='8'/>
<enum name='CWOverrideRedirect' value64='512'/>
<enum name='CWSaveUnder' value64='1024'/>
<enum name='CWSibling' value64='32'/>
<enum name='CWStackMode' value64='64'/>
<enum name='CWWidth' value64='4'/>
<enum name='CWWinGravity' value64='32'/>
<enum name='CWX' value64='1'/>
<enum name='CWY' value64='2'/>
<enum name='CapButt' value64='1'/>
<enum name='CapNotLast' value64='0'/>
<enum name='CapProjecting' value64='3'/>
<enum name='CapRound' value64='2'/>
<enum name='CenterGravity' value64='5'/>
<enum name='CirculateNotify' value64='26'/>
<enum name='CirculateRequest' value64='27'/>
<enum name='ClientMessage' value64='33'/>
<enum name='ClipByChildren' value64='0'/>
<enum name='ColormapChangeMask' value64='8388608'/>
<enum name='ColormapInstalled' value64='1'/>
<enum name='ColormapNotify' value64='32'/>
<enum name='ColormapUninstalled' value64='0'/>
<enum name='Complex' value64='0'/>
<enum name='ConfigureNotify' value64='22'/>
<enum name='ConfigureRequest' value64='23'/>
<enum name='ControlMapIndex' value64='2'/>
<enum name='ControlMask' value64='4'/>
<enum name='Convex' value64='2'/>
<enum name='CoordModeOrigin' value64='0'/>
<enum name='CoordModePrevious' value64='1'/>
<enum name='CopyFromParent' value64='0'/>
<enum name='CreateNotify' value64='16'/>
<enum name='CurrentTime' value64='0'/>
<enum name='CursorShape' value64='0'/>
<enum name='DEF_CANVAS_SELECT_FG_COLOR' value64='0'/>
<enum name='DEF_ENTRY_SELECT_FG_COLOR' value64='0'/>
<enum name='DEF_LISTBOX_SELECT_FG_COLOR' value64='0'/>
<enum name='DEF_MENU_ENTRY_BITMAP' value64='0'/>
<enum name='DEF_TEXT_SELECT_FG_COLOR' value64='0'/>
<enum name='DeactivateNotify' value64='37'/>
<enum name='DefaultBlanking' value64='2'/>
<enum name='DefaultExposures' value64='2'/>
<enum name='DestroyAll' value64='0'/>
<enum name='DestroyNotify' value64='17'/>
<enum name='DirectColor' value64='5'/>
<enum name='DisableAccess' value64='0'/>
<enum name='DisableScreenInterval' value64='0'/>
<enum name='DisableScreenSaver' value64='0'/>
<enum name='DoBlue' value64='4'/>
<enum name='DoGreen' value64='2'/>
<enum name='DoRed' value64='1'/>
<enum name='DontAllowExposures' value64='0'/>
<enum name='DontCareState' value64='0'/>
<enum name='DontPreferBlanking' value64='0'/>
<enum name='EMBEDDED_APP_WANTS_FOCUS' value64='20'/>
<enum name='EXTENDED_MASK' value64='262144'/>
<enum name='EastGravity' value64='6'/>
<enum name='EnableAccess' value64='1'/>
<enum name='EnterNotify' value64='7'/>
<enum name='EnterWindowMask' value64='16'/>
<enum name='EvenOddRule' value64='0'/>
<enum name='Expose' value64='12'/>
<enum name='ExposureMask' value64='32768'/>
<enum name='False' value64='0'/>
<enum name='FamilyChaos' value64='2'/>
<enum name='FamilyDECnet' value64='1'/>
<enum name='FamilyInternet' value64='0'/>
<enum name='FillOpaqueStippled' value64='3'/>
<enum name='FillSolid' value64='0'/>
<enum name='FillStippled' value64='2'/>
<enum name='FillTiled' value64='1'/>
<enum name='FirstExtensionError' value64='128'/>
<enum name='FocusChangeMask' value64='2097152'/>
<enum name='FocusIn' value64='9'/>
<enum name='FocusOut' value64='10'/>
<enum name='FontChange' value64='255'/>
<enum name='FontLeftToRight' value64='0'/>
<enum name='FontRightToLeft' value64='1'/>
<enum name='ForgetGravity' value64='0'/>
<enum name='GCArcMode' value64='4194304'/>
<enum name='GCBackground' value64='8'/>
<enum name='GCCapStyle' value64='64'/>
<enum name='GCClipMask' value64='524288'/>
<enum name='GCClipXOrigin' value64='131072'/>
<enum name='GCClipYOrigin' value64='262144'/>
<enum name='GCDashList' value64='2097152'/>
<enum name='GCDashOffset' value64='1048576'/>
<enum name='GCFillRule' value64='512'/>
<enum name='GCFillStyle' value64='256'/>
<enum name='GCFont' value64='16384'/>
<enum name='GCForeground' value64='4'/>
<enum name='GCFunction' value64='1'/>
<enum name='GCGraphicsExposures' value64='65536'/>
<enum name='GCJoinStyle' value64='128'/>
<enum name='GCLastBit' value64='22'/>
<enum name='GCLineStyle' value64='32'/>
<enum name='GCLineWidth' value64='16'/>
<enum name='GCPlaneMask' value64='2'/>
<enum name='GCStipple' value64='2048'/>
<enum name='GCSubwindowMode' value64='32768'/>
<enum name='GCTile' value64='1024'/>
<enum name='GCTileStipXOrigin' value64='4096'/>
<enum name='GCTileStipYOrigin' value64='8192'/>
<enum name='GXand' value64='1'/>
<enum name='GXandInverted' value64='4'/>
<enum name='GXandReverse' value64='2'/>
<enum name='GXclear' value64='0'/>
<enum name='GXcopy' value64='3'/>
<enum name='GXcopyInverted' value64='12'/>
<enum name='GXequiv' value64='9'/>
<enum name='GXinvert' value64='10'/>
<enum name='GXnand' value64='14'/>
<enum name='GXnoop' value64='5'/>
<enum name='GXnor' value64='8'/>
<enum name='GXor' value64='7'/>
<enum name='GXorInverted' value64='13'/>
<enum name='GXorReverse' value64='11'/>
<enum name='GXset' value64='15'/>
<enum name='GXxor' value64='6'/>
<enum name='GrabFrozen' value64='4'/>
<enum name='GrabInvalidTime' value64='2'/>
<enum name='GrabModeAsync' value64='1'/>
<enum name='GrabModeSync' value64='0'/>
<enum name='GrabNotViewable' value64='3'/>
<enum name='GrabSuccess' value64='0'/>
<enum name='GraphicsExpose' value64='13'/>
<enum name='GravityNotify' value64='24'/>
<enum name='GrayScale' value64='1'/>
<enum name='HIGHLIGHT_ALTERNATE_PIXEL' value64='34'/>
<enum name='HIGHLIGHT_PIXEL' value64='31'/>
<enum name='HIGHLIGHT_SECONDARY_PIXEL' value64='32'/>
<enum name='HIGHLIGHT_TEXT_PIXEL' value64='33'/>
<enum name='HeightValue' value64='8'/>
<enum name='HostDelete' value64='1'/>
<enum name='HostInsert' value64='0'/>
<enum name='IconMaskHint' value64='32'/>
<enum name='IconPixmapHint' value64='4'/>
<enum name='IconPositionHint' value64='16'/>
<enum name='IconWindowHint' value64='8'/>
<enum name='IconicState' value64='3'/>
<enum name='InactiveState' value64='4'/>
<enum name='IncludeInferiors' value64='1'/>
<enum name='InputFocus' value64='1'/>
<enum name='InputHint' value64='1'/>
<enum name='InputOnly' value64='2'/>
<enum name='InputOutput' value64='1'/>
<enum name='IsUnmapped' value64='0'/>
<enum name='IsUnviewable' value64='1'/>
<enum name='IsViewable' value64='2'/>
<enum name='JoinBevel' value64='2'/>
<enum name='JoinMiter' value64='0'/>
<enum name='JoinRound' value64='1'/>
<enum name='KBAutoRepeatMode' value64='128'/>
<enum name='KBBellDuration' value64='8'/>
<enum name='KBBellPercent' value64='2'/>
<enum name='KBBellPitch' value64='4'/>
<enum name='KBKey' value64='64'/>
<enum name='KBKeyClickPercent' value64='1'/>
<enum name='KBLed' value64='16'/>
<enum name='KBLedMode' value64='32'/>
<enum name='KeyPress' value64='2'/>
<enum name='KeyPressMask' value64='1'/>
<enum name='KeyRelease' value64='3'/>
<enum name='KeyReleaseMask' value64='2'/>
<enum name='KeymapNotify' value64='11'/>
<enum name='KeymapStateMask' value64='16384'/>
<enum name='LASTEvent' value64='35'/>
<enum name='LSBFirst' value64='0'/>
<enum name='LastExtensionError' value64='255'/>
<enum name='LeaveNotify' value64='8'/>
<enum name='LeaveWindowMask' value64='32'/>
<enum name='LedModeOff' value64='0'/>
<enum name='LedModeOn' value64='1'/>
<enum name='LineDoubleDash' value64='2'/>
<enum name='LineOnOffDash' value64='1'/>
<enum name='LineSolid' value64='0'/>
<enum name='LockMapIndex' value64='1'/>
<enum name='LockMask' value64='2'/>
<enum name='LowerHighest' value64='1'/>
<enum name='MAC_OSX_ENTRY_BORDER' value64='2'/>
<enum name='MAC_OSX_ENTRY_RELIEF' value64='5'/>
<enum name='MAC_OSX_ENTRY_SELECT_RELIEF' value64='0'/>
<enum name='MAC_OSX_FOCUS_WIDTH' value64='3'/>
<enum name='MASK_SIZE' value64='32'/>
<enum name='MENU_ACTIVE_PIXEL' value64='43'/>
<enum name='MENU_ACTIVE_TEXT_PIXEL' value64='45'/>
<enum name='MENU_BACKGROUND_PIXEL' value64='47'/>
<enum name='MENU_DISABLED_PIXEL' value64='49'/>
<enum name='MENU_TEXT_PIXEL' value64='51'/>
<enum name='META_MASK' value64='65536'/>
<enum name='MSBFirst' value64='1'/>
<enum name='MapNotify' value64='19'/>
<enum name='MapRequest' value64='20'/>
<enum name='MappingBusy' value64='1'/>
<enum name='MappingFailed' value64='2'/>
<enum name='MappingKeyboard' value64='1'/>
<enum name='MappingModifier' value64='0'/>
<enum name='MappingNotify' value64='34'/>
<enum name='MappingPointer' value64='2'/>
<enum name='MappingSuccess' value64='0'/>
<enum name='Mod1MapIndex' value64='3'/>
<enum name='Mod1Mask' value64='8'/>
<enum name='Mod2MapIndex' value64='4'/>
<enum name='Mod2Mask' value64='16'/>
<enum name='Mod3MapIndex' value64='5'/>
<enum name='Mod3Mask' value64='32'/>
<enum name='Mod4MapIndex' value64='6'/>
<enum name='Mod4Mask' value64='64'/>
<enum name='Mod5MapIndex' value64='7'/>
<enum name='Mod5Mask' value64='128'/>
<enum name='MotionNotify' value64='6'/>
<enum name='MouseWheelEvent' value64='38'/>
<enum name='MouseWheelMask' value64='268435456'/>
<enum name='NeedFunctionPrototypes' value64='1'/>
<enum name='NeedNestedPrototypes' value64='1'/>
<enum name='NeedVarargsPrototypes' value64='0'/>
<enum name='NeedWidePrototypes' value64='1'/>
<enum name='NoEventMask' value64='0'/>
<enum name='NoExpose' value64='14'/>
<enum name='NoSymbol' value64='0'/>
<enum name='NoValue' value64='0'/>
<enum name='Nonconvex' value64='1'/>
<enum name='None' value64='0'/>
<enum name='NormalState' value64='1'/>
<enum name='NorthEastGravity' value64='3'/>
<enum name='NorthGravity' value64='2'/>
<enum name='NorthWestGravity' value64='1'/>
<enum name='NotUseful' value64='0'/>
<enum name='NotifyAncestor' value64='0'/>
<enum name='NotifyDetailNone' value64='7'/>
<enum name='NotifyGrab' value64='1'/>
<enum name='NotifyHint' value64='1'/>
<enum name='NotifyInferior' value64='2'/>
<enum name='NotifyNonlinear' value64='3'/>
<enum name='NotifyNonlinearVirtual' value64='4'/>
<enum name='NotifyNormal' value64='0'/>
<enum name='NotifyPointer' value64='5'/>
<enum name='NotifyPointerRoot' value64='6'/>
<enum name='NotifyUngrab' value64='2'/>
<enum name='NotifyVirtual' value64='1'/>
<enum name='NotifyWhileGrabbed' value64='3'/>
<enum name='Opposite' value64='4'/>
<enum name='OwnerGrabButtonMask' value64='16777216'/>
<enum name='PAllHints' value64='252'/>
<enum name='PAspect' value64='128'/>
<enum name='PBaseSize' value64='256'/>
<enum name='PIXEL_MAGIC' value64='105'/>
<enum name='PMaxSize' value64='32'/>
<enum name='PMinSize' value64='16'/>
<enum name='PPosition' value64='4'/>
<enum name='PResizeInc' value64='64'/>
<enum name='PSize' value64='8'/>
<enum name='PWinGravity' value64='512'/>
<enum name='ParentRelative' value64='1'/>
<enum name='PlaceOnBottom' value64='1'/>
<enum name='PlaceOnTop' value64='0'/>
<enum name='PointerMotionHintMask' value64='128'/>
<enum name='PointerMotionMask' value64='64'/>
<enum name='PointerRoot' value64='1'/>
<enum name='PointerWindow' value64='0'/>
<enum name='PreferBlanking' value64='1'/>
<enum name='PropModeAppend' value64='2'/>
<enum name='PropModePrepend' value64='1'/>
<enum name='PropModeReplace' value64='0'/>
<enum name='PropertyChangeMask' value64='4194304'/>
<enum name='PropertyDelete' value64='1'/>
<enum name='PropertyNewValue' value64='0'/>
<enum name='PropertyNotify' value64='28'/>
<enum name='PseudoColor' value64='3'/>
<enum name='QueuedAfterFlush' value64='2'/>
<enum name='QueuedAfterReading' value64='1'/>
<enum name='QueuedAlready' value64='0'/>
<enum name='RaiseLowest' value64='0'/>
<enum name='RectangleIn' value64='1'/>
<enum name='RectangleOut' value64='0'/>
<enum name='RectanglePart' value64='2'/>
<enum name='ReleaseByFreeingColormap' value64='1'/>
<enum name='ReparentNotify' value64='21'/>
<enum name='ReplayKeyboard' value64='5'/>
<enum name='ReplayPointer' value64='2'/>
<enum name='ResizeRedirectMask' value64='262144'/>
<enum name='ResizeRequest' value64='25'/>
<enum name='RetainPermanent' value64='1'/>
<enum name='RetainTemporary' value64='2'/>
<enum name='RevertToNone' value64='0'/>
<enum name='RevertToParent' value64='2'/>
<enum name='RevertToPointerRoot' value64='1'/>
<enum name='SELECT_FG' value64='0'/>
<enum name='ScreenSaverActive' value64='1'/>
<enum name='ScreenSaverReset' value64='0'/>
<enum name='SelectionClear' value64='29'/>
<enum name='SelectionNotify' value64='31'/>
<enum name='SelectionRequest' value64='30'/>
<enum name='SetModeDelete' value64='1'/>
<enum name='SetModeInsert' value64='0'/>
<enum name='ShiftMapIndex' value64='0'/>
<enum name='ShiftMask' value64='1'/>
<enum name='SouthEastGravity' value64='9'/>
<enum name='SouthGravity' value64='8'/>
<enum name='SouthWestGravity' value64='7'/>
<enum name='StateHint' value64='2'/>
<enum name='StaticColor' value64='2'/>
<enum name='StaticGravity' value64='10'/>
<enum name='StaticGray' value64='0'/>
<enum name='StippleShape' value64='2'/>
<enum name='StructureNotifyMask' value64='131072'/>
<enum name='SubstructureNotifyMask' value64='524288'/>
<enum name='SubstructureRedirectMask' value64='1048576'/>
<enum name='Success' value64='0'/>
<enum name='SyncBoth' value64='7'/>
<enum name='SyncKeyboard' value64='4'/>
<enum name='SyncPointer' value64='1'/>
<enum name='TKP_CLIP_PIXMAP' value64='0'/>
<enum name='TKP_CLIP_REGION' value64='1'/>
<enum name='TK_3D_DARK_GC' value64='3'/>
<enum name='TK_3D_FLAT_GC' value64='1'/>
<enum name='TK_3D_LIGHT_GC' value64='2'/>
<enum name='TK_ALL_EVENTS' value64='-3'/>
<enum name='TK_ALREADY_DEAD' value64='4'/>
<enum name='TK_ANCHOR_CENTER' value64='8'/>
<enum name='TK_ANCHOR_E' value64='2'/>
<enum name='TK_ANCHOR_N' value64='0'/>
<enum name='TK_ANCHOR_NE' value64='1'/>
<enum name='TK_ANCHOR_NW' value64='7'/>
<enum name='TK_ANCHOR_S' value64='4'/>
<enum name='TK_ANCHOR_SE' value64='3'/>
<enum name='TK_ANCHOR_SW' value64='5'/>
<enum name='TK_ANCHOR_W' value64='6'/>
<enum name='TK_ANONYMOUS_WINDOW' value64='16384'/>
<enum name='TK_ARGV_CONSTANT' value64='15'/>
<enum name='TK_ARGV_CONST_OPTION' value64='24'/>
<enum name='TK_ARGV_DONT_SKIP_FIRST_ARG' value64='8'/>
<enum name='TK_ARGV_END' value64='27'/>
<enum name='TK_ARGV_FLOAT' value64='20'/>
<enum name='TK_ARGV_FUNC' value64='21'/>
<enum name='TK_ARGV_GENFUNC' value64='22'/>
<enum name='TK_ARGV_HELP' value64='23'/>
<enum name='TK_ARGV_INT' value64='16'/>
<enum name='TK_ARGV_NO_ABBREV' value64='4'/>
<enum name='TK_ARGV_NO_DEFAULTS' value64='1'/>
<enum name='TK_ARGV_NO_LEFTOVERS' value64='2'/>
<enum name='TK_ARGV_OPTION_NAME_VALUE' value64='26'/>
<enum name='TK_ARGV_OPTION_VALUE' value64='25'/>
<enum name='TK_ARGV_REST' value64='19'/>
<enum name='TK_ARGV_STRING' value64='17'/>
<enum name='TK_ARGV_UID' value64='18'/>
<enum name='TK_AT_LEAST_ONE' value64='2'/>
<enum name='TK_BOTH_CHANGED' value64='3'/>
<enum name='TK_BOTH_HALVES' value64='1024'/>
<enum name='TK_CHECKED_IC' value64='32'/>
<enum name='TK_CLIP_INVALID' value64='2'/>
<enum name='TK_CONFIG_ACTIVE_CURSOR' value64='11'/>
<enum name='TK_CONFIG_ANCHOR' value64='13'/>
<enum name='TK_CONFIG_ARGV_ONLY' value64='1'/>
<enum name='TK_CONFIG_BITMAP' value64='7'/>
<enum name='TK_CONFIG_BOOLEAN' value64='0'/>
<enum name='TK_CONFIG_BORDER' value64='8'/>
<enum name='TK_CONFIG_CAP_STYLE' value64='15'/>
<enum name='TK_CONFIG_COLOR' value64='5'/>
<enum name='TK_CONFIG_COLOR_ONLY' value64='2'/>
<enum name='TK_CONFIG_CURSOR' value64='10'/>
<enum name='TK_CONFIG_CUSTOM' value64='20'/>
<enum name='TK_CONFIG_DONT_SET_DEFAULT' value64='8'/>
<enum name='TK_CONFIG_DOUBLE' value64='2'/>
<enum name='TK_CONFIG_END' value64='21'/>
<enum name='TK_CONFIG_FONT' value64='6'/>
<enum name='TK_CONFIG_INT' value64='1'/>
<enum name='TK_CONFIG_JOIN_STYLE' value64='16'/>
<enum name='TK_CONFIG_JUSTIFY' value64='12'/>
<enum name='TK_CONFIG_MM' value64='18'/>
<enum name='TK_CONFIG_MONO_ONLY' value64='4'/>
<enum name='TK_CONFIG_NULL_OK' value64='1'/>
<enum name='TK_CONFIG_OBJS' value64='128'/>
<enum name='TK_CONFIG_OPTION_SPECIFIED' value64='16'/>
<enum name='TK_CONFIG_PIXELS' value64='17'/>
<enum name='TK_CONFIG_RELIEF' value64='9'/>
<enum name='TK_CONFIG_STRING' value64='3'/>
<enum name='TK_CONFIG_SYNONYM' value64='14'/>
<enum name='TK_CONFIG_UID' value64='4'/>
<enum name='TK_CONFIG_USER_BIT' value64='256'/>
<enum name='TK_CONFIG_WINDOW' value64='19'/>
<enum name='TK_CONTAINER' value64='512'/>
<enum name='TK_DEFER_EVENT' value64='0'/>
<enum name='TK_DEFER_MODAL' value64='2048'/>
<enum name='TK_DISCARD_EVENT' value64='2'/>
<enum name='TK_DISPLAY_COLLAPSE_MOTION_EVENTS' value64='1'/>
<enum name='TK_DISPLAY_IN_WARP' value64='16'/>
<enum name='TK_DISPLAY_USE_IM' value64='2'/>
<enum name='TK_DISPLAY_WM_TRACING' value64='8'/>
<enum name='TK_DONT_DESTROY_WINDOW' value64='64'/>
<enum name='TK_DONT_WAIT' value64='2'/>
<enum name='TK_DRAWN_UNDER_MENU' value64='8'/>
<enum name='TK_DRAW_IN_CONTEXT' value64='1'/>
<enum name='TK_ELEMENT_STATE_ACTIVE' value64='1'/>
<enum name='TK_ELEMENT_STATE_DISABLED' value64='2'/>
<enum name='TK_ELEMENT_STATE_FOCUS' value64='4'/>
<enum name='TK_ELEMENT_STATE_PRESSED' value64='8'/>
<enum name='TK_EMBEDDED' value64='256'/>
<enum name='TK_EXCEPTION' value64='8'/>
<enum name='TK_FILE_EVENTS' value64='8'/>
<enum name='TK_FOCUSED_VIEW' value64='16'/>
<enum name='TK_FS_ITALIC' value64='1'/>
<enum name='TK_FS_OBLIQUE' value64='2'/>
<enum name='TK_FS_ROMAN' value64='0'/>
<enum name='TK_FS_UNKNOWN' value64='-1'/>
<enum name='TK_FW_BOLD' value64='1'/>
<enum name='TK_FW_NORMAL' value64='0'/>
<enum name='TK_FW_UNKNOWN' value64='-1'/>
<enum name='TK_GRAB_ANCESTOR' value64='2'/>
<enum name='TK_GRAB_EXCLUDED' value64='3'/>
<enum name='TK_GRAB_FLAG' value64='16'/>
<enum name='TK_GRAB_IN_TREE' value64='1'/>
<enum name='TK_GRAB_NONE' value64='0'/>
<enum name='TK_HAS_WRAPPER' value64='32768'/>
<enum name='TK_HOST_EXISTS' value64='4'/>
<enum name='TK_IDLE_EVENTS' value64='32'/>
<enum name='TK_IGNORE_NEWLINES' value64='16'/>
<enum name='TK_IGNORE_TABS' value64='8'/>
<enum name='TK_INTERACTIVE_PRIO' value64='80'/>
<enum name='TK_ISOLATE_END' value64='32'/>
<enum name='TK_IS_BW_PIXMAP' value64='64'/>
<enum name='TK_IS_PIXMAP' value64='32'/>
<enum name='TK_ITEM_DONT_REDRAW' value64='2'/>
<enum name='TK_ITEM_STATE_DEPENDANT' value64='1'/>
<enum name='TK_JUSTIFY_CENTER' value64='2'/>
<enum name='TK_JUSTIFY_LEFT' value64='0'/>
<enum name='TK_JUSTIFY_RIGHT' value64='1'/>
<enum name='TK_LASTEVENT' value64='39'/>
<enum name='TK_LAYOUT_WITH_BASE_CHUNKS' value64='1'/>
<enum name='TK_LOCATION_CHANGED' value64='1'/>
<enum name='TK_MACOSX_HANDLE_EVENT_IMMEDIATELY' value64='1024'/>
<enum name='TK_MAC_BUTTON_USE_COMPATIBILITY_METRICS' value64='1'/>
<enum name='TK_MAJOR_VERSION' value64='8'/>
<enum name='TK_MAPPED' value64='1'/>
<enum name='TK_MAX_PRIO' value64='100'/>
<enum name='TK_MINOR_VERSION' value64='5'/>
<enum name='TK_NEED_CONFIG_NOTIFY' value64='8'/>
<enum name='TK_NOTIFY_SHARE' value64='20'/>
<enum name='TK_NO_DOUBLE_BUFFERING' value64='1'/>
<enum name='TK_NUM_SAVED_OPTIONS' value64='20'/>
<enum name='TK_OFFSET_BOTTOM' value64='128'/>
<enum name='TK_OFFSET_CENTER' value64='8'/>
<enum name='TK_OFFSET_INDEX' value64='1'/>
<enum name='TK_OFFSET_LEFT' value64='4'/>
<enum name='TK_OFFSET_MIDDLE' value64='64'/>
<enum name='TK_OFFSET_RELATIVE' value64='2'/>
<enum name='TK_OFFSET_RIGHT' value64='16'/>
<enum name='TK_OFFSET_TOP' value64='32'/>
<enum name='TK_OPTION_ANCHOR' value64='12'/>
<enum name='TK_OPTION_ANY' value64='3'/>
<enum name='TK_OPTION_BITMAP' value64='7'/>
<enum name='TK_OPTION_BOOLEAN' value64='0'/>
<enum name='TK_OPTION_BORDER' value64='8'/>
<enum name='TK_OPTION_COLOR' value64='5'/>
<enum name='TK_OPTION_CURSOR' value64='10'/>
<enum name='TK_OPTION_CUSTOM' value64='17'/>
<enum name='TK_OPTION_DONT_SET_DEFAULT' value64='8'/>
<enum name='TK_OPTION_DOUBLE' value64='2'/>
<enum name='TK_OPTION_END' value64='16'/>
<enum name='TK_OPTION_FONT' value64='6'/>
<enum name='TK_OPTION_INT' value64='1'/>
<enum name='TK_OPTION_JUSTIFY' value64='11'/>
<enum name='TK_OPTION_NULL_OK' value64='1'/>
<enum name='TK_OPTION_PIXELS' value64='14'/>
<enum name='TK_OPTION_RELIEF' value64='9'/>
<enum name='TK_OPTION_STRING' value64='3'/>
<enum name='TK_OPTION_STRING_TABLE' value64='4'/>
<enum name='TK_OPTION_STYLE' value64='18'/>
<enum name='TK_OPTION_SYNONYM' value64='13'/>
<enum name='TK_OPTION_WINDOW' value64='15'/>
<enum name='TK_PARENT_WINDOW' value64='1'/>
<enum name='TK_PARTIAL_OK' value64='4'/>
<enum name='TK_PHOTO_COMPOSITE_OVERLAY' value64='0'/>
<enum name='TK_PHOTO_COMPOSITE_SET' value64='1'/>
<enum name='TK_PROCESS_EVENT' value64='1'/>
<enum name='TK_PROP_PROPCHANGE' value64='262144'/>
<enum name='TK_READABLE' value64='2'/>
<enum name='TK_RELEASE_LEVEL' value64='2'/>
<enum name='TK_RELEASE_SERIAL' value64='9'/>
<enum name='TK_RELIEF_FLAT' value64='0'/>
<enum name='TK_RELIEF_GROOVE' value64='1'/>
<enum name='TK_RELIEF_NULL' value64='-1'/>
<enum name='TK_RELIEF_RAISED' value64='2'/>
<enum name='TK_RELIEF_RIDGE' value64='3'/>
<enum name='TK_RELIEF_SOLID' value64='4'/>
<enum name='TK_RELIEF_SUNKEN' value64='5'/>
<enum name='TK_REPARENTED' value64='8192'/>
<enum name='TK_SCROLLBAR_GROW' value64='1'/>
<enum name='TK_SCROLL_ERROR' value64='4'/>
<enum name='TK_SCROLL_MOVETO' value64='1'/>
<enum name='TK_SCROLL_PAGES' value64='2'/>
<enum name='TK_SCROLL_UNITS' value64='3'/>
<enum name='TK_SIZE_CHANGED' value64='2'/>
<enum name='TK_STARTUP_FILE_PRIO' value64='40'/>
<enum name='TK_STATE_ACTIVE' value64='0'/>
<enum name='TK_STATE_DISABLED' value64='1'/>
<enum name='TK_STATE_HIDDEN' value64='3'/>
<enum name='TK_STATE_NORMAL' value64='2'/>
<enum name='TK_STATE_NULL' value64='-1'/>
<enum name='TK_STYLE_VERSION' value64='1'/>
<enum name='TK_STYLE_VERSION_1' value64='1'/>
<enum name='TK_STYLE_VERSION_2' value64='2'/>
<enum name='TK_SW_CONDENSE' value64='1'/>
<enum name='TK_SW_EXPAND' value64='2'/>
<enum name='TK_SW_NORMAL' value64='0'/>
<enum name='TK_SW_UNKNOWN' value64='3'/>
<enum name='TK_TAG_SPACE' value64='3'/>
<enum name='TK_TIMER_EVENTS' value64='16'/>
<enum name='TK_TOP_HIERARCHY' value64='131072'/>
<enum name='TK_TOP_LEVEL' value64='2'/>
<enum name='TK_USER_DEFAULT_PRIO' value64='60'/>
<enum name='TK_WHOLE_WORDS' value64='1'/>
<enum name='TK_WIDGET_DEFAULT_PRIO' value64='20'/>
<enum name='TK_WINDOW_EVENTS' value64='4'/>
<enum name='TK_WINDOW_ONLY' value64='0'/>
<enum name='TK_WIN_MANAGED' value64='65536'/>
<enum name='TK_WM_COLORMAP_WINDOW' value64='128'/>
<enum name='TK_WM_MANAGEABLE' value64='524288'/>
<enum name='TK_WRAPPER' value64='4096'/>
<enum name='TK_WRITABLE' value64='4'/>
<enum name='TK_X_EVENTS' value64='4'/>
<enum name='TRANSPARENT_PIXEL' value64='30'/>
<enum name='TTK_BORDER' value64='512'/>
<enum name='TTK_BUTTON_DEFAULT_ACTIVE' value64='1'/>
<enum name='TTK_BUTTON_DEFAULT_DISABLED' value64='2'/>
<enum name='TTK_BUTTON_DEFAULT_NORMAL' value64='0'/>
<enum name='TTK_COMPOUND_BOTTOM' value64='5'/>
<enum name='TTK_COMPOUND_CENTER' value64='3'/>
<enum name='TTK_COMPOUND_IMAGE' value64='2'/>
<enum name='TTK_COMPOUND_LEFT' value64='6'/>
<enum name='TTK_COMPOUND_NONE' value64='0'/>
<enum name='TTK_COMPOUND_RIGHT' value64='7'/>
<enum name='TTK_COMPOUND_TEXT' value64='1'/>
<enum name='TTK_COMPOUND_TOP' value64='4'/>
<enum name='TTK_EXPAND' value64='256'/>
<enum name='TTK_FILL_BOTH' value64='15'/>
<enum name='TTK_FILL_X' value64='3'/>
<enum name='TTK_FILL_Y' value64='12'/>
<enum name='TTK_ORIENT_HORIZONTAL' value64='0'/>
<enum name='TTK_ORIENT_VERTICAL' value64='1'/>
<enum name='TTK_PACK_BOTTOM' value64='128'/>
<enum name='TTK_PACK_LEFT' value64='16'/>
<enum name='TTK_PACK_RIGHT' value64='32'/>
<enum name='TTK_PACK_TOP' value64='64'/>
<enum name='TTK_SIDE_BOTTOM' value64='3'/>
<enum name='TTK_SIDE_LEFT' value64='0'/>
<enum name='TTK_SIDE_RIGHT' value64='2'/>
<enum name='TTK_SIDE_TOP' value64='1'/>
<enum name='TTK_STATE_ACTIVE' value64='1'/>
<enum name='TTK_STATE_ALTERNATE' value64='64'/>
<enum name='TTK_STATE_BACKGROUND' value64='32'/>
<enum name='TTK_STATE_DISABLED' value64='2'/>
<enum name='TTK_STATE_FOCUS' value64='4'/>
<enum name='TTK_STATE_HOVER' value64='512'/>
<enum name='TTK_STATE_INVALID' value64='128'/>
<enum name='TTK_STATE_PRESSED' value64='8'/>
<enum name='TTK_STATE_READONLY' value64='256'/>
<enum name='TTK_STATE_SELECTED' value64='16'/>
<enum name='TTK_STATE_USER1' value64='32768'/>
<enum name='TTK_STATE_USER2' value64='16384'/>
<enum name='TTK_STATE_USER3' value64='8192'/>
<enum name='TTK_STATE_USER4' value64='4096'/>
<enum name='TTK_STATE_USER5' value64='2048'/>
<enum name='TTK_STATE_USER6' value64='1024'/>
<enum name='TTK_STICK_E' value64='2'/>
<enum name='TTK_STICK_N' value64='4'/>
<enum name='TTK_STICK_S' value64='8'/>
<enum name='TTK_STICK_W' value64='1'/>
<enum name='TTK_STUBS_EPOCH' value64='0'/>
<enum name='TTK_STUBS_REVISION' value64='31'/>
<enum name='TTK_UNIT' value64='1024'/>
<enum name='TileShape' value64='1'/>
<enum name='TopIf' value64='2'/>
<enum name='True' value64='1'/>
<enum name='TrueColor' value64='4'/>
<enum name='USPosition' value64='1'/>
<enum name='USSize' value64='2'/>
<enum name='UnmapGravity' value64='0'/>
<enum name='UnmapNotify' value64='18'/>
<enum name='Unsorted' value64='0'/>
<enum name='VirtualEvent' value64='35'/>
<enum name='VirtualEventMask' value64='1073741824'/>
<enum name='VisibilityChangeMask' value64='65536'/>
<enum name='VisibilityFullyObscured' value64='2'/>
<enum name='VisibilityNotify' value64='15'/>
<enum name='VisibilityPartiallyObscured' value64='1'/>
<enum name='VisibilityUnobscured' value64='0'/>
<enum name='VisualAllMask' value64='511'/>
<enum name='VisualBitsPerRGBMask' value64='256'/>
<enum name='VisualBlueMaskMask' value64='64'/>
<enum name='VisualClassMask' value64='8'/>
<enum name='VisualColormapSizeMask' value64='128'/>
<enum name='VisualDepthMask' value64='4'/>
<enum name='VisualGreenMaskMask' value64='32'/>
<enum name='VisualIDMask' value64='1'/>
<enum name='VisualNoMask' value64='0'/>
<enum name='VisualRedMaskMask' value64='16'/>
<enum name='VisualScreenMask' value64='2'/>
<enum name='WINDOW_BODY_PIXEL' value64='41'/>
<enum name='WestGravity' value64='4'/>
<enum name='WhenMapped' value64='1'/>
<enum name='WidthValue' value64='4'/>
<enum name='WindingRule' value64='1'/>
<enum name='WindowGroupHint' value64='64'/>
<enum name='WithdrawnState' value64='0'/>
<enum name='XATOM_H' value64='1'/>
<enum name='XA_ARC' value64='3'/>
<enum name='XA_ATOM' value64='4'/>
<enum name='XA_BITMAP' value64='5'/>
<enum name='XA_CAP_HEIGHT' value64='66'/>
<enum name='XA_CARDINAL' value64='6'/>
<enum name='XA_COLORMAP' value64='7'/>
<enum name='XA_COPYRIGHT' value64='61'/>
<enum name='XA_CURSOR' value64='8'/>
<enum name='XA_CUT_BUFFER0' value64='9'/>
<enum name='XA_CUT_BUFFER1' value64='10'/>
<enum name='XA_CUT_BUFFER2' value64='11'/>
<enum name='XA_CUT_BUFFER3' value64='12'/>
<enum name='XA_CUT_BUFFER4' value64='13'/>
<enum name='XA_CUT_BUFFER5' value64='14'/>
<enum name='XA_CUT_BUFFER6' value64='15'/>
<enum name='XA_CUT_BUFFER7' value64='16'/>
<enum name='XA_DRAWABLE' value64='17'/>
<enum name='XA_END_SPACE' value64='46'/>
<enum name='XA_FAMILY_NAME' value64='64'/>
<enum name='XA_FONT' value64='18'/>
<enum name='XA_FONT_NAME' value64='63'/>
<enum name='XA_FULL_NAME' value64='65'/>
<enum name='XA_INTEGER' value64='19'/>
<enum name='XA_ITALIC_ANGLE' value64='55'/>
<enum name='XA_LAST_PREDEFINED' value64='68'/>
<enum name='XA_MAX_SPACE' value64='45'/>
<enum name='XA_MIN_SPACE' value64='43'/>
<enum name='XA_NORM_SPACE' value64='44'/>
<enum name='XA_NOTICE' value64='62'/>
<enum name='XA_PIXMAP' value64='20'/>
<enum name='XA_POINT' value64='21'/>
<enum name='XA_POINT_SIZE' value64='59'/>
<enum name='XA_PRIMARY' value64='1'/>
<enum name='XA_QUAD_WIDTH' value64='57'/>
<enum name='XA_RECTANGLE' value64='22'/>
<enum name='XA_RESOLUTION' value64='60'/>
<enum name='XA_RESOURCE_MANAGER' value64='23'/>
<enum name='XA_RGB_BEST_MAP' value64='25'/>
<enum name='XA_RGB_BLUE_MAP' value64='26'/>
<enum name='XA_RGB_COLOR_MAP' value64='24'/>
<enum name='XA_RGB_DEFAULT_MAP' value64='27'/>
<enum name='XA_RGB_GRAY_MAP' value64='28'/>
<enum name='XA_RGB_GREEN_MAP' value64='29'/>
<enum name='XA_RGB_RED_MAP' value64='30'/>
<enum name='XA_SECONDARY' value64='2'/>
<enum name='XA_STRIKEOUT_ASCENT' value64='53'/>
<enum name='XA_STRIKEOUT_DESCENT' value64='54'/>
<enum name='XA_STRING' value64='31'/>
<enum name='XA_SUBSCRIPT_X' value64='49'/>
<enum name='XA_SUBSCRIPT_Y' value64='50'/>
<enum name='XA_SUPERSCRIPT_X' value64='47'/>
<enum name='XA_SUPERSCRIPT_Y' value64='48'/>
<enum name='XA_UNDERLINE_POSITION' value64='51'/>
<enum name='XA_UNDERLINE_THICKNESS' value64='52'/>
<enum name='XA_VISUALID' value64='32'/>
<enum name='XA_WEIGHT' value64='58'/>
<enum name='XA_WINDOW' value64='33'/>
<enum name='XA_WM_CLASS' value64='67'/>
<enum name='XA_WM_CLIENT_MACHINE' value64='36'/>
<enum name='XA_WM_COMMAND' value64='34'/>
<enum name='XA_WM_HINTS' value64='35'/>
<enum name='XA_WM_ICON_NAME' value64='37'/>
<enum name='XA_WM_ICON_SIZE' value64='38'/>
<enum name='XA_WM_NAME' value64='39'/>
<enum name='XA_WM_NORMAL_HINTS' value64='40'/>
<enum name='XA_WM_SIZE_HINTS' value64='41'/>
<enum name='XA_WM_TRANSIENT_FOR' value64='68'/>
<enum name='XA_WM_ZOOM_HINTS' value64='42'/>
<enum name='XA_X_HEIGHT' value64='56'/>
<enum name='XBufferOverflow' value64='-1'/>
<enum name='XCNOENT' value64='2'/>
<enum name='XCNOMEM' value64='1'/>
<enum name='XCSUCCESS' value64='0'/>
<enum name='XC_X_cursor' value64='0'/>
<enum name='XC_arrow' value64='2'/>
<enum name='XC_based_arrow_down' value64='4'/>
<enum name='XC_based_arrow_up' value64='6'/>
<enum name='XC_boat' value64='8'/>
<enum name='XC_bogosity' value64='10'/>
<enum name='XC_bottom_left_corner' value64='12'/>
<enum name='XC_bottom_right_corner' value64='14'/>
<enum name='XC_bottom_side' value64='16'/>
<enum name='XC_bottom_tee' value64='18'/>
<enum name='XC_box_spiral' value64='20'/>
<enum name='XC_center_ptr' value64='22'/>
<enum name='XC_circle' value64='24'/>
<enum name='XC_clock' value64='26'/>
<enum name='XC_coffee_mug' value64='28'/>
<enum name='XC_cross' value64='30'/>
<enum name='XC_cross_reverse' value64='32'/>
<enum name='XC_crosshair' value64='34'/>
<enum name='XC_diamond_cross' value64='36'/>
<enum name='XC_dot' value64='38'/>
<enum name='XC_dotbox' value64='40'/>
<enum name='XC_double_arrow' value64='42'/>
<enum name='XC_draft_large' value64='44'/>
<enum name='XC_draft_small' value64='46'/>
<enum name='XC_draped_box' value64='48'/>
<enum name='XC_exchange' value64='50'/>
<enum name='XC_fleur' value64='52'/>
<enum name='XC_gobbler' value64='54'/>
<enum name='XC_gumby' value64='56'/>
<enum name='XC_hand1' value64='58'/>
<enum name='XC_hand2' value64='60'/>
<enum name='XC_heart' value64='62'/>
<enum name='XC_icon' value64='64'/>
<enum name='XC_iron_cross' value64='66'/>
<enum name='XC_left_ptr' value64='68'/>
<enum name='XC_left_side' value64='70'/>
<enum name='XC_left_tee' value64='72'/>
<enum name='XC_leftbutton' value64='74'/>
<enum name='XC_ll_angle' value64='76'/>
<enum name='XC_lr_angle' value64='78'/>
<enum name='XC_man' value64='80'/>
<enum name='XC_middlebutton' value64='82'/>
<enum name='XC_mouse' value64='84'/>
<enum name='XC_num_glyphs' value64='154'/>
<enum name='XC_pencil' value64='86'/>
<enum name='XC_pirate' value64='88'/>
<enum name='XC_plus' value64='90'/>
<enum name='XC_question_arrow' value64='92'/>
<enum name='XC_right_ptr' value64='94'/>
<enum name='XC_right_side' value64='96'/>
<enum name='XC_right_tee' value64='98'/>
<enum name='XC_rightbutton' value64='100'/>
<enum name='XC_rtl_logo' value64='102'/>
<enum name='XC_sailboat' value64='104'/>
<enum name='XC_sb_down_arrow' value64='106'/>
<enum name='XC_sb_h_double_arrow' value64='108'/>
<enum name='XC_sb_left_arrow' value64='110'/>
<enum name='XC_sb_right_arrow' value64='112'/>
<enum name='XC_sb_up_arrow' value64='114'/>
<enum name='XC_sb_v_double_arrow' value64='116'/>
<enum name='XC_shuttle' value64='118'/>
<enum name='XC_sizing' value64='120'/>
<enum name='XC_spider' value64='122'/>
<enum name='XC_spraycan' value64='124'/>
<enum name='XC_star' value64='126'/>
<enum name='XC_target' value64='128'/>
<enum name='XC_tcross' value64='130'/>
<enum name='XC_top_left_arrow' value64='132'/>
<enum name='XC_top_left_corner' value64='134'/>
<enum name='XC_top_right_corner' value64='136'/>
<enum name='XC_top_side' value64='138'/>
<enum name='XC_top_tee' value64='140'/>
<enum name='XC_trek' value64='142'/>
<enum name='XC_ul_angle' value64='144'/>
<enum name='XC_umbrella' value64='146'/>
<enum name='XC_ur_angle' value64='148'/>
<enum name='XC_watch' value64='150'/>
<enum name='XC_xterm' value64='152'/>
<enum name='XCompoundTextStyle' value64='1'/>
<enum name='XConverterNotFound' value64='-3'/>
<enum name='XIMAbsolutePosition' value64='10'/>
<enum name='XIMBackwardChar' value64='1'/>
<enum name='XIMBackwardWord' value64='3'/>
<enum name='XIMBitmapType' value64='1'/>
<enum name='XIMCaretDown' value64='5'/>
<enum name='XIMCaretUp' value64='4'/>
<enum name='XIMDontChange' value64='11'/>
<enum name='XIMForwardChar' value64='0'/>
<enum name='XIMForwardWord' value64='2'/>
<enum name='XIMHighlight' value64='4'/>
<enum name='XIMIsInvisible' value64='0'/>
<enum name='XIMIsPrimary' value64='1'/>
<enum name='XIMIsSecondary' value64='2'/>
<enum name='XIMLineEnd' value64='9'/>
<enum name='XIMLineStart' value64='8'/>
<enum name='XIMNextLine' value64='6'/>
<enum name='XIMPreeditArea' value64='1'/>
<enum name='XIMPreeditCallbacks' value64='2'/>
<enum name='XIMPreeditNone' value64='16'/>
<enum name='XIMPreeditNothing' value64='8'/>
<enum name='XIMPreeditPosition' value64='4'/>
<enum name='XIMPreviousLine' value64='7'/>
<enum name='XIMPrimary' value64='32'/>
<enum name='XIMReverse' value64='1'/>
<enum name='XIMSecondary' value64='64'/>
<enum name='XIMStatusArea' value64='256'/>
<enum name='XIMStatusCallbacks' value64='512'/>
<enum name='XIMStatusNone' value64='2048'/>
<enum name='XIMStatusNothing' value64='1024'/>
<enum name='XIMTertiary' value64='128'/>
<enum name='XIMTextType' value64='0'/>
<enum name='XIMUnderline' value64='2'/>
<enum name='XK_0' value64='48'/>
<enum name='XK_1' value64='49'/>
<enum name='XK_2' value64='50'/>
<enum name='XK_3' value64='51'/>
<enum name='XK_4' value64='52'/>
<enum name='XK_5' value64='53'/>
<enum name='XK_6' value64='54'/>
<enum name='XK_7' value64='55'/>
<enum name='XK_8' value64='56'/>
<enum name='XK_9' value64='57'/>
<enum name='XK_A' value64='65'/>
<enum name='XK_AE' value64='198'/>
<enum name='XK_Aacute' value64='193'/>
<enum name='XK_Abreve' value64='451'/>
<enum name='XK_Acircumflex' value64='194'/>
<enum name='XK_Adiaeresis' value64='196'/>
<enum name='XK_Agrave' value64='192'/>
<enum name='XK_Alt_L' value64='65513'/>
<enum name='XK_Alt_R' value64='65514'/>
<enum name='XK_Amacron' value64='960'/>
<enum name='XK_Aogonek' value64='417'/>
<enum name='XK_App' value64='65373'/>
<enum name='XK_Aring' value64='197'/>
<enum name='XK_Atilde' value64='195'/>
<enum name='XK_B' value64='66'/>
<enum name='XK_BackSpace' value64='65288'/>
<enum name='XK_Begin' value64='65368'/>
<enum name='XK_Break' value64='65387'/>
<enum name='XK_C' value64='67'/>
<enum name='XK_Cabovedot' value64='709'/>
<enum name='XK_Cacute' value64='454'/>
<enum name='XK_Cancel' value64='65385'/>
<enum name='XK_Caps_Lock' value64='65509'/>
<enum name='XK_Ccaron' value64='456'/>
<enum name='XK_Ccedilla' value64='199'/>
<enum name='XK_Ccircumflex' value64='710'/>
<enum name='XK_Clear' value64='65291'/>
<enum name='XK_Control_L' value64='65507'/>
<enum name='XK_Control_R' value64='65508'/>
<enum name='XK_D' value64='68'/>
<enum name='XK_Dcaron' value64='463'/>
<enum name='XK_Delete' value64='65535'/>
<enum name='XK_Down' value64='65364'/>
<enum name='XK_Dstroke' value64='464'/>
<enum name='XK_E' value64='69'/>
<enum name='XK_ENG' value64='957'/>
<enum name='XK_ETH' value64='208'/>
<enum name='XK_Eabovedot' value64='972'/>
<enum name='XK_Eacute' value64='201'/>
<enum name='XK_Ecaron' value64='460'/>
<enum name='XK_Ecircumflex' value64='202'/>
<enum name='XK_Ediaeresis' value64='203'/>
<enum name='XK_Egrave' value64='200'/>
<enum name='XK_Eisu_Shift' value64='65327'/>
<enum name='XK_Eisu_toggle' value64='65328'/>
<enum name='XK_Emacron' value64='938'/>
<enum name='XK_End' value64='65367'/>
<enum name='XK_Eogonek' value64='458'/>
<enum name='XK_Escape' value64='65307'/>
<enum name='XK_Eth' value64='208'/>
<enum name='XK_Execute' value64='65378'/>
<enum name='XK_F' value64='70'/>
<enum name='XK_F1' value64='65470'/>
<enum name='XK_F10' value64='65479'/>
<enum name='XK_F11' value64='65480'/>
<enum name='XK_F12' value64='65481'/>
<enum name='XK_F13' value64='65482'/>
<enum name='XK_F14' value64='65483'/>
<enum name='XK_F15' value64='65484'/>
<enum name='XK_F16' value64='65485'/>
<enum name='XK_F17' value64='65486'/>
<enum name='XK_F18' value64='65487'/>
<enum name='XK_F19' value64='65488'/>
<enum name='XK_F2' value64='65471'/>
<enum name='XK_F20' value64='65489'/>
<enum name='XK_F21' value64='65490'/>
<enum name='XK_F22' value64='65491'/>
<enum name='XK_F23' value64='65492'/>
<enum name='XK_F24' value64='65493'/>
<enum name='XK_F25' value64='65494'/>
<enum name='XK_F26' value64='65495'/>
<enum name='XK_F27' value64='65496'/>
<enum name='XK_F28' value64='65497'/>
<enum name='XK_F29' value64='65498'/>
<enum name='XK_F3' value64='65472'/>
<enum name='XK_F30' value64='65499'/>
<enum name='XK_F31' value64='65500'/>
<enum name='XK_F32' value64='65501'/>
<enum name='XK_F33' value64='65502'/>
<enum name='XK_F34' value64='65503'/>
<enum name='XK_F35' value64='65504'/>
<enum name='XK_F4' value64='65473'/>
<enum name='XK_F5' value64='65474'/>
<enum name='XK_F6' value64='65475'/>
<enum name='XK_F7' value64='65476'/>
<enum name='XK_F8' value64='65477'/>
<enum name='XK_F9' value64='65478'/>
<enum name='XK_Find' value64='65384'/>
<enum name='XK_G' value64='71'/>
<enum name='XK_Gabovedot' value64='725'/>
<enum name='XK_Gbreve' value64='683'/>
<enum name='XK_Gcedilla' value64='939'/>
<enum name='XK_Gcircumflex' value64='728'/>
<enum name='XK_Greek_ALPHA' value64='1985'/>
<enum name='XK_Greek_ALPHAaccent' value64='1953'/>
<enum name='XK_Greek_BETA' value64='1986'/>
<enum name='XK_Greek_CHI' value64='2007'/>
<enum name='XK_Greek_DELTA' value64='1988'/>
<enum name='XK_Greek_EPSILON' value64='1989'/>
<enum name='XK_Greek_EPSILONaccent' value64='1954'/>
<enum name='XK_Greek_ETA' value64='1991'/>
<enum name='XK_Greek_ETAaccent' value64='1955'/>
<enum name='XK_Greek_GAMMA' value64='1987'/>
<enum name='XK_Greek_IOTA' value64='1993'/>
<enum name='XK_Greek_IOTAaccent' value64='1956'/>
<enum name='XK_Greek_IOTAdiaeresis' value64='1957'/>
<enum name='XK_Greek_KAPPA' value64='1994'/>
<enum name='XK_Greek_LAMBDA' value64='1995'/>
<enum name='XK_Greek_LAMDA' value64='1995'/>
<enum name='XK_Greek_MU' value64='1996'/>
<enum name='XK_Greek_NU' value64='1997'/>
<enum name='XK_Greek_OMEGA' value64='2009'/>
<enum name='XK_Greek_OMEGAaccent' value64='1963'/>
<enum name='XK_Greek_OMICRON' value64='1999'/>
<enum name='XK_Greek_OMICRONaccent' value64='1959'/>
<enum name='XK_Greek_PHI' value64='2006'/>
<enum name='XK_Greek_PI' value64='2000'/>
<enum name='XK_Greek_PSI' value64='2008'/>
<enum name='XK_Greek_RHO' value64='2001'/>
<enum name='XK_Greek_SIGMA' value64='2002'/>
<enum name='XK_Greek_TAU' value64='2004'/>
<enum name='XK_Greek_THETA' value64='1992'/>
<enum name='XK_Greek_UPSILON' value64='2005'/>
<enum name='XK_Greek_UPSILONaccent' value64='1960'/>
<enum name='XK_Greek_UPSILONdieresis' value64='1961'/>
<enum name='XK_Greek_XI' value64='1998'/>
<enum name='XK_Greek_ZETA' value64='1990'/>
<enum name='XK_Greek_accentdieresis' value64='1966'/>
<enum name='XK_Greek_alpha' value64='2017'/>
<enum name='XK_Greek_alphaaccent' value64='1969'/>
<enum name='XK_Greek_beta' value64='2018'/>
<enum name='XK_Greek_chi' value64='2039'/>
<enum name='XK_Greek_delta' value64='2020'/>
<enum name='XK_Greek_epsilon' value64='2021'/>
<enum name='XK_Greek_epsilonaccent' value64='1970'/>
<enum name='XK_Greek_eta' value64='2023'/>
<enum name='XK_Greek_etaaccent' value64='1971'/>
<enum name='XK_Greek_finalsmallsigma' value64='2035'/>
<enum name='XK_Greek_gamma' value64='2019'/>
<enum name='XK_Greek_horizbar' value64='1967'/>
<enum name='XK_Greek_iota' value64='2025'/>
<enum name='XK_Greek_iotaaccent' value64='1972'/>
<enum name='XK_Greek_iotaaccentdieresis' value64='1974'/>
<enum name='XK_Greek_iotadieresis' value64='1973'/>
<enum name='XK_Greek_kappa' value64='2026'/>
<enum name='XK_Greek_lambda' value64='2027'/>
<enum name='XK_Greek_lamda' value64='2027'/>
<enum name='XK_Greek_mu' value64='2028'/>
<enum name='XK_Greek_nu' value64='2029'/>
<enum name='XK_Greek_omega' value64='2041'/>
<enum name='XK_Greek_omegaaccent' value64='1979'/>
<enum name='XK_Greek_omicron' value64='2031'/>
<enum name='XK_Greek_omicronaccent' value64='1975'/>
<enum name='XK_Greek_phi' value64='2038'/>
<enum name='XK_Greek_pi' value64='2032'/>
<enum name='XK_Greek_psi' value64='2040'/>
<enum name='XK_Greek_rho' value64='2033'/>
<enum name='XK_Greek_sigma' value64='2034'/>
<enum name='XK_Greek_switch' value64='65406'/>
<enum name='XK_Greek_tau' value64='2036'/>
<enum name='XK_Greek_theta' value64='2024'/>
<enum name='XK_Greek_upsilon' value64='2037'/>
<enum name='XK_Greek_upsilonaccent' value64='1976'/>
<enum name='XK_Greek_upsilonaccentdieresis' value64='1978'/>
<enum name='XK_Greek_upsilondieresis' value64='1977'/>
<enum name='XK_Greek_xi' value64='2030'/>
<enum name='XK_Greek_zeta' value64='2022'/>
<enum name='XK_H' value64='72'/>
<enum name='XK_Hankaku' value64='65321'/>
<enum name='XK_Hcircumflex' value64='678'/>
<enum name='XK_Help' value64='65386'/>
<enum name='XK_Henkan' value64='65315'/>
<enum name='XK_Henkan_Mode' value64='65315'/>
<enum name='XK_Hiragana' value64='65317'/>
<enum name='XK_Hiragana_Katakana' value64='65319'/>
<enum name='XK_Home' value64='65360'/>
<enum name='XK_Hstroke' value64='673'/>
<enum name='XK_Hyper_L' value64='65517'/>
<enum name='XK_Hyper_R' value64='65518'/>
<enum name='XK_I' value64='73'/>
<enum name='XK_Iabovedot' value64='681'/>
<enum name='XK_Iacute' value64='205'/>
<enum name='XK_Icircumflex' value64='206'/>
<enum name='XK_Idiaeresis' value64='207'/>
<enum name='XK_Igrave' value64='204'/>
<enum name='XK_Imacron' value64='975'/>
<enum name='XK_Insert' value64='65379'/>
<enum name='XK_Iogonek' value64='967'/>
<enum name='XK_Itilde' value64='933'/>
<enum name='XK_J' value64='74'/>
<enum name='XK_Jcircumflex' value64='684'/>
<enum name='XK_K' value64='75'/>
<enum name='XK_KP_0' value64='65456'/>
<enum name='XK_KP_1' value64='65457'/>
<enum name='XK_KP_2' value64='65458'/>
<enum name='XK_KP_3' value64='65459'/>
<enum name='XK_KP_4' value64='65460'/>
<enum name='XK_KP_5' value64='65461'/>
<enum name='XK_KP_6' value64='65462'/>
<enum name='XK_KP_7' value64='65463'/>
<enum name='XK_KP_8' value64='65464'/>
<enum name='XK_KP_9' value64='65465'/>
<enum name='XK_KP_Add' value64='65451'/>
<enum name='XK_KP_Begin' value64='65437'/>
<enum name='XK_KP_Decimal' value64='65454'/>
<enum name='XK_KP_Delete' value64='65439'/>
<enum name='XK_KP_Divide' value64='65455'/>
<enum name='XK_KP_Down' value64='65433'/>
<enum name='XK_KP_End' value64='65436'/>
<enum name='XK_KP_Enter' value64='65421'/>
<enum name='XK_KP_Equal' value64='65469'/>
<enum name='XK_KP_F1' value64='65425'/>
<enum name='XK_KP_F2' value64='65426'/>
<enum name='XK_KP_F3' value64='65427'/>
<enum name='XK_KP_F4' value64='65428'/>
<enum name='XK_KP_Home' value64='65429'/>
<enum name='XK_KP_Insert' value64='65438'/>
<enum name='XK_KP_Left' value64='65430'/>
<enum name='XK_KP_Multiply' value64='65450'/>
<enum name='XK_KP_Next' value64='65435'/>
<enum name='XK_KP_Page_Down' value64='65435'/>
<enum name='XK_KP_Page_Up' value64='65434'/>
<enum name='XK_KP_Prior' value64='65434'/>
<enum name='XK_KP_Right' value64='65432'/>
<enum name='XK_KP_Separator' value64='65452'/>
<enum name='XK_KP_Space' value64='65408'/>
<enum name='XK_KP_Subtract' value64='65453'/>
<enum name='XK_KP_Tab' value64='65417'/>
<enum name='XK_KP_Up' value64='65431'/>
<enum name='XK_Kana_Lock' value64='65325'/>
<enum name='XK_Kana_Shift' value64='65326'/>
<enum name='XK_Kanji' value64='65313'/>
<enum name='XK_Katakana' value64='65318'/>
<enum name='XK_Kcedilla' value64='979'/>
<enum name='XK_L' value64='76'/>
<enum name='XK_L1' value64='65480'/>
<enum name='XK_L10' value64='65489'/>
<enum name='XK_L2' value64='65481'/>
<enum name='XK_L3' value64='65482'/>
<enum name='XK_L4' value64='65483'/>
<enum name='XK_L5' value64='65484'/>
<enum name='XK_L6' value64='65485'/>
<enum name='XK_L7' value64='65486'/>
<enum name='XK_L8' value64='65487'/>
<enum name='XK_L9' value64='65488'/>
<enum name='XK_Lacute' value64='453'/>
<enum name='XK_Lcaron' value64='421'/>
<enum name='XK_Lcedilla' value64='934'/>
<enum name='XK_Left' value64='65361'/>
<enum name='XK_Linefeed' value64='65290'/>
<enum name='XK_Lstroke' value64='419'/>
<enum name='XK_M' value64='77'/>
<enum name='XK_Massyo' value64='65324'/>
<enum name='XK_Menu' value64='65383'/>
<enum name='XK_Meta_L' value64='65511'/>
<enum name='XK_Meta_R' value64='65512'/>
<enum name='XK_Mode_switch' value64='65406'/>
<enum name='XK_Muhenkan' value64='65314'/>
<enum name='XK_Multi_key' value64='65312'/>
<enum name='XK_N' value64='78'/>
<enum name='XK_Nacute' value64='465'/>
<enum name='XK_Ncaron' value64='466'/>
<enum name='XK_Ncedilla' value64='977'/>
<enum name='XK_Next' value64='65366'/>
<enum name='XK_Ntilde' value64='209'/>
<enum name='XK_Num_Lock' value64='65407'/>
<enum name='XK_O' value64='79'/>
<enum name='XK_Oacute' value64='211'/>
<enum name='XK_Ocircumflex' value64='212'/>
<enum name='XK_Odiaeresis' value64='214'/>
<enum name='XK_Odoubleacute' value64='469'/>
<enum name='XK_Ograve' value64='210'/>
<enum name='XK_Omacron' value64='978'/>
<enum name='XK_Ooblique' value64='216'/>
<enum name='XK_Otilde' value64='213'/>
<enum name='XK_P' value64='80'/>
<enum name='XK_Page_Down' value64='65366'/>
<enum name='XK_Page_Up' value64='65365'/>
<enum name='XK_Pause' value64='65299'/>
<enum name='XK_Print' value64='65377'/>
<enum name='XK_Prior' value64='65365'/>
<enum name='XK_Q' value64='81'/>
<enum name='XK_R' value64='82'/>
<enum name='XK_R1' value64='65490'/>
<enum name='XK_R10' value64='65499'/>
<enum name='XK_R11' value64='65500'/>
<enum name='XK_R12' value64='65501'/>
<enum name='XK_R13' value64='65502'/>
<enum name='XK_R14' value64='65503'/>
<enum name='XK_R15' value64='65504'/>
<enum name='XK_R2' value64='65491'/>
<enum name='XK_R3' value64='65492'/>
<enum name='XK_R4' value64='65493'/>
<enum name='XK_R5' value64='65494'/>
<enum name='XK_R6' value64='65495'/>
<enum name='XK_R7' value64='65496'/>
<enum name='XK_R8' value64='65497'/>
<enum name='XK_R9' value64='65498'/>
<enum name='XK_Racute' value64='448'/>
<enum name='XK_Rcaron' value64='472'/>
<enum name='XK_Rcedilla' value64='931'/>
<enum name='XK_Redo' value64='65382'/>
<enum name='XK_Return' value64='65293'/>
<enum name='XK_Right' value64='65363'/>
<enum name='XK_Romaji' value64='65316'/>
<enum name='XK_S' value64='83'/>
<enum name='XK_Sacute' value64='422'/>
<enum name='XK_Scaron' value64='425'/>
<enum name='XK_Scedilla' value64='426'/>
<enum name='XK_Scircumflex' value64='734'/>
<enum name='XK_Scroll_Lock' value64='65300'/>
<enum name='XK_Select' value64='65376'/>
<enum name='XK_Shift_L' value64='65505'/>
<enum name='XK_Shift_Lock' value64='65510'/>
<enum name='XK_Shift_R' value64='65506'/>
<enum name='XK_Super_L' value64='65515'/>
<enum name='XK_Super_R' value64='65516'/>
<enum name='XK_Sys_Req' value64='65301'/>
<enum name='XK_T' value64='84'/>
<enum name='XK_THORN' value64='222'/>
<enum name='XK_Tab' value64='65289'/>
<enum name='XK_Tcaron' value64='427'/>
<enum name='XK_Tcedilla' value64='478'/>
<enum name='XK_Thorn' value64='222'/>
<enum name='XK_Touroku' value64='65323'/>
<enum name='XK_Tslash' value64='940'/>
<enum name='XK_U' value64='85'/>
<enum name='XK_Uacute' value64='218'/>
<enum name='XK_Ubreve' value64='733'/>
<enum name='XK_Ucircumflex' value64='219'/>
<enum name='XK_Udiaeresis' value64='220'/>
<enum name='XK_Udoubleacute' value64='475'/>
<enum name='XK_Ugrave' value64='217'/>
<enum name='XK_Umacron' value64='990'/>
<enum name='XK_Undo' value64='65381'/>
<enum name='XK_Uogonek' value64='985'/>
<enum name='XK_Up' value64='65362'/>
<enum name='XK_Uring' value64='473'/>
<enum name='XK_Utilde' value64='989'/>
<enum name='XK_V' value64='86'/>
<enum name='XK_VoidSymbol' value64='16777215'/>
<enum name='XK_W' value64='87'/>
<enum name='XK_Win_L' value64='65371'/>
<enum name='XK_Win_R' value64='65372'/>
<enum name='XK_X' value64='88'/>
<enum name='XK_Y' value64='89'/>
<enum name='XK_Yacute' value64='221'/>
<enum name='XK_Z' value64='90'/>
<enum name='XK_Zabovedot' value64='431'/>
<enum name='XK_Zacute' value64='428'/>
<enum name='XK_Zcaron' value64='430'/>
<enum name='XK_Zenkaku' value64='65320'/>
<enum name='XK_Zenkaku_Hankaku' value64='65322'/>
<enum name='XK_a' value64='97'/>
<enum name='XK_aacute' value64='225'/>
<enum name='XK_abovedot' value64='511'/>
<enum name='XK_abreve' value64='483'/>
<enum name='XK_acircumflex' value64='226'/>
<enum name='XK_acute' value64='180'/>
<enum name='XK_adiaeresis' value64='228'/>
<enum name='XK_ae' value64='230'/>
<enum name='XK_agrave' value64='224'/>
<enum name='XK_amacron' value64='992'/>
<enum name='XK_ampersand' value64='38'/>
<enum name='XK_aogonek' value64='433'/>
<enum name='XK_apostrophe' value64='39'/>
<enum name='XK_aring' value64='229'/>
<enum name='XK_asciicircum' value64='94'/>
<enum name='XK_asciitilde' value64='126'/>
<enum name='XK_asterisk' value64='42'/>
<enum name='XK_at' value64='64'/>
<enum name='XK_atilde' value64='227'/>
<enum name='XK_b' value64='98'/>
<enum name='XK_backslash' value64='92'/>
<enum name='XK_bar' value64='124'/>
<enum name='XK_braceleft' value64='123'/>
<enum name='XK_braceright' value64='125'/>
<enum name='XK_bracketleft' value64='91'/>
<enum name='XK_bracketright' value64='93'/>
<enum name='XK_breve' value64='418'/>
<enum name='XK_brokenbar' value64='166'/>
<enum name='XK_c' value64='99'/>
<enum name='XK_cabovedot' value64='741'/>
<enum name='XK_cacute' value64='486'/>
<enum name='XK_caron' value64='439'/>
<enum name='XK_ccaron' value64='488'/>
<enum name='XK_ccedilla' value64='231'/>
<enum name='XK_ccircumflex' value64='742'/>
<enum name='XK_cedilla' value64='184'/>
<enum name='XK_cent' value64='162'/>
<enum name='XK_colon' value64='58'/>
<enum name='XK_comma' value64='44'/>
<enum name='XK_copyright' value64='169'/>
<enum name='XK_currency' value64='164'/>
<enum name='XK_d' value64='100'/>
<enum name='XK_dcaron' value64='495'/>
<enum name='XK_degree' value64='176'/>
<enum name='XK_diaeresis' value64='168'/>
<enum name='XK_division' value64='247'/>
<enum name='XK_dollar' value64='36'/>
<enum name='XK_doubleacute' value64='445'/>
<enum name='XK_dstroke' value64='496'/>
<enum name='XK_e' value64='101'/>
<enum name='XK_eabovedot' value64='1004'/>
<enum name='XK_eacute' value64='233'/>
<enum name='XK_ecaron' value64='492'/>
<enum name='XK_ecircumflex' value64='234'/>
<enum name='XK_ediaeresis' value64='235'/>
<enum name='XK_egrave' value64='232'/>
<enum name='XK_emacron' value64='954'/>
<enum name='XK_eng' value64='959'/>
<enum name='XK_eogonek' value64='490'/>
<enum name='XK_equal' value64='61'/>
<enum name='XK_eth' value64='240'/>
<enum name='XK_exclam' value64='33'/>
<enum name='XK_exclamdown' value64='161'/>
<enum name='XK_f' value64='102'/>
<enum name='XK_g' value64='103'/>
<enum name='XK_gabovedot' value64='757'/>
<enum name='XK_gbreve' value64='699'/>
<enum name='XK_gcedilla' value64='955'/>
<enum name='XK_gcircumflex' value64='760'/>
<enum name='XK_grave' value64='96'/>
<enum name='XK_greater' value64='62'/>
<enum name='XK_guillemotleft' value64='171'/>
<enum name='XK_guillemotright' value64='187'/>
<enum name='XK_h' value64='104'/>
<enum name='XK_hcircumflex' value64='694'/>
<enum name='XK_hstroke' value64='689'/>
<enum name='XK_hyphen' value64='173'/>
<enum name='XK_i' value64='105'/>
<enum name='XK_iacute' value64='237'/>
<enum name='XK_icircumflex' value64='238'/>
<enum name='XK_idiaeresis' value64='239'/>
<enum name='XK_idotless' value64='697'/>
<enum name='XK_igrave' value64='236'/>
<enum name='XK_imacron' value64='1007'/>
<enum name='XK_iogonek' value64='999'/>
<enum name='XK_itilde' value64='949'/>
<enum name='XK_j' value64='106'/>
<enum name='XK_jcircumflex' value64='700'/>
<enum name='XK_k' value64='107'/>
<enum name='XK_kappa' value64='930'/>
<enum name='XK_kcedilla' value64='1011'/>
<enum name='XK_kra' value64='930'/>
<enum name='XK_l' value64='108'/>
<enum name='XK_lacute' value64='485'/>
<enum name='XK_lcaron' value64='437'/>
<enum name='XK_lcedilla' value64='950'/>
<enum name='XK_less' value64='60'/>
<enum name='XK_lstroke' value64='435'/>
<enum name='XK_m' value64='109'/>
<enum name='XK_macron' value64='175'/>
<enum name='XK_masculine' value64='186'/>
<enum name='XK_minus' value64='45'/>
<enum name='XK_mu' value64='181'/>
<enum name='XK_multiply' value64='215'/>
<enum name='XK_n' value64='110'/>
<enum name='XK_nacute' value64='497'/>
<enum name='XK_ncaron' value64='498'/>
<enum name='XK_ncedilla' value64='1009'/>
<enum name='XK_nobreakspace' value64='160'/>
<enum name='XK_notsign' value64='172'/>
<enum name='XK_ntilde' value64='241'/>
<enum name='XK_numbersign' value64='35'/>
<enum name='XK_o' value64='111'/>
<enum name='XK_oacute' value64='243'/>
<enum name='XK_ocircumflex' value64='244'/>
<enum name='XK_odiaeresis' value64='246'/>
<enum name='XK_odoubleacute' value64='501'/>
<enum name='XK_ogonek' value64='434'/>
<enum name='XK_ograve' value64='242'/>
<enum name='XK_omacron' value64='1010'/>
<enum name='XK_onehalf' value64='189'/>
<enum name='XK_onequarter' value64='188'/>
<enum name='XK_onesuperior' value64='185'/>
<enum name='XK_ordfeminine' value64='170'/>
<enum name='XK_oslash' value64='248'/>
<enum name='XK_otilde' value64='245'/>
<enum name='XK_p' value64='112'/>
<enum name='XK_paragraph' value64='182'/>
<enum name='XK_parenleft' value64='40'/>
<enum name='XK_parenright' value64='41'/>
<enum name='XK_percent' value64='37'/>
<enum name='XK_period' value64='46'/>
<enum name='XK_periodcentered' value64='183'/>
<enum name='XK_plus' value64='43'/>
<enum name='XK_plusminus' value64='177'/>
<enum name='XK_q' value64='113'/>
<enum name='XK_question' value64='63'/>
<enum name='XK_questiondown' value64='191'/>
<enum name='XK_quotedbl' value64='34'/>
<enum name='XK_quoteleft' value64='96'/>
<enum name='XK_quoteright' value64='39'/>
<enum name='XK_r' value64='114'/>
<enum name='XK_racute' value64='480'/>
<enum name='XK_rcaron' value64='504'/>
<enum name='XK_rcedilla' value64='947'/>
<enum name='XK_registered' value64='174'/>
<enum name='XK_s' value64='115'/>
<enum name='XK_sacute' value64='438'/>
<enum name='XK_scaron' value64='441'/>
<enum name='XK_scedilla' value64='442'/>
<enum name='XK_scircumflex' value64='766'/>
<enum name='XK_script_switch' value64='65406'/>
<enum name='XK_section' value64='167'/>
<enum name='XK_semicolon' value64='59'/>
<enum name='XK_slash' value64='47'/>
<enum name='XK_space' value64='32'/>
<enum name='XK_ssharp' value64='223'/>
<enum name='XK_sterling' value64='163'/>
<enum name='XK_t' value64='116'/>
<enum name='XK_tcaron' value64='443'/>
<enum name='XK_tcedilla' value64='510'/>
<enum name='XK_thorn' value64='254'/>
<enum name='XK_threequarters' value64='190'/>
<enum name='XK_threesuperior' value64='179'/>
<enum name='XK_tslash' value64='956'/>
<enum name='XK_twosuperior' value64='178'/>
<enum name='XK_u' value64='117'/>
<enum name='XK_uacute' value64='250'/>
<enum name='XK_ubreve' value64='765'/>
<enum name='XK_ucircumflex' value64='251'/>
<enum name='XK_udiaeresis' value64='252'/>
<enum name='XK_udoubleacute' value64='507'/>
<enum name='XK_ugrave' value64='249'/>
<enum name='XK_umacron' value64='1022'/>
<enum name='XK_underscore' value64='95'/>
<enum name='XK_uogonek' value64='1017'/>
<enum name='XK_uring' value64='505'/>
<enum name='XK_utilde' value64='1021'/>
<enum name='XK_v' value64='118'/>
<enum name='XK_w' value64='119'/>
<enum name='XK_x' value64='120'/>
<enum name='XK_y' value64='121'/>
<enum name='XK_yacute' value64='253'/>
<enum name='XK_ydiaeresis' value64='255'/>
<enum name='XK_yen' value64='165'/>
<enum name='XK_z' value64='122'/>
<enum name='XK_zabovedot' value64='447'/>
<enum name='XK_zacute' value64='444'/>
<enum name='XK_zcaron' value64='446'/>
<enum name='XLFD_ADD_STYLE' value64='5'/>
<enum name='XLFD_AVERAGE_WIDTH' value64='11'/>
<enum name='XLFD_CHARSET' value64='12'/>
<enum name='XLFD_FAMILY' value64='1'/>
<enum name='XLFD_FOUNDRY' value64='0'/>
<enum name='XLFD_NUMFIELDS' value64='13'/>
<enum name='XLFD_PIXEL_SIZE' value64='6'/>
<enum name='XLFD_POINT_SIZE' value64='7'/>
<enum name='XLFD_RESOLUTION_X' value64='8'/>
<enum name='XLFD_RESOLUTION_Y' value64='9'/>
<enum name='XLFD_SETWIDTH' value64='4'/>
<enum name='XLFD_SLANT' value64='3'/>
<enum name='XLFD_SPACING' value64='10'/>
<enum name='XLFD_WEIGHT' value64='2'/>
<enum name='XLocaleNotSupported' value64='-2'/>
<enum name='XLookupBoth' value64='4'/>
<enum name='XLookupChars' value64='2'/>
<enum name='XLookupKeySym' value64='3'/>
<enum name='XLookupNone' value64='1'/>
<enum name='XMaxTransChars' value64='4'/>
<enum name='XNegative' value64='16'/>
<enum name='XNoMemory' value64='-1'/>
<enum name='XStdICCTextStyle' value64='3'/>
<enum name='XStringStyle' value64='0'/>
<enum name='XTextStyle' value64='2'/>
<enum name='XValue' value64='1'/>
<enum name='XYBitmap' value64='0'/>
<enum name='XYPixmap' value64='1'/>
<enum name='X_PROTOCOL' value64='11'/>
<enum name='X_PROTOCOL_REVISION' value64='0'/>
<enum name='XlibSpecificationRelease' value64='5'/>
<enum name='YNegative' value64='32'/>
<enum name='YSorted' value64='1'/>
<enum name='YValue' value64='2'/>
<enum name='YXBanded' value64='3'/>
<enum name='YXSorted' value64='2'/>
<enum name='ZPixmap' value64='2'/>
<enum name='ZoomState' value64='2'/>
<function name='TkAllocWindow'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<arg declared_type64='int' name='screenNum' type64='i'/>
<arg declared_type64='TkWindow*' name='parentPtr' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</function>
<function name='TkBackgroundEvalObjv'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<arg declared_type64='int' name='flags' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkBezierPoints'>
<arg declared_type64='double*' name='control' type64='^d'/>
<arg declared_type64='int' name='numSteps' type64='i'/>
<arg declared_type64='double*' name='coordPtr' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkBezierScreenPoints'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' name='control' type64='^d'/>
<arg declared_type64='int' name='numSteps' type64='i'/>
<arg declared_type64='XPoint*' name='xPointPtr' type64='^{_XPoint=ss}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkBindDeadWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkBindEventProc'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkBindFree'>
<arg declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkBindInit'>
<arg declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkCanvasDashParseProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkCanvasDashPrintProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' name='freeProcPtr' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkCanvasGetCoordObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tcl_Obj*' name='obj' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='double*' name='doublePtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkChangeEventWindow'>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkClipCleanup'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkClipInit'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkComputeAnchor'>
<arg declared_type64='Tk_Anchor' name='anchor' type64='i'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='padX' type64='i'/>
<arg declared_type64='int' name='padY' type64='i'/>
<arg declared_type64='int' name='innerWidth' type64='i'/>
<arg declared_type64='int' name='innerHeight' type64='i'/>
<arg declared_type64='int*' name='xPtr' type64='^i'/>
<arg declared_type64='int*' name='yPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkCopyAndGlobalEval'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' name='script' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkCreateBindingProcedure'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<arg declared_type64='ClientData' name='object' type64='^v'/>
<arg const='true' declared_type64='char*' name='eventString' type64='*'/>
<arg declared_type64='TkBindEvalProc*' function_pointer='true' name='evalProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='TkBindFreeProc*' function_pointer='true' name='freeProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='unsigned long' type64='Q'/>
</function>
<function name='TkCreateCursorFromData'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg const='true' declared_type64='char*' name='mask' type64='*'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='xHot' type64='i'/>
<arg declared_type64='int' name='yHot' type64='i'/>
<arg declared_type64='XColor' name='fg' type64='{_XColor=QSSScc}'/>
<arg declared_type64='XColor' name='bg' type64='{_XColor=QSSScc}'/>
<retval declared_type64='TkCursor*' type64='^{TkCursor=^{Tk_Cursor_}^{_XDisplay}ii^{Tcl_HashTable}^{Tcl_HashEntry}^{Tcl_HashEntry}^{TkCursor}}'/>
</function>
<function name='TkCreateExitHandler'>
<arg declared_type64='Tcl_ExitProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkCreateFrame'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg declared_type64='char**' name='argv' type64='^*'/>
<arg declared_type64='int' name='toplevel' type64='i'/>
<arg declared_type64='char*' name='appName' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkCreateMainWindow'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='screenName' type64='*'/>
<arg declared_type64='char*' name='baseName' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='TkCreateMenuCmd'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkCreateThreadExitHandler'>
<arg declared_type64='Tcl_ExitProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkCreateXEventSource'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkCurrentTime'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkDeadAppCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkDebugBitmap'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='TkDebugBorder'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='TkDebugColor'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='TkDebugConfig'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_OptionTable' name='table' type64='^{Tk_OptionTable_=}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='TkDebugCursor'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='TkDebugFont'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='TkDeleteAllImages'>
<arg declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkDeleteExitHandler'>
<arg declared_type64='Tcl_ExitProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkDeleteThreadExitHandler'>
<arg declared_type64='Tcl_ExitProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkDoConfigureNotify'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkDrawInsetFocusHighlight'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='int' name='padding' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkEventDeadWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkEventInit'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFillPolygon'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' name='coordPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='GC' name='outlineGC' type64='^{_GC=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFinalize'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFinalizeThread'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFindStateNum'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='option' type64='*'/>
<arg const='true' declared_type64='TkStateMap*' name='mapPtr' type64='^{TkStateMap=i*}'/>
<arg const='true' declared_type64='char*' name='strKey' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkFindStateNumObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' name='optionPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg const='true' declared_type64='TkStateMap*' name='mapPtr' type64='^{TkStateMap=i*}'/>
<arg declared_type64='Tcl_Obj*' name='keyPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkFindStateString'>
<arg const='true' declared_type64='TkStateMap*' name='mapPtr' type64='^{TkStateMap=i*}'/>
<arg declared_type64='int' name='numKey' type64='i'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkFocusDeadWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFocusFilterEvent'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkFocusFree'>
<arg declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFocusJoin'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFocusKeyEvent'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</function>
<function name='TkFocusSplit'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFontPkgFree'>
<arg declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFontPkgInit'>
<arg declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFreeBindingTags'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFreeWindowId'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' name='w' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkFreeXId'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkGCCleanup'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkGetBitmapData'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' name='string' type64='*'/>
<arg declared_type64='char*' name='fileName' type64='*'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<arg declared_type64='int*' name='hotXPtr' type64='^i'/>
<arg declared_type64='int*' name='hotYPtr' type64='^i'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkGetBitmapPredefTable'>
<retval declared_type64='Tcl_HashTable*' type64='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
</function>
<function name='TkGetButtPoints'>
<arg declared_type64='double*' name='p1' type64='^d'/>
<arg declared_type64='double*' name='p2' type64='^d'/>
<arg declared_type64='double' name='width' type64='d'/>
<arg declared_type64='int' name='project' type64='i'/>
<arg declared_type64='double*' name='m1' type64='^d'/>
<arg declared_type64='double*' name='m2' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkGetCursorByName'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Uid' name='string' type64='*'/>
<retval declared_type64='TkCursor*' type64='^{TkCursor=^{Tk_Cursor_}^{_XDisplay}ii^{Tcl_HashTable}^{Tcl_HashEntry}^{Tcl_HashEntry}^{TkCursor}}'/>
</function>
<function name='TkGetDefaultScreenName'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='screenName' type64='*'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='TkGetDisplay'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<retval declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
</function>
<function name='TkGetDisplayList'>
<retval declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
</function>
<function name='TkGetDisplayOf'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<arg declared_type64='Tk_Window*' name='tkwinPtr' type64='^^{Tk_Window_}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkGetDoublePixels'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='string' type64='*'/>
<arg declared_type64='double*' name='doublePtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkGetFocusWin'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</function>
<function name='TkGetInterpNames'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkGetMainInfoList'>
<retval declared_type64='TkMainInfo*' type64='^{TkMainInfo=}'/>
</function>
<function name='TkGetMiterPoints'>
<arg declared_type64='double*' name='p1' type64='^d'/>
<arg declared_type64='double*' name='p2' type64='^d'/>
<arg declared_type64='double*' name='p3' type64='^d'/>
<arg declared_type64='double' name='width' type64='d'/>
<arg declared_type64='double*' name='m1' type64='^d'/>
<arg declared_type64='double*' name='m2' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkGetOptionSpec'>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='Tk_OptionTable' name='optionTable' type64='^{Tk_OptionTable_=}'/>
<retval const='true' declared_type64='Tk_OptionSpec*' type64='^{Tk_OptionSpec=i****iii^vi}'/>
</function>
<function name='TkGetPointerCoords'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' name='xPtr' type64='^i'/>
<arg declared_type64='int*' name='yPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkGetServerInfo'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkGetWindowFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Window*' name='windowPtr' type64='^^{Tk_Window_}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkGrabDeadWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkGrabState'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkInOutEvents'>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='TkWindow*' name='sourcePtr' type64='^{TkWindow=}'/>
<arg declared_type64='TkWindow*' name='destPtr' type64='^{TkWindow=}'/>
<arg declared_type64='int' name='leaveType' type64='i'/>
<arg declared_type64='int' name='enterType' type64='i'/>
<arg declared_type64='Tcl_QueuePosition' name='position' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkIncludePoint'>
<arg declared_type64='Tk_Item*' name='itemPtr' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='double*' name='pointPtr' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkInitXId'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkInstallFrameMenu'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkKeysymToString'>
<arg declared_type64='int' name='keysym' type64='i'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkLineToArea'>
<arg declared_type64='double*' name='end1Ptr' type64='^d'/>
<arg declared_type64='double*' name='end2Ptr' type64='^d'/>
<arg declared_type64='double*' name='rectPtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkLineToPoint'>
<arg declared_type64='double*' name='end1Ptr' type64='^d'/>
<arg declared_type64='double*' name='end2Ptr' type64='^d'/>
<arg declared_type64='double*' name='pointPtr' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='TkMacOSXDefaultStartupScript'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkMakeBezierCurve'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' name='pointPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<arg declared_type64='int' name='numSteps' type64='i'/>
<arg declared_type64='XPoint*' name='xPoints' type64='^{_XPoint=ss}'/>
<arg declared_type64='double*' name='dblPoints' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkMakeBezierPostscript'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' name='pointPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkMakeRawCurve'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' name='pointPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<arg declared_type64='int' name='numSteps' type64='i'/>
<arg declared_type64='XPoint*' name='xPoints' type64='^{_XPoint=ss}'/>
<arg declared_type64='double*' name='dblPoints' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkMakeRawCurvePostscript'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' name='pointPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkMapTopFrame'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkOffsetParseProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkOffsetPrintProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' name='freeProcPtr' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkOptionClassChanged'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkOptionDeadWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkOrientParseProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkOrientPrintProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' name='freeProcPtr' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkOvalToArea'>
<arg declared_type64='double*' name='ovalPtr' type64='^d'/>
<arg declared_type64='double*' name='rectPtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkOvalToPoint'>
<arg declared_type64='double*' name='ovalPtr' type64='^d'/>
<arg declared_type64='double' name='width' type64='d'/>
<arg declared_type64='int' name='filled' type64='i'/>
<arg declared_type64='double*' name='pointPtr' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='TkParsePadAmount'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' name='pad1Ptr' type64='^i'/>
<arg declared_type64='int*' name='pad2Ptr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkPhotoGetValidRegion'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<retval declared_type64='TkRegion' type64='^{TkRegion_=}'/>
</function>
<function name='TkPixelParseProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkPixelPrintProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' name='freeProcPtr' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkPointerEvent'>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkPolygonToArea'>
<arg declared_type64='double*' name='polyPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<arg declared_type64='double*' name='rectPtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkPolygonToPoint'>
<arg declared_type64='double*' name='polyPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<arg declared_type64='double*' name='pointPtr' type64='^d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='TkPositionInTree'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='TkWindow*' name='treePtr' type64='^{TkWindow=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkPostscriptImage'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_PostscriptInfo' name='psInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='XImage*' name='ximage' type64='^{_XImage=iiii*iiiiiiiQQQ*{funcs=^?^?^?^?^?^?}}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkPrintPadAmount'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' name='buffer' type64='*'/>
<arg declared_type64='int' name='pad1' type64='i'/>
<arg declared_type64='int' name='pad2' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkQueueEventForAllChildren'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkReadBitmapFile'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='d' type64='i'/>
<arg const='true' declared_type64='char*' name='filename' type64='*'/>
<arg declared_type64='unsigned int*' name='width_return' type64='^I'/>
<arg declared_type64='unsigned int*' name='height_return' type64='^I'/>
<arg declared_type64='int*' name='bitmap_return' type64='^i'/>
<arg declared_type64='int*' name='x_hot_return' type64='^i'/>
<arg declared_type64='int*' name='y_hot_return' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkRegisterObjTypes'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkScrollWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='dx' type64='i'/>
<arg declared_type64='int' name='dy' type64='i'/>
<arg declared_type64='TkRegion' name='damageRgn' type64='^{TkRegion_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkSelDeadWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkSelEventProc'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkSelInit'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkSelPropProc'>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkSendCleanup'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkSetFocusWin'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='int' name='force' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkSetWindowMenuBar'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='oldMenuName' type64='*'/>
<arg declared_type64='char*' name='menuName' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkSmoothParseProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkSmoothPrintProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' name='freeProcPtr' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkStateParseProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkStatePrintProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' name='freeProcPtr' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkStringToKeysym'>
<arg declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkStylePkgFree'>
<arg declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkStylePkgInit'>
<arg declared_type64='TkMainInfo*' name='mainPtr' type64='^{TkMainInfo=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkThickPolyLineToArea'>
<arg declared_type64='double*' name='coordPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<arg declared_type64='double' name='width' type64='d'/>
<arg declared_type64='int' name='capStyle' type64='i'/>
<arg declared_type64='int' name='joinStyle' type64='i'/>
<arg declared_type64='double*' name='rectPtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkToplevelWindowForCommand'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='cmdName' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='TkUnderlineCharsInContext'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' name='string' type64='*'/>
<arg declared_type64='int' name='numBytes' type64='i'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='firstByte' type64='i'/>
<arg declared_type64='int' name='lastByte' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkUnixContainerId'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkUnixDoOneXEvent'>
<arg declared_type64='Tcl_Time*' name='timePtr' type64='^{Tcl_Time=qq}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkUnixSetMenubar'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Window' name='menubar' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkUnsupported1ObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkWmAddToColormapWindows'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmCleanup'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmDeadWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmFocusToplevel'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</function>
<function name='TkWmMapWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmNewWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmProtocolEventProc'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' name='evenvPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmRemoveFromColormapWindows'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmRestackToplevel'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='int' name='aboveBelow' type64='i'/>
<arg declared_type64='TkWindow*' name='otherPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmSetClass'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkWmStackorderToplevel'>
<arg declared_type64='TkWindow*' name='parentPtr' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow**' type64='^^{TkWindow}'/>
</function>
<function name='TkWmUnmapWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_3DBorderColor'>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</function>
<function name='Tk_3DBorderGC'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' name='which' type64='i'/>
<retval declared_type64='GC' type64='^{_GC=}'/>
</function>
<function name='Tk_3DHorizontalBevel'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='leftIn' type64='i'/>
<arg declared_type64='int' name='rightIn' type64='i'/>
<arg declared_type64='int' name='topBevel' type64='i'/>
<arg declared_type64='int' name='relief' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_3DVerticalBevel'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='leftBevel' type64='i'/>
<arg declared_type64='int' name='relief' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_AddOption'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='int' name='priority' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_Alloc3DBorderFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
</function>
<function name='Tk_AllocBitmapFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_AllocColorFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</function>
<function name='Tk_AllocCursorFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
</function>
<function name='Tk_AllocFontFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
</function>
<function name='Tk_AllocStyleFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
</function>
<function name='Tk_BellObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_BindEvent'>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='numObjects' type64='i'/>
<arg declared_type64='ClientData*' name='objectPtr' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_BindObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_BindtagsObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ButtonObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasDrawableCoords'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double' name='x' type64='d'/>
<arg declared_type64='double' name='y' type64='d'/>
<arg declared_type64='short*' name='drawableXPtr' type64='^s'/>
<arg declared_type64='short*' name='drawableYPtr' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CanvasEventuallyRedraw'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='int' name='x1' type64='i'/>
<arg declared_type64='int' name='y1' type64='i'/>
<arg declared_type64='int' name='x2' type64='i'/>
<arg declared_type64='int' name='y2' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CanvasGetCoord'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='double*' name='doublePtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasGetCoordFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tcl_Obj*' name='obj' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='double*' name='doublePtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasGetTextInfo'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<retval declared_type64='Tk_CanvasTextInfo*' type64='^{Tk_CanvasTextInfo=^{Tk_3DBorder_}i^{_XColor=QSSScc}^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}ii^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}i^{Tk_3DBorder_}ii^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}ii}'/>
</function>
<function name='Tk_CanvasObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasPsBitmap'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='int' name='bitmap' type64='i'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasPsColor'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='XColor*' name='colorPtr' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasPsFont'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Font' name='font' type64='^{Tk_Font_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasPsOutline'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' name='item' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Tk_Outline*' name='outline' type64='^{Tk_Outline=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasPsPath'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double*' name='coordPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CanvasPsStipple'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='int' name='bitmap' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasPsY'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double' name='y' type64='d'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='Tk_CanvasSetOffset'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='Tk_TSOffset*' name='offset' type64='^{Tk_TSOffset=iii}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CanvasSetStippleOrigin'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CanvasTagsParseProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CanvasTagsPrintProc'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='offset' type64='i'/>
<arg declared_type64='Tcl_FreeProc**' name='freeProcPtr' type64='^^?'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='Tk_CanvasTkwin'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='Tk_CanvasWindowCoords'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='double' name='x' type64='d'/>
<arg declared_type64='double' name='y' type64='d'/>
<arg declared_type64='short*' name='screenXPtr' type64='^s'/>
<arg declared_type64='short*' name='screenYPtr' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_ChangeOutlineGC'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' name='item' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Tk_Outline*' name='outline' type64='^{Tk_Outline=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ChangeWindowAttributes'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' name='valueMask' type64='Q'/>
<arg declared_type64='XSetWindowAttributes*' name='attsPtr' type64='^{_XSetWindowAttributes=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CharBbox'>
<arg declared_type64='Tk_TextLayout' name='layout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' name='index' type64='i'/>
<arg declared_type64='int*' name='xPtr' type64='^i'/>
<arg declared_type64='int*' name='yPtr' type64='^i'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CheckbuttonObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ChooseColorObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ChooseDirectoryObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ChooseFontObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ClearSelection'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='selection' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_ClipboardAppend'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='target' type64='i'/>
<arg declared_type64='int' name='format' type64='i'/>
<arg declared_type64='char*' name='buffer' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ClipboardClear'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ClipboardObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CollapseMotionEvents'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='collapse' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ComputeTextLayout'>
<arg declared_type64='Tk_Font' name='font' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='int' name='numChars' type64='i'/>
<arg declared_type64='int' name='wrapLength' type64='i'/>
<arg declared_type64='Tk_Justify' name='justify' type64='i'/>
<arg declared_type64='int' name='flags' type64='i'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='Tk_TextLayout' type64='^{Tk_TextLayout_=}'/>
</function>
<function name='Tk_ConfigOutlineGC'>
<arg declared_type64='XGCValues*' name='gcValues' type64='^{_XGCValues=}'/>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' name='item' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Tk_Outline*' name='outline' type64='^{Tk_Outline=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ConfigureInfo'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_ConfigSpec*' name='specs' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg const='true' declared_type64='char*' name='argvName' type64='*'/>
<arg declared_type64='int' name='flags' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ConfigureValue'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_ConfigSpec*' name='specs' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg const='true' declared_type64='char*' name='argvName' type64='*'/>
<arg declared_type64='int' name='flags' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ConfigureWidget'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_ConfigSpec*' name='specs' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='int' name='flags' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ConfigureWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned int' name='valueMask' type64='I'/>
<arg declared_type64='XWindowChanges*' name='valuePtr' type64='^{_XWindowChanges=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CoordsToWindow'>
<arg declared_type64='int' name='rootX' type64='i'/>
<arg declared_type64='int' name='rootY' type64='i'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='Tk_CreateAnonymousWindow'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='parent' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='screenName' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='Tk_CreateBinding'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<arg declared_type64='ClientData' name='object' type64='^v'/>
<arg const='true' declared_type64='char*' name='eventStr' type64='*'/>
<arg const='true' declared_type64='char*' name='command' type64='*'/>
<arg declared_type64='int' name='append' type64='i'/>
<retval declared_type64='unsigned long' type64='Q'/>
</function>
<function name='Tk_CreateBindingTable'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CreateClientMessageHandler'>
<arg declared_type64='Tk_ClientMessageProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateConsoleWindow'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_CreateErrorHandler'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='errNum' type64='i'/>
<arg declared_type64='int' name='request' type64='i'/>
<arg declared_type64='int' name='minorCode' type64='i'/>
<arg declared_type64='Tk_ErrorProc*' function_pointer='true' name='errorProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XErrorEvent*' type64='^{_XErrorEvent=}'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='Tk_ErrorHandler' type64='^{Tk_ErrorHandler_=}'/>
</function>
<function name='Tk_CreateEventHandler'>
<arg declared_type64='Tk_Window' name='token' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' name='mask' type64='Q'/>
<arg declared_type64='Tk_EventProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateGenericHandler'>
<arg declared_type64='Tk_GenericProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateImageType'>
<arg declared_type64='Tk_ImageType*' name='typePtr' type64='^{Tk_ImageType=*^?^?^?^?^?^?^{Tk_ImageType}*}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateItemType'>
<arg declared_type64='Tk_ItemType*' name='typePtr' type64='^{Tk_ItemType=*i^?^{Tk_ConfigSpec}^?^?^?^?i^?^?^?^?^?^?^?^?^?^?^{Tk_ItemType}*i**}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateOldImageType'>
<arg declared_type64='Tk_ImageType*' name='typePtr' type64='^{Tk_ImageType=*^?^?^?^?^?^?^{Tk_ImageType}*}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateOldPhotoImageFormat'>
<arg declared_type64='Tk_PhotoImageFormat*' name='formatPtr' type64='^{Tk_PhotoImageFormat=*^?^?^?^?^?^?^{Tk_PhotoImageFormat}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateOptionTable'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='Tk_OptionSpec*' name='templatePtr' type64='^{Tk_OptionSpec=i****iii^vi}'/>
<retval declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
</function>
<function name='Tk_CreateOutline'>
<arg declared_type64='Tk_Outline*' name='outline' type64='^{Tk_Outline=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreatePhotoImageFormat'>
<arg declared_type64='Tk_PhotoImageFormat*' name='formatPtr' type64='^{Tk_PhotoImageFormat=*^?^?^?^?^?^?^{Tk_PhotoImageFormat}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateSelHandler'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='selection' type64='i'/>
<arg declared_type64='int' name='target' type64='i'/>
<arg declared_type64='Tk_SelectionProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='int' name='format' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateSmoothMethod'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_SmoothMethod*' name='method' type64='^{Tk_SmoothMethod=*^?^?}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_CreateStyle'>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='Tk_StyleEngine' name='engine' type64='^{Tk_StyleEngine_=}'/>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
</function>
<function name='Tk_CreateWindow'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='parent' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg const='true' declared_type64='char*' name='screenName' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='Tk_CreateWindowFromPath'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='pathName' type64='*'/>
<arg const='true' declared_type64='char*' name='screenName' type64='*'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='Tk_DefineBitmap'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_DefineCursor'>
<arg declared_type64='Tk_Window' name='window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Cursor' name='cursor' type64='^{Tk_Cursor_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteAllBindings'>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<arg declared_type64='ClientData' name='object' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteBinding'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<arg declared_type64='ClientData' name='object' type64='^v'/>
<arg const='true' declared_type64='char*' name='eventStr' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_DeleteBindingTable'>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteClientMessageHandler'>
<arg declared_type64='Tk_ClientMessageProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteErrorHandler'>
<arg declared_type64='Tk_ErrorHandler' name='handler' type64='^{Tk_ErrorHandler_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteEventHandler'>
<arg declared_type64='Tk_Window' name='token' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' name='mask' type64='Q'/>
<arg declared_type64='Tk_EventProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteGenericHandler'>
<arg declared_type64='Tk_GenericProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteImage'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteOptionTable'>
<arg declared_type64='Tk_OptionTable' name='optionTable' type64='^{Tk_OptionTable_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteOutline'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='Tk_Outline*' name='outline' type64='^{Tk_Outline=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DeleteSelHandler'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='selection' type64='i'/>
<arg declared_type64='int' name='target' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DestroyObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_DestroyWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DisplayName'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_DistanceToTextLayout'>
<arg declared_type64='Tk_TextLayout' name='layout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_DitherPhoto'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_Draw3DPolygon'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='XPoint*' name='pointPtr' type64='^{_XPoint=ss}'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<arg declared_type64='int' name='borderWidth' type64='i'/>
<arg declared_type64='int' name='leftRelief' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_Draw3DRectangle'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='borderWidth' type64='i'/>
<arg declared_type64='int' name='relief' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DrawChars'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg declared_type64='int' name='numBytes' type64='i'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DrawElement'>
<arg declared_type64='Tk_Style' name='style' type64='^{Tk_Style_=}'/>
<arg declared_type64='Tk_StyledElement' name='element' type64='^{Tk_StyledElement_=}'/>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='d' type64='i'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='state' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DrawFocusHighlight'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_DrawTextLayout'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='Tk_TextLayout' name='layout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='firstChar' type64='i'/>
<arg declared_type64='int' name='lastChar' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_EntryObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_EventObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_Fill3DPolygon'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='XPoint*' name='pointPtr' type64='^{_XPoint=ss}'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<arg declared_type64='int' name='borderWidth' type64='i'/>
<arg declared_type64='int' name='leftRelief' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_Fill3DRectangle'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='borderWidth' type64='i'/>
<arg declared_type64='int' name='relief' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FindPhoto'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='imageName' type64='*'/>
<retval declared_type64='Tk_PhotoHandle' type64='^v'/>
</function>
<function name='Tk_FocusObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_FontId'>
<arg declared_type64='Tk_Font' name='font' type64='^{Tk_Font_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_FontObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_FrameObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_Free3DBorder'>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_Free3DBorderFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeBitmap'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='bitmap' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeBitmapFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeColor'>
<arg declared_type64='XColor*' name='colorPtr' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeColorFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeColormap'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='colormap' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeConfigOptions'>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_OptionTable' name='optionToken' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeCursor'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='Tk_Cursor' name='cursor' type64='^{Tk_Cursor_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeCursorFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeFont'>
<arg declared_type64='Tk_Font' name='f' type64='^{Tk_Font_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeFontFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeGC'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeImage'>
<arg declared_type64='Tk_Image' name='image' type64='^{Tk_Image__=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeOptions'>
<arg declared_type64='Tk_ConfigSpec*' name='specs' type64='^{Tk_ConfigSpec=i****ii^{Tk_CustomOption}}'/>
<arg declared_type64='char*' name='widgRec' type64='*'/>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='needFlags' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreePixmap'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='pixmap' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeSavedOptions'>
<arg declared_type64='Tk_SavedOptions*' name='savePtr' type64='^{Tk_SavedOptions=*^{Tk_Window_}i[20{Tk_SavedOption=^{TkOption}^{Tcl_Obj}d}]^{Tk_SavedOptions}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeStyle'>
<arg declared_type64='Tk_Style' name='style' type64='^{Tk_Style_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeStyleFromObj'>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeTextLayout'>
<arg declared_type64='Tk_TextLayout' name='textLayout' type64='^{Tk_TextLayout_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_FreeXId'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='xid' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_GCForColor'>
<arg declared_type64='XColor*' name='colorPtr' type64='^{_XColor=QSSScc}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<retval declared_type64='GC' type64='^{_GC=}'/>
</function>
<function name='Tk_GeometryRequest'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='reqWidth' type64='i'/>
<arg declared_type64='int' name='reqHeight' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_Get3DBorder'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Uid' name='colorName' type64='*'/>
<retval declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
</function>
<function name='Tk_Get3DBorderFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_3DBorder' type64='^{Tk_3DBorder_=}'/>
</function>
<function name='Tk_GetAllBindings'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<arg declared_type64='ClientData' name='object' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_GetAnchor'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='Tk_Anchor*' name='anchorPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetAnchorFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Anchor*' name='anchorPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetAtomName'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='atom' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_GetBinding'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<arg declared_type64='ClientData' name='object' type64='^v'/>
<arg const='true' declared_type64='char*' name='eventStr' type64='*'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_GetBitmap'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetBitmapFromData'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetBitmapFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetCapStyle'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='int*' name='capPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetColor'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Uid' name='name' type64='*'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</function>
<function name='Tk_GetColorByValue'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='XColor*' name='colorPtr' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</function>
<function name='Tk_GetColorFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
</function>
<function name='Tk_GetColormap'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetCursor'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Uid' name='str' type64='*'/>
<retval declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
</function>
<function name='Tk_GetCursorFromData'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg const='true' declared_type64='char*' name='mask' type64='*'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='xHot' type64='i'/>
<arg declared_type64='int' name='yHot' type64='i'/>
<arg declared_type64='Tk_Uid' name='fg' type64='*'/>
<arg declared_type64='Tk_Uid' name='bg' type64='*'/>
<retval declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
</function>
<function name='Tk_GetCursorFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Cursor' type64='^{Tk_Cursor_=}'/>
</function>
<function name='Tk_GetDash'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='value' type64='*'/>
<arg declared_type64='Tk_Dash*' name='dash' type64='^{Tk_Dash=i(?=*[8c])}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetDoublePixelsFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='double*' name='doublePtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetElementBorderWidth'>
<arg declared_type64='Tk_Style' name='style' type64='^{Tk_Style_=}'/>
<arg declared_type64='Tk_StyledElement' name='element' type64='^{Tk_StyledElement_=}'/>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetElementBox'>
<arg declared_type64='Tk_Style' name='style' type64='^{Tk_Style_=}'/>
<arg declared_type64='Tk_StyledElement' name='element' type64='^{Tk_StyledElement_=}'/>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='inner' type64='i'/>
<arg declared_type64='int*' name='xPtr' type64='^i'/>
<arg declared_type64='int*' name='yPtr' type64='^i'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_GetElementId'>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetElementSize'>
<arg declared_type64='Tk_Style' name='style' type64='^{Tk_Style_=}'/>
<arg declared_type64='Tk_StyledElement' name='element' type64='^{Tk_StyledElement_=}'/>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='inner' type64='i'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_GetFont'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<retval declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
</function>
<function name='Tk_GetFontFromObj'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Font' type64='^{Tk_Font_=}'/>
</function>
<function name='Tk_GetFontMetrics'>
<arg declared_type64='Tk_Font' name='font' type64='^{Tk_Font_=}'/>
<arg declared_type64='Tk_FontMetrics*' name='fmPtr' type64='^{Tk_FontMetrics=iii}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_GetGC'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' name='valueMask' type64='Q'/>
<arg declared_type64='XGCValues*' name='valuePtr' type64='^{_XGCValues=}'/>
<retval declared_type64='GC' type64='^{_GC=}'/>
</function>
<function name='Tk_GetImage'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='Tk_ImageChangedProc*' function_pointer='true' name='changeProc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='Tk_Image' type64='^{Tk_Image__=}'/>
</function>
<function name='Tk_GetImageMasterData'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='Tk_ImageType**' name='typePtrPtr' type64='^^{Tk_ImageType}'/>
<retval declared_type64='ClientData' type64='^v'/>
</function>
<function name='Tk_GetItemTypes'>
<retval declared_type64='Tk_ItemType*' type64='^{Tk_ItemType=*i^?^{Tk_ConfigSpec}^?^?^?^?i^?^?^?^?^?^?^?^?^?^?^{Tk_ItemType}*i**}'/>
</function>
<function name='Tk_GetJoinStyle'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='int*' name='joinPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetJustify'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='Tk_Justify*' name='justifyPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetJustifyFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Justify*' name='justifyPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetMMFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='double*' name='doublePtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetNumMainWindows'>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetOpenFileObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetOption'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg const='true' declared_type64='char*' name='className' type64='*'/>
<retval declared_type64='Tk_Uid' type64='*'/>
</function>
<function name='Tk_GetOptionInfo'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_OptionTable' name='optionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tcl_Obj*' name='namePtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Tk_GetOptionValue'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_OptionTable' name='optionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tcl_Obj*' name='namePtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Tk_GetPixels'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='int*' name='intPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetPixelsFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' name='intPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetPixmap'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='d' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='depth' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetRelief'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='int*' name='reliefPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetReliefFromObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' name='resultPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetRootCoords'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' name='xPtr' type64='^i'/>
<arg declared_type64='int*' name='yPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_GetSaveFileObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetScreenMM'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='double*' name='doublePtr' type64='^d'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetScrollInfo'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<arg declared_type64='double*' name='dblPtr' type64='^d'/>
<arg declared_type64='int*' name='intPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetScrollInfoObj'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<arg declared_type64='double*' name='dblPtr' type64='^d'/>
<arg declared_type64='int*' name='intPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetSelection'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='selection' type64='i'/>
<arg declared_type64='int' name='target' type64='i'/>
<arg declared_type64='Tk_GetSelProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GetStyle'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
</function>
<function name='Tk_GetStyleEngine'>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='Tk_StyleEngine' type64='^{Tk_StyleEngine_=}'/>
</function>
<function name='Tk_GetStyleFromObj'>
<arg declared_type64='Tcl_Obj*' name='objPtr' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Style' type64='^{Tk_Style_=}'/>
</function>
<function name='Tk_GetStyledElement'>
<arg declared_type64='Tk_Style' name='style' type64='^{Tk_Style_=}'/>
<arg declared_type64='int' name='elementId' type64='i'/>
<arg declared_type64='Tk_OptionTable' name='optionTable' type64='^{Tk_OptionTable_=}'/>
<retval declared_type64='Tk_StyledElement' type64='^{Tk_StyledElement_=}'/>
</function>
<function name='Tk_GetUid'>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<retval declared_type64='Tk_Uid' type64='*'/>
</function>
<function name='Tk_GetUserInactiveTime'>
<arg declared_type64='Display*' name='dpy' type64='^{_XDisplay=}'/>
<retval declared_type64='long' type64='q'/>
</function>
<function name='Tk_GetVRootGeometry'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' name='xPtr' type64='^i'/>
<arg declared_type64='int*' name='yPtr' type64='^i'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_GetVisual'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='int*' name='depthPtr' type64='^i'/>
<arg declared_type64='int*' name='colormapPtr' type64='^i'/>
<retval declared_type64='Visual*' type64='^{_Visual=}'/>
</function>
<function name='Tk_Grab'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='grabGlobal' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GrabObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_GridObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_HandleEvent'>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_IdToWindow'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' name='window' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='Tk_ImageChanged'>
<arg declared_type64='Tk_ImageMaster' name='master' type64='^{Tk_ImageMaster_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='imageWidth' type64='i'/>
<arg declared_type64='int' name='imageHeight' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_ImageObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_Init'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_InitConsoleChannels'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_InitOptions'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_OptionTable' name='optionToken' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_InitStubs'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='version' type64='*'/>
<arg declared_type64='int' name='exact' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_InternAtom'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_Interp'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
</function>
<function name='Tk_IntersectTextLayout'>
<arg declared_type64='Tk_TextLayout' name='layout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_LabelObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_LabelframeObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ListboxObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_LowerObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_MainEx'>
<arg declared_type64='int' name='argc' type64='i'/>
<arg declared_type64='char**' name='argv' type64='^*'/>
<arg declared_type64='Tcl_AppInitProc*' function_pointer='true' name='appInitProc' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_MainLoop'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_MainWindow'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='Tk_MaintainGeometry'>
<arg declared_type64='Tk_Window' name='slave' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Window' name='master' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_MakeWindowExist'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_ManageGeometry'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='Tk_GeomMgr*' name='mgrPtr' type64='^{Tk_GeomMgr=*^?^?}'/>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_MapWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_MeasureChars'>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg declared_type64='int' name='numBytes' type64='i'/>
<arg declared_type64='int' name='maxPixels' type64='i'/>
<arg declared_type64='int' name='flags' type64='i'/>
<arg declared_type64='int*' name='lengthPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_MenubuttonObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_MessageBoxObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_MessageObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_MoveResizeWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_MoveToplevelWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_MoveWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_NameOf3DBorder'>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfAnchor'>
<arg declared_type64='Tk_Anchor' name='anchor' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfBitmap'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='bitmap' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfCapStyle'>
<arg declared_type64='int' name='cap' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfColor'>
<arg declared_type64='XColor*' name='colorPtr' type64='^{_XColor=QSSScc}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfCursor'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='Tk_Cursor' name='cursor' type64='^{Tk_Cursor_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfFont'>
<arg declared_type64='Tk_Font' name='font' type64='^{Tk_Font_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfImage'>
<arg declared_type64='Tk_ImageMaster' name='imageMaster' type64='^{Tk_ImageMaster_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfJoinStyle'>
<arg declared_type64='int' name='join' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfJustify'>
<arg declared_type64='Tk_Justify' name='justify' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfRelief'>
<arg declared_type64='int' name='relief' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameOfStyle'>
<arg declared_type64='Tk_Style' name='style' type64='^{Tk_Style_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_NameToWindow'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='pathName' type64='*'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
</function>
<function name='Tk_OptionObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_OwnSelection'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='selection' type64='i'/>
<arg declared_type64='Tk_LostSelProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PackObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PanedWindowObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ParseArgv'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' name='argcPtr' type64='^i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<arg declared_type64='Tk_ArgvInfo*' name='argTable' type64='^{_Tk_ArgvInfo=*i***}'/>
<arg declared_type64='int' name='flags' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PhotoBlank'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PhotoExpand'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PhotoExpand_Panic'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PhotoGetImage'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' name='blockPtr' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PhotoGetSize'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PhotoPutBlock'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' name='blockPtr' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='compRule' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PhotoPutBlock_NoComposite'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' name='blockPtr' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PhotoPutBlock_Panic'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' name='blockPtr' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='compRule' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PhotoPutZoomedBlock'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' name='blockPtr' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='zoomX' type64='i'/>
<arg declared_type64='int' name='zoomY' type64='i'/>
<arg declared_type64='int' name='subsampleX' type64='i'/>
<arg declared_type64='int' name='subsampleY' type64='i'/>
<arg declared_type64='int' name='compRule' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PhotoPutZoomedBlock_NoComposite'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' name='blockPtr' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='zoomX' type64='i'/>
<arg declared_type64='int' name='zoomY' type64='i'/>
<arg declared_type64='int' name='subsampleX' type64='i'/>
<arg declared_type64='int' name='subsampleY' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PhotoPutZoomedBlock_Panic'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='Tk_PhotoImageBlock*' name='blockPtr' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='zoomX' type64='i'/>
<arg declared_type64='int' name='zoomY' type64='i'/>
<arg declared_type64='int' name='subsampleX' type64='i'/>
<arg declared_type64='int' name='subsampleY' type64='i'/>
<arg declared_type64='int' name='compRule' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PhotoSetSize'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PhotoSetSize_Panic'>
<arg declared_type64='Tk_PhotoHandle' name='handle' type64='^v'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PkgInitStubsCheck'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='version' type64='*'/>
<arg declared_type64='int' name='exact' type64='i'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_PlaceObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PointToChar'>
<arg declared_type64='Tk_TextLayout' name='layout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PostscriptBitmap'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_PostscriptInfo' name='psInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' name='bitmap' type64='i'/>
<arg declared_type64='int' name='startX' type64='i'/>
<arg declared_type64='int' name='startY' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PostscriptColor'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PostscriptInfo' name='psInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='XColor*' name='colorPtr' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PostscriptFont'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PostscriptInfo' name='psInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='Tk_Font' name='font' type64='^{Tk_Font_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PostscriptFontName'>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<arg declared_type64='Tcl_DString*' name='dsPtr' type64='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PostscriptImage'>
<arg declared_type64='Tk_Image' name='image' type64='^{Tk_Image__=}'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_PostscriptInfo' name='psinfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='prepass' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PostscriptPath'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PostscriptInfo' name='psInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='double*' name='coordPtr' type64='^d'/>
<arg declared_type64='int' name='numPoints' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_PostscriptPhoto'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_PhotoImageBlock*' name='blockPtr' type64='^{Tk_PhotoImageBlock=*iiii[4i]}'/>
<arg declared_type64='Tk_PostscriptInfo' name='psInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PostscriptStipple'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_PostscriptInfo' name='psInfo' type64='^{Tk_PostscriptInfo_=}'/>
<arg declared_type64='int' name='bitmap' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_PostscriptY'>
<arg declared_type64='double' name='y' type64='d'/>
<arg declared_type64='Tk_PostscriptInfo' name='psInfo' type64='^{Tk_PostscriptInfo_=}'/>
<retval declared_type64='double' type64='d'/>
</function>
<function name='Tk_PreserveColormap'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='colormap' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_QueueWindowEvent'>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='Tcl_QueuePosition' name='position' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_RadiobuttonObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_RaiseObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_RedrawImage'>
<arg declared_type64='Tk_Image' name='image' type64='^{Tk_Image__=}'/>
<arg declared_type64='int' name='imageX' type64='i'/>
<arg declared_type64='int' name='imageY' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='int' name='drawableX' type64='i'/>
<arg declared_type64='int' name='drawableY' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_RegisterStyleEngine'>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='Tk_StyleEngine' name='parent' type64='^{Tk_StyleEngine_=}'/>
<retval declared_type64='Tk_StyleEngine' type64='^{Tk_StyleEngine_=}'/>
</function>
<function name='Tk_RegisterStyledElement'>
<arg declared_type64='Tk_StyleEngine' name='engine' type64='^{Tk_StyleEngine_=}'/>
<arg declared_type64='Tk_ElementSpec*' name='templatePtr' type64='^{Tk_ElementSpec=i*^{Tk_ElementOptionSpec}^?^?^?^?}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ResetOutlineGC'>
<arg declared_type64='Tk_Canvas' name='canvas' type64='^{Tk_Canvas_=}'/>
<arg declared_type64='Tk_Item*' name='item' type64='^{Tk_Item=i^{Tk_Item}[3*]^*ii^{Tk_ItemType}iiii^{Tk_Item}i*i}'/>
<arg declared_type64='Tk_Outline*' name='outline' type64='^{Tk_Outline=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ResetUserInactiveTime'>
<arg declared_type64='Display*' name='dpy' type64='^{_XDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_ResizeWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_RestackWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='aboveBelow' type64='i'/>
<arg declared_type64='Tk_Window' name='other' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_RestoreSavedOptions'>
<arg declared_type64='Tk_SavedOptions*' name='savePtr' type64='^{Tk_SavedOptions=*^{Tk_Window_}i[20{Tk_SavedOption=^{TkOption}^{Tcl_Obj}d}]^{Tk_SavedOptions}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_RestrictEvents'>
<arg declared_type64='Tk_RestrictProc*' function_pointer='true' name='proc' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='Tk_RestrictAction' type64='i'/>
</arg>
<arg declared_type64='ClientData' name='arg' type64='^v'/>
<arg declared_type64='ClientData*' name='prevArgPtr' type64='^^v'/>
<retval declared_type64='Tk_RestrictProc*' function_pointer='true' type64='^?'>
<arg declared_type64='ClientData' type64='^v'/>
<arg declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='Tk_RestrictAction' type64='i'/>
</retval>
</function>
<function name='Tk_SafeInit'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ScaleObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ScrollbarCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_SelectionObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_SendCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_SendObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_SetAppName'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Tk_SetBackgroundFromBorder'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetCaretPos'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetClass'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='className' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetClassProcs'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_ClassProcs*' name='procs' type64='^{Tk_ClassProcs=}'/>
<arg declared_type64='ClientData' name='instanceData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetGrid'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='reqWidth' type64='i'/>
<arg declared_type64='int' name='reqHeight' type64='i'/>
<arg declared_type64='int' name='gridWidth' type64='i'/>
<arg declared_type64='int' name='gridHeight' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetInternalBorder'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='width' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetInternalBorderEx'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='left' type64='i'/>
<arg declared_type64='int' name='right' type64='i'/>
<arg declared_type64='int' name='top' type64='i'/>
<arg declared_type64='int' name='bottom' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetMinimumRequestSize'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='minWidth' type64='i'/>
<arg declared_type64='int' name='minHeight' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetOptions'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' name='recordPtr' type64='*'/>
<arg declared_type64='Tk_OptionTable' name='optionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_SavedOptions*' name='savePtr' type64='^{Tk_SavedOptions=*^{Tk_Window_}i[20{Tk_SavedOption=^{TkOption}^{Tcl_Obj}d}]^{Tk_SavedOptions}}'/>
<arg declared_type64='int*' name='maskPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_SetTSOrigin'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetWindowBackground'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' name='pixel' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetWindowBackgroundPixmap'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='pixmap' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetWindowBorder'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='unsigned long' name='pixel' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetWindowBorderPixmap'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='pixmap' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetWindowBorderWidth'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='width' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetWindowColormap'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='colormap' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SetWindowVisual'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Visual*' name='visual' type64='^{_Visual=}'/>
<arg declared_type64='int' name='depth' type64='i'/>
<arg declared_type64='int' name='colormap' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_SizeOfBitmap'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='bitmap' type64='i'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SizeOfImage'>
<arg declared_type64='Tk_Image' name='image' type64='^{Tk_Image__=}'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_SpinboxObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_StrictMotif'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_TextLayoutToPostscript'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_TextLayout' name='layout' type64='^{Tk_TextLayout_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_TextObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_TextWidth'>
<arg declared_type64='Tk_Font' name='font' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' name='str' type64='*'/>
<arg declared_type64='int' name='numBytes' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_TkObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_TkwaitObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_ToplevelObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_UndefineCursor'>
<arg declared_type64='Tk_Window' name='window' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_UnderlineChars'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='firstByte' type64='i'/>
<arg declared_type64='int' name='lastByte' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_UnderlineTextLayout'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='Tk_TextLayout' name='layout' type64='^{Tk_TextLayout_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='underline' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_Ungrab'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_UnmaintainGeometry'>
<arg declared_type64='Tk_Window' name='slave' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Window' name='master' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_UnmapWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_UnsetGrid'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_UpdateObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_UpdatePointer'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='state' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Tk_WinfoObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Tk_WmObjCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpAlwaysShowSelection'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpBuildRegionFromAlphaData'>
<arg declared_type64='TkRegion' name='region' type64='^{TkRegion_=}'/>
<arg declared_type64='unsigned int' name='x' type64='I'/>
<arg declared_type64='unsigned int' name='y' type64='I'/>
<arg declared_type64='unsigned int' name='width' type64='I'/>
<arg declared_type64='unsigned int' name='height' type64='I'/>
<arg declared_type64='unsigned char*' name='dataPtr' type64='*'/>
<arg declared_type64='unsigned int' name='pixelStride' type64='I'/>
<arg declared_type64='unsigned int' name='lineStride' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpChangeFocus'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='int' name='force' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpClaimFocus'>
<arg declared_type64='TkWindow*' name='topLevelPtr' type64='^{TkWindow=}'/>
<arg declared_type64='int' name='force' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpClipDrawableToRect'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='d' type64='i'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpCloseDisplay'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpCmapStressed'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='colormap' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpDisplayWarning'>
<arg const='true' declared_type64='char*' name='msg' type64='*'/>
<arg const='true' declared_type64='char*' name='title' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpDrawCharsInContext'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg declared_type64='int' name='numBytes' type64='i'/>
<arg declared_type64='int' name='rangeStart' type64='i'/>
<arg declared_type64='int' name='rangeLength' type64='i'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpDrawFrame'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_3DBorder' name='border' type64='^{Tk_3DBorder_=}'/>
<arg declared_type64='int' name='highlightWidth' type64='i'/>
<arg declared_type64='int' name='borderWidth' type64='i'/>
<arg declared_type64='int' name='relief' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpDrawHighlightBorder'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='GC' name='fgGC' type64='^{_GC=}'/>
<arg declared_type64='GC' name='bgGC' type64='^{_GC=}'/>
<arg declared_type64='int' name='highlightWidth' type64='i'/>
<arg declared_type64='int' name='drawable' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpFreeCursor'>
<arg declared_type64='TkCursor*' name='cursorPtr' type64='^{TkCursor=^{Tk_Cursor_}^{_XDisplay}ii^{Tcl_HashTable}^{Tcl_HashEntry}^{Tcl_HashEntry}^{TkCursor}}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpFreeGCCache'>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpGetAppName'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_DString*' name='name' type64='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpGetBindingXEvent'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='XEvent*' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
</function>
<function name='TkpGetFontAttrsForChar'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<arg declared_type64='Tcl_UniChar' name='c' type64='S'/>
<arg declared_type64='struct TkFontAttributes*' name='faPtr' type64='^{TkFontAttributes=*iiiii}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpGetGCCache'>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<retval declared_type64='TkpGCCache*' type64='^{_TkpGCCache=Q^{CGColor}Q^{CGColor}}'/>
</function>
<function name='TkpGetKeySym'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpGetOtherWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</function>
<function name='TkpGetString'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<arg declared_type64='Tcl_DString*' name='dsPtr' type64='^{Tcl_DString=*ii[200c]}'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='TkpGetSubFonts'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpGetSystemDefault'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='dbName' type64='*'/>
<arg const='true' declared_type64='char*' name='className' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='TkpGetWrapperWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<retval declared_type64='TkWindow*' type64='^{TkWindow=}'/>
</function>
<function name='TkpInit'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpInitGCCache'>
<arg declared_type64='GC' name='gc' type64='^{_GC=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpInitKeymapInfo'>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpInitializeMenuBindings'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='bindingTable' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpMakeContainer'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpMakeMenuWindow'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='transient' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpMakeWindow'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='Window*' function_pointer='true' name='parent' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpMeasureCharsInContext'>
<arg declared_type64='Tk_Font' name='tkfont' type64='^{Tk_Font_=}'/>
<arg const='true' declared_type64='char*' name='source' type64='*'/>
<arg declared_type64='int' name='numBytes' type64='i'/>
<arg declared_type64='int' name='rangeStart' type64='i'/>
<arg declared_type64='int' name='rangeLength' type64='i'/>
<arg declared_type64='int' name='maxLength' type64='i'/>
<arg declared_type64='int' name='flags' type64='i'/>
<arg declared_type64='int*' name='lengthPtr' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpMenuNotifyToplevelCreate'>
<arg declared_type64='Tcl_Interp*' name='interp1' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='char*' name='menuName' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpMenuThreadInit'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpOpenDisplay'>
<arg const='true' declared_type64='char*' name='display_name' type64='*'/>
<retval declared_type64='TkDisplay*' type64='^{TkDisplay=}'/>
</function>
<function name='TkpRedirectKeyEvent'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpReleaseRegion'>
<arg declared_type64='TkRegion' name='r' type64='^{TkRegion_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpRetainRegion'>
<arg declared_type64='TkRegion' name='r' type64='^{TkRegion_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpScanWindowId'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='string' type64='*'/>
<arg declared_type64='Window*' function_pointer='true' name='idPtr' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpSetKeycodeAndState'>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='keySym' type64='i'/>
<arg declared_type64='XEvent*' name='eventPtr' type64='^(_XEvent=i{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}{?=}[24q])'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpSetMainMenubar'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg declared_type64='char*' name='menuName' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpSync'>
<arg declared_type64='Display*' name='display' type64='^{_XDisplay=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TkpTestembedCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpTestsendCmd'>
<arg declared_type64='ClientData' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpTesttextCmd'>
<arg declared_type64='ClientData' name='dummy' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='argc' type64='i'/>
<arg const='true' declared_type64='char**' name='argv' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpUseWindow'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<arg const='true' declared_type64='char*' name='string' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpWindowWasRecentlyDeleted'>
<arg declared_type64='Window*' function_pointer='true' name='win' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='TkDisplay*' name='dispPtr' type64='^{TkDisplay=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TkpWmSetState'>
<arg declared_type64='TkWindow*' name='winPtr' type64='^{TkWindow=}'/>
<arg declared_type64='int' name='state' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TtkArrowSize'>
<arg declared_type64='int' name='h' type64='i'/>
<arg declared_type64='ArrowDirection' type64='i'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TtkDrawArrow'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='Drawable' type64='i'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='int' name='Ttk_Box' type64='i'/>
<arg declared_type64='ArrowDirection' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TtkEnumerateHashTable'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_HashTable*' type64='^{Tcl_HashTable=^^{Tcl_HashEntry}[4^{Tcl_HashEntry}]iiiiii^?^?^{Tcl_HashKeyType}}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='TtkFillArrow'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' name='Drawable' type64='i'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='int' name='Ttk_Box' type64='i'/>
<arg declared_type64='ArrowDirection' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TtkFreeImageSpec'>
<arg declared_type64='Ttk_ImageSpec*' type64='^{TtkImageSpec=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TtkGetImageSpec'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Ttk_ImageSpec*' type64='^{TtkImageSpec=}'/>
</function>
<function name='TtkNullElementDraw'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int' name='Drawable' type64='i'/>
<arg declared_type64='int' name='Ttk_Box' type64='i'/>
<arg declared_type64='Ttk_State' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TtkNullElementSize'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='TtkSelectImage'>
<arg declared_type64='Ttk_ImageSpec*' type64='^{TtkImageSpec=}'/>
<arg declared_type64='Ttk_State' type64='I'/>
<retval declared_type64='Tk_Image' type64='^{Tk_Image__=}'/>
</function>
<function name='Ttk_AddPadding'>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_AnchorBox'>
<arg declared_type64='int' name='parcel' type64='i'/>
<arg declared_type64='int' name='w' type64='i'/>
<arg declared_type64='int' name='h' type64='i'/>
<arg declared_type64='Tk_Anchor' name='anchor' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_BoxContains'>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_ChangeElementState'>
<arg declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
<arg declared_type64='unsigned int' name='set' type64='I'/>
<arg declared_type64='unsigned int' name='clr' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_ClientRegion'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg const='true' declared_type64='char*' name='elementName' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_CreateLayout'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='Ttk_Theme' type64='i'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='void*' name='recordPtr' type64='^v'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<arg declared_type64='Tk_Window' name='tkwin' type64='^{Tk_Window_=}'/>
<retval declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
</function>
<function name='Ttk_CreateResourceCache'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
</function>
<function name='Ttk_CreateSublayout'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='Ttk_Theme' type64='i'/>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='Tk_OptionTable' type64='^{Tk_OptionTable_=}'/>
<retval declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
</function>
<function name='Ttk_CreateTheme'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='int' name='parent' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_DrawLayout'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='Ttk_State' type64='I'/>
<arg declared_type64='int' name='Drawable' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_ElementName'>
<arg declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
<retval const='true' declared_type64='char*' type64='*'/>
</function>
<function name='Ttk_ElementParcel'>
<arg declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_ExpandBox'>
<arg declared_type64='int' name='b' type64='i'/>
<arg declared_type64='int' name='p' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_FindElement'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg const='true' declared_type64='char*' name='nodeName' type64='*'/>
<retval declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
</function>
<function name='Ttk_FreeLayout'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_FreeResourceCache'>
<arg declared_type64='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_GetBorderFromObj'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetButtonDefaultStateFromObj'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetCompoundFromObj'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetCurrentTheme'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetDefaultTheme'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetPaddingFromObj'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetResourceCache'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
</function>
<function name='Ttk_GetStateMapFromObj'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetStateSpecFromObj'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Ttk_StateSpec*' type64='^{_Ttk_StateSpec=II}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetStickyFromObj'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<arg declared_type64='Ttk_Sticky*' type64='^I'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_GetTheme'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_IdentifyElement'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<retval declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
</function>
<function name='Ttk_Init'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_InvokeEnsemble'>
<arg const='true' declared_type64='Ttk_Ensemble*' name='commands' type64='^{TtkEnsemble=*^?^{TtkEnsemble}}'/>
<arg declared_type64='int' name='cmdIndex' type64='i'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='objc' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' name='objv' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_LayoutNodeInternalPadding'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_LayoutNodeInternalParcel'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_LayoutNodeReqSize'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
<arg declared_type64='int*' name='w' type64='^i'/>
<arg declared_type64='int*' name='h' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_LayoutSize'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='Ttk_State' type64='I'/>
<arg declared_type64='int*' name='widthPtr' type64='^i'/>
<arg declared_type64='int*' name='heightPtr' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_LayoutStyle'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<retval declared_type64='Ttk_Style' type64='^{Ttk_Style_=}'/>
</function>
<function name='Ttk_MakeBox'>
<arg declared_type64='int' name='x' type64='i'/>
<arg declared_type64='int' name='y' type64='i'/>
<arg declared_type64='int' name='width' type64='i'/>
<arg declared_type64='int' name='height' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_MakePadding'>
<arg declared_type64='short' name='l' type64='s'/>
<arg declared_type64='short' name='t' type64='s'/>
<arg declared_type64='short' name='r' type64='s'/>
<arg declared_type64='short' name='b' type64='s'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_NewStateSpecObj'>
<arg declared_type64='unsigned int' name='onbits' type64='I'/>
<arg declared_type64='unsigned int' name='offbits' type64='I'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_NewStickyObj'>
<arg declared_type64='Ttk_Sticky' type64='I'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_PackBox'>
<arg declared_type64='int*' name='cavity' type64='^i'/>
<arg declared_type64='int' name='w' type64='i'/>
<arg declared_type64='int' name='h' type64='i'/>
<arg declared_type64='Ttk_Side' name='side' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_PadBox'>
<arg declared_type64='int' name='b' type64='i'/>
<arg declared_type64='int' name='p' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_PlaceBox'>
<arg declared_type64='int*' name='cavity' type64='^i'/>
<arg declared_type64='int' name='w' type64='i'/>
<arg declared_type64='int' name='h' type64='i'/>
<arg declared_type64='Ttk_Side' type64='i'/>
<arg declared_type64='Ttk_Sticky' type64='I'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_PlaceElement'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='Ttk_Element' type64='^{Ttk_LayoutNode_=}'/>
<arg declared_type64='int' name='Ttk_Box' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_PlaceLayout'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='Ttk_State' type64='I'/>
<arg declared_type64='int' name='Ttk_Box' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_PositionBox'>
<arg declared_type64='int*' name='cavity' type64='^i'/>
<arg declared_type64='int' name='w' type64='i'/>
<arg declared_type64='int' name='h' type64='i'/>
<arg declared_type64='Ttk_PositionSpec' type64='I'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_QueryOption'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Ttk_State' type64='I'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_RebindSublayout'>
<arg declared_type64='Ttk_Layout' type64='^{Ttk_Layout_=}'/>
<arg declared_type64='void*' name='recordPtr' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_RegisterCleanup'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='void*' name='deleteData' type64='^v'/>
<arg declared_type64='Ttk_CleanupProc*' function_pointer='true' name='cleanupProc' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_RegisterElement'>
<arg declared_type64='Tcl_Interp*' name='interp' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='theme' type64='i'/>
<arg const='true' declared_type64='char*' name='elementName' type64='*'/>
<arg declared_type64='Ttk_ElementSpec*' type64='^{Ttk_ElementSpec=iQ^{Ttk_ElementOptionSpec}^?^?}'/>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<retval declared_type64='int*' type64='^i'/>
</function>
<function name='Ttk_RegisterElementFactory'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg const='true' declared_type64='char*' name='name' type64='*'/>
<arg declared_type64='Ttk_ElementFactory' function_pointer='true' type64='^?'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='Tcl_Obj **' type64='^^{Tcl_Obj}'/>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='void*' name='clientData' type64='^v'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_RegisterLayout'>
<arg declared_type64='int' name='theme' type64='i'/>
<arg const='true' declared_type64='char*' name='className' type64='*'/>
<arg declared_type64='Ttk_LayoutSpec' name='layoutSpec' type64='^{_Ttk_LayoutSpec=*I}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_RegisterLayouts'>
<arg declared_type64='int' name='theme' type64='i'/>
<arg declared_type64='Ttk_LayoutSpec' name='layoutTable' type64='^{_Ttk_LayoutSpec=*I}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_RegisterNamedColor'>
<arg declared_type64='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='XColor*' type64='^{_XColor=QSSScc}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_RelievePadding'>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_SetThemeEnabledProc'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_StateMapLookup'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='Ttk_StateMap' type64='i'/>
<arg declared_type64='Ttk_State' type64='I'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_StateTableLookup'>
<arg declared_type64='Ttk_StateTable*' name='map' type64='^{_Ttk_StateTable=iII}'/>
<arg declared_type64='Ttk_State' type64='I'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_StickBox'>
<arg declared_type64='int' name='parcel' type64='i'/>
<arg declared_type64='int' name='w' type64='i'/>
<arg declared_type64='int' name='h' type64='i'/>
<arg declared_type64='Ttk_Sticky' name='sticky' type64='I'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_StyleDefault'>
<arg declared_type64='Ttk_Style' type64='^{Ttk_Style_=}'/>
<arg const='true' declared_type64='char*' name='optionName' type64='*'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_StyleMap'>
<arg declared_type64='Ttk_Style' type64='^{Ttk_Style_=}'/>
<arg const='true' declared_type64='char*' name='optionName' type64='*'/>
<arg declared_type64='Ttk_State' type64='I'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_StylePkgInit'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='Ttk_UniformPadding'>
<arg declared_type64='short' name='borderWidth' type64='s'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='Ttk_UseBorder'>
<arg declared_type64='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_UseColor'>
<arg declared_type64='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_UseFont'>
<arg declared_type64='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
</function>
<function name='Ttk_UseImage'>
<arg declared_type64='Ttk_ResourceCache' type64='^{Ttk_ResourceCache_=}'/>
<arg declared_type64='Tk_Window' type64='^{Tk_Window_=}'/>
<arg declared_type64='Tcl_Obj*' type64='^{Tcl_Obj=i*i^{Tcl_ObjType}(?=qd^vq{?=^v^v}{?=^vQ})}'/>
<retval declared_type64='Tk_Image' type64='^{Tk_Image__=}'/>
</function>
<function name='Ttk_UseTheme'>
<arg declared_type64='Tcl_Interp*' type64='^{Tcl_Interp=*^?i}'/>
<arg declared_type64='int' name='Ttk_Theme' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XAllocClassHint'>
<retval declared_type64='XClassHint*' type64='^{_XClassHint=**}'/>
</function>
<function name='XAllocIconSize'>
<retval declared_type64='XIconSize*' type64='^{_XIconSize=iiiiii}'/>
</function>
<function name='XAllocSizeHints'>
<retval declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
</function>
<function name='XAllocStandardColormap'>
<retval declared_type64='XStandardColormap*' type64='^{_XStandardColormap=QQQQQQQQQQ}'/>
</function>
<function name='XAllocWMHints'>
<retval declared_type64='XWMHints*' type64='^{_XWMHints=}'/>
</function>
<function name='XClipBox'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='XRectangle*' type64='^{_XRectangle=ssSS}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XCreateRegion'>
<retval declared_type64='Region' type64='^{_XRegion=}'/>
</function>
<function name='XDefaultString'>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='XDeleteContext'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='XID' type64='Q'/>
<arg declared_type64='XContext' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XDestroyRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XEmptyRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XEqualRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XFindContext'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='XID' type64='Q'/>
<arg declared_type64='XContext' type64='i'/>
<arg declared_type64='XPointer*' type64='^*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XGetClassHint'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XClassHint*' type64='^{_XClassHint=**}'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetIconSizes'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XIconSize**' type64='^^{?}'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetNormalHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetRGBColormaps'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XStandardColormap**' type64='^^{?}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetSizeHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetStandardColormap'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XStandardColormap*' type64='^{_XStandardColormap=QQQQQQQQQQ}'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetTextProperty'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetWMClientMachine'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetWMHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<retval declared_type64='XWMHints*' type64='^{_XWMHints=}'/>
</function>
<function name='XGetWMIconName'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetWMName'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetWMNormalHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<arg declared_type64='long*' type64='^q'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetWMSizeHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<arg declared_type64='long*' type64='^q'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XGetZoomHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XIntersectRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XLookupString'>
<arg declared_type64='XKeyEvent*' type64='^{_XKeyEvent=}'/>
<arg declared_type64='char*' type64='*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='KeySym*' type64='^Q'/>
<arg declared_type64='XComposeStatus*' type64='^{_XComposeStatus=*i}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XMatchVisualInfo'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XVisualInfo*' type64='^{_XVisualInfo=^{_Visual=}QiiiQQQii}'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XOffsetRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XPointInRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XPolygonRegion'>
<arg declared_type64='XPoint*' type64='^{_XPoint=ss}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='Region' type64='^{_XRegion=}'/>
</function>
<function name='XRectInRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='unsigned int' type64='I'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XSaveContext'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='XID' type64='Q'/>
<arg declared_type64='XContext' type64='i'/>
<arg const='true' declared_type64='char*' type64='*'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XSetClassHint'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XClassHint*' type64='^{_XClassHint=**}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetIconSizes'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XIconSize*' type64='^{_XIconSize=iiiiii}'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetNormalHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetRGBColormaps'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XStandardColormap*' type64='^{_XStandardColormap=QQQQQQQQQQ}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetRegion'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='GC' type64='^{_GC=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetSizeHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetStandardColormap'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XStandardColormap*' type64='^{_XStandardColormap=QQQQQQQQQQ}'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetStandardProperties'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='Pixmap' type64='Q'/>
<arg declared_type64='char**' type64='^*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetTextProperty'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetWMHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XWMHints*' type64='^{_XWMHints=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetWMIconName'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetWMName'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetWMNormalHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetWMProperties'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<arg declared_type64='char**' type64='^*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<arg declared_type64='XWMHints*' type64='^{_XWMHints=}'/>
<arg declared_type64='XClassHint*' type64='^{_XClassHint=**}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetWMSizeHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<arg declared_type64='Atom' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSetZoomHints'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XShrinkRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='int' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XSubtractRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XTextPropertyToStringList'>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<arg declared_type64='char***' type64='^^*'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='Status' type64='i'/>
</function>
<function name='XUnionRectWithRegion'>
<arg declared_type64='XRectangle*' type64='^{_XRectangle=ssSS}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XUnionRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XWMGeometry'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='int' type64='i'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='unsigned int' type64='I'/>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XXorRegion'>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<arg declared_type64='Region' type64='^{_XRegion=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XmbSetWMProperties'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='Window*' function_pointer='true' type64='^?'>
<retval declared_type64='int' type64='i'/>
</arg>
<arg const='true' declared_type64='char*' type64='*'/>
<arg const='true' declared_type64='char*' type64='*'/>
<arg declared_type64='char**' type64='^*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XSizeHints*' type64='^{_XSizeHints=qiiiiiiiiii{?=ii}{?=ii}iii}'/>
<arg declared_type64='XWMHints*' type64='^{_XWMHints=}'/>
<arg declared_type64='XClassHint*' type64='^{_XClassHint=**}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XmbTextListToTextProperty'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='char**' type64='^*'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XICCEncodingStyle' type64='i'/>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XmbTextPropertyToTextList'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<arg declared_type64='char***' type64='^^*'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XwcFreeStringList'>
<arg declared_type64='wchar_t**' type64='^^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='XwcTextListToTextProperty'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='wchar_t**' type64='^^i'/>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='XICCEncodingStyle' type64='i'/>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='XwcTextPropertyToTextList'>
<arg declared_type64='Display*' type64='^{_XDisplay=}'/>
<arg declared_type64='XTextProperty*' type64='^{_XTextProperty=*QiQ}'/>
<arg declared_type64='wchar_t***' type64='^^^i'/>
<arg declared_type64='int*' type64='^i'/>
<retval declared_type64='int' type64='i'/>
</function>
<function_alias name='Tk_BackgroundError' original='Tcl_BackgroundError'/>
<function_alias name='Tk_CancelIdleCall' original='Tcl_CancelIdleCall'/>
<function_alias name='Tk_CreateFileHandler' original='Tcl_CreateFileHandler'/>
<function_alias name='Tk_CreateTimerHandler' original='Tcl_CreateTimerHandler'/>
<function_alias name='Tk_DeleteFileHandler' original='Tcl_DeleteFileHandler'/>
<function_alias name='Tk_DeleteTimerHandler' original='Tcl_DeleteTimerHandler'/>
<function_alias name='Tk_DoOneEvent' original='Tcl_DoOneEvent'/>
<function_alias name='Tk_DoWhenIdle' original='Tcl_DoWhenIdle'/>
<function_alias name='Tk_EventuallyFree' original='Tcl_EventuallyFree'/>
<function_alias name='Tk_Preserve' original='Tcl_Preserve'/>
<function_alias name='Tk_Release' original='Tcl_Release'/>
<function_alias name='Tk_Sleep' original='Tcl_Sleep'/>
</signatures>
