<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/SecurityFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant const='true' declared_type='NSString*' name='CWBSSIDDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CWCountryCodeDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CWErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='CWLinkDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CWLinkQualityDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CWLinkQualityNotificationRSSIKey' type='@'/>
<constant const='true' declared_type='NSString*' name='CWLinkQualityNotificationTransmitRateKey' type='@'/>
<constant const='true' declared_type='NSString*' name='CWModeDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CWPowerDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CWSSIDDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='CWScanCacheDidUpdateNotification' type='@'/>
<enum name='CWEventTypeBSSIDDidChange' value='3'/>
<enum name='CWEventTypeCountryCodeDidChange' value='4'/>
<enum name='CWEventTypeLinkDidChange' value='5'/>
<enum name='CWEventTypeLinkQualityDidChange' value='6'/>
<enum name='CWEventTypeModeDidChange' value='7'/>
<enum name='CWEventTypeNone' value='0'/>
<enum name='CWEventTypePowerDidChange' value='1'/>
<enum name='CWEventTypeSSIDDidChange' value='2'/>
<enum name='CWEventTypeScanCacheUpdated' value='8'/>
<enum name='CWEventTypeUnknown' value='2147483647' value64='9223372036854775807'/>
<enum name='kCWAPFullErr' value='-3913'/>
<enum name='kCWAssociationDeniedErr' value='-3909'/>
<enum name='kCWAuthenticationAlgorithmUnsupportedErr' value='-3910'/>
<enum name='kCWChallengeFailureErr' value='-3912'/>
<enum name='kCWChannelBand2GHz' value='1'/>
<enum name='kCWChannelBand5GHz' value='2'/>
<enum name='kCWChannelBandUnknown' value='0'/>
<enum name='kCWChannelWidth160MHz' value='4'/>
<enum name='kCWChannelWidth20MHz' value='1'/>
<enum name='kCWChannelWidth40MHz' value='2'/>
<enum name='kCWChannelWidth80MHz' value='3'/>
<enum name='kCWChannelWidthUnknown' value='0'/>
<enum name='kCWCipherKeyFlagsMulticast' value='4'/>
<enum name='kCWCipherKeyFlagsNone' value='0'/>
<enum name='kCWCipherKeyFlagsRx' value='16'/>
<enum name='kCWCipherKeyFlagsTx' value='8'/>
<enum name='kCWCipherKeyFlagsUnicast' value='2'/>
<enum name='kCWCipherSuiteRejectedErr' value='-3923'/>
<enum name='kCWDSSSOFDMUnsupportedErr' value='-3916'/>
<enum name='kCWEAPOLErr' value='1'/>
<enum name='kCWErr' value='-3931'/>
<enum name='kCWHTFeaturesNotSupportedErr' value='-3926'/>
<enum name='kCWIBSSModeSecurityNone' value='0'/>
<enum name='kCWIBSSModeSecurityWEP104' value='2'/>
<enum name='kCWIBSSModeSecurityWEP40' value='1'/>
<enum name='kCWIPCFailureErr' value='-3929'/>
<enum name='kCWInterfaceModeHostAP' value='3'/>
<enum name='kCWInterfaceModeIBSS' value='2'/>
<enum name='kCWInterfaceModeNone' value='0'/>
<enum name='kCWInterfaceModeStation' value='1'/>
<enum name='kCWInvalidAKMPErr' value='-3920'/>
<enum name='kCWInvalidAuthenticationSequenceNumberErr' value='-3911'/>
<enum name='kCWInvalidFormatErr' value='-3904'/>
<enum name='kCWInvalidGroupCipherErr' value='-3918'/>
<enum name='kCWInvalidInformationElementErr' value='-3917'/>
<enum name='kCWInvalidPMKErr' value='-3924'/>
<enum name='kCWInvalidPairwiseCipherErr' value='-3919'/>
<enum name='kCWInvalidParameterErr' value='-3900'/>
<enum name='kCWInvalidRSNCapabilitiesErr' value='-3922'/>
<enum name='kCWKeychainDomainNone' value='0'/>
<enum name='kCWKeychainDomainSystem' value='2'/>
<enum name='kCWKeychainDomainUser' value='1'/>
<enum name='kCWNoErr' value='0'/>
<enum name='kCWNoMemoryErr' value='-3901'/>
<enum name='kCWNotSupportedErr' value='-3903'/>
<enum name='kCWOperationNotPermittedErr' value='-3930'/>
<enum name='kCWPCOTransitionTimeNotSupportedErr' value='-3927'/>
<enum name='kCWPHYMode11a' value='1'/>
<enum name='kCWPHYMode11ac' value='5'/>
<enum name='kCWPHYMode11b' value='2'/>
<enum name='kCWPHYMode11g' value='3'/>
<enum name='kCWPHYMode11n' value='4'/>
<enum name='kCWPHYModeNone' value='0'/>
<enum name='kCWReassociationDeniedErr' value='-3908'/>
<enum name='kCWReferenceNotBoundErr' value='-3928'/>
<enum name='kCWSecurityDynamicWEP' value='6'/>
<enum name='kCWSecurityEnterprise' value='10'/>
<enum name='kCWSecurityNone' value='0'/>
<enum name='kCWSecurityPersonal' value='5'/>
<enum name='kCWSecurityUnknown' value='2147483647' value64='9223372036854775807'/>
<enum name='kCWSecurityWEP' value='1'/>
<enum name='kCWSecurityWPA2Enterprise' value='9'/>
<enum name='kCWSecurityWPA2Personal' value='4'/>
<enum name='kCWSecurityWPAEnterprise' value='7'/>
<enum name='kCWSecurityWPAEnterpriseMixed' value='8'/>
<enum name='kCWSecurityWPAPersonal' value='2'/>
<enum name='kCWSecurityWPAPersonalMixed' value='3'/>
<enum name='kCWShortSlotUnsupportedErr' value='-3915'/>
<enum name='kCWSupplicantTimeoutErr' value='-3925'/>
<enum name='kCWTimeoutErr' value='-3905'/>
<enum name='kCWUnknownErr' value='-3902'/>
<enum name='kCWUnspecifiedFailureErr' value='-3906'/>
<enum name='kCWUnsupportedCapabilitiesErr' value='-3907'/>
<enum name='kCWUnsupportedRSNVersionErr' value='-3921'/>
<enum name='kCWUnsupportedRateSetErr' value='-3914'/>
<function name='CWKeychainCopyEAPIdentity'>
<arg declared_type='CFDataRef' name='ssidData' type='^{__CFData=}'/>
<arg declared_type='SecIdentityRef*' name='identity' type='^^{OpaqueSecIdentityRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainCopyEAPIdentityList'>
<arg declared_type='CFArrayRef*' name='list' type='^^{__CFArray}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainCopyEAPUsernameAndPassword'>
<arg declared_type='CFDataRef' name='ssidData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef*' name='username' type='^^{__CFString}'/>
<arg declared_type='CFStringRef*' name='password' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainCopyPassword'>
<arg declared_type='CFDataRef' name='ssidData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef*' name='password' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainCopyWiFiEAPIdentity'>
<arg declared_type='CWKeychainDomain' name='domain' type='i' type64='q'/>
<arg declared_type='NSData*' name='ssid' type='@'/>
<arg declared_type='SecIdentityRef*' name='identity' type='^^{OpaqueSecIdentityRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainDeleteEAPUsernameAndPassword'>
<arg declared_type='CFDataRef' name='ssidData' type='^{__CFData=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainDeletePassword'>
<arg declared_type='CFDataRef' name='ssidData' type='^{__CFData=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainDeleteWiFiEAPUsernameAndPassword'>
<arg declared_type='CWKeychainDomain' name='domain' type='i' type64='q'/>
<arg declared_type='NSData*' name='ssid' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainDeleteWiFiPassword'>
<arg declared_type='CWKeychainDomain' name='domain' type='i' type64='q'/>
<arg declared_type='NSData*' name='ssid' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainFindWiFiEAPUsernameAndPassword'>
<arg declared_type='CWKeychainDomain' name='domain' type='i' type64='q'/>
<arg declared_type='NSData*' name='ssid' type='@'/>
<arg declared_type='NSString**' name='username' type='^@'/>
<arg declared_type='NSString**' name='password' type='^@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainFindWiFiPassword'>
<arg declared_type='CWKeychainDomain' name='domain' type='i' type64='q'/>
<arg declared_type='NSData*' name='ssid' type='@'/>
<arg declared_type='NSString**' name='password' type='^@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainSetEAPIdentity'>
<arg declared_type='CFDataRef' name='ssidData' type='^{__CFData=}'/>
<arg declared_type='SecIdentityRef' name='identity' type='^{OpaqueSecIdentityRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainSetEAPUsernameAndPassword'>
<arg declared_type='CFDataRef' name='ssidData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef' name='username' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='password' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainSetPassword'>
<arg declared_type='CFDataRef' name='ssidData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef' name='password' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainSetWiFiEAPIdentity'>
<arg declared_type='CWKeychainDomain' name='domain' type='i' type64='q'/>
<arg declared_type='NSData*' name='ssid' type='@'/>
<arg declared_type='SecIdentityRef' name='identity' type='^{OpaqueSecIdentityRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainSetWiFiEAPUsernameAndPassword'>
<arg declared_type='CWKeychainDomain' name='domain' type='i' type64='q'/>
<arg declared_type='NSData*' name='ssid' type='@'/>
<arg declared_type='NSString*' name='username' type='@'/>
<arg declared_type='NSString*' name='password' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWKeychainSetWiFiPassword'>
<arg declared_type='CWKeychainDomain' name='domain' type='i' type64='q'/>
<arg declared_type='NSData*' name='ssid' type='@'/>
<arg declared_type='NSString*' name='password' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CWMergeNetworks'>
<arg declared_type='NSSet*' name='networks' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<class name='CWChannel'>
<method selector='channelBand'>
<retval declared_type='CWChannelBand' type='i' type64='q'/>
</method>
<method selector='channelNumber'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='channelWidth'>
<retval declared_type='CWChannelWidth' type='i' type64='q'/>
</method>
<method selector='isEqualToChannel:'>
<arg declared_type='CWChannel*' index='0' name='channel' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CWConfiguration'>
<method class_method='true' selector='configuration'>
<retval declared_type='instancetype' type='@'/>
</method>
<method class_method='true' selector='configurationWithConfiguration:'>
<arg declared_type='CWConfiguration*' index='0' name='configuration' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='init'>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='initWithConfiguration:'>
<arg declared_type='CWConfiguration*' index='0' name='configuration' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='isEqualToConfiguration:'>
<arg declared_type='CWConfiguration*' index='0' name='configuration' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='networkProfiles'>
<retval declared_type='NSOrderedSet*' type='@'/>
</method>
<method selector='rememberJoinedNetworks'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requireAdministratorForAssociation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requireAdministratorForIBSSMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requireAdministratorForPower'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CWInterface'>
<method selector='activePHYMode'>
<retval declared_type='CWPHYMode' type='i' type64='q'/>
</method>
<method selector='associateToEnterpriseNetwork:identity:username:password:error:'>
<arg declared_type='CWNetwork*' index='0' name='network' type='@'/>
<arg declared_type='SecIdentityRef' index='1' name='identity' type='^{OpaqueSecIdentityRef=}'/>
<arg declared_type='NSString*' index='2' name='username' type='@'/>
<arg declared_type='NSString*' index='3' name='password' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='associateToNetwork:password:error:'>
<arg declared_type='CWNetwork*' index='0' name='network' type='@'/>
<arg declared_type='NSString*' index='1' name='password' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bssid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cachedScanResults'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='commitConfiguration:authorization:error:'>
<arg declared_type='CWConfiguration*' index='0' name='configuration' type='@'/>
<arg declared_type='SFAuthorization*' index='1' name='authorization' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='configuration'>
<retval declared_type='CWConfiguration*' type='@'/>
</method>
<method selector='countryCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='disassociate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hardwareAddress'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithInterfaceName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method class_method='true' selector='interface'>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='interfaceMode'>
<retval declared_type='CWInterfaceMode' type='i' type64='q'/>
</method>
<method selector='interfaceName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='interfaceNames'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='interfaceWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='noiseMeasurement'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='powerOn'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rssiValue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='scanForNetworksWithName:error:'>
<arg declared_type='NSString*' index='0' name='networkName' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@' type_modifier='o'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='scanForNetworksWithSSID:error:'>
<arg declared_type='NSData*' index='0' name='ssid' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@' type_modifier='o'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='security'>
<retval declared_type='CWSecurity' type='i' type64='q'/>
</method>
<method selector='serviceActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPairwiseMasterKey:error:'>
<arg declared_type='NSData*' index='0' name='key' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPower:error:'>
<arg declared_type='BOOL' index='0' name='power' type='B'/>
<arg declared_type='NSError**' index='1' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setWEPKey:flags:index:error:'>
<arg declared_type='NSData*' index='0' name='key' type='@'/>
<arg declared_type='CWCipherKeyFlags' index='1' name='flags' type='I' type64='Q'/>
<arg declared_type='NSInteger' index='2' name='index' type='i' type64='q'/>
<arg declared_type='NSError**' index='3' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setWLANChannel:error:'>
<arg declared_type='CWChannel*' index='0' name='channel' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ssid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='ssidData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='startIBSSModeWithSSID:security:channel:password:error:'>
<arg declared_type='NSData*' index='0' name='ssidData' type='@'/>
<arg declared_type='CWIBSSModeSecurity' index='1' name='security' type='i' type64='q'/>
<arg declared_type='NSUInteger' index='2' name='channel' type='I' type64='Q'/>
<arg declared_type='NSString*' index='3' name='password' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportedWLANChannels'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='transmitPower'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='transmitRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='wlanChannel'>
<retval declared_type='CWChannel*' type='@'/>
</method>
</class>
<class name='CWMutableConfiguration'>
<method selector='networkProfiles'>
<retval declared_type='NSOrderedSet*' type='@'/>
</method>
<method selector='rememberJoinedNetworks'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requireAdministratorForAssociation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requireAdministratorForIBSSMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requireAdministratorForPower'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNetworkProfiles:'>
<arg declared_type='NSOrderedSet*' index='0' name='networkProfiles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRememberJoinedNetworks:'>
<arg declared_type='BOOL' index='0' name='rememberJoinedNetworks' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequireAdministratorForAssociation:'>
<arg declared_type='BOOL' index='0' name='requireAdministratorForAssociation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequireAdministratorForIBSSMode:'>
<arg declared_type='BOOL' index='0' name='requireAdministratorForIBSSMode' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequireAdministratorForPower:'>
<arg declared_type='BOOL' index='0' name='requireAdministratorForPower' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CWMutableNetworkProfile'>
<method selector='security'>
<retval declared_type='CWSecurity' type='i' type64='q'/>
</method>
<method selector='setSecurity:'>
<arg declared_type='CWSecurity' index='0' name='security' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSsidData:'>
<arg declared_type='NSData*' index='0' name='ssidData' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ssidData'>
<retval declared_type='NSData*' type='@'/>
</method>
</class>
<class name='CWNetwork'>
<method selector='beaconInterval'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='bssid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='countryCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='ibss'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='informationElementData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='isEqualToNetwork:'>
<arg declared_type='CWNetwork*' index='0' name='network' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='noiseMeasurement'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='rssiValue'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='ssid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='ssidData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='supportsPHYMode:'>
<arg declared_type='CWPHYMode' index='0' name='phyMode' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsSecurity:'>
<arg declared_type='CWSecurity' index='0' name='security' type='i' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='wlanChannel'>
<retval declared_type='CWChannel*' type='@'/>
</method>
</class>
<class name='CWNetworkProfile'>
<method selector='init'>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='initWithNetworkProfile:'>
<arg declared_type='CWNetworkProfile*' index='0' name='networkProfile' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='isEqualToNetworkProfile:'>
<arg declared_type='CWNetworkProfile*' index='0' name='networkProfile' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='networkProfile'>
<retval declared_type='instancetype' type='@'/>
</method>
<method class_method='true' selector='networkProfileWithNetworkProfile:'>
<arg declared_type='CWNetworkProfile*' index='0' name='networkProfile' type='@'/>
<retval declared_type='instancetype' type='@'/>
</method>
<method selector='security'>
<retval declared_type='CWSecurity' type='i' type64='q'/>
</method>
<method selector='ssid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='ssidData'>
<retval declared_type='NSData*' type='@'/>
</method>
</class>
<class name='CWWiFiClient'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='CWWiFiClient*' type='@'/>
</method>
<method selector='interface'>
<retval declared_type='CWInterface*' type='@'/>
</method>
<method class_method='true' selector='interfaceNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='interfaceWithName:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='CWInterface*' type='@'/>
</method>
<method selector='interfaces'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedWiFiClient'>
<retval declared_type='CWWiFiClient*' type='@'/>
</method>
<method selector='startMonitoringEventWithType:error:'>
<arg declared_type='CWEventType' index='0' name='type' type='i' type64='q'/>
<arg declared_type='NSError**' index='1' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopMonitoringAllEventsAndReturnError:'>
<arg declared_type='NSError**' index='0' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopMonitoringEventWithType:error:'>
<arg declared_type='CWEventType' index='0' name='type' type='i' type64='q'/>
<arg declared_type='NSError**' index='1' name='error' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='bssidDidChangeForWiFiInterfaceWithName:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientConnectionInterrupted'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientConnectionInvalidated'>
<retval declared_type='void' type='v'/>
</method>
<method selector='countryCodeDidChangeForWiFiInterfaceWithName:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='linkDidChangeForWiFiInterfaceWithName:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='linkQualityDidChangeForWiFiInterfaceWithName:rssi:transmitRate:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<arg declared_type='NSInteger' index='1' name='rssi' type='i' type64='q'/>
<arg declared_type='double' index='2' name='transmitRate' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='modeDidChangeForWiFiInterfaceWithName:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='powerStateDidChangeForWiFiInterfaceWithName:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scanCacheUpdatedForWiFiInterfaceWithName:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ssidDidChangeForWiFiInterfaceWithName:'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='CWEventDelegate'>
<method selector='bssidDidChangeForWiFiInterfaceWithName:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientConnectionInterrupted' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientConnectionInvalidated' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='countryCodeDidChangeForWiFiInterfaceWithName:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='linkDidChangeForWiFiInterfaceWithName:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='linkQualityDidChangeForWiFiInterfaceWithName:rssi:transmitRate:' type='v24@0:4@8i12d16' type64='v40@0:8@16q24d32'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<arg declared_type='NSInteger' index='1' name='rssi' type='i' type64='q'/>
<arg declared_type='double' index='2' name='transmitRate' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='modeDidChangeForWiFiInterfaceWithName:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='powerStateDidChangeForWiFiInterfaceWithName:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scanCacheUpdatedForWiFiInterfaceWithName:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ssidDidChangeForWiFiInterfaceWithName:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='interfaceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
