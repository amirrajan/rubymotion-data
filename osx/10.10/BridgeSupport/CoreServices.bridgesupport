<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework'/>
<struct name='AEAddressDesc' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type='DescType' name='descriptorType' type='L' type64='I'/>
<field declared_type='AEDataStorage' name='dataHandle' type='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='AEBuildError' type='{AEBuildError=&quot;fError&quot;I&quot;fErrorPos&quot;I}'>
<field declared_type='AEBuildErrorCode' name='fError' type='L' type64='I'/>
<field declared_type='UInt32' name='fErrorPos' type='L' type64='I'/>
</struct>
<struct name='AEDesc' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type='DescType' name='descriptorType' type='L' type64='I'/>
<field declared_type='AEDataStorage' name='dataHandle' type='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='AEDescList' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type='DescType' name='descriptorType' type='L' type64='I'/>
<field declared_type='AEDataStorage' name='dataHandle' type='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='AEKeyDesc' type='{AEKeyDesc=&quot;descKey&quot;I&quot;descContent&quot;{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}}'>
<field declared_type='AEKeyword' name='descKey' type='L' type64='I'/>
<field declared_type='AEDesc' name='descContent' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'/>
</struct>
<struct name='AERecord' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type='DescType' name='descriptorType' type='L' type64='I'/>
<field declared_type='AEDataStorage' name='dataHandle' type='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='AERemoteProcessResolverContext' type='{AERemoteProcessResolverContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{AERemoteProcessResolverContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='CFAllocatorRetainCallBack' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='CFAllocatorReleaseCallBack' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
</struct>
<struct name='AppleEvent' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'>
<field declared_type='DescType' name='descriptorType' type='L' type64='I'/>
<field declared_type='AEDataStorage' name='dataHandle' type='^^{OpaqueAEDataStorageType}'/>
</struct>
<struct name='IntlText' type='{IntlText=&quot;theScriptCode&quot;s&quot;theLangCode&quot;s&quot;theText&quot;[1c]}'>
<field declared_type='ScriptCode' name='theScriptCode' type='s'/>
<field declared_type='LangCode' name='theLangCode' type='s'/>
<field declared_type='char*' name='theText' type='[1c]'/>
</struct>
<struct name='OffsetArray' type='{OffsetArray=&quot;fNumOfOffsets&quot;s&quot;fOffset&quot;[1l]}' type64='{OffsetArray=&quot;fNumOfOffsets&quot;s&quot;fOffset&quot;[1i]}'>
<field declared_type='SInt16' name='fNumOfOffsets' type='s'/>
<field declared_type='SInt32*' name='fOffset' type='[1l]' type64='[1i]'/>
</struct>
<struct name='TScriptingSizeResource' type='{TScriptingSizeResource=&quot;scriptingSizeFlags&quot;s&quot;minStackSize&quot;I&quot;preferredStackSize&quot;I&quot;maxStackSize&quot;I&quot;minHeapSize&quot;I&quot;preferredHeapSize&quot;I&quot;maxHeapSize&quot;I}'>
<field declared_type='SInt16' name='scriptingSizeFlags' type='s'/>
<field declared_type='UInt32' name='minStackSize' type='L' type64='I'/>
<field declared_type='UInt32' name='preferredStackSize' type='L' type64='I'/>
<field declared_type='UInt32' name='maxStackSize' type='L' type64='I'/>
<field declared_type='UInt32' name='minHeapSize' type='L' type64='I'/>
<field declared_type='UInt32' name='preferredHeapSize' type='L' type64='I'/>
<field declared_type='UInt32' name='maxHeapSize' type='L' type64='I'/>
</struct>
<struct name='TextRange' type='{TextRange=&quot;fStart&quot;i&quot;fEnd&quot;i&quot;fHiliteStyle&quot;s}'>
<field declared_type='SInt32' name='fStart' type='l' type64='i'/>
<field declared_type='SInt32' name='fEnd' type='l' type64='i'/>
<field declared_type='SInt16' name='fHiliteStyle' type='s'/>
</struct>
<struct name='TextRangeArray' type='{TextRangeArray=&quot;fNumOfRanges&quot;s&quot;fRange&quot;[1{TextRange=&quot;fStart&quot;i&quot;fEnd&quot;i&quot;fHiliteStyle&quot;s}]}'>
<field declared_type='SInt16' name='fNumOfRanges' type='s'/>
<field declared_type='TextRange*' name='fRange' type='[1{TextRange=&quot;fStart&quot;i&quot;fEnd&quot;i&quot;fHiliteStyle&quot;s}]'/>
</struct>
<struct name='WritingCode' type='{WritingCode=&quot;theScriptCode&quot;s&quot;theLangCode&quot;s}'>
<field declared_type='ScriptCode' name='theScriptCode' type='s'/>
<field declared_type='LangCode' name='theLangCode' type='s'/>
</struct>
<struct name='ccntTokenRecord' type='{ccntTokenRecord=&quot;tokenClass&quot;I&quot;token&quot;{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}}'>
<field declared_type='DescType' name='tokenClass' type='L' type64='I'/>
<field declared_type='AEDesc' name='token' type='{AEDesc=&quot;descriptorType&quot;I&quot;dataHandle&quot;^^{OpaqueAEDataStorageType}}'/>
</struct>
<cftype name='AEDataStorageType' type='^{OpaqueAEDataStorageType=}'/>
<cftype name='AERemoteProcessResolverRef' type='^{AERemoteProcessResolver=}'/>
<cftype name='AEStreamRef' type='^{OpaqueAEStreamRef=}'/>
<constant const='true' declared_type='CFStringRef' name='kAERemoteProcessNameKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kAERemoteProcessProcessIDKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kAERemoteProcessURLKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kAERemoteProcessUserIDKey' type='^{__CFString=}'/>
<enum name='KAEISHandleCGI' value='1935961955'/>
<enum name='aeBuildSyntaxBadData' value='12'/>
<enum name='aeBuildSyntaxBadDesc' value='11'/>
<enum name='aeBuildSyntaxBadEOF' value='2'/>
<enum name='aeBuildSyntaxBadHex' value='6'/>
<enum name='aeBuildSyntaxBadNegative' value='4'/>
<enum name='aeBuildSyntaxBadToken' value='1'/>
<enum name='aeBuildSyntaxCoercedList' value='18'/>
<enum name='aeBuildSyntaxMissingQuote' value='5'/>
<enum name='aeBuildSyntaxNoCloseBrace' value='15'/>
<enum name='aeBuildSyntaxNoCloseBracket' value='14'/>
<enum name='aeBuildSyntaxNoCloseHex' value='8'/>
<enum name='aeBuildSyntaxNoCloseParen' value='13'/>
<enum name='aeBuildSyntaxNoCloseString' value='10'/>
<enum name='aeBuildSyntaxNoColon' value='17'/>
<enum name='aeBuildSyntaxNoEOF' value='3'/>
<enum name='aeBuildSyntaxNoErr' value='0'/>
<enum name='aeBuildSyntaxNoKey' value='16'/>
<enum name='aeBuildSyntaxOddHex' value='7'/>
<enum name='aeBuildSyntaxUncoercedDoubleAt' value='19'/>
<enum name='aeBuildSyntaxUncoercedHex' value='9'/>
<enum name='cADBAddress' value='1667327074'/>
<enum name='cAEList' value='1818850164'/>
<enum name='cAddressSpec' value='1667327090'/>
<enum name='cAppleTalkAddress' value='1667331104'/>
<enum name='cApplication' value='1667330160'/>
<enum name='cArc' value='1667330659'/>
<enum name='cBoolean' value='1651470188'/>
<enum name='cBusAddress' value='1667396979'/>
<enum name='cCell' value='1667458412'/>
<enum name='cChar' value='1667784992'/>
<enum name='cColorTable' value='1668051572'/>
<enum name='cColumn' value='1667460972'/>
<enum name='cDevSpec' value='1667523958'/>
<enum name='cDocument' value='1685021557'/>
<enum name='cDrawingArea' value='1667527287'/>
<enum name='cEnumeration' value='1701737837'/>
<enum name='cEthernetAddress' value='1667591712'/>
<enum name='cFTPItem' value='1718906912'/>
<enum name='cFile' value='1718185061'/>
<enum name='cFireWireAddress' value='1667659552'/>
<enum name='cFixed' value='1718188132'/>
<enum name='cFixedPoint' value='1718644340'/>
<enum name='cFixedRectangle' value='1718772596'/>
<enum name='cGraphicLine' value='1735158126'/>
<enum name='cGraphicObject' value='1667723106'/>
<enum name='cGraphicShape' value='1667724136'/>
<enum name='cGraphicText' value='1667724408'/>
<enum name='cGroupedGraphic' value='1668311395'/>
<enum name='cHTML' value='1752460652'/>
<enum name='cIPAddress' value='1667854368'/>
<enum name='cInsertionLoc' value='1768846188'/>
<enum name='cInsertionPoint' value='1667853939'/>
<enum name='cInternetAddress' value='1229996356'/>
<enum name='cIntlText' value='1769240692'/>
<enum name='cIntlWritingCode' value='1768846444'/>
<enum name='cItem' value='1667855469'/>
<enum name='cKeystroke' value='1802531443'/>
<enum name='cLine' value='1668049262'/>
<enum name='cLocalTalkAddress' value='1668052000'/>
<enum name='cLongDateTime' value='1818522656'/>
<enum name='cLongFixed' value='1818654820'/>
<enum name='cLongFixedPoint' value='1818652788'/>
<enum name='cLongFixedRectangle' value='1818653283'/>
<enum name='cLongInteger' value='1819242087'/>
<enum name='cLongPoint' value='1819307636'/>
<enum name='cLongRectangle' value='1819435892'/>
<enum name='cMachineLoc' value='1833725795'/>
<enum name='cMenu' value='1668116085'/>
<enum name='cMenuItem' value='1668113774'/>
<enum name='cObject' value='1668244074'/>
<enum name='cObjectSpecifier' value='1868720672'/>
<enum name='cOpenableObject' value='1668247394'/>
<enum name='cOval' value='1668249196'/>
<enum name='cPICT' value='1346978644'/>
<enum name='cParagraph' value='1668309362'/>
<enum name='cPixel' value='1668315244'/>
<enum name='cPixelMap' value='1668311416'/>
<enum name='cPolygon' value='1668310894'/>
<enum name='cProperty' value='1886547824'/>
<enum name='cQDPoint' value='1363439732'/>
<enum name='cQDRectangle' value='1902408308'/>
<enum name='cRGBColor' value='1666336578'/>
<enum name='cRectangle' value='1668441443'/>
<enum name='cRotation' value='1953656692'/>
<enum name='cRoundedRectangle' value='1668444771'/>
<enum name='cRow' value='1668444023'/>
<enum name='cSCSIAddress' value='1668506483'/>
<enum name='cSelection' value='1668506988'/>
<enum name='cShortInteger' value='1936224114'/>
<enum name='cTable' value='1668571756'/>
<enum name='cText' value='1668577396'/>
<enum name='cTextFlow' value='1667656815'/>
<enum name='cTextStyles' value='1953723513'/>
<enum name='cTokenRingAddress' value='1668575083'/>
<enum name='cType' value='1954115685'/>
<enum name='cURL' value='1970433056'/>
<enum name='cUSBAddress' value='1668641634'/>
<enum name='cVersion' value='1986359923'/>
<enum name='cWindow' value='1668770158'/>
<enum name='cWord' value='1668771698'/>
<enum name='eADB' value='1700881506'/>
<enum name='eAddressSpec' value='1700881523'/>
<enum name='eAnalogAudio' value='1701863797'/>
<enum name='eAppleTalk' value='1701863796'/>
<enum name='eAudioLineIn' value='1701011817'/>
<enum name='eAudioLineOut' value='1701011820'/>
<enum name='eAudioOut' value='1701011823'/>
<enum name='eBus' value='1700951411'/>
<enum name='eCDROM' value='1701012512'/>
<enum name='eCapsLockDown' value='1264807019'/>
<enum name='eClearKey' value='1802716928'/>
<enum name='eCommSlot' value='1701012333'/>
<enum name='eCommandDown' value='1264807268'/>
<enum name='eConduit' value='1701015406'/>
<enum name='eControlDown' value='1264809068'/>
<enum name='eDVD' value='1701082724'/>
<enum name='eDeleteKey' value='1802711808'/>
<enum name='eDeviceType' value='1701082740'/>
<enum name='eDigitalAudio' value='1701864545'/>
<enum name='eDisplay' value='1701078131'/>
<enum name='eDownArrowKey' value='1802730752'/>
<enum name='eEndKey' value='1802729216'/>
<enum name='eEnterKey' value='1802718208'/>
<enum name='eEscapeKey' value='1802712320'/>
<enum name='eEthernet' value='1701012846'/>
<enum name='eF10Key' value='1802726656'/>
<enum name='eF11Key' value='1802725120'/>
<enum name='eF12Key' value='1802727168'/>
<enum name='eF13Key' value='1802725632'/>
<enum name='eF14Key' value='1802726144'/>
<enum name='eF15Key' value='1802727680'/>
<enum name='eF1Key' value='1802729984'/>
<enum name='eF2Key' value='1802729472'/>
<enum name='eF3Key' value='1802724096'/>
<enum name='eF4Key' value='1802728960'/>
<enum name='eF5Key' value='1802723328'/>
<enum name='eF6Key' value='1802723584'/>
<enum name='eF7Key' value='1802723840'/>
<enum name='eF8Key' value='1802724352'/>
<enum name='eF9Key' value='1802724608'/>
<enum name='eFireWire' value='1701013111'/>
<enum name='eFloppy' value='1701209120'/>
<enum name='eForwardDelKey' value='1802728704'/>
<enum name='eHD' value='1701340192'/>
<enum name='eHelpKey' value='1802727936'/>
<enum name='eHomeKey' value='1802728192'/>
<enum name='eIP' value='1701865840'/>
<enum name='eIRTalk' value='1701865844'/>
<enum name='eInfrared' value='1701013874'/>
<enum name='eIrDA' value='1701865842'/>
<enum name='eKeyKind' value='1701540724'/>
<enum name='eKeyboard' value='1701536356'/>
<enum name='eLCD' value='1701080163'/>
<enum name='eLeftArrowKey' value='1802730240'/>
<enum name='eLocalTalk' value='1701014644'/>
<enum name='eMacIP' value='1701866857'/>
<enum name='eMacVideo' value='1701866870'/>
<enum name='eMicrophone' value='1701014889'/>
<enum name='eModem' value='1701080429'/>
<enum name='eModemPort' value='1701014896'/>
<enum name='eModemPrinterPort' value='1701671024'/>
<enum name='eModifiers' value='1699570803'/>
<enum name='eMonitorOut' value='1701014894'/>
<enum name='eMouse' value='1701670773'/>
<enum name='eNuBus' value='1701737826'/>
<enum name='eNuBusCard' value='1701080674'/>
<enum name='eOptionDown' value='1265594484'/>
<enum name='ePCIbus' value='1701015657'/>
<enum name='ePCIcard' value='1701081193'/>
<enum name='ePCcard' value='1701015651'/>
<enum name='ePDScard' value='1701864563'/>
<enum name='ePDSslot' value='1701015652'/>
<enum name='ePPP' value='1701867632'/>
<enum name='ePageDownKey' value='1802729728'/>
<enum name='ePageUpKey' value='1802728448'/>
<enum name='ePointingDevice' value='1701081188'/>
<enum name='ePostScript' value='1701867635'/>
<enum name='ePrinter' value='1701081202'/>
<enum name='ePrinterPort' value='1701015664'/>
<enum name='eProtocol' value='1701868143'/>
<enum name='eReturnKey' value='1802707968'/>
<enum name='eRightArrowKey' value='1802730496'/>
<enum name='eSCSI' value='1701016419'/>
<enum name='eSVGA' value='1701868391'/>
<enum name='eScheme' value='1702060904'/>
<enum name='eSerial' value='1701868402'/>
<enum name='eShiftDown' value='1265854068'/>
<enum name='eSpeakers' value='1701081968'/>
<enum name='eStorageDevice' value='1701081972'/>
<enum name='eSvideo' value='1701868406'/>
<enum name='eTabKey' value='1802711040'/>
<enum name='eTokenRing' value='1702129515'/>
<enum name='eTrackball' value='1702130283'/>
<enum name='eTrackpad' value='1701082224'/>
<enum name='eUSB' value='1701016947'/>
<enum name='eUpArrowKey' value='1802731008'/>
<enum name='eVideoIn' value='1701017193'/>
<enum name='eVideoMonitor' value='1701082733'/>
<enum name='eVideoOut' value='1701017199'/>
<enum name='enumArrows' value='1634890351'/>
<enum name='enumJustification' value='1786082164'/>
<enum name='enumKeyForm' value='1801876077'/>
<enum name='enumPosition' value='1886352233'/>
<enum name='enumProtection' value='1886549102'/>
<enum name='enumQuality' value='1903518060'/>
<enum name='enumSaveOptions' value='1935767151'/>
<enum name='enumStyle' value='1937013100'/>
<enum name='enumTransferMode' value='1953653102'/>
<enum name='errAEEventNotPermitted' value='-1743'/>
<enum name='errAETargetAddressNotPermitted' value='-1742'/>
<enum name='eurlAFP' value='1634103328'/>
<enum name='eurlAT' value='1635000352'/>
<enum name='eurlEPPC' value='1701867619'/>
<enum name='eurlFTP' value='1718906912'/>
<enum name='eurlFile' value='1718185061'/>
<enum name='eurlGopher' value='1735420018'/>
<enum name='eurlHTTP' value='1752462448'/>
<enum name='eurlHTTPS' value='1752461427'/>
<enum name='eurlIMAP' value='1768776048'/>
<enum name='eurlLDAP' value='1970037872'/>
<enum name='eurlLaunch' value='1818326382'/>
<enum name='eurlMail' value='1835100524'/>
<enum name='eurlMailbox' value='1835167608'/>
<enum name='eurlMessage' value='1835365235'/>
<enum name='eurlMulti' value='1836412020'/>
<enum name='eurlNFS' value='1970169459'/>
<enum name='eurlNNTP' value='1852732528'/>
<enum name='eurlNews' value='1852143475'/>
<enum name='eurlPOP' value='1970302832'/>
<enum name='eurlRTSP' value='1920234352'/>
<enum name='eurlSNews' value='1936619379'/>
<enum name='eurlTelnet' value='1953263220'/>
<enum name='eurlUnknown' value='1970433087'/>
<enum name='formAbsolutePosition' value='1768842360'/>
<enum name='formName' value='1851878757'/>
<enum name='formPropertyID' value='1886547824'/>
<enum name='formRange' value='1918987879'/>
<enum name='formRelativePosition' value='1919249509'/>
<enum name='formTest' value='1952805748'/>
<enum name='formUniqueID' value='1229201440'/>
<enum name='formWhose' value='2003332979'/>
<enum name='kAEAND' value='1095648288'/>
<enum name='kAEAbout' value='1633841013'/>
<enum name='kAEActivate' value='1633907830'/>
<enum name='kAEAfter' value='1634104421'/>
<enum name='kAEAliasSelection' value='1935764585'/>
<enum name='kAEAll' value='1634495520'/>
<enum name='kAEAllCaps' value='1634493296'/>
<enum name='kAEAlwaysInteract' value='48'/>
<enum name='kAEAnswer' value='1634628466'/>
<enum name='kAEAny' value='1634629920'/>
<enum name='kAEApplicationClass' value='1634758764'/>
<enum name='kAEApplicationDied' value='1868720500'/>
<enum name='kAEArrowAtEnd' value='1634887022'/>
<enum name='kAEArrowAtStart' value='1634890612'/>
<enum name='kAEArrowBothEnds' value='1634886255'/>
<enum name='kAEAsk' value='1634954016'/>
<enum name='kAEAutoDown' value='1635087471'/>
<enum name='kAEBefore' value='1650812527'/>
<enum name='kAEBeginTransaction' value='1650812777'/>
<enum name='kAEBeginning' value='1650945639'/>
<enum name='kAEBeginsWith' value='1650947956'/>
<enum name='kAEBold' value='1651469412'/>
<enum name='kAECanInteract' value='32'/>
<enum name='kAECanSwitchLayer' value='64'/>
<enum name='kAECaseSensEquals' value='1668506993'/>
<enum name='kAECentered' value='1667591796'/>
<enum name='kAEChangeView' value='1986618743'/>
<enum name='kAEClone' value='1668050798'/>
<enum name='kAEClose' value='1668050803'/>
<enum name='kAECommandClass' value='1668116068'/>
<enum name='kAECondensed' value='1668247140'/>
<enum name='kAEContains' value='1668247156'/>
<enum name='kAECopy' value='1668247673'/>
<enum name='kAECoreSuite' value='1668248165'/>
<enum name='kAECountElements' value='1668183141'/>
<enum name='kAECreateElement' value='1668441452'/>
<enum name='kAECreatePublisher' value='1668314466'/>
<enum name='kAECut' value='1668641824'/>
<enum name='kAEDataArray' value='0'/>
<enum name='kAEDeactivate' value='1684104052'/>
<enum name='kAEDebugPOSTHeader' value='1'/>
<enum name='kAEDebugReplyHeader' value='2'/>
<enum name='kAEDebugXMLDebugAll' value='-1'/>
<enum name='kAEDebugXMLRequest' value='4'/>
<enum name='kAEDebugXMLResponse' value='8'/>
<enum name='kAEDefaultTimeout' value='-1'/>
<enum name='kAEDelete' value='1684368495'/>
<enum name='kAEDescArray' value='3'/>
<enum name='kAEDescListFactorNone' value='0'/>
<enum name='kAEDescListFactorType' value='4'/>
<enum name='kAEDescListFactorTypeAndSize' value='8'/>
<enum name='kAEDirectCall' value='1'/>
<enum name='kAEDiskEvent' value='1684632427'/>
<enum name='kAEDoNotAutomaticallyAddAnnotationsToEvent' value='65536'/>
<enum name='kAEDoObjectsExist' value='1685022072'/>
<enum name='kAEDoScript' value='1685025635'/>
<enum name='kAEDontExecute' value='8192'/>
<enum name='kAEDontReconnect' value='128'/>
<enum name='kAEDontRecord' value='4096'/>
<enum name='kAEDown' value='1685026670'/>
<enum name='kAEDrag' value='1685217639'/>
<enum name='kAEDuplicateSelection' value='1935963504'/>
<enum name='kAEEditGraphic' value='1701079412'/>
<enum name='kAEEmptyTrash' value='1701671028'/>
<enum name='kAEEnd' value='1701733408'/>
<enum name='kAEEndTransaction' value='1701733492'/>
<enum name='kAEEndsWith' value='1701733491'/>
<enum name='kAEEquals' value='1025515552'/>
<enum name='kAEExpanded' value='1885698160'/>
<enum name='kAEFast' value='1717662580'/>
<enum name='kAEFinderEvents' value='1179534418'/>
<enum name='kAEFirst' value='1718186611'/>
<enum name='kAEFormulaProtect' value='1718645359'/>
<enum name='kAEFullyJustified' value='1718971500'/>
<enum name='kAEGetClassInfo' value='1903125098'/>
<enum name='kAEGetData' value='1734702180'/>
<enum name='kAEGetDataSize' value='1685285242'/>
<enum name='kAEGetEventInfo' value='1735681385'/>
<enum name='kAEGetInfoSelection' value='1936289382'/>
<enum name='kAEGetPrivilegeSelection' value='1936749174'/>
<enum name='kAEGetSuiteInfo' value='1735684969'/>
<enum name='kAEGreaterThan' value='1042292768'/>
<enum name='kAEGreaterThanEquals' value='1044193312'/>
<enum name='kAEGrow' value='1735552887'/>
<enum name='kAEHTTPProxyHostAttr' value='2020111464'/>
<enum name='kAEHTTPProxyPortAttr' value='2020111472'/>
<enum name='kAEHandleArray' value='2'/>
<enum name='kAEHandleSimpleRanges' value='32'/>
<enum name='kAEHiQuality' value='1751740789'/>
<enum name='kAEHidden' value='1751737454'/>
<enum name='kAEHighLevel' value='1751738216'/>
<enum name='kAEHighPriority' value='1'/>
<enum name='kAEIDoMarking' value='4'/>
<enum name='kAEIDoMinimum' value='0'/>
<enum name='kAEIDoWhose' value='1'/>
<enum name='kAEISAction' value='1264673652'/>
<enum name='kAEISActionPath' value='1264676980'/>
<enum name='kAEISClientAddress' value='1633969266'/>
<enum name='kAEISClientIP' value='1264806256'/>
<enum name='kAEISContentType' value='1668577648'/>
<enum name='kAEISFromUser' value='1718775157'/>
<enum name='kAEISFullRequest' value='1265005169'/>
<enum name='kAEISGetURL' value='1735750252'/>
<enum name='kAEISHTTPSearchArgs' value='1801875314'/>
<enum name='kAEISMethod' value='1835365480'/>
<enum name='kAEISPassword' value='1885434739'/>
<enum name='kAEISPostArgs' value='1886352244'/>
<enum name='kAEISReferrer' value='1919247986'/>
<enum name='kAEISScriptName' value='1935896173'/>
<enum name='kAEISServerName' value='1937141357'/>
<enum name='kAEISServerPort' value='1937141876'/>
<enum name='kAEISUserAgent' value='1097297524'/>
<enum name='kAEISUserName' value='1970496882'/>
<enum name='kAEISWebStarSuite' value='1465341885'/>
<enum name='kAEImageGraphic' value='1768777586'/>
<enum name='kAEInfo' value='11'/>
<enum name='kAEInternetSuite' value='1735750252'/>
<enum name='kAEIsUniform' value='1769174382'/>
<enum name='kAEItalic' value='1769234796'/>
<enum name='kAEKeyClass' value='1801812323'/>
<enum name='kAEKeyDescArray' value='4'/>
<enum name='kAEKeyDown' value='1801746286'/>
<enum name='kAELast' value='1818325876'/>
<enum name='kAELeftJustified' value='1818584692'/>
<enum name='kAELessThan' value='1008738336'/>
<enum name='kAELessThanEquals' value='1010638880'/>
<enum name='kAELocalProcess' value='3'/>
<enum name='kAELogOut' value='1819240303'/>
<enum name='kAELowercase' value='1819244387'/>
<enum name='kAEMain' value='0'/>
<enum name='kAEMakeObjectsVisible' value='1836476787'/>
<enum name='kAEMenuClass' value='1835363957'/>
<enum name='kAEMenuSelect' value='1835559284'/>
<enum name='kAEMiddle' value='1835623524'/>
<enum name='kAEMiscStandards' value='1835627363'/>
<enum name='kAEModifiable' value='1836016742'/>
<enum name='kAEMouseClass' value='1836021107'/>
<enum name='kAEMouseDown' value='1835300718'/>
<enum name='kAEMouseDownInBack' value='1835295339'/>
<enum name='kAEMove' value='1836021349'/>
<enum name='kAEMoved' value='1836021349'/>
<enum name='kAENOT' value='1313821728'/>
<enum name='kAENavigationKey' value='1851881061'/>
<enum name='kAENeverInteract' value='16'/>
<enum name='kAENext' value='1852143732'/>
<enum name='kAENo' value='1852776480'/>
<enum name='kAENoArrow' value='1634889327'/>
<enum name='kAENoReply' value='1'/>
<enum name='kAENonmodifiable' value='1852665700'/>
<enum name='kAENormalPriority' value='0'/>
<enum name='kAENotifyRecording' value='1919247218'/>
<enum name='kAENotifyStartRecording' value='1919247153'/>
<enum name='kAENotifyStopRecording' value='1919247152'/>
<enum name='kAENullEvent' value='1853189228'/>
<enum name='kAEOR' value='1330782240'/>
<enum name='kAEOSAXSizeResource' value='1869834618'/>
<enum name='kAEOpen' value='1868853091'/>
<enum name='kAEOpenApplication' value='1868656752'/>
<enum name='kAEOpenContents' value='1868787566'/>
<enum name='kAEOpenDocuments' value='1868853091'/>
<enum name='kAEOpenSelection' value='1936683109'/>
<enum name='kAEOutline' value='1869968492'/>
<enum name='kAEPackedArray' value='1'/>
<enum name='kAEPageSetup' value='1885827957'/>
<enum name='kAEPassSubDescs' value='8'/>
<enum name='kAEPaste' value='1885434740'/>
<enum name='kAEPlain' value='1886151022'/>
<enum name='kAEPrevious' value='1886545270'/>
<enum name='kAEPrint' value='1885630307'/>
<enum name='kAEPrintDocuments' value='1885630307'/>
<enum name='kAEPrintSelection' value='1936749161'/>
<enum name='kAEPrintWindow' value='1886873966'/>
<enum name='kAEProcessNonReplyEvents' value='32768'/>
<enum name='kAEPromise' value='1886547821'/>
<enum name='kAEPutAwaySelection' value='1936749940'/>
<enum name='kAEQDAdMax' value='1633971576'/>
<enum name='kAEQDAdMin' value='1633971566'/>
<enum name='kAEQDAddOver' value='1633969263'/>
<enum name='kAEQDAddPin' value='1633969264'/>
<enum name='kAEQDBic' value='1651073824'/>
<enum name='kAEQDBlend' value='1651273316'/>
<enum name='kAEQDCopy' value='1668315424'/>
<enum name='kAEQDNotBic' value='1851943267'/>
<enum name='kAEQDNotCopy' value='1852010617'/>
<enum name='kAEQDNotOr' value='1853124466'/>
<enum name='kAEQDNotXor' value='1853386610'/>
<enum name='kAEQDOr' value='1869750304'/>
<enum name='kAEQDSubOver' value='1937072751'/>
<enum name='kAEQDSubPin' value='1937072752'/>
<enum name='kAEQDSupplementalSuite' value='1902408560'/>
<enum name='kAEQDXor' value='2020569632'/>
<enum name='kAEQueueReply' value='2'/>
<enum name='kAEQuickdrawSuite' value='1902408311'/>
<enum name='kAEQuitAll' value='1903520097'/>
<enum name='kAEQuitApplication' value='1903520116'/>
<enum name='kAEQuitPreserveState' value='1937006964'/>
<enum name='kAEQuitReason' value='2003335487'/>
<enum name='kAERPCClass' value='1919968032'/>
<enum name='kAERawKey' value='1919640953'/>
<enum name='kAEReallyLogOut' value='1919706991'/>
<enum name='kAERedo' value='1919247471'/>
<enum name='kAERegular' value='1919248236'/>
<enum name='kAERemoteProcess' value='4'/>
<enum name='kAEReopenApplication' value='1918988400'/>
<enum name='kAEReplace' value='1919970403'/>
<enum name='kAERequiredSuite' value='1919250788'/>
<enum name='kAEResized' value='1920166266'/>
<enum name='kAEResolveNestedLists' value='16'/>
<enum name='kAERestart' value='1919251316'/>
<enum name='kAEResume' value='1920167269'/>
<enum name='kAERevealSelection' value='1936876918'/>
<enum name='kAERevert' value='1920365172'/>
<enum name='kAERightJustified' value='1919379572'/>
<enum name='kAESOAPScheme' value='1397702992'/>
<enum name='kAESameProcess' value='2'/>
<enum name='kAESave' value='1935767141'/>
<enum name='kAEScrapEvent' value='1935897200'/>
<enum name='kAEScriptingSizeResource' value='1935897466'/>
<enum name='kAESelect' value='1936483188'/>
<enum name='kAESetData' value='1936028772'/>
<enum name='kAESetPosition' value='1886352238'/>
<enum name='kAEShadow' value='1936220516'/>
<enum name='kAESharedScriptHandler' value='2004050800'/>
<enum name='kAESharing' value='13'/>
<enum name='kAEShowClipboard' value='1936221036'/>
<enum name='kAEShowPreferences' value='1886545254'/>
<enum name='kAEShowRestartDialog' value='1920103284'/>
<enum name='kAEShowShutdownDialog' value='1920164974'/>
<enum name='kAEShutDown' value='1936225652'/>
<enum name='kAESleep' value='1936483696'/>
<enum name='kAESmallCaps' value='1936548720'/>
<enum name='kAESocks4Protocol' value='4'/>
<enum name='kAESocks5Protocol' value='5'/>
<enum name='kAESocksHostAttr' value='2020829299'/>
<enum name='kAESocksPasswordAttr' value='2020829303'/>
<enum name='kAESocksPortAttr' value='2020829296'/>
<enum name='kAESocksProxyAttr' value='2020831083'/>
<enum name='kAESocksUserAttr' value='2020829301'/>
<enum name='kAESpecialClassProperties' value='1665147681'/>
<enum name='kAEStartRecording' value='1919247201'/>
<enum name='kAEStopRecording' value='1919247203'/>
<enum name='kAEStoppedMoving' value='1937010544'/>
<enum name='kAEStrikethrough' value='1937011307'/>
<enum name='kAESubscript' value='1935831907'/>
<enum name='kAESuperscript' value='1936749411'/>
<enum name='kAESuspend' value='1937077104'/>
<enum name='kAETableSuite' value='1952607347'/>
<enum name='kAETerminologyExtension' value='1634038885'/>
<enum name='kAETextSuite' value='1413830740'/>
<enum name='kAETransactionTerminated' value='1953788525'/>
<enum name='kAEUTApostrophe' value='3'/>
<enum name='kAEUTChangesState' value='12'/>
<enum name='kAEUTDirectParamIsReference' value='9'/>
<enum name='kAEUTEnumListIsExclusive' value='10'/>
<enum name='kAEUTEnumerated' value='13'/>
<enum name='kAEUTEnumsAreTypes' value='11'/>
<enum name='kAEUTFeminine' value='2'/>
<enum name='kAEUTHasReturningParam' value='31'/>
<enum name='kAEUTMasculine' value='1'/>
<enum name='kAEUTNotDirectParamIsTarget' value='8'/>
<enum name='kAEUTOptional' value='15'/>
<enum name='kAEUTParamIsReference' value='9'/>
<enum name='kAEUTParamIsTarget' value='8'/>
<enum name='kAEUTPlural' value='0'/>
<enum name='kAEUTPropertyIsReference' value='9'/>
<enum name='kAEUTReadWrite' value='12'/>
<enum name='kAEUTReplyIsReference' value='9'/>
<enum name='kAEUTTightBindingFunction' value='12'/>
<enum name='kAEUTlistOfItems' value='14'/>
<enum name='kAEUnderline' value='1970168940'/>
<enum name='kAEUndo' value='1970168943'/>
<enum name='kAEUnknownSource' value='0'/>
<enum name='kAEUp' value='1970282528'/>
<enum name='kAEUpdate' value='1970300020'/>
<enum name='kAEUseHTTPProxyAttr' value='2020962418'/>
<enum name='kAEUseRelativeIterators' value='64'/>
<enum name='kAEUseSocksAttr' value='2020828019'/>
<enum name='kAEUserTerminology' value='1634039156'/>
<enum name='kAEVirtualKey' value='1801812323'/>
<enum name='kAEWaitReply' value='3'/>
<enum name='kAEWakeUpEvent' value='2002873189'/>
<enum name='kAEWantReceipt' value='512'/>
<enum name='kAEWholeWordEquals' value='2004313457'/>
<enum name='kAEWindowClass' value='2003398244'/>
<enum name='kAEXMLRPCScheme' value='1380991794'/>
<enum name='kAEYes' value='2036691744'/>
<enum name='kAEZoom' value='2054123373'/>
<enum name='kAEZoomIn' value='7'/>
<enum name='kAEZoomOut' value='8'/>
<enum name='kAlwaysSendSubject' value='8192'/>
<enum name='kAnyTransactionID' value='0'/>
<enum name='kAutoGenerateReturnID' value='-1'/>
<enum name='kByCommentView' value='6'/>
<enum name='kByDateView' value='3'/>
<enum name='kByIconView' value='1'/>
<enum name='kByKindView' value='5'/>
<enum name='kByLabelView' value='7'/>
<enum name='kByNameView' value='2'/>
<enum name='kBySizeView' value='4'/>
<enum name='kBySmallIcon' value='0'/>
<enum name='kByVersionView' value='8'/>
<enum name='kConnSuite' value='1835098979'/>
<enum name='kCoreEventClass' value='1634039412'/>
<enum name='kDoFolderActionEvent' value='1718578273'/>
<enum name='kDontFindAppBySignature' value='16384'/>
<enum name='kFAAttachCommand' value='1635018337'/>
<enum name='kFAEditCommand' value='1701078625'/>
<enum name='kFAFileParam' value='1717657964'/>
<enum name='kFAIndexParam' value='1768842360'/>
<enum name='kFARemoveCommand' value='1919772257'/>
<enum name='kFAServerApp' value='1936945782'/>
<enum name='kFASuiteCode' value='1717658479'/>
<enum name='kFolderActionCode' value='1633907822'/>
<enum name='kFolderClosedEvent' value='1717791855'/>
<enum name='kFolderItemsAddedEvent' value='1718052212'/>
<enum name='kFolderItemsRemovedEvent' value='1718382451'/>
<enum name='kFolderOpenedEvent' value='1718579310'/>
<enum name='kFolderWindowMovedEvent' value='1718839674'/>
<enum name='kGetSelectedText' value='1735686260'/>
<enum name='kItemList' value='1718383476'/>
<enum name='kLaunchToGetTerminology' value='32768'/>
<enum name='kNewSizeParameter' value='1718514554'/>
<enum name='kNextBody' value='1'/>
<enum name='kNoTimeOut' value='-2'/>
<enum name='kOSIZCodeInSharedLibraries' value='11'/>
<enum name='kOSIZDontOpenResourceFile' value='15'/>
<enum name='kOSIZOpenWithReadPermission' value='13'/>
<enum name='kOSIZdontAcceptRemoteEvents' value='14'/>
<enum name='kOffset2Pos' value='1936994928'/>
<enum name='kPos2Offset' value='1882354548'/>
<enum name='kPreviousBody' value='2'/>
<enum name='kReadExtensionTermsMask' value='32768'/>
<enum name='kSOAP1999Schema' value='1936931129'/>
<enum name='kSOAP2001Schema' value='1936928817'/>
<enum name='kShowHideInputWindow' value='1936222583'/>
<enum name='kTSMHiliteBlockFillText' value='6'/>
<enum name='kTSMHiliteCaretPosition' value='1'/>
<enum name='kTSMHiliteConvertedText' value='4'/>
<enum name='kTSMHiliteNoHilite' value='9'/>
<enum name='kTSMHiliteOutlineText' value='7'/>
<enum name='kTSMHiliteRawText' value='2'/>
<enum name='kTSMHiliteSelectedConvertedText' value='5'/>
<enum name='kTSMHiliteSelectedRawText' value='3'/>
<enum name='kTSMHiliteSelectedText' value='8'/>
<enum name='kTSMInsideOfActiveInputArea' value='3'/>
<enum name='kTSMInsideOfBody' value='2'/>
<enum name='kTSMOutsideOfBody' value='1'/>
<enum name='kTextServiceClass' value='1953724003'/>
<enum name='kUnicodeNotFromInputMethod' value='1970170221'/>
<enum name='kUpdateActiveInputArea' value='1970300020'/>
<enum name='keyAEAdjustMarksProc' value='1633970797'/>
<enum name='keyAEAngle' value='1801547367'/>
<enum name='keyAEArcAngle' value='1885434467'/>
<enum name='keyAEBaseAddr' value='1650549860'/>
<enum name='keyAEBestType' value='1885500276'/>
<enum name='keyAEBgndColor' value='1801610092'/>
<enum name='keyAEBgndPattern' value='1801613428'/>
<enum name='keyAEBounds' value='1885498980'/>
<enum name='keyAEBufferSize' value='1651861094'/>
<enum name='keyAECellList' value='1801677940'/>
<enum name='keyAEClassID' value='1668041028'/>
<enum name='keyAEClauseOffsets' value='1668047221'/>
<enum name='keyAEColor' value='1668246642'/>
<enum name='keyAEColorTable' value='1668052066'/>
<enum name='keyAECompOperator' value='1919249519'/>
<enum name='keyAECompareProc' value='1668116594'/>
<enum name='keyAEContainer' value='1718775661'/>
<enum name='keyAECountProc' value='1668247156'/>
<enum name='keyAECurrentPoint' value='1668312947'/>
<enum name='keyAECurveHeight' value='1801676900'/>
<enum name='keyAECurveWidth' value='1801680740'/>
<enum name='keyAEDashStyle' value='1885631348'/>
<enum name='keyAEData' value='1684108385'/>
<enum name='keyAEDefaultType' value='1684366964'/>
<enum name='keyAEDefinitionRect' value='1885631092'/>
<enum name='keyAEDescType' value='1685288048'/>
<enum name='keyAEDesiredClass' value='2002873972'/>
<enum name='keyAEDestination' value='1684370292'/>
<enum name='keyAEDoAntiAlias' value='1634628705'/>
<enum name='keyAEDoDithered' value='1734633844'/>
<enum name='keyAEDoRotate' value='1801745012'/>
<enum name='keyAEDoScale' value='1802724193'/>
<enum name='keyAEDoTranslate' value='1802793569'/>
<enum name='keyAEDragging' value='1651470188'/>
<enum name='keyAEEditionFileLoc' value='1701605219'/>
<enum name='keyAEElements' value='1701604723'/>
<enum name='keyAEEndPoint' value='1885695588'/>
<enum name='keyAEEventClass' value='1702257516'/>
<enum name='keyAEEventID' value='1702261865'/>
<enum name='keyAEFile' value='1801873772'/>
<enum name='keyAEFileType' value='1718383728'/>
<enum name='keyAEFillColor' value='1718379372'/>
<enum name='keyAEFillPattern' value='1718382708'/>
<enum name='keyAEFixLength' value='1718188140'/>
<enum name='keyAEFlipHorizontal' value='1801873519'/>
<enum name='keyAEFlipVertical' value='1801877108'/>
<enum name='keyAEFont' value='1718578804'/>
<enum name='keyAEFormula' value='1885761394'/>
<enum name='keyAEGetErrDescProc' value='1768842339'/>
<enum name='keyAEGraphicObjects' value='1735352947'/>
<enum name='keyAEHiliteRange' value='1752329831'/>
<enum name='keyAEID' value='1229201440'/>
<enum name='keyAEImageQuality' value='1735488865'/>
<enum name='keyAEIndex' value='1802069112'/>
<enum name='keyAEInsertHere' value='1768846184'/>
<enum name='keyAEKeyData' value='1936026724'/>
<enum name='keyAEKeyForm' value='1718579821'/>
<enum name='keyAEKeyForms' value='1801812326'/>
<enum name='keyAEKeyword' value='1803122532'/>
<enum name='keyAELaunchedAsLogInItem' value='1818716532'/>
<enum name='keyAELaunchedAsServiceItem' value='1937140084'/>
<enum name='keyAELeftSide' value='1802265958'/>
<enum name='keyAELevel' value='1818588780'/>
<enum name='keyAELineArrow' value='1634890351'/>
<enum name='keyAELogicalOperator' value='1819240291'/>
<enum name='keyAELogicalTerms' value='1952805485'/>
<enum name='keyAEMarkProc' value='1835102827'/>
<enum name='keyAEMarkTokenProc' value='1835755876'/>
<enum name='keyAEMoveView' value='1836480119'/>
<enum name='keyAEName' value='1886282093'/>
<enum name='keyAENewElementLoc' value='1886283116'/>
<enum name='keyAENextBody' value='1853383268'/>
<enum name='keyAEObject' value='1802461802'/>
<enum name='keyAEObject1' value='1868720689'/>
<enum name='keyAEObject2' value='1868720690'/>
<enum name='keyAEObjectClass' value='1802462060'/>
<enum name='keyAEOffStyles' value='1868985204'/>
<enum name='keyAEOffset' value='1868985204'/>
<enum name='keyAEOnStyles' value='1869509492'/>
<enum name='keyAEPMTable' value='1802530164'/>
<enum name='keyAEPOSTHeaderData' value='1885889892'/>
<enum name='keyAEParamFlags' value='1886217831'/>
<enum name='keyAEParameters' value='1886547315'/>
<enum name='keyAEPenColor' value='1886413676'/>
<enum name='keyAEPenPattern' value='1886416993'/>
<enum name='keyAEPenWidth' value='1886418788'/>
<enum name='keyAEPinRange' value='1886286439'/>
<enum name='keyAEPixMapMinus' value='1802530157'/>
<enum name='keyAEPixelDepth' value='1885630580'/>
<enum name='keyAEPoint' value='1735421811'/>
<enum name='keyAEPointList' value='1886678132'/>
<enum name='keyAEPointSize' value='1886679930'/>
<enum name='keyAEPosition' value='1802530675'/>
<enum name='keyAEPropData' value='1886545012'/>
<enum name='keyAEPropFlags' value='1886545511'/>
<enum name='keyAEPropID' value='1886547824'/>
<enum name='keyAEProperties' value='1903194735'/>
<enum name='keyAEProperty' value='1802531440'/>
<enum name='keyAEProtection' value='1886417519'/>
<enum name='keyAERangeStart' value='1937006962'/>
<enum name='keyAERangeStop' value='1937010544'/>
<enum name='keyAERecorderCount' value='1919247218'/>
<enum name='keyAERegionClass' value='1919381091'/>
<enum name='keyAERenderAs' value='1802659182'/>
<enum name='keyAEReplyHeaderData' value='1919444324'/>
<enum name='keyAERequestedType' value='1920235888'/>
<enum name='keyAEResult' value='757935405'/>
<enum name='keyAEResultInfo' value='1920166254'/>
<enum name='keyAERotPoint' value='1802663024'/>
<enum name='keyAERotation' value='1886547828'/>
<enum name='keyAERowList' value='1802660979'/>
<enum name='keyAESaveOptions' value='1935767151'/>
<enum name='keyAEScale' value='1886610284'/>
<enum name='keyAEScriptTag' value='1886610292'/>
<enum name='keyAESearchText' value='1937012852'/>
<enum name='keyAEServerInstance' value='1936881257'/>
<enum name='keyAEShowWhere' value='1936224119'/>
<enum name='keyAEStartAngle' value='1885433447'/>
<enum name='keyAEStartPoint' value='1886614640'/>
<enum name='keyAEStyles' value='1802728569'/>
<enum name='keyAESuiteID' value='1937074548'/>
<enum name='keyAETSMDocumentRefcon' value='1919247971'/>
<enum name='keyAETSMEventRecord' value='1952806516'/>
<enum name='keyAETSMEventRef' value='1952806514'/>
<enum name='keyAETSMGlyphInfoArray' value='1952934241'/>
<enum name='keyAETSMScriptTag' value='1935895655'/>
<enum name='keyAETSMTextFMFont' value='1802795117'/>
<enum name='keyAETSMTextFont' value='1802795110'/>
<enum name='keyAETSMTextPointSize' value='1802793075'/>
<enum name='keyAETest' value='1802793844'/>
<enum name='keyAEText' value='1802795124'/>
<enum name='keyAETextColor' value='1886681187'/>
<enum name='keyAETextFont' value='1886681190'/>
<enum name='keyAETextLineAscent' value='1802789235'/>
<enum name='keyAETextLineHeight' value='1802792040'/>
<enum name='keyAETextPointSize' value='1886679155'/>
<enum name='keyAETextServiceEncoding' value='1953719662'/>
<enum name='keyAETextServiceMacEncoding' value='1953326446'/>
<enum name='keyAETextStyles' value='1954050932'/>
<enum name='keyAETheData' value='1801740660'/>
<enum name='keyAETheText' value='1953002616'/>
<enum name='keyAETransferMode' value='1886418029'/>
<enum name='keyAETranslation' value='1886679667'/>
<enum name='keyAETryAsStructGraf' value='1953460071'/>
<enum name='keyAEUniformStyles' value='1970500716'/>
<enum name='keyAEUpdateOn' value='1886744676'/>
<enum name='keyAEUpdateRange' value='1969516135'/>
<enum name='keyAEUserTerm' value='1970565741'/>
<enum name='keyAEVersion' value='1986359923'/>
<enum name='keyAEWhoseRangeStart' value='2004055154'/>
<enum name='keyAEWhoseRangeStop' value='2004055152'/>
<enum name='keyAEWindow' value='2003723383'/>
<enum name='keyAEWritingCode' value='2003985252'/>
<enum name='keyAEXMLReplyData' value='2020762992'/>
<enum name='keyAEXMLRequestData' value='2020762993'/>
<enum name='keyAcceptTimeoutAttr' value='1633907821'/>
<enum name='keyActualSenderAuditToken' value='1633902964'/>
<enum name='keyAdditionalHTTPHeaders' value='1634231652'/>
<enum name='keyAddressAttr' value='1633969266'/>
<enum name='keyCloseAllWindows' value='1667331872'/>
<enum name='keyDirectObject' value='757935405'/>
<enum name='keyDisableAuthenticationAttr' value='1635087464'/>
<enum name='keyDisposeTokenProc' value='2020896619'/>
<enum name='keyDriveNumber' value='1685222947'/>
<enum name='keyErrorCode' value='1701999139'/>
<enum name='keyErrorNumber' value='1701999214'/>
<enum name='keyErrorString' value='1701999219'/>
<enum name='keyEventClassAttr' value='1702257516'/>
<enum name='keyEventIDAttr' value='1702259044'/>
<enum name='keyEventSourceAttr' value='1702064739'/>
<enum name='keyHighLevelClass' value='1751346291'/>
<enum name='keyHighLevelID' value='1751737376'/>
<enum name='keyInteractLevelAttr' value='1768846437'/>
<enum name='keyKey' value='1801812256'/>
<enum name='keyKeyCode' value='1668244581'/>
<enum name='keyKeyboard' value='1801812322'/>
<enum name='keyLocalWhere' value='1819764850'/>
<enum name='keyMenuID' value='1835623456'/>
<enum name='keyMenuItem' value='1835627629'/>
<enum name='keyMiscellaneous' value='1718448995'/>
<enum name='keyMissedKeywordAttr' value='1835627379'/>
<enum name='keyModifiers' value='1836016755'/>
<enum name='keyNewBounds' value='1851944548'/>
<enum name='keyOptionalKeywordAttr' value='1869640811'/>
<enum name='keyOriginalAddressAttr' value='1718775661'/>
<enum name='keyOriginalBounds' value='1868721764'/>
<enum name='keyPreDispatch' value='1885888867'/>
<enum name='keyProcessSerialNumber' value='1886613024'/>
<enum name='keyRPCMethodName' value='1835365480'/>
<enum name='keyRPCMethodParam' value='1885434477'/>
<enum name='keyRPCMethodParamOrder' value='795832932'/>
<enum name='keyReplyPortAttr' value='1919250544'/>
<enum name='keyReplyRequestedAttr' value='1919250545'/>
<enum name='keyReturnIDAttr' value='1920231780'/>
<enum name='keySOAPAction' value='1935762292'/>
<enum name='keySOAPMethodNameSpace' value='1836281955'/>
<enum name='keySOAPMethodNameSpaceURI' value='1836281973'/>
<enum name='keySOAPSMDNamespace' value='1936944755'/>
<enum name='keySOAPSMDNamespaceURI' value='1936944757'/>
<enum name='keySOAPSMDType' value='1936946288'/>
<enum name='keySOAPSchemaVersion' value='1936941928'/>
<enum name='keySOAPStructureMetaData' value='796093796'/>
<enum name='keySelectProc' value='1936026728'/>
<enum name='keySelection' value='1718838636'/>
<enum name='keySenderApplescriptEntitlementsAttr' value='1701737580'/>
<enum name='keySenderApplicationIdentifierEntitlementAttr' value='1634297185'/>
<enum name='keySenderApplicationSandboxed' value='1936946018'/>
<enum name='keySenderAuditTokenAttr' value='1953459054'/>
<enum name='keySenderEGIDAttr' value='1936157028'/>
<enum name='keySenderEUIDAttr' value='1936025956'/>
<enum name='keySenderGIDAttr' value='1734960243'/>
<enum name='keySenderPIDAttr' value='1936746852'/>
<enum name='keySenderUIDAttr' value='1969841267'/>
<enum name='keyTimeoutAttr' value='1953066351'/>
<enum name='keyTransactionIDAttr' value='1953653102'/>
<enum name='keyUserNameAttr' value='1970168173'/>
<enum name='keyUserPasswordAttr' value='1885434739'/>
<enum name='keyWhen' value='2003330414'/>
<enum name='keyWhere' value='2003330418'/>
<enum name='keyWindow' value='1802989156'/>
<enum name='keyXMLDebuggingAttr' value='2019844711'/>
<enum name='pATMachine' value='1885434989'/>
<enum name='pATType' value='1885434996'/>
<enum name='pATZone' value='1885435002'/>
<enum name='pArcAngle' value='1885434467'/>
<enum name='pBackgroundColor' value='1885496172'/>
<enum name='pBackgroundPattern' value='1885499508'/>
<enum name='pBestType' value='1885500276'/>
<enum name='pBounds' value='1885498980'/>
<enum name='pClass' value='1885564019'/>
<enum name='pClipboard' value='1885564009'/>
<enum name='pColor' value='1668246642'/>
<enum name='pColorTable' value='1668052066'/>
<enum name='pConduit' value='1885564782'/>
<enum name='pContents' value='1885564532'/>
<enum name='pCornerCurveHeight' value='1885562980'/>
<enum name='pCornerCurveWidth' value='1885566820'/>
<enum name='pDNS' value='1885630067'/>
<enum name='pDNSForm' value='1883524691'/>
<enum name='pDashStyle' value='1885631348'/>
<enum name='pDefaultType' value='1684366964'/>
<enum name='pDefinitionRect' value='1885631092'/>
<enum name='pDeviceAddress' value='1885632097'/>
<enum name='pDeviceType' value='1885632116'/>
<enum name='pDottedDecimal' value='1885958244'/>
<enum name='pEnabled' value='1701732972'/>
<enum name='pEndPoint' value='1885695588'/>
<enum name='pFTPKind' value='1802071652'/>
<enum name='pFillColor' value='1718379372'/>
<enum name='pFillPattern' value='1718382708'/>
<enum name='pFont' value='1718578804'/>
<enum name='pFormula' value='1885761394'/>
<enum name='pGraphicObjects' value='1735352947'/>
<enum name='pHasCloseBox' value='1751346274'/>
<enum name='pHasTitleBar' value='1886677364'/>
<enum name='pHost' value='1213158228'/>
<enum name='pID' value='1229201440'/>
<enum name='pIndex' value='1885955192'/>
<enum name='pInsertionLoc' value='1885957747'/>
<enum name='pIsFloating' value='1769170540'/>
<enum name='pIsFrontProcess' value='1885959014'/>
<enum name='pIsModal' value='1886220132'/>
<enum name='pIsModified' value='1768779620'/>
<enum name='pIsResizable' value='1886548858'/>
<enum name='pIsStationeryPad' value='1886613604'/>
<enum name='pIsZoomable' value='1769175661'/>
<enum name='pIsZoomed' value='1887073645'/>
<enum name='pItemNumber' value='1769237870'/>
<enum name='pJustification' value='1886024564'/>
<enum name='pKeyKind' value='1802202724'/>
<enum name='pKeystrokeKey' value='1800237927'/>
<enum name='pLineArrow' value='1634890351'/>
<enum name='pMenuID' value='1835952484'/>
<enum name='pModifiers' value='1800236900'/>
<enum name='pName' value='1886282093'/>
<enum name='pNetwork' value='1886283124'/>
<enum name='pNewElementLoc' value='1886283116'/>
<enum name='pNode' value='1886285668'/>
<enum name='pPath' value='1179930723'/>
<enum name='pPenColor' value='1886413676'/>
<enum name='pPenPattern' value='1886416993'/>
<enum name='pPenWidth' value='1886418788'/>
<enum name='pPixelDepth' value='1885630580'/>
<enum name='pPointList' value='1886678132'/>
<enum name='pPointSize' value='1886679930'/>
<enum name='pPort' value='1886416754'/>
<enum name='pProtection' value='1886417519'/>
<enum name='pProtocol' value='1886417524'/>
<enum name='pRotation' value='1886547828'/>
<enum name='pSCSIBus' value='1886610274'/>
<enum name='pSCSILUN' value='1886612597'/>
<enum name='pScale' value='1886610284'/>
<enum name='pScheme' value='1886745443'/>
<enum name='pScript' value='1935896692'/>
<enum name='pScriptTag' value='1886610292'/>
<enum name='pSelected' value='1936026723'/>
<enum name='pSelection' value='1936026725'/>
<enum name='pSocket' value='1886613347'/>
<enum name='pStartAngle' value='1885433447'/>
<enum name='pStartPoint' value='1886614640'/>
<enum name='pTextColor' value='1886681187'/>
<enum name='pTextEncoding' value='1886681189'/>
<enum name='pTextFont' value='1886681190'/>
<enum name='pTextItemDelimiters' value='1954047084'/>
<enum name='pTextPointSize' value='1886679155'/>
<enum name='pTextStyles' value='1954050932'/>
<enum name='pTransferMode' value='1886418029'/>
<enum name='pTranslation' value='1886679667'/>
<enum name='pURL' value='1884639820'/>
<enum name='pUniformStyles' value='1970500716'/>
<enum name='pUpdateOn' value='1886744676'/>
<enum name='pUserName' value='1380021614'/>
<enum name='pUserPassword' value='1380020343'/>
<enum name='pUserSelection' value='1886745452'/>
<enum name='pVersion' value='1986359923'/>
<enum name='pVisible' value='1886808435'/>
<enum name='type128BitFloatingPoint' value='1818518124'/>
<enum name='typeAEList' value='1818850164'/>
<enum name='typeAERecord' value='1919247215'/>
<enum name='typeAEText' value='1951684692'/>
<enum name='typeAbsoluteOrdinal' value='1633842031'/>
<enum name='typeAlias' value='1634494835'/>
<enum name='typeAppParameters' value='1634758753'/>
<enum name='typeApplSignature' value='1936287598'/>
<enum name='typeAppleEvent' value='1634039412'/>
<enum name='typeApplicationBundleID' value='1651863140'/>
<enum name='typeApplicationURL' value='1634759276'/>
<enum name='typeArc' value='1667330659'/>
<enum name='typeAuditToken' value='1953459054'/>
<enum name='typeBest' value='1650815860'/>
<enum name='typeBookmarkData' value='1651339883'/>
<enum name='typeBoolean' value='1651470188'/>
<enum name='typeCFAbsoluteTime' value='1667654004'/>
<enum name='typeCFArrayRef' value='1667654002'/>
<enum name='typeCFAttributedStringRef' value='1667654003'/>
<enum name='typeCFBooleanRef' value='1667658854'/>
<enum name='typeCFDictionaryRef' value='1667654755'/>
<enum name='typeCFMutableArrayRef' value='1667657057'/>
<enum name='typeCFMutableAttributedStringRef' value='1667653985'/>
<enum name='typeCFMutableDictionaryRef' value='1667657060'/>
<enum name='typeCFMutableStringRef' value='1667657075'/>
<enum name='typeCFNumberRef' value='1667657314'/>
<enum name='typeCFStringRef' value='1667658612'/>
<enum name='typeCFTypeRef' value='1667658873'/>
<enum name='typeCString' value='1668510834'/>
<enum name='typeCell' value='1667458412'/>
<enum name='typeCentimeters' value='1668117618'/>
<enum name='typeChar' value='1413830740'/>
<enum name='typeClassInfo' value='1734569065'/>
<enum name='typeColorTable' value='1668051572'/>
<enum name='typeColumn' value='1667460972'/>
<enum name='typeCompDescriptor' value='1668116580'/>
<enum name='typeComponentInstance' value='1668116585'/>
<enum name='typeCubicCentimeter' value='1667460468'/>
<enum name='typeCubicFeet' value='1667655028'/>
<enum name='typeCubicInches' value='1668639086'/>
<enum name='typeCubicMeters' value='1668113780'/>
<enum name='typeCubicYards' value='1668903524'/>
<enum name='typeCurrentContainer' value='1667460724'/>
<enum name='typeDashStyle' value='1952735603'/>
<enum name='typeData' value='1952740449'/>
<enum name='typeDecimalStruct' value='1684366189'/>
<enum name='typeDegreesC' value='1684367203'/>
<enum name='typeDegreesF' value='1684367206'/>
<enum name='typeDegreesK' value='1684367211'/>
<enum name='typeDrawingArea' value='1667527287'/>
<enum name='typeEPS' value='1162892064'/>
<enum name='typeElemInfo' value='1701603694'/>
<enum name='typeEncodedString' value='1701733235'/>
<enum name='typeEnumerated' value='1701737837'/>
<enum name='typeEnumeration' value='1701737837'/>
<enum name='typeEventInfo' value='1702259054'/>
<enum name='typeEventRecord' value='1702261347'/>
<enum name='typeEventRef' value='1702261350'/>
<enum name='typeFSRef' value='1718841958'/>
<enum name='typeFalse' value='1717660787'/>
<enum name='typeFeet' value='1717921140'/>
<enum name='typeFileURL' value='1718973036'/>
<enum name='typeFinderWindow' value='1719101806'/>
<enum name='typeFixed' value='1718188132'/>
<enum name='typeFixedPoint' value='1718644340'/>
<enum name='typeFixedRectangle' value='1718772596'/>
<enum name='typeGIF' value='1195984486'/>
<enum name='typeGallons' value='1734437998'/>
<enum name='typeGlyphInfoArray' value='1735158113'/>
<enum name='typeGrams' value='1735549293'/>
<enum name='typeGraphicLine' value='1735158126'/>
<enum name='typeGraphicText' value='1667724408'/>
<enum name='typeGroupedGraphic' value='1668311395'/>
<enum name='typeHIMenu' value='1836016234'/>
<enum name='typeHIWindow' value='2003788394'/>
<enum name='typeIEEE32BitFloatingPoint' value='1936289383'/>
<enum name='typeIEEE64BitFloatingPoint' value='1685026146'/>
<enum name='typeISO8601DateTime' value='1769172852'/>
<enum name='typeInches' value='1768842088'/>
<enum name='typeIndexDescriptor' value='1768842341'/>
<enum name='typeInsertionLoc' value='1768846188'/>
<enum name='typeIntlText' value='1769240692'/>
<enum name='typeIntlWritingCode' value='1768846444'/>
<enum name='typeJPEG' value='1246774599'/>
<enum name='typeKernelProcessID' value='1802529124'/>
<enum name='typeKeyword' value='1801812343'/>
<enum name='typeKilograms' value='1801941613'/>
<enum name='typeKilometers' value='1802335346'/>
<enum name='typeLiters' value='1818850418'/>
<enum name='typeLogicalDescriptor' value='1819240297'/>
<enum name='typeLongDateTime' value='1818522656'/>
<enum name='typeLongFixed' value='1818654820'/>
<enum name='typeLongFixedPoint' value='1818652788'/>
<enum name='typeLongFixedRectangle' value='1818653283'/>
<enum name='typeLongPoint' value='1819307636'/>
<enum name='typeLongRectangle' value='1819435892'/>
<enum name='typeLowLevelEventRecord' value='1702261874'/>
<enum name='typeMachPort' value='1886351988'/>
<enum name='typeMachineLoc' value='1833725795'/>
<enum name='typeMeters' value='1835365490'/>
<enum name='typeMiles' value='1835625573'/>
<enum name='typeNull' value='1853189228'/>
<enum name='typeOSLTokenList' value='1869837420'/>
<enum name='typeObjectBeingExamined' value='1702391150'/>
<enum name='typeObjectSpecifier' value='1868720672'/>
<enum name='typeOffsetArray' value='1868980601'/>
<enum name='typeOunces' value='1870295840'/>
<enum name='typeOval' value='1668249196'/>
<enum name='typePString' value='1886614642'/>
<enum name='typeParamInfo' value='1886218606'/>
<enum name='typePict' value='1346978644'/>
<enum name='typePixMapMinus' value='1953525101'/>
<enum name='typePixelMap' value='1668311416'/>
<enum name='typePolygon' value='1668310894'/>
<enum name='typePounds' value='1818391328'/>
<enum name='typeProcessSerialNumber' value='1886613024'/>
<enum name='typePropInfo' value='1885957734'/>
<enum name='typeProperty' value='1886547824'/>
<enum name='typePtr' value='1886679584'/>
<enum name='typeQDPoint' value='1363439732'/>
<enum name='typeQDRectangle' value='1902408308'/>
<enum name='typeQDRegion' value='1366452078'/>
<enum name='typeQuarts' value='1903326323'/>
<enum name='typeRGB16' value='1953640758'/>
<enum name='typeRGB96' value='1953642806'/>
<enum name='typeRGBColor' value='1666336578'/>
<enum name='typeRangeDescriptor' value='1918987879'/>
<enum name='typeRectangle' value='1668441443'/>
<enum name='typeRelativeDescriptor' value='1919249440'/>
<enum name='typeReplyPortAttr' value='1919250544'/>
<enum name='typeRotation' value='1953656692'/>
<enum name='typeRoundedRectangle' value='1668444771'/>
<enum name='typeRow' value='1668444023'/>
<enum name='typeSInt16' value='1936224114'/>
<enum name='typeSInt32' value='1819242087'/>
<enum name='typeSInt64' value='1668246896'/>
<enum name='typeScrapStyles' value='1937013100'/>
<enum name='typeScript' value='1935896692'/>
<enum name='typeSectionH' value='1936024436'/>
<enum name='typeSquareFeet' value='1936811636'/>
<enum name='typeSquareKilometers' value='1936812909'/>
<enum name='typeSquareMeters' value='1936814701'/>
<enum name='typeSquareMiles' value='1936813417'/>
<enum name='typeSquareYards' value='1936816484'/>
<enum name='typeStyledText' value='1398036564'/>
<enum name='typeStyledUnicodeText' value='1937077368'/>
<enum name='typeSuiteInfo' value='1937074542'/>
<enum name='typeTIFF' value='1414088262'/>
<enum name='typeTable' value='1668571756'/>
<enum name='typeText' value='1413830740'/>
<enum name='typeTextRange' value='1954050670'/>
<enum name='typeTextRangeArray' value='1953653113'/>
<enum name='typeTextStyles' value='1953723513'/>
<enum name='typeToken' value='1953459045'/>
<enum name='typeTrue' value='1953658213'/>
<enum name='typeType' value='1954115685'/>
<enum name='typeUInt16' value='1970497650'/>
<enum name='typeUInt32' value='1835100014'/>
<enum name='typeUInt64' value='1969450861'/>
<enum name='typeUTF16ExternalRepresentation' value='1970549046'/>
<enum name='typeUTF8Text' value='1970562616'/>
<enum name='typeUnicodeText' value='1970567284'/>
<enum name='typeVersion' value='1986359923'/>
<enum name='typeWhoseDescriptor' value='2003332979'/>
<enum name='typeWhoseRange' value='2003988071'/>
<enum name='typeWildCard' value='707406378'/>
<enum name='typeYards' value='2036429412'/>
<function name='AEBuildAppleEvent' variadic='true'>
<arg declared_type='AEEventClass' name='theClass' type='L' type64='I'/>
<arg declared_type='AEEventID' name='theID' type='L' type64='I'/>
<arg declared_type='DescType' name='addressType' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='addressData' type='^v'/>
<arg declared_type='Size' name='addressLength' type='l' type64='q'/>
<arg declared_type='SInt16' name='returnID' type='s'/>
<arg declared_type='SInt32' name='transactionID' type='l' type64='i'/>
<arg declared_type='AppleEvent*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEBuildError*' name='error' type='^{AEBuildError=II}'/>
<arg const='true' declared_type='char*' name='paramsFmt' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEBuildDesc' variadic='true'>
<arg declared_type='AEDesc*' name='dst' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEBuildError*' name='error' type='^{AEBuildError=II}'/>
<arg const='true' declared_type='char*' name='src' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEBuildParameters' variadic='true'>
<arg declared_type='AppleEvent*' name='event' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEBuildError*' name='error' type='^{AEBuildError=II}'/>
<arg const='true' declared_type='char*' name='format' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AECallObjectAccessor'>
<arg declared_type='DescType' name='desiredClass' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' name='containerToken' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' name='containerClass' type='L' type64='I'/>
<arg declared_type='DescType' name='keyForm' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' name='keyData' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' name='token' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AECheckIsRecord'>
<arg const='true' declared_type='AEDesc*' name='theDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='AECoerceDesc'>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' name='toType' type='L' type64='I'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AECoercePtr'>
<arg declared_type='DescType' name='typeCode' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataSize' type='l' type64='q'/>
<arg declared_type='DescType' name='toType' type='L' type64='I'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AECompareDesc'>
<arg const='true' declared_type='AEDesc*' name='desc1' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' name='desc2' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean*' name='resultP' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AECountItems'>
<arg const='true' declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long*' name='theCount' type='^l' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AECreateAppleEvent'>
<arg declared_type='AEEventClass' name='theAEEventClass' type='L' type64='I'/>
<arg declared_type='AEEventID' name='theAEEventID' type='L' type64='I'/>
<arg const='true' declared_type='AEAddressDesc*' name='target' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEReturnID' name='returnID' type='s'/>
<arg declared_type='AETransactionID' name='transactionID' type='l' type64='i'/>
<arg declared_type='AppleEvent*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AECreateDesc'>
<arg declared_type='DescType' name='typeCode' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataSize' type='l' type64='q'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AECreateDescFromExternalPtr'>
<arg declared_type='OSType' name='descriptorType' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataLength' type='l' type64='q'/>
<arg declared_type='AEDisposeExternalUPP' function_pointer='true' name='disposeCallback' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SRefCon' name='disposeRefcon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' name='theDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AECreateList'>
<arg const='true' declared_type='void*' name='factoringPtr' type='^v'/>
<arg declared_type='Size' name='factoredSize' type='l' type64='q'/>
<arg declared_type='Boolean' name='isRecord' type='B'/>
<arg declared_type='AEDescList*' name='resultList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AECreateRemoteProcessResolver'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFURLRef' name='url' type='^{__CFURL=}'/>
<retval already_retained='true' declared_type='AERemoteProcessResolverRef' type='^{AERemoteProcessResolver=}'/>
</function>
<function name='AEDecodeMessage'>
<arg declared_type='mach_msg_header_t*' name='header' type='^{_mach_msg_header_t=IIIIIi}'/>
<arg declared_type='AppleEvent*' name='event' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' name='reply' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEDeleteItem'>
<arg declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' name='index' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEDeleteParam'>
<arg declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEDisposeDesc'>
<arg declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEDisposeRemoteProcessResolver'>
<arg declared_type='AERemoteProcessResolverRef' name='ref' type='^{AERemoteProcessResolver=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='AEDisposeToken'>
<arg declared_type='AEDesc*' name='theToken' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEDuplicateDesc'>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEFlattenDesc'>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Ptr' name='buffer' type='*'/>
<arg declared_type='Size' name='bufferSize' type='l' type64='q'/>
<arg declared_type='Size*' name='actualSize' type='^i' type64='^q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEGetArray'>
<arg const='true' declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEArrayType' name='arrayType' type='c'/>
<arg declared_type='AEArrayDataPointer' name='arrayPtr' type='^(AEArrayData=[1s][1c][1^*][1{AEDesc=I^^{OpaqueAEDataStorageType}}][1{AEKeyDesc=I{AEDesc=I^^{OpaqueAEDataStorageType}}}])'/>
<arg declared_type='Size' name='maximumSize' type='l' type64='q'/>
<arg declared_type='DescType*' name='itemType' type='^I'/>
<arg declared_type='Size*' name='itemSize' type='^i' type64='^q'/>
<arg declared_type='long*' name='itemCount' type='^l' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetAttributeDesc'>
<arg const='true' declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg declared_type='DescType' name='desiredType' type='L' type64='I'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetAttributePtr'>
<arg const='true' declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg declared_type='DescType' name='desiredType' type='L' type64='I'/>
<arg declared_type='DescType*' name='typeCode' type='^I'/>
<arg declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='maximumSize' type='l' type64='q'/>
<arg declared_type='Size*' name='actualSize' type='^i' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetCoercionHandler'>
<arg declared_type='DescType' name='fromType' type='L' type64='I'/>
<arg declared_type='DescType' name='toType' type='L' type64='I'/>
<arg declared_type='AECoercionHandlerUPP*' name='handler' type='^^?'/>
<arg declared_type='SRefCon*' name='handlerRefcon' type='^i' type64='^^v'/>
<arg declared_type='Boolean*' name='fromTypeIsDesc' type='^B'/>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetDescData'>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='maximumSize' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetDescDataRange'>
<arg const='true' declared_type='AEDesc*' name='dataDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='void*' name='buffer' type='^v'/>
<arg declared_type='Size' name='offset' type='l' type64='q'/>
<arg declared_type='Size' name='length' type='l' type64='q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEGetDescDataSize'>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='Size' type='l' type64='q'/>
</function>
<function name='AEGetEventHandler'>
<arg declared_type='AEEventClass' name='theAEEventClass' type='L' type64='I'/>
<arg declared_type='AEEventID' name='theAEEventID' type='L' type64='I'/>
<arg declared_type='AEEventHandlerUPP*' name='handler' type='^^?'/>
<arg declared_type='SRefCon*' name='handlerRefcon' type='^i' type64='^^v'/>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetNthDesc'>
<arg const='true' declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' name='index' type='l' type64='q'/>
<arg declared_type='DescType' name='desiredType' type='L' type64='I'/>
<arg declared_type='AEKeyword*' name='theAEKeyword' type='^I'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetNthPtr'>
<arg const='true' declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' name='index' type='l' type64='q'/>
<arg declared_type='DescType' name='desiredType' type='L' type64='I'/>
<arg declared_type='AEKeyword*' name='theAEKeyword' type='^I'/>
<arg declared_type='DescType*' name='typeCode' type='^I'/>
<arg declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='maximumSize' type='l' type64='q'/>
<arg declared_type='Size*' name='actualSize' type='^i' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetObjectAccessor'>
<arg declared_type='DescType' name='desiredClass' type='L' type64='I'/>
<arg declared_type='DescType' name='containerType' type='L' type64='I'/>
<arg declared_type='OSLAccessorUPP*' name='accessor' type='^^?'/>
<arg declared_type='SRefCon*' name='accessorRefcon' type='^i' type64='^^v'/>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetParamDesc'>
<arg const='true' declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg declared_type='DescType' name='desiredType' type='L' type64='I'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetParamPtr'>
<arg const='true' declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg declared_type='DescType' name='desiredType' type='L' type64='I'/>
<arg declared_type='DescType*' name='actualType' type='^I'/>
<arg declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='maximumSize' type='l' type64='q'/>
<arg declared_type='Size*' name='actualSize' type='^i' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEGetRegisteredMachPort'>
<retval declared_type='mach_port_t' type='I'/>
</function>
<function name='AEGetSpecialHandler'>
<arg declared_type='AEKeyword' name='functionClass' type='L' type64='I'/>
<arg declared_type='AEEventHandlerUPP*' name='handler' type='^^?'/>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEInitializeDesc'>
<arg declared_type='AEDesc*' name='desc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='AEInstallCoercionHandler'>
<arg declared_type='DescType' name='fromType' type='L' type64='I'/>
<arg declared_type='DescType' name='toType' type='L' type64='I'/>
<arg declared_type='AECoercionHandlerUPP' function_pointer='true' name='handler' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='SRefCon' name='handlerRefcon' type='l' type64='^v'/>
<arg declared_type='Boolean' name='fromTypeIsDesc' type='B'/>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEInstallEventHandler'>
<arg declared_type='AEEventClass' name='theAEEventClass' type='L' type64='I'/>
<arg declared_type='AEEventID' name='theAEEventID' type='L' type64='I'/>
<arg declared_type='AEEventHandlerUPP' function_pointer='true' name='handler' type='^?'>
<arg const='true' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='SRefCon' name='handlerRefcon' type='l' type64='^v'/>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEInstallObjectAccessor'>
<arg declared_type='DescType' name='desiredClass' type='L' type64='I'/>
<arg declared_type='DescType' name='containerType' type='L' type64='I'/>
<arg declared_type='OSLAccessorUPP' function_pointer='true' name='theAccessor' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='SRefCon' name='accessorRefcon' type='l' type64='^v'/>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEInstallSpecialHandler'>
<arg declared_type='AEKeyword' name='functionClass' type='L' type64='I'/>
<arg declared_type='AEEventHandlerUPP' function_pointer='true' name='handler' type='^?'>
<arg const='true' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEManagerInfo'>
<arg declared_type='AEKeyword' name='keyWord' type='L' type64='I'/>
<arg declared_type='long*' name='result' type='^l' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEObjectInit'>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEPrintDescToHandle'>
<arg const='true' declared_type='AEDesc*' name='desc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Handle*' name='result' type='^^*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEProcessMessage'>
<arg declared_type='mach_msg_header_t*' name='header' type='^{_mach_msg_header_t=IIIIIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEPutArray'>
<arg declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEArrayType' name='arrayType' type='c'/>
<arg const='true' declared_type='AEArrayData*' name='arrayPtr' type='^(AEArrayData=[1s][1c][1^*][1{AEDesc=I^^{OpaqueAEDataStorageType}}][1{AEKeyDesc=I{AEDesc=I^^{OpaqueAEDataStorageType}}}])'/>
<arg declared_type='DescType' name='itemType' type='L' type64='I'/>
<arg declared_type='Size' name='itemSize' type='l' type64='q'/>
<arg declared_type='long' name='itemCount' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEPutAttributeDesc'>
<arg declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEPutAttributePtr'>
<arg declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg declared_type='DescType' name='typeCode' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataSize' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEPutDesc'>
<arg declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' name='index' type='l' type64='q'/>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEPutParamDesc'>
<arg declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEPutParamPtr'>
<arg declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg declared_type='DescType' name='typeCode' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataSize' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEPutPtr'>
<arg declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' name='index' type='l' type64='q'/>
<arg declared_type='DescType' name='typeCode' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataSize' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AERemoteProcessResolverGetProcesses'>
<arg declared_type='AERemoteProcessResolverRef' name='ref' type='^{AERemoteProcessResolver=}'/>
<arg declared_type='CFStreamError*' name='outError' type='^{_CFStreamError=ii}' type64='^{_CFStreamError=qi}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='AERemoteProcessResolverScheduleWithRunLoop'>
<arg declared_type='AERemoteProcessResolverRef' name='ref' type='^{AERemoteProcessResolver=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<arg declared_type='AERemoteProcessResolverCallback' function_pointer='true' name='callback' type='^?'>
<arg declared_type='AERemoteProcessResolverRef' type='^{AERemoteProcessResolver=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg const='true' declared_type='AERemoteProcessResolverContext*' name='ctx' type='^{AERemoteProcessResolverContext=i^v^?^?^?}' type64='^{AERemoteProcessResolverContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='AERemoveCoercionHandler'>
<arg declared_type='DescType' name='fromType' type='L' type64='I'/>
<arg declared_type='DescType' name='toType' type='L' type64='I'/>
<arg declared_type='AECoercionHandlerUPP' function_pointer='true' name='handler' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AERemoveEventHandler'>
<arg declared_type='AEEventClass' name='theAEEventClass' type='L' type64='I'/>
<arg declared_type='AEEventID' name='theAEEventID' type='L' type64='I'/>
<arg declared_type='AEEventHandlerUPP' function_pointer='true' name='handler' type='^?'>
<arg const='true' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AERemoveObjectAccessor'>
<arg declared_type='DescType' name='desiredClass' type='L' type64='I'/>
<arg declared_type='DescType' name='containerType' type='L' type64='I'/>
<arg declared_type='OSLAccessorUPP' function_pointer='true' name='theAccessor' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AERemoveSpecialHandler'>
<arg declared_type='AEKeyword' name='functionClass' type='L' type64='I'/>
<arg declared_type='AEEventHandlerUPP' function_pointer='true' name='handler' type='^?'>
<arg const='true' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='Boolean' name='isSysHandler' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEReplaceDescData'>
<arg declared_type='DescType' name='typeCode' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataSize' type='l' type64='q'/>
<arg declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEResolve'>
<arg const='true' declared_type='AEDesc*' name='objectSpecifier' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='short' name='callbackFlags' type='s'/>
<arg declared_type='AEDesc*' name='theToken' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AESendMessage'>
<arg const='true' declared_type='AppleEvent*' name='event' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' name='reply' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AESendMode' name='sendMode' type='l' type64='i'/>
<arg declared_type='long' name='timeOutInTicks' type='l' type64='q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AESetObjectCallbacks'>
<arg declared_type='OSLCompareUPP' function_pointer='true' name='myCompareProc' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='OSLCountUPP' function_pointer='true' name='myCountProc' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='OSLDisposeTokenUPP' function_pointer='true' name='myDisposeTokenProc' type='^?'>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='OSLGetMarkTokenUPP' function_pointer='true' name='myGetMarkTokenProc' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='OSLMarkUPP' function_pointer='true' name='myMarkProc' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='OSLAdjustMarksUPP' function_pointer='true' name='myAdjustMarksProc' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='long' type='l' type64='q'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='OSLGetErrDescUPP' function_pointer='true' name='myGetErrDescProcPtr' type='^?'>
<arg declared_type='AEDesc**' type='^^{AEDesc}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AESizeOfAttribute'>
<arg const='true' declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg declared_type='DescType*' name='typeCode' type='^I'/>
<arg declared_type='Size*' name='dataSize' type='^i' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AESizeOfFlattenedDesc'>
<arg const='true' declared_type='AEDesc*' name='theAEDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='Size' type='l' type64='q'/>
</function>
<function name='AESizeOfNthItem'>
<arg const='true' declared_type='AEDescList*' name='theAEDescList' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' name='index' type='l' type64='q'/>
<arg declared_type='DescType*' name='typeCode' type='^I'/>
<arg declared_type='Size*' name='dataSize' type='^i' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AESizeOfParam'>
<arg const='true' declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEKeyword' name='theAEKeyword' type='L' type64='I'/>
<arg declared_type='DescType*' name='typeCode' type='^I'/>
<arg declared_type='Size*' name='dataSize' type='^i' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AEStreamClose'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='AEDesc*' name='desc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamCloseDesc'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamCloseList'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamCloseRecord'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamCreateEvent'>
<arg declared_type='AEEventClass' name='clazz' type='L' type64='I'/>
<arg declared_type='AEEventID' name='id' type='L' type64='I'/>
<arg declared_type='DescType' name='targetType' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='targetData' type='^v'/>
<arg declared_type='Size' name='targetLength' type='l' type64='q'/>
<arg declared_type='SInt16' name='returnID' type='s'/>
<arg declared_type='SInt32' name='transactionID' type='l' type64='i'/>
<retval already_retained='true' declared_type='AEStreamRef' type='^{OpaqueAEStreamRef=}'/>
</function>
<function name='AEStreamOpen'>
<retval declared_type='AEStreamRef' type='^{OpaqueAEStreamRef=}'/>
</function>
<function name='AEStreamOpenDesc'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='DescType' name='newType' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamOpenEvent'>
<arg declared_type='AppleEvent*' name='event' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='AEStreamRef' type='^{OpaqueAEStreamRef=}'/>
</function>
<function name='AEStreamOpenKeyDesc'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='AEKeyword' name='key' type='L' type64='I'/>
<arg declared_type='DescType' name='newType' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamOpenList'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamOpenRecord'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='DescType' name='newType' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamOptionalParam'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='AEKeyword' name='key' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamSetRecordType'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='DescType' name='newType' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamWriteAEDesc'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg const='true' declared_type='AEDesc*' name='desc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamWriteData'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg const='true' declared_type='void*' name='data' type='^v'/>
<arg declared_type='Size' name='length' type='l' type64='q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamWriteDesc'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='DescType' name='newType' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='data' type='^v'/>
<arg declared_type='Size' name='length' type='l' type64='q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamWriteKey'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='AEKeyword' name='key' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEStreamWriteKeyDesc'>
<arg declared_type='AEStreamRef' name='ref' type='^{OpaqueAEStreamRef=}'/>
<arg declared_type='AEKeyword' name='key' type='L' type64='I'/>
<arg declared_type='DescType' name='newType' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='data' type='^v'/>
<arg declared_type='Size' name='length' type='l' type64='q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='AEUnflattenDesc'>
<arg const='true' declared_type='void*' name='buffer' type='^v'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CreateCompDescriptor'>
<arg declared_type='DescType' name='comparisonOperator' type='L' type64='I'/>
<arg declared_type='AEDesc*' name='operand1' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' name='operand2' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean' name='disposeInputs' type='B'/>
<arg declared_type='AEDesc*' name='theDescriptor' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='CreateLogicalDescriptor'>
<arg declared_type='AEDescList*' name='theLogicalTerms' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' name='theLogicOperator' type='L' type64='I'/>
<arg declared_type='Boolean' name='disposeInputs' type='B'/>
<arg declared_type='AEDesc*' name='theDescriptor' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='CreateObjSpecifier'>
<arg declared_type='DescType' name='desiredClass' type='L' type64='I'/>
<arg declared_type='AEDesc*' name='theContainer' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' name='keyForm' type='L' type64='I'/>
<arg declared_type='AEDesc*' name='keyData' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean' name='disposeInputs' type='B'/>
<arg declared_type='AEDesc*' name='objSpecifier' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='CreateOffsetDescriptor'>
<arg declared_type='long' name='theOffset' type='l' type64='q'/>
<arg declared_type='AEDesc*' name='theDescriptor' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='CreateRangeDescriptor'>
<arg declared_type='AEDesc*' name='rangeStart' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' name='rangeStop' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean' name='disposeInputs' type='B'/>
<arg declared_type='AEDesc*' name='theDescriptor' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='DisposeAECoerceDescUPP'>
<arg declared_type='AECoerceDescUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeAECoercePtrUPP'>
<arg declared_type='AECoercePtrUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeAEDisposeExternalUPP'>
<arg declared_type='AEDisposeExternalUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeAEEventHandlerUPP'>
<arg declared_type='AEEventHandlerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeOSLAccessorUPP'>
<arg declared_type='OSLAccessorUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeOSLAdjustMarksUPP'>
<arg declared_type='OSLAdjustMarksUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='long' type='l' type64='q'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeOSLCompareUPP'>
<arg declared_type='OSLCompareUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeOSLCountUPP'>
<arg declared_type='OSLCountUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeOSLDisposeTokenUPP'>
<arg declared_type='OSLDisposeTokenUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeOSLGetErrDescUPP'>
<arg declared_type='OSLGetErrDescUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AEDesc**' type='^^{AEDesc}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeOSLGetMarkTokenUPP'>
<arg declared_type='OSLGetMarkTokenUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeOSLMarkUPP'>
<arg declared_type='OSLMarkUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeAECoerceDescUPP'>
<arg const='true' declared_type='AEDesc*' name='fromDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' name='toType' type='L' type64='I'/>
<arg declared_type='SRefCon' name='handlerRefcon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' name='toDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AECoerceDescUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeAECoercePtrUPP'>
<arg declared_type='DescType' name='typeCode' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataSize' type='l' type64='q'/>
<arg declared_type='DescType' name='toType' type='L' type64='I'/>
<arg declared_type='SRefCon' name='handlerRefcon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AECoercePtrUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeAEDisposeExternalUPP'>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='Size' name='dataLength' type='l' type64='q'/>
<arg declared_type='SRefCon' name='refcon' type='l' type64='^v'/>
<arg declared_type='AEDisposeExternalUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeAEEventHandlerUPP'>
<arg const='true' declared_type='AppleEvent*' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' name='reply' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' name='handlerRefcon' type='l' type64='^v'/>
<arg declared_type='AEEventHandlerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeOSLAccessorUPP'>
<arg declared_type='DescType' name='desiredClass' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' name='container' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' name='containerClass' type='L' type64='I'/>
<arg declared_type='DescType' name='form' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' name='selectionData' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' name='value' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' name='accessorRefcon' type='l' type64='^v'/>
<arg declared_type='OSLAccessorUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeOSLAdjustMarksUPP'>
<arg declared_type='long' name='newStart' type='l' type64='q'/>
<arg declared_type='long' name='newStop' type='l' type64='q'/>
<arg const='true' declared_type='AEDesc*' name='markToken' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='OSLAdjustMarksUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='long' type='l' type64='q'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeOSLCompareUPP'>
<arg declared_type='DescType' name='oper' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' name='obj1' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' name='obj2' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean*' name='result' type='^B'/>
<arg declared_type='OSLCompareUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeOSLCountUPP'>
<arg declared_type='DescType' name='desiredType' type='L' type64='I'/>
<arg declared_type='DescType' name='containerClass' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' name='container' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long*' name='result' type='^l' type64='^q'/>
<arg declared_type='OSLCountUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeOSLDisposeTokenUPP'>
<arg declared_type='AEDesc*' name='unneededToken' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='OSLDisposeTokenUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeOSLGetErrDescUPP'>
<arg declared_type='AEDesc**' name='appDescPtr' type='^^{AEDesc}'/>
<arg declared_type='OSLGetErrDescUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AEDesc**' type='^^{AEDesc}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeOSLGetMarkTokenUPP'>
<arg const='true' declared_type='AEDesc*' name='dContainerToken' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' name='containerClass' type='L' type64='I'/>
<arg declared_type='AEDesc*' name='result' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='OSLGetMarkTokenUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeOSLMarkUPP'>
<arg const='true' declared_type='AEDesc*' name='dToken' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' name='markToken' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' name='index' type='l' type64='q'/>
<arg declared_type='OSLMarkUPP' function_pointer='true' name='userUPP' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='NewAECoerceDescUPP'>
<arg declared_type='AECoerceDescProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='AECoerceDescUPP' function_pointer='true' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewAECoercePtrUPP'>
<arg declared_type='AECoercePtrProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='AECoercePtrUPP' function_pointer='true' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewAEDisposeExternalUPP'>
<arg declared_type='AEDisposeExternalProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AEDisposeExternalUPP' function_pointer='true' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='Size' type='l' type64='q'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewAEEventHandlerUPP'>
<arg declared_type='AEEventHandlerProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg const='true' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='AEEventHandlerUPP' function_pointer='true' type='^?'>
<arg const='true' declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AppleEvent*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewOSLAccessorUPP'>
<arg declared_type='OSLAccessorProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSLAccessorUPP' function_pointer='true' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewOSLAdjustMarksUPP'>
<arg declared_type='OSLAdjustMarksProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='long' type='l' type64='q'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSLAdjustMarksUPP' function_pointer='true' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='long' type='l' type64='q'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewOSLCompareUPP'>
<arg declared_type='OSLCompareProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSLCompareUPP' function_pointer='true' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewOSLCountUPP'>
<arg declared_type='OSLCountProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSLCountUPP' function_pointer='true' type='^?'>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long*' type='^l' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewOSLDisposeTokenUPP'>
<arg declared_type='OSLDisposeTokenProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSLDisposeTokenUPP' function_pointer='true' type='^?'>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewOSLGetErrDescUPP'>
<arg declared_type='OSLGetErrDescProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='AEDesc**' type='^^{AEDesc}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSLGetErrDescUPP' function_pointer='true' type='^?'>
<arg declared_type='AEDesc**' type='^^{AEDesc}'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewOSLGetMarkTokenUPP'>
<arg declared_type='OSLGetMarkTokenProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSLGetMarkTokenUPP' function_pointer='true' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='DescType' type='L' type64='I'/>
<arg declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewOSLMarkUPP'>
<arg declared_type='OSLMarkProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSLMarkUPP' function_pointer='true' type='^?'>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg const='true' declared_type='AEDesc*' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='vAEBuildAppleEvent'>
<arg declared_type='AEEventClass' name='theClass' type='L' type64='I'/>
<arg declared_type='AEEventID' name='theID' type='L' type64='I'/>
<arg declared_type='DescType' name='addressType' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='addressData' type='^v'/>
<arg declared_type='Size' name='addressLength' type='l' type64='q'/>
<arg declared_type='SInt16' name='returnID' type='s'/>
<arg declared_type='SInt32' name='transactionID' type='l' type64='i'/>
<arg declared_type='AppleEvent*' name='resultEvt' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEBuildError*' name='error' type='^{AEBuildError=II}'/>
<arg const='true' declared_type='char*' name='paramsFmt' type='*'/>
<arg declared_type='va_list' declared_type64='struct __va_list_tag*' name='args' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='vAEBuildDesc'>
<arg declared_type='AEDesc*' name='dst' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEBuildError*' name='error' type='^{AEBuildError=II}'/>
<arg const='true' declared_type='char*' name='src' type='*'/>
<arg declared_type='va_list' declared_type64='struct __va_list_tag*' name='args' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='vAEBuildParameters'>
<arg declared_type='AppleEvent*' name='event' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<arg declared_type='AEBuildError*' name='error' type='^{AEBuildError=II}'/>
<arg const='true' declared_type='char*' name='format' type='*'/>
<arg declared_type='va_list' declared_type64='struct __va_list_tag*' name='args' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/DiskArbitration.framework'/>
<depends_on path='/System/Library/Frameworks/NetFS.framework'/>
<struct name='AFPAlternateAddress' type='{AFPAlternateAddress=&quot;fVersion&quot;C&quot;fAddressCount&quot;C&quot;fAddressList&quot;[1C]}'>
<field declared_type='UInt8' name='fVersion' type='C'/>
<field declared_type='UInt8' name='fAddressCount' type='C'/>
<field declared_type='UInt8*' name='fAddressList' type='[1C]'/>
</struct>
<struct name='AFPTagData' type='{AFPTagData=&quot;fLength&quot;C&quot;fType&quot;C&quot;fData&quot;[1C]}'>
<field declared_type='UInt8' name='fLength' type='C'/>
<field declared_type='UInt8' name='fType' type='C'/>
<field declared_type='UInt8*' name='fData' type='[1C]'/>
</struct>
<struct name='AFPVolMountInfo' type='{AFPVolMountInfo=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s&quot;nbpInterval&quot;c&quot;nbpCount&quot;c&quot;uamType&quot;s&quot;zoneNameOffset&quot;s&quot;serverNameOffset&quot;s&quot;volNameOffset&quot;s&quot;userNameOffset&quot;s&quot;userPasswordOffset&quot;s&quot;volPasswordOffset&quot;s&quot;AFPData&quot;[144c]}'>
<field declared_type='SInt16' name='length' type='s'/>
<field declared_type='VolumeType' name='media' type='L' type64='I'/>
<field declared_type='SInt16' name='flags' type='s'/>
<field declared_type='SInt8' name='nbpInterval' type='c'/>
<field declared_type='SInt8' name='nbpCount' type='c'/>
<field declared_type='SInt16' name='uamType' type='s'/>
<field declared_type='SInt16' name='zoneNameOffset' type='s'/>
<field declared_type='SInt16' name='serverNameOffset' type='s'/>
<field declared_type='SInt16' name='volNameOffset' type='s'/>
<field declared_type='SInt16' name='userNameOffset' type='s'/>
<field declared_type='SInt16' name='userPasswordOffset' type='s'/>
<field declared_type='SInt16' name='volPasswordOffset' type='s'/>
<field declared_type='char*' name='AFPData' type='[144c]'/>
</struct>
<struct name='AFPXVolMountInfo' type='{AFPXVolMountInfo=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s&quot;nbpInterval&quot;c&quot;nbpCount&quot;c&quot;uamType&quot;s&quot;zoneNameOffset&quot;s&quot;serverNameOffset&quot;s&quot;volNameOffset&quot;s&quot;userNameOffset&quot;s&quot;userPasswordOffset&quot;s&quot;volPasswordOffset&quot;s&quot;extendedFlags&quot;s&quot;uamNameOffset&quot;s&quot;alternateAddressOffset&quot;s&quot;AFPData&quot;[176c]}'>
<field declared_type='SInt16' name='length' type='s'/>
<field declared_type='VolumeType' name='media' type='L' type64='I'/>
<field declared_type='SInt16' name='flags' type='s'/>
<field declared_type='SInt8' name='nbpInterval' type='c'/>
<field declared_type='SInt8' name='nbpCount' type='c'/>
<field declared_type='SInt16' name='uamType' type='s'/>
<field declared_type='SInt16' name='zoneNameOffset' type='s'/>
<field declared_type='SInt16' name='serverNameOffset' type='s'/>
<field declared_type='SInt16' name='volNameOffset' type='s'/>
<field declared_type='SInt16' name='userNameOffset' type='s'/>
<field declared_type='SInt16' name='userPasswordOffset' type='s'/>
<field declared_type='SInt16' name='volPasswordOffset' type='s'/>
<field declared_type='SInt16' name='extendedFlags' type='s'/>
<field declared_type='SInt16' name='uamNameOffset' type='s'/>
<field declared_type='SInt16' name='alternateAddressOffset' type='s'/>
<field declared_type='char*' name='AFPData' type='[176c]'/>
</struct>
<struct name='AIFFLoop' type='{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}'>
<field declared_type='SInt16' name='playMode' type='s'/>
<field declared_type='MarkerIdType' name='beginLoop' type='s'/>
<field declared_type='MarkerIdType' name='endLoop' type='s'/>
</struct>
<struct name='AVLTreeStruct' type='{AVLTreeStruct=&quot;signature&quot;I&quot;privateStuff&quot;[8L]}' type64='{AVLTreeStruct=&quot;signature&quot;I&quot;privateStuff&quot;[8Q]}'>
<field declared_type='OSType' name='signature' type='L' type64='I'/>
<field declared_type='unsigned long*' name='privateStuff' type='[8L]' type64='[8Q]'/>
</struct>
<struct name='AliasRecord' type='{AliasRecord=&quot;hidden&quot;[6C]}'>
<field declared_type='UInt8*' name='hidden' type='[6C]'/>
</struct>
<struct name='ApplicationSpecificChunk' type='{ApplicationSpecificChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;applicationSignature&quot;I&quot;data&quot;[1C]}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='OSType' name='applicationSignature' type='L' type64='I'/>
<field declared_type='UInt8*' name='data' type='[1C]'/>
</struct>
<struct name='AudioRecordingChunk' type='{AudioRecordingChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;AESChannelStatus&quot;[24C]}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='UInt8*' name='AESChannelStatus' type='[24C]'/>
</struct>
<struct name='BigEndianFixed' type='{BigEndianFixed=&quot;bigEndianValue&quot;i}'>
<field declared_type='Fixed' name='bigEndianValue' type='l' type64='i'/>
</struct>
<struct name='BigEndianLong' type='{BigEndianLong=&quot;bigEndianValue&quot;l}' type64='{BigEndianLong=&quot;bigEndianValue&quot;q}'>
<field declared_type='long' name='bigEndianValue' type='l' type64='q'/>
</struct>
<struct name='BigEndianOSType' type='{BigEndianOSType=&quot;bigEndianValue&quot;I}'>
<field declared_type='OSType' name='bigEndianValue' type='L' type64='I'/>
</struct>
<struct name='BigEndianShort' type='{BigEndianShort=&quot;bigEndianValue&quot;s}'>
<field declared_type='short' name='bigEndianValue' type='s'/>
</struct>
<struct name='BigEndianUInt32' type='{BigEndianUInt32=&quot;bigEndianValue&quot;I}'>
<field declared_type='UInt32' name='bigEndianValue' type='L' type64='I'/>
</struct>
<struct name='BigEndianUnsignedFixed' type='{BigEndianUnsignedFixed=&quot;bigEndianValue&quot;I}'>
<field declared_type='UnsignedFixed' name='bigEndianValue' type='L' type64='I'/>
</struct>
<struct name='BigEndianUnsignedLong' type='{BigEndianUnsignedLong=&quot;bigEndianValue&quot;L}' type64='{BigEndianUnsignedLong=&quot;bigEndianValue&quot;Q}'>
<field declared_type='unsigned long' name='bigEndianValue' type='L' type64='Q'/>
</struct>
<struct name='BigEndianUnsignedShort' type='{BigEndianUnsignedShort=&quot;bigEndianValue&quot;S}'>
<field declared_type='unsigned short' name='bigEndianValue' type='S'/>
</struct>
<struct name='CatPositionRec' type='{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}'>
<field declared_type='SInt32' name='initialize' type='l' type64='i'/>
<field declared_type='SInt16*' name='priv' type='[6s]'/>
</struct>
<struct name='ChunkHeader' type='{ChunkHeader=&quot;ckID&quot;I&quot;ckSize&quot;i}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
</struct>
<struct name='Comment' type='{Comment=&quot;timeStamp&quot;I&quot;marker&quot;s&quot;count&quot;S&quot;text&quot;[1c]}'>
<field declared_type='UInt32' name='timeStamp' type='L' type64='I'/>
<field declared_type='MarkerIdType' name='marker' type='s'/>
<field declared_type='UInt16' name='count' type='S'/>
<field declared_type='char*' name='text' type='[1c]'/>
</struct>
<struct name='CommentsChunk' type='{CommentsChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;numComments&quot;S&quot;comments&quot;[1{Comment=&quot;timeStamp&quot;I&quot;marker&quot;s&quot;count&quot;S&quot;text&quot;[1c]}]}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='UInt16' name='numComments' type='S'/>
<field declared_type='Comment*' name='comments' type='[1{Comment=&quot;timeStamp&quot;I&quot;marker&quot;s&quot;count&quot;S&quot;text&quot;[1c]}]'/>
</struct>
<struct name='CommonChunk' type='{CommonChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;numChannels&quot;s&quot;numSampleFrames&quot;I&quot;sampleSize&quot;s&quot;sampleRate&quot;{Float80=&quot;exp&quot;s&quot;man&quot;[4S]}}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='SInt16' name='numChannels' type='s'/>
<field declared_type='UInt32' name='numSampleFrames' type='L' type64='I'/>
<field declared_type='SInt16' name='sampleSize' type='s'/>
<field declared_type='extended80' name='sampleRate' type='{Float80=&quot;exp&quot;s&quot;man&quot;[4S]}'/>
</struct>
<struct name='ComponentAliasResource' type='{ComponentAliasResource=&quot;cr&quot;{ComponentResource=&quot;cd&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentName&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentInfo&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentIcon&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}}&quot;aliasCD&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}}'>
<field declared_type='ComponentResource' name='cr' type='{ComponentResource=&quot;cd&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentName&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentInfo&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentIcon&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}}'/>
<field declared_type='ComponentDescription' name='aliasCD' type='{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'/>
</struct>
<struct name='ComponentDescription' type='{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'>
<field declared_type='OSType' name='componentType' type='L' type64='I'/>
<field declared_type='OSType' name='componentSubType' type='L' type64='I'/>
<field declared_type='OSType' name='componentManufacturer' type='L' type64='I'/>
<field declared_type='UInt32' name='componentFlags' type='L' type64='I'/>
<field declared_type='UInt32' name='componentFlagsMask' type='L' type64='I'/>
</struct>
<struct name='ComponentInstanceRecord' type='{ComponentInstanceRecord=&quot;data&quot;[1l]}' type64='{ComponentInstanceRecord=&quot;data&quot;[1q]}'>
<field declared_type='long*' name='data' type='[1l]' type64='[1q]'/>
</struct>
<struct name='ComponentMPWorkFunctionHeaderRecord' type='{ComponentMPWorkFunctionHeaderRecord=&quot;headerSize&quot;I&quot;recordSize&quot;I&quot;workFlags&quot;I&quot;processorCount&quot;S&quot;unused&quot;C&quot;isRunning&quot;C}'>
<field declared_type='UInt32' name='headerSize' type='L' type64='I'/>
<field declared_type='UInt32' name='recordSize' type='L' type64='I'/>
<field declared_type='UInt32' name='workFlags' type='L' type64='I'/>
<field declared_type='UInt16' name='processorCount' type='S'/>
<field declared_type='UInt8' name='unused' type='C'/>
<field declared_type='UInt8' name='isRunning' type='C'/>
</struct>
<struct name='ComponentParameters' type='{ComponentParameters=&quot;flags&quot;C&quot;paramSize&quot;C&quot;what&quot;s&quot;params&quot;[1l]}' type64='{ComponentParameters=&quot;flags&quot;C&quot;paramSize&quot;C&quot;what&quot;s&quot;padding&quot;I&quot;params&quot;[1q]}'>
<field declared_type='UInt8' name='flags' type='C'/>
<field declared_type='UInt8' name='paramSize' type='C'/>
<field declared_type='SInt16' name='what' type='s'/>
<field declared_type='long*' declared_type64='UInt32' name='padding' type='[1l]' type64='I'/>
<field declared_type64='long*' name='params' type64='[1q]'/>
</struct>
<struct name='ComponentPlatformInfo' type='{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}'>
<field declared_type='SInt32' name='componentFlags' type='l' type64='i'/>
<field declared_type='ResourceSpec' name='component' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type='SInt16' name='platformType' type='s'/>
</struct>
<struct name='ComponentPlatformInfoArray' type='{ComponentPlatformInfoArray=&quot;count&quot;i&quot;platformArray&quot;[1{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}]}'>
<field declared_type='SInt32' name='count' type='l' type64='i'/>
<field declared_type='ComponentPlatformInfo*' name='platformArray' type='[1{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}]'/>
</struct>
<struct name='ComponentRecord' type='{ComponentRecord=&quot;data&quot;[1l]}' type64='{ComponentRecord=&quot;data&quot;[1q]}'>
<field declared_type='long*' name='data' type='[1l]' type64='[1q]'/>
</struct>
<struct name='ComponentResource' type='{ComponentResource=&quot;cd&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentName&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentInfo&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentIcon&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}}'>
<field declared_type='ComponentDescription' name='cd' type='{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'/>
<field declared_type='ResourceSpec' name='component' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type='ResourceSpec' name='componentName' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type='ResourceSpec' name='componentInfo' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type='ResourceSpec' name='componentIcon' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
</struct>
<struct name='ComponentResourceExtension' type='{ComponentResourceExtension=&quot;componentVersion&quot;i&quot;componentRegisterFlags&quot;i&quot;componentIconFamily&quot;s}'>
<field declared_type='SInt32' name='componentVersion' type='l' type64='i'/>
<field declared_type='SInt32' name='componentRegisterFlags' type='l' type64='i'/>
<field declared_type='SInt16' name='componentIconFamily' type='s'/>
</struct>
<struct name='ContainerChunk' type='{ContainerChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;formType&quot;I}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='UInt32' name='formType' type='L' type64='I'/>
</struct>
<struct name='CustomBadgeResource' type='{CustomBadgeResource=&quot;version&quot;s&quot;customBadgeResourceID&quot;s&quot;customBadgeType&quot;I&quot;customBadgeCreator&quot;I&quot;windowBadgeType&quot;I&quot;windowBadgeCreator&quot;I&quot;overrideType&quot;I&quot;overrideCreator&quot;I}'>
<field declared_type='SInt16' name='version' type='s'/>
<field declared_type='SInt16' name='customBadgeResourceID' type='s'/>
<field declared_type='OSType' name='customBadgeType' type='L' type64='I'/>
<field declared_type='OSType' name='customBadgeCreator' type='L' type64='I'/>
<field declared_type='OSType' name='windowBadgeType' type='L' type64='I'/>
<field declared_type='OSType' name='windowBadgeCreator' type='L' type64='I'/>
<field declared_type='OSType' name='overrideType' type='L' type64='I'/>
<field declared_type='OSType' name='overrideCreator' type='L' type64='I'/>
</struct>
<struct name='DInfo' type='{DInfo=&quot;frRect&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;frFlags&quot;S&quot;frLocation&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;frView&quot;s}'>
<field declared_type='Rect' name='frRect' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type='UInt16' name='frFlags' type='S'/>
<field declared_type='Point' name='frLocation' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type='SInt16' name='frView' type='s'/>
</struct>
<struct name='DXInfo' type='{DXInfo=&quot;frScroll&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;frOpenChain&quot;i&quot;frScript&quot;c&quot;frXFlags&quot;c&quot;frComment&quot;s&quot;frPutAway&quot;i}'>
<field declared_type='Point' name='frScroll' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type='SInt32' name='frOpenChain' type='l' type64='i'/>
<field declared_type='SInt8' name='frScript' type='c'/>
<field declared_type='SInt8' name='frXFlags' type='c'/>
<field declared_type='SInt16' name='frComment' type='s'/>
<field declared_type='SInt32' name='frPutAway' type='l' type64='i'/>
</struct>
<struct name='DateCacheRecord' type='{DateCacheRecord=&quot;hidden&quot;[256s]}'>
<field declared_type='short*' name='hidden' type='[256s]'/>
</struct>
<struct name='DateTimeRec' type='{DateTimeRec=&quot;year&quot;s&quot;month&quot;s&quot;day&quot;s&quot;hour&quot;s&quot;minute&quot;s&quot;second&quot;s&quot;dayOfWeek&quot;s}'>
<field declared_type='short' name='year' type='s'/>
<field declared_type='short' name='month' type='s'/>
<field declared_type='short' name='day' type='s'/>
<field declared_type='short' name='hour' type='s'/>
<field declared_type='short' name='minute' type='s'/>
<field declared_type='short' name='second' type='s'/>
<field declared_type='short' name='dayOfWeek' type='s'/>
</struct>
<struct name='DeferredTask' type='{DeferredTask=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;dtFlags&quot;s&quot;dtAddr&quot;^?&quot;dtParam&quot;l&quot;dtReserved&quot;l}' type64='{DeferredTask=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;dtFlags&quot;s&quot;dtAddr&quot;^?&quot;dtParam&quot;q&quot;dtReserved&quot;q}'>
<field declared_type='volatile QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='short' name='qType' type='s'/>
<field declared_type='volatile short' name='dtFlags' type='s'/>
<field declared_type='DeferredTaskUPP' function_pointer='true' name='dtAddr' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='long' name='dtParam' type='l' type64='q'/>
<field declared_type='long' name='dtReserved' type='l' type64='q'/>
</struct>
<struct name='ExceptionInformation' type='{ExceptionInformation=&quot;theKind&quot;I&quot;machineState&quot;^{MachineInformationIntel}&quot;registerImage&quot;^{RegisterInformationIntel}&quot;FPUImage&quot;^{FPUInformationIntel}&quot;info&quot;(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})&quot;vectorImage&quot;^{VectorInformationIntel}}' type64='{ExceptionInformation=&quot;theKind&quot;Q&quot;machineState&quot;^{MachineInformationIntel64}&quot;registerImage&quot;^{RegisterInformationIntel64}&quot;FPUImage&quot;^{FPUInformationIntel64}&quot;info&quot;(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})&quot;vectorImage&quot;^{VectorInformationIntel64}}'>
<field declared_type='ExceptionKind' name='theKind' type='L' type64='Q'/>
<field declared_type='MachineInformation*' name='machineState' type='^{MachineInformationIntel=LLLLLLLLLLL}' type64='^{MachineInformationIntel64=QQQQQQQQ}'/>
<field declared_type='RegisterInformation*' name='registerImage' type='^{RegisterInformationIntel=LLLLLLLL}' type64='^{RegisterInformationIntel64=QQQQQQQQQQQQQQQQ}'/>
<field declared_type='FPUInformation*' name='FPUImage' type='^{FPUInformationIntel=[8[10C]]SSSSIII}' type64='^{FPUInformationIntel64=[8[10C]]SSSSIII}'/>
<field declared_type='ExceptionInfo' name='info' type='(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})'/>
<field declared_type='VectorInformation*' name='vectorImage' type='^{VectorInformationIntel=[8(Vector128Intel=[16C])]}' type64='^{VectorInformationIntel64=[16(Vector128Intel=[16C])]}'/>
</struct>
<struct name='ExceptionInformationPowerPC' type='{ExceptionInformationPowerPC=&quot;theKind&quot;I&quot;machineState&quot;^{MachineInformationPowerPC}&quot;registerImage&quot;^{RegisterInformationPowerPC}&quot;FPUImage&quot;^{FPUInformationPowerPC}&quot;info&quot;(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})&quot;vectorImage&quot;^{VectorInformationPowerPC}}' type64='{ExceptionInformationPowerPC=&quot;theKind&quot;Q&quot;machineState&quot;^{MachineInformationPowerPC}&quot;registerImage&quot;^{RegisterInformationPowerPC}&quot;FPUImage&quot;^{FPUInformationPowerPC}&quot;info&quot;(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})&quot;vectorImage&quot;^{VectorInformationPowerPC}}'>
<field declared_type='ExceptionKind' name='theKind' type='L' type64='Q'/>
<field declared_type='MachineInformationPowerPC*' name='machineState' type='^{MachineInformationPowerPC={UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}LLLLLL{UnsignedWide=II}{UnsignedWide=II}}' type64='^{MachineInformationPowerPC={UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}QQQQQQ{UnsignedWide=II}{UnsignedWide=II}}'/>
<field declared_type='RegisterInformationPowerPC*' name='registerImage' type='^{RegisterInformationPowerPC={UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}{UnsignedWide=II}}'/>
<field declared_type='FPUInformationPowerPC*' name='FPUImage' type='^{FPUInformationPowerPC=[32{UnsignedWide=II}]LL}' type64='^{FPUInformationPowerPC=[32{UnsignedWide=II}]QQ}'/>
<field declared_type='ExceptionInfo' name='info' type='(ExceptionInfo=&quot;memoryInfo&quot;^{MemoryExceptionInformation})'/>
<field declared_type='VectorInformationPowerPC*' name='vectorImage' type='^{VectorInformationPowerPC=[32(Vector128=[4L][8S][16C])](Vector128=[4L][8S][16C])I}' type64='^{VectorInformationPowerPC=[32(Vector128=[4Q][8S][16C])](Vector128=[4Q][8S][16C])I}'/>
</struct>
<struct name='ExtCommonChunk' type='{ExtCommonChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;numChannels&quot;s&quot;numSampleFrames&quot;I&quot;sampleSize&quot;s&quot;sampleRate&quot;{Float80=&quot;exp&quot;s&quot;man&quot;[4S]}&quot;compressionType&quot;I&quot;compressionName&quot;[1c]}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='SInt16' name='numChannels' type='s'/>
<field declared_type='UInt32' name='numSampleFrames' type='L' type64='I'/>
<field declared_type='SInt16' name='sampleSize' type='s'/>
<field declared_type='extended80' name='sampleRate' type='{Float80=&quot;exp&quot;s&quot;man&quot;[4S]}'/>
<field declared_type='UInt32' name='compressionType' type='L' type64='I'/>
<field declared_type='char*' name='compressionName' type='[1c]'/>
</struct>
<struct name='ExtComponentResource' type='{ExtComponentResource=&quot;cd&quot;{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentName&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentInfo&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentIcon&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;componentVersion&quot;i&quot;componentRegisterFlags&quot;i&quot;componentIconFamily&quot;s&quot;count&quot;i&quot;platformArray&quot;[1{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}]}'>
<field declared_type='ComponentDescription' name='cd' type='{ComponentDescription=&quot;componentType&quot;I&quot;componentSubType&quot;I&quot;componentManufacturer&quot;I&quot;componentFlags&quot;I&quot;componentFlagsMask&quot;I}'/>
<field declared_type='ResourceSpec' name='component' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type='ResourceSpec' name='componentName' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type='ResourceSpec' name='componentInfo' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type='ResourceSpec' name='componentIcon' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'/>
<field declared_type='SInt32' name='componentVersion' type='l' type64='i'/>
<field declared_type='SInt32' name='componentRegisterFlags' type='l' type64='i'/>
<field declared_type='SInt16' name='componentIconFamily' type='s'/>
<field declared_type='SInt32' name='count' type='l' type64='i'/>
<field declared_type='ComponentPlatformInfo*' name='platformArray' type='[1{ComponentPlatformInfo=&quot;componentFlags&quot;i&quot;component&quot;{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}&quot;platformType&quot;s}]'/>
</struct>
<struct name='ExtendedFileInfo' type='{ExtendedFileInfo=&quot;reserved1&quot;[4s]&quot;extendedFinderFlags&quot;S&quot;reserved2&quot;s&quot;putAwayFolderID&quot;i}'>
<field declared_type='SInt16*' name='reserved1' type='[4s]'/>
<field declared_type='UInt16' name='extendedFinderFlags' type='S'/>
<field declared_type='SInt16' name='reserved2' type='s'/>
<field declared_type='SInt32' name='putAwayFolderID' type='l' type64='i'/>
</struct>
<struct name='ExtendedFolderInfo' type='{ExtendedFolderInfo=&quot;scrollPosition&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;reserved1&quot;i&quot;extendedFinderFlags&quot;S&quot;reserved2&quot;s&quot;putAwayFolderID&quot;i}'>
<field declared_type='Point' name='scrollPosition' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type='SInt32' name='reserved1' type='l' type64='i'/>
<field declared_type='UInt16' name='extendedFinderFlags' type='S'/>
<field declared_type='SInt16' name='reserved2' type='s'/>
<field declared_type='SInt32' name='putAwayFolderID' type='l' type64='i'/>
</struct>
<struct name='FInfo' type='{FInfo=&quot;fdType&quot;I&quot;fdCreator&quot;I&quot;fdFlags&quot;S&quot;fdLocation&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;fdFldr&quot;s}'>
<field declared_type='OSType' name='fdType' type='L' type64='I'/>
<field declared_type='OSType' name='fdCreator' type='L' type64='I'/>
<field declared_type='UInt16' name='fdFlags' type='S'/>
<field declared_type='Point' name='fdLocation' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type='SInt16' name='fdFldr' type='s'/>
</struct>
<struct name='FPUInformation' type='{FPUInformationIntel=&quot;Registers&quot;[8[10C]]&quot;Control&quot;S&quot;Status&quot;S&quot;Tag&quot;S&quot;Opcode&quot;S&quot;EIP&quot;I&quot;DP&quot;I&quot;DS&quot;I}' type64='{FPUInformationIntel64=&quot;Registers&quot;[8[10C]]&quot;Control&quot;S&quot;Status&quot;S&quot;Tag&quot;S&quot;Opcode&quot;S&quot;IP&quot;I&quot;DP&quot;I&quot;DS&quot;I}'>
<field declared_type='FPRegIntel*' name='Registers' type='[8[10C]]'/>
<field declared_type='unsigned short' name='Control' type='S'/>
<field declared_type='unsigned short' name='Status' type='S'/>
<field declared_type='unsigned short' name='Tag' type='S'/>
<field declared_type='unsigned short' name='Opcode' type='S'/>
<field declared_type='unsigned int' name='IP' type='I'/>
<field declared_type='unsigned int' name='DP' type='I'/>
<field declared_type='unsigned int' name='DS' type='I'/>
</struct>
<struct name='FPUInformationIntel64' type64='{FPUInformationIntel64=&quot;Registers&quot;[8[10C]]&quot;Control&quot;S&quot;Status&quot;S&quot;Tag&quot;S&quot;Opcode&quot;S&quot;IP&quot;I&quot;DP&quot;I&quot;DS&quot;I}'>
<field declared_type64='FPRegIntel*' name='Registers' type64='[8[10C]]'/>
<field declared_type64='unsigned short' name='Control' type64='S'/>
<field declared_type64='unsigned short' name='Status' type64='S'/>
<field declared_type64='unsigned short' name='Tag' type64='S'/>
<field declared_type64='unsigned short' name='Opcode' type64='S'/>
<field declared_type64='unsigned int' name='IP' type64='I'/>
<field declared_type64='unsigned int' name='DP' type64='I'/>
<field declared_type64='unsigned int' name='DS' type64='I'/>
</struct>
<struct name='FPUInformationPowerPC' type='{FPUInformationPowerPC=&quot;Registers&quot;[32{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}]&quot;FPSCR&quot;L&quot;Reserved&quot;L}' type64='{FPUInformationPowerPC=&quot;Registers&quot;[32{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}]&quot;FPSCR&quot;Q&quot;Reserved&quot;Q}'>
<field declared_type='UnsignedWide*' name='Registers' type='[32{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}]'/>
<field declared_type='unsigned long' name='FPSCR' type='L' type64='Q'/>
<field declared_type='unsigned long' name='Reserved' type='L' type64='Q'/>
</struct>
<struct name='FSAliasInfo' type='{FSAliasInfo=&quot;volumeCreateDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;targetCreateDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;parentDirID&quot;I&quot;nodeID&quot;I&quot;filesystemID&quot;S&quot;signature&quot;S&quot;volumeIsBootVolume&quot;B&quot;volumeIsAutomounted&quot;B&quot;volumeIsEjectable&quot;B&quot;volumeHasPersistentFileIDs&quot;B&quot;isDirectory&quot;B}'>
<field declared_type='UTCDateTime' name='volumeCreateDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UTCDateTime' name='targetCreateDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='OSType' name='fileType' type='L' type64='I'/>
<field declared_type='OSType' name='fileCreator' type='L' type64='I'/>
<field declared_type='UInt32' name='parentDirID' type='L' type64='I'/>
<field declared_type='UInt32' name='nodeID' type='L' type64='I'/>
<field declared_type='UInt16' name='filesystemID' type='S'/>
<field declared_type='UInt16' name='signature' type='S'/>
<field declared_type='Boolean' name='volumeIsBootVolume' type='B'/>
<field declared_type='Boolean' name='volumeIsAutomounted' type='B'/>
<field declared_type='Boolean' name='volumeIsEjectable' type='B'/>
<field declared_type='Boolean' name='volumeHasPersistentFileIDs' type='B'/>
<field declared_type='Boolean' name='isDirectory' type='B'/>
</struct>
<struct name='FSCatalogBulkParam' type='{FSCatalogBulkParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;containerChanged&quot;B&quot;reserved&quot;C&quot;iteratorFlags&quot;I&quot;iterator&quot;^{OpaqueFSIterator}&quot;container&quot;^{FSRef}&quot;maximumItems&quot;I&quot;actualItems&quot;I&quot;whichInfo&quot;I&quot;catalogInfo&quot;^{FSCatalogInfo}&quot;refs&quot;^{FSRef}&quot;specs&quot;^{FSSpec}&quot;names&quot;^{HFSUniStr255}&quot;searchParams&quot;^{FSSearchParams}}' type64='{FSCatalogBulkParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;containerChanged&quot;B&quot;reserved&quot;C&quot;iteratorFlags&quot;I&quot;iterator&quot;^{OpaqueFSIterator}&quot;container&quot;^{FSRef}&quot;maximumItems&quot;Q&quot;actualItems&quot;Q&quot;whichInfo&quot;I&quot;catalogInfo&quot;^{FSCatalogInfo}&quot;refs&quot;^{FSRef}&quot;specs&quot;^{FSSpec}&quot;names&quot;^{HFSUniStr255}&quot;searchParams&quot;^{FSSearchParams}}'>
<field declared_type='QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='SInt16' name='qType' type='s'/>
<field declared_type='SInt16' name='ioTrap' type='s'/>
<field declared_type='Ptr' name='ioCmdAddr' type='*'/>
<field declared_type='IOCompletionUPP' function_pointer='true' name='ioCompletion' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='volatile OSErr' name='ioResult' type='s'/>
<field declared_type='Boolean' name='containerChanged' type='B'/>
<field declared_type='UInt8' name='reserved' type='C'/>
<field declared_type='FSIteratorFlags' name='iteratorFlags' type='L' type64='I'/>
<field declared_type='FSIterator' name='iterator' type='^{OpaqueFSIterator=}'/>
<field const='true' declared_type='FSRef*' name='container' type='^{FSRef=[80C]}'/>
<field declared_type='ItemCount' name='maximumItems' type='L' type64='Q'/>
<field declared_type='ItemCount' name='actualItems' type='L' type64='Q'/>
<field declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<field declared_type='FSCatalogInfo*' name='catalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<field declared_type='FSRef*' name='refs' type='^{FSRef=[80C]}'/>
<field declared_type='FSSpecPtr' name='specs' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<field declared_type='HFSUniStr255*' name='names' type='^{HFSUniStr255=S[255S]}'/>
<field const='true' declared_type='FSSearchParams*' name='searchParams' type='^{FSSearchParams=iII^S^{FSCatalogInfo}^{FSCatalogInfo}}' type64='^{FSSearchParams=iIQ^S^{FSCatalogInfo}^{FSCatalogInfo}}'/>
</struct>
<struct name='FSCatalogInfo' type='{FSCatalogInfo=&quot;nodeFlags&quot;S&quot;volume&quot;s&quot;parentDirID&quot;I&quot;nodeID&quot;I&quot;sharingFlags&quot;C&quot;userPrivileges&quot;C&quot;reserved1&quot;C&quot;reserved2&quot;C&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;contentModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;attributeModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;accessDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;permissions&quot;[4L]&quot;finderInfo&quot;[16C]&quot;extFinderInfo&quot;[16C]&quot;dataLogicalSize&quot;Q&quot;dataPhysicalSize&quot;Q&quot;rsrcLogicalSize&quot;Q&quot;rsrcPhysicalSize&quot;Q&quot;valence&quot;I&quot;textEncodingHint&quot;I}' type64='{FSCatalogInfo=&quot;nodeFlags&quot;S&quot;volume&quot;s&quot;parentDirID&quot;I&quot;nodeID&quot;I&quot;sharingFlags&quot;C&quot;userPrivileges&quot;C&quot;reserved1&quot;C&quot;reserved2&quot;C&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;contentModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;attributeModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;accessDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;permissions&quot;{FSPermissionInfo=&quot;userID&quot;I&quot;groupID&quot;I&quot;reserved1&quot;C&quot;userAccess&quot;C&quot;mode&quot;S&quot;fileSec&quot;^{__FSFileSecurity}}&quot;finderInfo&quot;[16C]&quot;extFinderInfo&quot;[16C]&quot;dataLogicalSize&quot;Q&quot;dataPhysicalSize&quot;Q&quot;rsrcLogicalSize&quot;Q&quot;rsrcPhysicalSize&quot;Q&quot;valence&quot;I&quot;textEncodingHint&quot;I}'>
<field declared_type='UInt16' name='nodeFlags' type='S'/>
<field declared_type='FSVolumeRefNum' name='volume' type='s'/>
<field declared_type='UInt32' name='parentDirID' type='L' type64='I'/>
<field declared_type='UInt32' name='nodeID' type='L' type64='I'/>
<field declared_type='UInt8' name='sharingFlags' type='C'/>
<field declared_type='UInt8' name='userPrivileges' type='C'/>
<field declared_type='UInt8' name='reserved1' type='C'/>
<field declared_type='UInt8' name='reserved2' type='C'/>
<field declared_type='UTCDateTime' name='createDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UTCDateTime' name='contentModDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UTCDateTime' name='attributeModDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UTCDateTime' name='accessDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UTCDateTime' name='backupDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UInt32*' declared_type64='FSPermissionInfo' name='permissions' type='[4L]' type64='{FSPermissionInfo=&quot;userID&quot;I&quot;groupID&quot;I&quot;reserved1&quot;C&quot;userAccess&quot;C&quot;mode&quot;S&quot;fileSec&quot;^{__FSFileSecurity}}'/>
<field declared_type='UInt8*' name='finderInfo' type='[16C]'/>
<field declared_type='UInt8*' name='extFinderInfo' type='[16C]'/>
<field declared_type='UInt64' name='dataLogicalSize' type='Q'/>
<field declared_type='UInt64' name='dataPhysicalSize' type='Q'/>
<field declared_type='UInt64' name='rsrcLogicalSize' type='Q'/>
<field declared_type='UInt64' name='rsrcPhysicalSize' type='Q'/>
<field declared_type='UInt32' name='valence' type='L' type64='I'/>
<field declared_type='TextEncoding' name='textEncodingHint' type='L' type64='I'/>
</struct>
<struct name='FSFileOperationClientContext' type='{FSFileOperationClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{FSFileOperationClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='CFAllocatorRetainCallBack' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='CFAllocatorReleaseCallBack' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
</struct>
<struct name='FSForkCBInfoParam' type='{FSForkCBInfoParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;desiredRefNum&quot;s&quot;volumeRefNum&quot;s&quot;iterator&quot;s&quot;actualRefNum&quot;s&quot;ref&quot;^{FSRef}&quot;forkInfo&quot;^{FSForkInfo}&quot;forkName&quot;^{HFSUniStr255}}' type64='{FSForkCBInfoParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;desiredRefNum&quot;i&quot;volumeRefNum&quot;s&quot;iterator&quot;i&quot;actualRefNum&quot;s&quot;ref&quot;^{FSRef}&quot;forkInfo&quot;^{FSForkInfo}&quot;forkName&quot;^{HFSUniStr255}}'>
<field declared_type='QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='SInt16' name='qType' type='s'/>
<field declared_type='SInt16' name='ioTrap' type='s'/>
<field declared_type='Ptr' name='ioCmdAddr' type='*'/>
<field declared_type='IOCompletionUPP' function_pointer='true' name='ioCompletion' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='volatile OSErr' name='ioResult' type='s'/>
<field declared_type='FSIORefNum' name='desiredRefNum' type='s' type64='i'/>
<field declared_type='FSVolumeRefNum' name='volumeRefNum' type='s'/>
<field declared_type='FSIORefNum' name='iterator' type='s' type64='i'/>
<field declared_type='FSVolumeRefNum' name='actualRefNum' type='s'/>
<field declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<field declared_type='FSForkInfo*' name='forkInfo' type='^{FSForkInfo=CcsIIIQQQQ}'/>
<field declared_type='HFSUniStr255*' name='forkName' type='^{HFSUniStr255=S[255S]}'/>
</struct>
<struct name='FSForkIOParam' type='{FSForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;reserved1&quot;^v&quot;reserved2&quot;s&quot;forkRefNum&quot;s&quot;reserved3&quot;C&quot;permissions&quot;c&quot;ref&quot;^{FSRef}&quot;buffer&quot;*&quot;requestCount&quot;I&quot;actualCount&quot;I&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;allocationFlags&quot;S&quot;allocationAmount&quot;Q&quot;forkNameLength&quot;I&quot;forkName&quot;^S&quot;forkIterator&quot;{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}&quot;outForkName&quot;^{HFSUniStr255}}' type64='{FSForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;reserved1&quot;^v&quot;reserved2&quot;s&quot;forkRefNum&quot;i&quot;reserved3&quot;C&quot;permissions&quot;c&quot;ref&quot;^{FSRef}&quot;buffer&quot;*&quot;requestCount&quot;I&quot;actualCount&quot;I&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;allocationFlags&quot;S&quot;allocationAmount&quot;Q&quot;forkNameLength&quot;Q&quot;forkName&quot;^S&quot;forkIterator&quot;{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}&quot;outForkName&quot;^{HFSUniStr255}}'>
<field declared_type='QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='SInt16' name='qType' type='s'/>
<field declared_type='SInt16' name='ioTrap' type='s'/>
<field declared_type='Ptr' name='ioCmdAddr' type='*'/>
<field declared_type='IOCompletionUPP' function_pointer='true' name='ioCompletion' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='volatile OSErr' name='ioResult' type='s'/>
<field declared_type='void*' name='reserved1' type='^v'/>
<field declared_type='SInt16' name='reserved2' type='s'/>
<field declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<field declared_type='UInt8' name='reserved3' type='C'/>
<field declared_type='SInt8' name='permissions' type='c'/>
<field const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<field declared_type='Ptr' name='buffer' type='*'/>
<field declared_type='UInt32' name='requestCount' type='L' type64='I'/>
<field declared_type='UInt32' name='actualCount' type='L' type64='I'/>
<field declared_type='UInt16' name='positionMode' type='S'/>
<field declared_type='SInt64' name='positionOffset' type='q'/>
<field declared_type='FSAllocationFlags' name='allocationFlags' type='S'/>
<field declared_type='UInt64' name='allocationAmount' type='Q'/>
<field declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<field const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<field declared_type='CatPositionRec' name='forkIterator' type='{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}'/>
<field declared_type='HFSUniStr255*' name='outForkName' type='^{HFSUniStr255=S[255S]}'/>
</struct>
<struct name='FSForkInfo' type='{FSForkInfo=&quot;flags&quot;C&quot;permissions&quot;c&quot;volume&quot;s&quot;reserved2&quot;I&quot;nodeID&quot;I&quot;forkID&quot;I&quot;currentPosition&quot;Q&quot;logicalEOF&quot;Q&quot;physicalEOF&quot;Q&quot;process&quot;Q}'>
<field declared_type='FSForkInfoFlags' name='flags' type='C'/>
<field declared_type='SInt8' name='permissions' type='c'/>
<field declared_type='FSVolumeRefNum' name='volume' type='s'/>
<field declared_type='UInt32' name='reserved2' type='L' type64='I'/>
<field declared_type='UInt32' name='nodeID' type='L' type64='I'/>
<field declared_type='UInt32' name='forkID' type='L' type64='I'/>
<field declared_type='UInt64' name='currentPosition' type='Q'/>
<field declared_type='UInt64' name='logicalEOF' type='Q'/>
<field declared_type='UInt64' name='physicalEOF' type='Q'/>
<field declared_type='UInt64' name='process' type='Q'/>
</struct>
<struct name='FSPermissionInfo' type='{FSPermissionInfo=&quot;userID&quot;I&quot;groupID&quot;I&quot;reserved1&quot;C&quot;userAccess&quot;C&quot;mode&quot;S&quot;fileSec&quot;^{__FSFileSecurity}}'>
<field declared_type='UInt32' name='userID' type='L' type64='I'/>
<field declared_type='UInt32' name='groupID' type='L' type64='I'/>
<field declared_type='UInt8' name='reserved1' type='C'/>
<field declared_type='UInt8' name='userAccess' type='C'/>
<field declared_type='UInt16' name='mode' type='S'/>
<field declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
</struct>
<struct name='FSRangeLockParam' type='{FSRangeLockParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;forkRefNum&quot;s&quot;requestCount&quot;Q&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;rangeStart&quot;Q}' type64='{FSRangeLockParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;forkRefNum&quot;i&quot;requestCount&quot;Q&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;rangeStart&quot;Q}'>
<field declared_type='QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='SInt16' name='qType' type='s'/>
<field declared_type='SInt16' name='ioTrap' type='s'/>
<field declared_type='Ptr' name='ioCmdAddr' type='*'/>
<field declared_type='IOCompletionUPP' function_pointer='true' name='ioCompletion' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='volatile OSErr' name='ioResult' type='s'/>
<field declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<field declared_type='UInt64' name='requestCount' type='Q'/>
<field declared_type='UInt16' name='positionMode' type='S'/>
<field declared_type='SInt64' name='positionOffset' type='q'/>
<field declared_type='UInt64' name='rangeStart' type='Q'/>
</struct>
<struct name='FSRef' type='{FSRef=&quot;hidden&quot;[80C]}'>
<field declared_type='UInt8*' name='hidden' type='[80C]'/>
</struct>
<struct name='FSRefForkIOParam' type='{FSRefForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;parentRef&quot;^{FSRef}&quot;nameLength&quot;I&quot;name&quot;^S&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;forkNameLength&quot;I&quot;forkName&quot;^S&quot;permissions&quot;c&quot;reserved1&quot;C&quot;forkRefNum&quot;s&quot;newRef&quot;^{FSRef}}' type64='{FSRefForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;parentRef&quot;^{FSRef}&quot;nameLength&quot;Q&quot;name&quot;^S&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;forkNameLength&quot;Q&quot;forkName&quot;^S&quot;permissions&quot;c&quot;reserved1&quot;C&quot;forkRefNum&quot;i&quot;newRef&quot;^{FSRef}}'>
<field declared_type='QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='SInt16' name='qType' type='s'/>
<field declared_type='SInt16' name='ioTrap' type='s'/>
<field declared_type='Ptr' name='ioCmdAddr' type='*'/>
<field declared_type='IOCompletionUPP' function_pointer='true' name='ioCompletion' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='volatile OSErr' name='ioResult' type='s'/>
<field const='true' declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<field declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<field const='true' declared_type='UniChar*' name='name' type='^S'/>
<field declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<field const='true' declared_type='FSCatalogInfo*' name='catInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<field declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<field const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<field declared_type='SInt8' name='permissions' type='c'/>
<field declared_type='UInt8' name='reserved1' type='C'/>
<field declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<field declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
</struct>
<struct name='FSRefParam' type='{FSRefParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;ioNamePtr&quot;*&quot;ioVRefNum&quot;s&quot;reserved1&quot;s&quot;reserved2&quot;C&quot;reserved3&quot;C&quot;ref&quot;^{FSRef}&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;nameLength&quot;I&quot;name&quot;^S&quot;ioDirID&quot;I&quot;spec&quot;^{FSSpec}&quot;parentRef&quot;^{FSRef}&quot;newRef&quot;^{FSRef}&quot;textEncodingHint&quot;I&quot;outName&quot;^{HFSUniStr255}}' type64='{FSRefParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;ioNamePtr&quot;*&quot;ioVRefNum&quot;s&quot;reserved1&quot;s&quot;reserved2&quot;C&quot;reserved3&quot;C&quot;ref&quot;^{FSRef}&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;nameLength&quot;Q&quot;name&quot;^S&quot;ioDirID&quot;I&quot;spec&quot;^{FSSpec}&quot;parentRef&quot;^{FSRef}&quot;newRef&quot;^{FSRef}&quot;textEncodingHint&quot;I&quot;outName&quot;^{HFSUniStr255}}'>
<field declared_type='QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='SInt16' name='qType' type='s'/>
<field declared_type='SInt16' name='ioTrap' type='s'/>
<field declared_type='Ptr' name='ioCmdAddr' type='*'/>
<field declared_type='IOCompletionUPP' function_pointer='true' name='ioCompletion' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='volatile OSErr' name='ioResult' type='s'/>
<field declared_type='ConstStringPtr' name='ioNamePtr' type='*'/>
<field declared_type='FSVolumeRefNum' name='ioVRefNum' type='s'/>
<field declared_type='SInt16' name='reserved1' type='s'/>
<field declared_type='UInt8' name='reserved2' type='C'/>
<field declared_type='UInt8' name='reserved3' type='C'/>
<field const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<field declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<field declared_type='FSCatalogInfo*' name='catInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<field declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<field const='true' declared_type='UniChar*' name='name' type='^S'/>
<field declared_type='UInt32' name='ioDirID' type='L' type64='I'/>
<field declared_type='FSSpecPtr' name='spec' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<field declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<field declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<field declared_type='TextEncoding' name='textEncodingHint' type='L' type64='I'/>
<field declared_type='HFSUniStr255*' name='outName' type='^{HFSUniStr255=S[255S]}'/>
</struct>
<struct name='FSSearchParams' type='{FSSearchParams=&quot;searchTime&quot;i&quot;searchBits&quot;I&quot;searchNameLength&quot;I&quot;searchName&quot;^S&quot;searchInfo1&quot;^{FSCatalogInfo}&quot;searchInfo2&quot;^{FSCatalogInfo}}' type64='{FSSearchParams=&quot;searchTime&quot;i&quot;searchBits&quot;I&quot;searchNameLength&quot;Q&quot;searchName&quot;^S&quot;searchInfo1&quot;^{FSCatalogInfo}&quot;searchInfo2&quot;^{FSCatalogInfo}}'>
<field declared_type='Duration' name='searchTime' type='l' type64='i'/>
<field declared_type='OptionBits' name='searchBits' type='L' type64='I'/>
<field declared_type='UniCharCount' name='searchNameLength' type='L' type64='Q'/>
<field const='true' declared_type='UniChar*' name='searchName' type='^S'/>
<field declared_type='FSCatalogInfo*' name='searchInfo1' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<field declared_type='FSCatalogInfo*' name='searchInfo2' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
</struct>
<struct name='FSSpec' type='{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}' type64='{FSSpec=&quot;hidden&quot;[70C]}'>
<field declared_type='FSVolumeRefNum' declared_type64='UInt8*' name='hidden' type='s' type64='[70C]'/>
<field declared_type='SInt32' name='parID' type='l'/>
<field declared_type='StrFileName' name='name' type='[64C]'/>
</struct>
<struct name='FSVolumeInfo' type='{FSVolumeInfo=&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;modifyDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;checkedDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;fileCount&quot;I&quot;folderCount&quot;I&quot;totalBytes&quot;Q&quot;freeBytes&quot;Q&quot;blockSize&quot;I&quot;totalBlocks&quot;I&quot;freeBlocks&quot;I&quot;nextAllocation&quot;I&quot;rsrcClumpSize&quot;I&quot;dataClumpSize&quot;I&quot;nextCatalogID&quot;I&quot;finderInfo&quot;[32C]&quot;flags&quot;S&quot;filesystemID&quot;S&quot;signature&quot;S&quot;driveNumber&quot;S&quot;driverRefNum&quot;s}' type64='{FSVolumeInfo=&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;modifyDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;checkedDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;fileCount&quot;I&quot;folderCount&quot;I&quot;totalBytes&quot;Q&quot;freeBytes&quot;Q&quot;blockSize&quot;I&quot;totalBlocks&quot;I&quot;freeBlocks&quot;I&quot;nextAllocation&quot;I&quot;rsrcClumpSize&quot;I&quot;dataClumpSize&quot;I&quot;nextCatalogID&quot;I&quot;finderInfo&quot;[32C]&quot;flags&quot;S&quot;filesystemID&quot;S&quot;signature&quot;S&quot;driveNumber&quot;S&quot;driverRefNum&quot;i}'>
<field declared_type='UTCDateTime' name='createDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UTCDateTime' name='modifyDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UTCDateTime' name='backupDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UTCDateTime' name='checkedDate' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'/>
<field declared_type='UInt32' name='fileCount' type='L' type64='I'/>
<field declared_type='UInt32' name='folderCount' type='L' type64='I'/>
<field declared_type='UInt64' name='totalBytes' type='Q'/>
<field declared_type='UInt64' name='freeBytes' type='Q'/>
<field declared_type='UInt32' name='blockSize' type='L' type64='I'/>
<field declared_type='UInt32' name='totalBlocks' type='L' type64='I'/>
<field declared_type='UInt32' name='freeBlocks' type='L' type64='I'/>
<field declared_type='UInt32' name='nextAllocation' type='L' type64='I'/>
<field declared_type='UInt32' name='rsrcClumpSize' type='L' type64='I'/>
<field declared_type='UInt32' name='dataClumpSize' type='L' type64='I'/>
<field declared_type='UInt32' name='nextCatalogID' type='L' type64='I'/>
<field declared_type='UInt8*' name='finderInfo' type='[32C]'/>
<field declared_type='UInt16' name='flags' type='S'/>
<field declared_type='UInt16' name='filesystemID' type='S'/>
<field declared_type='UInt16' name='signature' type='S'/>
<field declared_type='UInt16' name='driveNumber' type='S'/>
<field declared_type='FSIORefNum' name='driverRefNum' type='s' type64='i'/>
</struct>
<struct name='FSVolumeInfoParam' type='{FSVolumeInfoParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;ioNamePtr&quot;*&quot;ioVRefNum&quot;s&quot;volumeIndex&quot;I&quot;whichInfo&quot;I&quot;volumeInfo&quot;^{FSVolumeInfo}&quot;volumeName&quot;^{HFSUniStr255}&quot;ref&quot;^{FSRef}}'>
<field declared_type='QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='SInt16' name='qType' type='s'/>
<field declared_type='SInt16' name='ioTrap' type='s'/>
<field declared_type='Ptr' name='ioCmdAddr' type='*'/>
<field declared_type='IOCompletionUPP' function_pointer='true' name='ioCompletion' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='volatile OSErr' name='ioResult' type='s'/>
<field declared_type='StringPtr' name='ioNamePtr' type='*'/>
<field declared_type='FSVolumeRefNum' name='ioVRefNum' type='s'/>
<field declared_type='UInt32' name='volumeIndex' type='L' type64='I'/>
<field declared_type='FSVolumeInfoBitmap' name='whichInfo' type='L' type64='I'/>
<field declared_type='FSVolumeInfo*' name='volumeInfo' type='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSs}' type64='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSi}'/>
<field declared_type='HFSUniStr255*' name='volumeName' type='^{HFSUniStr255=S[255S]}'/>
<field declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
</struct>
<struct name='FVector' type='{FVector=&quot;start&quot;s&quot;length&quot;s}'>
<field declared_type='short' name='start' type='s'/>
<field declared_type='short' name='length' type='s'/>
</struct>
<struct name='FXInfo' type='{FXInfo=&quot;fdIconID&quot;s&quot;fdReserved&quot;[3s]&quot;fdScript&quot;c&quot;fdXFlags&quot;c&quot;fdComment&quot;s&quot;fdPutAway&quot;i}'>
<field declared_type='SInt16' name='fdIconID' type='s'/>
<field declared_type='SInt16*' name='fdReserved' type='[3s]'/>
<field declared_type='SInt8' name='fdScript' type='c'/>
<field declared_type='SInt8' name='fdXFlags' type='c'/>
<field declared_type='SInt16' name='fdComment' type='s'/>
<field declared_type='SInt32' name='fdPutAway' type='l' type64='i'/>
</struct>
<struct name='FileInfo' type='{FileInfo=&quot;fileType&quot;I&quot;fileCreator&quot;I&quot;finderFlags&quot;S&quot;location&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;reservedField&quot;S}'>
<field declared_type='OSType' name='fileType' type='L' type64='I'/>
<field declared_type='OSType' name='fileCreator' type='L' type64='I'/>
<field declared_type='UInt16' name='finderFlags' type='S'/>
<field declared_type='Point' name='location' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type='UInt16' name='reservedField' type='S'/>
</struct>
<struct name='FolderDesc' type='{FolderDesc=&quot;descSize&quot;i&quot;foldType&quot;I&quot;flags&quot;I&quot;foldClass&quot;I&quot;foldLocation&quot;I&quot;badgeSignature&quot;I&quot;badgeType&quot;I&quot;reserved&quot;I&quot;name&quot;[64C]}' type64='{FolderDesc=&quot;descSize&quot;q&quot;foldType&quot;I&quot;flags&quot;I&quot;foldClass&quot;I&quot;foldLocation&quot;I&quot;badgeSignature&quot;I&quot;badgeType&quot;I&quot;reserved&quot;I&quot;name&quot;[64C]}'>
<field declared_type='Size' name='descSize' type='l' type64='q'/>
<field declared_type='FolderType' name='foldType' type='L' type64='I'/>
<field declared_type='FolderDescFlags' name='flags' type='L' type64='I'/>
<field declared_type='FolderClass' name='foldClass' type='L' type64='I'/>
<field declared_type='FolderType' name='foldLocation' type='L' type64='I'/>
<field declared_type='OSType' name='badgeSignature' type='L' type64='I'/>
<field declared_type='OSType' name='badgeType' type='L' type64='I'/>
<field declared_type='UInt32' name='reserved' type='L' type64='I'/>
<field declared_type='StrFileName' name='name' type='[64C]'/>
</struct>
<struct name='FolderInfo' type='{FolderInfo=&quot;windowBounds&quot;{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}&quot;finderFlags&quot;S&quot;location&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;reservedField&quot;S}'>
<field declared_type='Rect' name='windowBounds' type='{Rect=&quot;top&quot;s&quot;left&quot;s&quot;bottom&quot;s&quot;right&quot;s}'/>
<field declared_type='UInt16' name='finderFlags' type='S'/>
<field declared_type='Point' name='location' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type='UInt16' name='reservedField' type='S'/>
</struct>
<struct name='FolderRouting' type='{FolderRouting=&quot;descSize&quot;i&quot;fileType&quot;I&quot;routeFromFolder&quot;I&quot;routeToFolder&quot;I&quot;flags&quot;I}' type64='{FolderRouting=&quot;descSize&quot;q&quot;fileType&quot;I&quot;routeFromFolder&quot;I&quot;routeToFolder&quot;I&quot;flags&quot;I}'>
<field declared_type='Size' name='descSize' type='l' type64='q'/>
<field declared_type='OSType' name='fileType' type='L' type64='I'/>
<field declared_type='FolderType' name='routeFromFolder' type='L' type64='I'/>
<field declared_type='FolderType' name='routeToFolder' type='L' type64='I'/>
<field declared_type='RoutingFlags' name='flags' type='L' type64='I'/>
</struct>
<struct name='FormatVersionChunk' type='{FormatVersionChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;timestamp&quot;I}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='UInt32' name='timestamp' type='L' type64='I'/>
</struct>
<struct name='GetVolParmsInfoBuffer' type='{GetVolParmsInfoBuffer=&quot;vMVersion&quot;s&quot;vMAttrib&quot;i&quot;vMLocalHand&quot;^*&quot;vMServerAdr&quot;i&quot;vMVolumeGrade&quot;i&quot;vMForeignPrivID&quot;s&quot;vMExtendedAttributes&quot;i&quot;vMDeviceID&quot;^v&quot;vMMaxNameLength&quot;I}' type64='{GetVolParmsInfoBuffer=&quot;vMVersion&quot;s&quot;vMAttrib&quot;i&quot;vMLocalHand&quot;^*&quot;vMServerAdr&quot;i&quot;vMVolumeGrade&quot;i&quot;vMForeignPrivID&quot;s&quot;vMExtendedAttributes&quot;i&quot;vMDeviceID&quot;^v&quot;vMMaxNameLength&quot;Q}'>
<field declared_type='SInt16' name='vMVersion' type='s'/>
<field declared_type='SInt32' name='vMAttrib' type='l' type64='i'/>
<field declared_type='Handle' name='vMLocalHand' type='^*'/>
<field declared_type='SInt32' name='vMServerAdr' type='l' type64='i'/>
<field declared_type='SInt32' name='vMVolumeGrade' type='l' type64='i'/>
<field declared_type='SInt16' name='vMForeignPrivID' type='s'/>
<field declared_type='SInt32' name='vMExtendedAttributes' type='l' type64='i'/>
<field declared_type='void*' name='vMDeviceID' type='^v'/>
<field declared_type='UniCharCount' name='vMMaxNameLength' type='L' type64='Q'/>
</struct>
<struct name='InstrumentChunk' type='{InstrumentChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;baseFrequency&quot;C&quot;detune&quot;C&quot;lowFrequency&quot;C&quot;highFrequency&quot;C&quot;lowVelocity&quot;C&quot;highVelocity&quot;C&quot;gain&quot;s&quot;sustainLoop&quot;{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}&quot;releaseLoop&quot;{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='UInt8' name='baseFrequency' type='C'/>
<field declared_type='UInt8' name='detune' type='C'/>
<field declared_type='UInt8' name='lowFrequency' type='C'/>
<field declared_type='UInt8' name='highFrequency' type='C'/>
<field declared_type='UInt8' name='lowVelocity' type='C'/>
<field declared_type='UInt8' name='highVelocity' type='C'/>
<field declared_type='SInt16' name='gain' type='s'/>
<field declared_type='AIFFLoop' name='sustainLoop' type='{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}'/>
<field declared_type='AIFFLoop' name='releaseLoop' type='{AIFFLoop=&quot;playMode&quot;s&quot;beginLoop&quot;s&quot;endLoop&quot;s}'/>
</struct>
<struct name='Intl0Rec' type='{Intl0Rec=&quot;decimalPt&quot;c&quot;thousSep&quot;c&quot;listSep&quot;c&quot;currSym1&quot;c&quot;currSym2&quot;c&quot;currSym3&quot;c&quot;currFmt&quot;C&quot;dateOrder&quot;C&quot;shrtDateFmt&quot;C&quot;dateSep&quot;c&quot;timeCycle&quot;C&quot;timeFmt&quot;C&quot;mornStr&quot;[4c]&quot;eveStr&quot;[4c]&quot;timeSep&quot;c&quot;time1Suff&quot;c&quot;time2Suff&quot;c&quot;time3Suff&quot;c&quot;time4Suff&quot;c&quot;time5Suff&quot;c&quot;time6Suff&quot;c&quot;time7Suff&quot;c&quot;time8Suff&quot;c&quot;metricSys&quot;C&quot;intl0Vers&quot;s}'>
<field declared_type='char' name='decimalPt' type='c'/>
<field declared_type='char' name='thousSep' type='c'/>
<field declared_type='char' name='listSep' type='c'/>
<field declared_type='char' name='currSym1' type='c'/>
<field declared_type='char' name='currSym2' type='c'/>
<field declared_type='char' name='currSym3' type='c'/>
<field declared_type='UInt8' name='currFmt' type='C'/>
<field declared_type='UInt8' name='dateOrder' type='C'/>
<field declared_type='UInt8' name='shrtDateFmt' type='C'/>
<field declared_type='char' name='dateSep' type='c'/>
<field declared_type='UInt8' name='timeCycle' type='C'/>
<field declared_type='UInt8' name='timeFmt' type='C'/>
<field declared_type='char*' name='mornStr' type='[4c]'/>
<field declared_type='char*' name='eveStr' type='[4c]'/>
<field declared_type='char' name='timeSep' type='c'/>
<field declared_type='char' name='time1Suff' type='c'/>
<field declared_type='char' name='time2Suff' type='c'/>
<field declared_type='char' name='time3Suff' type='c'/>
<field declared_type='char' name='time4Suff' type='c'/>
<field declared_type='char' name='time5Suff' type='c'/>
<field declared_type='char' name='time6Suff' type='c'/>
<field declared_type='char' name='time7Suff' type='c'/>
<field declared_type='char' name='time8Suff' type='c'/>
<field declared_type='UInt8' name='metricSys' type='C'/>
<field declared_type='short' name='intl0Vers' type='s'/>
</struct>
<struct name='Intl1Rec' type='{Intl1Rec=&quot;days&quot;[7[16C]]&quot;months&quot;[12[16C]]&quot;suppressDay&quot;C&quot;lngDateFmt&quot;C&quot;dayLeading0&quot;C&quot;abbrLen&quot;C&quot;st0&quot;[4c]&quot;st1&quot;[4c]&quot;st2&quot;[4c]&quot;st3&quot;[4c]&quot;st4&quot;[4c]&quot;intl1Vers&quot;s&quot;localRtn&quot;[1s]}'>
<field declared_type='Str15*' name='days' type='[7[16C]]'/>
<field declared_type='Str15*' name='months' type='[12[16C]]'/>
<field declared_type='UInt8' name='suppressDay' type='C'/>
<field declared_type='UInt8' name='lngDateFmt' type='C'/>
<field declared_type='UInt8' name='dayLeading0' type='C'/>
<field declared_type='UInt8' name='abbrLen' type='C'/>
<field declared_type='char*' name='st0' type='[4c]'/>
<field declared_type='char*' name='st1' type='[4c]'/>
<field declared_type='char*' name='st2' type='[4c]'/>
<field declared_type='char*' name='st3' type='[4c]'/>
<field declared_type='char*' name='st4' type='[4c]'/>
<field declared_type='short' name='intl1Vers' type='s'/>
<field declared_type='short*' name='localRtn' type='[1s]'/>
</struct>
<struct name='Itl1ExtRec' type='{Itl1ExtRec=&quot;base&quot;{Intl1Rec=&quot;days&quot;[7[16C]]&quot;months&quot;[12[16C]]&quot;suppressDay&quot;C&quot;lngDateFmt&quot;C&quot;dayLeading0&quot;C&quot;abbrLen&quot;C&quot;st0&quot;[4c]&quot;st1&quot;[4c]&quot;st2&quot;[4c]&quot;st3&quot;[4c]&quot;st4&quot;[4c]&quot;intl1Vers&quot;s&quot;localRtn&quot;[1s]}&quot;version&quot;s&quot;format&quot;s&quot;calendarCode&quot;s&quot;extraDaysTableOffset&quot;i&quot;extraDaysTableLength&quot;i&quot;extraMonthsTableOffset&quot;i&quot;extraMonthsTableLength&quot;i&quot;abbrevDaysTableOffset&quot;i&quot;abbrevDaysTableLength&quot;i&quot;abbrevMonthsTableOffset&quot;i&quot;abbrevMonthsTableLength&quot;i&quot;extraSepsTableOffset&quot;i&quot;extraSepsTableLength&quot;i&quot;tables&quot;[1s]}'>
<field declared_type='Intl1Rec' name='base' type='{Intl1Rec=&quot;days&quot;[7[16C]]&quot;months&quot;[12[16C]]&quot;suppressDay&quot;C&quot;lngDateFmt&quot;C&quot;dayLeading0&quot;C&quot;abbrLen&quot;C&quot;st0&quot;[4c]&quot;st1&quot;[4c]&quot;st2&quot;[4c]&quot;st3&quot;[4c]&quot;st4&quot;[4c]&quot;intl1Vers&quot;s&quot;localRtn&quot;[1s]}'/>
<field declared_type='short' name='version' type='s'/>
<field declared_type='short' name='format' type='s'/>
<field declared_type='short' name='calendarCode' type='s'/>
<field declared_type='SInt32' name='extraDaysTableOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='extraDaysTableLength' type='l' type64='i'/>
<field declared_type='SInt32' name='extraMonthsTableOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='extraMonthsTableLength' type='l' type64='i'/>
<field declared_type='SInt32' name='abbrevDaysTableOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='abbrevDaysTableLength' type='l' type64='i'/>
<field declared_type='SInt32' name='abbrevMonthsTableOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='abbrevMonthsTableLength' type='l' type64='i'/>
<field declared_type='SInt32' name='extraSepsTableOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='extraSepsTableLength' type='l' type64='i'/>
<field declared_type='short*' name='tables' type='[1s]'/>
</struct>
<struct name='Itl4Rec' type='{Itl4Rec=&quot;flags&quot;s&quot;resourceType&quot;i&quot;resourceNum&quot;s&quot;version&quot;s&quot;resHeader1&quot;i&quot;resHeader2&quot;i&quot;numTables&quot;s&quot;mapOffset&quot;i&quot;strOffset&quot;i&quot;fetchOffset&quot;i&quot;unTokenOffset&quot;i&quot;defPartsOffset&quot;i&quot;resOffset6&quot;i&quot;resOffset7&quot;i&quot;resOffset8&quot;i}'>
<field declared_type='short' name='flags' type='s'/>
<field declared_type='SInt32' name='resourceType' type='l' type64='i'/>
<field declared_type='short' name='resourceNum' type='s'/>
<field declared_type='short' name='version' type='s'/>
<field declared_type='SInt32' name='resHeader1' type='l' type64='i'/>
<field declared_type='SInt32' name='resHeader2' type='l' type64='i'/>
<field declared_type='short' name='numTables' type='s'/>
<field declared_type='SInt32' name='mapOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='strOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='fetchOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='unTokenOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='defPartsOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='resOffset6' type='l' type64='i'/>
<field declared_type='SInt32' name='resOffset7' type='l' type64='i'/>
<field declared_type='SInt32' name='resOffset8' type='l' type64='i'/>
</struct>
<struct name='Itl5Record' type='{Itl5Record=&quot;versionNumber&quot;i&quot;numberOfTables&quot;S&quot;reserved&quot;[3S]&quot;tableDirectory&quot;[1{TableDirectoryRecord=&quot;tableSignature&quot;I&quot;reserved&quot;I&quot;tableStartOffset&quot;I&quot;tableSize&quot;I}]}'>
<field declared_type='Fixed' name='versionNumber' type='l' type64='i'/>
<field declared_type='unsigned short' name='numberOfTables' type='S'/>
<field declared_type='unsigned short*' name='reserved' type='[3S]'/>
<field declared_type='TableDirectoryRecord*' name='tableDirectory' type='[1{TableDirectoryRecord=&quot;tableSignature&quot;I&quot;reserved&quot;I&quot;tableStartOffset&quot;I&quot;tableSize&quot;I}]'/>
</struct>
<struct name='ItlbExtRecord' type='{ItlbExtRecord=&quot;base&quot;{ItlbRecord=&quot;itlbNumber&quot;s&quot;itlbDate&quot;s&quot;itlbSort&quot;s&quot;itlbFlags&quot;s&quot;itlbToken&quot;s&quot;itlbEncoding&quot;s&quot;itlbLang&quot;s&quot;itlbNumRep&quot;c&quot;itlbDateRep&quot;c&quot;itlbKeys&quot;s&quot;itlbIcon&quot;s}&quot;itlbLocalSize&quot;i&quot;itlbMonoFond&quot;s&quot;itlbMonoSize&quot;s&quot;itlbPrefFond&quot;s&quot;itlbPrefSize&quot;s&quot;itlbSmallFond&quot;s&quot;itlbSmallSize&quot;s&quot;itlbSysFond&quot;s&quot;itlbSysSize&quot;s&quot;itlbAppFond&quot;s&quot;itlbAppSize&quot;s&quot;itlbHelpFond&quot;s&quot;itlbHelpSize&quot;s&quot;itlbValidStyles&quot;C&quot;itlbAliasStyle&quot;C}'>
<field declared_type='ItlbRecord' name='base' type='{ItlbRecord=&quot;itlbNumber&quot;s&quot;itlbDate&quot;s&quot;itlbSort&quot;s&quot;itlbFlags&quot;s&quot;itlbToken&quot;s&quot;itlbEncoding&quot;s&quot;itlbLang&quot;s&quot;itlbNumRep&quot;c&quot;itlbDateRep&quot;c&quot;itlbKeys&quot;s&quot;itlbIcon&quot;s}'/>
<field declared_type='SInt32' name='itlbLocalSize' type='l' type64='i'/>
<field declared_type='short' name='itlbMonoFond' type='s'/>
<field declared_type='short' name='itlbMonoSize' type='s'/>
<field declared_type='short' name='itlbPrefFond' type='s'/>
<field declared_type='short' name='itlbPrefSize' type='s'/>
<field declared_type='short' name='itlbSmallFond' type='s'/>
<field declared_type='short' name='itlbSmallSize' type='s'/>
<field declared_type='short' name='itlbSysFond' type='s'/>
<field declared_type='short' name='itlbSysSize' type='s'/>
<field declared_type='short' name='itlbAppFond' type='s'/>
<field declared_type='short' name='itlbAppSize' type='s'/>
<field declared_type='short' name='itlbHelpFond' type='s'/>
<field declared_type='short' name='itlbHelpSize' type='s'/>
<field declared_type='Style' name='itlbValidStyles' type='C'/>
<field declared_type='Style' name='itlbAliasStyle' type='C'/>
</struct>
<struct name='ItlbRecord' type='{ItlbRecord=&quot;itlbNumber&quot;s&quot;itlbDate&quot;s&quot;itlbSort&quot;s&quot;itlbFlags&quot;s&quot;itlbToken&quot;s&quot;itlbEncoding&quot;s&quot;itlbLang&quot;s&quot;itlbNumRep&quot;c&quot;itlbDateRep&quot;c&quot;itlbKeys&quot;s&quot;itlbIcon&quot;s}'>
<field declared_type='short' name='itlbNumber' type='s'/>
<field declared_type='short' name='itlbDate' type='s'/>
<field declared_type='short' name='itlbSort' type='s'/>
<field declared_type='short' name='itlbFlags' type='s'/>
<field declared_type='short' name='itlbToken' type='s'/>
<field declared_type='short' name='itlbEncoding' type='s'/>
<field declared_type='short' name='itlbLang' type='s'/>
<field declared_type='SInt8' name='itlbNumRep' type='c'/>
<field declared_type='SInt8' name='itlbDateRep' type='c'/>
<field declared_type='short' name='itlbKeys' type='s'/>
<field declared_type='short' name='itlbIcon' type='s'/>
</struct>
<struct name='ItlcRecord' type='{ItlcRecord=&quot;itlcSystem&quot;s&quot;itlcReserved&quot;s&quot;itlcFontForce&quot;c&quot;itlcIntlForce&quot;c&quot;itlcOldKybd&quot;c&quot;itlcFlags&quot;c&quot;itlcIconOffset&quot;s&quot;itlcIconSide&quot;c&quot;itlcIconRsvd&quot;c&quot;itlcRegionCode&quot;s&quot;itlcSysFlags&quot;s&quot;itlcReserved4&quot;[32c]}'>
<field declared_type='short' name='itlcSystem' type='s'/>
<field declared_type='short' name='itlcReserved' type='s'/>
<field declared_type='SInt8' name='itlcFontForce' type='c'/>
<field declared_type='SInt8' name='itlcIntlForce' type='c'/>
<field declared_type='SInt8' name='itlcOldKybd' type='c'/>
<field declared_type='SInt8' name='itlcFlags' type='c'/>
<field declared_type='short' name='itlcIconOffset' type='s'/>
<field declared_type='SInt8' name='itlcIconSide' type='c'/>
<field declared_type='SInt8' name='itlcIconRsvd' type='c'/>
<field declared_type='short' name='itlcRegionCode' type='s'/>
<field declared_type='short' name='itlcSysFlags' type='s'/>
<field declared_type='SInt8*' name='itlcReserved4' type='[32c]'/>
</struct>
<struct name='LocalDateTime' type='{LocalDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'>
<field declared_type='UInt16' name='highSeconds' type='S'/>
<field declared_type='UInt32' name='lowSeconds' type='L' type64='I'/>
<field declared_type='UInt16' name='fraction' type='S'/>
</struct>
<struct name='LocaleAndVariant' type='{LocaleAndVariant=&quot;locale&quot;^{OpaqueLocaleRef}&quot;opVariant&quot;I}'>
<field declared_type='LocaleRef' name='locale' type='^{OpaqueLocaleRef=}'/>
<field declared_type='LocaleOperationVariant' name='opVariant' type='L' type64='I'/>
</struct>
<struct name='MIDIDataChunk' type='{MIDIDataChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;MIDIdata&quot;[1C]}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='UInt8*' name='MIDIdata' type='[1C]'/>
</struct>
<struct name='MPAddressSpaceInfo' type='{MPAddressSpaceInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;groupID&quot;^{OpaqueMPCoherenceID}&quot;nTasks&quot;I&quot;vsid&quot;[16L]}' type64='{MPAddressSpaceInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;groupID&quot;^{OpaqueMPCoherenceID}&quot;nTasks&quot;Q&quot;vsid&quot;[16I]}'>
<field declared_type='PBVersion' name='version' type='L' type64='I'/>
<field declared_type='MPProcessID' name='processID' type='^{OpaqueMPProcessID=}'/>
<field declared_type='MPCoherenceID' name='groupID' type='^{OpaqueMPCoherenceID=}'/>
<field declared_type='ItemCount' name='nTasks' type='L' type64='Q'/>
<field declared_type='UInt32*' name='vsid' type='[16L]' type64='[16I]'/>
</struct>
<struct name='MPCriticalRegionInfo' type='{MPCriticalRegionInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;regionName&quot;I&quot;nWaiting&quot;I&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;owningTask&quot;^{OpaqueMPTaskID}&quot;count&quot;I}' type64='{MPCriticalRegionInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;regionName&quot;I&quot;nWaiting&quot;Q&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;owningTask&quot;^{OpaqueMPTaskID}&quot;count&quot;Q}'>
<field declared_type='PBVersion' name='version' type='L' type64='I'/>
<field declared_type='MPProcessID' name='processID' type='^{OpaqueMPProcessID=}'/>
<field declared_type='OSType' name='regionName' type='L' type64='I'/>
<field declared_type='ItemCount' name='nWaiting' type='L' type64='Q'/>
<field declared_type='MPTaskID' name='waitingTaskID' type='^{OpaqueMPTaskID=}'/>
<field declared_type='MPTaskID' name='owningTask' type='^{OpaqueMPTaskID=}'/>
<field declared_type='ItemCount' name='count' type='L' type64='Q'/>
</struct>
<struct name='MPEventInfo' type='{MPEventInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;eventName&quot;I&quot;nWaiting&quot;I&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;events&quot;I}' type64='{MPEventInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;eventName&quot;I&quot;nWaiting&quot;Q&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;events&quot;I}'>
<field declared_type='PBVersion' name='version' type='L' type64='I'/>
<field declared_type='MPProcessID' name='processID' type='^{OpaqueMPProcessID=}'/>
<field declared_type='OSType' name='eventName' type='L' type64='I'/>
<field declared_type='ItemCount' name='nWaiting' type='L' type64='Q'/>
<field declared_type='MPTaskID' name='waitingTaskID' type='^{OpaqueMPTaskID=}'/>
<field declared_type='MPEventFlags' name='events' type='L' type64='I'/>
</struct>
<struct name='MPNotificationInfo' type='{MPNotificationInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;notificationName&quot;I&quot;queueID&quot;^{OpaqueMPQueueID}&quot;p1&quot;^v&quot;p2&quot;^v&quot;p3&quot;^v&quot;eventID&quot;^{OpaqueMPEventID}&quot;events&quot;I&quot;semaphoreID&quot;^{OpaqueMPSemaphoreID}}'>
<field declared_type='PBVersion' name='version' type='L' type64='I'/>
<field declared_type='MPProcessID' name='processID' type='^{OpaqueMPProcessID=}'/>
<field declared_type='OSType' name='notificationName' type='L' type64='I'/>
<field declared_type='MPQueueID' name='queueID' type='^{OpaqueMPQueueID=}'/>
<field declared_type='void*' name='p1' type='^v'/>
<field declared_type='void*' name='p2' type='^v'/>
<field declared_type='void*' name='p3' type='^v'/>
<field declared_type='MPEventID' name='eventID' type='^{OpaqueMPEventID=}'/>
<field declared_type='MPEventFlags' name='events' type='L' type64='I'/>
<field declared_type='MPSemaphoreID' name='semaphoreID' type='^{OpaqueMPSemaphoreID=}'/>
</struct>
<struct name='MPQueueInfo' type='{MPQueueInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;queueName&quot;I&quot;nWaiting&quot;I&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;nMessages&quot;I&quot;nReserved&quot;I&quot;p1&quot;^v&quot;p2&quot;^v&quot;p3&quot;^v}' type64='{MPQueueInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;queueName&quot;I&quot;nWaiting&quot;Q&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;nMessages&quot;Q&quot;nReserved&quot;Q&quot;p1&quot;^v&quot;p2&quot;^v&quot;p3&quot;^v}'>
<field declared_type='PBVersion' name='version' type='L' type64='I'/>
<field declared_type='MPProcessID' name='processID' type='^{OpaqueMPProcessID=}'/>
<field declared_type='OSType' name='queueName' type='L' type64='I'/>
<field declared_type='ItemCount' name='nWaiting' type='L' type64='Q'/>
<field declared_type='MPTaskID' name='waitingTaskID' type='^{OpaqueMPTaskID=}'/>
<field declared_type='ItemCount' name='nMessages' type='L' type64='Q'/>
<field declared_type='ItemCount' name='nReserved' type='L' type64='Q'/>
<field declared_type='void*' name='p1' type='^v'/>
<field declared_type='void*' name='p2' type='^v'/>
<field declared_type='void*' name='p3' type='^v'/>
</struct>
<struct name='MPSemaphoreInfo' type='{MPSemaphoreInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;semaphoreName&quot;I&quot;nWaiting&quot;I&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;maximum&quot;I&quot;count&quot;I}' type64='{MPSemaphoreInfo=&quot;version&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;semaphoreName&quot;I&quot;nWaiting&quot;Q&quot;waitingTaskID&quot;^{OpaqueMPTaskID}&quot;maximum&quot;Q&quot;count&quot;Q}'>
<field declared_type='PBVersion' name='version' type='L' type64='I'/>
<field declared_type='MPProcessID' name='processID' type='^{OpaqueMPProcessID=}'/>
<field declared_type='OSType' name='semaphoreName' type='L' type64='I'/>
<field declared_type='ItemCount' name='nWaiting' type='L' type64='Q'/>
<field declared_type='MPTaskID' name='waitingTaskID' type='^{OpaqueMPTaskID=}'/>
<field declared_type='ItemCount' name='maximum' type='L' type64='Q'/>
<field declared_type='ItemCount' name='count' type='L' type64='Q'/>
</struct>
<struct name='MPTaskInfo' type='{MPTaskInfo=&quot;version&quot;I&quot;name&quot;I&quot;queueName&quot;I&quot;runState&quot;S&quot;lastCPU&quot;S&quot;weight&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;cpuTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;schedTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;creationTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;codePageFaults&quot;I&quot;dataPageFaults&quot;I&quot;preemptions&quot;I&quot;cpuID&quot;^{OpaqueMPCpuID}&quot;blockedObject&quot;^{OpaqueMPOpaqueID}&quot;spaceID&quot;^{OpaqueMPAddressSpaceID}&quot;stackBase&quot;^v&quot;stackLimit&quot;^v&quot;stackCurr&quot;^v}' type64='{MPTaskInfo=&quot;version&quot;I&quot;name&quot;I&quot;queueName&quot;I&quot;runState&quot;S&quot;lastCPU&quot;S&quot;weight&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;cpuTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;schedTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;creationTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;codePageFaults&quot;Q&quot;dataPageFaults&quot;Q&quot;preemptions&quot;Q&quot;cpuID&quot;^{OpaqueMPCpuID}&quot;blockedObject&quot;^{OpaqueMPOpaqueID}&quot;spaceID&quot;^{OpaqueMPAddressSpaceID}&quot;stackBase&quot;^v&quot;stackLimit&quot;^v&quot;stackCurr&quot;^v}'>
<field declared_type='PBVersion' name='version' type='L' type64='I'/>
<field declared_type='OSType' name='name' type='L' type64='I'/>
<field declared_type='OSType' name='queueName' type='L' type64='I'/>
<field declared_type='UInt16' name='runState' type='S'/>
<field declared_type='UInt16' name='lastCPU' type='S'/>
<field declared_type='UInt32' name='weight' type='L' type64='I'/>
<field declared_type='MPProcessID' name='processID' type='^{OpaqueMPProcessID=}'/>
<field declared_type='AbsoluteTime' name='cpuTime' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='AbsoluteTime' name='schedTime' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='AbsoluteTime' name='creationTime' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='ItemCount' name='codePageFaults' type='L' type64='Q'/>
<field declared_type='ItemCount' name='dataPageFaults' type='L' type64='Q'/>
<field declared_type='ItemCount' name='preemptions' type='L' type64='Q'/>
<field declared_type='MPCpuID' name='cpuID' type='^{OpaqueMPCpuID=}'/>
<field declared_type='MPOpaqueID' name='blockedObject' type='^{OpaqueMPOpaqueID=}'/>
<field declared_type='MPAddressSpaceID' name='spaceID' type='^{OpaqueMPAddressSpaceID=}'/>
<field declared_type='LogicalAddress' name='stackBase' type='^v'/>
<field declared_type='LogicalAddress' name='stackLimit' type='^v'/>
<field declared_type='LogicalAddress' name='stackCurr' type='^v'/>
</struct>
<struct name='MPTaskInfoVersion2' type='{MPTaskInfoVersion2=&quot;version&quot;I&quot;name&quot;I&quot;queueName&quot;I&quot;runState&quot;S&quot;lastCPU&quot;S&quot;weight&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;cpuTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;schedTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;creationTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;codePageFaults&quot;I&quot;dataPageFaults&quot;I&quot;preemptions&quot;I&quot;cpuID&quot;^{OpaqueMPCpuID}}' type64='{MPTaskInfoVersion2=&quot;version&quot;I&quot;name&quot;I&quot;queueName&quot;I&quot;runState&quot;S&quot;lastCPU&quot;S&quot;weight&quot;I&quot;processID&quot;^{OpaqueMPProcessID}&quot;cpuTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;schedTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;creationTime&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;codePageFaults&quot;Q&quot;dataPageFaults&quot;Q&quot;preemptions&quot;Q&quot;cpuID&quot;^{OpaqueMPCpuID}}'>
<field declared_type='PBVersion' name='version' type='L' type64='I'/>
<field declared_type='OSType' name='name' type='L' type64='I'/>
<field declared_type='OSType' name='queueName' type='L' type64='I'/>
<field declared_type='UInt16' name='runState' type='S'/>
<field declared_type='UInt16' name='lastCPU' type='S'/>
<field declared_type='UInt32' name='weight' type='L' type64='I'/>
<field declared_type='MPProcessID' name='processID' type='^{OpaqueMPProcessID=}'/>
<field declared_type='AbsoluteTime' name='cpuTime' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='AbsoluteTime' name='schedTime' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='AbsoluteTime' name='creationTime' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='ItemCount' name='codePageFaults' type='L' type64='Q'/>
<field declared_type='ItemCount' name='dataPageFaults' type='L' type64='Q'/>
<field declared_type='ItemCount' name='preemptions' type='L' type64='Q'/>
<field declared_type='MPCpuID' name='cpuID' type='^{OpaqueMPCpuID=}'/>
</struct>
<struct name='MachineInformation' type='{MachineInformationIntel=&quot;CS&quot;L&quot;DS&quot;L&quot;SS&quot;L&quot;ES&quot;L&quot;FS&quot;L&quot;GS&quot;L&quot;EFLAGS&quot;L&quot;EIP&quot;L&quot;ExceptTrap&quot;L&quot;ExceptErr&quot;L&quot;ExceptAddr&quot;L}' type64='{MachineInformationIntel64=&quot;CS&quot;Q&quot;FS&quot;Q&quot;GS&quot;Q&quot;RFLAGS&quot;Q&quot;RIP&quot;Q&quot;ExceptTrap&quot;Q&quot;ExceptErr&quot;Q&quot;ExceptAddr&quot;Q}'>
<field declared_type='unsigned long' name='CS' type='L' type64='Q'/>
<field declared_type='unsigned long' name='FS' type='L' type64='Q'/>
<field declared_type='unsigned long' name='GS' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RFLAGS' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RIP' type='L' type64='Q'/>
<field declared_type='unsigned long' name='ExceptTrap' type='L' type64='Q'/>
<field declared_type='unsigned long' name='ExceptErr' type='L' type64='Q'/>
<field declared_type='unsigned long' name='ExceptAddr' type='L' type64='Q'/>
<field declared_type='unsigned long' name='ExceptTrap' type='L'/>
<field declared_type='unsigned long' name='ExceptErr' type='L'/>
<field declared_type='unsigned long' name='ExceptAddr' type='L'/>
</struct>
<struct name='MachineInformationIntel64' type64='{MachineInformationIntel64=&quot;CS&quot;Q&quot;FS&quot;Q&quot;GS&quot;Q&quot;RFLAGS&quot;Q&quot;RIP&quot;Q&quot;ExceptTrap&quot;Q&quot;ExceptErr&quot;Q&quot;ExceptAddr&quot;Q}'>
<field declared_type64='unsigned long' name='CS' type64='Q'/>
<field declared_type64='unsigned long' name='FS' type64='Q'/>
<field declared_type64='unsigned long' name='GS' type64='Q'/>
<field declared_type64='unsigned long' name='RFLAGS' type64='Q'/>
<field declared_type64='unsigned long' name='RIP' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptTrap' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptErr' type64='Q'/>
<field declared_type64='unsigned long' name='ExceptAddr' type64='Q'/>
</struct>
<struct name='MachineInformationPowerPC' type='{MachineInformationPowerPC=&quot;CTR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;LR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;PC&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;CRRegister&quot;L&quot;XER&quot;L&quot;MSR&quot;L&quot;MQ&quot;L&quot;ExceptKind&quot;L&quot;DSISR&quot;L&quot;DAR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;Reserved&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}}' type64='{MachineInformationPowerPC=&quot;CTR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;LR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;PC&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;CRRegister&quot;Q&quot;XER&quot;Q&quot;MSR&quot;Q&quot;MQ&quot;Q&quot;ExceptKind&quot;Q&quot;DSISR&quot;Q&quot;DAR&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;Reserved&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}}'>
<field declared_type='UnsignedWide' name='CTR' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='LR' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='PC' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='unsigned long' name='CRRegister' type='L' type64='Q'/>
<field declared_type='unsigned long' name='XER' type='L' type64='Q'/>
<field declared_type='unsigned long' name='MSR' type='L' type64='Q'/>
<field declared_type='unsigned long' name='MQ' type='L' type64='Q'/>
<field declared_type='unsigned long' name='ExceptKind' type='L' type64='Q'/>
<field declared_type='unsigned long' name='DSISR' type='L' type64='Q'/>
<field declared_type='UnsignedWide' name='DAR' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='Reserved' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
</struct>
<struct name='MachineLocation' type='{MachineLocation=&quot;latitude&quot;i&quot;longitude&quot;i&quot;u&quot;(?=&quot;gmtDelta&quot;l&quot;dls&quot;{?=&quot;pad&quot;[3c]&quot;Delta&quot;c})}' type64='{MachineLocation=&quot;latitude&quot;i&quot;longitude&quot;i&quot;u&quot;(?=&quot;gmtDelta&quot;q&quot;dls&quot;{?=&quot;pad&quot;[3c]&quot;Delta&quot;c})}'>
<field declared_type='Fract' name='latitude' type='l' type64='i'/>
<field declared_type='Fract' name='longitude' type='l' type64='i'/>
<field declared_type='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/OSUtils.h:113:5)' name='u' type='(?=&quot;gmtDelta&quot;l&quot;dls&quot;{?=&quot;pad&quot;[3c]&quot;Delta&quot;c})' type64='(?=&quot;gmtDelta&quot;q&quot;dls&quot;{?=&quot;pad&quot;[3c]&quot;Delta&quot;c})'/>
</struct>
<struct name='Marker' type='{Marker=&quot;id&quot;s&quot;position&quot;I&quot;markerName&quot;[256C]}'>
<field declared_type='MarkerIdType' name='id' type='s'/>
<field declared_type='UInt32' name='position' type='L' type64='I'/>
<field declared_type='Str255' name='markerName' type='[256C]'/>
</struct>
<struct name='MarkerChunk' type='{MarkerChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;numMarkers&quot;S&quot;Markers&quot;[1{Marker=&quot;id&quot;s&quot;position&quot;I&quot;markerName&quot;[256C]}]}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='UInt16' name='numMarkers' type='S'/>
<field declared_type='Marker*' name='Markers' type='[1{Marker=&quot;id&quot;s&quot;position&quot;I&quot;markerName&quot;[256C]}]'/>
</struct>
<struct name='MemoryExceptionInformation' type='{MemoryExceptionInformation=&quot;theArea&quot;^{OpaqueAreaID}&quot;theAddress&quot;^v&quot;theError&quot;i&quot;theReference&quot;I}' type64='{MemoryExceptionInformation=&quot;theArea&quot;^{OpaqueAreaID}&quot;theAddress&quot;^v&quot;theError&quot;i&quot;theReference&quot;Q}'>
<field declared_type='AreaID' name='theArea' type='^{OpaqueAreaID=}'/>
<field declared_type='LogicalAddress' name='theAddress' type='^v'/>
<field declared_type='OSStatus' name='theError' type='l' type64='i'/>
<field declared_type='MemoryReferenceKind' name='theReference' type='L' type64='Q'/>
</struct>
<struct name='MixedModeStateRecord' type='{MixedModeStateRecord=&quot;state1&quot;I&quot;state2&quot;I&quot;state3&quot;I&quot;state4&quot;I}'>
<field declared_type='UInt32' name='state1' type='L' type64='I'/>
<field declared_type='UInt32' name='state2' type='L' type64='I'/>
<field declared_type='UInt32' name='state3' type='L' type64='I'/>
<field declared_type='UInt32' name='state4' type='L' type64='I'/>
</struct>
<struct name='NItl4Rec' type='{NItl4Rec=&quot;flags&quot;s&quot;resourceType&quot;i&quot;resourceNum&quot;s&quot;version&quot;s&quot;format&quot;s&quot;resHeader&quot;s&quot;resHeader2&quot;i&quot;numTables&quot;s&quot;mapOffset&quot;i&quot;strOffset&quot;i&quot;fetchOffset&quot;i&quot;unTokenOffset&quot;i&quot;defPartsOffset&quot;i&quot;whtSpListOffset&quot;i&quot;resOffset7&quot;i&quot;resOffset8&quot;i&quot;resLength1&quot;s&quot;resLength2&quot;s&quot;resLength3&quot;s&quot;unTokenLength&quot;s&quot;defPartsLength&quot;s&quot;whtSpListLength&quot;s&quot;resLength7&quot;s&quot;resLength8&quot;s}'>
<field declared_type='short' name='flags' type='s'/>
<field declared_type='SInt32' name='resourceType' type='l' type64='i'/>
<field declared_type='short' name='resourceNum' type='s'/>
<field declared_type='short' name='version' type='s'/>
<field declared_type='short' name='format' type='s'/>
<field declared_type='short' name='resHeader' type='s'/>
<field declared_type='SInt32' name='resHeader2' type='l' type64='i'/>
<field declared_type='short' name='numTables' type='s'/>
<field declared_type='SInt32' name='mapOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='strOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='fetchOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='unTokenOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='defPartsOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='whtSpListOffset' type='l' type64='i'/>
<field declared_type='SInt32' name='resOffset7' type='l' type64='i'/>
<field declared_type='SInt32' name='resOffset8' type='l' type64='i'/>
<field declared_type='short' name='resLength1' type='s'/>
<field declared_type='short' name='resLength2' type='s'/>
<field declared_type='short' name='resLength3' type='s'/>
<field declared_type='short' name='unTokenLength' type='s'/>
<field declared_type='short' name='defPartsLength' type='s'/>
<field declared_type='short' name='whtSpListLength' type='s'/>
<field declared_type='short' name='resLength7' type='s'/>
<field declared_type='short' name='resLength8' type='s'/>
</struct>
<struct name='Nanoseconds' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'>
<field declared_type='UInt32' name='lo' type='L' type64='I'/>
<field declared_type='UInt32' name='hi' type='L' type64='I'/>
</struct>
<struct name='NumFormatString' type='{NumFormatString=&quot;fLength&quot;C&quot;fVersion&quot;C&quot;data&quot;[254c]}'>
<field declared_type='UInt8' name='fLength' type='C'/>
<field declared_type='UInt8' name='fVersion' type='C'/>
<field declared_type='char*' name='data' type='[254c]'/>
</struct>
<struct name='NumFormatStringRec' type='{NumFormatString=&quot;fLength&quot;C&quot;fVersion&quot;C&quot;data&quot;[254c]}'>
<field declared_type='UInt8' name='fLength' type='C'/>
<field declared_type='UInt8' name='fVersion' type='C'/>
<field declared_type='char*' name='data' type='[254c]'/>
</struct>
<struct name='NumberParts' type='{NumberParts=&quot;version&quot;s&quot;data&quot;[31(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]&quot;pePlus&quot;{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}&quot;peMinus&quot;{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}&quot;peMinusPlus&quot;{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}&quot;altNumTable&quot;{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}&quot;reserved&quot;[20c]}'>
<field declared_type='short' name='version' type='s'/>
<field declared_type='WideChar*' name='data' type='[31(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]'/>
<field declared_type='WideCharArr' name='pePlus' type='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'/>
<field declared_type='WideCharArr' name='peMinus' type='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'/>
<field declared_type='WideCharArr' name='peMinusPlus' type='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'/>
<field declared_type='WideCharArr' name='altNumTable' type='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'/>
<field declared_type='char*' name='reserved' type='[20c]'/>
</struct>
<struct name='OffPair' type='{OffPair=&quot;offFirst&quot;s&quot;offSecond&quot;s}'>
<field declared_type='short' name='offFirst' type='s'/>
<field declared_type='short' name='offSecond' type='s'/>
</struct>
<struct name='PEFContainerHeader' type='{PEFContainerHeader=&quot;tag1&quot;I&quot;tag2&quot;I&quot;architecture&quot;I&quot;formatVersion&quot;I&quot;dateTimeStamp&quot;I&quot;oldDefVersion&quot;I&quot;oldImpVersion&quot;I&quot;currentVersion&quot;I&quot;sectionCount&quot;S&quot;instSectionCount&quot;S&quot;reservedA&quot;I}'>
<field declared_type='OSType' name='tag1' type='L' type64='I'/>
<field declared_type='OSType' name='tag2' type='L' type64='I'/>
<field declared_type='OSType' name='architecture' type='L' type64='I'/>
<field declared_type='UInt32' name='formatVersion' type='L' type64='I'/>
<field declared_type='UInt32' name='dateTimeStamp' type='L' type64='I'/>
<field declared_type='UInt32' name='oldDefVersion' type='L' type64='I'/>
<field declared_type='UInt32' name='oldImpVersion' type='L' type64='I'/>
<field declared_type='UInt32' name='currentVersion' type='L' type64='I'/>
<field declared_type='UInt16' name='sectionCount' type='S'/>
<field declared_type='UInt16' name='instSectionCount' type='S'/>
<field declared_type='UInt32' name='reservedA' type='L' type64='I'/>
</struct>
<struct name='PEFExportedSymbol' type='{PEFExportedSymbol=&quot;classAndName&quot;I&quot;symbolValue&quot;I&quot;sectionIndex&quot;s}'>
<field declared_type='UInt32' name='classAndName' type='L' type64='I'/>
<field declared_type='UInt32' name='symbolValue' type='L' type64='I'/>
<field declared_type='SInt16' name='sectionIndex' type='s'/>
</struct>
<struct name='PEFExportedSymbolHashSlot' type='{PEFExportedSymbolHashSlot=&quot;countAndStart&quot;I}'>
<field declared_type='UInt32' name='countAndStart' type='L' type64='I'/>
</struct>
<struct name='PEFExportedSymbolKey' type='{PEFExportedSymbolKey=&quot;u&quot;(?=&quot;fullHashWord&quot;I&quot;splitHashWord&quot;{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S})}'>
<field declared_type='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h:496:3)' name='u' type='(?=&quot;fullHashWord&quot;I&quot;splitHashWord&quot;{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S})'/>
</struct>
<struct name='PEFImportedLibrary' type='{PEFImportedLibrary=&quot;nameOffset&quot;I&quot;oldImpVersion&quot;I&quot;currentVersion&quot;I&quot;importedSymbolCount&quot;I&quot;firstImportedSymbol&quot;I&quot;options&quot;C&quot;reservedA&quot;C&quot;reservedB&quot;S}'>
<field declared_type='UInt32' name='nameOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='oldImpVersion' type='L' type64='I'/>
<field declared_type='UInt32' name='currentVersion' type='L' type64='I'/>
<field declared_type='UInt32' name='importedSymbolCount' type='L' type64='I'/>
<field declared_type='UInt32' name='firstImportedSymbol' type='L' type64='I'/>
<field declared_type='UInt8' name='options' type='C'/>
<field declared_type='UInt8' name='reservedA' type='C'/>
<field declared_type='UInt16' name='reservedB' type='S'/>
</struct>
<struct name='PEFImportedSymbol' type='{PEFImportedSymbol=&quot;classAndName&quot;I}'>
<field declared_type='UInt32' name='classAndName' type='L' type64='I'/>
</struct>
<struct name='PEFLoaderInfoHeader' type='{PEFLoaderInfoHeader=&quot;mainSection&quot;i&quot;mainOffset&quot;I&quot;initSection&quot;i&quot;initOffset&quot;I&quot;termSection&quot;i&quot;termOffset&quot;I&quot;importedLibraryCount&quot;I&quot;totalImportedSymbolCount&quot;I&quot;relocSectionCount&quot;I&quot;relocInstrOffset&quot;I&quot;loaderStringsOffset&quot;I&quot;exportHashOffset&quot;I&quot;exportHashTablePower&quot;I&quot;exportedSymbolCount&quot;I}'>
<field declared_type='SInt32' name='mainSection' type='l' type64='i'/>
<field declared_type='UInt32' name='mainOffset' type='L' type64='I'/>
<field declared_type='SInt32' name='initSection' type='l' type64='i'/>
<field declared_type='UInt32' name='initOffset' type='L' type64='I'/>
<field declared_type='SInt32' name='termSection' type='l' type64='i'/>
<field declared_type='UInt32' name='termOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='importedLibraryCount' type='L' type64='I'/>
<field declared_type='UInt32' name='totalImportedSymbolCount' type='L' type64='I'/>
<field declared_type='UInt32' name='relocSectionCount' type='L' type64='I'/>
<field declared_type='UInt32' name='relocInstrOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='loaderStringsOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='exportHashOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='exportHashTablePower' type='L' type64='I'/>
<field declared_type='UInt32' name='exportedSymbolCount' type='L' type64='I'/>
</struct>
<struct name='PEFLoaderRelocationHeader' type='{PEFLoaderRelocationHeader=&quot;sectionIndex&quot;S&quot;reservedA&quot;S&quot;relocCount&quot;I&quot;firstRelocOffset&quot;I}'>
<field declared_type='UInt16' name='sectionIndex' type='S'/>
<field declared_type='UInt16' name='reservedA' type='S'/>
<field declared_type='UInt32' name='relocCount' type='L' type64='I'/>
<field declared_type='UInt32' name='firstRelocOffset' type='L' type64='I'/>
</struct>
<struct name='PEFSectionHeader' type='{PEFSectionHeader=&quot;nameOffset&quot;i&quot;defaultAddress&quot;I&quot;totalLength&quot;I&quot;unpackedLength&quot;I&quot;containerLength&quot;I&quot;containerOffset&quot;I&quot;sectionKind&quot;C&quot;shareKind&quot;C&quot;alignment&quot;C&quot;reservedA&quot;C}'>
<field declared_type='SInt32' name='nameOffset' type='l' type64='i'/>
<field declared_type='UInt32' name='defaultAddress' type='L' type64='I'/>
<field declared_type='UInt32' name='totalLength' type='L' type64='I'/>
<field declared_type='UInt32' name='unpackedLength' type='L' type64='I'/>
<field declared_type='UInt32' name='containerLength' type='L' type64='I'/>
<field declared_type='UInt32' name='containerOffset' type='L' type64='I'/>
<field declared_type='UInt8' name='sectionKind' type='C'/>
<field declared_type='UInt8' name='shareKind' type='C'/>
<field declared_type='UInt8' name='alignment' type='C'/>
<field declared_type='UInt8' name='reservedA' type='C'/>
</struct>
<struct name='PEFSplitHashWord' type='{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S}'>
<field declared_type='UInt16' name='nameLength' type='S'/>
<field declared_type='UInt16' name='hashValue' type='S'/>
</struct>
<struct name='QElem' type='{QElem=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;qData&quot;[1s]}'>
<field declared_type='struct QElem*' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='short' name='qType' type='s'/>
<field declared_type='short*' name='qData' type='[1s]'/>
</struct>
<struct name='QHdr' type='{QHdr=&quot;qFlags&quot;s&quot;qHead&quot;^{QElem}&quot;qTail&quot;^{QElem}}'>
<field declared_type='volatile short' name='qFlags' type='s'/>
<field declared_type='volatile QElemPtr' name='qHead' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='volatile QElemPtr' name='qTail' type='^{QElem=^{QElem}s[1s]}'/>
</struct>
<struct name='RegisterInformation' type='{RegisterInformationIntel=&quot;EAX&quot;L&quot;EBX&quot;L&quot;ECX&quot;L&quot;EDX&quot;L&quot;ESI&quot;L&quot;EDI&quot;L&quot;EBP&quot;L&quot;ESP&quot;L}' type64='{RegisterInformationIntel64=&quot;RAX&quot;Q&quot;RBX&quot;Q&quot;RCX&quot;Q&quot;RDX&quot;Q&quot;RDI&quot;Q&quot;RSI&quot;Q&quot;RBP&quot;Q&quot;RSP&quot;Q&quot;R8&quot;Q&quot;R9&quot;Q&quot;R10&quot;Q&quot;R11&quot;Q&quot;R12&quot;Q&quot;R13&quot;Q&quot;R14&quot;Q&quot;R15&quot;Q}'>
<field declared_type='unsigned long' name='RAX' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RBX' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RCX' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RDX' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RDI' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RSI' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RBP' type='L' type64='Q'/>
<field declared_type='unsigned long' name='RSP' type='L' type64='Q'/>
<field declared_type64='unsigned long' name='R8' type64='Q'/>
<field declared_type64='unsigned long' name='R9' type64='Q'/>
<field declared_type64='unsigned long' name='R10' type64='Q'/>
<field declared_type64='unsigned long' name='R11' type64='Q'/>
<field declared_type64='unsigned long' name='R12' type64='Q'/>
<field declared_type64='unsigned long' name='R13' type64='Q'/>
<field declared_type64='unsigned long' name='R14' type64='Q'/>
<field declared_type64='unsigned long' name='R15' type64='Q'/>
</struct>
<struct name='RegisterInformationIntel64' type64='{RegisterInformationIntel64=&quot;RAX&quot;Q&quot;RBX&quot;Q&quot;RCX&quot;Q&quot;RDX&quot;Q&quot;RDI&quot;Q&quot;RSI&quot;Q&quot;RBP&quot;Q&quot;RSP&quot;Q&quot;R8&quot;Q&quot;R9&quot;Q&quot;R10&quot;Q&quot;R11&quot;Q&quot;R12&quot;Q&quot;R13&quot;Q&quot;R14&quot;Q&quot;R15&quot;Q}'>
<field declared_type64='unsigned long' name='RAX' type64='Q'/>
<field declared_type64='unsigned long' name='RBX' type64='Q'/>
<field declared_type64='unsigned long' name='RCX' type64='Q'/>
<field declared_type64='unsigned long' name='RDX' type64='Q'/>
<field declared_type64='unsigned long' name='RDI' type64='Q'/>
<field declared_type64='unsigned long' name='RSI' type64='Q'/>
<field declared_type64='unsigned long' name='RBP' type64='Q'/>
<field declared_type64='unsigned long' name='RSP' type64='Q'/>
<field declared_type64='unsigned long' name='R8' type64='Q'/>
<field declared_type64='unsigned long' name='R9' type64='Q'/>
<field declared_type64='unsigned long' name='R10' type64='Q'/>
<field declared_type64='unsigned long' name='R11' type64='Q'/>
<field declared_type64='unsigned long' name='R12' type64='Q'/>
<field declared_type64='unsigned long' name='R13' type64='Q'/>
<field declared_type64='unsigned long' name='R14' type64='Q'/>
<field declared_type64='unsigned long' name='R15' type64='Q'/>
</struct>
<struct name='RegisterInformationPowerPC' type='{RegisterInformationPowerPC=&quot;R0&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R1&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R2&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R3&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R4&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R5&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R6&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R7&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R8&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R9&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R10&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R11&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R12&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R13&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R14&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R15&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R16&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R17&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R18&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R19&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R20&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R21&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R22&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R23&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R24&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R25&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R26&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R27&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R28&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R29&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R30&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}&quot;R31&quot;{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}}'>
<field declared_type='UnsignedWide' name='R0' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R1' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R2' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R3' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R4' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R5' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R6' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R7' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R8' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R9' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R10' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R11' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R12' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R13' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R14' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R15' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R16' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R17' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R18' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R19' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R20' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R21' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R22' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R23' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R24' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R25' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R26' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R27' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R28' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R29' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R30' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
<field declared_type='UnsignedWide' name='R31' type='{UnsignedWide=&quot;lo&quot;I&quot;hi&quot;I}'/>
</struct>
<struct name='RegisteredComponentInstanceRecord' type='{RegisteredComponentInstanceRecord=&quot;data&quot;[1l]}' type64='{RegisteredComponentInstanceRecord=&quot;data&quot;[1q]}'>
<field declared_type='long*' name='data' type='[1l]' type64='[1q]'/>
</struct>
<struct name='RegisteredComponentRecord' type='{RegisteredComponentRecord=&quot;data&quot;[1l]}' type64='{RegisteredComponentRecord=&quot;data&quot;[1q]}'>
<field declared_type='long*' name='data' type='[1l]' type64='[1q]'/>
</struct>
<struct name='ResourceSpec' type='{ResourceSpec=&quot;resType&quot;I&quot;resID&quot;s}'>
<field declared_type='OSType' name='resType' type='L' type64='I'/>
<field declared_type='SInt16' name='resID' type='s'/>
</struct>
<struct name='RoutineDescriptor' type='{RoutineDescriptor=&quot;goMixedModeTrap&quot;S&quot;version&quot;c&quot;routineDescriptorFlags&quot;C&quot;reserved1&quot;I&quot;reserved2&quot;C&quot;selectorInfo&quot;C&quot;routineCount&quot;S&quot;routineRecords&quot;[1{RoutineRecord=&quot;procInfo&quot;I&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}]}' type64='{RoutineDescriptor=&quot;goMixedModeTrap&quot;S&quot;version&quot;c&quot;routineDescriptorFlags&quot;C&quot;reserved1&quot;I&quot;reserved2&quot;C&quot;selectorInfo&quot;C&quot;routineCount&quot;S&quot;routineRecords&quot;[1{RoutineRecord=&quot;procInfo&quot;Q&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}]}'>
<field declared_type='UInt16' name='goMixedModeTrap' type='S'/>
<field declared_type='SInt8' name='version' type='c'/>
<field declared_type='RDFlagsType' name='routineDescriptorFlags' type='C'/>
<field declared_type='UInt32' name='reserved1' type='L' type64='I'/>
<field declared_type='UInt8' name='reserved2' type='C'/>
<field declared_type='UInt8' name='selectorInfo' type='C'/>
<field declared_type='UInt16' name='routineCount' type='S'/>
<field declared_type='RoutineRecord*' name='routineRecords' type='[1{RoutineRecord=&quot;procInfo&quot;I&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}]' type64='[1{RoutineRecord=&quot;procInfo&quot;Q&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}]'/>
</struct>
<struct name='RoutineRecord' type='{RoutineRecord=&quot;procInfo&quot;I&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}' type64='{RoutineRecord=&quot;procInfo&quot;Q&quot;reserved1&quot;c&quot;ISA&quot;c&quot;routineFlags&quot;S&quot;procDescriptor&quot;^?&quot;reserved2&quot;I&quot;selector&quot;I}'>
<field declared_type='ProcInfoType' name='procInfo' type='L' type64='Q'/>
<field declared_type='SInt8' name='reserved1' type='c'/>
<field declared_type='ISAType' name='ISA' type='c'/>
<field declared_type='RoutineFlagsType' name='routineFlags' type='S'/>
<field declared_type='ProcPtr' function_pointer='true' name='procDescriptor' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='UInt32' name='reserved2' type='L' type64='I'/>
<field declared_type='UInt32' name='selector' type='L' type64='I'/>
</struct>
<struct name='RoutingResourceEntry' type='{RoutingResourceEntry=&quot;creator&quot;I&quot;fileType&quot;I&quot;targetFolder&quot;I&quot;destinationFolder&quot;I&quot;reservedField&quot;I}'>
<field declared_type='OSType' name='creator' type='L' type64='I'/>
<field declared_type='OSType' name='fileType' type='L' type64='I'/>
<field declared_type='OSType' name='targetFolder' type='L' type64='I'/>
<field declared_type='OSType' name='destinationFolder' type='L' type64='I'/>
<field declared_type='OSType' name='reservedField' type='L' type64='I'/>
</struct>
<struct name='RuleBasedTrslRecord' type='{RuleBasedTrslRecord=&quot;sourceType&quot;s&quot;targetType&quot;s&quot;formatNumber&quot;s&quot;propertyFlag&quot;s&quot;numberOfRules&quot;s}'>
<field declared_type='short' name='sourceType' type='s'/>
<field declared_type='short' name='targetType' type='s'/>
<field declared_type='short' name='formatNumber' type='s'/>
<field declared_type='short' name='propertyFlag' type='s'/>
<field declared_type='short' name='numberOfRules' type='s'/>
</struct>
<struct name='SchedulerInfoRec' type='{SchedulerInfoRec=&quot;InfoRecSize&quot;I&quot;CurrentThreadID&quot;I&quot;SuggestedThreadID&quot;I&quot;InterruptedCoopThreadID&quot;I}' type64='{SchedulerInfoRec=&quot;InfoRecSize&quot;I&quot;CurrentThreadID&quot;Q&quot;SuggestedThreadID&quot;Q&quot;InterruptedCoopThreadID&quot;Q}'>
<field declared_type='UInt32' name='InfoRecSize' type='L' type64='I'/>
<field declared_type='ThreadID' name='CurrentThreadID' type='L' type64='Q'/>
<field declared_type='ThreadID' name='SuggestedThreadID' type='L' type64='Q'/>
<field declared_type='ThreadID' name='InterruptedCoopThreadID' type='L' type64='Q'/>
</struct>
<struct name='ScriptCodeRun' type='{ScriptCodeRun=&quot;offset&quot;I&quot;script&quot;s}' type64='{ScriptCodeRun=&quot;offset&quot;Q&quot;script&quot;s}'>
<field declared_type='ByteOffset' name='offset' type='L' type64='Q'/>
<field declared_type='ScriptCode' name='script' type='s'/>
</struct>
<struct name='SoundDataChunk' type='{SoundDataChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;offset&quot;I&quot;blockSize&quot;I}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='UInt32' name='offset' type='L' type64='I'/>
<field declared_type='UInt32' name='blockSize' type='L' type64='I'/>
</struct>
<struct name='TECBufferContextRec' type='{TECBufferContextRec=&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;textOutputBuffer&quot;*&quot;textOutputBufferEnd&quot;*&quot;encodingInputBuffer&quot;^{TextEncodingRun}&quot;encodingInputBufferEnd&quot;^{TextEncodingRun}&quot;encodingOutputBuffer&quot;^{TextEncodingRun}&quot;encodingOutputBufferEnd&quot;^{TextEncodingRun}}'>
<field declared_type='ConstTextPtr' name='textInputBuffer' type='*'/>
<field declared_type='ConstTextPtr' name='textInputBufferEnd' type='*'/>
<field declared_type='TextPtr' name='textOutputBuffer' type='*'/>
<field declared_type='TextPtr' name='textOutputBufferEnd' type='*'/>
<field declared_type='ConstTextEncodingRunPtr' name='encodingInputBuffer' type='^{TextEncodingRun=II}' type64='^{TextEncodingRun=QI}'/>
<field declared_type='ConstTextEncodingRunPtr' name='encodingInputBufferEnd' type='^{TextEncodingRun=II}' type64='^{TextEncodingRun=QI}'/>
<field declared_type='TextEncodingRunPtr' name='encodingOutputBuffer' type='^{TextEncodingRun=II}' type64='^{TextEncodingRun=QI}'/>
<field declared_type='TextEncodingRunPtr' name='encodingOutputBufferEnd' type='^{TextEncodingRun=II}' type64='^{TextEncodingRun=QI}'/>
</struct>
<struct name='TECConversionInfo' type='{TECConversionInfo=&quot;sourceEncoding&quot;I&quot;destinationEncoding&quot;I&quot;reserved1&quot;S&quot;reserved2&quot;S}'>
<field declared_type='TextEncoding' name='sourceEncoding' type='L' type64='I'/>
<field declared_type='TextEncoding' name='destinationEncoding' type='L' type64='I'/>
<field declared_type='UInt16' name='reserved1' type='S'/>
<field declared_type='UInt16' name='reserved2' type='S'/>
</struct>
<struct name='TECConverterContextRec' type='{TECConverterContextRec=&quot;pluginRec&quot;*&quot;sourceEncoding&quot;I&quot;destEncoding&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;bufferContext&quot;{TECBufferContextRec=&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;textOutputBuffer&quot;*&quot;textOutputBufferEnd&quot;*&quot;encodingInputBuffer&quot;^{TextEncodingRun}&quot;encodingInputBufferEnd&quot;^{TextEncodingRun}&quot;encodingOutputBuffer&quot;^{TextEncodingRun}&quot;encodingOutputBufferEnd&quot;^{TextEncodingRun}}&quot;contextRefCon&quot;I&quot;conversionProc&quot;^?&quot;flushProc&quot;^?&quot;clearContextInfoProc&quot;^?&quot;options1&quot;I&quot;options2&quot;I&quot;pluginState&quot;{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}}' type64='{TECConverterContextRec=&quot;pluginRec&quot;*&quot;sourceEncoding&quot;I&quot;destEncoding&quot;I&quot;reserved1&quot;I&quot;reserved2&quot;I&quot;bufferContext&quot;{TECBufferContextRec=&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;textOutputBuffer&quot;*&quot;textOutputBufferEnd&quot;*&quot;encodingInputBuffer&quot;^{TextEncodingRun}&quot;encodingInputBufferEnd&quot;^{TextEncodingRun}&quot;encodingOutputBuffer&quot;^{TextEncodingRun}&quot;encodingOutputBufferEnd&quot;^{TextEncodingRun}}&quot;contextRefCon&quot;^v&quot;conversionProc&quot;^?&quot;flushProc&quot;^?&quot;clearContextInfoProc&quot;^?&quot;options1&quot;I&quot;options2&quot;I&quot;pluginState&quot;{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}}'>
<field declared_type='Ptr' name='pluginRec' type='*'/>
<field declared_type='TextEncoding' name='sourceEncoding' type='L' type64='I'/>
<field declared_type='TextEncoding' name='destEncoding' type='L' type64='I'/>
<field declared_type='UInt32' name='reserved1' type='L' type64='I'/>
<field declared_type='UInt32' name='reserved2' type='L' type64='I'/>
<field declared_type='TECBufferContextRec' name='bufferContext' type='{TECBufferContextRec=&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;textOutputBuffer&quot;*&quot;textOutputBufferEnd&quot;*&quot;encodingInputBuffer&quot;^{TextEncodingRun}&quot;encodingInputBufferEnd&quot;^{TextEncodingRun}&quot;encodingOutputBuffer&quot;^{TextEncodingRun}&quot;encodingOutputBufferEnd&quot;^{TextEncodingRun}}'/>
<field declared_type='URefCon' name='contextRefCon' type='L' type64='^v'/>
<field declared_type='ProcPtr' function_pointer='true' name='conversionProc' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='ProcPtr' function_pointer='true' name='flushProc' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='ProcPtr' function_pointer='true' name='clearContextInfoProc' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='UInt32' name='options1' type='L' type64='I'/>
<field declared_type='UInt32' name='options2' type='L' type64='I'/>
<field declared_type='TECPluginStateRec' name='pluginState' type='{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}'/>
</struct>
<struct name='TECEncodingPairRec' type='{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'>
<field declared_type='TextEncodingRec' name='source' type='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
<field declared_type='TextEncodingRec' name='dest' type='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
</struct>
<struct name='TECEncodingPairs' type='{TECEncodingPairs=&quot;encodingPair&quot;{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}&quot;flags&quot;I&quot;speed&quot;I}'>
<field declared_type='TECEncodingPairRec' name='encodingPair' type='{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'/>
<field declared_type='UInt32' name='flags' type='L' type64='I'/>
<field declared_type='UInt32' name='speed' type='L' type64='I'/>
</struct>
<struct name='TECEncodingPairsRec' type='{TECEncodingPairsRec=&quot;count&quot;I&quot;encodingPairs&quot;{TECEncodingPairs=&quot;encodingPair&quot;{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}&quot;flags&quot;I&quot;speed&quot;I}}'>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='TECEncodingPairs' name='encodingPairs' type='{TECEncodingPairs=&quot;encodingPair&quot;{TECEncodingPairRec=&quot;source&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;dest&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}&quot;flags&quot;I&quot;speed&quot;I}'/>
</struct>
<struct name='TECEncodingsListRec' type='{TECEncodingsListRec=&quot;count&quot;I&quot;encodings&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='TextEncodingRec' name='encodings' type='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
</struct>
<struct name='TECInfo' type='{TECInfo=&quot;format&quot;S&quot;tecVersion&quot;S&quot;tecTextConverterFeatures&quot;I&quot;tecUnicodeConverterFeatures&quot;I&quot;tecTextCommonFeatures&quot;I&quot;tecTextEncodingsFolderName&quot;[32C]&quot;tecExtensionFileName&quot;[32C]&quot;tecLowestTEFileVersion&quot;S&quot;tecHighestTEFileVersion&quot;S}'>
<field declared_type='UInt16' name='format' type='S'/>
<field declared_type='UInt16' name='tecVersion' type='S'/>
<field declared_type='UInt32' name='tecTextConverterFeatures' type='L' type64='I'/>
<field declared_type='UInt32' name='tecUnicodeConverterFeatures' type='L' type64='I'/>
<field declared_type='UInt32' name='tecTextCommonFeatures' type='L' type64='I'/>
<field declared_type='Str31' name='tecTextEncodingsFolderName' type='[32C]'/>
<field declared_type='Str31' name='tecExtensionFileName' type='[32C]'/>
<field declared_type='UInt16' name='tecLowestTEFileVersion' type='S'/>
<field declared_type='UInt16' name='tecHighestTEFileVersion' type='S'/>
</struct>
<struct name='TECInternetNameRec' type='{TECInternetNameRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;encodingNameLength&quot;C&quot;encodingName&quot;[1C]}'>
<field declared_type='UInt32' name='offset' type='L' type64='I'/>
<field declared_type='TextEncodingRec' name='searchEncoding' type='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
<field declared_type='UInt8' name='encodingNameLength' type='C'/>
<field declared_type='UInt8*' name='encodingName' type='[1C]'/>
</struct>
<struct name='TECInternetNamesRec' type='{TECInternetNamesRec=&quot;count&quot;I&quot;InternetNames&quot;{TECInternetNameRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;encodingNameLength&quot;C&quot;encodingName&quot;[1C]}}'>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='TECInternetNameRec' name='InternetNames' type='{TECInternetNameRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;encodingNameLength&quot;C&quot;encodingName&quot;[1C]}'/>
</struct>
<struct name='TECLocaleListToEncodingListRec' type='{TECLocaleListToEncodingListRec=&quot;offset&quot;I&quot;count&quot;I&quot;locales&quot;s}'>
<field declared_type='UInt32' name='offset' type='L' type64='I'/>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='RegionCode' name='locales' type='s'/>
</struct>
<struct name='TECLocaleToEncodingsListRec' type='{TECLocaleToEncodingsListRec=&quot;count&quot;I&quot;localeListToEncodingList&quot;{TECLocaleListToEncodingListRec=&quot;offset&quot;I&quot;count&quot;I&quot;locales&quot;s}}'>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='TECLocaleListToEncodingListRec' name='localeListToEncodingList' type='{TECLocaleListToEncodingListRec=&quot;offset&quot;I&quot;count&quot;I&quot;locales&quot;s}'/>
</struct>
<struct name='TECPluginDispatchTable' type='{TECPluginDispatchTable=&quot;version&quot;I&quot;compatibleVersion&quot;I&quot;PluginID&quot;I&quot;PluginNewEncodingConverter&quot;^?&quot;PluginClearContextInfo&quot;^?&quot;PluginConvertTextEncoding&quot;^?&quot;PluginFlushConversion&quot;^?&quot;PluginDisposeEncodingConverter&quot;^?&quot;PluginNewEncodingSniffer&quot;^?&quot;PluginClearSnifferContextInfo&quot;^?&quot;PluginSniffTextEncoding&quot;^?&quot;PluginDisposeEncodingSniffer&quot;^?&quot;PluginGetCountAvailableTextEncodings&quot;^?&quot;PluginGetCountAvailableTextEncodingPairs&quot;^?&quot;PluginGetCountDestinationTextEncodings&quot;^?&quot;PluginGetCountSubTextEncodings&quot;^?&quot;PluginGetCountAvailableSniffers&quot;^?&quot;PluginGetCountWebTextEncodings&quot;^?&quot;PluginGetCountMailTextEncodings&quot;^?&quot;PluginGetTextEncodingInternetName&quot;^?&quot;PluginGetTextEncodingFromInternetName&quot;^?}'>
<field declared_type='TECPluginVersion' name='version' type='L' type64='I'/>
<field declared_type='TECPluginVersion' name='compatibleVersion' type='L' type64='I'/>
<field declared_type='TECPluginSignature' name='PluginID' type='L' type64='I'/>
<field declared_type='TECPluginNewEncodingConverterPtr' function_pointer='true' name='PluginNewEncodingConverter' type='^?'>
<arg declared_type='TECObjectRef*' type='^^{OpaqueTECObjectRef}'/>
<arg declared_type='TECConverterContextRec*' type='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}I^?^?^?II{TECPluginStateRec=CCCCIIII}}' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<arg declared_type='TextEncoding' type='L' type64='I'/>
<arg declared_type='TextEncoding' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginClearContextInfoPtr' function_pointer='true' name='PluginClearContextInfo' type='^?'>
<arg declared_type='TECObjectRef' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='TECConverterContextRec*' type='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}I^?^?^?II{TECPluginStateRec=CCCCIIII}}' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginConvertTextEncodingPtr' function_pointer='true' name='PluginConvertTextEncoding' type='^?'>
<arg declared_type='TECObjectRef' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='TECConverterContextRec*' type='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}I^?^?^?II{TECPluginStateRec=CCCCIIII}}' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginFlushConversionPtr' function_pointer='true' name='PluginFlushConversion' type='^?'>
<arg declared_type='TECObjectRef' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='TECConverterContextRec*' type='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}I^?^?^?II{TECPluginStateRec=CCCCIIII}}' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginDisposeEncodingConverterPtr' function_pointer='true' name='PluginDisposeEncodingConverter' type='^?'>
<arg declared_type='TECObjectRef' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='TECConverterContextRec*' type='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}I^?^?^?II{TECPluginStateRec=CCCCIIII}}' type64='^{TECConverterContextRec=*IIII{TECBufferContextRec=****^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}^{TextEncodingRun}}^v^?^?^?II{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginNewEncodingSnifferPtr' function_pointer='true' name='PluginNewEncodingSniffer' type='^?'>
<arg declared_type='TECSnifferObjectRef*' type='^^{OpaqueTECSnifferObjectRef}'/>
<arg declared_type='TECSnifferContextRec*' type='^{TECSnifferContextRec=*III**III^?^?{TECPluginStateRec=CCCCIIII}}' type64='^{TECSnifferContextRec=*IQQ**QQ^v^?^?{TECPluginStateRec=CCCCIIII}}'/>
<arg declared_type='TextEncoding' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginClearSnifferContextInfoPtr' function_pointer='true' name='PluginClearSnifferContextInfo' type='^?'>
<arg declared_type='TECSnifferObjectRef' type='^{OpaqueTECSnifferObjectRef=}'/>
<arg declared_type='TECSnifferContextRec*' type='^{TECSnifferContextRec=*III**III^?^?{TECPluginStateRec=CCCCIIII}}' type64='^{TECSnifferContextRec=*IQQ**QQ^v^?^?{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginSniffTextEncodingPtr' function_pointer='true' name='PluginSniffTextEncoding' type='^?'>
<arg declared_type='TECSnifferObjectRef' type='^{OpaqueTECSnifferObjectRef=}'/>
<arg declared_type='TECSnifferContextRec*' type='^{TECSnifferContextRec=*III**III^?^?{TECPluginStateRec=CCCCIIII}}' type64='^{TECSnifferContextRec=*IQQ**QQ^v^?^?{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginDisposeEncodingSnifferPtr' function_pointer='true' name='PluginDisposeEncodingSniffer' type='^?'>
<arg declared_type='TECSnifferObjectRef' type='^{OpaqueTECSnifferObjectRef=}'/>
<arg declared_type='TECSnifferContextRec*' type='^{TECSnifferContextRec=*III**III^?^?{TECPluginStateRec=CCCCIIII}}' type64='^{TECSnifferContextRec=*IQQ**QQ^v^?^?{TECPluginStateRec=CCCCIIII}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetCountAvailableTextEncodingsPtr' function_pointer='true' name='PluginGetCountAvailableTextEncodings' type='^?'>
<arg declared_type='TextEncoding*' type='^I'/>
<arg declared_type='ItemCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetCountAvailableTextEncodingPairsPtr' function_pointer='true' name='PluginGetCountAvailableTextEncodingPairs' type='^?'>
<arg declared_type='TECConversionInfo*' type='^{TECConversionInfo=IISS}'/>
<arg declared_type='ItemCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetCountDestinationTextEncodingsPtr' function_pointer='true' name='PluginGetCountDestinationTextEncodings' type='^?'>
<arg declared_type='TextEncoding' type='L' type64='I'/>
<arg declared_type='TextEncoding*' type='^I'/>
<arg declared_type='ItemCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetCountSubTextEncodingsPtr' function_pointer='true' name='PluginGetCountSubTextEncodings' type='^?'>
<arg declared_type='TextEncoding' type='L' type64='I'/>
<arg declared_type='TextEncoding*' type='^I'/>
<arg declared_type='ItemCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetCountAvailableSniffersPtr' function_pointer='true' name='PluginGetCountAvailableSniffers' type='^?'>
<arg declared_type='TextEncoding*' type='^I'/>
<arg declared_type='ItemCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetCountWebEncodingsPtr' function_pointer='true' name='PluginGetCountWebTextEncodings' type='^?'>
<arg declared_type='TextEncoding*' type='^I'/>
<arg declared_type='ItemCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetCountMailEncodingsPtr' function_pointer='true' name='PluginGetCountMailTextEncodings' type='^?'>
<arg declared_type='TextEncoding*' type='^I'/>
<arg declared_type='ItemCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetTextEncodingInternetNamePtr' function_pointer='true' name='PluginGetTextEncodingInternetName' type='^?'>
<arg declared_type='TextEncoding' type='L' type64='I'/>
<arg declared_type='unsigned char*' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
<field declared_type='TECPluginGetTextEncodingFromInternetNamePtr' function_pointer='true' name='PluginGetTextEncodingFromInternetName' type='^?'>
<arg declared_type='TextEncoding*' type='^I'/>
<arg declared_type='ConstStr255Param' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</field>
</struct>
<struct name='TECPluginStateRec' type='{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}'>
<field declared_type='UInt8' name='state1' type='C'/>
<field declared_type='UInt8' name='state2' type='C'/>
<field declared_type='UInt8' name='state3' type='C'/>
<field declared_type='UInt8' name='state4' type='C'/>
<field declared_type='UInt32' name='longState1' type='L' type64='I'/>
<field declared_type='UInt32' name='longState2' type='L' type64='I'/>
<field declared_type='UInt32' name='longState3' type='L' type64='I'/>
<field declared_type='UInt32' name='longState4' type='L' type64='I'/>
</struct>
<struct name='TECSnifferContextRec' type='{TECSnifferContextRec=&quot;pluginRec&quot;*&quot;encoding&quot;I&quot;maxErrors&quot;I&quot;maxFeatures&quot;I&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;numFeatures&quot;I&quot;numErrors&quot;I&quot;contextRefCon&quot;I&quot;sniffProc&quot;^?&quot;clearContextInfoProc&quot;^?&quot;pluginState&quot;{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}}' type64='{TECSnifferContextRec=&quot;pluginRec&quot;*&quot;encoding&quot;I&quot;maxErrors&quot;Q&quot;maxFeatures&quot;Q&quot;textInputBuffer&quot;*&quot;textInputBufferEnd&quot;*&quot;numFeatures&quot;Q&quot;numErrors&quot;Q&quot;contextRefCon&quot;^v&quot;sniffProc&quot;^?&quot;clearContextInfoProc&quot;^?&quot;pluginState&quot;{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}}'>
<field declared_type='Ptr' name='pluginRec' type='*'/>
<field declared_type='TextEncoding' name='encoding' type='L' type64='I'/>
<field declared_type='ItemCount' name='maxErrors' type='L' type64='Q'/>
<field declared_type='ItemCount' name='maxFeatures' type='L' type64='Q'/>
<field declared_type='ConstTextPtr' name='textInputBuffer' type='*'/>
<field declared_type='ConstTextPtr' name='textInputBufferEnd' type='*'/>
<field declared_type='ItemCount' name='numFeatures' type='L' type64='Q'/>
<field declared_type='ItemCount' name='numErrors' type='L' type64='Q'/>
<field declared_type='URefCon' name='contextRefCon' type='L' type64='^v'/>
<field declared_type='ProcPtr' function_pointer='true' name='sniffProc' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='ProcPtr' function_pointer='true' name='clearContextInfoProc' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='TECPluginStateRec' name='pluginState' type='{TECPluginStateRec=&quot;state1&quot;C&quot;state2&quot;C&quot;state3&quot;C&quot;state4&quot;C&quot;longState1&quot;I&quot;longState2&quot;I&quot;longState3&quot;I&quot;longState4&quot;I}'/>
</struct>
<struct name='TECSubTextEncodingRec' type='{TECSubTextEncodingRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;count&quot;I&quot;subEncodings&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'>
<field declared_type='UInt32' name='offset' type='L' type64='I'/>
<field declared_type='TextEncodingRec' name='searchEncoding' type='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='TextEncodingRec' name='subEncodings' type='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'/>
</struct>
<struct name='TECSubTextEncodingsRec' type='{TECSubTextEncodingsRec=&quot;count&quot;I&quot;subTextEncodingRec&quot;{TECSubTextEncodingRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;count&quot;I&quot;subEncodings&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}}'>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='TECSubTextEncodingRec' name='subTextEncodingRec' type='{TECSubTextEncodingRec=&quot;offset&quot;I&quot;searchEncoding&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}&quot;count&quot;I&quot;subEncodings&quot;{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}}'/>
</struct>
<struct name='TMTask' type='{TMTask=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;tmAddr&quot;^?&quot;tmCount&quot;l&quot;tmWakeUp&quot;l&quot;tmReserved&quot;l}' type64='{TMTask=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;tmAddr&quot;^?&quot;tmCount&quot;q&quot;tmWakeUp&quot;q&quot;tmReserved&quot;q}'>
<field declared_type='QElemPtr' name='qLink' type='^{QElem=^{QElem}s[1s]}'/>
<field declared_type='short' name='qType' type='s'/>
<field declared_type='TimerUPP' function_pointer='true' name='tmAddr' type='^?'>
<arg declared_type='TMTaskPtr' type='^{TMTask=^{QElem}s^?lll}' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='long' name='tmCount' type='l' type64='q'/>
<field declared_type='long' name='tmWakeUp' type='l' type64='q'/>
<field declared_type='long' name='tmReserved' type='l' type64='q'/>
</struct>
<struct name='TableDirectoryRecord' type='{TableDirectoryRecord=&quot;tableSignature&quot;I&quot;reserved&quot;I&quot;tableStartOffset&quot;I&quot;tableSize&quot;I}'>
<field declared_type='OSType' name='tableSignature' type='L' type64='I'/>
<field declared_type='UInt32' name='reserved' type='L' type64='I'/>
<field declared_type='UInt32' name='tableStartOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='tableSize' type='L' type64='I'/>
</struct>
<struct name='TextChunk' type='{TextChunk=&quot;ckID&quot;I&quot;ckSize&quot;i&quot;text&quot;[1c]}'>
<field declared_type='UInt32' name='ckID' type='L' type64='I'/>
<field declared_type='SInt32' name='ckSize' type='l' type64='i'/>
<field declared_type='char*' name='text' type='[1c]'/>
</struct>
<struct name='TextEncodingRec' type='{TextEncodingRec=&quot;base&quot;I&quot;variant&quot;I&quot;format&quot;I}'>
<field declared_type='UInt32' name='base' type='L' type64='I'/>
<field declared_type='UInt32' name='variant' type='L' type64='I'/>
<field declared_type='UInt32' name='format' type='L' type64='I'/>
</struct>
<struct name='TextEncodingRun' type='{TextEncodingRun=&quot;offset&quot;I&quot;textEncoding&quot;I}' type64='{TextEncodingRun=&quot;offset&quot;Q&quot;textEncoding&quot;I}'>
<field declared_type='ByteOffset' name='offset' type='L' type64='Q'/>
<field declared_type='TextEncoding' name='textEncoding' type='L' type64='I'/>
</struct>
<struct name='TogglePB' type='{TogglePB=&quot;togFlags&quot;l&quot;amChars&quot;I&quot;pmChars&quot;I&quot;reserved&quot;[4l]}' type64='{TogglePB=&quot;togFlags&quot;q&quot;amChars&quot;I&quot;pmChars&quot;I&quot;reserved&quot;[4q]}'>
<field declared_type='long' name='togFlags' type='l' type64='q'/>
<field declared_type='ResType' name='amChars' type='L' type64='I'/>
<field declared_type='ResType' name='pmChars' type='L' type64='I'/>
<field declared_type='long*' name='reserved' type='[4l]' type64='[4q]'/>
</struct>
<struct name='TokenBlock' type='{TokenBlock=&quot;source&quot;*&quot;sourceLength&quot;l&quot;tokenList&quot;*&quot;tokenLength&quot;l&quot;tokenCount&quot;l&quot;stringList&quot;*&quot;stringLength&quot;l&quot;stringCount&quot;l&quot;doString&quot;B&quot;doAppend&quot;B&quot;doAlphanumeric&quot;B&quot;doNest&quot;B&quot;leftDelims&quot;[2s]&quot;rightDelims&quot;[2s]&quot;leftComment&quot;[4s]&quot;rightComment&quot;[4s]&quot;escapeCode&quot;s&quot;decimalCode&quot;s&quot;itlResource&quot;^*&quot;reserved&quot;[8l]}' type64='{TokenBlock=&quot;source&quot;*&quot;sourceLength&quot;q&quot;tokenList&quot;*&quot;tokenLength&quot;q&quot;tokenCount&quot;q&quot;stringList&quot;*&quot;stringLength&quot;q&quot;stringCount&quot;q&quot;doString&quot;B&quot;doAppend&quot;B&quot;doAlphanumeric&quot;B&quot;doNest&quot;B&quot;leftDelims&quot;[2s]&quot;rightDelims&quot;[2s]&quot;leftComment&quot;[4s]&quot;rightComment&quot;[4s]&quot;escapeCode&quot;s&quot;decimalCode&quot;s&quot;itlResource&quot;^*&quot;reserved&quot;[8q]}'>
<field declared_type='Ptr' name='source' type='*'/>
<field declared_type='long' name='sourceLength' type='l' type64='q'/>
<field declared_type='Ptr' name='tokenList' type='*'/>
<field declared_type='long' name='tokenLength' type='l' type64='q'/>
<field declared_type='long' name='tokenCount' type='l' type64='q'/>
<field declared_type='Ptr' name='stringList' type='*'/>
<field declared_type='long' name='stringLength' type='l' type64='q'/>
<field declared_type='long' name='stringCount' type='l' type64='q'/>
<field declared_type='Boolean' name='doString' type='B'/>
<field declared_type='Boolean' name='doAppend' type='B'/>
<field declared_type='Boolean' name='doAlphanumeric' type='B'/>
<field declared_type='Boolean' name='doNest' type='B'/>
<field declared_type='ScriptTokenType*' name='leftDelims' type='[2s]'/>
<field declared_type='ScriptTokenType*' name='rightDelims' type='[2s]'/>
<field declared_type='ScriptTokenType*' name='leftComment' type='[4s]'/>
<field declared_type='ScriptTokenType*' name='rightComment' type='[4s]'/>
<field declared_type='ScriptTokenType' name='escapeCode' type='s'/>
<field declared_type='ScriptTokenType' name='decimalCode' type='s'/>
<field declared_type='Handle' name='itlResource' type='^*'/>
<field declared_type='long*' name='reserved' type='[8l]' type64='[8q]'/>
</struct>
<struct name='TokenRec' type='{TokenRec=&quot;theToken&quot;s&quot;position&quot;*&quot;length&quot;l&quot;stringPosition&quot;*}' type64='{TokenRec=&quot;theToken&quot;s&quot;position&quot;*&quot;length&quot;q&quot;stringPosition&quot;*}'>
<field declared_type='ScriptTokenType' name='theToken' type='s'/>
<field declared_type='Ptr' name='position' type='*'/>
<field declared_type='long' name='length' type='l' type64='q'/>
<field declared_type='StringPtr' name='stringPosition' type='*'/>
</struct>
<struct name='UCKeyLayoutFeatureInfo' type='{UCKeyLayoutFeatureInfo=&quot;keyLayoutFeatureInfoFormat&quot;S&quot;reserved&quot;S&quot;maxOutputStringLength&quot;I}'>
<field declared_type='UInt16' name='keyLayoutFeatureInfoFormat' type='S'/>
<field declared_type='UInt16' name='reserved' type='S'/>
<field declared_type='UInt32' name='maxOutputStringLength' type='L' type64='I'/>
</struct>
<struct name='UCKeyModifiersToTableNum' type='{UCKeyModifiersToTableNum=&quot;keyModifiersToTableNumFormat&quot;S&quot;defaultTableNum&quot;S&quot;modifiersCount&quot;I&quot;tableNum&quot;[1C]}'>
<field declared_type='UInt16' name='keyModifiersToTableNumFormat' type='S'/>
<field declared_type='UInt16' name='defaultTableNum' type='S'/>
<field declared_type='UInt32' name='modifiersCount' type='L' type64='I'/>
<field declared_type='UInt8*' name='tableNum' type='[1C]'/>
</struct>
<struct name='UCKeySequenceDataIndex' type='{UCKeySequenceDataIndex=&quot;keySequenceDataIndexFormat&quot;S&quot;charSequenceCount&quot;S&quot;charSequenceOffsets&quot;[1S]}'>
<field declared_type='UInt16' name='keySequenceDataIndexFormat' type='S'/>
<field declared_type='UInt16' name='charSequenceCount' type='S'/>
<field declared_type='UInt16*' name='charSequenceOffsets' type='[1S]'/>
</struct>
<struct name='UCKeyStateEntryRange' type='{UCKeyStateEntryRange=&quot;curStateStart&quot;S&quot;curStateRange&quot;C&quot;deltaMultiplier&quot;C&quot;charData&quot;S&quot;nextState&quot;S}'>
<field declared_type='UInt16' name='curStateStart' type='S'/>
<field declared_type='UInt8' name='curStateRange' type='C'/>
<field declared_type='UInt8' name='deltaMultiplier' type='C'/>
<field declared_type='UCKeyCharSeq' name='charData' type='S'/>
<field declared_type='UInt16' name='nextState' type='S'/>
</struct>
<struct name='UCKeyStateEntryTerminal' type='{UCKeyStateEntryTerminal=&quot;curState&quot;S&quot;charData&quot;S}'>
<field declared_type='UInt16' name='curState' type='S'/>
<field declared_type='UCKeyCharSeq' name='charData' type='S'/>
</struct>
<struct name='UCKeyStateRecord' type='{UCKeyStateRecord=&quot;stateZeroCharData&quot;S&quot;stateZeroNextState&quot;S&quot;stateEntryCount&quot;S&quot;stateEntryFormat&quot;S&quot;stateEntryData&quot;[1L]}' type64='{UCKeyStateRecord=&quot;stateZeroCharData&quot;S&quot;stateZeroNextState&quot;S&quot;stateEntryCount&quot;S&quot;stateEntryFormat&quot;S&quot;stateEntryData&quot;[1I]}'>
<field declared_type='UCKeyCharSeq' name='stateZeroCharData' type='S'/>
<field declared_type='UInt16' name='stateZeroNextState' type='S'/>
<field declared_type='UInt16' name='stateEntryCount' type='S'/>
<field declared_type='UInt16' name='stateEntryFormat' type='S'/>
<field declared_type='UInt32*' name='stateEntryData' type='[1L]' type64='[1I]'/>
</struct>
<struct name='UCKeyStateRecordsIndex' type='{UCKeyStateRecordsIndex=&quot;keyStateRecordsIndexFormat&quot;S&quot;keyStateRecordCount&quot;S&quot;keyStateRecordOffsets&quot;[1L]}' type64='{UCKeyStateRecordsIndex=&quot;keyStateRecordsIndexFormat&quot;S&quot;keyStateRecordCount&quot;S&quot;keyStateRecordOffsets&quot;[1I]}'>
<field declared_type='UInt16' name='keyStateRecordsIndexFormat' type='S'/>
<field declared_type='UInt16' name='keyStateRecordCount' type='S'/>
<field declared_type='UInt32*' name='keyStateRecordOffsets' type='[1L]' type64='[1I]'/>
</struct>
<struct name='UCKeyStateTerminators' type='{UCKeyStateTerminators=&quot;keyStateTerminatorsFormat&quot;S&quot;keyStateTerminatorCount&quot;S&quot;keyStateTerminators&quot;[1S]}'>
<field declared_type='UInt16' name='keyStateTerminatorsFormat' type='S'/>
<field declared_type='UInt16' name='keyStateTerminatorCount' type='S'/>
<field declared_type='UCKeyCharSeq*' name='keyStateTerminators' type='[1S]'/>
</struct>
<struct name='UCKeyToCharTableIndex' type='{UCKeyToCharTableIndex=&quot;keyToCharTableIndexFormat&quot;S&quot;keyToCharTableSize&quot;S&quot;keyToCharTableCount&quot;I&quot;keyToCharTableOffsets&quot;[1L]}' type64='{UCKeyToCharTableIndex=&quot;keyToCharTableIndexFormat&quot;S&quot;keyToCharTableSize&quot;S&quot;keyToCharTableCount&quot;I&quot;keyToCharTableOffsets&quot;[1I]}'>
<field declared_type='UInt16' name='keyToCharTableIndexFormat' type='S'/>
<field declared_type='UInt16' name='keyToCharTableSize' type='S'/>
<field declared_type='UInt32' name='keyToCharTableCount' type='L' type64='I'/>
<field declared_type='UInt32*' name='keyToCharTableOffsets' type='[1L]' type64='[1I]'/>
</struct>
<struct name='UCKeyboardLayout' type='{UCKeyboardLayout=&quot;keyLayoutHeaderFormat&quot;S&quot;keyLayoutDataVersion&quot;S&quot;keyLayoutFeatureInfoOffset&quot;I&quot;keyboardTypeCount&quot;I&quot;keyboardTypeList&quot;[1{UCKeyboardTypeHeader=&quot;keyboardTypeFirst&quot;I&quot;keyboardTypeLast&quot;I&quot;keyModifiersToTableNumOffset&quot;I&quot;keyToCharTableIndexOffset&quot;I&quot;keyStateRecordsIndexOffset&quot;I&quot;keyStateTerminatorsOffset&quot;I&quot;keySequenceDataIndexOffset&quot;I}]}'>
<field declared_type='UInt16' name='keyLayoutHeaderFormat' type='S'/>
<field declared_type='UInt16' name='keyLayoutDataVersion' type='S'/>
<field declared_type='UInt32' name='keyLayoutFeatureInfoOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='keyboardTypeCount' type='L' type64='I'/>
<field declared_type='UCKeyboardTypeHeader*' name='keyboardTypeList' type='[1{UCKeyboardTypeHeader=&quot;keyboardTypeFirst&quot;I&quot;keyboardTypeLast&quot;I&quot;keyModifiersToTableNumOffset&quot;I&quot;keyToCharTableIndexOffset&quot;I&quot;keyStateRecordsIndexOffset&quot;I&quot;keyStateTerminatorsOffset&quot;I&quot;keySequenceDataIndexOffset&quot;I}]'/>
</struct>
<struct name='UCKeyboardTypeHeader' type='{UCKeyboardTypeHeader=&quot;keyboardTypeFirst&quot;I&quot;keyboardTypeLast&quot;I&quot;keyModifiersToTableNumOffset&quot;I&quot;keyToCharTableIndexOffset&quot;I&quot;keyStateRecordsIndexOffset&quot;I&quot;keyStateTerminatorsOffset&quot;I&quot;keySequenceDataIndexOffset&quot;I}'>
<field declared_type='UInt32' name='keyboardTypeFirst' type='L' type64='I'/>
<field declared_type='UInt32' name='keyboardTypeLast' type='L' type64='I'/>
<field declared_type='UInt32' name='keyModifiersToTableNumOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='keyToCharTableIndexOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='keyStateRecordsIndexOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='keyStateTerminatorsOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='keySequenceDataIndexOffset' type='L' type64='I'/>
</struct>
<struct name='UTCDateTime' type='{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}'>
<field declared_type='UInt16' name='highSeconds' type='S'/>
<field declared_type='UInt32' name='lowSeconds' type='L' type64='I'/>
<field declared_type='UInt16' name='fraction' type='S'/>
</struct>
<struct name='UnicodeMapping' type='{UnicodeMapping=&quot;unicodeEncoding&quot;I&quot;otherEncoding&quot;I&quot;mappingVersion&quot;i}'>
<field declared_type='TextEncoding' name='unicodeEncoding' type='L' type64='I'/>
<field declared_type='TextEncoding' name='otherEncoding' type='L' type64='I'/>
<field declared_type='UnicodeMapVersion' name='mappingVersion' type='l' type64='i'/>
</struct>
<struct name='UntokenTable' type='{UntokenTable=&quot;len&quot;s&quot;lastToken&quot;s&quot;index&quot;[256s]}'>
<field declared_type='short' name='len' type='s'/>
<field declared_type='short' name='lastToken' type='s'/>
<field declared_type='short*' name='index' type='[256s]'/>
</struct>
<struct name='VectorInformation' type='{VectorInformationIntel=&quot;Registers&quot;[8(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]}' type64='{VectorInformationIntel64=&quot;Registers&quot;[16(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]}'>
<field declared_type='Vector128Intel*' name='Registers' type='[8(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]' type64='[16(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]'/>
</struct>
<struct name='VectorInformationIntel64' type64='{VectorInformationIntel64=&quot;Registers&quot;[16(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]}'>
<field declared_type64='Vector128Intel*' name='Registers' type64='[16(Vector128Intel=&quot;s&quot;&quot;si&quot;&quot;sd&quot;&quot;c&quot;[16C])]'/>
</struct>
<struct name='VectorInformationPowerPC' type='{VectorInformationPowerPC=&quot;Registers&quot;[32(Vector128=&quot;l&quot;[4L]&quot;s&quot;[8S]&quot;c&quot;[16C])]&quot;VSCR&quot;(Vector128=&quot;l&quot;[4L]&quot;s&quot;[8S]&quot;c&quot;[16C])&quot;VRsave&quot;I}' type64='{VectorInformationPowerPC=&quot;Registers&quot;[32(Vector128=&quot;l&quot;[4Q]&quot;s&quot;[8S]&quot;c&quot;[16C])]&quot;VSCR&quot;(Vector128=&quot;l&quot;[4Q]&quot;s&quot;[8S]&quot;c&quot;[16C])&quot;VRsave&quot;I}'>
<field declared_type='Vector128*' name='Registers' type='[32(Vector128=&quot;l&quot;[4L]&quot;s&quot;[8S]&quot;c&quot;[16C])]' type64='[32(Vector128=&quot;l&quot;[4Q]&quot;s&quot;[8S]&quot;c&quot;[16C])]'/>
<field declared_type='Vector128' name='VSCR' type='(Vector128=&quot;l&quot;[4L]&quot;s&quot;[8S]&quot;c&quot;[16C])' type64='(Vector128=&quot;l&quot;[4Q]&quot;s&quot;[8S]&quot;c&quot;[16C])'/>
<field declared_type='UInt32' name='VRsave' type='L' type64='I'/>
</struct>
<struct name='VolMountInfoHeader' type='{VolMountInfoHeader=&quot;length&quot;s&quot;media&quot;I}'>
<field declared_type='SInt16' name='length' type='s'/>
<field declared_type='VolumeType' name='media' type='L' type64='I'/>
</struct>
<struct name='VolumeMountInfoHeader' type='{VolumeMountInfoHeader=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s}'>
<field declared_type='SInt16' name='length' type='s'/>
<field declared_type='VolumeType' name='media' type='L' type64='I'/>
<field declared_type='SInt16' name='flags' type='s'/>
</struct>
<struct name='WideCharArr' type='{WideCharArr=&quot;size&quot;s&quot;data&quot;[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]}'>
<field declared_type='short' name='size' type='s'/>
<field declared_type='WideChar*' name='data' type='[10(WideChar=&quot;a&quot;{?=&quot;lo&quot;c&quot;hi&quot;c}&quot;b&quot;s)]'/>
</struct>
<struct name='XLibContainerHeader' type='{XLibContainerHeader=&quot;tag1&quot;I&quot;tag2&quot;I&quot;currentFormat&quot;I&quot;containerStringsOffset&quot;I&quot;exportHashOffset&quot;I&quot;exportKeyOffset&quot;I&quot;exportSymbolOffset&quot;I&quot;exportNamesOffset&quot;I&quot;exportHashTablePower&quot;I&quot;exportedSymbolCount&quot;I&quot;fragNameOffset&quot;I&quot;fragNameLength&quot;I&quot;dylibPathOffset&quot;I&quot;dylibPathLength&quot;I&quot;cpuFamily&quot;I&quot;cpuModel&quot;I&quot;dateTimeStamp&quot;I&quot;currentVersion&quot;I&quot;oldDefVersion&quot;I&quot;oldImpVersion&quot;I}'>
<field declared_type='OSType' name='tag1' type='L' type64='I'/>
<field declared_type='OSType' name='tag2' type='L' type64='I'/>
<field declared_type='UInt32' name='currentFormat' type='L' type64='I'/>
<field declared_type='UInt32' name='containerStringsOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='exportHashOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='exportKeyOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='exportSymbolOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='exportNamesOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='exportHashTablePower' type='L' type64='I'/>
<field declared_type='UInt32' name='exportedSymbolCount' type='L' type64='I'/>
<field declared_type='UInt32' name='fragNameOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='fragNameLength' type='L' type64='I'/>
<field declared_type='UInt32' name='dylibPathOffset' type='L' type64='I'/>
<field declared_type='UInt32' name='dylibPathLength' type='L' type64='I'/>
<field declared_type='OSType' name='cpuFamily' type='L' type64='I'/>
<field declared_type='OSType' name='cpuModel' type='L' type64='I'/>
<field declared_type='UInt32' name='dateTimeStamp' type='L' type64='I'/>
<field declared_type='UInt32' name='currentVersion' type='L' type64='I'/>
<field declared_type='UInt32' name='oldDefVersion' type='L' type64='I'/>
<field declared_type='UInt32' name='oldImpVersion' type='L' type64='I'/>
</struct>
<struct name='XLibExportedSymbol' type='{XLibExportedSymbol=&quot;classAndName&quot;I&quot;bpOffset&quot;I}'>
<field declared_type='UInt32' name='classAndName' type='L' type64='I'/>
<field declared_type='UInt32' name='bpOffset' type='L' type64='I'/>
</struct>
<struct name='XLibExportedSymbolHashSlot' type='{PEFExportedSymbolHashSlot=&quot;countAndStart&quot;I}'>
<field declared_type='UInt32' name='countAndStart' type='L' type64='I'/>
</struct>
<struct name='XLibExportedSymbolKey' type='{PEFExportedSymbolKey=&quot;u&quot;(?=&quot;fullHashWord&quot;I&quot;splitHashWord&quot;{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S})}'>
<field declared_type='union (anonymous union at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/PEFBinaryFormat.h:496:3)' name='u' type='(?=&quot;fullHashWord&quot;I&quot;splitHashWord&quot;{PEFSplitHashWord=&quot;nameLength&quot;S&quot;hashValue&quot;S})'/>
</struct>
<struct name='decform' type='{decform=&quot;style&quot;c&quot;unused&quot;c&quot;digits&quot;s}'>
<field declared_type='char' name='style' type='c'/>
<field declared_type='char' name='unused' type='c'/>
<field declared_type='short' name='digits' type='s'/>
</struct>
<struct name='decimal' type='{decimal=&quot;sgn&quot;c&quot;unused&quot;c&quot;exp&quot;s&quot;sig&quot;{?=&quot;length&quot;C&quot;text&quot;[36C]&quot;unused&quot;C}}'>
<field declared_type='char' name='sgn' type='c'/>
<field declared_type='char' name='unused' type='c'/>
<field declared_type='short' name='exp' type='s'/>
<field declared_type='struct (anonymous struct at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/CarbonCore.framework/Headers/fp.h:1320:5)' name='sig' type='{_structanonymousstructatApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX1010sdkSystemLibraryFrameworksCoreServicesframeworkFrameworksCarbonCoreframeworkHeadersfph13205=&quot;length&quot;C&quot;text&quot;[36C]&quot;unused&quot;C}'/>
</struct>
<cftype name='AreaID' type='^{OpaqueAreaID=}'/>
<cftype name='CollatorRef' type='^{OpaqueCollatorRef=}'/>
<cftype name='Collection' type='^{OpaqueCollection=}'/>
<cftype name='FNSubscriptionRef' type='^{OpaqueFNSubscriptionRef=}'/>
<cftype name='FSFileOperationRef' type='^{__FSFileOperation=}'/>
<cftype name='FSFileSecurityRef' type='^{__FSFileSecurity=}'/>
<cftype name='FSIterator' type='^{OpaqueFSIterator=}'/>
<cftype name='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<cftype name='LocaleRef' type='^{OpaqueLocaleRef=}'/>
<cftype name='MPAddressSpaceID' type='^{OpaqueMPAddressSpaceID=}'/>
<cftype name='MPAreaID' type='^{OpaqueMPAreaID=}'/>
<cftype name='MPCoherenceID' type='^{OpaqueMPCoherenceID=}'/>
<cftype name='MPConsoleID' type='^{OpaqueMPConsoleID=}'/>
<cftype name='MPCpuID' type='^{OpaqueMPCpuID=}'/>
<cftype name='MPCriticalRegionID' type='^{OpaqueMPCriticalRegionID=}'/>
<cftype name='MPEventID' type='^{OpaqueMPEventID=}'/>
<cftype name='MPNotificationID' type='^{OpaqueMPNotificationID=}'/>
<cftype name='MPOpaqueID' type='^{OpaqueMPOpaqueID=}'/>
<cftype name='MPProcessID' type='^{OpaqueMPProcessID=}'/>
<cftype name='MPQueueID' type='^{OpaqueMPQueueID=}'/>
<cftype name='MPSemaphoreID' type='^{OpaqueMPSemaphoreID=}'/>
<cftype name='MPTaskID' type='^{OpaqueMPTaskID=}'/>
<cftype name='MPTimerID' type='^{OpaqueMPTimerID=}'/>
<cftype name='TECObjectRef' type='^{OpaqueTECObjectRef=}'/>
<cftype name='TECSnifferObjectRef' type='^{OpaqueTECSnifferObjectRef=}'/>
<cftype name='TextBreakLocatorRef' type='^{OpaqueTextBreakLocatorRef=}'/>
<cftype name='TextToUnicodeInfo' type='^{OpaqueTextToUnicodeInfo=}'/>
<cftype name='UCTypeSelectRef' type='^{OpaqueUCTypeSelectRef=}'/>
<cftype name='UnicodeToTextInfo' type='^{OpaqueUnicodeToTextInfo=}'/>
<cftype name='UnicodeToTextRunInfo' type='^{OpaqueUnicodeToTextRunInfo=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationBytesCompleteKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationBytesRemainingKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationObjectsCompleteKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationObjectsRemainingKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationThroughputKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationTotalBytesKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationTotalObjectsKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationTotalUserVisibleObjectsKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationUserVisibleObjectsCompleteKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFSOperationUserVisibleObjectsRemainingKey' type='^{__CFString=}'/>
<constant const='true' declared_type='double_t' name='pi' type='d'/>
<string_constant name='ACE2to1Name' value='pACE 2-to-1'/>
<string_constant name='ACE8to3Name' value='pACE 8-to-3'/>
<string_constant name='DEBUG_ASSERT_COMPONENT_NAME_STRING' value='Third Party Client'/>
<string_constant name='MACE3to1Name' value='pMACE 3-to-1'/>
<string_constant name='MACE6to1Name' value='pMACE 6-to-1'/>
<string_constant name='MPCopyrightNotice' value='Copyright © 1995-2000 Apple Computer, Inc.
'/>
<string_constant name='MPLibraryCName' value='MPLibrary'/>
<string_constant name='MPLibraryName' value='MPLibrary'/>
<string_constant name='MPLibraryPName' value='pMPLibrary'/>
<string_constant name='MP_API_Version' value='2.3'/>
<string_constant name='NoneName' value='pnot compressed'/>
<string_constant name='kComponentSignatureString' value='Third Party Client'/>
<string_constant name='kTECMacOSXDispatchTableNameString' value='ConverterPluginGetPluginDispatchTable'/>
<enum name='AAPNotCreatedErr' value='-2120'/>
<enum name='AAPNotFoundErr' value='-2121'/>
<enum name='ACE2Type' value='1094927666'/>
<enum name='ACE8Type' value='1094927672'/>
<enum name='AIFCID' value='1095321155'/>
<enum name='AIFCVersion1' value='2726318400'/>
<enum name='AIFFID' value='1095321158'/>
<enum name='ASDBadForkErr' value='-2123'/>
<enum name='ASDBadHeaderErr' value='-2122'/>
<enum name='ASDEntryNotFoundErr' value='-2124'/>
<enum name='AnnotationID' value='1095650895'/>
<enum name='AppleShareMediaType' value='1634103405'/>
<enum name='ApplicationSpecificID' value='1095782476'/>
<enum name='AudioRecordingID' value='1095062340'/>
<enum name='AuthorID' value='1096111176'/>
<enum name='CDEFNFnd' value='88'/>
<enum name='COMPONENT_SIGNATURE' value='1059733290'/>
<enum name='CantDecompress' value='-186'/>
<enum name='CommentID' value='1129270612'/>
<enum name='CommonID' value='1129270605'/>
<enum name='CopyrightID' value='677587232'/>
<enum name='DEBUGFULL' value='4'/>
<enum name='DEBUGLEVEL' value='0'/>
<enum name='DEBUG_ASSERT_PRODUCTION_CODE' value='1'/>
<enum name='DEBUG_LEVEL_BREAK_ONLY' value='1'/>
<enum name='DEBUG_LEVEL_EXTERNAL' value='3'/>
<enum name='DEBUG_LEVEL_INTERNAL' value='4'/>
<enum name='DEBUG_LEVEL_PRODUCTION' value='0'/>
<enum name='DEBUG_NO_OPTIONS' value='0'/>
<enum name='DECSTROUTLEN' value='80'/>
<enum name='EQUALTO' value='2'/>
<enum name='FIXEDDECIMAL' value='1'/>
<enum name='FLOATDECIMAL' value='0'/>
<enum name='FORMID' value='1179603533'/>
<enum name='FormatVersionID' value='1180058962'/>
<enum name='ForwardBackwardLooping' value='2'/>
<enum name='ForwardLooping' value='1'/>
<enum name='GREATERTHAN' value='0'/>
<enum name='IncludePEF2Declarations' value='0'/>
<enum name='InstrumentID' value='1229869908'/>
<enum name='LESSTHAN' value='1'/>
<enum name='MACE3Type' value='1296122675'/>
<enum name='MACE6Type' value='1296122678'/>
<enum name='MIDIDataID' value='1296647241'/>
<enum name='MPLibrary_DevelopmentRevision' value='1'/>
<enum name='MPLibrary_MajorVersion' value='2'/>
<enum name='MPLibrary_MinorVersion' value='3'/>
<enum name='MPLibrary_Release' value='1'/>
<enum name='MarkerID' value='1296126539'/>
<enum name='NameID' value='1312902469'/>
<enum name='NoLooping' value='0'/>
<enum name='NoneType' value='1313820229'/>
<enum name='OSAControlFlowError' value='-2755'/>
<enum name='OSADuplicateHandler' value='-2752'/>
<enum name='OSADuplicateParameter' value='-2750'/>
<enum name='OSADuplicateProperty' value='-2751'/>
<enum name='OSAIllegalAccess' value='-1723'/>
<enum name='OSAIllegalAssign' value='-10003'/>
<enum name='OSAIllegalIndex' value='-1719'/>
<enum name='OSAIllegalRange' value='-1720'/>
<enum name='OSAInconsistentDeclarations' value='-2754'/>
<enum name='OSAMessageNotUnderstood' value='-1708'/>
<enum name='OSAMissingParameter' value='-1701'/>
<enum name='OSAParameterMismatch' value='-1721'/>
<enum name='OSASyntaxError' value='-2740'/>
<enum name='OSASyntaxTypeError' value='-2741'/>
<enum name='OSATokenTooLong' value='-2742'/>
<enum name='OSAUndefinedHandler' value='-1717'/>
<enum name='OSAUndefinedVariable' value='-2753'/>
<enum name='PEFMaskedBasicOpcodes' value='255'/>
<enum name='SIGDIGLEN' value='36'/>
<enum name='SlpTypeErr' value='-5'/>
<enum name='SoundDataID' value='1397968452'/>
<enum name='UNORDERED' value='3'/>
<enum name='WDEFNFnd' value='87'/>
<enum name='abbrevDate' value='2'/>
<enum name='abortErr' value='-27'/>
<enum name='acuteUprA' value='231'/>
<enum name='acuteUprI' value='234'/>
<enum name='acuteUprO' value='238'/>
<enum name='acuteUprU' value='242'/>
<enum name='addRefFailed' value='-195'/>
<enum name='addResFailed' value='-194'/>
<enum name='afpAccessDenied' value='-5000'/>
<enum name='afpAlreadyLoggedInErr' value='-5047'/>
<enum name='afpAlreadyMounted' value='-5062'/>
<enum name='afpAuthContinue' value='-5001'/>
<enum name='afpBadDirIDType' value='-5060'/>
<enum name='afpBadIDErr' value='-5039'/>
<enum name='afpBadUAM' value='-5002'/>
<enum name='afpBadVersNum' value='-5003'/>
<enum name='afpBitmapErr' value='-5004'/>
<enum name='afpCallNotAllowed' value='-5048'/>
<enum name='afpCallNotSupported' value='-5024'/>
<enum name='afpCantMountMoreSrvre' value='-5061'/>
<enum name='afpCantMove' value='-5005'/>
<enum name='afpCantRename' value='-5028'/>
<enum name='afpCatalogChanged' value='-5037'/>
<enum name='afpContainsSharedErr' value='-5033'/>
<enum name='afpDenyConflict' value='-5006'/>
<enum name='afpDiffVolErr' value='-5036'/>
<enum name='afpDirNotEmpty' value='-5007'/>
<enum name='afpDirNotFound' value='-5029'/>
<enum name='afpDiskFull' value='-5008'/>
<enum name='afpEofError' value='-5009'/>
<enum name='afpFileBusy' value='-5010'/>
<enum name='afpFlatVol' value='-5011'/>
<enum name='afpIDExists' value='-5035'/>
<enum name='afpIDNotFound' value='-5034'/>
<enum name='afpIconTypeError' value='-5030'/>
<enum name='afpInsideSharedErr' value='-5043'/>
<enum name='afpInsideTrashErr' value='-5044'/>
<enum name='afpItemNotFound' value='-5012'/>
<enum name='afpLockErr' value='-5013'/>
<enum name='afpMiscErr' value='-5014'/>
<enum name='afpNoMoreLocks' value='-5015'/>
<enum name='afpNoServer' value='-5016'/>
<enum name='afpObjectExists' value='-5017'/>
<enum name='afpObjectLocked' value='-5032'/>
<enum name='afpObjectNotFound' value='-5018'/>
<enum name='afpObjectTypeErr' value='-5025'/>
<enum name='afpParmErr' value='-5019'/>
<enum name='afpPwdExpiredErr' value='-5042'/>
<enum name='afpPwdNeedsChangeErr' value='-5045'/>
<enum name='afpPwdPolicyErr' value='-5046'/>
<enum name='afpPwdSameErr' value='-5040'/>
<enum name='afpPwdTooShortErr' value='-5041'/>
<enum name='afpRangeNotLocked' value='-5020'/>
<enum name='afpRangeOverlap' value='-5021'/>
<enum name='afpSameNodeErr' value='-5063'/>
<enum name='afpSameObjectErr' value='-5038'/>
<enum name='afpServerGoingDown' value='-5027'/>
<enum name='afpSessClosed' value='-5022'/>
<enum name='afpTooManyFilesOpen' value='-5026'/>
<enum name='afpUserNotAuth' value='-5023'/>
<enum name='afpVolLocked' value='-5031'/>
<enum name='appIsDaemon' value='-606'/>
<enum name='appMemFullErr' value='-605'/>
<enum name='appModeErr' value='-602'/>
<enum name='appVersionTooOld' value='-876'/>
<enum name='appleLogo' value='240'/>
<enum name='asiAliasName' value='0'/>
<enum name='asiParentName' value='1'/>
<enum name='asiServerName' value='-2'/>
<enum name='asiVolumeName' value='-1'/>
<enum name='asiZoneName' value='-3'/>
<enum name='aspBadVersNum' value='-1066'/>
<enum name='aspBufTooSmall' value='-1067'/>
<enum name='aspNoAck' value='-1075'/>
<enum name='aspNoMoreSess' value='-1068'/>
<enum name='aspNoServers' value='-1069'/>
<enum name='aspParamErr' value='-1070'/>
<enum name='aspServerBusy' value='-1071'/>
<enum name='aspSessClosed' value='-1072'/>
<enum name='aspSizeErr' value='-1073'/>
<enum name='aspTooMany' value='-1074'/>
<enum name='atomIndexInvalidErr' value='-2104'/>
<enum name='atomsNotOfSameTypeErr' value='-2103'/>
<enum name='atpBadRsp' value='-3107'/>
<enum name='atpLenErr' value='-3106'/>
<enum name='authFailErr' value='-927'/>
<enum name='auxiliaryExportDataUnavailable' value='-2058'/>
<enum name='bAccessCntl' value='18'/>
<enum name='bAllowCDiDataHandler' value='17'/>
<enum name='bAncestorModDateChanges' value='11'/>
<enum name='bDoNotDisplay' value='24'/>
<enum name='bHasBTreeMgr' value='5'/>
<enum name='bHasBlankAccessPrivileges' value='4'/>
<enum name='bHasCatSearch' value='7'/>
<enum name='bHasCopyFile' value='14'/>
<enum name='bHasDesktopMgr' value='12'/>
<enum name='bHasDirectIO' value='1'/>
<enum name='bHasExtFSVol' value='16'/>
<enum name='bHasFileIDs' value='6'/>
<enum name='bHasFolderLock' value='10'/>
<enum name='bHasMoveRename' value='13'/>
<enum name='bHasOpenDeny' value='15'/>
<enum name='bHasPersonalAccessPrivileges' value='9'/>
<enum name='bHasShortName' value='11'/>
<enum name='bHasUserGroupList' value='8'/>
<enum name='bIsAutoMounted' value='14'/>
<enum name='bIsCasePreserving' value='23'/>
<enum name='bIsCaseSensitive' value='22'/>
<enum name='bIsEjectable' value='0'/>
<enum name='bIsOnExternalBus' value='27'/>
<enum name='bIsOnInternalBus' value='21'/>
<enum name='bIsRemovable' value='25'/>
<enum name='bL2PCanMapFileBlocks' value='9'/>
<enum name='bLimitFCBs' value='31'/>
<enum name='bLocalWList' value='30'/>
<enum name='bNoBootBlks' value='19'/>
<enum name='bNoDeskItems' value='20'/>
<enum name='bNoLclSync' value='27'/>
<enum name='bNoMiniFndr' value='29'/>
<enum name='bNoRootTimes' value='26'/>
<enum name='bNoSwitchTo' value='25'/>
<enum name='bNoSysDir' value='17'/>
<enum name='bNoVNEdit' value='28'/>
<enum name='bNoVolumeSizes' value='20'/>
<enum name='bParentModDateChanges' value='10'/>
<enum name='bSupports2TBFiles' value='4'/>
<enum name='bSupportsAsyncRequests' value='3'/>
<enum name='bSupportsExclusiveLocks' value='18'/>
<enum name='bSupportsExtendedFileSecurity' value='28'/>
<enum name='bSupportsFSCatalogSearch' value='2'/>
<enum name='bSupportsFSExchangeObjects' value='3'/>
<enum name='bSupportsHFSPlusAPIs' value='1'/>
<enum name='bSupportsJournaling' value='19'/>
<enum name='bSupportsLongNames' value='5'/>
<enum name='bSupportsMultiScriptNames' value='6'/>
<enum name='bSupportsNamedForks' value='7'/>
<enum name='bSupportsSubtreeIterators' value='8'/>
<enum name='bSupportsSymbolicLinks' value='13'/>
<enum name='bSupportsTrashVolumeCache' value='2'/>
<enum name='bTrshOffLine' value='26'/>
<enum name='badATPSkt' value='-1099'/>
<enum name='badBtSlpErr' value='-70'/>
<enum name='badBuffNum' value='-1100'/>
<enum name='badCallOrderErr' value='-2209'/>
<enum name='badChannel' value='-205'/>
<enum name='badCksmErr' value='-69'/>
<enum name='badCodecCharacterizationErr' value='-8993'/>
<enum name='badComponentInstance' value='-2147450879'/>
<enum name='badComponentSelector' value='-2147450878'/>
<enum name='badComponentType' value='-2005'/>
<enum name='badControllerHeight' value='-9994'/>
<enum name='badDBtSlp' value='-73'/>
<enum name='badDCksum' value='-72'/>
<enum name='badDataRefIndex' value='-2050'/>
<enum name='badDelim' value='3'/>
<enum name='badDepthErr' value='-2207'/>
<enum name='badDictFormat' value='-246'/>
<enum name='badDragFlavorErr' value='-1852'/>
<enum name='badDragItemErr' value='-1851'/>
<enum name='badDragRefErr' value='-1850'/>
<enum name='badEditIndex' value='-2033'/>
<enum name='badEditList' value='-2017'/>
<enum name='badEditionFileErr' value='-453'/>
<enum name='badEnding' value='4'/>
<enum name='badExtResource' value='-185'/>
<enum name='badFCBErr' value='-1327'/>
<enum name='badFidErr' value='-1307'/>
<enum name='badFileFormat' value='-208'/>
<enum name='badFolderDescErr' value='-4270'/>
<enum name='badFormat' value='-206'/>
<enum name='badImageDescription' value='-2001'/>
<enum name='badImageErr' value='-1861'/>
<enum name='badImageRgnErr' value='-1860'/>
<enum name='badInputText' value='-247'/>
<enum name='badLocNameErr' value='-931'/>
<enum name='badMDBErr' value='-60'/>
<enum name='badMovErr' value='-122'/>
<enum name='badPortNameErr' value='-919'/>
<enum name='badProfileError' value='-4008'/>
<enum name='badPublicMovieAtom' value='-2002'/>
<enum name='badReqErr' value='-909'/>
<enum name='badRoutingSizeErr' value='-4276'/>
<enum name='badSGChannel' value='-9406'/>
<enum name='badScrapRefErr' value='-4990'/>
<enum name='badSectionErr' value='-451'/>
<enum name='badServiceMethodErr' value='-930'/>
<enum name='badSubPartErr' value='-454'/>
<enum name='badTrackIndex' value='-2028'/>
<enum name='badTranslationSpecErr' value='-3031'/>
<enum name='badUnitErr' value='-21'/>
<enum name='baseDblQuote' value='227'/>
<enum name='baseSingQuote' value='226'/>
<enum name='bdNamErr' value='-37'/>
<enum name='breakRecd' value='-90'/>
<enum name='breveMark' value='249'/>
<enum name='btDupRecErr' value='-414'/>
<enum name='btKeyAttrErr' value='-417'/>
<enum name='btKeyLenErr' value='-416'/>
<enum name='btNoSpace' value='-413'/>
<enum name='btRecNotFnd' value='-415'/>
<enum name='buf2SmallErr' value='-3101'/>
<enum name='bufTooSmall' value='-243'/>
<enum name='bufferIsSmall' value='-607'/>
<enum name='buffersTooSmall' value='-210'/>
<enum name='cDepthErr' value='-157'/>
<enum name='cDevErr' value='-155'/>
<enum name='cMatchErr' value='-150'/>
<enum name='cNoMemErr' value='-152'/>
<enum name='cProtectErr' value='-154'/>
<enum name='cRangeErr' value='-153'/>
<enum name='cResErr' value='-156'/>
<enum name='cTempMemErr' value='-151'/>
<enum name='calArabicCivil' value='1'/>
<enum name='calArabicLunar' value='2'/>
<enum name='calCoptic' value='5'/>
<enum name='calGregorian' value='0'/>
<enum name='calJapanese' value='3'/>
<enum name='calJewish' value='4'/>
<enum name='calPersian' value='6'/>
<enum name='callNotSupportedByNodeErr' value='-30542'/>
<enum name='cannotBeLeafAtomErr' value='-2109'/>
<enum name='cannotDeferErr' value='-625'/>
<enum name='cannotFindAtomErr' value='-2101'/>
<enum name='cannotMakeContiguousErr' value='-622'/>
<enum name='cannotMoveAttachedController' value='-9999'/>
<enum name='cannotSetWidthOfAttachedController' value='-9997'/>
<enum name='cantCreatePickerWindow' value='-4004'/>
<enum name='cantCreateSingleForkFile' value='-2022'/>
<enum name='cantDoThatInCurrentMode' value='-9402'/>
<enum name='cantEnableTrack' value='-2035'/>
<enum name='cantFindHandler' value='-2003'/>
<enum name='cantGetFlavorErr' value='-1854'/>
<enum name='cantLoadPackage' value='-4005'/>
<enum name='cantLoadPickMethodErr' value='-11003'/>
<enum name='cantLoadPicker' value='-4003'/>
<enum name='cantOpenHandler' value='-2004'/>
<enum name='cantPutPublicMovieAtom' value='-2016'/>
<enum name='cantReadUtilities' value='33280'/>
<enum name='cantReceiveFromSynthesizerOSErr' value='-2073'/>
<enum name='cantSendToSynthesizerOSErr' value='-2072'/>
<enum name='cantStepErr' value='-75'/>
<enum name='catChangedErr' value='-1304'/>
<enum name='cbNotFound' value='-1102'/>
<enum name='cedilla' value='252'/>
<enum name='centeredDot' value='225'/>
<enum name='century' value='128'/>
<enum name='cfragAbortClosureErr' value='-2830'/>
<enum name='cfragArchitectureErr' value='-2823'/>
<enum name='cfragCFMInternalErr' value='-2819'/>
<enum name='cfragCFMStartupErr' value='-2818'/>
<enum name='cfragCFragRsrcErr' value='-2857'/>
<enum name='cfragClosureIDErr' value='-2829'/>
<enum name='cfragConnectionIDErr' value='-2801'/>
<enum name='cfragContainerIDErr' value='-2828'/>
<enum name='cfragContextIDErr' value='-2800'/>
<enum name='cfragDupRegistrationErr' value='-2805'/>
<enum name='cfragExecFileRefErr' value='-2854'/>
<enum name='cfragFileSizeErr' value='-2825'/>
<enum name='cfragFirstErrCode' value='-2800'/>
<enum name='cfragFirstReservedCode' value='-2897'/>
<enum name='cfragFragmentCorruptErr' value='-2820'/>
<enum name='cfragFragmentFormatErr' value='-2806'/>
<enum name='cfragFragmentUsageErr' value='-2824'/>
<enum name='cfragImportTooNewErr' value='-2814'/>
<enum name='cfragImportTooOldErr' value='-2813'/>
<enum name='cfragInitAtBootErr' value='-2816'/>
<enum name='cfragInitFunctionErr' value='-2821'/>
<enum name='cfragInitLoopErr' value='-2815'/>
<enum name='cfragInitOrderErr' value='-2812'/>
<enum name='cfragLastErrCode' value='-2899'/>
<enum name='cfragLibConnErr' value='-2817'/>
<enum name='cfragMapFileErr' value='-2851'/>
<enum name='cfragNoApplicationErr' value='-2822'/>
<enum name='cfragNoClientMemErr' value='-2810'/>
<enum name='cfragNoIDsErr' value='-2811'/>
<enum name='cfragNoLibraryErr' value='-2804'/>
<enum name='cfragNoPositionErr' value='-2808'/>
<enum name='cfragNoPrivateMemErr' value='-2809'/>
<enum name='cfragNoRegistrationErr' value='-2827'/>
<enum name='cfragNoSectionErr' value='-2803'/>
<enum name='cfragNoSymbolErr' value='-2802'/>
<enum name='cfragNotClosureErr' value='-2826'/>
<enum name='cfragOutputLengthErr' value='-2831'/>
<enum name='cfragReservedCode_1' value='-2899'/>
<enum name='cfragReservedCode_2' value='-2898'/>
<enum name='cfragReservedCode_3' value='-2897'/>
<enum name='cfragRsrcForkErr' value='-2856'/>
<enum name='cfragStdFolderErr' value='-2855'/>
<enum name='cfragUnresolvedErr' value='-2807'/>
<enum name='channelBusy' value='-209'/>
<enum name='channelNotBusy' value='-211'/>
<enum name='circumflex' value='246'/>
<enum name='circumflexUprA' value='229'/>
<enum name='circumflexUprE' value='230'/>
<enum name='circumflexUprI' value='235'/>
<enum name='circumflexUprO' value='239'/>
<enum name='circumflexUprU' value='243'/>
<enum name='ckSumErr' value='-3103'/>
<enum name='clkRdErr' value='-85'/>
<enum name='clkWrErr' value='-86'/>
<enum name='closErr' value='-24'/>
<enum name='cmCantConcatenateError' value='-178'/>
<enum name='cmCantCopyModifiedV1Profile' value='-4215'/>
<enum name='cmCantDeleteElement' value='-4202'/>
<enum name='cmCantDeleteProfile' value='-180'/>
<enum name='cmCantGamutCheckError' value='-4217'/>
<enum name='cmCantXYZ' value='-179'/>
<enum name='cmElementTagNotFound' value='-4200'/>
<enum name='cmErrIncompatibleProfile' value='-4208'/>
<enum name='cmFatalProfileErr' value='-4203'/>
<enum name='cmIndexRangeErr' value='-4201'/>
<enum name='cmInvalidColorSpace' value='-4209'/>
<enum name='cmInvalidDstMap' value='-4211'/>
<enum name='cmInvalidProfile' value='-4204'/>
<enum name='cmInvalidProfileComment' value='-4213'/>
<enum name='cmInvalidProfileLocation' value='-4205'/>
<enum name='cmInvalidSearch' value='-4206'/>
<enum name='cmInvalidSrcMap' value='-4210'/>
<enum name='cmMethodError' value='-171'/>
<enum name='cmMethodNotFound' value='-175'/>
<enum name='cmNamedColorNotFound' value='-4216'/>
<enum name='cmNoCurrentProfile' value='-182'/>
<enum name='cmNoGDevicesError' value='-4212'/>
<enum name='cmProfileError' value='-170'/>
<enum name='cmProfileNotFound' value='-176'/>
<enum name='cmProfilesIdentical' value='-177'/>
<enum name='cmRangeOverFlow' value='-4214'/>
<enum name='cmSearchError' value='-4207'/>
<enum name='cmUnsupportedDataType' value='-181'/>
<enum name='cmpAliasNoFlags' value='0'/>
<enum name='cmpAliasOnlyThisFile' value='1'/>
<enum name='cmpIsMissing' value='536870912'/>
<enum name='cmpThreadSafe' value='268435456'/>
<enum name='cmpWantsRegisterMessage' value='2147483648'/>
<enum name='codecAbortErr' value='-8967'/>
<enum name='codecBadDataErr' value='-8969'/>
<enum name='codecCantQueueErr' value='-8975'/>
<enum name='codecCantWhenErr' value='-8974'/>
<enum name='codecConditionErr' value='-8972'/>
<enum name='codecDataVersErr' value='-8970'/>
<enum name='codecDisabledErr' value='-8978'/>
<enum name='codecDroppedFrameErr' value='-8989'/>
<enum name='codecErr' value='-8960'/>
<enum name='codecExtensionNotFoundErr' value='-8971'/>
<enum name='codecImageBufErr' value='-8965'/>
<enum name='codecNeedAccessKeyErr' value='-8987'/>
<enum name='codecNeedToFlushChainErr' value='-8979'/>
<enum name='codecNoMemoryPleaseWaitErr' value='-8977'/>
<enum name='codecNothingToBlitErr' value='-8976'/>
<enum name='codecOffscreenFailedErr' value='-8988'/>
<enum name='codecOffscreenFailedPleaseRetryErr' value='-8992'/>
<enum name='codecOpenErr' value='-8973'/>
<enum name='codecParameterDialogConfirm' value='-8986'/>
<enum name='codecScreenBufErr' value='-8964'/>
<enum name='codecSizeErr' value='-8963'/>
<enum name='codecSpoolErr' value='-8966'/>
<enum name='codecUnimpErr' value='-8962'/>
<enum name='codecWouldOffscreenErr' value='-8968'/>
<enum name='collectionIndexRangeErr' value='-5752'/>
<enum name='collectionItemLockedErr' value='-5750'/>
<enum name='collectionItemNotFoundErr' value='-5751'/>
<enum name='collectionVersionErr' value='-5753'/>
<enum name='colorSyncNotInstalled' value='-4007'/>
<enum name='colorsRequestedErr' value='-11004'/>
<enum name='componentAutoVersionIncludeFlags' value='4'/>
<enum name='componentDllEntryNotFoundErr' value='-2092'/>
<enum name='componentDllLoadErr' value='-2091'/>
<enum name='componentDoAutoVersion' value='1'/>
<enum name='componentDontRegister' value='-3003'/>
<enum name='componentHasMultiplePlatforms' value='8'/>
<enum name='componentLoadResident' value='16'/>
<enum name='componentNotCaptured' value='-3002'/>
<enum name='componentNotThreadSafeErr' value='-2098'/>
<enum name='componentWantsUnregister' value='2'/>
<enum name='connectionInvalid' value='-609'/>
<enum name='constraintReachedErr' value='-30541'/>
<enum name='containerAlreadyOpenWrn' value='-462'/>
<enum name='containerNotFoundWrn' value='-461'/>
<enum name='controlErr' value='-17'/>
<enum name='controlHandleInvalidErr' value='-30599'/>
<enum name='controlInvalidDataVersionErr' value='-30597'/>
<enum name='controlPropertyInvalid' value='-5603'/>
<enum name='controlPropertyNotFoundErr' value='-5604'/>
<enum name='controllerBoundsNotExact' value='-9996'/>
<enum name='controllerHasFixedHeight' value='-9998'/>
<enum name='corErr' value='-3'/>
<enum name='coreFoundationUnknownErr' value='-4960'/>
<enum name='couldNotParseSourceFileErr' value='-3026'/>
<enum name='couldNotResolveDataRef' value='-2000'/>
<enum name='couldNotUseAnExistingSample' value='-2052'/>
<enum name='couldntGetRequiredComponent' value='-9405'/>
<enum name='crash' value='5'/>
<enum name='curNumberPartsVersion' value='1'/>
<enum name='currLeadingZ' value='128'/>
<enum name='currNegSym' value='32'/>
<enum name='currSymLead' value='16'/>
<enum name='currTrailingZ' value='64'/>
<enum name='currentCurLang' value='-4'/>
<enum name='currentDefLang' value='-5'/>
<enum name='dInstErr' value='-26'/>
<enum name='dRemovErr' value='-25'/>
<enum name='dataAlreadyClosed' value='-2045'/>
<enum name='dataAlreadyOpenForWrite' value='-2044'/>
<enum name='dataNoDataRef' value='-2047'/>
<enum name='dataNotOpenForRead' value='-2042'/>
<enum name='dataNotOpenForWrite' value='-2043'/>
<enum name='dataVerErr' value='-68'/>
<enum name='dateStdMask' value='127'/>
<enum name='dateTimeInvalid' value='34816'/>
<enum name='dateTimeNotFound' value='33792'/>
<enum name='dayField' value='3'/>
<enum name='dayLdingZ' value='32'/>
<enum name='dayMask' value='8'/>
<enum name='dayOfWeekField' value='7'/>
<enum name='dayOfWeekMask' value='128'/>
<enum name='dayOfYearField' value='8'/>
<enum name='dayOfYearMask' value='256'/>
<enum name='dblDagger' value='224'/>
<enum name='dceExtErr' value='-30'/>
<enum name='dcmBadDataSizeErr' value='-7117'/>
<enum name='dcmBadDictionaryErr' value='-7102'/>
<enum name='dcmBadFeatureErr' value='-7124'/>
<enum name='dcmBadFieldInfoErr' value='-7111'/>
<enum name='dcmBadFieldTypeErr' value='-7112'/>
<enum name='dcmBadFindMethodErr' value='-7118'/>
<enum name='dcmBadKeyErr' value='-7115'/>
<enum name='dcmBadPropertyErr' value='-7119'/>
<enum name='dcmBlockFullErr' value='-7107'/>
<enum name='dcmBufferOverflowErr' value='-7127'/>
<enum name='dcmDictionaryBusyErr' value='-7105'/>
<enum name='dcmDictionaryNotOpenErr' value='-7104'/>
<enum name='dcmDupRecordErr' value='-7109'/>
<enum name='dcmIterationCompleteErr' value='-7126'/>
<enum name='dcmNecessaryFieldErr' value='-7110'/>
<enum name='dcmNoAccessMethodErr' value='-7122'/>
<enum name='dcmNoFieldErr' value='-7113'/>
<enum name='dcmNoRecordErr' value='-7108'/>
<enum name='dcmNotDictionaryErr' value='-7101'/>
<enum name='dcmParamErr' value='-7100'/>
<enum name='dcmPermissionErr' value='-7103'/>
<enum name='dcmProtectedErr' value='-7121'/>
<enum name='dcmTooManyKeyErr' value='-7116'/>
<enum name='ddpLenErr' value='-92'/>
<enum name='ddpSktErr' value='-91'/>
<enum name='debuggingDuplicateOptionErr' value='-13882'/>
<enum name='debuggingDuplicateSignatureErr' value='-13881'/>
<enum name='debuggingExecutionContextErr' value='-13880'/>
<enum name='debuggingInvalidNameErr' value='-13885'/>
<enum name='debuggingInvalidOptionErr' value='-13884'/>
<enum name='debuggingInvalidSignatureErr' value='-13883'/>
<enum name='debuggingNoCallbackErr' value='-13886'/>
<enum name='debuggingNoMatchErr' value='-13887'/>
<enum name='defaultComponentAnyFlags' value='1'/>
<enum name='defaultComponentAnyFlagsAnyManufacturer' value='3'/>
<enum name='defaultComponentAnyFlagsAnyManufacturerAnySubType' value='7'/>
<enum name='defaultComponentAnyManufacturer' value='2'/>
<enum name='defaultComponentAnySubType' value='4'/>
<enum name='defaultComponentIdentical' value='0'/>
<enum name='defaultPhysicalEntryCount' value='8'/>
<enum name='delimPad' value='-2'/>
<enum name='desktopDamagedErr' value='-1305'/>
<enum name='destPortErr' value='-906'/>
<enum name='deviceCantMeetRequest' value='-9408'/>
<enum name='diaeresisUprE' value='232'/>
<enum name='diaeresisUprI' value='236'/>
<enum name='diaeresisUprY' value='217'/>
<enum name='dialogNoTimeoutErr' value='-5640'/>
<enum name='diffVolErr' value='-1303'/>
<enum name='digiUnimpErr' value='-2201'/>
<enum name='dirFulErr' value='-33'/>
<enum name='dirNFErr' value='-120'/>
<enum name='directXObjectAlreadyExists' value='-8990'/>
<enum name='dmy' value='1'/>
<enum name='dotlessLwrI' value='245'/>
<enum name='doubleAcute' value='253'/>
<enum name='dragNotAcceptedErr' value='-1857'/>
<enum name='driverHardwareGoneErr' value='-503'/>
<enum name='drvQType' value='3'/>
<enum name='ds32BitMode' value='103'/>
<enum name='dsAddressErr' value='2'/>
<enum name='dsBadLaunch' value='26'/>
<enum name='dsBadLibrary' value='1010'/>
<enum name='dsBadPatch' value='99'/>
<enum name='dsBadPatchHeader' value='83'/>
<enum name='dsBadSANEOpcode' value='81'/>
<enum name='dsBadSlotInt' value='51'/>
<enum name='dsBadStartupDisk' value='42'/>
<enum name='dsBufPtrTooLow' value='106'/>
<enum name='dsBusError' value='1'/>
<enum name='dsCDEFNotFound' value='88'/>
<enum name='dsCantHoldSystemHeap' value='114'/>
<enum name='dsChkErr' value='5'/>
<enum name='dsCoreErr' value='12'/>
<enum name='dsDirtyDisk' value='20004'/>
<enum name='dsDisassemblerInstalled' value='-11'/>
<enum name='dsExtensionsDisabled' value='-13'/>
<enum name='dsFPErr' value='16'/>
<enum name='dsFSErr' value='27'/>
<enum name='dsFinderErr' value='41'/>
<enum name='dsForcedQuit' value='20002'/>
<enum name='dsGibblyMovedToDisabledFolder' value='117'/>
<enum name='dsGreeting' value='40'/>
<enum name='dsHD20Installed' value='-12'/>
<enum name='dsHMenuFindErr' value='86'/>
<enum name='dsIOCoreErr' value='14'/>
<enum name='dsIllInstErr' value='3'/>
<enum name='dsIrqErr' value='13'/>
<enum name='dsLineAErr' value='9'/>
<enum name='dsLineFErr' value='10'/>
<enum name='dsLoadErr' value='15'/>
<enum name='dsLostConnectionToNetworkDisk' value='121'/>
<enum name='dsMBATAPISysError' value='29203'/>
<enum name='dsMBATASysError' value='29202'/>
<enum name='dsMBExternFlpySysError' value='29204'/>
<enum name='dsMBFlpySysError' value='29201'/>
<enum name='dsMBSysError' value='29200'/>
<enum name='dsMBarNFnd' value='85'/>
<enum name='dsMDEFNotFound' value='89'/>
<enum name='dsMacOSROMVersionTooOld' value='120'/>
<enum name='dsMacsBugInstalled' value='-10'/>
<enum name='dsMemFullErr' value='25'/>
<enum name='dsMiscErr' value='11'/>
<enum name='dsMixedModeFailure' value='1011'/>
<enum name='dsMustUseFCBAccessors' value='119'/>
<enum name='dsNeedToWriteBootBlocks' value='104'/>
<enum name='dsNoExtsDisassembler' value='-2'/>
<enum name='dsNoExtsMacsBug' value='-1'/>
<enum name='dsNoFPU' value='90'/>
<enum name='dsNoPackErr' value='17'/>
<enum name='dsNoPatch' value='98'/>
<enum name='dsNoPk1' value='18'/>
<enum name='dsNoPk2' value='19'/>
<enum name='dsNoPk3' value='20'/>
<enum name='dsNoPk4' value='21'/>
<enum name='dsNoPk5' value='22'/>
<enum name='dsNoPk6' value='23'/>
<enum name='dsNoPk7' value='24'/>
<enum name='dsNotEnoughRAMToBoot' value='105'/>
<enum name='dsNotThe1' value='31'/>
<enum name='dsOldSystem' value='102'/>
<enum name='dsOvflowErr' value='6'/>
<enum name='dsPCCardATASysError' value='29205'/>
<enum name='dsParityErr' value='101'/>
<enum name='dsPrivErr' value='7'/>
<enum name='dsRAMDiskTooBig' value='122'/>
<enum name='dsReinsert' value='30'/>
<enum name='dsRemoveDisk' value='20003'/>
<enum name='dsSCSIWarn' value='20010'/>
<enum name='dsShutDownOrRestart' value='20000'/>
<enum name='dsShutDownOrResume' value='20109'/>
<enum name='dsStknHeap' value='28'/>
<enum name='dsSwitchOffOrRestart' value='20001'/>
<enum name='dsSysErr' value='32767'/>
<enum name='dsSystemFileErr' value='43'/>
<enum name='dsSystemRequiresPowerPC' value='116'/>
<enum name='dsTraceErr' value='8'/>
<enum name='dsUnBootableSystem' value='118'/>
<enum name='dsVMBadBackingStore' value='113'/>
<enum name='dsVMDeferredFuncTableFull' value='112'/>
<enum name='dsWDEFNotFound' value='87'/>
<enum name='dsWriteToSupervisorStackGuardPage' value='128'/>
<enum name='dsZeroDivErr' value='4'/>
<enum name='dskFulErr' value='-34'/>
<enum name='dtQType' value='7'/>
<enum name='dummyType' value='0'/>
<enum name='dupFNErr' value='-48'/>
<enum name='duplicateAtomTypeAndIDErr' value='-2105'/>
<enum name='duplicateFlavorErr' value='-1853'/>
<enum name='duplicateFolderDescErr' value='-4271'/>
<enum name='duplicateHandlerErr' value='-1855'/>
<enum name='duplicateRoutingErr' value='-4274'/>
<enum name='duplicateScrapFlavorErr' value='-4989'/>
<enum name='durationDay' value='86400000'/>
<enum name='durationForever' value='2147483647'/>
<enum name='durationHour' value='3600000'/>
<enum name='durationMicrosecond' value='-1'/>
<enum name='durationMillisecond' value='1'/>
<enum name='durationMinute' value='60000'/>
<enum name='durationNoWait' value='0'/>
<enum name='durationSecond' value='1000'/>
<enum name='dym' value='4'/>
<enum name='eLenErr' value='-92'/>
<enum name='eMultiErr' value='-91'/>
<enum name='editingNotAllowed' value='-9995'/>
<enum name='editionMgrInitErr' value='-450'/>
<enum name='emptyPathErr' value='-2111'/>
<enum name='endOfDataReached' value='-2046'/>
<enum name='envBadVers' value='-5501'/>
<enum name='envNotPresent' value='-5500'/>
<enum name='envVersTooBig' value='-5502'/>
<enum name='eofErr' value='-39'/>
<enum name='eraField' value='0'/>
<enum name='eraMask' value='1'/>
<enum name='errAEAccessorNotFound' value='-1723'/>
<enum name='errAEBadKeyForm' value='-10002'/>
<enum name='errAEBadListItem' value='-1705'/>
<enum name='errAEBadTestKey' value='-1726'/>
<enum name='errAEBufferTooSmall' value='-1741'/>
<enum name='errAEBuildSyntaxError' value='-1740'/>
<enum name='errAECantHandleClass' value='-10010'/>
<enum name='errAECantPutThatThere' value='-10024'/>
<enum name='errAECantSupplyType' value='-10009'/>
<enum name='errAECantUndo' value='-10015'/>
<enum name='errAECoercionFail' value='-1700'/>
<enum name='errAECorruptData' value='-1702'/>
<enum name='errAEDescIsNull' value='-1739'/>
<enum name='errAEDescNotFound' value='-1701'/>
<enum name='errAEDuplicateHandler' value='-1736'/>
<enum name='errAEEmptyListContainer' value='-1730'/>
<enum name='errAEEventFailed' value='-10000'/>
<enum name='errAEEventFiltered' value='-1735'/>
<enum name='errAEEventNotHandled' value='-1708'/>
<enum name='errAEHandlerNotFound' value='-1717'/>
<enum name='errAEIllegalIndex' value='-1719'/>
<enum name='errAEImpossibleRange' value='-1720'/>
<enum name='errAEInTransaction' value='-10011'/>
<enum name='errAEIndexTooLarge' value='-10007'/>
<enum name='errAELocalOnly' value='-10016'/>
<enum name='errAENegativeCount' value='-1729'/>
<enum name='errAENewerVersion' value='-1706'/>
<enum name='errAENoSuchLogical' value='-1725'/>
<enum name='errAENoSuchObject' value='-1728'/>
<enum name='errAENoSuchTransaction' value='-10012'/>
<enum name='errAENoUserInteraction' value='-1713'/>
<enum name='errAENoUserSelection' value='-10013'/>
<enum name='errAENotAEDesc' value='-1704'/>
<enum name='errAENotASingleObject' value='-10014'/>
<enum name='errAENotASpecialFunction' value='-1714'/>
<enum name='errAENotAnElement' value='-10008'/>
<enum name='errAENotAnEnumMember' value='-10023'/>
<enum name='errAENotAnObjSpec' value='-1727'/>
<enum name='errAENotAppleEvent' value='-1707'/>
<enum name='errAENotModifiable' value='-10003'/>
<enum name='errAEParamMissed' value='-1715'/>
<enum name='errAEPrivilegeError' value='-10004'/>
<enum name='errAEPropertiesClash' value='-10025'/>
<enum name='errAEReadDenied' value='-10005'/>
<enum name='errAEReceiveEscapeCurrent' value='-1734'/>
<enum name='errAEReceiveTerminate' value='-1733'/>
<enum name='errAERecordingIsAlreadyOn' value='-1732'/>
<enum name='errAEReplyNotArrived' value='-1718'/>
<enum name='errAEReplyNotValid' value='-1709'/>
<enum name='errAEStreamAlreadyConverted' value='-1738'/>
<enum name='errAEStreamBadNesting' value='-1737'/>
<enum name='errAETimeout' value='-1712'/>
<enum name='errAETypeError' value='-10001'/>
<enum name='errAEUnknownAddressType' value='-1716'/>
<enum name='errAEUnknownObjectType' value='-1731'/>
<enum name='errAEUnknownSendMode' value='-1710'/>
<enum name='errAEWaitCanceled' value='-1711'/>
<enum name='errAEWriteDenied' value='-10006'/>
<enum name='errAEWrongDataType' value='-1703'/>
<enum name='errAEWrongNumberArgs' value='-1721'/>
<enum name='errASCantCompareMoreThan32k' value='-2721'/>
<enum name='errASCantConsiderAndIgnore' value='-2720'/>
<enum name='errASIllegalFormalParameter' value='-2761'/>
<enum name='errASInconsistentNames' value='-2780'/>
<enum name='errASNoResultReturned' value='-2763'/>
<enum name='errASParameterNotForEvent' value='-2762'/>
<enum name='errASTerminologyNestingTooDeep' value='-2760'/>
<enum name='errAborted' value='-1279'/>
<enum name='errAlreadyInImagingMode' value='-5243'/>
<enum name='errAttention' value='-1276'/>
<enum name='errCanNotInsertWhileWalkProcInProgress' value='-963'/>
<enum name='errCannotUndo' value='-5253'/>
<enum name='errCantEmbedIntoSelf' value='-30594'/>
<enum name='errCantEmbedRoot' value='-30595'/>
<enum name='errControlDoesntSupportFocus' value='-30582'/>
<enum name='errControlHiddenOrDisabled' value='-30592'/>
<enum name='errControlIsNotEmbedder' value='-30590'/>
<enum name='errControlsAlreadyExist' value='-30589'/>
<enum name='errCoreEndianDataDoesNotMatchFormat' value='-4942'/>
<enum name='errCoreEndianDataTooLongForFormat' value='-4941'/>
<enum name='errCoreEndianDataTooShortForFormat' value='-4940'/>
<enum name='errCorruptWindowDescription' value='-5606'/>
<enum name='errCouldntSetFocus' value='-30585'/>
<enum name='errCppGeneral' value='-32000'/>
<enum name='errCppLastSystemDefinedError' value='-32020'/>
<enum name='errCppLastUserDefinedError' value='-32049'/>
<enum name='errCppbad_alloc' value='-32001'/>
<enum name='errCppbad_cast' value='-32002'/>
<enum name='errCppbad_exception' value='-32003'/>
<enum name='errCppbad_typeid' value='-32004'/>
<enum name='errCppdomain_error' value='-32006'/>
<enum name='errCppinvalid_argument' value='-32007'/>
<enum name='errCppios_base_failure' value='-32014'/>
<enum name='errCpplength_error' value='-32008'/>
<enum name='errCpplogic_error' value='-32005'/>
<enum name='errCppout_of_range' value='-32009'/>
<enum name='errCppoverflow_error' value='-32011'/>
<enum name='errCpprange_error' value='-32012'/>
<enum name='errCppruntime_error' value='-32010'/>
<enum name='errCppunderflow_error' value='-32013'/>
<enum name='errDSPQueueSize' value='-1274'/>
<enum name='errDataNotSupported' value='-30581'/>
<enum name='errDataSizeMismatch' value='-30591'/>
<enum name='errEmptyScrap' value='-5249'/>
<enum name='errEndOfBody' value='-1813'/>
<enum name='errEndOfDocument' value='-1812'/>
<enum name='errEngineNotFound' value='-5244'/>
<enum name='errFSAttributeNotFound' value='-1427'/>
<enum name='errFSBadAllocFlags' value='-1413'/>
<enum name='errFSBadBuffer' value='-1403'/>
<enum name='errFSBadFSRef' value='-1401'/>
<enum name='errFSBadForkName' value='-1402'/>
<enum name='errFSBadForkRef' value='-1404'/>
<enum name='errFSBadInfoBitmap' value='-1405'/>
<enum name='errFSBadItemCount' value='-1418'/>
<enum name='errFSBadIteratorFlags' value='-1422'/>
<enum name='errFSBadPosMode' value='-1412'/>
<enum name='errFSBadSearchParams' value='-1419'/>
<enum name='errFSForkExists' value='-1421'/>
<enum name='errFSForkNotFound' value='-1409'/>
<enum name='errFSIteratorNotFound' value='-1423'/>
<enum name='errFSIteratorNotSupported' value='-1424'/>
<enum name='errFSMissingCatInfo' value='-1406'/>
<enum name='errFSMissingName' value='-1411'/>
<enum name='errFSNameTooLong' value='-1410'/>
<enum name='errFSNoMoreItems' value='-1417'/>
<enum name='errFSNotAFolder' value='-1407'/>
<enum name='errFSNotEnoughSpaceForOperation' value='-1429'/>
<enum name='errFSOperationNotSupported' value='-1426'/>
<enum name='errFSPropertyNotValid' value='-1428'/>
<enum name='errFSQuotaExceeded' value='-1425'/>
<enum name='errFSRefsDifferent' value='-1420'/>
<enum name='errFSUnknownCall' value='-1400'/>
<enum name='errFloatingWindowsNotInitialized' value='-5609'/>
<enum name='errFwdReset' value='-1275'/>
<enum name='errIAAllocationErr' value='-5381'/>
<enum name='errIABufferTooSmall' value='-5384'/>
<enum name='errIACanceled' value='-5385'/>
<enum name='errIAEndOfTextRun' value='-5388'/>
<enum name='errIAInvalidDocument' value='-5386'/>
<enum name='errIANoErr' value='0'/>
<enum name='errIANoMoreItems' value='-5383'/>
<enum name='errIAParamErr' value='-5382'/>
<enum name='errIATextExtractionErr' value='-5387'/>
<enum name='errIAUnknownErr' value='-5380'/>
<enum name='errInvalidPartCode' value='-30588'/>
<enum name='errInvalidRange' value='-5246'/>
<enum name='errInvalidWindowProperty' value='-5603'/>
<enum name='errInvalidWindowPtr' value='-5600'/>
<enum name='errInvalidWindowRef' value='-5600'/>
<enum name='errItemAlreadyInTree' value='-960'/>
<enum name='errItemNotControl' value='-30596'/>
<enum name='errItemNotFoundInTree' value='-962'/>
<enum name='errIteratorReachedEnd' value='-5245'/>
<enum name='errKCAuthFailed' value='-25293'/>
<enum name='errKCBufferTooSmall' value='-25301'/>
<enum name='errKCCreateChainFailed' value='-25318'/>
<enum name='errKCDataNotAvailable' value='-25316'/>
<enum name='errKCDataNotModifiable' value='-25317'/>
<enum name='errKCDataTooLarge' value='-25302'/>
<enum name='errKCDuplicateCallback' value='-25297'/>
<enum name='errKCDuplicateItem' value='-25299'/>
<enum name='errKCDuplicateKeychain' value='-25296'/>
<enum name='errKCInteractionNotAllowed' value='-25308'/>
<enum name='errKCInteractionRequired' value='-25315'/>
<enum name='errKCInvalidCallback' value='-25298'/>
<enum name='errKCInvalidItemRef' value='-25304'/>
<enum name='errKCInvalidKeychain' value='-25295'/>
<enum name='errKCInvalidSearchRef' value='-25305'/>
<enum name='errKCItemNotFound' value='-25300'/>
<enum name='errKCKeySizeNotAllowed' value='-25311'/>
<enum name='errKCNoCertificateModule' value='-25313'/>
<enum name='errKCNoDefaultKeychain' value='-25307'/>
<enum name='errKCNoPolicyModule' value='-25314'/>
<enum name='errKCNoStorageModule' value='-25312'/>
<enum name='errKCNoSuchAttr' value='-25303'/>
<enum name='errKCNoSuchClass' value='-25306'/>
<enum name='errKCNoSuchKeychain' value='-25294'/>
<enum name='errKCNotAvailable' value='-25291'/>
<enum name='errKCReadOnly' value='-25292'/>
<enum name='errKCReadOnlyAttr' value='-25309'/>
<enum name='errKCWrongKCVersion' value='-25310'/>
<enum name='errMarginWilllNotFit' value='-5241'/>
<enum name='errMessageNotSupported' value='-30580'/>
<enum name='errNoHiliteText' value='-5248'/>
<enum name='errNoRootControl' value='-30586'/>
<enum name='errNonContiuousAttribute' value='-5252'/>
<enum name='errNotInImagingMode' value='-5242'/>
<enum name='errNotValidTree' value='-961'/>
<enum name='errOSAAppNotHighLevelEventAware' value='-2704'/>
<enum name='errOSABadSelector' value='-1754'/>
<enum name='errOSABadStorageType' value='-1752'/>
<enum name='errOSACantAccess' value='-1728'/>
<enum name='errOSACantAssign' value='-10006'/>
<enum name='errOSACantCoerce' value='-1700'/>
<enum name='errOSACantCreate' value='-2710'/>
<enum name='errOSACantGetTerminology' value='-2709'/>
<enum name='errOSACantLaunch' value='-2703'/>
<enum name='errOSACantOpenComponent' value='-1762'/>
<enum name='errOSACantStorePointers' value='-1763'/>
<enum name='errOSAComponentMismatch' value='-1761'/>
<enum name='errOSACorruptData' value='-1702'/>
<enum name='errOSACorruptTerminology' value='-2705'/>
<enum name='errOSADataBlockTooLarge' value='-2708'/>
<enum name='errOSADataFormatObsolete' value='-1758'/>
<enum name='errOSADataFormatTooNew' value='-1759'/>
<enum name='errOSADivideByZero' value='-2701'/>
<enum name='errOSAGeneralError' value='-2700'/>
<enum name='errOSAInternalTableOverflow' value='-2707'/>
<enum name='errOSAInvalidID' value='-1751'/>
<enum name='errOSANoSuchDialect' value='-1757'/>
<enum name='errOSANumericOverflow' value='-2702'/>
<enum name='errOSARecordingIsAlreadyOn' value='-1732'/>
<enum name='errOSAScriptError' value='-1753'/>
<enum name='errOSASourceNotAvailable' value='-1756'/>
<enum name='errOSAStackOverflow' value='-2706'/>
<enum name='errOSASystemError' value='-1750'/>
<enum name='errOSATypeError' value='-1703'/>
<enum name='errOffsetInvalid' value='-1800'/>
<enum name='errOffsetIsOutsideOfView' value='-1801'/>
<enum name='errOffsetNotOnElementBounday' value='-5247'/>
<enum name='errOpenDenied' value='-1273'/>
<enum name='errOpening' value='-1277'/>
<enum name='errReadOnlyText' value='-5250'/>
<enum name='errRefNum' value='-1280'/>
<enum name='errRootAlreadyExists' value='-30587'/>
<enum name='errState' value='-1278'/>
<enum name='errTaskNotFound' value='-10780'/>
<enum name='errTopOfBody' value='-1811'/>
<enum name='errTopOfDocument' value='-1810'/>
<enum name='errTreeIsLocked' value='-964'/>
<enum name='errUnknownAttributeTag' value='-5240'/>
<enum name='errUnknownControl' value='-30584'/>
<enum name='errUnknownElement' value='-5251'/>
<enum name='errUnrecognizedWindowClass' value='-5605'/>
<enum name='errUnsupportedWindowAttributesForClass' value='-5601'/>
<enum name='errUserWantsToDragWindow' value='-5607'/>
<enum name='errWindowDoesNotFitOnscreen' value='-5611'/>
<enum name='errWindowDoesNotHaveProxy' value='-5602'/>
<enum name='errWindowDoesntSupportFocus' value='-30583'/>
<enum name='errWindowNotFound' value='-5610'/>
<enum name='errWindowPropertyNotFound' value='-5604'/>
<enum name='errWindowRegionCodeInvalid' value='-30593'/>
<enum name='errWindowsAlreadyInitialized' value='-5608'/>
<enum name='evType' value='4'/>
<enum name='evtNotEnb' value='1'/>
<enum name='exUserBreak' value='-492'/>
<enum name='excessCollsns' value='-95'/>
<enum name='extFSErr' value='-58'/>
<enum name='extractErr' value='-3104'/>
<enum name='extraneousStrings' value='16'/>
<enum name='fBadPartsTable' value='10'/>
<enum name='fBestGuess' value='1'/>
<enum name='fBsyErr' value='-47'/>
<enum name='fDesktop' value='-2'/>
<enum name='fDisk' value='0'/>
<enum name='fEmptyFormatString' value='13'/>
<enum name='fExtraDecimal' value='5'/>
<enum name='fExtraExp' value='7'/>
<enum name='fExtraPercent' value='11'/>
<enum name='fExtraSeparator' value='12'/>
<enum name='fFormStrIsNAN' value='9'/>
<enum name='fFormatOK' value='0'/>
<enum name='fFormatOverflow' value='8'/>
<enum name='fHasBundle' value='8192'/>
<enum name='fInvisible' value='16384'/>
<enum name='fLckdErr' value='-45'/>
<enum name='fMissingDelimiter' value='4'/>
<enum name='fMissingLiteral' value='6'/>
<enum name='fNegative' value='1'/>
<enum name='fOnDesk' value='1'/>
<enum name='fOutOfSynch' value='2'/>
<enum name='fPositive' value='0'/>
<enum name='fSpuriousChars' value='3'/>
<enum name='fTrash' value='-3'/>
<enum name='fVNumber' value='0'/>
<enum name='fZero' value='2'/>
<enum name='false32b' value='0'/>
<enum name='fatalDateTime' value='32768'/>
<enum name='featureUnsupported' value='-2053'/>
<enum name='fetchReference' value='2'/>
<enum name='fiLigature' value='222'/>
<enum name='fidExists' value='-1301'/>
<enum name='fidNotFound' value='-1300'/>
<enum name='fieldOrderNotIntl' value='8'/>
<enum name='fileBoundsErr' value='-1309'/>
<enum name='fileOffsetTooBigErr' value='-2125'/>
<enum name='firstDskErr' value='-84'/>
<enum name='firstPickerError' value='-4000'/>
<enum name='fixed1' value='65536'/>
<enum name='flLigature' value='223'/>
<enum name='fmt1Err' value='-82'/>
<enum name='fmt2Err' value='-83'/>
<enum name='fnOpnErr' value='-38'/>
<enum name='fnfErr' value='-43'/>
<enum name='fontDecError' value='-64'/>
<enum name='fontNotDeclared' value='-65'/>
<enum name='fontNotOutlineErr' value='-32615'/>
<enum name='fontSubErr' value='-66'/>
<enum name='forceReadBit' value='6'/>
<enum name='forceReadMask' value='64'/>
<enum name='fract1' value='1073741824'/>
<enum name='fraction' value='218'/>
<enum name='fsAtMark' value='0'/>
<enum name='fsCurPerm' value='0'/>
<enum name='fsDSIntErr' value='-127'/>
<enum name='fsDataTooBigErr' value='-1310'/>
<enum name='fsFromLEOF' value='2'/>
<enum name='fsFromMark' value='3'/>
<enum name='fsFromStart' value='1'/>
<enum name='fsQType' value='5'/>
<enum name='fsRdAccessPerm' value='1'/>
<enum name='fsRdDenyPerm' value='16'/>
<enum name='fsRdPerm' value='1'/>
<enum name='fsRdWrPerm' value='3'/>
<enum name='fsRdWrShPerm' value='4'/>
<enum name='fsRnErr' value='-59'/>
<enum name='fsRtDirID' value='2'/>
<enum name='fsRtParID' value='1'/>
<enum name='fsSBAccessDate' value='131072'/>
<enum name='fsSBAccessDateBit' value='17'/>
<enum name='fsSBAttributeModDate' value='65536'/>
<enum name='fsSBAttributeModDateBit' value='16'/>
<enum name='fsSBDrBkDat' value='2048'/>
<enum name='fsSBDrBkDatBit' value='11'/>
<enum name='fsSBDrCrDat' value='512'/>
<enum name='fsSBDrCrDatBit' value='9'/>
<enum name='fsSBDrFndrInfo' value='4096'/>
<enum name='fsSBDrFndrInfoBit' value='12'/>
<enum name='fsSBDrMdDat' value='1024'/>
<enum name='fsSBDrMdDatBit' value='10'/>
<enum name='fsSBDrNmFls' value='16'/>
<enum name='fsSBDrNmFlsBit' value='4'/>
<enum name='fsSBDrParID' value='8192'/>
<enum name='fsSBDrParIDBit' value='13'/>
<enum name='fsSBDrUsrWds' value='8'/>
<enum name='fsSBDrUsrWdsBit' value='3'/>
<enum name='fsSBFlAttrib' value='4'/>
<enum name='fsSBFlAttribBit' value='2'/>
<enum name='fsSBFlBkDat' value='2048'/>
<enum name='fsSBFlBkDatBit' value='11'/>
<enum name='fsSBFlCrDat' value='512'/>
<enum name='fsSBFlCrDatBit' value='9'/>
<enum name='fsSBFlFndrInfo' value='8'/>
<enum name='fsSBFlFndrInfoBit' value='3'/>
<enum name='fsSBFlLgLen' value='32'/>
<enum name='fsSBFlLgLenBit' value='5'/>
<enum name='fsSBFlMdDat' value='1024'/>
<enum name='fsSBFlMdDatBit' value='10'/>
<enum name='fsSBFlParID' value='8192'/>
<enum name='fsSBFlParIDBit' value='13'/>
<enum name='fsSBFlPyLen' value='64'/>
<enum name='fsSBFlPyLenBit' value='6'/>
<enum name='fsSBFlRLgLen' value='128'/>
<enum name='fsSBFlRLgLenBit' value='7'/>
<enum name='fsSBFlRPyLen' value='256'/>
<enum name='fsSBFlRPyLenBit' value='8'/>
<enum name='fsSBFlXFndrInfo' value='4096'/>
<enum name='fsSBFlXFndrInfoBit' value='12'/>
<enum name='fsSBFullName' value='2'/>
<enum name='fsSBFullNameBit' value='1'/>
<enum name='fsSBGroupID' value='4194304'/>
<enum name='fsSBGroupIDBit' value='22'/>
<enum name='fsSBNegate' value='16384'/>
<enum name='fsSBNegateBit' value='14'/>
<enum name='fsSBNodeID' value='32768'/>
<enum name='fsSBNodeIDBit' value='15'/>
<enum name='fsSBPartialName' value='1'/>
<enum name='fsSBPartialNameBit' value='0'/>
<enum name='fsSBPermissions' value='262144'/>
<enum name='fsSBPermissionsBit' value='18'/>
<enum name='fsSBSkipHiddenItems' value='1048576'/>
<enum name='fsSBSkipHiddenItemsBit' value='20'/>
<enum name='fsSBSkipPackageContents' value='524288'/>
<enum name='fsSBSkipPackageContentsBit' value='19'/>
<enum name='fsSBUserID' value='2097152'/>
<enum name='fsSBUserIDBit' value='21'/>
<enum name='fsUnixPriv' value='1'/>
<enum name='fsWrAccessPerm' value='2'/>
<enum name='fsWrDenyPerm' value='32'/>
<enum name='fsWrPerm' value='2'/>
<enum name='fsmBadFFSNameErr' value='-433'/>
<enum name='fsmBadFSDLenErr' value='-434'/>
<enum name='fsmBadFSDVersionErr' value='-436'/>
<enum name='fsmBusyFFSErr' value='-432'/>
<enum name='fsmDuplicateFSIDErr' value='-435'/>
<enum name='fsmFFSNotFoundErr' value='-431'/>
<enum name='fsmNoAlternateStackErr' value='-437'/>
<enum name='fsmUnknownFSMMessageErr' value='-438'/>
<enum name='gWorldsNotSameDepthAndSizeErr' value='-2066'/>
<enum name='gcrOnMFMErr' value='-400'/>
<enum name='genCdevRangeBit' value='27'/>
<enum name='gestalt16BitAudioSupport' value='12'/>
<enum name='gestalt16BitSoundIO' value='7'/>
<enum name='gestalt20thAnniversary' value='512'/>
<enum name='gestalt32BitAddressing' value='0'/>
<enum name='gestalt32BitCapable' value='2'/>
<enum name='gestalt32BitQD' value='512'/>
<enum name='gestalt32BitQD11' value='513'/>
<enum name='gestalt32BitQD12' value='544'/>
<enum name='gestalt32BitQD13' value='560'/>
<enum name='gestalt32BitSysZone' value='1'/>
<enum name='gestalt68000' value='1'/>
<enum name='gestalt68010' value='2'/>
<enum name='gestalt68020' value='3'/>
<enum name='gestalt68030' value='4'/>
<enum name='gestalt68030MMU' value='3'/>
<enum name='gestalt68040' value='5'/>
<enum name='gestalt68040FPU' value='3'/>
<enum name='gestalt68040MMU' value='4'/>
<enum name='gestalt68851' value='2'/>
<enum name='gestalt68881' value='1'/>
<enum name='gestalt68882' value='2'/>
<enum name='gestalt68k' value='1'/>
<enum name='gestalt8BitQD' value='256'/>
<enum name='gestaltADBISOKbdII' value='11'/>
<enum name='gestaltADBKbdII' value='10'/>
<enum name='gestaltAFPClient' value='1634103411'/>
<enum name='gestaltAFPClient3_5' value='1'/>
<enum name='gestaltAFPClient3_6' value='2'/>
<enum name='gestaltAFPClient3_6_1' value='3'/>
<enum name='gestaltAFPClient3_6_2' value='4'/>
<enum name='gestaltAFPClient3_6_3' value='5'/>
<enum name='gestaltAFPClient3_7' value='6'/>
<enum name='gestaltAFPClient3_7_2' value='7'/>
<enum name='gestaltAFPClient3_8' value='8'/>
<enum name='gestaltAFPClient3_8_1' value='9'/>
<enum name='gestaltAFPClient3_8_3' value='10'/>
<enum name='gestaltAFPClient3_8_4' value='11'/>
<enum name='gestaltAFPClientAttributeMask' value='-65536'/>
<enum name='gestaltAFPClientCfgRsrc' value='16'/>
<enum name='gestaltAFPClientMultiReq' value='31'/>
<enum name='gestaltAFPClientSupportsIP' value='29'/>
<enum name='gestaltAFPClientVMUI' value='30'/>
<enum name='gestaltAFPClientVersionMask' value='65535'/>
<enum name='gestaltALMAttr' value='1953655152'/>
<enum name='gestaltALMHasCFMSupport' value='2'/>
<enum name='gestaltALMHasRescanNotifiers' value='3'/>
<enum name='gestaltALMHasSFGroup' value='1'/>
<enum name='gestaltALMHasSFLocation' value='1'/>
<enum name='gestaltALMPresent' value='0'/>
<enum name='gestaltALMVers' value='2002873451'/>
<enum name='gestaltAMU' value='1'/>
<enum name='gestaltATAAttr' value='1635016992'/>
<enum name='gestaltATAPresent' value='0'/>
<enum name='gestaltATSUAscentDescentControlsFeature' value='16'/>
<enum name='gestaltATSUBatchBreakLinesFeature' value='16'/>
<enum name='gestaltATSUBiDiCursorPositionFeature' value='32'/>
<enum name='gestaltATSUByCharacterClusterFeature' value='16'/>
<enum name='gestaltATSUDecimalTabFeature' value='32'/>
<enum name='gestaltATSUDirectAccess' value='16'/>
<enum name='gestaltATSUDropShadowStyleFeature' value='32'/>
<enum name='gestaltATSUFallbacksFeature' value='1'/>
<enum name='gestaltATSUFallbacksObjFeatures' value='8'/>
<enum name='gestaltATSUFeatures' value='1969845094'/>
<enum name='gestaltATSUGlyphBoundsFeature' value='1'/>
<enum name='gestaltATSUHighlightColorControlFeature' value='32'/>
<enum name='gestaltATSUHighlightInactiveTextFeature' value='16'/>
<enum name='gestaltATSUIgnoreLeadingFeature' value='8'/>
<enum name='gestaltATSULayoutCacheClearFeature' value='1'/>
<enum name='gestaltATSULayoutCreateAndCopyFeature' value='1'/>
<enum name='gestaltATSULineControlFeature' value='1'/>
<enum name='gestaltATSULowLevelOrigFeatures' value='4'/>
<enum name='gestaltATSUMemoryFeature' value='1'/>
<enum name='gestaltATSUNearestCharLineBreakFeature' value='32'/>
<enum name='gestaltATSUPositionToCursorFeature' value='16'/>
<enum name='gestaltATSUStrikeThroughStyleFeature' value='32'/>
<enum name='gestaltATSUTabSupportFeature' value='16'/>
<enum name='gestaltATSUTextLocatorUsageFeature' value='2'/>
<enum name='gestaltATSUTrackingFeature' value='1'/>
<enum name='gestaltATSUUnderlineOptionsStyleFeature' value='32'/>
<enum name='gestaltATSUUpdate1' value='131072'/>
<enum name='gestaltATSUUpdate2' value='196608'/>
<enum name='gestaltATSUUpdate3' value='262144'/>
<enum name='gestaltATSUUpdate4' value='327680'/>
<enum name='gestaltATSUUpdate5' value='393216'/>
<enum name='gestaltATSUUpdate6' value='458752'/>
<enum name='gestaltATSUUpdate7' value='524288'/>
<enum name='gestaltATSUVersion' value='1969845110'/>
<enum name='gestaltATalkVersion' value='1635019638'/>
<enum name='gestaltAUXVersion' value='1630500216'/>
<enum name='gestaltAVLTreeAttr' value='1953654117'/>
<enum name='gestaltAVLTreePresentBit' value='0'/>
<enum name='gestaltAVLTreeSupportsHandleBasedTreeBit' value='1'/>
<enum name='gestaltAVLTreeSupportsTreeLockingBit' value='2'/>
<enum name='gestaltAWS6150_60' value='75'/>
<enum name='gestaltAWS6150_66' value='100'/>
<enum name='gestaltAWS8150_110' value='40'/>
<enum name='gestaltAWS8150_80' value='65'/>
<enum name='gestaltAWS8550' value='68'/>
<enum name='gestaltAWS9150_120' value='57'/>
<enum name='gestaltAWS9150_80' value='39'/>
<enum name='gestaltAddressingModeAttr' value='1633969266'/>
<enum name='gestaltAdminFeaturesFlagsAttr' value='1718773092'/>
<enum name='gestaltAliasMgrAttr' value='1634494835'/>
<enum name='gestaltAliasMgrFollowsAliasesWhenResolving' value='4'/>
<enum name='gestaltAliasMgrPrefersPath' value='7'/>
<enum name='gestaltAliasMgrPresent' value='0'/>
<enum name='gestaltAliasMgrRequiresAccessors' value='8'/>
<enum name='gestaltAliasMgrResolveAliasFileWithMountOptions' value='3'/>
<enum name='gestaltAliasMgrSupportsAOCEKeychain' value='2'/>
<enum name='gestaltAliasMgrSupportsExtendedCalls' value='5'/>
<enum name='gestaltAliasMgrSupportsFSCalls' value='6'/>
<enum name='gestaltAliasMgrSupportsRemoteAppletalk' value='1'/>
<enum name='gestaltAllegroQD' value='592'/>
<enum name='gestaltAllegroQDText' value='256'/>
<enum name='gestaltAltivecRegistersSwappedCorrectlyBit' value='20'/>
<enum name='gestaltAntiAliasedTextAvailable' value='2'/>
<enum name='gestaltAppearanceAttr' value='1634758770'/>
<enum name='gestaltAppearanceCompatMode' value='1'/>
<enum name='gestaltAppearanceExists' value='0'/>
<enum name='gestaltAppearanceVersion' value='1634760306'/>
<enum name='gestaltAppleAdjustADBKbd' value='15'/>
<enum name='gestaltAppleAdjustISOKbd' value='16'/>
<enum name='gestaltAppleAdjustKeypad' value='14'/>
<enum name='gestaltAppleEventsAttr' value='1702260340'/>
<enum name='gestaltAppleEventsPresent' value='0'/>
<enum name='gestaltAppleGuideIsDebug' value='30'/>
<enum name='gestaltAppleGuidePresent' value='31'/>
<enum name='gestaltAppleScriptAttr' value='1634952050'/>
<enum name='gestaltAppleScriptPowerPCSupport' value='1'/>
<enum name='gestaltAppleScriptPresent' value='0'/>
<enum name='gestaltAppleScriptVersion' value='1634952054'/>
<enum name='gestaltAppleTalkVersion' value='1635019883'/>
<enum name='gestaltArbitorAttr' value='1634886176'/>
<enum name='gestaltAsyncSCSI' value='0'/>
<enum name='gestaltAsyncSCSIINROM' value='1'/>
<enum name='gestaltBuiltInSoundInput' value='4'/>
<enum name='gestaltBusClkSpeed' value='1650682987'/>
<enum name='gestaltBusClkSpeedMHz' value='1650682989'/>
<enum name='gestaltCFM99Present' value='2'/>
<enum name='gestaltCFM99PresentMask' value='4'/>
<enum name='gestaltCFMAttr' value='1667658343'/>
<enum name='gestaltCFMPresent' value='0'/>
<enum name='gestaltCFMPresentMask' value='1'/>
<enum name='gestaltCPU486' value='1765029942'/>
<enum name='gestaltCPU601' value='257'/>
<enum name='gestaltCPU603' value='259'/>
<enum name='gestaltCPU603e' value='262'/>
<enum name='gestaltCPU603ev' value='263'/>
<enum name='gestaltCPU604' value='260'/>
<enum name='gestaltCPU604e' value='265'/>
<enum name='gestaltCPU604ev' value='266'/>
<enum name='gestaltCPU68000' value='0'/>
<enum name='gestaltCPU68010' value='1'/>
<enum name='gestaltCPU68020' value='2'/>
<enum name='gestaltCPU68030' value='3'/>
<enum name='gestaltCPU68040' value='4'/>
<enum name='gestaltCPU750' value='264'/>
<enum name='gestaltCPU750FX' value='288'/>
<enum name='gestaltCPU970' value='313'/>
<enum name='gestaltCPU970FX' value='316'/>
<enum name='gestaltCPU970MP' value='324'/>
<enum name='gestaltCPUApollo' value='273'/>
<enum name='gestaltCPUG4' value='268'/>
<enum name='gestaltCPUG47447' value='274'/>
<enum name='gestaltCPUG47450' value='272'/>
<enum name='gestaltCPUPentium' value='1765095478'/>
<enum name='gestaltCPUPentium4' value='1765108086'/>
<enum name='gestaltCPUPentiumII' value='1765108073'/>
<enum name='gestaltCPUPentiumPro' value='1765109874'/>
<enum name='gestaltCPUX86' value='1769502840'/>
<enum name='gestaltCRMAttr' value='1668443424'/>
<enum name='gestaltCRMPersistentFix' value='1'/>
<enum name='gestaltCRMPresent' value='0'/>
<enum name='gestaltCRMToolRsrcCalls' value='2'/>
<enum name='gestaltCTBVersion' value='1668571766'/>
<enum name='gestaltCanStartDragInFloatWindow' value='4'/>
<enum name='gestaltCanUseCGTextRendering' value='6'/>
<enum name='gestaltCarbonVersion' value='1667395438'/>
<enum name='gestaltCardServicesPresent' value='0'/>
<enum name='gestaltClassic' value='1'/>
<enum name='gestaltClassicII' value='23'/>
<enum name='gestaltCloseViewAttr' value='1112753249'/>
<enum name='gestaltCloseViewDisplayMgrFriendly' value='1'/>
<enum name='gestaltCloseViewEnabled' value='0'/>
<enum name='gestaltCollectionMgrVersion' value='1668052078'/>
<enum name='gestaltColorMatchingAttr' value='1668117601'/>
<enum name='gestaltColorMatchingLibLoaded' value='1'/>
<enum name='gestaltColorMatchingVersion' value='1668117603'/>
<enum name='gestaltColorPicker' value='1668311922'/>
<enum name='gestaltColorPickerVersion' value='1668311922'/>
<enum name='gestaltColorSync10' value='256'/>
<enum name='gestaltColorSync104' value='260'/>
<enum name='gestaltColorSync105' value='261'/>
<enum name='gestaltColorSync11' value='272'/>
<enum name='gestaltColorSync20' value='512'/>
<enum name='gestaltColorSync21' value='528'/>
<enum name='gestaltColorSync211' value='529'/>
<enum name='gestaltColorSync212' value='530'/>
<enum name='gestaltColorSync213' value='531'/>
<enum name='gestaltColorSync25' value='592'/>
<enum name='gestaltColorSync26' value='608'/>
<enum name='gestaltColorSync261' value='609'/>
<enum name='gestaltColorSync30' value='768'/>
<enum name='gestaltComponentMgr' value='1668312692'/>
<enum name='gestaltComponentPlatform' value='1668247660'/>
<enum name='gestaltCompressionMgr' value='1768123760'/>
<enum name='gestaltConnMgrAttr' value='1668247150'/>
<enum name='gestaltConnMgrCMSearchFix' value='1'/>
<enum name='gestaltConnMgrErrorString' value='2'/>
<enum name='gestaltConnMgrMultiAsyncIO' value='3'/>
<enum name='gestaltConnMgrPresent' value='0'/>
<enum name='gestaltControlMgrAttr' value='1668183148'/>
<enum name='gestaltControlMgrPresent' value='1'/>
<enum name='gestaltControlMgrPresentBit' value='0'/>
<enum name='gestaltControlMgrVersion' value='1668118130'/>
<enum name='gestaltControlMsgPresentMask' value='1'/>
<enum name='gestaltControlStripAttr' value='1935959414'/>
<enum name='gestaltControlStripExists' value='0'/>
<enum name='gestaltControlStripUserFont' value='2'/>
<enum name='gestaltControlStripUserHotKey' value='3'/>
<enum name='gestaltControlStripVersion' value='1668511346'/>
<enum name='gestaltControlStripVersionFixed' value='1'/>
<enum name='gestaltCountOfCPUs' value='1668314483'/>
<enum name='gestaltCreatesAliasFontRsrc' value='4'/>
<enum name='gestaltCurrentGraphicsVersion' value='66048'/>
<enum name='gestaltDBAccessMgrAttr' value='1684169059'/>
<enum name='gestaltDBAccessMgrPresent' value='0'/>
<enum name='gestaltDITLExtAttr' value='1684632684'/>
<enum name='gestaltDITLExtPresent' value='0'/>
<enum name='gestaltDITLExtSupportsIctb' value='1'/>
<enum name='gestaltDTMgrSupportsFSM' value='7'/>
<enum name='gestaltDTPFeatures' value='1685352550'/>
<enum name='gestaltDTPInfo' value='1685352568'/>
<enum name='gestaltDesktopPicturesAttr' value='1684762744'/>
<enum name='gestaltDesktopPicturesDisplayed' value='1'/>
<enum name='gestaltDesktopPicturesInstalled' value='0'/>
<enum name='gestaltDesktopSpeechRecognition' value='1'/>
<enum name='gestaltDialogMgrAttr' value='1684828007'/>
<enum name='gestaltDialogMgrHasAquaAlertBit' value='2'/>
<enum name='gestaltDialogMgrHasAquaAlertMask' value='4'/>
<enum name='gestaltDialogMgrPresent' value='1'/>
<enum name='gestaltDialogMgrPresentBit' value='0'/>
<enum name='gestaltDialogMgrPresentMask' value='1'/>
<enum name='gestaltDialogMsgPresentMask' value='1'/>
<enum name='gestaltDictionaryMgrAttr' value='1684628340'/>
<enum name='gestaltDictionaryMgrPresent' value='0'/>
<enum name='gestaltDigitalSignatureVersion' value='1685285223'/>
<enum name='gestaltDiskCacheSize' value='1684239226'/>
<enum name='gestaltDisplayMgrAttr' value='1685089401'/>
<enum name='gestaltDisplayMgrCanConfirm' value='4'/>
<enum name='gestaltDisplayMgrCanSwitchMirrored' value='2'/>
<enum name='gestaltDisplayMgrColorSyncAware' value='5'/>
<enum name='gestaltDisplayMgrGeneratesProfiles' value='6'/>
<enum name='gestaltDisplayMgrPresent' value='0'/>
<enum name='gestaltDisplayMgrSetDepthNotifies' value='3'/>
<enum name='gestaltDisplayMgrSleepNotifies' value='7'/>
<enum name='gestaltDisplayMgrVers' value='1685089398'/>
<enum name='gestaltDragMgrAttr' value='1685217639'/>
<enum name='gestaltDragMgrFloatingWind' value='1'/>
<enum name='gestaltDragMgrHasImageSupport' value='3'/>
<enum name='gestaltDragMgrPresent' value='0'/>
<enum name='gestaltDrawSprocketVersion' value='1685287030'/>
<enum name='gestaltDupSelectorErr' value='-5552'/>
<enum name='gestaltEMMU1' value='5'/>
<enum name='gestaltEasyAccessAttr' value='1700885369'/>
<enum name='gestaltEasyAccessLocked' value='3'/>
<enum name='gestaltEasyAccessOff' value='0'/>
<enum name='gestaltEasyAccessOn' value='1'/>
<enum name='gestaltEasyAccessSticky' value='2'/>
<enum name='gestaltEditionMgrAttr' value='1701082222'/>
<enum name='gestaltEditionMgrPresent' value='0'/>
<enum name='gestaltEditionMgrTranslationAware' value='1'/>
<enum name='gestaltExtADBKbd' value='4'/>
<enum name='gestaltExtISOADBKbd' value='9'/>
<enum name='gestaltExtToolboxTable' value='2020897908'/>
<enum name='gestaltExtendedTimeMgr' value='3'/>
<enum name='gestaltExtendedWindowAttributes' value='1'/>
<enum name='gestaltExtendedWindowAttributesBit' value='1'/>
<enum name='gestaltExtendedWindowAttributesMask' value='2'/>
<enum name='gestaltExtensionTableVersion' value='1702126188'/>
<enum name='gestaltFBCCurrentVersion' value='17'/>
<enum name='gestaltFBCIndexingState' value='1717724009'/>
<enum name='gestaltFBCVersion' value='1717724022'/>
<enum name='gestaltFBCindexingCritical' value='1'/>
<enum name='gestaltFBCindexingSafe' value='0'/>
<enum name='gestaltFPUType' value='1718646048'/>
<enum name='gestaltFSAllowsConcurrentAsyncIO' value='17'/>
<enum name='gestaltFSAttr' value='1718820896'/>
<enum name='gestaltFSIncompatibleDFA82' value='10'/>
<enum name='gestaltFSMDoesDynamicLoad' value='3'/>
<enum name='gestaltFSMVersion' value='1718840608'/>
<enum name='gestaltFSNoMFSVols' value='8'/>
<enum name='gestaltFSSupports2TBVols' value='5'/>
<enum name='gestaltFSSupports4GBVols' value='4'/>
<enum name='gestaltFSSupportsDirectIO' value='11'/>
<enum name='gestaltFSSupportsExclusiveLocks' value='15'/>
<enum name='gestaltFSSupportsHFSPlusVols' value='9'/>
<enum name='gestaltFSSupportsHardLinkDetection' value='16'/>
<enum name='gestaltFSUsesPOSIXPathsForConversion' value='14'/>
<enum name='gestaltFXfrMgrAsync' value='3'/>
<enum name='gestaltFXfrMgrAttr' value='1719166578'/>
<enum name='gestaltFXfrMgrErrorString' value='2'/>
<enum name='gestaltFXfrMgrMultiFile' value='1'/>
<enum name='gestaltFXfrMgrPresent' value='0'/>
<enum name='gestaltFileAllocationZeroedBlocksBit' value='4'/>
<enum name='gestaltFileMappingAttr' value='1718381936'/>
<enum name='gestaltFileMappingMultipleFilesFix' value='1'/>
<enum name='gestaltFileMappingPresent' value='0'/>
<enum name='gestaltFindFolderAttr' value='1718578276'/>
<enum name='gestaltFindFolderPresent' value='0'/>
<enum name='gestaltFindFolderRedirectionAttr' value='1718578277'/>
<enum name='gestaltFinderAttr' value='1718510706'/>
<enum name='gestaltFinderCallsAEProcess' value='2'/>
<enum name='gestaltFinderDropEvent' value='0'/>
<enum name='gestaltFinderFloppyRootComments' value='8'/>
<enum name='gestaltFinderFullDragManagerSupport' value='7'/>
<enum name='gestaltFinderHasClippings' value='6'/>
<enum name='gestaltFinderLargeAndNotSavedFlavorsOK' value='9'/>
<enum name='gestaltFinderMagicPlacement' value='1'/>
<enum name='gestaltFinderSupports4GBVolumes' value='4'/>
<enum name='gestaltFinderUnderstandsRedirectedDesktopFolder' value='11'/>
<enum name='gestaltFinderUsesExtensibleFolderManager' value='10'/>
<enum name='gestaltFinderUsesSpecialOpenFoldersFile' value='0'/>
<enum name='gestaltFirstSlotNumber' value='1936487473'/>
<enum name='gestaltFloppyAttr' value='1718382713'/>
<enum name='gestaltFloppyIsMFMOnly' value='0'/>
<enum name='gestaltFloppyIsManualEject' value='1'/>
<enum name='gestaltFloppyUsesDiskInPlace' value='2'/>
<enum name='gestaltFolderDescSupport' value='1'/>
<enum name='gestaltFolderMgrFollowsAliasesWhenResolving' value='2'/>
<enum name='gestaltFolderMgrSupportsDomains' value='4'/>
<enum name='gestaltFolderMgrSupportsExtendedCalls' value='3'/>
<enum name='gestaltFolderMgrSupportsFSCalls' value='5'/>
<enum name='gestaltFontMgrAttr' value='1718578804'/>
<enum name='gestaltFrontWindowMayBeHiddenBit' value='8'/>
<enum name='gestaltFrontWindowMayBeHiddenMask' value='256'/>
<enum name='gestaltFullExtFSDispatching' value='0'/>
<enum name='gestaltGXPrintingMgrVersion' value='1886218098'/>
<enum name='gestaltGXVersion' value='1902405496'/>
<enum name='gestaltGraphicsAttr' value='1734768737'/>
<enum name='gestaltGraphicsIsDebugging' value='1'/>
<enum name='gestaltGraphicsIsLoaded' value='2'/>
<enum name='gestaltGraphicsIsPowerPC' value='4'/>
<enum name='gestaltGraphicsVersion' value='1735550584'/>
<enum name='gestaltHardwareAttr' value='1751414642'/>
<enum name='gestaltHardwareVendorApple' value='1097887852'/>
<enum name='gestaltHardwareVendorCode' value='1752326500'/>
<enum name='gestaltHasASC' value='3'/>
<enum name='gestaltHasColor' value='0'/>
<enum name='gestaltHasDeepGWorlds' value='1'/>
<enum name='gestaltHasDirectPixMaps' value='2'/>
<enum name='gestaltHasEnhancedLtalk' value='30'/>
<enum name='gestaltHasExtendedDiskInit' value='6'/>
<enum name='gestaltHasFMTuner' value='7'/>
<enum name='gestaltHasFSSpecCalls' value='1'/>
<enum name='gestaltHasFileSystemManager' value='2'/>
<enum name='gestaltHasFloatingWindows' value='2'/>
<enum name='gestaltHasFloatingWindowsBit' value='2'/>
<enum name='gestaltHasFloatingWindowsMask' value='4'/>
<enum name='gestaltHasGPIaToDCDa' value='0'/>
<enum name='gestaltHasGPIaToRTxCa' value='1'/>
<enum name='gestaltHasGPIbToDCDb' value='2'/>
<enum name='gestaltHasGrayishTextOr' value='3'/>
<enum name='gestaltHasHFSPlusAPIs' value='12'/>
<enum name='gestaltHasHWClosedCaptioning' value='2'/>
<enum name='gestaltHasIRRemote' value='3'/>
<enum name='gestaltHasParityCapability' value='0'/>
<enum name='gestaltHasResourceOverrides' value='1'/>
<enum name='gestaltHasSCC' value='4'/>
<enum name='gestaltHasSCSI' value='7'/>
<enum name='gestaltHasSCSI961' value='21'/>
<enum name='gestaltHasSCSI962' value='22'/>
<enum name='gestaltHasSerialFader' value='6'/>
<enum name='gestaltHasSingleWindowModeBit' value='8'/>
<enum name='gestaltHasSingleWindowModeMask' value='256'/>
<enum name='gestaltHasSoftPowerOff' value='19'/>
<enum name='gestaltHasSoundFader' value='1'/>
<enum name='gestaltHasSoundInputDevice' value='5'/>
<enum name='gestaltHasStereoDecoder' value='5'/>
<enum name='gestaltHasSystemIRFunction' value='8'/>
<enum name='gestaltHasTVTuner' value='0'/>
<enum name='gestaltHasUniversalROM' value='24'/>
<enum name='gestaltHasVIA1' value='0'/>
<enum name='gestaltHasVIA2' value='1'/>
<enum name='gestaltHasVidDecoderScaler' value='4'/>
<enum name='gestaltHasWindowBuffering' value='3'/>
<enum name='gestaltHasWindowBufferingBit' value='3'/>
<enum name='gestaltHasWindowBufferingMask' value='8'/>
<enum name='gestaltHasWindowShadowsBit' value='6'/>
<enum name='gestaltHasWindowShadowsMask' value='64'/>
<enum name='gestaltHasZoomedVideo' value='11'/>
<enum name='gestaltHelpMgrAttr' value='1751477360'/>
<enum name='gestaltHelpMgrExtensions' value='1'/>
<enum name='gestaltHelpMgrPresent' value='0'/>
<enum name='gestaltHidePortA' value='3'/>
<enum name='gestaltHidePortB' value='4'/>
<enum name='gestaltHighLevelMatching' value='0'/>
<enum name='gestaltINeedIRPowerOffConfirm' value='10'/>
<enum name='gestaltIPCSupport' value='7'/>
<enum name='gestaltIRDisabled' value='9'/>
<enum name='gestaltIconUtilitiesAttr' value='1768124270'/>
<enum name='gestaltIconUtilitiesHas32BitIcons' value='2'/>
<enum name='gestaltIconUtilitiesHas48PixelIcons' value='1'/>
<enum name='gestaltIconUtilitiesHas8BitDeepMasks' value='3'/>
<enum name='gestaltIconUtilitiesHasIconServices' value='4'/>
<enum name='gestaltIconUtilitiesPresent' value='0'/>
<enum name='gestaltInitHeapZerosOutHeapsBit' value='1'/>
<enum name='gestaltIntel' value='10'/>
<enum name='gestaltInternalDisplay' value='1768190832'/>
<enum name='gestaltJapanAdjustADBKbd' value='17'/>
<enum name='gestaltKeyboardType' value='1801610272'/>
<enum name='gestaltLaunchCanReturn' value='1'/>
<enum name='gestaltLaunchControl' value='3'/>
<enum name='gestaltLaunchFullFileSpec' value='2'/>
<enum name='gestaltLineLevelInput' value='9'/>
<enum name='gestaltLocationErr' value='-5553'/>
<enum name='gestaltLogicalPageSize' value='1885827962'/>
<enum name='gestaltLogicalRAMSize' value='1819435373'/>
<enum name='gestaltLowMemorySize' value='1819108717'/>
<enum name='gestaltMBLegacy' value='0'/>
<enum name='gestaltMBMultipleBays' value='2'/>
<enum name='gestaltMBSingleBay' value='1'/>
<enum name='gestaltMMUType' value='1835889952'/>
<enum name='gestaltMPCallableAPIsAttr' value='1836086115'/>
<enum name='gestaltMPDeviceManager' value='1'/>
<enum name='gestaltMPFileManager' value='0'/>
<enum name='gestaltMPTrapCalls' value='2'/>
<enum name='gestaltMac512KE' value='3'/>
<enum name='gestaltMacAndPad' value='2'/>
<enum name='gestaltMacCentris610' value='52'/>
<enum name='gestaltMacCentris650' value='30'/>
<enum name='gestaltMacCentris660AV' value='60'/>
<enum name='gestaltMacClassic' value='17'/>
<enum name='gestaltMacColorClassic' value='49'/>
<enum name='gestaltMacII' value='6'/>
<enum name='gestaltMacIIci' value='11'/>
<enum name='gestaltMacIIcx' value='8'/>
<enum name='gestaltMacIIfx' value='13'/>
<enum name='gestaltMacIIsi' value='18'/>
<enum name='gestaltMacIIvi' value='44'/>
<enum name='gestaltMacIIvm' value='45'/>
<enum name='gestaltMacIIvx' value='48'/>
<enum name='gestaltMacIIx' value='7'/>
<enum name='gestaltMacKbd' value='1'/>
<enum name='gestaltMacLC' value='19'/>
<enum name='gestaltMacLC475' value='89'/>
<enum name='gestaltMacLC520' value='56'/>
<enum name='gestaltMacLC575' value='92'/>
<enum name='gestaltMacLC580' value='99'/>
<enum name='gestaltMacLCII' value='37'/>
<enum name='gestaltMacLCIII' value='27'/>
<enum name='gestaltMacOSCompatibility' value='1206'/>
<enum name='gestaltMacOSCompatibilityBoxAttr' value='1650618232'/>
<enum name='gestaltMacOSCompatibilityBoxHasSerial' value='1'/>
<enum name='gestaltMacOSCompatibilityBoxPresent' value='0'/>
<enum name='gestaltMacOSCompatibilityBoxless' value='2'/>
<enum name='gestaltMacOSXQD' value='768'/>
<enum name='gestaltMacOSXQDText' value='512'/>
<enum name='gestaltMacPlus' value='4'/>
<enum name='gestaltMacPlusKbd' value='3'/>
<enum name='gestaltMacQuadra605' value='94'/>
<enum name='gestaltMacQuadra610' value='53'/>
<enum name='gestaltMacQuadra630' value='98'/>
<enum name='gestaltMacQuadra650' value='36'/>
<enum name='gestaltMacQuadra660AV' value='60'/>
<enum name='gestaltMacQuadra700' value='22'/>
<enum name='gestaltMacQuadra800' value='35'/>
<enum name='gestaltMacQuadra840AV' value='78'/>
<enum name='gestaltMacQuadra900' value='20'/>
<enum name='gestaltMacQuadra950' value='26'/>
<enum name='gestaltMacSE' value='5'/>
<enum name='gestaltMacSE030' value='9'/>
<enum name='gestaltMacTV' value='88'/>
<enum name='gestaltMacXL' value='2'/>
<enum name='gestaltMachineIcon' value='1835623278'/>
<enum name='gestaltMachineType' value='1835098984'/>
<enum name='gestaltMediaBay' value='1835165032'/>
<enum name='gestaltMemoryMapAttr' value='1835884912'/>
<enum name='gestaltMemoryMapSparse' value='0'/>
<enum name='gestaltMenuMgrAquaLayoutBit' value='1'/>
<enum name='gestaltMenuMgrAquaLayoutMask' value='2'/>
<enum name='gestaltMenuMgrAttr' value='1835363957'/>
<enum name='gestaltMenuMgrCGImageMenuTitleBit' value='6'/>
<enum name='gestaltMenuMgrCGImageMenuTitleMask' value='64'/>
<enum name='gestaltMenuMgrMoreThanFiveMenusDeepBit' value='5'/>
<enum name='gestaltMenuMgrMoreThanFiveMenusDeepMask' value='32'/>
<enum name='gestaltMenuMgrMultipleItemsWithCommandIDBit' value='2'/>
<enum name='gestaltMenuMgrMultipleItemsWithCommandIDMask' value='4'/>
<enum name='gestaltMenuMgrPresent' value='1'/>
<enum name='gestaltMenuMgrPresentBit' value='0'/>
<enum name='gestaltMenuMgrPresentMask' value='1'/>
<enum name='gestaltMenuMgrRetainsIconRefBit' value='3'/>
<enum name='gestaltMenuMgrRetainsIconRefMask' value='8'/>
<enum name='gestaltMenuMgrSendsMenuBoundsToDefProcBit' value='4'/>
<enum name='gestaltMenuMgrSendsMenuBoundsToDefProcMask' value='16'/>
<enum name='gestaltMessageMgrVersion' value='1835365235'/>
<enum name='gestaltMiscAttr' value='1835627363'/>
<enum name='gestaltMixedModeAttr' value='1835628644'/>
<enum name='gestaltMixedModeCFM68K' value='1'/>
<enum name='gestaltMixedModeCFM68KHasState' value='3'/>
<enum name='gestaltMixedModeCFM68KHasTrap' value='2'/>
<enum name='gestaltMixedModePowerPC' value='0'/>
<enum name='gestaltMixedModeVersion' value='1835628644'/>
<enum name='gestaltMultiChannels' value='11'/>
<enum name='gestaltMultipleUsersState' value='1835426930'/>
<enum name='gestaltMustUseFCBAccessors' value='13'/>
<enum name='gestaltNameRegistryVersion' value='1852990823'/>
<enum name='gestaltNativeCPUfamily' value='1668314470'/>
<enum name='gestaltNativeCPUtype' value='1668314484'/>
<enum name='gestaltNativeProcessMgrBit' value='19'/>
<enum name='gestaltNativeTimeMgr' value='4'/>
<enum name='gestaltNativeType1FontSupport' value='5'/>
<enum name='gestaltNewHandleReturnsZeroedMemoryBit' value='2'/>
<enum name='gestaltNewPtrReturnsZeroedMemoryBit' value='3'/>
<enum name='gestaltNoFPU' value='0'/>
<enum name='gestaltNoMMU' value='0'/>
<enum name='gestaltNotificationMgrAttr' value='1852663666'/>
<enum name='gestaltNotificationPresent' value='0'/>
<enum name='gestaltNuBusConnectors' value='1936487523'/>
<enum name='gestaltNuBusPresent' value='1'/>
<enum name='gestaltNuBusSlotCount' value='1853186675'/>
<enum name='gestaltOCESFServerAvailable' value='4'/>
<enum name='gestaltOCETB' value='258'/>
<enum name='gestaltOCETBAvailable' value='2'/>
<enum name='gestaltOCETBNativeGlueAvailable' value='16'/>
<enum name='gestaltOCETBPresent' value='1'/>
<enum name='gestaltOCEToolboxAttr' value='1868785013'/>
<enum name='gestaltOCEToolboxVersion' value='1868785012'/>
<enum name='gestaltOFA2available' value='3'/>
<enum name='gestaltOSAttr' value='1869815840'/>
<enum name='gestaltOSLCompliantFinder' value='3'/>
<enum name='gestaltOSLInSystem' value='2'/>
<enum name='gestaltOSTable' value='1869837428'/>
<enum name='gestaltOSXFBCCurrentVersion' value='256'/>
<enum name='gestaltOpenFirmwareInfo' value='1869637239'/>
<enum name='gestaltOpenTpt' value='1869898094'/>
<enum name='gestaltOpenTptARAPPresent' value='6'/>
<enum name='gestaltOpenTptAppleTalkLoadedBit' value='3'/>
<enum name='gestaltOpenTptAppleTalkLoadedMask' value='8'/>
<enum name='gestaltOpenTptAppleTalkPresentBit' value='2'/>
<enum name='gestaltOpenTptAppleTalkPresentMask' value='4'/>
<enum name='gestaltOpenTptIPXSPXLoadedBit' value='7'/>
<enum name='gestaltOpenTptIPXSPXLoadedMask' value='128'/>
<enum name='gestaltOpenTptIPXSPXPresentBit' value='6'/>
<enum name='gestaltOpenTptIPXSPXPresentMask' value='64'/>
<enum name='gestaltOpenTptLoadedBit' value='1'/>
<enum name='gestaltOpenTptLoadedMask' value='2'/>
<enum name='gestaltOpenTptNetworkSetup' value='1869898598'/>
<enum name='gestaltOpenTptNetworkSetupLegacyExport' value='1'/>
<enum name='gestaltOpenTptNetworkSetupLegacyImport' value='0'/>
<enum name='gestaltOpenTptNetworkSetupSupportsMultihoming' value='2'/>
<enum name='gestaltOpenTptNetworkSetupVersion' value='1869898614'/>
<enum name='gestaltOpenTptPPPPresent' value='5'/>
<enum name='gestaltOpenTptPresentBit' value='0'/>
<enum name='gestaltOpenTptPresentMask' value='1'/>
<enum name='gestaltOpenTptRemoteAccess' value='1869902433'/>
<enum name='gestaltOpenTptRemoteAccessClientOnly' value='2'/>
<enum name='gestaltOpenTptRemoteAccessLoaded' value='1'/>
<enum name='gestaltOpenTptRemoteAccessMPServer' value='4'/>
<enum name='gestaltOpenTptRemoteAccessPServer' value='3'/>
<enum name='gestaltOpenTptRemoteAccessPresent' value='0'/>
<enum name='gestaltOpenTptRemoteAccessVersion' value='1869902454'/>
<enum name='gestaltOpenTptTCPLoadedBit' value='5'/>
<enum name='gestaltOpenTptTCPLoadedMask' value='32'/>
<enum name='gestaltOpenTptTCPPresentBit' value='4'/>
<enum name='gestaltOpenTptTCPPresentMask' value='16'/>
<enum name='gestaltOpenTptVersions' value='1869903474'/>
<enum name='gestaltOriginalATSUVersion' value='65536'/>
<enum name='gestaltOriginalQD' value='0'/>
<enum name='gestaltOriginalQDText' value='0'/>
<enum name='gestaltOutlineFonts' value='0'/>
<enum name='gestaltPCCard' value='1885561700'/>
<enum name='gestaltPCCardFamilyPresent' value='1'/>
<enum name='gestaltPCCardHasPowerControl' value='2'/>
<enum name='gestaltPCCardSupportsCardBus' value='3'/>
<enum name='gestaltPCXAttr' value='1885567079'/>
<enum name='gestaltPCXHas8and16BitFAT' value='0'/>
<enum name='gestaltPCXHasProDOS' value='1'/>
<enum name='gestaltPCXNewUI' value='2'/>
<enum name='gestaltPCXUseICMapping' value='3'/>
<enum name='gestaltPMgrCPUIdle' value='1'/>
<enum name='gestaltPMgrDispatchExists' value='4'/>
<enum name='gestaltPMgrExists' value='0'/>
<enum name='gestaltPMgrSCC' value='2'/>
<enum name='gestaltPMgrSound' value='3'/>
<enum name='gestaltPMgrSupportsAVPowerStateAtSleepWake' value='5'/>
<enum name='gestaltPPCDragLibPresent' value='2'/>
<enum name='gestaltPPCQuickTimeLibPresent' value='0'/>
<enum name='gestaltPPCSupportsIncoming' value='1'/>
<enum name='gestaltPPCSupportsIncomingAppleTalk' value='16'/>
<enum name='gestaltPPCSupportsIncomingTCP_IP' value='32'/>
<enum name='gestaltPPCSupportsOutGoing' value='2'/>
<enum name='gestaltPPCSupportsOutgoingAppleTalk' value='256'/>
<enum name='gestaltPPCSupportsOutgoingTCP_IP' value='512'/>
<enum name='gestaltPPCSupportsRealTime' value='4096'/>
<enum name='gestaltPPCSupportsTCP_IP' value='4'/>
<enum name='gestaltPPCToolboxAttr' value='1886413600'/>
<enum name='gestaltPPCToolboxPresent' value='0'/>
<enum name='gestaltPS2Keyboard' value='27'/>
<enum name='gestaltParityAttr' value='1886549113'/>
<enum name='gestaltParityEnabled' value='1'/>
<enum name='gestaltPartialRsrcs' value='0'/>
<enum name='gestaltPerforma250' value='49'/>
<enum name='gestaltPerforma450' value='27'/>
<enum name='gestaltPerforma46x' value='62'/>
<enum name='gestaltPerforma47x' value='89'/>
<enum name='gestaltPerforma5300' value='41'/>
<enum name='gestaltPerforma550' value='80'/>
<enum name='gestaltPerforma580' value='99'/>
<enum name='gestaltPerforma600' value='45'/>
<enum name='gestaltPerforma6300' value='42'/>
<enum name='gestaltPerforma6360' value='58'/>
<enum name='gestaltPerforma6400' value='58'/>
<enum name='gestaltPhysicalRAMSize' value='1918987552'/>
<enum name='gestaltPhysicalRAMSizeInMegabytes' value='1918987629'/>
<enum name='gestaltPlayAndRecord' value='6'/>
<enum name='gestaltPopupAttr' value='1886351393'/>
<enum name='gestaltPopupPresent' value='0'/>
<enum name='gestaltPortADisabled' value='5'/>
<enum name='gestaltPortBDisabled' value='6'/>
<enum name='gestaltPortable' value='10'/>
<enum name='gestaltPortable2001ANSIKbd' value='202'/>
<enum name='gestaltPortable2001ISOKbd' value='203'/>
<enum name='gestaltPortable2001JISKbd' value='207'/>
<enum name='gestaltPortableSlotPresent' value='4'/>
<enum name='gestaltPortableUSBANSIKbd' value='37'/>
<enum name='gestaltPortableUSBISOKbd' value='38'/>
<enum name='gestaltPortableUSBJISKbd' value='39'/>
<enum name='gestaltPowerBook100' value='24'/>
<enum name='gestaltPowerBook140' value='25'/>
<enum name='gestaltPowerBook1400' value='310'/>
<enum name='gestaltPowerBook145' value='54'/>
<enum name='gestaltPowerBook150' value='115'/>
<enum name='gestaltPowerBook160' value='34'/>
<enum name='gestaltPowerBook165' value='84'/>
<enum name='gestaltPowerBook165c' value='50'/>
<enum name='gestaltPowerBook170' value='21'/>
<enum name='gestaltPowerBook180' value='33'/>
<enum name='gestaltPowerBook180c' value='71'/>
<enum name='gestaltPowerBook190' value='85'/>
<enum name='gestaltPowerBook2400' value='307'/>
<enum name='gestaltPowerBook3400' value='306'/>
<enum name='gestaltPowerBook500PPCUpgrade' value='126'/>
<enum name='gestaltPowerBook520' value='72'/>
<enum name='gestaltPowerBook520c' value='72'/>
<enum name='gestaltPowerBook5300' value='128'/>
<enum name='gestaltPowerBook540' value='72'/>
<enum name='gestaltPowerBook540c' value='72'/>
<enum name='gestaltPowerBookDuo210' value='29'/>
<enum name='gestaltPowerBookDuo230' value='32'/>
<enum name='gestaltPowerBookDuo2300' value='124'/>
<enum name='gestaltPowerBookDuo250' value='38'/>
<enum name='gestaltPowerBookDuo270c' value='77'/>
<enum name='gestaltPowerBookDuo280' value='102'/>
<enum name='gestaltPowerBookDuo280c' value='103'/>
<enum name='gestaltPowerBookG3' value='313'/>
<enum name='gestaltPowerBookG3Series' value='312'/>
<enum name='gestaltPowerBookG3Series2' value='314'/>
<enum name='gestaltPowerMac4400' value='515'/>
<enum name='gestaltPowerMac4400_160' value='514'/>
<enum name='gestaltPowerMac5200' value='41'/>
<enum name='gestaltPowerMac5260' value='41'/>
<enum name='gestaltPowerMac5400' value='74'/>
<enum name='gestaltPowerMac5500' value='512'/>
<enum name='gestaltPowerMac6100_60' value='75'/>
<enum name='gestaltPowerMac6100_66' value='100'/>
<enum name='gestaltPowerMac6200' value='42'/>
<enum name='gestaltPowerMac6400' value='58'/>
<enum name='gestaltPowerMac6500' value='513'/>
<enum name='gestaltPowerMac7100_66' value='112'/>
<enum name='gestaltPowerMac7100_80' value='47'/>
<enum name='gestaltPowerMac7200' value='108'/>
<enum name='gestaltPowerMac7300' value='109'/>
<enum name='gestaltPowerMac7500' value='68'/>
<enum name='gestaltPowerMac7600' value='68'/>
<enum name='gestaltPowerMac8100_100' value='55'/>
<enum name='gestaltPowerMac8100_110' value='40'/>
<enum name='gestaltPowerMac8100_120' value='12'/>
<enum name='gestaltPowerMac8100_80' value='65'/>
<enum name='gestaltPowerMac8500' value='69'/>
<enum name='gestaltPowerMac8600' value='69'/>
<enum name='gestaltPowerMac9500' value='67'/>
<enum name='gestaltPowerMac9600' value='67'/>
<enum name='gestaltPowerMacCentris610' value='119'/>
<enum name='gestaltPowerMacCentris650' value='120'/>
<enum name='gestaltPowerMacG3' value='510'/>
<enum name='gestaltPowerMacLC475' value='104'/>
<enum name='gestaltPowerMacLC575' value='105'/>
<enum name='gestaltPowerMacLC630' value='106'/>
<enum name='gestaltPowerMacNewWorld' value='406'/>
<enum name='gestaltPowerMacPerforma47x' value='104'/>
<enum name='gestaltPowerMacPerforma57x' value='105'/>
<enum name='gestaltPowerMacPerforma63x' value='106'/>
<enum name='gestaltPowerMacQuadra610' value='121'/>
<enum name='gestaltPowerMacQuadra630' value='106'/>
<enum name='gestaltPowerMacQuadra650' value='122'/>
<enum name='gestaltPowerMacQuadra700' value='116'/>
<enum name='gestaltPowerMacQuadra800' value='123'/>
<enum name='gestaltPowerMacQuadra900' value='117'/>
<enum name='gestaltPowerMacQuadra950' value='118'/>
<enum name='gestaltPowerMgrAttr' value='1886353266'/>
<enum name='gestaltPowerMgrVers' value='1886876278'/>
<enum name='gestaltPowerPC' value='2'/>
<enum name='gestaltPowerPCASArchitecture' value='8'/>
<enum name='gestaltPowerPCAware' value='0'/>
<enum name='gestaltPowerPCHas64BitSupport' value='6'/>
<enum name='gestaltPowerPCHasDCBAInstruction' value='3'/>
<enum name='gestaltPowerPCHasDCBTStreams' value='7'/>
<enum name='gestaltPowerPCHasDataStreams' value='5'/>
<enum name='gestaltPowerPCHasGraphicsInstructions' value='0'/>
<enum name='gestaltPowerPCHasSTFIWXInstruction' value='1'/>
<enum name='gestaltPowerPCHasSquareRootInstructions' value='2'/>
<enum name='gestaltPowerPCHasVectorInstructions' value='4'/>
<enum name='gestaltPowerPCIgnoresDCBST' value='9'/>
<enum name='gestaltPowerPCProcessorFeatures' value='1886413670'/>
<enum name='gestaltProF16ANSIKbd' value='31'/>
<enum name='gestaltProF16ISOKbd' value='32'/>
<enum name='gestaltProF16JISKbd' value='33'/>
<enum name='gestaltProcClkSpeed' value='1885564011'/>
<enum name='gestaltProcClkSpeedMHz' value='1835232363'/>
<enum name='gestaltProcessorCacheLineSize' value='1668508026'/>
<enum name='gestaltProcessorType' value='1886547811'/>
<enum name='gestaltPrtblADBKbd' value='6'/>
<enum name='gestaltPrtblISOKbd' value='7'/>
<enum name='gestaltPwrBk99JISKbd' value='201'/>
<enum name='gestaltPwrBkEKDomKbd' value='195'/>
<enum name='gestaltPwrBkEKISOKbd' value='196'/>
<enum name='gestaltPwrBkEKJISKbd' value='197'/>
<enum name='gestaltPwrBkExtADBKbd' value='24'/>
<enum name='gestaltPwrBkExtISOKbd' value='20'/>
<enum name='gestaltPwrBkExtJISKbd' value='21'/>
<enum name='gestaltPwrBkSubDomKbd' value='28'/>
<enum name='gestaltPwrBkSubISOKbd' value='29'/>
<enum name='gestaltPwrBkSubJISKbd' value='30'/>
<enum name='gestaltPwrBookADBKbd' value='12'/>
<enum name='gestaltPwrBookISOADBKbd' value='13'/>
<enum name='gestaltQD3D' value='1902392164'/>
<enum name='gestaltQD3DPresent' value='0'/>
<enum name='gestaltQD3DVersion' value='1899197984'/>
<enum name='gestaltQD3DViewer' value='1899198051'/>
<enum name='gestaltQD3DViewerPresent' value='0'/>
<enum name='gestaltQDHasLongRowBytes' value='5'/>
<enum name='gestaltQDTextFeatures' value='1902408806'/>
<enum name='gestaltQDTextVersion' value='1902408824'/>
<enum name='gestaltQTVRCubicPanosPresent' value='3'/>
<enum name='gestaltQTVRCylinderPanosPresent' value='2'/>
<enum name='gestaltQTVRMgrAttr' value='1903457906'/>
<enum name='gestaltQTVRMgrPresent' value='0'/>
<enum name='gestaltQTVRMgrVers' value='1903457910'/>
<enum name='gestaltQTVRObjMoviesPresent' value='1'/>
<enum name='gestaltQuadra605' value='94'/>
<enum name='gestaltQuadra610' value='53'/>
<enum name='gestaltQuadra630' value='98'/>
<enum name='gestaltQuadra650' value='36'/>
<enum name='gestaltQuadra660AV' value='60'/>
<enum name='gestaltQuadra700' value='22'/>
<enum name='gestaltQuadra800' value='35'/>
<enum name='gestaltQuadra840AV' value='78'/>
<enum name='gestaltQuadra900' value='20'/>
<enum name='gestaltQuadra950' value='26'/>
<enum name='gestaltQuickTime' value='1903454573'/>
<enum name='gestaltQuickTimeConferencing' value='1836346475'/>
<enum name='gestaltQuickTimeConferencingInfo' value='1903453033'/>
<enum name='gestaltQuickTimeFeatures' value='1903456883'/>
<enum name='gestaltQuickTimeStreamingFeatures' value='1903457126'/>
<enum name='gestaltQuickTimeStreamingVersion' value='1903457140'/>
<enum name='gestaltQuickTimeThreadSafeFeaturesAttr' value='1903457384'/>
<enum name='gestaltQuickTimeThreadSafeGraphicsExport' value='5'/>
<enum name='gestaltQuickTimeThreadSafeGraphicsImport' value='4'/>
<enum name='gestaltQuickTimeThreadSafeICM' value='0'/>
<enum name='gestaltQuickTimeThreadSafeMovieExport' value='3'/>
<enum name='gestaltQuickTimeThreadSafeMovieImport' value='2'/>
<enum name='gestaltQuickTimeThreadSafeMoviePlayback' value='6'/>
<enum name='gestaltQuickTimeThreadSafeMovieToolbox' value='1'/>
<enum name='gestaltQuickTimeVersion' value='1903454573'/>
<enum name='gestaltQuickdrawFeatures' value='1902408311'/>
<enum name='gestaltQuickdrawVersion' value='1902387232'/>
<enum name='gestaltRBVAddr' value='1919055392'/>
<enum name='gestaltRMFakeAppleMenuItemsRolledIn' value='1'/>
<enum name='gestaltRMForceSysHeapRolledIn' value='0'/>
<enum name='gestaltRMSupportsFSCalls' value='4'/>
<enum name='gestaltRMTypeIndexOrderingReverse' value='8'/>
<enum name='gestaltROMSize' value='1919905056'/>
<enum name='gestaltROMVersion' value='1919905142'/>
<enum name='gestaltRealTempMemory' value='5'/>
<enum name='gestaltRealtimeMgrAttr' value='1920232818'/>
<enum name='gestaltRealtimeMgrPresent' value='0'/>
<enum name='gestaltResourceMgrAttr' value='1920168547'/>
<enum name='gestaltResourceMgrBugFixesAttrs' value='1919771239'/>
<enum name='gestaltRevisedTimeMgr' value='2'/>
<enum name='gestaltSCCReadAddr' value='1935893362'/>
<enum name='gestaltSCCWriteAddr' value='1935893367'/>
<enum name='gestaltSCSI' value='1935897449'/>
<enum name='gestaltSCSIPollSIH' value='3'/>
<enum name='gestaltSCSISlotBoot' value='2'/>
<enum name='gestaltSDPFindVersion' value='1684434532'/>
<enum name='gestaltSDPPromptVersion' value='1886548086'/>
<enum name='gestaltSDPStandardDirectoryVersion' value='1935963762'/>
<enum name='gestaltSE30SlotPresent' value='3'/>
<enum name='gestaltSESlotPresent' value='2'/>
<enum name='gestaltSFServer' value='256'/>
<enum name='gestaltSMPMailerVersion' value='1835101298'/>
<enum name='gestaltSMPSPSendLetterVersion' value='1936749420'/>
<enum name='gestaltSafeOFAttr' value='1935763045'/>
<enum name='gestaltSanityCheckResourceFiles' value='2'/>
<enum name='gestaltSbitFontSupport' value='1'/>
<enum name='gestaltScrapMgrAttr' value='1935897185'/>
<enum name='gestaltScrapMgrTranslationAware' value='0'/>
<enum name='gestaltScreenCaptureDir' value='1885954866'/>
<enum name='gestaltScreenCaptureMain' value='1885954865'/>
<enum name='gestaltScriptCount' value='1935897123'/>
<enum name='gestaltScriptMgrVersion' value='1935897193'/>
<enum name='gestaltScriptingSupport' value='1'/>
<enum name='gestaltScrollingThrottle' value='0'/>
<enum name='gestaltSerialArbitrationExists' value='0'/>
<enum name='gestaltSerialAttr' value='1936028192'/>
<enum name='gestaltSetDragImageUpdates' value='5'/>
<enum name='gestaltSheetsAreWindowModalBit' value='7'/>
<enum name='gestaltSheetsAreWindowModalMask' value='128'/>
<enum name='gestaltShutdownAttributes' value='1936225652'/>
<enum name='gestaltShutdownHassdOnBootVolUnmount' value='0'/>
<enum name='gestaltSlotAttr' value='1936486260'/>
<enum name='gestaltSlotMgrExists' value='0'/>
<enum name='gestaltSndPlayDoubleBuffer' value='10'/>
<enum name='gestaltSoftwareVendorApple' value='1097887852'/>
<enum name='gestaltSoftwareVendorCode' value='1936875876'/>
<enum name='gestaltSoftwareVendorLicensee' value='1281584755'/>
<enum name='gestaltSoundAttr' value='1936614432'/>
<enum name='gestaltSoundIOMgrPresent' value='3'/>
<enum name='gestaltSpecificMatchSupport' value='1'/>
<enum name='gestaltSpeechAttr' value='1953788771'/>
<enum name='gestaltSpeechHasPPCGlue' value='1'/>
<enum name='gestaltSpeechMgrPresent' value='0'/>
<enum name='gestaltSpeechRecognitionAttr' value='1936880737'/>
<enum name='gestaltSpeechRecognitionVersion' value='1936880738'/>
<enum name='gestaltSplitOSAttr' value='1936748403'/>
<enum name='gestaltSplitOSAware' value='1'/>
<enum name='gestaltSplitOSBootDriveIsNetworkVolume' value='0'/>
<enum name='gestaltSplitOSEnablerVolumeIsDifferentFromBootVolume' value='2'/>
<enum name='gestaltSplitOSMachineNameSetToNetworkNameTemp' value='3'/>
<enum name='gestaltSplitOSMachineNameStartupDiskIsNonPersistent' value='5'/>
<enum name='gestaltSquareMenuBar' value='2'/>
<enum name='gestaltStandardFile58' value='0'/>
<enum name='gestaltStandardFileAttr' value='1937007718'/>
<enum name='gestaltStandardFileHasColorIcons' value='2'/>
<enum name='gestaltStandardFileHasDynamicVolumeAllocation' value='4'/>
<enum name='gestaltStandardFileTranslationAware' value='1'/>
<enum name='gestaltStandardFileUseGenericIcons' value='3'/>
<enum name='gestaltStandardTimeMgr' value='1'/>
<enum name='gestaltStdADBKbd' value='5'/>
<enum name='gestaltStdISOADBKbd' value='8'/>
<enum name='gestaltStdNBPAttr' value='1852601712'/>
<enum name='gestaltStdNBPPresent' value='0'/>
<enum name='gestaltStdNBPSupportsAutoPosition' value='1'/>
<enum name='gestaltStereoCapability' value='0'/>
<enum name='gestaltStereoInput' value='8'/>
<enum name='gestaltStereoMixing' value='1'/>
<enum name='gestaltSupportsApplicationURL' value='4'/>
<enum name='gestaltSupportsFSpResourceFileAlreadyOpenBit' value='3'/>
<enum name='gestaltSupportsMirroring' value='4'/>
<enum name='gestaltSysArchitecture' value='1937339233'/>
<enum name='gestaltSysDebuggerSupport' value='8'/>
<enum name='gestaltSysZoneGrowable' value='0'/>
<enum name='gestaltSystemUpdateVersion' value='1937339253'/>
<enum name='gestaltSystemVersion' value='1937339254'/>
<enum name='gestaltSystemVersionBugFix' value='1937339187'/>
<enum name='gestaltSystemVersionMajor' value='1937339185'/>
<enum name='gestaltSystemVersionMinor' value='1937339186'/>
<enum name='gestaltTE1' value='1'/>
<enum name='gestaltTE2' value='2'/>
<enum name='gestaltTE3' value='3'/>
<enum name='gestaltTE4' value='4'/>
<enum name='gestaltTE5' value='5'/>
<enum name='gestaltTE6' value='6'/>
<enum name='gestaltTEAttr' value='1952801140'/>
<enum name='gestaltTEHasGetHiliteRgn' value='0'/>
<enum name='gestaltTEHasWhiteBackground' value='3'/>
<enum name='gestaltTESupportsInlineInput' value='1'/>
<enum name='gestaltTESupportsTextObjects' value='2'/>
<enum name='gestaltTSMDisplayMgrAwareBit' value='0'/>
<enum name='gestaltTSMTE' value='0'/>
<enum name='gestaltTSMTE1' value='256'/>
<enum name='gestaltTSMTE15' value='336'/>
<enum name='gestaltTSMTE152' value='338'/>
<enum name='gestaltTSMTEAttr' value='1953322053'/>
<enum name='gestaltTSMTEPresent' value='0'/>
<enum name='gestaltTSMTEVersion' value='1953322070'/>
<enum name='gestaltTSMdoesTSMTEBit' value='1'/>
<enum name='gestaltTSMgr15' value='336'/>
<enum name='gestaltTSMgr20' value='512'/>
<enum name='gestaltTSMgr22' value='544'/>
<enum name='gestaltTSMgr23' value='560'/>
<enum name='gestaltTSMgrAttr' value='1953721697'/>
<enum name='gestaltTSMgrVersion' value='1953721718'/>
<enum name='gestaltTVAttr' value='1953898528'/>
<enum name='gestaltTeleMgrAttr' value='1952803941'/>
<enum name='gestaltTeleMgrAutoAnswer' value='3'/>
<enum name='gestaltTeleMgrIndHandset' value='4'/>
<enum name='gestaltTeleMgrNewTELNewSupport' value='6'/>
<enum name='gestaltTeleMgrPowerPCSupport' value='1'/>
<enum name='gestaltTeleMgrPresent' value='0'/>
<enum name='gestaltTeleMgrSilenceDetect' value='5'/>
<enum name='gestaltTeleMgrSoundStreams' value='2'/>
<enum name='gestaltTelephoneSpeechRecognition' value='2'/>
<enum name='gestaltTempMemSupport' value='4'/>
<enum name='gestaltTempMemTracked' value='6'/>
<enum name='gestaltTermMgrAttr' value='1952805485'/>
<enum name='gestaltTermMgrErrorString' value='2'/>
<enum name='gestaltTermMgrPresent' value='0'/>
<enum name='gestaltTextEditVersion' value='1952784416'/>
<enum name='gestaltThirdPartyANSIKbd' value='40'/>
<enum name='gestaltThirdPartyISOKbd' value='41'/>
<enum name='gestaltThirdPartyJISKbd' value='42'/>
<enum name='gestaltThreadMgrAttr' value='1952998515'/>
<enum name='gestaltThreadMgrPresent' value='0'/>
<enum name='gestaltThreadsLibraryPresent' value='2'/>
<enum name='gestaltTimeMgrVersion' value='1953326962'/>
<enum name='gestaltToolboxTable' value='1952609396'/>
<enum name='gestaltTranslationAttr' value='2020368756'/>
<enum name='gestaltTranslationGetPathAPIAvail' value='3'/>
<enum name='gestaltTranslationMgrExists' value='0'/>
<enum name='gestaltTranslationMgrHintOrder' value='1'/>
<enum name='gestaltTranslationPPCAvail' value='2'/>
<enum name='gestaltUDFSupport' value='1802855526'/>
<enum name='gestaltUSBAndyANSIKbd' value='204'/>
<enum name='gestaltUSBAndyISOKbd' value='205'/>
<enum name='gestaltUSBAndyJISKbd' value='206'/>
<enum name='gestaltUSBAttr' value='1970496032'/>
<enum name='gestaltUSBCosmoANSIKbd' value='198'/>
<enum name='gestaltUSBCosmoISOKbd' value='199'/>
<enum name='gestaltUSBCosmoJISKbd' value='200'/>
<enum name='gestaltUSBHasIsoch' value='1'/>
<enum name='gestaltUSBPresent' value='0'/>
<enum name='gestaltUSBPrinterSharingAttr' value='2053204768'/>
<enum name='gestaltUSBPrinterSharingAttrBooted' value='1073741824'/>
<enum name='gestaltUSBPrinterSharingAttrMask' value='-65536'/>
<enum name='gestaltUSBPrinterSharingAttrRunning' value='-2147483648'/>
<enum name='gestaltUSBPrinterSharingVersion' value='2053204768'/>
<enum name='gestaltUSBPrinterSharingVersionMask' value='65535'/>
<enum name='gestaltUSBProF16ANSIKbd' value='34'/>
<enum name='gestaltUSBProF16ISOKbd' value='35'/>
<enum name='gestaltUSBProF16JISKbd' value='36'/>
<enum name='gestaltUSBVersion' value='1970496118'/>
<enum name='gestaltUndefSelectorErr' value='-5551'/>
<enum name='gestaltUnknownErr' value='-5550'/>
<enum name='gestaltUnknownThirdPartyKbd' value='3'/>
<enum name='gestaltUserVisibleMachineName' value='1835950445'/>
<enum name='gestaltVIA1Addr' value='1986617649'/>
<enum name='gestaltVIA2Addr' value='1986617650'/>
<enum name='gestaltVMAttr' value='1986863136'/>
<enum name='gestaltVMBackingStoreFileRefNum' value='1986880115'/>
<enum name='gestaltVMFilemappingOn' value='3'/>
<enum name='gestaltVMHasLockMemoryForOutput' value='1'/>
<enum name='gestaltVMHasPagingControl' value='4'/>
<enum name='gestaltVMInfoNoneType' value='3'/>
<enum name='gestaltVMInfoSimpleType' value='2'/>
<enum name='gestaltVMInfoSizeStorageType' value='0'/>
<enum name='gestaltVMInfoSizeType' value='1'/>
<enum name='gestaltVMInfoType' value='1986881902'/>
<enum name='gestaltVMPresent' value='0'/>
<enum name='gestaltVMZerosPagesBit' value='0'/>
<enum name='gestaltValueImplementedVers' value='5'/>
<enum name='gestaltVersion' value='1986359923'/>
<enum name='gestaltWSIICanPrintWithoutPrGeneralBit' value='0'/>
<enum name='gestaltWSIISupport' value='0'/>
<enum name='gestaltWindowLiveResizeBit' value='4'/>
<enum name='gestaltWindowLiveResizeMask' value='16'/>
<enum name='gestaltWindowMgrAttr' value='2003398244'/>
<enum name='gestaltWindowMgrPresent' value='1'/>
<enum name='gestaltWindowMgrPresentBit' value='0'/>
<enum name='gestaltWindowMgrPresentMask' value='1'/>
<enum name='gestaltWindowMinimizeToDockBit' value='5'/>
<enum name='gestaltWindowMinimizeToDockMask' value='32'/>
<enum name='gestaltWorldScriptIIAttr' value='2004050292'/>
<enum name='gestaltWorldScriptIIVersion' value='1685026146'/>
<enum name='gestaltX86AdditionalFeatures' value='2016949857'/>
<enum name='gestaltX86Features' value='2016949862'/>
<enum name='gestaltX86HasAPIC' value='9'/>
<enum name='gestaltX86HasCID' value='10'/>
<enum name='gestaltX86HasCLFSH' value='19'/>
<enum name='gestaltX86HasCMOV' value='15'/>
<enum name='gestaltX86HasCX16' value='13'/>
<enum name='gestaltX86HasCX8' value='8'/>
<enum name='gestaltX86HasDE' value='2'/>
<enum name='gestaltX86HasDS' value='21'/>
<enum name='gestaltX86HasDSCPL' value='4'/>
<enum name='gestaltX86HasEST' value='7'/>
<enum name='gestaltX86HasFPU' value='0'/>
<enum name='gestaltX86HasFXSR' value='24'/>
<enum name='gestaltX86HasHTT' value='28'/>
<enum name='gestaltX86HasMCA' value='14'/>
<enum name='gestaltX86HasMCE' value='7'/>
<enum name='gestaltX86HasMMX' value='23'/>
<enum name='gestaltX86HasMONITOR' value='3'/>
<enum name='gestaltX86HasMSR' value='5'/>
<enum name='gestaltX86HasMTRR' value='12'/>
<enum name='gestaltX86HasPAE' value='6'/>
<enum name='gestaltX86HasPAT' value='16'/>
<enum name='gestaltX86HasPGE' value='13'/>
<enum name='gestaltX86HasPSE' value='3'/>
<enum name='gestaltX86HasPSE36' value='17'/>
<enum name='gestaltX86HasPSN' value='18'/>
<enum name='gestaltX86HasSEP' value='11'/>
<enum name='gestaltX86HasSMX' value='6'/>
<enum name='gestaltX86HasSS' value='27'/>
<enum name='gestaltX86HasSSE' value='25'/>
<enum name='gestaltX86HasSSE2' value='26'/>
<enum name='gestaltX86HasSSE3' value='0'/>
<enum name='gestaltX86HasSupplementalSSE3' value='9'/>
<enum name='gestaltX86HasTM' value='29'/>
<enum name='gestaltX86HasTM2' value='8'/>
<enum name='gestaltX86HasTSC' value='4'/>
<enum name='gestaltX86HasVME' value='1'/>
<enum name='gestaltX86HasVMX' value='5'/>
<enum name='gestaltX86HasxTPR' value='14'/>
<enum name='gestaltX86ResACPI' value='22'/>
<enum name='gestaltX86Serviced20' value='20'/>
<enum name='gfpErr' value='-52'/>
<enum name='grabTimeComplete' value='-9401'/>
<enum name='graveUprE' value='233'/>
<enum name='graveUprI' value='237'/>
<enum name='graveUprO' value='241'/>
<enum name='graveUprU' value='244'/>
<enum name='guestNotAllowedErr' value='-932'/>
<enum name='hMenuFindErr' value='-127'/>
<enum name='hachek' value='255'/>
<enum name='handlerNotFoundErr' value='-1856'/>
<enum name='hardwareConfigErr' value='-604'/>
<enum name='hmBalloonAborted' value='-853'/>
<enum name='hmCloseViewActive' value='-863'/>
<enum name='hmHelpDisabled' value='-850'/>
<enum name='hmHelpManagerNotInited' value='-855'/>
<enum name='hmNoBalloonUp' value='-862'/>
<enum name='hmOperationUnsupported' value='-861'/>
<enum name='hmSameAsLastBalloon' value='-854'/>
<enum name='hmSkippedBalloon' value='-857'/>
<enum name='hmUnknownHelpType' value='-859'/>
<enum name='hmWrongVersion' value='-858'/>
<enum name='hourField' value='4'/>
<enum name='hourMask' value='16'/>
<enum name='hrHTMLRenderingLibNotInstalledErr' value='-5360'/>
<enum name='hrLeadingZ' value='128'/>
<enum name='hrMiscellaneousExceptionErr' value='-5361'/>
<enum name='hrURLNotHandledErr' value='-5363'/>
<enum name='hrUnableToResizeHandleErr' value='-5362'/>
<enum name='hwParamErr' value='-502'/>
<enum name='iIOAbort' value='-27'/>
<enum name='iIOAbortErr' value='-27'/>
<enum name='iMemFullErr' value='-108'/>
<enum name='illegalChannelOSErr' value='-2076'/>
<enum name='illegalControllerOSErr' value='-2080'/>
<enum name='illegalInstrumentOSErr' value='-2079'/>
<enum name='illegalKnobOSErr' value='-2077'/>
<enum name='illegalKnobValueOSErr' value='-2078'/>
<enum name='illegalNoteChannelOSErr' value='-2084'/>
<enum name='illegalPartOSErr' value='-2075'/>
<enum name='illegalScrapFlavorFlagsErr' value='-4997'/>
<enum name='illegalScrapFlavorSizeErr' value='-4999'/>
<enum name='illegalScrapFlavorTypeErr' value='-4998'/>
<enum name='illegalVoiceAllocationOSErr' value='-2074'/>
<enum name='incompatibleVoice' value='-245'/>
<enum name='initIWMErr' value='-77'/>
<enum name='inputOutOfBounds' value='-190'/>
<enum name='insufficientStackErr' value='-149'/>
<enum name='intArabic' value='1'/>
<enum name='intEuropean' value='4'/>
<enum name='intJapanese' value='3'/>
<enum name='intOutputMask' value='32768'/>
<enum name='intRoman' value='2'/>
<enum name='intWestern' value='0'/>
<enum name='internalComponentErr' value='-2070'/>
<enum name='internalQuickTimeError' value='-2034'/>
<enum name='internalScrapErr' value='-4988'/>
<enum name='interruptsMaskedErr' value='-624'/>
<enum name='intlCurrency' value='219'/>
<enum name='invalidAtomContainerErr' value='-2107'/>
<enum name='invalidAtomErr' value='-2106'/>
<enum name='invalidAtomTypeErr' value='-2108'/>
<enum name='invalidChunkCache' value='-2040'/>
<enum name='invalidChunkNum' value='-2038'/>
<enum name='invalidComponentID' value='-3000'/>
<enum name='invalidDataRef' value='-2012'/>
<enum name='invalidDataRefContainer' value='-2049'/>
<enum name='invalidDuration' value='-2014'/>
<enum name='invalidEditState' value='-2023'/>
<enum name='invalidFolderTypeErr' value='-4273'/>
<enum name='invalidHandler' value='-2013'/>
<enum name='invalidHotSpotIDErr' value='-30551'/>
<enum name='invalidIconRefErr' value='-2580'/>
<enum name='invalidImageIndexErr' value='-2068'/>
<enum name='invalidIndexErr' value='-20002'/>
<enum name='invalidMedia' value='-2008'/>
<enum name='invalidMovie' value='-2010'/>
<enum name='invalidNodeFormatErr' value='-30550'/>
<enum name='invalidNodeIDErr' value='-30544'/>
<enum name='invalidPickerType' value='-4000'/>
<enum name='invalidRect' value='-2036'/>
<enum name='invalidSampleDescIndex' value='-2039'/>
<enum name='invalidSampleDescription' value='-2041'/>
<enum name='invalidSampleNum' value='-2037'/>
<enum name='invalidSampleTable' value='-2011'/>
<enum name='invalidSpriteIDErr' value='-2069'/>
<enum name='invalidSpriteIndexErr' value='-2067'/>
<enum name='invalidSpritePropertyErr' value='-2065'/>
<enum name='invalidSpriteWorldPropertyErr' value='-2064'/>
<enum name='invalidTime' value='-2015'/>
<enum name='invalidTrack' value='-2009'/>
<enum name='invalidTranslationPathErr' value='-3025'/>
<enum name='invalidViewStateErr' value='-30545'/>
<enum name='ioDirFlg' value='4'/>
<enum name='ioDirMask' value='16'/>
<enum name='ioErr' value='-36'/>
<enum name='ioQType' value='2'/>
<enum name='itlcDisableKeyScriptSync' value='3'/>
<enum name='itlcDisableKeyScriptSyncMask' value='8'/>
<enum name='itlcDualCaret' value='6'/>
<enum name='itlcShowIcon' value='7'/>
<enum name='itlcSysDirection' value='15'/>
<enum name='iuCurrentCurLang' value='-4'/>
<enum name='iuCurrentDefLang' value='-5'/>
<enum name='iuCurrentScript' value='-2'/>
<enum name='iuNumberPartsTable' value='2'/>
<enum name='iuScriptCurLang' value='-6'/>
<enum name='iuScriptDefLang' value='-7'/>
<enum name='iuSystemCurLang' value='-2'/>
<enum name='iuSystemDefLang' value='-3'/>
<enum name='iuSystemScript' value='-1'/>
<enum name='iuUnTokenTable' value='3'/>
<enum name='iuWhiteSpaceList' value='4'/>
<enum name='iuWordSelectTable' value='0'/>
<enum name='iuWordWrapTable' value='1'/>
<enum name='k16BitCardErr' value='-9084'/>
<enum name='k32BitHeap' value='1'/>
<enum name='k68kInterruptLevelMask' value='7'/>
<enum name='kAFPExtendedFlagsAlternateAddressMask' value='1'/>
<enum name='kAFPTagLengthDDP' value='6'/>
<enum name='kAFPTagLengthIP' value='6'/>
<enum name='kAFPTagLengthIPPort' value='8'/>
<enum name='kAFPTagTypeDDP' value='3'/>
<enum name='kAFPTagTypeDNS' value='4'/>
<enum name='kAFPTagTypeIP' value='1'/>
<enum name='kAFPTagTypeIPPort' value='2'/>
<enum name='kALMDeferSwitchErr' value='-30043'/>
<enum name='kALMDuplicateModuleErr' value='-30045'/>
<enum name='kALMGroupNotFoundErr' value='-30048'/>
<enum name='kALMInstallationErr' value='-30044'/>
<enum name='kALMInternalErr' value='-30049'/>
<enum name='kALMLocationNotFoundErr' value='-30048'/>
<enum name='kALMLocationsFolderType' value='1717660780'/>
<enum name='kALMModuleCommunicationErr' value='-30046'/>
<enum name='kALMModulesFolderType' value='2002873451'/>
<enum name='kALMNoSuchModuleErr' value='-30047'/>
<enum name='kALMPreferencesFolderType' value='1953655152'/>
<enum name='kALMRebootFlagsLevelErr' value='-30042'/>
<enum name='kARMMountVol' value='1'/>
<enum name='kARMMultVols' value='8'/>
<enum name='kARMNoUI' value='2'/>
<enum name='kARMSearch' value='256'/>
<enum name='kARMSearchMore' value='512'/>
<enum name='kARMSearchRelFirst' value='1024'/>
<enum name='kARMTryFileIDFirst' value='2048'/>
<enum name='kATSUBadStreamErr' value='-8902'/>
<enum name='kATSUBusyObjectErr' value='-8809'/>
<enum name='kATSUCoordinateOverflowErr' value='-8807'/>
<enum name='kATSUFontsMatched' value='-8793'/>
<enum name='kATSUFontsNotMatched' value='-8794'/>
<enum name='kATSUInvalidAttributeSizeErr' value='-8798'/>
<enum name='kATSUInvalidAttributeTagErr' value='-8799'/>
<enum name='kATSUInvalidAttributeValueErr' value='-8797'/>
<enum name='kATSUInvalidCacheErr' value='-8800'/>
<enum name='kATSUInvalidCallInsideCallbackErr' value='-8904'/>
<enum name='kATSUInvalidFontErr' value='-8796'/>
<enum name='kATSUInvalidFontFallbacksErr' value='-8900'/>
<enum name='kATSUInvalidStyleErr' value='-8791'/>
<enum name='kATSUInvalidTextLayoutErr' value='-8790'/>
<enum name='kATSUInvalidTextRangeErr' value='-8792'/>
<enum name='kATSULastErr' value='-8959'/>
<enum name='kATSULineBreakInWord' value='-8808'/>
<enum name='kATSULowLevelErr' value='-8804'/>
<enum name='kATSUNoCorrespondingFontErr' value='-8795'/>
<enum name='kATSUNoFontCmapAvailableErr' value='-8805'/>
<enum name='kATSUNoFontNameErr' value='-8905'/>
<enum name='kATSUNoFontScalerAvailableErr' value='-8806'/>
<enum name='kATSUNoStyleRunsAssignedErr' value='-8802'/>
<enum name='kATSUNotSetErr' value='-8801'/>
<enum name='kATSUOutputBufferTooSmallErr' value='-8903'/>
<enum name='kATSUQuickDrawTextErr' value='-8803'/>
<enum name='kATSUUnsupportedStreamFormatErr' value='-8901'/>
<enum name='kAVLInOrder' value='1'/>
<enum name='kAVLIsLeaf' value='3'/>
<enum name='kAVLIsLeftBranch' value='1'/>
<enum name='kAVLIsRightBranch' value='2'/>
<enum name='kAVLIsTree' value='0'/>
<enum name='kAVLNullNode' value='4'/>
<enum name='kAVLPostOrder' value='2'/>
<enum name='kAVLPreOrder' value='0'/>
<enum name='kAccessException' value='3'/>
<enum name='kAlreadySavedStateErr' value='-9105'/>
<enum name='kAnyComponentFlagsMask' value='0'/>
<enum name='kAnyComponentManufacturer' value='0'/>
<enum name='kAnyComponentSubType' value='0'/>
<enum name='kAnyComponentType' value='0'/>
<enum name='kAppPackageAliasType' value='1717661793'/>
<enum name='kAppearanceFolderType' value='1634758770'/>
<enum name='kAppleExtrasFolderType' value='1634040004'/>
<enum name='kAppleManufacturer' value='1634758764'/>
<enum name='kAppleMenuFolderAliasType' value='1717657965'/>
<enum name='kAppleMenuFolderType' value='1634561653'/>
<enum name='kAppleShareAuthenticationFolderType' value='1635087464'/>
<enum name='kAppleShareSupportFolderType' value='1936220530'/>
<enum name='kAppleshareAutomountServerAliasesFolderType' value='1936881348'/>
<enum name='kApplicationAliasType' value='1633972848'/>
<enum name='kApplicationCPAliasType' value='1633903728'/>
<enum name='kApplicationDAAliasType' value='1633969264'/>
<enum name='kApplicationSupportFolderType' value='1634956656'/>
<enum name='kApplicationThreadID' value='2'/>
<enum name='kApplicationsFolderType' value='1634758771'/>
<enum name='kAssistantsFolderType' value='1634956484'/>
<enum name='kAsyncEjectComplete' value='6'/>
<enum name='kAsyncEjectInProgress' value='5'/>
<enum name='kAsyncMountComplete' value='2'/>
<enum name='kAsyncMountInProgress' value='1'/>
<enum name='kAsyncUnmountComplete' value='4'/>
<enum name='kAsyncUnmountInProgress' value='3'/>
<enum name='kAttemptDupCardEntryErr' value='-9106'/>
<enum name='kAudioAlertSoundsFolderType' value='1634497140'/>
<enum name='kAudioComponentsFolderType' value='1633906032'/>
<enum name='kAudioDigidesignFolderType' value='1633970535'/>
<enum name='kAudioPlugInsFolderType' value='1634757735'/>
<enum name='kAudioPresetsFolderType' value='1634759540'/>
<enum name='kAudioSoundBanksFolderType' value='1650552427'/>
<enum name='kAudioSoundsFolderType' value='1634954852'/>
<enum name='kAudioSupportFolderType' value='1633970543'/>
<enum name='kAudioVSTFolderType' value='1635152756'/>
<enum name='kAutomatorWorkflowsFolderType' value='1718382455'/>
<enum name='kAutosaveInformationFolderType' value='1634951542'/>
<enum name='kBLibTag2' value='1112303970'/>
<enum name='kBadAdapterErr' value='-9050'/>
<enum name='kBadArgLengthErr' value='-9063'/>
<enum name='kBadArgsErr' value='-9064'/>
<enum name='kBadAttributeErr' value='-9051'/>
<enum name='kBadBaseErr' value='-9052'/>
<enum name='kBadCISErr' value='-9066'/>
<enum name='kBadCustomIFIDErr' value='-9093'/>
<enum name='kBadDeviceErr' value='-9083'/>
<enum name='kBadEDCErr' value='-9053'/>
<enum name='kBadHandleErr' value='-9065'/>
<enum name='kBadIRQErr' value='-9054'/>
<enum name='kBadLinkErr' value='-9082'/>
<enum name='kBadOffsetErr' value='-9055'/>
<enum name='kBadPageErr' value='-9056'/>
<enum name='kBadSizeErr' value='-9057'/>
<enum name='kBadSocketErr' value='-9058'/>
<enum name='kBadSpeedErr' value='-9067'/>
<enum name='kBadTupleDataErr' value='-9092'/>
<enum name='kBadTypeErr' value='-9059'/>
<enum name='kBadVccErr' value='-9060'/>
<enum name='kBadVppErr' value='-9061'/>
<enum name='kBadWindowErr' value='-9062'/>
<enum name='kBig5_BasicVariant' value='0'/>
<enum name='kBig5_DOSVariant' value='3'/>
<enum name='kBig5_ETenVariant' value='2'/>
<enum name='kBig5_StandardVariant' value='1'/>
<enum name='kBlessedBusErrorBait' value='1760651505'/>
<enum name='kBlessedFolder' value='1651274598'/>
<enum name='kBootTimeStartupItemsFolderType' value='1701671034'/>
<enum name='kBridgeSoftwareRunningCantSleep' value='-13038'/>
<enum name='kBusyErr' value='-9074'/>
<enum name='kCCRegisterCBit' value='16'/>
<enum name='kCCRegisterNBit' value='19'/>
<enum name='kCCRegisterVBit' value='17'/>
<enum name='kCCRegisterXBit' value='20'/>
<enum name='kCCRegisterZBit' value='18'/>
<enum name='kCFM68kRTA' value='16'/>
<enum name='kCSAcceptAllComponentsMode' value='0'/>
<enum name='kCSAcceptThreadSafeComponentsOnlyMode' value='1'/>
<enum name='kCSDiskSpaceRecoveryOptionNoUI' value='1'/>
<enum name='kCStackBased' value='1'/>
<enum name='kCachedDataFolderType' value='1667326824'/>
<enum name='kCallingConventionMask' value='15'/>
<enum name='kCallingConventionPhase' value='0'/>
<enum name='kCallingConventionWidth' value='4'/>
<enum name='kCantConfigureCardErr' value='-9087'/>
<enum name='kCantReportProcessorTemperatureErr' value='-13013'/>
<enum name='kCarbonLibraryFolderType' value='1667330658'/>
<enum name='kCardBusCardErr' value='-9085'/>
<enum name='kCardPowerOffErr' value='-9107'/>
<enum name='kChewableItemsFolderType' value='1718382196'/>
<enum name='kClassicDesktopFolderType' value='1935962987'/>
<enum name='kClassicDomain' value='-32762'/>
<enum name='kClassicPreferencesFolderType' value='1668313702'/>
<enum name='kClientRequestDenied' value='-9102'/>
<enum name='kClippingCreator' value='1685217639'/>
<enum name='kClippingPictureType' value='1668051056'/>
<enum name='kClippingSoundType' value='1668051059'/>
<enum name='kClippingTextType' value='1668051060'/>
<enum name='kClippingUnknownType' value='1668051061'/>
<enum name='kCollateAttributesNotFoundErr' value='-29500'/>
<enum name='kCollateBufferTooSmall' value='-29506'/>
<enum name='kCollateInvalidChar' value='-29505'/>
<enum name='kCollateInvalidCollationRef' value='-29507'/>
<enum name='kCollateInvalidOptions' value='-29501'/>
<enum name='kCollateMissingUnicodeTableErr' value='-29502'/>
<enum name='kCollatePatternNotFoundErr' value='-29504'/>
<enum name='kCollateUnicodeConvertFailedErr' value='-29503'/>
<enum name='kCollectionAllAttributes' value='-1'/>
<enum name='kCollectionDefaultAttributes' value='1073741824'/>
<enum name='kCollectionDontWantAttributes' value='0'/>
<enum name='kCollectionDontWantData' value='0'/>
<enum name='kCollectionDontWantId' value='0'/>
<enum name='kCollectionDontWantIndex' value='0'/>
<enum name='kCollectionDontWantSize' value='0'/>
<enum name='kCollectionDontWantTag' value='0'/>
<enum name='kCollectionLockBit' value='31'/>
<enum name='kCollectionLockMask' value='2147483648'/>
<enum name='kCollectionNoAttributes' value='0'/>
<enum name='kCollectionPersistenceBit' value='30'/>
<enum name='kCollectionPersistenceMask' value='1073741824'/>
<enum name='kCollectionReserved0Bit' value='16'/>
<enum name='kCollectionReserved0Mask' value='65536'/>
<enum name='kCollectionReserved10Bit' value='26'/>
<enum name='kCollectionReserved10Mask' value='67108864'/>
<enum name='kCollectionReserved11Bit' value='27'/>
<enum name='kCollectionReserved11Mask' value='134217728'/>
<enum name='kCollectionReserved12Bit' value='28'/>
<enum name='kCollectionReserved12Mask' value='268435456'/>
<enum name='kCollectionReserved13Bit' value='29'/>
<enum name='kCollectionReserved13Mask' value='536870912'/>
<enum name='kCollectionReserved1Bit' value='17'/>
<enum name='kCollectionReserved1Mask' value='131072'/>
<enum name='kCollectionReserved2Bit' value='18'/>
<enum name='kCollectionReserved2Mask' value='262144'/>
<enum name='kCollectionReserved3Bit' value='19'/>
<enum name='kCollectionReserved3Mask' value='524288'/>
<enum name='kCollectionReserved4Bit' value='20'/>
<enum name='kCollectionReserved4Mask' value='1048576'/>
<enum name='kCollectionReserved5Bit' value='21'/>
<enum name='kCollectionReserved5Mask' value='2097152'/>
<enum name='kCollectionReserved6Bit' value='22'/>
<enum name='kCollectionReserved6Mask' value='4194304'/>
<enum name='kCollectionReserved7Bit' value='23'/>
<enum name='kCollectionReserved7Mask' value='8388608'/>
<enum name='kCollectionReserved8Bit' value='24'/>
<enum name='kCollectionReserved8Mask' value='16777216'/>
<enum name='kCollectionReserved9Bit' value='25'/>
<enum name='kCollectionReserved9Mask' value='33554432'/>
<enum name='kCollectionUser0Bit' value='0'/>
<enum name='kCollectionUser0Mask' value='1'/>
<enum name='kCollectionUser10Bit' value='10'/>
<enum name='kCollectionUser10Mask' value='1024'/>
<enum name='kCollectionUser11Bit' value='11'/>
<enum name='kCollectionUser11Mask' value='2048'/>
<enum name='kCollectionUser12Bit' value='12'/>
<enum name='kCollectionUser12Mask' value='4096'/>
<enum name='kCollectionUser13Bit' value='13'/>
<enum name='kCollectionUser13Mask' value='8192'/>
<enum name='kCollectionUser14Bit' value='14'/>
<enum name='kCollectionUser14Mask' value='16384'/>
<enum name='kCollectionUser15Bit' value='15'/>
<enum name='kCollectionUser15Mask' value='32768'/>
<enum name='kCollectionUser1Bit' value='1'/>
<enum name='kCollectionUser1Mask' value='2'/>
<enum name='kCollectionUser2Bit' value='2'/>
<enum name='kCollectionUser2Mask' value='4'/>
<enum name='kCollectionUser3Bit' value='3'/>
<enum name='kCollectionUser3Mask' value='8'/>
<enum name='kCollectionUser4Bit' value='4'/>
<enum name='kCollectionUser4Mask' value='16'/>
<enum name='kCollectionUser5Bit' value='5'/>
<enum name='kCollectionUser5Mask' value='32'/>
<enum name='kCollectionUser6Bit' value='6'/>
<enum name='kCollectionUser6Mask' value='64'/>
<enum name='kCollectionUser7Bit' value='7'/>
<enum name='kCollectionUser7Mask' value='128'/>
<enum name='kCollectionUser8Bit' value='8'/>
<enum name='kCollectionUser8Mask' value='256'/>
<enum name='kCollectionUser9Bit' value='9'/>
<enum name='kCollectionUser9Mask' value='512'/>
<enum name='kCollectionUserAttributes' value='65535'/>
<enum name='kColor' value='14'/>
<enum name='kColorPickersFolderType' value='1668311922'/>
<enum name='kColorSyncCMMFolderType' value='1667460461'/>
<enum name='kColorSyncFolderType' value='1937337955'/>
<enum name='kColorSyncProfilesFolderType' value='1886547814'/>
<enum name='kColorSyncScriptingFolderType' value='1668506482'/>
<enum name='kComponentAliasResourceType' value='1952999265'/>
<enum name='kComponentCanDoSelect' value='-3'/>
<enum name='kComponentCloseSelect' value='-2'/>
<enum name='kComponentDebugOption' value='0'/>
<enum name='kComponentExecuteWiredActionSelect' value='-9'/>
<enum name='kComponentGetMPWorkFunctionSelect' value='-8'/>
<enum name='kComponentGetPublicResourceSelect' value='-10'/>
<enum name='kComponentOpenSelect' value='-1'/>
<enum name='kComponentRegisterSelect' value='-5'/>
<enum name='kComponentResourceType' value='1953001063'/>
<enum name='kComponentTargetSelect' value='-6'/>
<enum name='kComponentUnregisterSelect' value='-7'/>
<enum name='kComponentVersionSelect' value='-4'/>
<enum name='kComponentsFolderType' value='1668116580'/>
<enum name='kCompositionsFolderType' value='1668116595'/>
<enum name='kConfigurationLockedErr' value='-9076'/>
<enum name='kContainerAliasType' value='1685221232'/>
<enum name='kContainerCDROMAliasType' value='1667523698'/>
<enum name='kContainerFloppyAliasType' value='1718382713'/>
<enum name='kContainerFolderAliasType' value='1717858928'/>
<enum name='kContainerHardDiskAliasType' value='1751413611'/>
<enum name='kContainerServerAliasType' value='1936881266'/>
<enum name='kContainerTrashAliasType' value='1953657704'/>
<enum name='kContextualMenuItemsFolderType' value='1668116085'/>
<enum name='kControlPanelDisabledFolderType' value='1668575812'/>
<enum name='kControlPanelFolderAliasType' value='1717658484'/>
<enum name='kControlPanelFolderType' value='1668575852'/>
<enum name='kControlStripModulesFolderType' value='1935959414'/>
<enum name='kCooperativeThread' value='1'/>
<enum name='kCoreEndianAppleEventManagerDomain' value='1634039412'/>
<enum name='kCoreEndianResourceManagerDomain' value='1920168547'/>
<enum name='kCoreServicesFolderType' value='1668510326'/>
<enum name='kCreateFolder' value='1'/>
<enum name='kCreateFolderAtBoot' value='2'/>
<enum name='kCreateFolderAtBootBit' value='1'/>
<enum name='kCreateIfNeeded' value='4'/>
<enum name='kCurrentMixedModeStateRecord' value='1'/>
<enum name='kCurrentThreadID' value='1'/>
<enum name='kCurrentUserFolderLocation' value='1668641638'/>
<enum name='kCurrentUserFolderType' value='1668641650'/>
<enum name='kCurrentUserRemoteFolderLocation' value='1920299878'/>
<enum name='kCurrentUserRemoteFolderType' value='1920299890'/>
<enum name='kCustomBadgeResourceID' value='-16455'/>
<enum name='kCustomBadgeResourceType' value='1650549863'/>
<enum name='kCustomBadgeResourceVersion' value='0'/>
<enum name='kCustomIconResource' value='-16455'/>
<enum name='kD0DispatchedCStackBased' value='9'/>
<enum name='kD0DispatchedPascalStackBased' value='8'/>
<enum name='kD1DispatchedPascalStackBased' value='12'/>
<enum name='kDMCantBlock' value='-6224'/>
<enum name='kDMDisplayAlreadyInstalledErr' value='-6230'/>
<enum name='kDMDisplayNotFoundErr' value='-6229'/>
<enum name='kDMDriverNotDisplayMgrAwareErr' value='-6228'/>
<enum name='kDMFoundErr' value='-6232'/>
<enum name='kDMGenErr' value='-6220'/>
<enum name='kDMMainDisplayCannotMoveErr' value='-6231'/>
<enum name='kDMMirroringBlocked' value='-6223'/>
<enum name='kDMMirroringNotOn' value='-6225'/>
<enum name='kDMMirroringOnAlready' value='-6221'/>
<enum name='kDMNoDeviceTableclothErr' value='-6231'/>
<enum name='kDMNotFoundErr' value='-6229'/>
<enum name='kDMSWNotInitializedErr' value='-6227'/>
<enum name='kDMWrongNumberOfDisplays' value='-6222'/>
<enum name='kDOSJapanesePalmVariant' value='1'/>
<enum name='kDOSJapaneseStandardVariant' value='0'/>
<enum name='kDSpConfirmSwitchWarning' value='-30448'/>
<enum name='kDSpContextAlreadyReservedErr' value='-30444'/>
<enum name='kDSpContextNotFoundErr' value='-30446'/>
<enum name='kDSpContextNotReservedErr' value='-30445'/>
<enum name='kDSpFrameRateNotReadyErr' value='-30447'/>
<enum name='kDSpInternalErr' value='-30449'/>
<enum name='kDSpInvalidAttributesErr' value='-30443'/>
<enum name='kDSpInvalidContextErr' value='-30442'/>
<enum name='kDSpNotInitializedErr' value='-30440'/>
<enum name='kDSpStereoContextErr' value='-30450'/>
<enum name='kDSpSystemSWTooOldErr' value='-30441'/>
<enum name='kDTPAbortJobErr' value='128'/>
<enum name='kDTPHoldJobErr' value='-4200'/>
<enum name='kDTPStopQueueErr' value='-4201'/>
<enum name='kDTPThirdPartySupported' value='4'/>
<enum name='kDTPTryAgainErr' value='-4202'/>
<enum name='kDataAlignmentException' value='17'/>
<enum name='kDataBreakpointException' value='11'/>
<enum name='kDesktopFolderType' value='1684370283'/>
<enum name='kDesktopPicturesFolderType' value='1685352644'/>
<enum name='kDesktopPrinterAliasType' value='1685352545'/>
<enum name='kDeveloperApplicationsFolderType' value='1684107376'/>
<enum name='kDeveloperDocsFolderType' value='1684303715'/>
<enum name='kDeveloperFolderType' value='1684371046'/>
<enum name='kDeveloperHelpFolderType' value='1684371048'/>
<enum name='kDictionariesFolderType' value='1684628340'/>
<enum name='kDirectoryServicesFolderType' value='1685287542'/>
<enum name='kDirectoryServicesPlugInsFolderType' value='1685089383'/>
<enum name='kDispatchedParameterPhase' value='8'/>
<enum name='kDispatchedSelectorSizePhase' value='6'/>
<enum name='kDispatchedSelectorSizeWidth' value='2'/>
<enum name='kDisplayExtensionsFolderType' value='1685287020'/>
<enum name='kDocumentationFolderType' value='1768842863'/>
<enum name='kDocumentsFolderType' value='1685021555'/>
<enum name='kDomainLibraryFolderType' value='1684826466'/>
<enum name='kDomainTopLevelFolderType' value='1685352304'/>
<enum name='kDontCreateFolder' value='0'/>
<enum name='kDontPassSelector' value='8'/>
<enum name='kDownloadsFolderType' value='1685026670'/>
<enum name='kDropBoxFolderType' value='1685221232'/>
<enum name='kDropFolderAliasType' value='1717658738'/>
<enum name='kDurationForever' value='2147483647'/>
<enum name='kDurationImmediate' value='0'/>
<enum name='kDurationMicrosecond' value='-1'/>
<enum name='kDurationMillisecond' value='1'/>
<enum name='kEACCESErr' value='-3212'/>
<enum name='kEADDRINUSEErr' value='-3247'/>
<enum name='kEADDRNOTAVAILErr' value='-3248'/>
<enum name='kEAGAINErr' value='-3210'/>
<enum name='kEALREADYErr' value='-3236'/>
<enum name='kEBADFErr' value='-3208'/>
<enum name='kEBADMSGErr' value='-3272'/>
<enum name='kEBUSYErr' value='-3215'/>
<enum name='kECANCELErr' value='-3273'/>
<enum name='kECONNABORTEDErr' value='-3252'/>
<enum name='kECONNREFUSEDErr' value='-3260'/>
<enum name='kECONNRESETErr' value='-3253'/>
<enum name='kEDEADLKErr' value='-3234'/>
<enum name='kEDESTADDRREQErr' value='-3238'/>
<enum name='kEEXISTErr' value='-3216'/>
<enum name='kEFAULTErr' value='-3213'/>
<enum name='kEHOSTDOWNErr' value='-3263'/>
<enum name='kEHOSTUNREACHErr' value='-3264'/>
<enum name='kEINPROGRESSErr' value='-3276'/>
<enum name='kEINTRErr' value='-3203'/>
<enum name='kEINVALErr' value='-3221'/>
<enum name='kEIOErr' value='-3204'/>
<enum name='kEISCONNErr' value='-3255'/>
<enum name='kEMSGSIZEErr' value='-3239'/>
<enum name='kENETDOWNErr' value='-3249'/>
<enum name='kENETRESETErr' value='-3251'/>
<enum name='kENETUNREACHErr' value='-3250'/>
<enum name='kENOBUFSErr' value='-3254'/>
<enum name='kENODATAErr' value='-3275'/>
<enum name='kENODEVErr' value='-3218'/>
<enum name='kENOENTErr' value='-3201'/>
<enum name='kENOMEMErr' value='-3211'/>
<enum name='kENOMSGErr' value='-3278'/>
<enum name='kENOPROTOOPTErr' value='-3241'/>
<enum name='kENORSRCErr' value='-3202'/>
<enum name='kENOSRErr' value='-3271'/>
<enum name='kENOSTRErr' value='-3274'/>
<enum name='kENOTCONNErr' value='-3256'/>
<enum name='kENOTSOCKErr' value='-3237'/>
<enum name='kENOTTYErr' value='-3224'/>
<enum name='kENXIOErr' value='-3205'/>
<enum name='kEOPNOTSUPPErr' value='-3244'/>
<enum name='kEPERMErr' value='-3200'/>
<enum name='kEPIPEErr' value='-3231'/>
<enum name='kEPROTOErr' value='-3269'/>
<enum name='kEPROTONOSUPPORTErr' value='-3242'/>
<enum name='kEPROTOTYPEErr' value='-3240'/>
<enum name='kERANGEErr' value='-3233'/>
<enum name='kESHUTDOWNErr' value='-3257'/>
<enum name='kESOCKTNOSUPPORTErr' value='-3243'/>
<enum name='kESRCHErr' value='-3277'/>
<enum name='kETIMEDOUTErr' value='-3259'/>
<enum name='kETIMEErr' value='-3270'/>
<enum name='kETOOMANYREFSErr' value='-3258'/>
<enum name='kEUC_CN_BasicVariant' value='0'/>
<enum name='kEUC_CN_DOSVariant' value='1'/>
<enum name='kEUC_KR_BasicVariant' value='0'/>
<enum name='kEUC_KR_DOSVariant' value='1'/>
<enum name='kEWOULDBLOCKErr' value='-3234'/>
<enum name='kEditorsFolderType' value='1868850532'/>
<enum name='kEncryptPassword' value='3'/>
<enum name='kExactMatchThread' value='16'/>
<enum name='kExcludedMemoryException' value='5'/>
<enum name='kExportedFolderAliasType' value='1717658996'/>
<enum name='kExtendedFlagHasCustomBadge' value='256'/>
<enum name='kExtendedFlagHasRoutingInfo' value='4'/>
<enum name='kExtendedFlagObjectIsBusy' value='128'/>
<enum name='kExtendedFlagsAreInvalid' value='32768'/>
<enum name='kExtensionDisabledFolderType' value='1702392900'/>
<enum name='kExtensionFolderAliasType' value='1717659000'/>
<enum name='kExtensionFolderType' value='1702392942'/>
<enum name='kFBCaccessCanceled' value='-30521'/>
<enum name='kFBCaccessorStoreFailed' value='-30515'/>
<enum name='kFBCaddDocFailed' value='-30516'/>
<enum name='kFBCallocFailed' value='-30502'/>
<enum name='kFBCanalysisNotAvailable' value='-30527'/>
<enum name='kFBCbadIndexFile' value='-30505'/>
<enum name='kFBCbadIndexFileVersion' value='-30528'/>
<enum name='kFBCbadParam' value='-30503'/>
<enum name='kFBCbadSearchSession' value='-30531'/>
<enum name='kFBCcommitFailed' value='-30509'/>
<enum name='kFBCcompactionFailed' value='-30506'/>
<enum name='kFBCdeletionFailed' value='-30510'/>
<enum name='kFBCfileNotIndexed' value='-30504'/>
<enum name='kFBCflushFailed' value='-30517'/>
<enum name='kFBCillegalSessionChange' value='-30526'/>
<enum name='kFBCindexCreationFailed' value='-30514'/>
<enum name='kFBCindexDiskIOFailed' value='-30530'/>
<enum name='kFBCindexFileDestroyed' value='-30522'/>
<enum name='kFBCindexNotAvailable' value='-30523'/>
<enum name='kFBCindexNotFound' value='-30518'/>
<enum name='kFBCindexingCanceled' value='-30520'/>
<enum name='kFBCindexingFailed' value='-30508'/>
<enum name='kFBCmergingFailed' value='-30513'/>
<enum name='kFBCmoveFailed' value='-30511'/>
<enum name='kFBCnoIndexesFound' value='-30501'/>
<enum name='kFBCnoSearchSession' value='-30519'/>
<enum name='kFBCnoSuchHit' value='-30532'/>
<enum name='kFBCsearchFailed' value='-30524'/>
<enum name='kFBCsomeFilesNotIndexed' value='-30525'/>
<enum name='kFBCsummarizationCanceled' value='-30529'/>
<enum name='kFBCtokenizationFailed' value='-30512'/>
<enum name='kFBCvTwinExceptionErr' value='-30500'/>
<enum name='kFBCvalidationFailed' value='-30507'/>
<enum name='kFMFontContainerAccessErr' value='-985'/>
<enum name='kFMFontTableAccessErr' value='-984'/>
<enum name='kFMInvalidFontErr' value='-982'/>
<enum name='kFMInvalidFontFamilyErr' value='-981'/>
<enum name='kFMIterationCompleted' value='-980'/>
<enum name='kFMIterationScopeModifiedErr' value='-983'/>
<enum name='kFNDirectoryModifiedMessage' value='1'/>
<enum name='kFNNoImplicitAllSubscription' value='1'/>
<enum name='kFNNotifyInBackground' value='2'/>
<enum name='kFNSBadFlattenedSizeErr' value='-29587'/>
<enum name='kFNSBadProfileVersionErr' value='-29583'/>
<enum name='kFNSBadReferenceVersionErr' value='-29581'/>
<enum name='kFNSDuplicateReferenceErr' value='-29584'/>
<enum name='kFNSInsufficientDataErr' value='-29586'/>
<enum name='kFNSInvalidProfileErr' value='-29582'/>
<enum name='kFNSInvalidReferenceErr' value='-29580'/>
<enum name='kFNSMismatchErr' value='-29585'/>
<enum name='kFNSNameNotFoundErr' value='-29589'/>
<enum name='kFPUNotNeeded' value='8'/>
<enum name='kFSAliasInfoFSInfo' value='32'/>
<enum name='kFSAliasInfoFinderInfo' value='4'/>
<enum name='kFSAliasInfoIDs' value='16'/>
<enum name='kFSAliasInfoIsDirectory' value='8'/>
<enum name='kFSAliasInfoNone' value='0'/>
<enum name='kFSAliasInfoTargetCreateDate' value='2'/>
<enum name='kFSAliasInfoVolumeCreateDate' value='1'/>
<enum name='kFSAliasInfoVolumeFlags' value='64'/>
<enum name='kFSAllocAllOrNothingMask' value='1'/>
<enum name='kFSAllocContiguousMask' value='2'/>
<enum name='kFSAllocDefaultFlags' value='0'/>
<enum name='kFSAllocNoRoundUpMask' value='4'/>
<enum name='kFSAllocReservedMask' value='65528'/>
<enum name='kFSAllowConcurrentAsyncIOBit' value='3'/>
<enum name='kFSAllowConcurrentAsyncIOMask' value='8'/>
<enum name='kFSCatInfoAccessDate' value='256'/>
<enum name='kFSCatInfoAllDates' value='992'/>
<enum name='kFSCatInfoAttrMod' value='128'/>
<enum name='kFSCatInfoBackupDate' value='512'/>
<enum name='kFSCatInfoContentMod' value='64'/>
<enum name='kFSCatInfoCreateDate' value='32'/>
<enum name='kFSCatInfoDataSizes' value='16384'/>
<enum name='kFSCatInfoFSFileSecurityRef' value='4194304'/>
<enum name='kFSCatInfoFinderInfo' value='2048'/>
<enum name='kFSCatInfoFinderXInfo' value='4096'/>
<enum name='kFSCatInfoGettableInfo' value='262143'/>
<enum name='kFSCatInfoNodeFlags' value='2'/>
<enum name='kFSCatInfoNodeID' value='16'/>
<enum name='kFSCatInfoNone' value='0'/>
<enum name='kFSCatInfoParentDirID' value='8'/>
<enum name='kFSCatInfoPermissions' value='1024'/>
<enum name='kFSCatInfoReserved' value='-262144'/>
<enum name='kFSCatInfoRsrcSizes' value='32768'/>
<enum name='kFSCatInfoSetOwnership' value='1048576'/>
<enum name='kFSCatInfoSettableInfo' value='8163'/>
<enum name='kFSCatInfoSharingFlags' value='65536'/>
<enum name='kFSCatInfoTextEncoding' value='1'/>
<enum name='kFSCatInfoUserAccess' value='524288'/>
<enum name='kFSCatInfoUserPrivs' value='131072'/>
<enum name='kFSCatInfoValence' value='8192'/>
<enum name='kFSCatInfoVolume' value='4'/>
<enum name='kFSEjectVolumeForceEject' value='1'/>
<enum name='kFSFileOperationDefaultOptions' value='0'/>
<enum name='kFSFileOperationDoNotMoveAcrossVolumes' value='4'/>
<enum name='kFSFileOperationOverwrite' value='1'/>
<enum name='kFSFileOperationSkipPreflight' value='8'/>
<enum name='kFSFileOperationSkipSourcePermissionErrors' value='2'/>
<enum name='kFSForceReadBit' value='6'/>
<enum name='kFSForceReadMask' value='64'/>
<enum name='kFSInvalidVolumeRefNum' value='0'/>
<enum name='kFSIterateDelete' value='2'/>
<enum name='kFSIterateFlat' value='0'/>
<enum name='kFSIterateReserved' value='-4'/>
<enum name='kFSIterateSubtree' value='1'/>
<enum name='kFSMountServerMarkDoNotDisplay' value='1'/>
<enum name='kFSMountServerMountOnMountDir' value='4'/>
<enum name='kFSMountServerMountWithoutNotification' value='2'/>
<enum name='kFSMountServerSuppressConnectionUI' value='64'/>
<enum name='kFSNewLineBit' value='7'/>
<enum name='kFSNewLineCharMask' value='65280'/>
<enum name='kFSNewLineMask' value='128'/>
<enum name='kFSNoCacheBit' value='5'/>
<enum name='kFSNoCacheMask' value='32'/>
<enum name='kFSNodeCopyProtectBit' value='6'/>
<enum name='kFSNodeCopyProtectMask' value='64'/>
<enum name='kFSNodeDataOpenBit' value='3'/>
<enum name='kFSNodeDataOpenMask' value='8'/>
<enum name='kFSNodeForkOpenBit' value='7'/>
<enum name='kFSNodeForkOpenMask' value='128'/>
<enum name='kFSNodeHardLinkBit' value='8'/>
<enum name='kFSNodeHardLinkMask' value='256'/>
<enum name='kFSNodeInSharedBit' value='2'/>
<enum name='kFSNodeInSharedMask' value='4'/>
<enum name='kFSNodeIsDirectoryBit' value='4'/>
<enum name='kFSNodeIsDirectoryMask' value='16'/>
<enum name='kFSNodeIsMountedBit' value='3'/>
<enum name='kFSNodeIsMountedMask' value='8'/>
<enum name='kFSNodeIsSharePointBit' value='5'/>
<enum name='kFSNodeIsSharePointMask' value='32'/>
<enum name='kFSNodeLockedBit' value='0'/>
<enum name='kFSNodeLockedMask' value='1'/>
<enum name='kFSNodeResOpenBit' value='2'/>
<enum name='kFSNodeResOpenMask' value='4'/>
<enum name='kFSOperationStageComplete' value='3'/>
<enum name='kFSOperationStagePreflighting' value='1'/>
<enum name='kFSOperationStageRunning' value='2'/>
<enum name='kFSOperationStageUndefined' value='0'/>
<enum name='kFSPathMakeRefDefaultOptions' value='0'/>
<enum name='kFSPathMakeRefDoNotFollowLeafSymlink' value='1'/>
<enum name='kFSPleaseCacheBit' value='4'/>
<enum name='kFSPleaseCacheMask' value='16'/>
<enum name='kFSRdVerifyBit' value='6'/>
<enum name='kFSRdVerifyMask' value='64'/>
<enum name='kFSReplaceObjectDefaultOptions' value='0'/>
<enum name='kFSReplaceObjectDoNotCheckObjectWriteAccess' value='16'/>
<enum name='kFSReplaceObjectPreservePermissionInfo' value='8'/>
<enum name='kFSReplaceObjectReplaceMetadata' value='1'/>
<enum name='kFSReplaceObjectReplacePermissionInfo' value='4'/>
<enum name='kFSReplaceObjectSaveOriginalAsABackup' value='2'/>
<enum name='kFSUnmountVolumeForceUnmount' value='1'/>
<enum name='kFSVolFlagDefaultVolumeBit' value='5'/>
<enum name='kFSVolFlagDefaultVolumeMask' value='32'/>
<enum name='kFSVolFlagFilesOpenBit' value='6'/>
<enum name='kFSVolFlagFilesOpenMask' value='64'/>
<enum name='kFSVolFlagHardwareLockedBit' value='7'/>
<enum name='kFSVolFlagHardwareLockedMask' value='128'/>
<enum name='kFSVolFlagJournalingActiveBit' value='14'/>
<enum name='kFSVolFlagJournalingActiveMask' value='16384'/>
<enum name='kFSVolFlagSoftwareLockedBit' value='15'/>
<enum name='kFSVolFlagSoftwareLockedMask' value='32768'/>
<enum name='kFSVolInfoBackupDate' value='4'/>
<enum name='kFSVolInfoBlocks' value='128'/>
<enum name='kFSVolInfoCheckedDate' value='8'/>
<enum name='kFSVolInfoCreateDate' value='1'/>
<enum name='kFSVolInfoDataClump' value='1024'/>
<enum name='kFSVolInfoDirCount' value='32'/>
<enum name='kFSVolInfoDriveInfo' value='32768'/>
<enum name='kFSVolInfoFSInfo' value='16384'/>
<enum name='kFSVolInfoFileCount' value='16'/>
<enum name='kFSVolInfoFinderInfo' value='4096'/>
<enum name='kFSVolInfoFlags' value='8192'/>
<enum name='kFSVolInfoGettableInfo' value='65535'/>
<enum name='kFSVolInfoModDate' value='2'/>
<enum name='kFSVolInfoNextAlloc' value='256'/>
<enum name='kFSVolInfoNextID' value='2048'/>
<enum name='kFSVolInfoNone' value='0'/>
<enum name='kFSVolInfoRsrcClump' value='512'/>
<enum name='kFSVolInfoSettableInfo' value='12292'/>
<enum name='kFSVolInfoSizes' value='64'/>
<enum name='kFavoritesFolderType' value='1717663347'/>
<enum name='kFetchReference' value='2'/>
<enum name='kFileSystemSupportFolderType' value='1718843763'/>
<enum name='kFindByContentFolderType' value='1717724006'/>
<enum name='kFindByContentIndexesFolderType' value='1717724024'/>
<enum name='kFindByContentPluginsFolderType' value='1717724016'/>
<enum name='kFindSupportFolderType' value='1718510707'/>
<enum name='kFirstMagicBusyFiletype' value='1652193568'/>
<enum name='kFloatingPointException' value='13'/>
<enum name='kFolderActionsFolderType' value='1717662566'/>
<enum name='kFolderCreatedAdminPrivs' value='16'/>
<enum name='kFolderCreatedAdminPrivsBit' value='4'/>
<enum name='kFolderCreatedInvisible' value='4'/>
<enum name='kFolderCreatedInvisibleBit' value='2'/>
<enum name='kFolderCreatedNameLocked' value='8'/>
<enum name='kFolderCreatedNameLockedBit' value='3'/>
<enum name='kFolderInLocalOrRemoteUserFolder' value='160'/>
<enum name='kFolderInRemoteUserFolderIfAvailable' value='128'/>
<enum name='kFolderInRemoteUserFolderIfAvailableBit' value='7'/>
<enum name='kFolderInUserFolder' value='32'/>
<enum name='kFolderInUserFolderBit' value='5'/>
<enum name='kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledBit' value='10'/>
<enum name='kFolderManagerFolderInMacOS9FolderIfMacOSXIsInstalledMask' value='1024'/>
<enum name='kFolderManagerLastDomain' value='-32760'/>
<enum name='kFolderManagerNewlyCreatedFolderIsLocalizedBit' value='12'/>
<enum name='kFolderManagerNewlyCreatedFolderShouldHaveDotLocalizedCreatedWithinMask' value='4096'/>
<enum name='kFolderManagerNotCreatedOnRemoteVolumesBit' value='11'/>
<enum name='kFolderManagerNotCreatedOnRemoteVolumesMask' value='2048'/>
<enum name='kFolderMustStayOnSameVolume' value='512'/>
<enum name='kFolderMustStayOnSameVolumeBit' value='9'/>
<enum name='kFolderNeverMatchedInIdentifyFolder' value='256'/>
<enum name='kFolderNeverMatchedInIdentifyFolderBit' value='8'/>
<enum name='kFolderTrackedByAlias' value='64'/>
<enum name='kFolderTrackedByAliasBit' value='6'/>
<enum name='kFontCollectionsFolderType' value='1718510444'/>
<enum name='kFontsFolderType' value='1718578804'/>
<enum name='kForkInfoFlagsFileLockedBit' value='5'/>
<enum name='kForkInfoFlagsFileLockedMask' value='32'/>
<enum name='kForkInfoFlagsLargeFileBit' value='3'/>
<enum name='kForkInfoFlagsLargeFileMask' value='8'/>
<enum name='kForkInfoFlagsModifiedBit' value='7'/>
<enum name='kForkInfoFlagsModifiedMask' value='128'/>
<enum name='kForkInfoFlagsOwnClumpBit' value='6'/>
<enum name='kForkInfoFlagsOwnClumpMask' value='64'/>
<enum name='kForkInfoFlagsResourceBit' value='1'/>
<enum name='kForkInfoFlagsResourceMask' value='2'/>
<enum name='kForkInfoFlagsSharedWriteBit' value='4'/>
<enum name='kForkInfoFlagsSharedWriteMask' value='16'/>
<enum name='kForkInfoFlagsWriteBit' value='0'/>
<enum name='kForkInfoFlagsWriteLockedBit' value='2'/>
<enum name='kForkInfoFlagsWriteLockedMask' value='4'/>
<enum name='kForkInfoFlagsWriteMask' value='1'/>
<enum name='kFourByteCode' value='3'/>
<enum name='kFragmentIsPrepared' value='0'/>
<enum name='kFragmentNeedsPreparing' value='2'/>
<enum name='kFrameworksFolderType' value='1718772077'/>
<enum name='kGenEditorsFolderType' value='3294979177'/>
<enum name='kGeneralFailureErr' value='-9070'/>
<enum name='kGetDebugOption' value='1'/>
<enum name='kGroupID2Name' value='2'/>
<enum name='kGroupName2ID' value='4'/>
<enum name='kHIDBadLogPhysValuesErr' value='-13942'/>
<enum name='kHIDBadLogicalMaximumErr' value='-13933'/>
<enum name='kHIDBadLogicalMinimumErr' value='-13934'/>
<enum name='kHIDBadParameterErr' value='-13938'/>
<enum name='kHIDBaseError' value='-13950'/>
<enum name='kHIDBufferTooSmallErr' value='-13948'/>
<enum name='kHIDDeviceNotReady' value='-13910'/>
<enum name='kHIDEndOfDescriptorErr' value='-13936'/>
<enum name='kHIDIncompatibleReportErr' value='-13943'/>
<enum name='kHIDInvalidPreparsedDataErr' value='-13944'/>
<enum name='kHIDInvalidRangePageErr' value='-13923'/>
<enum name='kHIDInvalidReportLengthErr' value='-13940'/>
<enum name='kHIDInvalidReportTypeErr' value='-13941'/>
<enum name='kHIDInvertedLogicalRangeErr' value='-13932'/>
<enum name='kHIDInvertedPhysicalRangeErr' value='-13931'/>
<enum name='kHIDInvertedUsageRangeErr' value='-13929'/>
<enum name='kHIDNotEnoughMemoryErr' value='-13937'/>
<enum name='kHIDNotValueArrayErr' value='-13945'/>
<enum name='kHIDNullPointerErr' value='-13939'/>
<enum name='kHIDNullStateErr' value='-13949'/>
<enum name='kHIDReportCountZeroErr' value='-13925'/>
<enum name='kHIDReportIDZeroErr' value='-13924'/>
<enum name='kHIDReportSizeZeroErr' value='-13926'/>
<enum name='kHIDSuccess' value='0'/>
<enum name='kHIDUnmatchedDesignatorRangeErr' value='-13927'/>
<enum name='kHIDUnmatchedStringRangeErr' value='-13928'/>
<enum name='kHIDUnmatchedUsageRangeErr' value='-13930'/>
<enum name='kHIDUsageNotFoundErr' value='-13946'/>
<enum name='kHIDUsagePageZeroErr' value='-13935'/>
<enum name='kHIDValueOutOfRangeErr' value='-13947'/>
<enum name='kHIDVersionIncompatibleErr' value='-13909'/>
<enum name='kHandleIsResourceBit' value='5'/>
<enum name='kHandleIsResourceMask' value='32'/>
<enum name='kHandleLockedBit' value='7'/>
<enum name='kHandleLockedMask' value='128'/>
<enum name='kHandlePurgeableBit' value='6'/>
<enum name='kHandlePurgeableMask' value='64'/>
<enum name='kHasBeenInited' value='256'/>
<enum name='kHasBundle' value='8192'/>
<enum name='kHasCustomIcon' value='1024'/>
<enum name='kHasNoINITs' value='128'/>
<enum name='kHebrewFigureSpaceVariant' value='1'/>
<enum name='kHebrewStandardVariant' value='0'/>
<enum name='kHelpFolderType' value='3295177840'/>
<enum name='kISOLatin1MusicCDVariant' value='1'/>
<enum name='kISOLatin1StandardVariant' value='0'/>
<enum name='kISOLatinArabicExplicitOrderVariant' value='2'/>
<enum name='kISOLatinArabicImplicitOrderVariant' value='0'/>
<enum name='kISOLatinArabicVisualOrderVariant' value='1'/>
<enum name='kISOLatinHebrewExplicitOrderVariant' value='2'/>
<enum name='kISOLatinHebrewImplicitOrderVariant' value='0'/>
<enum name='kISOLatinHebrewVisualOrderVariant' value='1'/>
<enum name='kISSDownloadsFolderType' value='1769173860'/>
<enum name='kISpBufferToSmallErr' value='-30422'/>
<enum name='kISpDeviceActiveErr' value='-30428'/>
<enum name='kISpDeviceInactiveErr' value='-30426'/>
<enum name='kISpElementInListErr' value='-30423'/>
<enum name='kISpElementNotInListErr' value='-30424'/>
<enum name='kISpInternalErr' value='-30420'/>
<enum name='kISpListBusyErr' value='-30429'/>
<enum name='kISpSystemActiveErr' value='-30427'/>
<enum name='kISpSystemInactiveErr' value='-30425'/>
<enum name='kISpSystemListErr' value='-30421'/>
<enum name='kIllegalClockValueErr' value='-8852'/>
<enum name='kIllegalInstructionException' value='1'/>
<enum name='kInDeferredTaskMask' value='32'/>
<enum name='kInNestedInterruptMask' value='128'/>
<enum name='kInSecondaryIntHandlerMask' value='64'/>
<enum name='kInUseErr' value='-9077'/>
<enum name='kInVBLTaskMask' value='16'/>
<enum name='kIndexFilesFolderType' value='1768842360'/>
<enum name='kInputManagersFolderType' value='1768845428'/>
<enum name='kInputMethodsFolderType' value='1768845414'/>
<enum name='kInstallerLogsFolderType' value='1768712038'/>
<enum name='kInstallerReceiptsFolderType' value='1919119476'/>
<enum name='kInstructionBreakpointException' value='10'/>
<enum name='kIntegerException' value='12'/>
<enum name='kInternetFolderType' value='1768846532'/>
<enum name='kInternetLocationAFP' value='1768710502'/>
<enum name='kInternetLocationAppleTalk' value='1768710516'/>
<enum name='kInternetLocationCreator' value='1685217639'/>
<enum name='kInternetLocationFTP' value='1768711796'/>
<enum name='kInternetLocationFile' value='1768711785'/>
<enum name='kInternetLocationGeneric' value='1768712037'/>
<enum name='kInternetLocationHTTP' value='1768712308'/>
<enum name='kInternetLocationMail' value='1768713569'/>
<enum name='kInternetLocationNNTP' value='1768713847'/>
<enum name='kInternetLocationNSL' value='1768713843'/>
<enum name='kInternetPlugInFolderType' value='3295569268'/>
<enum name='kInternetSearchSitesFolderType' value='1769173862'/>
<enum name='kInternetSitesFolderType' value='1936290917'/>
<enum name='kInvalidCSClientErr' value='-9091'/>
<enum name='kInvalidDeviceNumber' value='-9089'/>
<enum name='kInvalidRegEntryErr' value='-9081'/>
<enum name='kIsAlias' value='32768'/>
<enum name='kIsInvisible' value='16384'/>
<enum name='kIsOnDesk' value='1'/>
<enum name='kIsShared' value='64'/>
<enum name='kIsStationery' value='2048'/>
<enum name='kJapaneseBasicVariant' value='2'/>
<enum name='kJapanesePostScriptPrintVariant' value='4'/>
<enum name='kJapanesePostScriptScrnVariant' value='3'/>
<enum name='kJapaneseStandardVariant' value='0'/>
<enum name='kJapaneseStdNoVerticalsVariant' value='1'/>
<enum name='kJapaneseVertAtKuPlusTenVariant' value='5'/>
<enum name='kKernelExtensionsFolderType' value='1801812084'/>
<enum name='kKeyboardLayoutsFolderType' value='1802264953'/>
<enum name='kKeychainFolderType' value='1801676910'/>
<enum name='kLarge4BitIconSize' value='512'/>
<enum name='kLarge8BitIconSize' value='1024'/>
<enum name='kLargeIconSize' value='256'/>
<enum name='kLastDomainConstant' value='-32760'/>
<enum name='kLastMagicBusyFiletype' value='1652193599'/>
<enum name='kLauncherItemsFolderType' value='1818326382'/>
<enum name='kLeftToRight' value='0'/>
<enum name='kLibraryAssistantsFolderType' value='1634956396'/>
<enum name='kLocalDomain' value='-32765'/>
<enum name='kLocaleAllPartsMask' value='63'/>
<enum name='kLocaleAndVariantNameMask' value='3'/>
<enum name='kLocaleLanguageMask' value='1'/>
<enum name='kLocaleLanguageVariantMask' value='2'/>
<enum name='kLocaleNameMask' value='1'/>
<enum name='kLocaleOperationVariantNameMask' value='2'/>
<enum name='kLocaleRegionMask' value='16'/>
<enum name='kLocaleRegionVariantMask' value='32'/>
<enum name='kLocaleScriptMask' value='4'/>
<enum name='kLocaleScriptVariantMask' value='8'/>
<enum name='kLocalesBufferTooSmallErr' value='-30001'/>
<enum name='kLocalesDefaultDisplayStatus' value='-30029'/>
<enum name='kLocalesFolderType' value='3295440739'/>
<enum name='kLocalesTableFormatErr' value='-30002'/>
<enum name='kLogsFolderType' value='1819240307'/>
<enum name='kM68kISA' value='0'/>
<enum name='kMIDIDriversFolderType' value='1835623529'/>
<enum name='kMPAddressSpaceInfoVersion' value='524289'/>
<enum name='kMPAllocate1024ByteAligned' value='10'/>
<enum name='kMPAllocate16ByteAligned' value='4'/>
<enum name='kMPAllocate32ByteAligned' value='5'/>
<enum name='kMPAllocate4096ByteAligned' value='12'/>
<enum name='kMPAllocate8ByteAligned' value='3'/>
<enum name='kMPAllocateAltiVecAligned' value='4'/>
<enum name='kMPAllocateClearMask' value='1'/>
<enum name='kMPAllocateDefaultAligned' value='0'/>
<enum name='kMPAllocateGloballyMask' value='2'/>
<enum name='kMPAllocateInterlockAligned' value='255'/>
<enum name='kMPAllocateMaxAlignment' value='16'/>
<enum name='kMPAllocateNoCreateMask' value='32'/>
<enum name='kMPAllocateNoGrowthMask' value='16'/>
<enum name='kMPAllocateResidentMask' value='4'/>
<enum name='kMPAllocateVMPageAligned' value='254'/>
<enum name='kMPAllocateVMXAligned' value='4'/>
<enum name='kMPAnyRemoteContext' value='0'/>
<enum name='kMPAsyncInterruptRemoteContext' value='3'/>
<enum name='kMPBlueBlockingErr' value='-29293'/>
<enum name='kMPCreateTaskNotDebuggableMask' value='4'/>
<enum name='kMPCreateTaskSuspendedMask' value='1'/>
<enum name='kMPCreateTaskTakesAllExceptionsMask' value='2'/>
<enum name='kMPCreateTaskValidOptionsMask' value='7'/>
<enum name='kMPCriticalRegionInfoVersion' value='393217'/>
<enum name='kMPDeletedErr' value='-29295'/>
<enum name='kMPEventInfoVersion' value='589825'/>
<enum name='kMPHighLevelDebugger' value='536870912'/>
<enum name='kMPInsufficientResourcesErr' value='-29298'/>
<enum name='kMPInterruptRemoteContext' value='2'/>
<enum name='kMPInvalidIDErr' value='-29299'/>
<enum name='kMPIterationEndErr' value='-29275'/>
<enum name='kMPLowLevelDebugger' value='0'/>
<enum name='kMPMaxAllocSize' value='1073741824'/>
<enum name='kMPMidLevelDebugger' value='268435456'/>
<enum name='kMPNanokernelNeedsMemoryErr' value='-29294'/>
<enum name='kMPNoID' value='0'/>
<enum name='kMPNotificationInfoVersion' value='786433'/>
<enum name='kMPOwningProcessRemoteContext' value='1'/>
<enum name='kMPPreserveTimerIDMask' value='1'/>
<enum name='kMPPrivilegedErr' value='-29276'/>
<enum name='kMPProcessCreatedErr' value='-29288'/>
<enum name='kMPProcessTerminatedErr' value='-29289'/>
<enum name='kMPQueueInfoVersion' value='262145'/>
<enum name='kMPSemaphoreInfoVersion' value='327681'/>
<enum name='kMPTaskAbortedErr' value='-29297'/>
<enum name='kMPTaskBlocked' value='0'/>
<enum name='kMPTaskBlockedErr' value='-29291'/>
<enum name='kMPTaskCreatedErr' value='-29290'/>
<enum name='kMPTaskInfoVersion' value='3'/>
<enum name='kMPTaskPropagate' value='0'/>
<enum name='kMPTaskPropagateMask' value='1'/>
<enum name='kMPTaskReady' value='1'/>
<enum name='kMPTaskResumeBranch' value='2'/>
<enum name='kMPTaskResumeBranchMask' value='4'/>
<enum name='kMPTaskResumeMask' value='0'/>
<enum name='kMPTaskResumeStep' value='1'/>
<enum name='kMPTaskResumeStepMask' value='2'/>
<enum name='kMPTaskRunning' value='2'/>
<enum name='kMPTaskState32BitMemoryException' value='4'/>
<enum name='kMPTaskStateFPU' value='1'/>
<enum name='kMPTaskStateMachine' value='3'/>
<enum name='kMPTaskStateRegisters' value='0'/>
<enum name='kMPTaskStateTaskInfo' value='5'/>
<enum name='kMPTaskStateVectors' value='2'/>
<enum name='kMPTaskStoppedErr' value='-29292'/>
<enum name='kMPTimeIsDeltaMask' value='2'/>
<enum name='kMPTimeIsDurationMask' value='4'/>
<enum name='kMPTimeoutErr' value='-29296'/>
<enum name='kMPUnresolvedCFragSymbolAddress' value='0'/>
<enum name='kMacArabicAlBayanVariant' value='3'/>
<enum name='kMacArabicStandardVariant' value='0'/>
<enum name='kMacArabicThuluthVariant' value='2'/>
<enum name='kMacArabicTrueTypeVariant' value='1'/>
<enum name='kMacCroatianCurrencySignVariant' value='1'/>
<enum name='kMacCroatianDefaultVariant' value='0'/>
<enum name='kMacCroatianEuroSignVariant' value='2'/>
<enum name='kMacCyrillicCurrSignStdVariant' value='1'/>
<enum name='kMacCyrillicCurrSignUkrVariant' value='2'/>
<enum name='kMacCyrillicDefaultVariant' value='0'/>
<enum name='kMacCyrillicEuroSignVariant' value='3'/>
<enum name='kMacFarsiStandardVariant' value='0'/>
<enum name='kMacFarsiTrueTypeVariant' value='1'/>
<enum name='kMacGreekDefaultVariant' value='0'/>
<enum name='kMacGreekEuroSignVariant' value='2'/>
<enum name='kMacGreekNoEuroSignVariant' value='1'/>
<enum name='kMacHebrewFigureSpaceVariant' value='1'/>
<enum name='kMacHebrewStandardVariant' value='0'/>
<enum name='kMacIcelandicStandardVariant' value='0'/>
<enum name='kMacIcelandicStdCurrSignVariant' value='2'/>
<enum name='kMacIcelandicStdDefaultVariant' value='0'/>
<enum name='kMacIcelandicStdEuroSignVariant' value='4'/>
<enum name='kMacIcelandicTTCurrSignVariant' value='3'/>
<enum name='kMacIcelandicTTDefaultVariant' value='1'/>
<enum name='kMacIcelandicTTEuroSignVariant' value='5'/>
<enum name='kMacIcelandicTrueTypeVariant' value='1'/>
<enum name='kMacJapaneseBasicVariant' value='2'/>
<enum name='kMacJapanesePostScriptPrintVariant' value='4'/>
<enum name='kMacJapanesePostScriptScrnVariant' value='3'/>
<enum name='kMacJapaneseStandardVariant' value='0'/>
<enum name='kMacJapaneseStdNoVerticalsVariant' value='1'/>
<enum name='kMacJapaneseVertAtKuPlusTenVariant' value='5'/>
<enum name='kMacMemoryMaximumMemoryManagerBlockSize' value='2147483632'/>
<enum name='kMacOSReadMesFolderType' value='1836020420'/>
<enum name='kMacRomanCurrencySignVariant' value='1'/>
<enum name='kMacRomanDefaultVariant' value='0'/>
<enum name='kMacRomanEuroSignVariant' value='2'/>
<enum name='kMacRomanLatin1CroatianVariant' value='8'/>
<enum name='kMacRomanLatin1DefaultVariant' value='0'/>
<enum name='kMacRomanLatin1IcelandicVariant' value='11'/>
<enum name='kMacRomanLatin1RomanianVariant' value='14'/>
<enum name='kMacRomanLatin1StandardVariant' value='2'/>
<enum name='kMacRomanLatin1TurkishVariant' value='6'/>
<enum name='kMacRomanStandardVariant' value='0'/>
<enum name='kMacRomanianCurrencySignVariant' value='1'/>
<enum name='kMacRomanianDefaultVariant' value='0'/>
<enum name='kMacRomanianEuroSignVariant' value='2'/>
<enum name='kMacVT100CurrencySignVariant' value='1'/>
<enum name='kMacVT100DefaultVariant' value='0'/>
<enum name='kMacVT100EuroSignVariant' value='2'/>
<enum name='kMachineNameStrID' value='-16395'/>
<enum name='kMagicBusyCreationDate' value='1329266096'/>
<enum name='kMagicTemporaryItemsFolderType' value='1836346736'/>
<enum name='kManagedItemsFolderType' value='1835101799'/>
<enum name='kMaximumBlocksIn4GB' value='8388607'/>
<enum name='kModemOutOfMemory' value='-14000'/>
<enum name='kModemPreferencesMissing' value='-14001'/>
<enum name='kModemScriptMissing' value='-14002'/>
<enum name='kModemScriptsFolderType' value='3295506276'/>
<enum name='kMountedFolderAliasType' value='1717661038'/>
<enum name='kMovieDocumentsFolderType' value='1835298659'/>
<enum name='kMultiprocessingFolderType' value='1836087398'/>
<enum name='kMusicDocumentsFolderType' value='3043258211'/>
<enum name='kNSL68kContextNotSupported' value='-4170'/>
<enum name='kNSLBadClientInfoPtr' value='-4185'/>
<enum name='kNSLBadDataTypeErr' value='-4193'/>
<enum name='kNSLBadNetConnection' value='-4192'/>
<enum name='kNSLBadProtocolTypeErr' value='-4183'/>
<enum name='kNSLBadReferenceErr' value='-4195'/>
<enum name='kNSLBadServiceTypeErr' value='-4194'/>
<enum name='kNSLBadURLSyntax' value='-4172'/>
<enum name='kNSLBufferTooSmallForData' value='-4187'/>
<enum name='kNSLCannotContinueLookup' value='-4186'/>
<enum name='kNSLErrNullPtrError' value='-4176'/>
<enum name='kNSLInitializationFailed' value='-4200'/>
<enum name='kNSLInsufficientOTVer' value='-4197'/>
<enum name='kNSLInsufficientSysVer' value='-4198'/>
<enum name='kNSLInvalidPluginSpec' value='-4190'/>
<enum name='kNSLNoCarbonLib' value='-4173'/>
<enum name='kNSLNoContextAvailable' value='-4188'/>
<enum name='kNSLNoElementsInList' value='-4196'/>
<enum name='kNSLNoPluginsForSearch' value='-4179'/>
<enum name='kNSLNoPluginsFound' value='-4181'/>
<enum name='kNSLNoSupportForService' value='-4191'/>
<enum name='kNSLNotImplementedYet' value='-4175'/>
<enum name='kNSLNotInitialized' value='-4199'/>
<enum name='kNSLNullListPtr' value='-4184'/>
<enum name='kNSLNullNeighborhoodPtr' value='-4178'/>
<enum name='kNSLPluginLoadFailed' value='-4182'/>
<enum name='kNSLRequestBufferAlreadyInList' value='-4189'/>
<enum name='kNSLSchedulerError' value='-4171'/>
<enum name='kNSLSearchAlreadyInProgress' value='-4180'/>
<enum name='kNSLSomePluginsFailedToLoad' value='-4177'/>
<enum name='kNSLUILibraryNotAvailable' value='-4174'/>
<enum name='kNSpAddPlayerFailedErr' value='-30389'/>
<enum name='kNSpAddressInUseErr' value='-30380'/>
<enum name='kNSpAlreadyAdvertisingErr' value='-30374'/>
<enum name='kNSpAlreadyInitializedErr' value='-30361'/>
<enum name='kNSpCantBlockErr' value='-30398'/>
<enum name='kNSpConnectFailedErr' value='-30395'/>
<enum name='kNSpCreateGroupFailedErr' value='-30388'/>
<enum name='kNSpFeatureNotImplementedErr' value='-30381'/>
<enum name='kNSpFreeQExhaustedErr' value='-30378'/>
<enum name='kNSpGameTerminatedErr' value='-30394'/>
<enum name='kNSpHostFailedErr' value='-30365'/>
<enum name='kNSpInitializationFailedErr' value='-30360'/>
<enum name='kNSpInvalidAddressErr' value='-30377'/>
<enum name='kNSpInvalidDefinitionErr' value='-30390'/>
<enum name='kNSpInvalidGameRefErr' value='-30367'/>
<enum name='kNSpInvalidGroupIDErr' value='-30384'/>
<enum name='kNSpInvalidParameterErr' value='-30369'/>
<enum name='kNSpInvalidPlayerIDErr' value='-30383'/>
<enum name='kNSpInvalidProtocolListErr' value='-30392'/>
<enum name='kNSpInvalidProtocolRefErr' value='-30391'/>
<enum name='kNSpJoinFailedErr' value='-30399'/>
<enum name='kNSpMemAllocationErr' value='-30373'/>
<enum name='kNSpMessageTooBigErr' value='-30397'/>
<enum name='kNSpNameRequiredErr' value='-30382'/>
<enum name='kNSpNoGroupsErr' value='-30386'/>
<enum name='kNSpNoHostVolunteersErr' value='-30387'/>
<enum name='kNSpNoPlayersErr' value='-30385'/>
<enum name='kNSpNotAdvertisingErr' value='-30376'/>
<enum name='kNSpOTNotPresentErr' value='-30370'/>
<enum name='kNSpOTVersionTooOldErr' value='-30371'/>
<enum name='kNSpPipeFullErr' value='-30364'/>
<enum name='kNSpProtocolNotAvailableErr' value='-30366'/>
<enum name='kNSpRemovePlayerFailedErr' value='-30379'/>
<enum name='kNSpSendFailedErr' value='-30396'/>
<enum name='kNSpTimeoutErr' value='-30393'/>
<enum name='kNSpTopologyNotSupportedErr' value='-30362'/>
<enum name='kNameLocked' value='4096'/>
<enum name='kNavCustomControlMessageFailedErr' value='-5697'/>
<enum name='kNavInvalidCustomControlMessageErr' value='-5698'/>
<enum name='kNavInvalidSystemConfigErr' value='-5696'/>
<enum name='kNavMissingKindStringErr' value='-5699'/>
<enum name='kNavWrongDialogClassErr' value='-5695'/>
<enum name='kNavWrongDialogStateErr' value='-5694'/>
<enum name='kNetworkDomain' value='-32764'/>
<enum name='kNewDebugHeap' value='4'/>
<enum name='kNewStyleHeap' value='2'/>
<enum name='kNewSuspend' value='1'/>
<enum name='kNoByteCode' value='0'/>
<enum name='kNoCardBusCISErr' value='-9109'/>
<enum name='kNoCardEnablersFoundErr' value='-9099'/>
<enum name='kNoCardErr' value='-9071'/>
<enum name='kNoCardSevicesSocketsErr' value='-9080'/>
<enum name='kNoClientTableErr' value='-9097'/>
<enum name='kNoCompatibleNameErr' value='-9101'/>
<enum name='kNoEnablerForCardErr' value='-9100'/>
<enum name='kNoIOWindowRequestedErr' value='-9094'/>
<enum name='kNoMoreInterruptSlotsErr' value='-9096'/>
<enum name='kNoMoreItemsErr' value='-9078'/>
<enum name='kNoMoreTimerClientsErr' value='-9095'/>
<enum name='kNoSuchPowerSource' value='-13020'/>
<enum name='kNoThreadID' value='0'/>
<enum name='kNoUserAuthentication' value='1'/>
<enum name='kNotPaged' value='2'/>
<enum name='kNotReadyErr' value='-9103'/>
<enum name='kNotZVCapableErr' value='-9108'/>
<enum name='kOTAccessErr' value='-3152'/>
<enum name='kOTAddressBusyErr' value='-3172'/>
<enum name='kOTBadAddressErr' value='-3150'/>
<enum name='kOTBadConfigurationErr' value='-3282'/>
<enum name='kOTBadDataErr' value='-3159'/>
<enum name='kOTBadFlagErr' value='-3165'/>
<enum name='kOTBadNameErr' value='-3170'/>
<enum name='kOTBadOptionErr' value='-3151'/>
<enum name='kOTBadQLenErr' value='-3171'/>
<enum name='kOTBadReferenceErr' value='-3153'/>
<enum name='kOTBadSequenceErr' value='-3156'/>
<enum name='kOTBadSyncErr' value='-3179'/>
<enum name='kOTBufferOverflowErr' value='-3160'/>
<enum name='kOTCanceledErr' value='-3180'/>
<enum name='kOTClientNotInittedErr' value='-3279'/>
<enum name='kOTConfigurationChangedErr' value='-3283'/>
<enum name='kOTDuplicateFoundErr' value='-3216'/>
<enum name='kOTFlowErr' value='-3161'/>
<enum name='kOTIndOutErr' value='-3173'/>
<enum name='kOTLookErr' value='-3158'/>
<enum name='kOTNoAddressErr' value='-3154'/>
<enum name='kOTNoDataErr' value='-3162'/>
<enum name='kOTNoDisconnectErr' value='-3163'/>
<enum name='kOTNoError' value='0'/>
<enum name='kOTNoReleaseErr' value='-3166'/>
<enum name='kOTNoStructureTypeErr' value='-3169'/>
<enum name='kOTNoUDErrErr' value='-3164'/>
<enum name='kOTNotFoundErr' value='-3201'/>
<enum name='kOTNotSupportedErr' value='-3167'/>
<enum name='kOTOutOfMemoryErr' value='-3211'/>
<enum name='kOTOutStateErr' value='-3155'/>
<enum name='kOTPortHasDiedErr' value='-3280'/>
<enum name='kOTPortLostConnection' value='-3285'/>
<enum name='kOTPortWasEjectedErr' value='-3281'/>
<enum name='kOTProtocolErr' value='-3178'/>
<enum name='kOTProviderMismatchErr' value='-3174'/>
<enum name='kOTQFullErr' value='-3177'/>
<enum name='kOTResAddressErr' value='-3176'/>
<enum name='kOTResQLenErr' value='-3175'/>
<enum name='kOTStateChangeErr' value='-3168'/>
<enum name='kOTSysErrorErr' value='-3157'/>
<enum name='kOTUserRequestedErr' value='-3284'/>
<enum name='kOld68kRTA' value='0'/>
<enum name='kOnAppropriateDisk' value='-32767'/>
<enum name='kOnSystemDisk' value='-32768'/>
<enum name='kOneByteCode' value='1'/>
<enum name='kOpaqueAddressSpaceID' value='8'/>
<enum name='kOpaqueAnyID' value='0'/>
<enum name='kOpaqueAreaID' value='11'/>
<enum name='kOpaqueCoherenceID' value='10'/>
<enum name='kOpaqueConsoleID' value='13'/>
<enum name='kOpaqueCpuID' value='7'/>
<enum name='kOpaqueCriticalRegionID' value='6'/>
<enum name='kOpaqueEventID' value='9'/>
<enum name='kOpaqueNotificationID' value='12'/>
<enum name='kOpaqueProcessID' value='1'/>
<enum name='kOpaqueQueueID' value='4'/>
<enum name='kOpaqueSemaphoreID' value='5'/>
<enum name='kOpaqueTaskID' value='2'/>
<enum name='kOpaqueTimerID' value='3'/>
<enum name='kOpenDocEditorsFolderType' value='3295634534'/>
<enum name='kOpenDocFolderType' value='1868853092'/>
<enum name='kOpenDocLibrariesFolderType' value='1868852322'/>
<enum name='kOpenDocShellPlugInsFolderType' value='1868854128'/>
<enum name='kOutOfResourceErr' value='-9079'/>
<enum name='kOwnerID2Name' value='1'/>
<enum name='kOwnerName2ID' value='3'/>
<enum name='kPEFAbsoluteExport' value='-2'/>
<enum name='kPEFCodeSection' value='0'/>
<enum name='kPEFCodeSymbol' value='0'/>
<enum name='kPEFConstantSection' value='3'/>
<enum name='kPEFDataSymbol' value='1'/>
<enum name='kPEFDebugSection' value='5'/>
<enum name='kPEFExceptionSection' value='7'/>
<enum name='kPEFExecDataSection' value='6'/>
<enum name='kPEFExpSymClassShift' value='24'/>
<enum name='kPEFExpSymMaxNameOffset' value='16777215'/>
<enum name='kPEFExpSymNameOffsetMask' value='16777215'/>
<enum name='kPEFFirstSectionHeaderOffset' value='40'/>
<enum name='kPEFGlobalShare' value='4'/>
<enum name='kPEFGlueSymbol' value='4'/>
<enum name='kPEFHashLengthShift' value='16'/>
<enum name='kPEFHashMaxLength' value='65535'/>
<enum name='kPEFHashSlotFirstKeyMask' value='262143'/>
<enum name='kPEFHashSlotMaxKeyIndex' value='262143'/>
<enum name='kPEFHashSlotMaxSymbolCount' value='16383'/>
<enum name='kPEFHashSlotSymCountShift' value='18'/>
<enum name='kPEFHashValueMask' value='65535'/>
<enum name='kPEFImpSymClassShift' value='24'/>
<enum name='kPEFImpSymMaxNameOffset' value='16777215'/>
<enum name='kPEFImpSymNameOffsetMask' value='16777215'/>
<enum name='kPEFInitLibBeforeMask' value='128'/>
<enum name='kPEFLoaderSection' value='4'/>
<enum name='kPEFPackedDataSection' value='2'/>
<enum name='kPEFPkDataBlock' value='1'/>
<enum name='kPEFPkDataCount5Mask' value='31'/>
<enum name='kPEFPkDataMaxCount5' value='31'/>
<enum name='kPEFPkDataOpcodeShift' value='5'/>
<enum name='kPEFPkDataRepeat' value='2'/>
<enum name='kPEFPkDataRepeatBlock' value='3'/>
<enum name='kPEFPkDataRepeatZero' value='4'/>
<enum name='kPEFPkDataVCountEndMask' value='128'/>
<enum name='kPEFPkDataVCountMask' value='127'/>
<enum name='kPEFPkDataVCountShift' value='7'/>
<enum name='kPEFPkDataZero' value='0'/>
<enum name='kPEFProcessShare' value='1'/>
<enum name='kPEFProtectedShare' value='5'/>
<enum name='kPEFReexportedImport' value='-3'/>
<enum name='kPEFRelocBasicOpcodeRange' value='128'/>
<enum name='kPEFRelocBySectC' value='32'/>
<enum name='kPEFRelocBySectD' value='33'/>
<enum name='kPEFRelocBySectDWithSkip' value='0'/>
<enum name='kPEFRelocImportRun' value='37'/>
<enum name='kPEFRelocIncrPosition' value='64'/>
<enum name='kPEFRelocIncrPositionMaxOffset' value='4096'/>
<enum name='kPEFRelocLgByImport' value='82'/>
<enum name='kPEFRelocLgByImportMaxIndex' value='67108863'/>
<enum name='kPEFRelocLgBySectionSubopcode' value='0'/>
<enum name='kPEFRelocLgRepeat' value='88'/>
<enum name='kPEFRelocLgRepeatMaxChunkCount' value='16'/>
<enum name='kPEFRelocLgRepeatMaxRepeatCount' value='4194303'/>
<enum name='kPEFRelocLgSetOrBySection' value='90'/>
<enum name='kPEFRelocLgSetOrBySectionMaxIndex' value='4194303'/>
<enum name='kPEFRelocLgSetSectCSubopcode' value='1'/>
<enum name='kPEFRelocLgSetSectDSubopcode' value='2'/>
<enum name='kPEFRelocRunMaxRunLength' value='512'/>
<enum name='kPEFRelocSetPosMaxOffset' value='67108863'/>
<enum name='kPEFRelocSetPosition' value='80'/>
<enum name='kPEFRelocSmByImport' value='48'/>
<enum name='kPEFRelocSmBySection' value='51'/>
<enum name='kPEFRelocSmIndexMaxIndex' value='511'/>
<enum name='kPEFRelocSmRepeat' value='72'/>
<enum name='kPEFRelocSmRepeatMaxChunkCount' value='16'/>
<enum name='kPEFRelocSmRepeatMaxRepeatCount' value='256'/>
<enum name='kPEFRelocSmSetSectC' value='49'/>
<enum name='kPEFRelocSmSetSectD' value='50'/>
<enum name='kPEFRelocTVector12' value='34'/>
<enum name='kPEFRelocTVector8' value='35'/>
<enum name='kPEFRelocUndefinedOpcode' value='255'/>
<enum name='kPEFRelocVTable8' value='36'/>
<enum name='kPEFRelocWithSkipMaxRelocCount' value='63'/>
<enum name='kPEFRelocWithSkipMaxSkipCount' value='255'/>
<enum name='kPEFTOCSymbol' value='3'/>
<enum name='kPEFTVectorSymbol' value='2'/>
<enum name='kPEFTag1' value='1248819489'/>
<enum name='kPEFTag2' value='1885693542'/>
<enum name='kPEFTracebackSection' value='8'/>
<enum name='kPEFUndefinedSymbol' value='15'/>
<enum name='kPEFUnpackedDataSection' value='1'/>
<enum name='kPEFVersion' value='1'/>
<enum name='kPEFWeakImportLibMask' value='64'/>
<enum name='kPEFWeakImportSymMask' value='128'/>
<enum name='kPOSIXErrorBase' value='100000'/>
<enum name='kPOSIXErrorE2BIG' value='100007'/>
<enum name='kPOSIXErrorEACCES' value='100013'/>
<enum name='kPOSIXErrorEADDRINUSE' value='100048'/>
<enum name='kPOSIXErrorEADDRNOTAVAIL' value='100049'/>
<enum name='kPOSIXErrorEAFNOSUPPORT' value='100047'/>
<enum name='kPOSIXErrorEAGAIN' value='100035'/>
<enum name='kPOSIXErrorEALREADY' value='100037'/>
<enum name='kPOSIXErrorEAUTH' value='100080'/>
<enum name='kPOSIXErrorEBADARCH' value='100086'/>
<enum name='kPOSIXErrorEBADEXEC' value='100085'/>
<enum name='kPOSIXErrorEBADF' value='100009'/>
<enum name='kPOSIXErrorEBADMACHO' value='100088'/>
<enum name='kPOSIXErrorEBADMSG' value='100094'/>
<enum name='kPOSIXErrorEBADRPC' value='100072'/>
<enum name='kPOSIXErrorEBUSY' value='100016'/>
<enum name='kPOSIXErrorECANCELED' value='100089'/>
<enum name='kPOSIXErrorECHILD' value='100010'/>
<enum name='kPOSIXErrorECONNABORTED' value='100053'/>
<enum name='kPOSIXErrorECONNREFUSED' value='100061'/>
<enum name='kPOSIXErrorECONNRESET' value='100054'/>
<enum name='kPOSIXErrorEDEADLK' value='100011'/>
<enum name='kPOSIXErrorEDESTADDRREQ' value='100039'/>
<enum name='kPOSIXErrorEDEVERR' value='100083'/>
<enum name='kPOSIXErrorEDOM' value='100033'/>
<enum name='kPOSIXErrorEDQUOT' value='100069'/>
<enum name='kPOSIXErrorEEXIST' value='100017'/>
<enum name='kPOSIXErrorEFAULT' value='100014'/>
<enum name='kPOSIXErrorEFBIG' value='100027'/>
<enum name='kPOSIXErrorEFTYPE' value='100079'/>
<enum name='kPOSIXErrorEHOSTDOWN' value='100064'/>
<enum name='kPOSIXErrorEHOSTUNREACH' value='100065'/>
<enum name='kPOSIXErrorEIDRM' value='100090'/>
<enum name='kPOSIXErrorEILSEQ' value='100092'/>
<enum name='kPOSIXErrorEINPROGRESS' value='100036'/>
<enum name='kPOSIXErrorEINTR' value='100004'/>
<enum name='kPOSIXErrorEINVAL' value='100022'/>
<enum name='kPOSIXErrorEIO' value='100005'/>
<enum name='kPOSIXErrorEISCONN' value='100056'/>
<enum name='kPOSIXErrorEISDIR' value='100021'/>
<enum name='kPOSIXErrorELOOP' value='100062'/>
<enum name='kPOSIXErrorEMFILE' value='100024'/>
<enum name='kPOSIXErrorEMLINK' value='100031'/>
<enum name='kPOSIXErrorEMSGSIZE' value='100040'/>
<enum name='kPOSIXErrorEMULTIHOP' value='100095'/>
<enum name='kPOSIXErrorENAMETOOLONG' value='100063'/>
<enum name='kPOSIXErrorENEEDAUTH' value='100081'/>
<enum name='kPOSIXErrorENETDOWN' value='100050'/>
<enum name='kPOSIXErrorENETRESET' value='100052'/>
<enum name='kPOSIXErrorENETUNREACH' value='100051'/>
<enum name='kPOSIXErrorENFILE' value='100023'/>
<enum name='kPOSIXErrorENOATTR' value='100093'/>
<enum name='kPOSIXErrorENOBUFS' value='100055'/>
<enum name='kPOSIXErrorENODATA' value='100096'/>
<enum name='kPOSIXErrorENODEV' value='100019'/>
<enum name='kPOSIXErrorENOENT' value='100002'/>
<enum name='kPOSIXErrorENOEXEC' value='100008'/>
<enum name='kPOSIXErrorENOLCK' value='100077'/>
<enum name='kPOSIXErrorENOLINK' value='100097'/>
<enum name='kPOSIXErrorENOMEM' value='100012'/>
<enum name='kPOSIXErrorENOMSG' value='100091'/>
<enum name='kPOSIXErrorENOPROTOOPT' value='100042'/>
<enum name='kPOSIXErrorENOSPC' value='100028'/>
<enum name='kPOSIXErrorENOSR' value='100098'/>
<enum name='kPOSIXErrorENOSTR' value='100099'/>
<enum name='kPOSIXErrorENOSYS' value='100078'/>
<enum name='kPOSIXErrorENOTBLK' value='100015'/>
<enum name='kPOSIXErrorENOTCONN' value='100057'/>
<enum name='kPOSIXErrorENOTDIR' value='100020'/>
<enum name='kPOSIXErrorENOTEMPTY' value='100066'/>
<enum name='kPOSIXErrorENOTSOCK' value='100038'/>
<enum name='kPOSIXErrorENOTSUP' value='100045'/>
<enum name='kPOSIXErrorENOTTY' value='100025'/>
<enum name='kPOSIXErrorENXIO' value='100006'/>
<enum name='kPOSIXErrorEOPNOTSUPP' value='100102'/>
<enum name='kPOSIXErrorEOVERFLOW' value='100084'/>
<enum name='kPOSIXErrorEPERM' value='100001'/>
<enum name='kPOSIXErrorEPFNOSUPPORT' value='100046'/>
<enum name='kPOSIXErrorEPIPE' value='100032'/>
<enum name='kPOSIXErrorEPROCLIM' value='100067'/>
<enum name='kPOSIXErrorEPROCUNAVAIL' value='100076'/>
<enum name='kPOSIXErrorEPROGMISMATCH' value='100075'/>
<enum name='kPOSIXErrorEPROGUNAVAIL' value='100074'/>
<enum name='kPOSIXErrorEPROTO' value='100100'/>
<enum name='kPOSIXErrorEPROTONOSUPPORT' value='100043'/>
<enum name='kPOSIXErrorEPROTOTYPE' value='100041'/>
<enum name='kPOSIXErrorEPWROFF' value='100082'/>
<enum name='kPOSIXErrorERANGE' value='100034'/>
<enum name='kPOSIXErrorEREMOTE' value='100071'/>
<enum name='kPOSIXErrorEROFS' value='100030'/>
<enum name='kPOSIXErrorERPCMISMATCH' value='100073'/>
<enum name='kPOSIXErrorESHLIBVERS' value='100087'/>
<enum name='kPOSIXErrorESHUTDOWN' value='100058'/>
<enum name='kPOSIXErrorESOCKTNOSUPPORT' value='100044'/>
<enum name='kPOSIXErrorESPIPE' value='100029'/>
<enum name='kPOSIXErrorESRCH' value='100003'/>
<enum name='kPOSIXErrorESTALE' value='100070'/>
<enum name='kPOSIXErrorETIME' value='100101'/>
<enum name='kPOSIXErrorETIMEDOUT' value='100060'/>
<enum name='kPOSIXErrorETOOMANYREFS' value='100059'/>
<enum name='kPOSIXErrorETXTBSY' value='100026'/>
<enum name='kPOSIXErrorEUSERS' value='100068'/>
<enum name='kPOSIXErrorEXDEV' value='100018'/>
<enum name='kPackageAliasType' value='1718643553'/>
<enum name='kPageInMemory' value='0'/>
<enum name='kPageOnDisk' value='1'/>
<enum name='kPascalStackBased' value='0'/>
<enum name='kPassCallToChainErr' value='-9086'/>
<enum name='kPassSelector' value='0'/>
<enum name='kPassword' value='2'/>
<enum name='kPictureDocumentsFolderType' value='1885630307'/>
<enum name='kPostCardEventErr' value='-9088'/>
<enum name='kPowerHandlerExistsForDeviceErr' value='-13006'/>
<enum name='kPowerHandlerNotFoundForDeviceErr' value='-13007'/>
<enum name='kPowerHandlerNotFoundForProcErr' value='-13008'/>
<enum name='kPowerMgtMessageNotHandled' value='-13009'/>
<enum name='kPowerMgtRequestDenied' value='-13010'/>
<enum name='kPowerPCISA' value='1'/>
<enum name='kPowerPCRTA' value='0'/>
<enum name='kPreMacOS91AppleExtrasFolderType' value='2355460292'/>
<enum name='kPreMacOS91ApplicationsFolderType' value='2356179059'/>
<enum name='kPreMacOS91AssistantsFolderType' value='2356376772'/>
<enum name='kPreMacOS91AutomountedServersFolderType' value='2809296580'/>
<enum name='kPreMacOS91InstallerLogsFolderType' value='2490132326'/>
<enum name='kPreMacOS91InternetFolderType' value='2490266820'/>
<enum name='kPreMacOS91MacOSReadMesFolderType' value='3043979972'/>
<enum name='kPreMacOS91StationeryFolderType' value='3211031412'/>
<enum name='kPreMacOS91UtilitiesFolderType' value='2675206596'/>
<enum name='kPreemptiveThread' value='2'/>
<enum name='kPreferencePanesFolderType' value='1886413166'/>
<enum name='kPreferencesFolderAliasType' value='1717661798'/>
<enum name='kPreferencesFolderType' value='1886545254'/>
<enum name='kPrintMonitorDocsFolderAliasType' value='1717661806'/>
<enum name='kPrintMonitorDocsFolderType' value='1886547572'/>
<enum name='kPrinterDescriptionFolderType' value='1886413926'/>
<enum name='kPrinterDriverFolderType' value='3295703652'/>
<enum name='kPrintersFolderType' value='1768779890'/>
<enum name='kPrintingPlugInsFolderType' value='1886415975'/>
<enum name='kPrivateFrameworksFolderType' value='1885762157'/>
<enum name='kPrivilegeViolationException' value='8'/>
<enum name='kProcDescriptorIsAbsolute' value='0'/>
<enum name='kProcDescriptorIsIndex' value='32'/>
<enum name='kProcDescriptorIsProcPtr' value='0'/>
<enum name='kProcDescriptorIsRelative' value='1'/>
<enum name='kProcessorTempRoutineRequiresMPLib2' value='-13014'/>
<enum name='kPublicFolderType' value='1886741090'/>
<enum name='kQDCorruptPICTDataErr' value='-3954'/>
<enum name='kQDCursorAlreadyRegistered' value='-3952'/>
<enum name='kQDCursorNotRegistered' value='-3953'/>
<enum name='kQDNoColorHWCursorSupport' value='-3951'/>
<enum name='kQDNoPalette' value='-3950'/>
<enum name='kQTSSUnknownErr' value='-6150'/>
<enum name='kQuickLookFolderType' value='1902928747'/>
<enum name='kQuickTimeComponentsFolderType' value='2003004784'/>
<enum name='kQuickTimeExtensionsFolderType' value='1903453560'/>
<enum name='kRAATalkInactive' value='-7134'/>
<enum name='kRACallBackFailed' value='-7138'/>
<enum name='kRAConfigurationDBInitErr' value='-7127'/>
<enum name='kRAConnectionCanceled' value='-7109'/>
<enum name='kRADuplicateIPAddr' value='-7137'/>
<enum name='kRAExtAuthenticationFailed' value='-7135'/>
<enum name='kRAIncompatiblePrefs' value='-7107'/>
<enum name='kRAInitOpenTransportFailed' value='-7122'/>
<enum name='kRAInstallationDamaged' value='-7113'/>
<enum name='kRAInternalError' value='-7112'/>
<enum name='kRAInvalidParameter' value='-7100'/>
<enum name='kRAInvalidPassword' value='-7111'/>
<enum name='kRAInvalidPort' value='-7101'/>
<enum name='kRAInvalidPortState' value='-7116'/>
<enum name='kRAInvalidSerialProtocol' value='-7117'/>
<enum name='kRAMissingResources' value='-7106'/>
<enum name='kRANCPRejectedbyPeer' value='-7136'/>
<enum name='kRANotConnected' value='-7108'/>
<enum name='kRANotEnabled' value='-7139'/>
<enum name='kRANotPrimaryInterface' value='-7126'/>
<enum name='kRANotSupported' value='-7105'/>
<enum name='kRAOutOfMemory' value='-7104'/>
<enum name='kRAPPPAuthenticationFailed' value='-7129'/>
<enum name='kRAPPPNegotiationFailed' value='-7130'/>
<enum name='kRAPPPPeerDisconnected' value='-7132'/>
<enum name='kRAPPPProtocolRejected' value='-7128'/>
<enum name='kRAPPPUserDisconnected' value='-7131'/>
<enum name='kRAPeerNotResponding' value='-7133'/>
<enum name='kRAPortBusy' value='-7114'/>
<enum name='kRAPortSetupFailed' value='-7103'/>
<enum name='kRARemoteAccessNotReady' value='-7123'/>
<enum name='kRAStartupFailed' value='-7102'/>
<enum name='kRATCPIPInactive' value='-7124'/>
<enum name='kRATCPIPNotConfigured' value='-7125'/>
<enum name='kRAUnknownPortState' value='-7115'/>
<enum name='kRAUnknownUser' value='-7110'/>
<enum name='kRAUserInteractionRequired' value='-7121'/>
<enum name='kRAUserLoginDisabled' value='-7118'/>
<enum name='kRAUserPwdChangeRequired' value='-7119'/>
<enum name='kRAUserPwdEntryRequired' value='-7120'/>
<enum name='kReadFailureErr' value='-9068'/>
<enum name='kReadOnlyMemoryException' value='6'/>
<enum name='kReadReference' value='1'/>
<enum name='kReadyThreadState' value='0'/>
<enum name='kRecentApplicationsFolderType' value='1918988400'/>
<enum name='kRecentDocumentsFolderType' value='1919184739'/>
<enum name='kRecentServersFolderType' value='1920169586'/>
<enum name='kRedirectedRelativeFolder' value='1920099692'/>
<enum name='kRegisterA0' value='4'/>
<enum name='kRegisterA1' value='5'/>
<enum name='kRegisterA2' value='6'/>
<enum name='kRegisterA3' value='7'/>
<enum name='kRegisterA4' value='12'/>
<enum name='kRegisterA5' value='13'/>
<enum name='kRegisterA6' value='14'/>
<enum name='kRegisterBased' value='2'/>
<enum name='kRegisterD0' value='0'/>
<enum name='kRegisterD1' value='1'/>
<enum name='kRegisterD2' value='2'/>
<enum name='kRegisterD3' value='3'/>
<enum name='kRegisterD4' value='8'/>
<enum name='kRegisterD5' value='9'/>
<enum name='kRegisterD6' value='10'/>
<enum name='kRegisterD7' value='11'/>
<enum name='kRegisterParameterMask' value='2147481600'/>
<enum name='kRegisterParameterPhase' value='11'/>
<enum name='kRegisterParameterSizePhase' value='0'/>
<enum name='kRegisterParameterSizeWidth' value='2'/>
<enum name='kRegisterParameterWhichPhase' value='2'/>
<enum name='kRegisterParameterWhichWidth' value='3'/>
<enum name='kRegisterParameterWidth' value='5'/>
<enum name='kRegisterResultLocationPhase' value='6'/>
<enum name='kRegisterResultLocationWidth' value='5'/>
<enum name='kRelativeFolder' value='1919249510'/>
<enum name='kResFileNotOpened' value='-1'/>
<enum name='kResolveAliasFileNoUI' value='1'/>
<enum name='kResolveAliasTryFileIDFirst' value='2'/>
<enum name='kResultSizeMask' value='48'/>
<enum name='kResultSizePhase' value='4'/>
<enum name='kResultSizeWidth' value='2'/>
<enum name='kReturnNextGroup' value='2'/>
<enum name='kReturnNextUG' value='3'/>
<enum name='kReturnNextUser' value='1'/>
<enum name='kRightToLeft' value='1'/>
<enum name='kRootFolder' value='1919906918'/>
<enum name='kRoutineDescriptorVersion' value='7'/>
<enum name='kRoutineIsDispatchedDefaultRoutine' value='16'/>
<enum name='kRoutineIsNotDispatchedDefaultRoutine' value='0'/>
<enum name='kRoutingResourceID' value='0'/>
<enum name='kRoutingResourceType' value='1919907188'/>
<enum name='kRsrcChainAboveAllMaps' value='4'/>
<enum name='kRsrcChainAboveApplicationMap' value='2'/>
<enum name='kRsrcChainBelowApplicationMap' value='1'/>
<enum name='kRsrcChainBelowSystemMap' value='0'/>
<enum name='kRunningThreadState' value='2'/>
<enum name='kSSpCantInstallErr' value='-30342'/>
<enum name='kSSpInternalErr' value='-30340'/>
<enum name='kSSpParallelUpVectorErr' value='-30343'/>
<enum name='kSSpScaleToZeroErr' value='-30344'/>
<enum name='kSSpVersionErr' value='-30341'/>
<enum name='kScreenSaversFolderType' value='1935897198'/>
<enum name='kScriptingAdditionsFolderType' value='3295896434'/>
<enum name='kScriptsFolderType' value='1935897284'/>
<enum name='kSelectorsAreIndexable' value='1'/>
<enum name='kSelectorsAreNotIndexable' value='0'/>
<enum name='kServicesFolderType' value='1937138547'/>
<enum name='kSetDebugOption' value='2'/>
<enum name='kSharedFolderAliasType' value='1717662568'/>
<enum name='kSharedLibrariesFolderType' value='3295439202'/>
<enum name='kSharedUserDataFolderType' value='1935958388'/>
<enum name='kShiftJIS_BasicVariant' value='0'/>
<enum name='kShiftJIS_DOSVariant' value='1'/>
<enum name='kShiftJIS_MusicCDVariant' value='2'/>
<enum name='kShutdownFolderType' value='1936221286'/>
<enum name='kShutdownItemsDisabledFolderType' value='1936221252'/>
<enum name='kSmall4BitIconSize' value='128'/>
<enum name='kSmall8BitIconSize' value='256'/>
<enum name='kSmallIconSize' value='64'/>
<enum name='kSoundSetsFolderType' value='1936614515'/>
<enum name='kSpeakableItemsFolderType' value='1936747369'/>
<enum name='kSpecialCase' value='15'/>
<enum name='kSpecialCaseCaretHook' value='0'/>
<enum name='kSpecialCaseDrawHook' value='4'/>
<enum name='kSpecialCaseEOLHook' value='1'/>
<enum name='kSpecialCaseGNEFilterProc' value='11'/>
<enum name='kSpecialCaseHighHook' value='0'/>
<enum name='kSpecialCaseHitTestHook' value='5'/>
<enum name='kSpecialCaseMBarHook' value='12'/>
<enum name='kSpecialCaseNWidthHook' value='3'/>
<enum name='kSpecialCaseProtocolHandler' value='7'/>
<enum name='kSpecialCaseSelectorMask' value='1008'/>
<enum name='kSpecialCaseSelectorPhase' value='4'/>
<enum name='kSpecialCaseSelectorWidth' value='6'/>
<enum name='kSpecialCaseSocketListener' value='8'/>
<enum name='kSpecialCaseTEDoText' value='10'/>
<enum name='kSpecialCaseTEFindWord' value='6'/>
<enum name='kSpecialCaseTERecalc' value='9'/>
<enum name='kSpecialCaseTextWidthHook' value='2'/>
<enum name='kSpecialCaseWidthHook' value='2'/>
<enum name='kSpecialFolder' value='1936745318'/>
<enum name='kSpeechFolderType' value='1936745320'/>
<enum name='kSpotlightImportersFolderType' value='1936289136'/>
<enum name='kSpotlightMetadataCacheFolderType' value='1935893352'/>
<enum name='kSpotlightSavedSearchesFolderType' value='1936748404'/>
<enum name='kStackDispatchedPascalStackBased' value='14'/>
<enum name='kStackOverflowException' value='14'/>
<enum name='kStackParameterMask' value='-64'/>
<enum name='kStackParameterPhase' value='6'/>
<enum name='kStackParameterWidth' value='2'/>
<enum name='kStartupFolderAliasType' value='1717662580'/>
<enum name='kStartupFolderType' value='1937011316'/>
<enum name='kStartupItemsDisabledFolderType' value='1937011268'/>
<enum name='kStationeryFolderType' value='1868854132'/>
<enum name='kStoppedThreadState' value='1'/>
<enum name='kSysSWTooOld' value='-6226'/>
<enum name='kSystemControlPanelFolderType' value='1935897708'/>
<enum name='kSystemDesktopFolderType' value='1935962987'/>
<enum name='kSystemDomain' value='-32766'/>
<enum name='kSystemExtensionDisabledFolderType' value='1835098948'/>
<enum name='kSystemFolderAliasType' value='1717662585'/>
<enum name='kSystemFolderType' value='1835098995'/>
<enum name='kSystemPreferencesFolderType' value='1936749158'/>
<enum name='kSystemResFile' value='0'/>
<enum name='kSystemSoundsFolderType' value='1936944740'/>
<enum name='kSystemTrashFolderType' value='1937011315'/>
<enum name='kTECAddFallbackInterruptBit' value='7'/>
<enum name='kTECAddFallbackInterruptMask' value='128'/>
<enum name='kTECAddForceASCIIChangesBit' value='4'/>
<enum name='kTECAddForceASCIIChangesMask' value='16'/>
<enum name='kTECAddTextRunHeuristicsBit' value='6'/>
<enum name='kTECAddTextRunHeuristicsMask' value='64'/>
<enum name='kTECArrayFullErr' value='-8751'/>
<enum name='kTECAvailableEncodingsResType' value='1668703598'/>
<enum name='kTECAvailableSniffersResType' value='1668707174'/>
<enum name='kTECBadTextRunErr' value='-8752'/>
<enum name='kTECBufferBelowMinimumSizeErr' value='-8750'/>
<enum name='kTECChinesePluginSignature' value='1887070319'/>
<enum name='kTECConversionInfoResType' value='1668704614'/>
<enum name='kTECCorruptConverterErr' value='-8748'/>
<enum name='kTECDirectionErr' value='-8756'/>
<enum name='kTECDisableFallbacksBit' value='16'/>
<enum name='kTECDisableFallbacksMask' value='65536'/>
<enum name='kTECDisableLooseMappingsBit' value='17'/>
<enum name='kTECDisableLooseMappingsMask' value='131072'/>
<enum name='kTECFallbackTextLengthFixBit' value='1'/>
<enum name='kTECFallbackTextLengthFixMask' value='2'/>
<enum name='kTECGlobalsUnavailableErr' value='-8770'/>
<enum name='kTECIncompleteElementErr' value='-8755'/>
<enum name='kTECInfoCurrentFormat' value='2'/>
<enum name='kTECInternetNameDefaultUsageMask' value='0'/>
<enum name='kTECInternetNameStrictUsageMask' value='1'/>
<enum name='kTECInternetNameTolerantUsageMask' value='2'/>
<enum name='kTECInternetNamesResType' value='1668705645'/>
<enum name='kTECItemUnavailableErr' value='-8771'/>
<enum name='kTECJapanesePluginSignature' value='1886023790'/>
<enum name='kTECKeepInfoFixBit' value='0'/>
<enum name='kTECKeepInfoFixMask' value='1'/>
<enum name='kTECKoreanPluginSignature' value='1886089074'/>
<enum name='kTECMailEncodingsResType' value='1668705644'/>
<enum name='kTECMissingTableErr' value='-8745'/>
<enum name='kTECNeedFlushStatus' value='-8784'/>
<enum name='kTECNoConversionPathErr' value='-8749'/>
<enum name='kTECOutputBufferFullStatus' value='-8785'/>
<enum name='kTECPartialCharErr' value='-8753'/>
<enum name='kTECPluginCreator' value='1701733238'/>
<enum name='kTECPluginDispatchTableCurrentVersion' value='65538'/>
<enum name='kTECPluginDispatchTableVersion1' value='65536'/>
<enum name='kTECPluginDispatchTableVersion1_1' value='65537'/>
<enum name='kTECPluginDispatchTableVersion1_2' value='65538'/>
<enum name='kTECPluginManyToOne' value='1836347247'/>
<enum name='kTECPluginOneToMany' value='1869901677'/>
<enum name='kTECPluginOneToOne' value='1869901679'/>
<enum name='kTECPluginSniffObj' value='1936615782'/>
<enum name='kTECPluginType' value='1701015655'/>
<enum name='kTECPreferredEncodingFixBit' value='5'/>
<enum name='kTECPreferredEncodingFixMask' value='32'/>
<enum name='kTECResourceID' value='128'/>
<enum name='kTECSignature' value='1701733238'/>
<enum name='kTECSubTextEncodingsResType' value='1668707170'/>
<enum name='kTECTableChecksumErr' value='-8746'/>
<enum name='kTECTableFormatErr' value='-8747'/>
<enum name='kTECTextRunBitClearFixBit' value='2'/>
<enum name='kTECTextRunBitClearFixMask' value='4'/>
<enum name='kTECTextToUnicodeScanFixBit' value='3'/>
<enum name='kTECTextToUnicodeScanFixMask' value='8'/>
<enum name='kTECUnicodePluginSignature' value='1886744169'/>
<enum name='kTECUnmappableElementErr' value='-8754'/>
<enum name='kTECUsedFallbacksStatus' value='-8783'/>
<enum name='kTECWebEncodingsResType' value='1668708194'/>
<enum name='kTEC_MIBEnumDontCare' value='-1'/>
<enum name='kTMTaskActive' value='32768'/>
<enum name='kTXNATSUIIsNotInstalledErr' value='-22016'/>
<enum name='kTXNAlreadyInitializedErr' value='-22012'/>
<enum name='kTXNAttributeTagInvalidForRunErr' value='-22009'/>
<enum name='kTXNBadDefaultFileTypeWarning' value='-22005'/>
<enum name='kTXNCannotAddFrameErr' value='-22001'/>
<enum name='kTXNCannotSetAutoIndentErr' value='-22006'/>
<enum name='kTXNCannotTurnTSMOffWhenUsingUnicodeErr' value='-22013'/>
<enum name='kTXNCopyNotAllowedInEchoModeErr' value='-22014'/>
<enum name='kTXNDataTypeNotAllowedErr' value='-22015'/>
<enum name='kTXNEndIterationErr' value='-22000'/>
<enum name='kTXNIllegalToCrossDataBoundariesErr' value='-22003'/>
<enum name='kTXNInvalidFrameIDErr' value='-22002'/>
<enum name='kTXNInvalidRunIndex' value='-22011'/>
<enum name='kTXNNoMatchErr' value='-22008'/>
<enum name='kTXNOutsideOfFrameErr' value='-22018'/>
<enum name='kTXNOutsideOfLineErr' value='-22017'/>
<enum name='kTXNRunIndexOutofBoundsErr' value='-22007'/>
<enum name='kTXNSomeOrAllTagsInvalidForRunErr' value='-22010'/>
<enum name='kTXNUserCanceledOperationErr' value='-22004'/>
<enum name='kTaskCreationException' value='16'/>
<enum name='kTaskTerminationException' value='15'/>
<enum name='kTemporaryFolderType' value='1952804208'/>
<enum name='kTemporaryItemsInCacheDataFolderType' value='1987341680'/>
<enum name='kTemporaryItemsInUserDomainFolderType' value='1952804209'/>
<enum name='kTextCenter' value='1'/>
<enum name='kTextEncodingANSEL' value='1537'/>
<enum name='kTextEncodingBaseName' value='1'/>
<enum name='kTextEncodingBig5' value='2563'/>
<enum name='kTextEncodingBig5_E' value='2569'/>
<enum name='kTextEncodingBig5_HKSCS_1999' value='2566'/>
<enum name='kTextEncodingCNS_11643_92_P1' value='1617'/>
<enum name='kTextEncodingCNS_11643_92_P2' value='1618'/>
<enum name='kTextEncodingCNS_11643_92_P3' value='1619'/>
<enum name='kTextEncodingDOSArabic' value='1049'/>
<enum name='kTextEncodingDOSBalticRim' value='1030'/>
<enum name='kTextEncodingDOSCanadianFrench' value='1048'/>
<enum name='kTextEncodingDOSChineseSimplif' value='1057'/>
<enum name='kTextEncodingDOSChineseTrad' value='1059'/>
<enum name='kTextEncodingDOSCyrillic' value='1043'/>
<enum name='kTextEncodingDOSGreek' value='1029'/>
<enum name='kTextEncodingDOSGreek1' value='1041'/>
<enum name='kTextEncodingDOSGreek2' value='1052'/>
<enum name='kTextEncodingDOSHebrew' value='1047'/>
<enum name='kTextEncodingDOSIcelandic' value='1046'/>
<enum name='kTextEncodingDOSJapanese' value='1056'/>
<enum name='kTextEncodingDOSKorean' value='1058'/>
<enum name='kTextEncodingDOSLatin1' value='1040'/>
<enum name='kTextEncodingDOSLatin2' value='1042'/>
<enum name='kTextEncodingDOSLatinUS' value='1024'/>
<enum name='kTextEncodingDOSNordic' value='1050'/>
<enum name='kTextEncodingDOSPortuguese' value='1045'/>
<enum name='kTextEncodingDOSRussian' value='1051'/>
<enum name='kTextEncodingDOSThai' value='1053'/>
<enum name='kTextEncodingDOSTurkish' value='1044'/>
<enum name='kTextEncodingDefaultFormat' value='0'/>
<enum name='kTextEncodingDefaultVariant' value='0'/>
<enum name='kTextEncodingEBCDIC_CP037' value='3074'/>
<enum name='kTextEncodingEBCDIC_LatinCore' value='3073'/>
<enum name='kTextEncodingEBCDIC_US' value='3073'/>
<enum name='kTextEncodingEUC_CN' value='2352'/>
<enum name='kTextEncodingEUC_JP' value='2336'/>
<enum name='kTextEncodingEUC_KR' value='2368'/>
<enum name='kTextEncodingEUC_TW' value='2353'/>
<enum name='kTextEncodingFormatName' value='3'/>
<enum name='kTextEncodingFullName' value='0'/>
<enum name='kTextEncodingGBK_95' value='1585'/>
<enum name='kTextEncodingGB_18030_2000' value='1586'/>
<enum name='kTextEncodingGB_18030_2005' value='1586'/>
<enum name='kTextEncodingGB_2312_80' value='1584'/>
<enum name='kTextEncodingHZ_GB_2312' value='2565'/>
<enum name='kTextEncodingISO10646_1993' value='257'/>
<enum name='kTextEncodingISOLatin1' value='513'/>
<enum name='kTextEncodingISOLatin10' value='528'/>
<enum name='kTextEncodingISOLatin2' value='514'/>
<enum name='kTextEncodingISOLatin3' value='515'/>
<enum name='kTextEncodingISOLatin4' value='516'/>
<enum name='kTextEncodingISOLatin5' value='521'/>
<enum name='kTextEncodingISOLatin6' value='522'/>
<enum name='kTextEncodingISOLatin7' value='525'/>
<enum name='kTextEncodingISOLatin8' value='526'/>
<enum name='kTextEncodingISOLatin9' value='527'/>
<enum name='kTextEncodingISOLatinArabic' value='518'/>
<enum name='kTextEncodingISOLatinCyrillic' value='517'/>
<enum name='kTextEncodingISOLatinGreek' value='519'/>
<enum name='kTextEncodingISOLatinHebrew' value='520'/>
<enum name='kTextEncodingISO_2022_CN' value='2096'/>
<enum name='kTextEncodingISO_2022_CN_EXT' value='2097'/>
<enum name='kTextEncodingISO_2022_JP' value='2080'/>
<enum name='kTextEncodingISO_2022_JP_1' value='2082'/>
<enum name='kTextEncodingISO_2022_JP_2' value='2081'/>
<enum name='kTextEncodingISO_2022_JP_3' value='2083'/>
<enum name='kTextEncodingISO_2022_KR' value='2112'/>
<enum name='kTextEncodingJIS_C6226_78' value='1572'/>
<enum name='kTextEncodingJIS_X0201_76' value='1568'/>
<enum name='kTextEncodingJIS_X0208_83' value='1569'/>
<enum name='kTextEncodingJIS_X0208_90' value='1570'/>
<enum name='kTextEncodingJIS_X0212_90' value='1571'/>
<enum name='kTextEncodingJIS_X0213_MenKuTen' value='1577'/>
<enum name='kTextEncodingKOI8_R' value='2562'/>
<enum name='kTextEncodingKOI8_U' value='2568'/>
<enum name='kTextEncodingKSC_5601_87' value='1600'/>
<enum name='kTextEncodingKSC_5601_92_Johab' value='1601'/>
<enum name='kTextEncodingMacArabic' value='4'/>
<enum name='kTextEncodingMacArmenian' value='24'/>
<enum name='kTextEncodingMacBengali' value='13'/>
<enum name='kTextEncodingMacBurmese' value='19'/>
<enum name='kTextEncodingMacCeltic' value='39'/>
<enum name='kTextEncodingMacCentralEurRoman' value='29'/>
<enum name='kTextEncodingMacChineseSimp' value='25'/>
<enum name='kTextEncodingMacChineseTrad' value='2'/>
<enum name='kTextEncodingMacCroatian' value='36'/>
<enum name='kTextEncodingMacCyrillic' value='7'/>
<enum name='kTextEncodingMacDevanagari' value='9'/>
<enum name='kTextEncodingMacDingbats' value='34'/>
<enum name='kTextEncodingMacEastEurRoman' value='29'/>
<enum name='kTextEncodingMacEthiopic' value='28'/>
<enum name='kTextEncodingMacExtArabic' value='31'/>
<enum name='kTextEncodingMacFarsi' value='140'/>
<enum name='kTextEncodingMacGaelic' value='40'/>
<enum name='kTextEncodingMacGeez' value='28'/>
<enum name='kTextEncodingMacGeorgian' value='23'/>
<enum name='kTextEncodingMacGreek' value='6'/>
<enum name='kTextEncodingMacGujarati' value='11'/>
<enum name='kTextEncodingMacGurmukhi' value='10'/>
<enum name='kTextEncodingMacHFS' value='255'/>
<enum name='kTextEncodingMacHebrew' value='5'/>
<enum name='kTextEncodingMacIcelandic' value='37'/>
<enum name='kTextEncodingMacInuit' value='236'/>
<enum name='kTextEncodingMacJapanese' value='1'/>
<enum name='kTextEncodingMacKannada' value='16'/>
<enum name='kTextEncodingMacKeyboardGlyphs' value='41'/>
<enum name='kTextEncodingMacKhmer' value='20'/>
<enum name='kTextEncodingMacKorean' value='3'/>
<enum name='kTextEncodingMacLaotian' value='22'/>
<enum name='kTextEncodingMacMalayalam' value='17'/>
<enum name='kTextEncodingMacMongolian' value='27'/>
<enum name='kTextEncodingMacOriya' value='12'/>
<enum name='kTextEncodingMacRSymbol' value='8'/>
<enum name='kTextEncodingMacRoman' value='0'/>
<enum name='kTextEncodingMacRomanLatin1' value='2564'/>
<enum name='kTextEncodingMacRomanian' value='38'/>
<enum name='kTextEncodingMacSimpChinese' value='25'/>
<enum name='kTextEncodingMacSinhalese' value='18'/>
<enum name='kTextEncodingMacSymbol' value='33'/>
<enum name='kTextEncodingMacTamil' value='14'/>
<enum name='kTextEncodingMacTelugu' value='15'/>
<enum name='kTextEncodingMacThai' value='21'/>
<enum name='kTextEncodingMacTibetan' value='26'/>
<enum name='kTextEncodingMacTradChinese' value='2'/>
<enum name='kTextEncodingMacTurkish' value='35'/>
<enum name='kTextEncodingMacUkrainian' value='152'/>
<enum name='kTextEncodingMacUnicode' value='126'/>
<enum name='kTextEncodingMacUninterp' value='32'/>
<enum name='kTextEncodingMacVT100' value='252'/>
<enum name='kTextEncodingMacVietnamese' value='30'/>
<enum name='kTextEncodingMultiRun' value='4095'/>
<enum name='kTextEncodingNextStepJapanese' value='2818'/>
<enum name='kTextEncodingNextStepLatin' value='2817'/>
<enum name='kTextEncodingShiftJIS' value='2561'/>
<enum name='kTextEncodingShiftJIS_X0213' value='1576'/>
<enum name='kTextEncodingShiftJIS_X0213_00' value='1576'/>
<enum name='kTextEncodingUS_ASCII' value='1536'/>
<enum name='kTextEncodingUnicodeDefault' value='256'/>
<enum name='kTextEncodingUnicodeV1_1' value='257'/>
<enum name='kTextEncodingUnicodeV2_0' value='259'/>
<enum name='kTextEncodingUnicodeV2_1' value='259'/>
<enum name='kTextEncodingUnicodeV3_0' value='260'/>
<enum name='kTextEncodingUnicodeV3_1' value='261'/>
<enum name='kTextEncodingUnicodeV3_2' value='262'/>
<enum name='kTextEncodingUnicodeV4_0' value='264'/>
<enum name='kTextEncodingUnicodeV5_0' value='266'/>
<enum name='kTextEncodingUnicodeV5_1' value='267'/>
<enum name='kTextEncodingUnicodeV6_0' value='269'/>
<enum name='kTextEncodingUnicodeV6_1' value='270'/>
<enum name='kTextEncodingUnicodeV6_3' value='272'/>
<enum name='kTextEncodingUnknown' value='65535'/>
<enum name='kTextEncodingVISCII' value='2567'/>
<enum name='kTextEncodingVariantName' value='2'/>
<enum name='kTextEncodingWindowsANSI' value='1280'/>
<enum name='kTextEncodingWindowsArabic' value='1286'/>
<enum name='kTextEncodingWindowsBalticRim' value='1287'/>
<enum name='kTextEncodingWindowsCyrillic' value='1282'/>
<enum name='kTextEncodingWindowsGreek' value='1283'/>
<enum name='kTextEncodingWindowsHebrew' value='1285'/>
<enum name='kTextEncodingWindowsKoreanJohab' value='1296'/>
<enum name='kTextEncodingWindowsLatin1' value='1280'/>
<enum name='kTextEncodingWindowsLatin2' value='1281'/>
<enum name='kTextEncodingWindowsLatin5' value='1284'/>
<enum name='kTextEncodingWindowsVietnamese' value='1288'/>
<enum name='kTextEncodingsFolderType' value='3295962488'/>
<enum name='kTextFlushDefault' value='0'/>
<enum name='kTextFlushLeft' value='-2'/>
<enum name='kTextFlushRight' value='-1'/>
<enum name='kTextLanguageDontCare' value='-128'/>
<enum name='kTextMalformedInputErr' value='-8739'/>
<enum name='kTextRegionDontCare' value='-128'/>
<enum name='kTextScriptDontCare' value='-128'/>
<enum name='kTextUndefinedElementErr' value='-8740'/>
<enum name='kTextUnsupportedEncodingErr' value='-8738'/>
<enum name='kThemesFolderType' value='1953000805'/>
<enum name='kThinkCStackBased' value='5'/>
<enum name='kTooManyIOWindowsErr' value='-9104'/>
<enum name='kTraceException' value='9'/>
<enum name='kTrapException' value='2'/>
<enum name='kTrashFolderType' value='1953657704'/>
<enum name='kTwoByteCode' value='2'/>
<enum name='kTwoWayEncryptPassword' value='6'/>
<enum name='kUCBidiCatArabicNumber' value='6'/>
<enum name='kUCBidiCatBlockSeparator' value='8'/>
<enum name='kUCBidiCatBoundaryNeutral' value='19'/>
<enum name='kUCBidiCatCommonNumberSeparator' value='7'/>
<enum name='kUCBidiCatEuroNumber' value='3'/>
<enum name='kUCBidiCatEuroNumberSeparator' value='4'/>
<enum name='kUCBidiCatEuroNumberTerminator' value='5'/>
<enum name='kUCBidiCatFirstStrongIsolate' value='22'/>
<enum name='kUCBidiCatLeftRight' value='1'/>
<enum name='kUCBidiCatLeftRightEmbedding' value='13'/>
<enum name='kUCBidiCatLeftRightIsolate' value='20'/>
<enum name='kUCBidiCatLeftRightOverride' value='15'/>
<enum name='kUCBidiCatNonSpacingMark' value='18'/>
<enum name='kUCBidiCatNotApplicable' value='0'/>
<enum name='kUCBidiCatOtherNeutral' value='11'/>
<enum name='kUCBidiCatPopDirectionalFormat' value='17'/>
<enum name='kUCBidiCatPopDirectionalIsolate' value='23'/>
<enum name='kUCBidiCatRightLeft' value='2'/>
<enum name='kUCBidiCatRightLeftArabic' value='12'/>
<enum name='kUCBidiCatRightLeftEmbedding' value='14'/>
<enum name='kUCBidiCatRightLeftIsolate' value='21'/>
<enum name='kUCBidiCatRightLeftOverride' value='16'/>
<enum name='kUCBidiCatSegmentSeparator' value='9'/>
<enum name='kUCBidiCatWhitespace' value='10'/>
<enum name='kUCCharPropTypeBidiCategory' value='3'/>
<enum name='kUCCharPropTypeCombiningClass' value='2'/>
<enum name='kUCCharPropTypeDecimalDigitValue' value='4'/>
<enum name='kUCCharPropTypeGenlCategory' value='1'/>
<enum name='kUCCollateCaseInsensitiveMask' value='8'/>
<enum name='kUCCollateComposeInsensitiveMask' value='2'/>
<enum name='kUCCollateDiacritInsensitiveMask' value='16'/>
<enum name='kUCCollateDigitsAsNumberMask' value='131072'/>
<enum name='kUCCollateDigitsOverrideMask' value='65536'/>
<enum name='kUCCollatePunctuationSignificantMask' value='32768'/>
<enum name='kUCCollateStandardOptions' value='6'/>
<enum name='kUCCollateTypeHFSExtended' value='1'/>
<enum name='kUCCollateTypeMask' value='4278190080'/>
<enum name='kUCCollateTypeShiftBits' value='24'/>
<enum name='kUCCollateTypeSourceMask' value='255'/>
<enum name='kUCCollateWidthInsensitiveMask' value='4'/>
<enum name='kUCGenlCatLetterLowercase' value='15'/>
<enum name='kUCGenlCatLetterModifier' value='17'/>
<enum name='kUCGenlCatLetterOther' value='18'/>
<enum name='kUCGenlCatLetterTitlecase' value='16'/>
<enum name='kUCGenlCatLetterUppercase' value='14'/>
<enum name='kUCGenlCatMarkEnclosing' value='7'/>
<enum name='kUCGenlCatMarkNonSpacing' value='5'/>
<enum name='kUCGenlCatMarkSpacingCombining' value='6'/>
<enum name='kUCGenlCatNumberDecimalDigit' value='8'/>
<enum name='kUCGenlCatNumberLetter' value='9'/>
<enum name='kUCGenlCatNumberOther' value='10'/>
<enum name='kUCGenlCatOtherControl' value='1'/>
<enum name='kUCGenlCatOtherFormat' value='2'/>
<enum name='kUCGenlCatOtherNotAssigned' value='0'/>
<enum name='kUCGenlCatOtherPrivateUse' value='4'/>
<enum name='kUCGenlCatOtherSurrogate' value='3'/>
<enum name='kUCGenlCatPunctClose' value='23'/>
<enum name='kUCGenlCatPunctConnector' value='20'/>
<enum name='kUCGenlCatPunctDash' value='21'/>
<enum name='kUCGenlCatPunctFinalQuote' value='25'/>
<enum name='kUCGenlCatPunctInitialQuote' value='24'/>
<enum name='kUCGenlCatPunctOpen' value='22'/>
<enum name='kUCGenlCatPunctOther' value='26'/>
<enum name='kUCGenlCatSeparatorLine' value='12'/>
<enum name='kUCGenlCatSeparatorParagraph' value='13'/>
<enum name='kUCGenlCatSeparatorSpace' value='11'/>
<enum name='kUCGenlCatSymbolCurrency' value='29'/>
<enum name='kUCGenlCatSymbolMath' value='28'/>
<enum name='kUCGenlCatSymbolModifier' value='30'/>
<enum name='kUCGenlCatSymbolOther' value='31'/>
<enum name='kUCHighSurrogateRangeEnd' value='56319'/>
<enum name='kUCHighSurrogateRangeStart' value='55296'/>
<enum name='kUCKeyActionAutoKey' value='2'/>
<enum name='kUCKeyActionDisplay' value='3'/>
<enum name='kUCKeyActionDown' value='0'/>
<enum name='kUCKeyActionUp' value='1'/>
<enum name='kUCKeyLayoutFeatureInfoFormat' value='8193'/>
<enum name='kUCKeyLayoutHeaderFormat' value='4098'/>
<enum name='kUCKeyModifiersToTableNumFormat' value='12289'/>
<enum name='kUCKeyOutputGetIndexMask' value='16383'/>
<enum name='kUCKeyOutputSequenceIndexMask' value='32768'/>
<enum name='kUCKeyOutputStateIndexMask' value='16384'/>
<enum name='kUCKeyOutputTestForIndexMask' value='49152'/>
<enum name='kUCKeySequenceDataIndexFormat' value='28673'/>
<enum name='kUCKeyStateEntryRangeFormat' value='2'/>
<enum name='kUCKeyStateEntryTerminalFormat' value='1'/>
<enum name='kUCKeyStateRecordsIndexFormat' value='20481'/>
<enum name='kUCKeyStateTerminatorsFormat' value='24577'/>
<enum name='kUCKeyToCharTableIndexFormat' value='16385'/>
<enum name='kUCKeyTranslateNoDeadKeysBit' value='0'/>
<enum name='kUCKeyTranslateNoDeadKeysMask' value='1'/>
<enum name='kUCLowSurrogateRangeEnd' value='57343'/>
<enum name='kUCLowSurrogateRangeStart' value='56320'/>
<enum name='kUCOutputBufferTooSmall' value='-25340'/>
<enum name='kUCTSDirectionNext' value='0'/>
<enum name='kUCTSDirectionPrevious' value='1'/>
<enum name='kUCTSNoKeysAddedToObjectErr' value='-25342'/>
<enum name='kUCTSOptionsDataIsOrderedMask' value='2'/>
<enum name='kUCTSOptionsNoneMask' value='0'/>
<enum name='kUCTSOptionsReleaseStringMask' value='1'/>
<enum name='kUCTSSearchListErr' value='-25343'/>
<enum name='kUCTextBreakCharMask' value='1'/>
<enum name='kUCTextBreakClusterMask' value='4'/>
<enum name='kUCTextBreakGoBackwardsMask' value='2'/>
<enum name='kUCTextBreakIterateMask' value='4'/>
<enum name='kUCTextBreakLeadingEdgeMask' value='1'/>
<enum name='kUCTextBreakLineMask' value='64'/>
<enum name='kUCTextBreakLocatorMissingType' value='-25341'/>
<enum name='kUCTextBreakParagraphMask' value='256'/>
<enum name='kUCTextBreakWordMask' value='16'/>
<enum name='kUCTokenNotFound' value='-25346'/>
<enum name='kUCTokenizerIterationFinished' value='-25344'/>
<enum name='kUCTokenizerUnknownLang' value='-25345'/>
<enum name='kUCTypeSelectMaxListSize' value='4294967295'/>
<enum name='kURL68kNotSupportedError' value='-30788'/>
<enum name='kURLAccessNotAvailableError' value='-30787'/>
<enum name='kURLAuthenticationError' value='-30776'/>
<enum name='kURLDestinationExistsError' value='-30772'/>
<enum name='kURLExtensionFailureError' value='-30785'/>
<enum name='kURLFileEmptyError' value='-30783'/>
<enum name='kURLInvalidCallError' value='-30781'/>
<enum name='kURLInvalidConfigurationError' value='-30786'/>
<enum name='kURLInvalidURLError' value='-30773'/>
<enum name='kURLInvalidURLReferenceError' value='-30770'/>
<enum name='kURLProgressAlreadyDisplayedError' value='-30771'/>
<enum name='kURLPropertyBufferTooSmallError' value='-30779'/>
<enum name='kURLPropertyNotYetKnownError' value='-30777'/>
<enum name='kURLServerBusyError' value='-30775'/>
<enum name='kURLUnknownPropertyError' value='-30778'/>
<enum name='kURLUnsettablePropertyError' value='-30780'/>
<enum name='kURLUnsupportedSchemeError' value='-30774'/>
<enum name='kUSBAbortedError' value='-6982'/>
<enum name='kUSBAlreadyOpenErr' value='-6991'/>
<enum name='kUSBBadDispatchTable' value='-6950'/>
<enum name='kUSBBitstufErr' value='-6914'/>
<enum name='kUSBBufOvrRunErr' value='-6904'/>
<enum name='kUSBBufUnderRunErr' value='-6903'/>
<enum name='kUSBCRCErr' value='-6915'/>
<enum name='kUSBCompletionError' value='-6984'/>
<enum name='kUSBDataToggleErr' value='-6913'/>
<enum name='kUSBDeviceBusy' value='-6977'/>
<enum name='kUSBDeviceDisconnected' value='-6972'/>
<enum name='kUSBDeviceErr' value='-6989'/>
<enum name='kUSBDeviceNotSuspended' value='-6973'/>
<enum name='kUSBDevicePowerProblem' value='-6976'/>
<enum name='kUSBDeviceSuspended' value='-6974'/>
<enum name='kUSBEndpointStallErr' value='-6912'/>
<enum name='kUSBFlagsError' value='-6983'/>
<enum name='kUSBIncorrectTypeErr' value='-6995'/>
<enum name='kUSBInternalErr' value='-6999'/>
<enum name='kUSBInternalReserved1' value='-6960'/>
<enum name='kUSBInternalReserved10' value='-6951'/>
<enum name='kUSBInternalReserved2' value='-6959'/>
<enum name='kUSBInternalReserved3' value='-6958'/>
<enum name='kUSBInternalReserved4' value='-6957'/>
<enum name='kUSBInternalReserved5' value='-6956'/>
<enum name='kUSBInternalReserved6' value='-6955'/>
<enum name='kUSBInternalReserved7' value='-6954'/>
<enum name='kUSBInternalReserved8' value='-6953'/>
<enum name='kUSBInternalReserved9' value='-6952'/>
<enum name='kUSBInvalidBuffer' value='-6975'/>
<enum name='kUSBLinkErr' value='-6916'/>
<enum name='kUSBNoBandwidthError' value='-6981'/>
<enum name='kUSBNoDelay' value='0'/>
<enum name='kUSBNoDeviceErr' value='-6990'/>
<enum name='kUSBNoErr' value='0'/>
<enum name='kUSBNoTran' value='0'/>
<enum name='kUSBNotFound' value='-6987'/>
<enum name='kUSBNotHandled' value='-6987'/>
<enum name='kUSBNotRespondingErr' value='-6911'/>
<enum name='kUSBNotSent1Err' value='-6902'/>
<enum name='kUSBNotSent2Err' value='-6901'/>
<enum name='kUSBOutOfMemoryErr' value='-6988'/>
<enum name='kUSBOverRunErr' value='-6908'/>
<enum name='kUSBPBLengthError' value='-6985'/>
<enum name='kUSBPBVersionError' value='-6986'/>
<enum name='kUSBPIDCheckErr' value='-6910'/>
<enum name='kUSBPending' value='1'/>
<enum name='kUSBPipeIdleError' value='-6980'/>
<enum name='kUSBPipeStalledError' value='-6979'/>
<enum name='kUSBPortDisabled' value='-6969'/>
<enum name='kUSBQueueAborted' value='-6970'/>
<enum name='kUSBQueueFull' value='-6948'/>
<enum name='kUSBRes1Err' value='-6906'/>
<enum name='kUSBRes2Err' value='-6905'/>
<enum name='kUSBRqErr' value='-6994'/>
<enum name='kUSBTimedOut' value='-6971'/>
<enum name='kUSBTooManyPipesErr' value='-6996'/>
<enum name='kUSBTooManyTransactionsErr' value='-6992'/>
<enum name='kUSBUnderRunErr' value='-6907'/>
<enum name='kUSBUnknownDeviceErr' value='-6998'/>
<enum name='kUSBUnknownInterfaceErr' value='-6978'/>
<enum name='kUSBUnknownNotification' value='-6949'/>
<enum name='kUSBUnknownPipeErr' value='-6997'/>
<enum name='kUSBUnknownRequestErr' value='-6993'/>
<enum name='kUSBWrongPIDErr' value='-6909'/>
<enum name='kUTCDefaultOptions' value='0'/>
<enum name='kUTCOverflowErr' value='-8851'/>
<enum name='kUTCUnderflowErr' value='-8850'/>
<enum name='kUnicode16BitFormat' value='0'/>
<enum name='kUnicode32BitFormat' value='3'/>
<enum name='kUnicodeByteOrderMark' value='65279'/>
<enum name='kUnicodeCanonicalCompVariant' value='3'/>
<enum name='kUnicodeCanonicalDecompVariant' value='2'/>
<enum name='kUnicodeCollationClass' value='1969450860'/>
<enum name='kUnicodeDefaultDirection' value='0'/>
<enum name='kUnicodeDefaultDirectionMask' value='0'/>
<enum name='kUnicodeDirectionalityBits' value='2'/>
<enum name='kUnicodeDirectionalityMask' value='12'/>
<enum name='kUnicodeFallbackCustomFirst' value='3'/>
<enum name='kUnicodeFallbackCustomOnly' value='1'/>
<enum name='kUnicodeFallbackDefaultFirst' value='2'/>
<enum name='kUnicodeFallbackDefaultOnly' value='0'/>
<enum name='kUnicodeFallbackInterruptSafeMask' value='4'/>
<enum name='kUnicodeFallbackSequencingBits' value='0'/>
<enum name='kUnicodeFallbackSequencingMask' value='3'/>
<enum name='kUnicodeForceASCIIRangeBit' value='9'/>
<enum name='kUnicodeForceASCIIRangeMask' value='512'/>
<enum name='kUnicodeHFSPlusCompVariant' value='9'/>
<enum name='kUnicodeHFSPlusDecompVariant' value='8'/>
<enum name='kUnicodeKeepInfoBit' value='1'/>
<enum name='kUnicodeKeepInfoMask' value='2'/>
<enum name='kUnicodeKeepSameEncodingBit' value='8'/>
<enum name='kUnicodeKeepSameEncodingMask' value='256'/>
<enum name='kUnicodeLeftToRight' value='1'/>
<enum name='kUnicodeLeftToRightMask' value='4'/>
<enum name='kUnicodeLooseMappingsBit' value='5'/>
<enum name='kUnicodeLooseMappingsMask' value='32'/>
<enum name='kUnicodeMapLineFeedToReturnBit' value='12'/>
<enum name='kUnicodeMapLineFeedToReturnMask' value='4096'/>
<enum name='kUnicodeMatchOtherBaseBit' value='3'/>
<enum name='kUnicodeMatchOtherBaseMask' value='8'/>
<enum name='kUnicodeMatchOtherFormatBit' value='5'/>
<enum name='kUnicodeMatchOtherFormatMask' value='32'/>
<enum name='kUnicodeMatchOtherVariantBit' value='4'/>
<enum name='kUnicodeMatchOtherVariantMask' value='16'/>
<enum name='kUnicodeMatchUnicodeBaseBit' value='0'/>
<enum name='kUnicodeMatchUnicodeBaseMask' value='1'/>
<enum name='kUnicodeMatchUnicodeFormatBit' value='2'/>
<enum name='kUnicodeMatchUnicodeFormatMask' value='4'/>
<enum name='kUnicodeMatchUnicodeVariantBit' value='1'/>
<enum name='kUnicodeMatchUnicodeVariantMask' value='2'/>
<enum name='kUnicodeMaxDecomposedVariant' value='2'/>
<enum name='kUnicodeNoCompatibilityVariant' value='1'/>
<enum name='kUnicodeNoComposedVariant' value='3'/>
<enum name='kUnicodeNoCorporateVariant' value='4'/>
<enum name='kUnicodeNoHalfwidthCharsBit' value='10'/>
<enum name='kUnicodeNoHalfwidthCharsMask' value='1024'/>
<enum name='kUnicodeNoSubset' value='0'/>
<enum name='kUnicodeNormalizationFormC' value='3'/>
<enum name='kUnicodeNormalizationFormD' value='5'/>
<enum name='kUnicodeNotAChar' value='65535'/>
<enum name='kUnicodeObjectReplacement' value='65532'/>
<enum name='kUnicodeReplacementChar' value='65533'/>
<enum name='kUnicodeRightToLeft' value='2'/>
<enum name='kUnicodeRightToLeftMask' value='8'/>
<enum name='kUnicodeSCSUFormat' value='8'/>
<enum name='kUnicodeStringUnterminatedBit' value='6'/>
<enum name='kUnicodeStringUnterminatedMask' value='64'/>
<enum name='kUnicodeSwappedByteOrderMark' value='65534'/>
<enum name='kUnicodeTextBreakClass' value='1969386091'/>
<enum name='kUnicodeTextRunBit' value='7'/>
<enum name='kUnicodeTextRunHeuristicsBit' value='11'/>
<enum name='kUnicodeTextRunHeuristicsMask' value='2048'/>
<enum name='kUnicodeTextRunMask' value='128'/>
<enum name='kUnicodeUTF16BEFormat' value='4'/>
<enum name='kUnicodeUTF16Format' value='0'/>
<enum name='kUnicodeUTF16LEFormat' value='5'/>
<enum name='kUnicodeUTF32BEFormat' value='6'/>
<enum name='kUnicodeUTF32Format' value='3'/>
<enum name='kUnicodeUTF32LEFormat' value='7'/>
<enum name='kUnicodeUTF7Format' value='1'/>
<enum name='kUnicodeUTF8Format' value='2'/>
<enum name='kUnicodeUseExternalEncodingFormBit' value='13'/>
<enum name='kUnicodeUseExternalEncodingFormMask' value='8192'/>
<enum name='kUnicodeUseFallbacksBit' value='0'/>
<enum name='kUnicodeUseFallbacksMask' value='1'/>
<enum name='kUnicodeUseHFSPlusMapping' value='4'/>
<enum name='kUnicodeUseLatestMapping' value='-1'/>
<enum name='kUnicodeVerticalFormBit' value='4'/>
<enum name='kUnicodeVerticalFormMask' value='16'/>
<enum name='kUnknownException' value='0'/>
<enum name='kUnmappedMemoryException' value='4'/>
<enum name='kUnresolvablePageFaultException' value='7'/>
<enum name='kUnsupportedCardErr' value='-9098'/>
<enum name='kUnsupportedFunctionErr' value='-9072'/>
<enum name='kUnsupportedModeErr' value='-9073'/>
<enum name='kUnsupportedVsErr' value='-9090'/>
<enum name='kUseCurrentISA' value='0'/>
<enum name='kUseNativeISA' value='4'/>
<enum name='kUsePremadeThread' value='2'/>
<enum name='kUseWidePositioning' value='256'/>
<enum name='kUserDomain' value='-32763'/>
<enum name='kUserSpecificTmpFolderType' value='1970564464'/>
<enum name='kUsersFolderType' value='1970500211'/>
<enum name='kUtilitiesFolderType' value='1970563524'/>
<enum name='kVCBFlagsHFSPlusAPIsBit' value='4'/>
<enum name='kVCBFlagsHFSPlusAPIsMask' value='16'/>
<enum name='kVCBFlagsHardwareGoneBit' value='5'/>
<enum name='kVCBFlagsHardwareGoneMask' value='32'/>
<enum name='kVCBFlagsIdleFlushBit' value='3'/>
<enum name='kVCBFlagsIdleFlushMask' value='8'/>
<enum name='kVCBFlagsVolumeDirtyBit' value='15'/>
<enum name='kVCBFlagsVolumeDirtyMask' value='32768'/>
<enum name='kVLibTag2' value='1447848290'/>
<enum name='kVoicesFolderType' value='1719037795'/>
<enum name='kVolumeRootFolderType' value='1919905652'/>
<enum name='kVolumeSettingsFolderType' value='1987274340'/>
<enum name='kWhereToEmptyTrashFolderType' value='1701671028'/>
<enum name='kWidePosOffsetBit' value='8'/>
<enum name='kWidgetsFolderType' value='2003068788'/>
<enum name='kWindowsLatin1PalmVariant' value='1'/>
<enum name='kWindowsLatin1StandardVariant' value='0'/>
<enum name='kWriteFailureErr' value='-9069'/>
<enum name='kWriteProtectedErr' value='-9075'/>
<enum name='kWriteReference' value='0'/>
<enum name='kX86ISA' value='2'/>
<enum name='kX86RTA' value='32'/>
<enum name='kXLibTag1' value='-263364253'/>
<enum name='kXLibVersion' value='1'/>
<enum name='kadministratorUser' value='1'/>
<enum name='kernelAlreadyFreeErr' value='-2421'/>
<enum name='kernelAsyncReceiveLimitErr' value='-2414'/>
<enum name='kernelAsyncSendLimitErr' value='-2413'/>
<enum name='kernelAttributeErr' value='-2412'/>
<enum name='kernelCanceledErr' value='-2402'/>
<enum name='kernelDeletePermissionErr' value='-2410'/>
<enum name='kernelExceptionErr' value='-2418'/>
<enum name='kernelExecutePermissionErr' value='-2409'/>
<enum name='kernelExecutionLevelErr' value='-2411'/>
<enum name='kernelIDErr' value='-2419'/>
<enum name='kernelInUseErr' value='-2416'/>
<enum name='kernelIncompleteErr' value='-2401'/>
<enum name='kernelObjectExistsErr' value='-2406'/>
<enum name='kernelOptionsErr' value='-2403'/>
<enum name='kernelPrivilegeErr' value='-2404'/>
<enum name='kernelReadPermissionErr' value='-2408'/>
<enum name='kernelReturnValueErr' value='-2422'/>
<enum name='kernelTerminatedErr' value='-2417'/>
<enum name='kernelTimeoutErr' value='-2415'/>
<enum name='kernelUnrecoverableErr' value='-2499'/>
<enum name='kernelUnsupportedErr' value='-2405'/>
<enum name='kernelWritePermissionErr' value='-2407'/>
<enum name='kfullPrivileges' value='458759'/>
<enum name='kiMovieFolderType' value='1768779638'/>
<enum name='kiMoviePlugInsFolderType' value='1768779881'/>
<enum name='kiMovieSoundEffectsFolderType' value='1768780645'/>
<enum name='kioACAccessBlankAccessBit' value='28'/>
<enum name='kioACAccessBlankAccessMask' value='268435456'/>
<enum name='kioACAccessEveryoneReadBit' value='17'/>
<enum name='kioACAccessEveryoneReadMask' value='131072'/>
<enum name='kioACAccessEveryoneSearchBit' value='16'/>
<enum name='kioACAccessEveryoneSearchMask' value='65536'/>
<enum name='kioACAccessEveryoneWriteBit' value='18'/>
<enum name='kioACAccessEveryoneWriteMask' value='262144'/>
<enum name='kioACAccessGroupReadBit' value='9'/>
<enum name='kioACAccessGroupReadMask' value='512'/>
<enum name='kioACAccessGroupSearchBit' value='8'/>
<enum name='kioACAccessGroupSearchMask' value='256'/>
<enum name='kioACAccessGroupWriteBit' value='10'/>
<enum name='kioACAccessGroupWriteMask' value='1024'/>
<enum name='kioACAccessOwnerBit' value='31'/>
<enum name='kioACAccessOwnerMask' value='-2147483648'/>
<enum name='kioACAccessOwnerReadBit' value='1'/>
<enum name='kioACAccessOwnerReadMask' value='2'/>
<enum name='kioACAccessOwnerSearchBit' value='0'/>
<enum name='kioACAccessOwnerSearchMask' value='1'/>
<enum name='kioACAccessOwnerWriteBit' value='2'/>
<enum name='kioACAccessOwnerWriteMask' value='4'/>
<enum name='kioACAccessUserReadBit' value='25'/>
<enum name='kioACAccessUserReadMask' value='33554432'/>
<enum name='kioACAccessUserSearchBit' value='24'/>
<enum name='kioACAccessUserSearchMask' value='16777216'/>
<enum name='kioACAccessUserWriteBit' value='26'/>
<enum name='kioACAccessUserWriteMask' value='67108864'/>
<enum name='kioACUserNoMakeChangesBit' value='2'/>
<enum name='kioACUserNoMakeChangesMask' value='4'/>
<enum name='kioACUserNoSeeFilesBit' value='1'/>
<enum name='kioACUserNoSeeFilesMask' value='2'/>
<enum name='kioACUserNoSeeFolderBit' value='0'/>
<enum name='kioACUserNoSeeFolderMask' value='1'/>
<enum name='kioACUserNotOwnerBit' value='7'/>
<enum name='kioACUserNotOwnerMask' value='128'/>
<enum name='kioFCBFileLockedBit' value='13'/>
<enum name='kioFCBFileLockedMask' value='8192'/>
<enum name='kioFCBLargeFileBit' value='11'/>
<enum name='kioFCBLargeFileMask' value='2048'/>
<enum name='kioFCBModifiedBit' value='15'/>
<enum name='kioFCBModifiedMask' value='32768'/>
<enum name='kioFCBOwnClumpBit' value='14'/>
<enum name='kioFCBOwnClumpMask' value='16384'/>
<enum name='kioFCBResourceBit' value='9'/>
<enum name='kioFCBResourceMask' value='512'/>
<enum name='kioFCBSharedWriteBit' value='12'/>
<enum name='kioFCBSharedWriteMask' value='4096'/>
<enum name='kioFCBWriteBit' value='8'/>
<enum name='kioFCBWriteLockedBit' value='10'/>
<enum name='kioFCBWriteLockedMask' value='1024'/>
<enum name='kioFCBWriteMask' value='256'/>
<enum name='kioFlAttribCopyProtBit' value='6'/>
<enum name='kioFlAttribCopyProtMask' value='64'/>
<enum name='kioFlAttribDataOpenBit' value='3'/>
<enum name='kioFlAttribDataOpenMask' value='8'/>
<enum name='kioFlAttribDirBit' value='4'/>
<enum name='kioFlAttribDirMask' value='16'/>
<enum name='kioFlAttribFileOpenBit' value='7'/>
<enum name='kioFlAttribFileOpenMask' value='128'/>
<enum name='kioFlAttribInSharedBit' value='2'/>
<enum name='kioFlAttribInSharedMask' value='4'/>
<enum name='kioFlAttribLockedBit' value='0'/>
<enum name='kioFlAttribLockedMask' value='1'/>
<enum name='kioFlAttribMountedBit' value='3'/>
<enum name='kioFlAttribMountedMask' value='8'/>
<enum name='kioFlAttribResOpenBit' value='2'/>
<enum name='kioFlAttribResOpenMask' value='4'/>
<enum name='kioFlAttribSharePointBit' value='5'/>
<enum name='kioFlAttribSharePointMask' value='32'/>
<enum name='kioVAtrbDefaultVolumeBit' value='5'/>
<enum name='kioVAtrbDefaultVolumeMask' value='32'/>
<enum name='kioVAtrbFilesOpenBit' value='6'/>
<enum name='kioVAtrbFilesOpenMask' value='64'/>
<enum name='kioVAtrbHardwareLockedBit' value='7'/>
<enum name='kioVAtrbHardwareLockedMask' value='128'/>
<enum name='kioVAtrbSoftwareLockedBit' value='15'/>
<enum name='kioVAtrbSoftwareLockedMask' value='32768'/>
<enum name='knoGroup' value='0'/>
<enum name='knoUser' value='0'/>
<enum name='kownerPrivileges' value='7'/>
<enum name='laDictionaryNotOpenedErr' value='-6992'/>
<enum name='laDictionaryTooManyErr' value='-6994'/>
<enum name='laDictionaryUnknownErr' value='-6993'/>
<enum name='laEngineNotFoundErr' value='-7000'/>
<enum name='laEnvironmentBusyErr' value='-6985'/>
<enum name='laEnvironmentExistErr' value='-6987'/>
<enum name='laEnvironmentNotFoundErr' value='-6986'/>
<enum name='laFailAnalysisErr' value='-6990'/>
<enum name='laInvalidPathErr' value='-6988'/>
<enum name='laNoMoreMorphemeErr' value='-6989'/>
<enum name='laPropertyErr' value='-6999'/>
<enum name='laPropertyIsReadOnlyErr' value='-6997'/>
<enum name='laPropertyNotFoundErr' value='-6998'/>
<enum name='laPropertyUnknownErr' value='-6996'/>
<enum name='laPropertyValueErr' value='-6995'/>
<enum name='laTextOverFlowErr' value='-6991'/>
<enum name='laTooSmallBufferErr' value='-6984'/>
<enum name='langAfricaans' value='141'/>
<enum name='langAfrikaans' value='141'/>
<enum name='langAlbanian' value='36'/>
<enum name='langAmharic' value='85'/>
<enum name='langArabic' value='12'/>
<enum name='langArmenian' value='51'/>
<enum name='langAssamese' value='68'/>
<enum name='langAymara' value='134'/>
<enum name='langAzerbaijanAr' value='50'/>
<enum name='langAzerbaijanRoman' value='150'/>
<enum name='langAzerbaijani' value='49'/>
<enum name='langBasque' value='129'/>
<enum name='langBelorussian' value='46'/>
<enum name='langBengali' value='67'/>
<enum name='langBreton' value='142'/>
<enum name='langBulgarian' value='44'/>
<enum name='langBurmese' value='77'/>
<enum name='langByelorussian' value='46'/>
<enum name='langCatalan' value='130'/>
<enum name='langChewa' value='92'/>
<enum name='langChinese' value='19'/>
<enum name='langCroatian' value='18'/>
<enum name='langCzech' value='38'/>
<enum name='langDanish' value='7'/>
<enum name='langDutch' value='4'/>
<enum name='langDzongkha' value='137'/>
<enum name='langEnglish' value='0'/>
<enum name='langEsperanto' value='94'/>
<enum name='langEstonian' value='27'/>
<enum name='langFaeroese' value='30'/>
<enum name='langFaroese' value='30'/>
<enum name='langFarsi' value='31'/>
<enum name='langFinnish' value='13'/>
<enum name='langFlemish' value='34'/>
<enum name='langFrench' value='1'/>
<enum name='langGalician' value='140'/>
<enum name='langGalla' value='87'/>
<enum name='langGeorgian' value='52'/>
<enum name='langGerman' value='2'/>
<enum name='langGreek' value='14'/>
<enum name='langGreekAncient' value='148'/>
<enum name='langGreekPoly' value='148'/>
<enum name='langGreenlandic' value='149'/>
<enum name='langGuarani' value='133'/>
<enum name='langGujarati' value='69'/>
<enum name='langHebrew' value='10'/>
<enum name='langHindi' value='21'/>
<enum name='langHungarian' value='26'/>
<enum name='langIcelandic' value='15'/>
<enum name='langIndonesian' value='81'/>
<enum name='langInuktitut' value='143'/>
<enum name='langIrish' value='35'/>
<enum name='langIrishGaelic' value='35'/>
<enum name='langIrishGaelicScript' value='146'/>
<enum name='langItalian' value='3'/>
<enum name='langJapanese' value='11'/>
<enum name='langJavaneseRom' value='138'/>
<enum name='langKannada' value='73'/>
<enum name='langKashmiri' value='61'/>
<enum name='langKazakh' value='48'/>
<enum name='langKhmer' value='78'/>
<enum name='langKinyarwanda' value='90'/>
<enum name='langKirghiz' value='54'/>
<enum name='langKorean' value='23'/>
<enum name='langKurdish' value='60'/>
<enum name='langLao' value='79'/>
<enum name='langLappish' value='29'/>
<enum name='langLapponian' value='29'/>
<enum name='langLatin' value='131'/>
<enum name='langLatvian' value='28'/>
<enum name='langLettish' value='28'/>
<enum name='langLithuanian' value='24'/>
<enum name='langMacedonian' value='43'/>
<enum name='langMalagasy' value='93'/>
<enum name='langMalayArabic' value='84'/>
<enum name='langMalayRoman' value='83'/>
<enum name='langMalayalam' value='72'/>
<enum name='langMalta' value='16'/>
<enum name='langMaltese' value='16'/>
<enum name='langManxGaelic' value='145'/>
<enum name='langMarathi' value='66'/>
<enum name='langMoldavian' value='53'/>
<enum name='langMongolian' value='57'/>
<enum name='langMongolianCyr' value='58'/>
<enum name='langNepali' value='64'/>
<enum name='langNorwegian' value='9'/>
<enum name='langNyanja' value='92'/>
<enum name='langNynorsk' value='151'/>
<enum name='langOriya' value='71'/>
<enum name='langOromo' value='87'/>
<enum name='langPashto' value='59'/>
<enum name='langPersian' value='31'/>
<enum name='langPolish' value='25'/>
<enum name='langPortugese' value='8'/>
<enum name='langPortuguese' value='8'/>
<enum name='langPunjabi' value='70'/>
<enum name='langQuechua' value='132'/>
<enum name='langRomanian' value='37'/>
<enum name='langRuanda' value='90'/>
<enum name='langRundi' value='91'/>
<enum name='langRussian' value='32'/>
<enum name='langSaamisk' value='29'/>
<enum name='langSami' value='29'/>
<enum name='langSanskrit' value='65'/>
<enum name='langScottishGaelic' value='144'/>
<enum name='langSerbian' value='42'/>
<enum name='langSimpChinese' value='33'/>
<enum name='langSindhi' value='62'/>
<enum name='langSinhalese' value='76'/>
<enum name='langSlovak' value='39'/>
<enum name='langSlovenian' value='40'/>
<enum name='langSomali' value='88'/>
<enum name='langSpanish' value='6'/>
<enum name='langSundaneseRom' value='139'/>
<enum name='langSwahili' value='89'/>
<enum name='langSwedish' value='5'/>
<enum name='langTagalog' value='82'/>
<enum name='langTajiki' value='55'/>
<enum name='langTamil' value='74'/>
<enum name='langTatar' value='135'/>
<enum name='langTelugu' value='75'/>
<enum name='langThai' value='22'/>
<enum name='langTibetan' value='63'/>
<enum name='langTigrinya' value='86'/>
<enum name='langTongan' value='147'/>
<enum name='langTradChinese' value='19'/>
<enum name='langTurkish' value='17'/>
<enum name='langTurkmen' value='56'/>
<enum name='langUighur' value='136'/>
<enum name='langUkrainian' value='45'/>
<enum name='langUnspecified' value='32767'/>
<enum name='langUrdu' value='20'/>
<enum name='langUzbek' value='47'/>
<enum name='langVietnamese' value='80'/>
<enum name='langWelsh' value='128'/>
<enum name='langYiddish' value='41'/>
<enum name='langYugoslavian' value='18'/>
<enum name='lapProtErr' value='-94'/>
<enum name='lastDskErr' value='-64'/>
<enum name='leftOverChars' value='2'/>
<enum name='leftSingGuillemet' value='220'/>
<enum name='limitReachedErr' value='-30549'/>
<enum name='localOnlyErr' value='-905'/>
<enum name='lockPortBitsBadPortErr' value='-8984'/>
<enum name='lockPortBitsBadSurfaceErr' value='-8980'/>
<enum name='lockPortBitsSurfaceLostErr' value='-8985'/>
<enum name='lockPortBitsWindowClippedErr' value='-8983'/>
<enum name='lockPortBitsWindowMovedErr' value='-8981'/>
<enum name='lockPortBitsWindowResizedErr' value='-8982'/>
<enum name='lockPortBitsWrongGDeviceErr' value='-8991'/>
<enum name='longDate' value='1'/>
<enum name='longDateFound' value='1'/>
<enum name='longDay' value='0'/>
<enum name='longMonth' value='2'/>
<enum name='longWeek' value='1'/>
<enum name='longYear' value='3'/>
<enum name='mBarNFnd' value='-126'/>
<enum name='mFulErr' value='-41'/>
<enum name='macron' value='248'/>
<enum name='mapChanged' value='32'/>
<enum name='mapChangedBit' value='5'/>
<enum name='mapCompact' value='64'/>
<enum name='mapCompactBit' value='6'/>
<enum name='mapReadErr' value='-199'/>
<enum name='mapReadOnly' value='128'/>
<enum name='mapReadOnlyBit' value='7'/>
<enum name='matrixErr' value='-2203'/>
<enum name='maxCountry' value='108'/>
<enum name='maxDateField' value='10'/>
<enum name='maxSizeToGrowTooSmall' value='-2027'/>
<enum name='mdy' value='0'/>
<enum name='mediaTypesDontMatch' value='-2018'/>
<enum name='memAZErr' value='-113'/>
<enum name='memAdrErr' value='-110'/>
<enum name='memBCErr' value='-115'/>
<enum name='memFragErr' value='-601'/>
<enum name='memFullErr' value='-108'/>
<enum name='memLockedErr' value='-117'/>
<enum name='memPCErr' value='-114'/>
<enum name='memPurErr' value='-112'/>
<enum name='memROZErr' value='-99'/>
<enum name='memROZError' value='-99'/>
<enum name='memROZWarn' value='-99'/>
<enum name='memSCErr' value='-116'/>
<enum name='memWZErr' value='-111'/>
<enum name='menuInvalidErr' value='-5623'/>
<enum name='menuItemNotFoundErr' value='-5622'/>
<enum name='menuNotFoundErr' value='-5620'/>
<enum name='menuPrgErr' value='84'/>
<enum name='menuPropertyInvalid' value='-5603'/>
<enum name='menuPropertyInvalidErr' value='-5603'/>
<enum name='menuPropertyNotFoundErr' value='-5604'/>
<enum name='menuUsesSystemDefErr' value='-5621'/>
<enum name='midiDupIDErr' value='-260'/>
<enum name='midiInvalidCmdErr' value='-261'/>
<enum name='midiManagerAbsentOSErr' value='-2081'/>
<enum name='midiNameLenErr' value='-259'/>
<enum name='midiNoClientErr' value='-250'/>
<enum name='midiNoConErr' value='-257'/>
<enum name='midiNoPortErr' value='-251'/>
<enum name='midiTooManyConsErr' value='-253'/>
<enum name='midiTooManyPortsErr' value='-252'/>
<enum name='midiVConnectErr' value='-254'/>
<enum name='midiVConnectMade' value='-255'/>
<enum name='midiVConnectRmvd' value='-256'/>
<enum name='midiWriteErr' value='-258'/>
<enum name='minCountry' value='0'/>
<enum name='minLeadingZ' value='64'/>
<enum name='minuteField' value='5'/>
<enum name='minuteMask' value='32'/>
<enum name='missingRequiredParameterErr' value='-2063'/>
<enum name='mmInternalError' value='-2526'/>
<enum name='mntLdingZ' value='64'/>
<enum name='monthField' value='2'/>
<enum name='monthMask' value='4'/>
<enum name='movieTextNotFoundErr' value='-2062'/>
<enum name='movieToolboxUninitialized' value='-2020'/>
<enum name='mpWorkFlagCopyWorkBlock' value='4'/>
<enum name='mpWorkFlagDoCompletion' value='2'/>
<enum name='mpWorkFlagDoWork' value='1'/>
<enum name='mpWorkFlagDontBlock' value='8'/>
<enum name='mpWorkFlagGetIsRunning' value='64'/>
<enum name='mpWorkFlagGetProcessorCount' value='16'/>
<enum name='multiplePublisherWrn' value='-460'/>
<enum name='myd' value='3'/>
<enum name='nameTypeErr' value='-902'/>
<enum name='nbpBuffOvr' value='-1024'/>
<enum name='nbpConfDiff' value='-1026'/>
<enum name='nbpDuplicate' value='-1027'/>
<enum name='nbpNISErr' value='-1029'/>
<enum name='nbpNoConfirm' value='-1025'/>
<enum name='nbpNotFound' value='-1028'/>
<enum name='needClearScrapErr' value='-100'/>
<enum name='negZcbFreeErr' value='33'/>
<enum name='negativeInfinity' value='-2147483648'/>
<enum name='networkErr' value='-925'/>
<enum name='newLineBit' value='7'/>
<enum name='newLineCharMask' value='65280'/>
<enum name='newLineMask' value='128'/>
<enum name='nilHandleErr' value='-109'/>
<enum name='nilScrapFlavorDataErr' value='-4994'/>
<enum name='nmTypErr' value='-299'/>
<enum name='nmType' value='8'/>
<enum name='noAdrMkErr' value='-67'/>
<enum name='noBridgeErr' value='-93'/>
<enum name='noCacheBit' value='5'/>
<enum name='noCacheMask' value='32'/>
<enum name='noCodecErr' value='-8961'/>
<enum name='noDMAErr' value='-2208'/>
<enum name='noDataArea' value='-1104'/>
<enum name='noDataHandler' value='-2007'/>
<enum name='noDefaultDataRef' value='-2051'/>
<enum name='noDefaultUserErr' value='-922'/>
<enum name='noDeviceForChannel' value='-9400'/>
<enum name='noDriveErr' value='-64'/>
<enum name='noDtaMkErr' value='-71'/>
<enum name='noExportProcAvailableErr' value='-2089'/>
<enum name='noGlobalsErr' value='-904'/>
<enum name='noHardware' value='-200'/>
<enum name='noHardwareErr' value='-200'/>
<enum name='noHelpForItem' value='-4009'/>
<enum name='noIconDataAvailableErr' value='-2582'/>
<enum name='noInformErr' value='-926'/>
<enum name='noMMUErr' value='-626'/>
<enum name='noMPPErr' value='-3102'/>
<enum name='noMacDskErr' value='-57'/>
<enum name='noMachineNameErr' value='-913'/>
<enum name='noMaskFoundErr' value='-1000'/>
<enum name='noMediaHandler' value='-2006'/>
<enum name='noMemForPictPlaybackErr' value='-145'/>
<enum name='noMemoryNodeFailedInitialize' value='-30552'/>
<enum name='noMoreFolderDescErr' value='-4272'/>
<enum name='noMoreKeyColorsErr' value='-2205'/>
<enum name='noMoreRealTime' value='-212'/>
<enum name='noMovieFound' value='-2048'/>
<enum name='noNybErr' value='-66'/>
<enum name='noOutstandingHLE' value='-608'/>
<enum name='noPathMappingErr' value='-2112'/>
<enum name='noPortErr' value='-903'/>
<enum name='noPrefAppErr' value='-3032'/>
<enum name='noRecordOfApp' value='-2020'/>
<enum name='noRelErr' value='-1101'/>
<enum name='noResponseErr' value='-915'/>
<enum name='noScrapErr' value='-100'/>
<enum name='noScrapPromiseKeeperErr' value='-4993'/>
<enum name='noSendResp' value='-1103'/>
<enum name='noSessionErr' value='-908'/>
<enum name='noSoundTrackInMovieErr' value='-2055'/>
<enum name='noSourceTreeFoundErr' value='-2060'/>
<enum name='noSuchIconErr' value='-2581'/>
<enum name='noSuitableDisplaysErr' value='-1859'/>
<enum name='noSynthFound' value='-240'/>
<enum name='noThumbnailFoundErr' value='-8994'/>
<enum name='noToolboxNameErr' value='-914'/>
<enum name='noTranslationPathErr' value='-3030'/>
<enum name='noTypeErr' value='-102'/>
<enum name='noUserInteractionAllowed' value='-610'/>
<enum name='noUserNameErr' value='-911'/>
<enum name='noUserRecErr' value='-928'/>
<enum name='noUserRefErr' value='-924'/>
<enum name='noVideoTrackInMovieErr' value='-2054'/>
<enum name='nonDragOriginatorErr' value='-1862'/>
<enum name='nonMatchingEditState' value='-2024'/>
<enum name='notAFileErr' value='-1302'/>
<enum name='notAQTVRMovieErr' value='-30540'/>
<enum name='notARemountErr' value='-1308'/>
<enum name='notAllowedToSaveMovieErr' value='-2126'/>
<enum name='notAppropriateForClassic' value='-877'/>
<enum name='notBTree' value='-410'/>
<enum name='notEnoughBufferSpace' value='-207'/>
<enum name='notEnoughDataErr' value='-2149'/>
<enum name='notEnoughDiskSpaceToGrab' value='-9404'/>
<enum name='notEnoughHardware' value='-201'/>
<enum name='notEnoughHardwareErr' value='-201'/>
<enum name='notEnoughMemoryErr' value='-620'/>
<enum name='notEnoughMemoryToGrab' value='-9403'/>
<enum name='notExactMatrixErr' value='-2204'/>
<enum name='notExactSizeErr' value='-2206'/>
<enum name='notHeldErr' value='-621'/>
<enum name='notImplementedMusicOSErr' value='-2071'/>
<enum name='notInitErr' value='-900'/>
<enum name='notLeafAtomErr' value='-2102'/>
<enum name='notLockedErr' value='-623'/>
<enum name='notLoggedInErr' value='-923'/>
<enum name='notOpenErr' value='-28'/>
<enum name='notRegisteredSectionErr' value='-452'/>
<enum name='notThePublisherWrn' value='-463'/>
<enum name='noteChannelNotAllocatedOSErr' value='-2085'/>
<enum name='nrCallNotSupported' value='-2557'/>
<enum name='nrDataTruncatedErr' value='-2543'/>
<enum name='nrExitedIteratorScope' value='-2555'/>
<enum name='nrInvalidEntryIterationOp' value='-2552'/>
<enum name='nrInvalidNodeErr' value='-2538'/>
<enum name='nrIterationDone' value='-2554'/>
<enum name='nrLockedErr' value='-2536'/>
<enum name='nrNameErr' value='-2541'/>
<enum name='nrNotCreatedErr' value='-2540'/>
<enum name='nrNotEnoughMemoryErr' value='-2537'/>
<enum name='nrNotFoundErr' value='-2539'/>
<enum name='nrNotModifiedErr' value='-2547'/>
<enum name='nrNotSlotDeviceErr' value='-2542'/>
<enum name='nrOverrunErr' value='-2548'/>
<enum name='nrPathBufferTooSmall' value='-2551'/>
<enum name='nrPathNotFound' value='-2550'/>
<enum name='nrPowerErr' value='-2544'/>
<enum name='nrPowerSwitchAbortErr' value='-2545'/>
<enum name='nrPropertyAlreadyExists' value='-2553'/>
<enum name='nrResultCodeBase' value='-2549'/>
<enum name='nrTransactionAborted' value='-2556'/>
<enum name='nrTypeMismatchErr' value='-2546'/>
<enum name='nsDrvErr' value='-56'/>
<enum name='nsStackErr' value='-149'/>
<enum name='nsvErr' value='-35'/>
<enum name='numberFormattingBadCurrencyPositionErr' value='-5211'/>
<enum name='numberFormattingBadFormatErr' value='-5207'/>
<enum name='numberFormattingBadNumberFormattingObjectErr' value='-5202'/>
<enum name='numberFormattingBadOptionsErr' value='-5208'/>
<enum name='numberFormattingBadTokenErr' value='-5209'/>
<enum name='numberFormattingDelimiterMissingErr' value='-5205'/>
<enum name='numberFormattingEmptyFormatErr' value='-5206'/>
<enum name='numberFormattingLiteralMissingErr' value='-5204'/>
<enum name='numberFormattingNotADigitErr' value='-5212'/>
<enum name='numberFormattingNotANumberErr' value='-5200'/>
<enum name='numberFormattingOverflowInDestinationErr' value='-5201'/>
<enum name='numberFormattingSpuriousCharErr' value='-5203'/>
<enum name='numberFormattingUnOrderedCurrencyRangeErr' value='-5210'/>
<enum name='numberFormattingUnOrdredCurrencyRangeErr' value='-5210'/>
<enum name='numberFortmattingNotADigitErr' value='-5212'/>
<enum name='offLinErr' value='-65'/>
<enum name='ogonek' value='254'/>
<enum name='opWrErr' value='-49'/>
<enum name='openErr' value='-23'/>
<enum name='overDot' value='250'/>
<enum name='paramErr' value='-50'/>
<enum name='pathNotVerifiedErr' value='-2113'/>
<enum name='pathTooLongErr' value='-2110'/>
<enum name='perThousand' value='228'/>
<enum name='permErr' value='-54'/>
<enum name='pickerCantLive' value='-4006'/>
<enum name='pickerResourceError' value='-4002'/>
<enum name='pictInfoIDErr' value='-11001'/>
<enum name='pictInfoVerbErr' value='-11002'/>
<enum name='pictInfoVersionErr' value='-11000'/>
<enum name='pictureDataErr' value='-11005'/>
<enum name='pixMapTooDeepErr' value='-148'/>
<enum name='platform68k' value='1'/>
<enum name='platformAIXppc' value='1300'/>
<enum name='platformIA32NativeEntryPoint' value='6'/>
<enum name='platformIRIXmips' value='1000'/>
<enum name='platformInterpreted' value='3'/>
<enum name='platformLinuxintel' value='1201'/>
<enum name='platformLinuxppc' value='1200'/>
<enum name='platformMacOSx86' value='1500'/>
<enum name='platformNeXT68k' value='1403'/>
<enum name='platformNeXTIntel' value='1400'/>
<enum name='platformNeXTppc' value='1401'/>
<enum name='platformNeXTsparc' value='1402'/>
<enum name='platformPowerPC' value='2'/>
<enum name='platformPowerPC64NativeEntryPoint' value='7'/>
<enum name='platformPowerPCNativeEntryPoint' value='5'/>
<enum name='platformSunOSintel' value='1101'/>
<enum name='platformSunOSsparc' value='1100'/>
<enum name='platformWin32' value='4'/>
<enum name='platformX86_64NativeEntryPoint' value='8'/>
<enum name='pleaseCacheBit' value='4'/>
<enum name='pleaseCacheMask' value='16'/>
<enum name='pmBusyErr' value='-13000'/>
<enum name='pmField' value='10'/>
<enum name='pmMask' value='1024'/>
<enum name='pmRecvEndErr' value='-13005'/>
<enum name='pmRecvStartErr' value='-13004'/>
<enum name='pmReplyTOErr' value='-13001'/>
<enum name='pmSendEndErr' value='-13003'/>
<enum name='pmSendStartErr' value='-13002'/>
<enum name='portClosedErr' value='-916'/>
<enum name='portInUse' value='-97'/>
<enum name='portNameExistsErr' value='-910'/>
<enum name='portNotCf' value='-98'/>
<enum name='portNotPwr' value='-96'/>
<enum name='posErr' value='-40'/>
<enum name='positiveInfinity' value='2147483647'/>
<enum name='prInitErr' value='-88'/>
<enum name='prWrErr' value='-87'/>
<enum name='printerStatusOpCodeNotSupportedErr' value='-25280'/>
<enum name='procNotFound' value='-600'/>
<enum name='processStateIncorrectErr' value='-4991'/>
<enum name='progressProcAborted' value='-2019'/>
<enum name='propertyNotSupportedByNodeErr' value='-30547'/>
<enum name='protocolErr' value='-603'/>
<enum name='qErr' value='-1'/>
<enum name='qfcbNotCreatedErr' value='-2119'/>
<enum name='qfcbNotFoundErr' value='-2118'/>
<enum name='qtActionNotHandledErr' value='-2157'/>
<enum name='qtNetworkAlreadyAllocatedErr' value='-2127'/>
<enum name='qtParamErr' value='-2202'/>
<enum name='qtXMLApplicationErr' value='-2159'/>
<enum name='qtXMLParseErr' value='-2158'/>
<enum name='qtmlDllEntryNotFoundErr' value='-2094'/>
<enum name='qtmlDllLoadErr' value='-2093'/>
<enum name='qtmlUninitialized' value='-2095'/>
<enum name='qtsAddressBusyErr' value='-5421'/>
<enum name='qtsBadDataErr' value='-5402'/>
<enum name='qtsBadSelectorErr' value='-5400'/>
<enum name='qtsBadStateErr' value='-5401'/>
<enum name='qtsConnectionFailedErr' value='-5420'/>
<enum name='qtsTimeoutErr' value='-5408'/>
<enum name='qtsTooMuchDataErr' value='-5406'/>
<enum name='qtsUnknownValueErr' value='-5407'/>
<enum name='qtsUnsupportedDataTypeErr' value='-5403'/>
<enum name='qtsUnsupportedFeatureErr' value='-5405'/>
<enum name='qtsUnsupportedRateErr' value='-5404'/>
<enum name='qtvrLibraryLoadErr' value='-30554'/>
<enum name='qtvrUninitialized' value='-30555'/>
<enum name='queueFull' value='-203'/>
<enum name='rAliasType' value='1634494835'/>
<enum name='rcDBAsyncNotSupp' value='-809'/>
<enum name='rcDBBadAsyncPB' value='-810'/>
<enum name='rcDBBadDDEV' value='-808'/>
<enum name='rcDBBadSessID' value='-806'/>
<enum name='rcDBBadSessNum' value='-807'/>
<enum name='rcDBBadType' value='-803'/>
<enum name='rcDBBreak' value='-804'/>
<enum name='rcDBError' value='-802'/>
<enum name='rcDBExec' value='-805'/>
<enum name='rcDBNoHandler' value='-811'/>
<enum name='rcDBNull' value='-800'/>
<enum name='rcDBPackNotInited' value='-813'/>
<enum name='rcDBValue' value='-801'/>
<enum name='rcDBWrongVersion' value='-812'/>
<enum name='rcvrErr' value='-89'/>
<enum name='rdVerify' value='64'/>
<enum name='rdVerifyBit' value='6'/>
<enum name='rdVerifyMask' value='64'/>
<enum name='readErr' value='-19'/>
<enum name='readQErr' value='-3105'/>
<enum name='readReference' value='1'/>
<enum name='recNotFnd' value='-3108'/>
<enum name='recordDataTooBigErr' value='-20001'/>
<enum name='registerComponentAfterExisting' value='4'/>
<enum name='registerComponentAliasesOnly' value='8'/>
<enum name='registerComponentGlobal' value='1'/>
<enum name='registerComponentNoDuplicates' value='2'/>
<enum name='reqAborted' value='-1105'/>
<enum name='reqFailed' value='-1096'/>
<enum name='requiredFlagsDontMatch' value='-4001'/>
<enum name='res1Field' value='11'/>
<enum name='res2Field' value='12'/>
<enum name='res3Field' value='13'/>
<enum name='resAttrErr' value='-198'/>
<enum name='resChanged' value='2'/>
<enum name='resChangedBit' value='1'/>
<enum name='resFNotFound' value='-193'/>
<enum name='resLocked' value='16'/>
<enum name='resLockedBit' value='4'/>
<enum name='resNotFound' value='-192'/>
<enum name='resPreload' value='4'/>
<enum name='resPreloadBit' value='2'/>
<enum name='resProblem' value='-204'/>
<enum name='resProtected' value='8'/>
<enum name='resProtectedBit' value='3'/>
<enum name='resPurgeable' value='32'/>
<enum name='resPurgeableBit' value='5'/>
<enum name='resSysHeap' value='64'/>
<enum name='resSysHeapBit' value='6'/>
<enum name='resSysRefBit' value='7'/>
<enum name='resourceInMemory' value='-188'/>
<enum name='retryComponentRegistrationErr' value='-3005'/>
<enum name='rfNumErr' value='-51'/>
<enum name='rgnOverflowErr' value='-147'/>
<enum name='rgnTooBigErr' value='-500'/>
<enum name='rgnTooBigError' value='-147'/>
<enum name='rightSingGuillemet' value='221'/>
<enum name='ringMark' value='251'/>
<enum name='rmvRefFailed' value='-197'/>
<enum name='rmvResFailed' value='-196'/>
<enum name='romanAppFond' value='3'/>
<enum name='romanFlags' value='7'/>
<enum name='romanSysFond' value='16383'/>
<enum name='routingNotFoundErr' value='-4275'/>
<enum name='sIQType' value='6'/>
<enum name='sameFileErr' value='-1306'/>
<enum name='samplesAlreadyInMediaErr' value='-2059'/>
<enum name='scTypeNotFoundErr' value='-8971'/>
<enum name='scrapFlavorFlagsMismatchErr' value='-4995'/>
<enum name='scrapFlavorNotFoundErr' value='-102'/>
<enum name='scrapFlavorSizeMismatchErr' value='-4996'/>
<enum name='scrapPromiseNotKeptErr' value='-4992'/>
<enum name='scriptCurLang' value='-6'/>
<enum name='scriptDefLang' value='-7'/>
<enum name='sdmInitErr' value='11'/>
<enum name='sdmJTInitErr' value='10'/>
<enum name='sdmPRAMInitErr' value='13'/>
<enum name='sdmPriInitErr' value='14'/>
<enum name='sdmSRTInitErr' value='12'/>
<enum name='seNoDB' value='-8'/>
<enum name='secLeadingZ' value='32'/>
<enum name='secondField' value='6'/>
<enum name='secondMask' value='64'/>
<enum name='sectNFErr' value='-81'/>
<enum name='seekErr' value='-80'/>
<enum name='selectorNotSupportedByNodeErr' value='-30543'/>
<enum name='sepNotConsistent' value='64'/>
<enum name='sepNotIntlSep' value='4'/>
<enum name='seqGrabInfoNotAvailable' value='-9407'/>
<enum name='sessClosedErr' value='-917'/>
<enum name='sessTableErr' value='-907'/>
<enum name='settingNotSupportedByNodeErr' value='-30548'/>
<enum name='shortDate' value='0'/>
<enum name='shutDownAlert' value='42'/>
<enum name='siBadDeviceName' value='-228'/>
<enum name='siBadRefNum' value='-229'/>
<enum name='siBadSoundInDevice' value='-221'/>
<enum name='siDeviceBusyErr' value='-227'/>
<enum name='siHardDriveTooSlow' value='-224'/>
<enum name='siInitSDTblErr' value='1'/>
<enum name='siInitSPTblErr' value='3'/>
<enum name='siInitVBLQsErr' value='2'/>
<enum name='siInputDeviceErr' value='-230'/>
<enum name='siInvalidCompression' value='-223'/>
<enum name='siInvalidSampleRate' value='-225'/>
<enum name='siInvalidSampleSize' value='-226'/>
<enum name='siNoBufferSpecified' value='-222'/>
<enum name='siNoSoundInHardware' value='-220'/>
<enum name='siUnknownInfoType' value='-231'/>
<enum name='siUnknownQuality' value='-232'/>
<enum name='siVBRCompressionNotSupported' value='-213'/>
<enum name='sktClosedErr' value='-3109'/>
<enum name='slotNumErr' value='-360'/>
<enum name='smAllScripts' value='-3'/>
<enum name='smAmharic' value='28'/>
<enum name='smArabic' value='4'/>
<enum name='smArmenian' value='24'/>
<enum name='smBLFieldBad' value='-309'/>
<enum name='smBadBoardId' value='-319'/>
<enum name='smBadRefId' value='-330'/>
<enum name='smBadScript' value='-2'/>
<enum name='smBadVerb' value='-1'/>
<enum name='smBadsList' value='-331'/>
<enum name='smBadsPtrErr' value='-346'/>
<enum name='smBengali' value='13'/>
<enum name='smBlkMoveErr' value='-340'/>
<enum name='smBurmese' value='19'/>
<enum name='smBusErrTO' value='-320'/>
<enum name='smByteLanesErr' value='-347'/>
<enum name='smCPUErr' value='-334'/>
<enum name='smCRCFail' value='-301'/>
<enum name='smCentralEuroRoman' value='29'/>
<enum name='smChar1byte' value='0'/>
<enum name='smChar2byte' value='32768'/>
<enum name='smCharAscii' value='1'/>
<enum name='smCharBidirect' value='8'/>
<enum name='smCharBopomofo' value='14'/>
<enum name='smCharContextualLR' value='9'/>
<enum name='smCharEuro' value='7'/>
<enum name='smCharExtAscii' value='7'/>
<enum name='smCharFISGana' value='3'/>
<enum name='smCharFISGreek' value='5'/>
<enum name='smCharFISIdeo' value='4'/>
<enum name='smCharFISKana' value='2'/>
<enum name='smCharFISRussian' value='6'/>
<enum name='smCharGanaKana' value='15'/>
<enum name='smCharHangul' value='12'/>
<enum name='smCharHiragana' value='3'/>
<enum name='smCharHorizontal' value='0'/>
<enum name='smCharIdeographic' value='4'/>
<enum name='smCharJamo' value='13'/>
<enum name='smCharKatakana' value='2'/>
<enum name='smCharLeft' value='0'/>
<enum name='smCharLower' value='0'/>
<enum name='smCharNonContextualLR' value='10'/>
<enum name='smCharPunct' value='0'/>
<enum name='smCharRight' value='8192'/>
<enum name='smCharTwoByteGreek' value='5'/>
<enum name='smCharTwoByteRussian' value='6'/>
<enum name='smCharUpper' value='16384'/>
<enum name='smCharVertical' value='4096'/>
<enum name='smChinese' value='2'/>
<enum name='smCkStatusErr' value='-341'/>
<enum name='smCodeRevErr' value='-333'/>
<enum name='smCurrentScript' value='-2'/>
<enum name='smCyrillic' value='7'/>
<enum name='smDevanagari' value='9'/>
<enum name='smDisDrvrNamErr' value='-343'/>
<enum name='smDisabledSlot' value='-305'/>
<enum name='smDisposePErr' value='-312'/>
<enum name='smEastEurRoman' value='29'/>
<enum name='smEmptySlot' value='-300'/>
<enum name='smEthiopic' value='28'/>
<enum name='smExtArabic' value='31'/>
<enum name='smFHBlkDispErr' value='-311'/>
<enum name='smFHBlockRdErr' value='-310'/>
<enum name='smFISClassLvl1' value='0'/>
<enum name='smFISClassLvl2' value='256'/>
<enum name='smFISClassUser' value='512'/>
<enum name='smFirstByte' value='-1'/>
<enum name='smFondEnd' value='49152'/>
<enum name='smFondStart' value='16384'/>
<enum name='smFormatErr' value='-302'/>
<enum name='smGeez' value='28'/>
<enum name='smGeorgian' value='23'/>
<enum name='smGetDrvrNamErr' value='-342'/>
<enum name='smGetPRErr' value='-314'/>
<enum name='smGreek' value='6'/>
<enum name='smGujarati' value='11'/>
<enum name='smGurmukhi' value='10'/>
<enum name='smHebrew' value='5'/>
<enum name='smIdeographicLevel1' value='0'/>
<enum name='smIdeographicLevel2' value='256'/>
<enum name='smIdeographicUser' value='512'/>
<enum name='smInitStatVErr' value='-316'/>
<enum name='smInitTblVErr' value='-317'/>
<enum name='smJamoBogJaeum' value='256'/>
<enum name='smJamoBogMoeum' value='768'/>
<enum name='smJamoJaeum' value='0'/>
<enum name='smJamoMoeum' value='512'/>
<enum name='smJapanese' value='1'/>
<enum name='smKCHRCache' value='38'/>
<enum name='smKanaHardOK' value='512'/>
<enum name='smKanaSmall' value='256'/>
<enum name='smKanaSoftOK' value='768'/>
<enum name='smKannada' value='16'/>
<enum name='smKeyDisableKybdSwitch' value='-12'/>
<enum name='smKeyDisableKybds' value='-6'/>
<enum name='smKeyEnableKybds' value='-7'/>
<enum name='smKeyForceKeyScriptBit' value='7'/>
<enum name='smKeyForceKeyScriptMask' value='128'/>
<enum name='smKeyNextInputMethod' value='-10'/>
<enum name='smKeyNextKybd' value='-4'/>
<enum name='smKeyNextScript' value='-1'/>
<enum name='smKeyRoman' value='-17'/>
<enum name='smKeyScript' value='22'/>
<enum name='smKeySetDirLeftRight' value='-15'/>
<enum name='smKeySetDirRightLeft' value='-16'/>
<enum name='smKeySwapInputMethod' value='-11'/>
<enum name='smKeySwapKybd' value='-5'/>
<enum name='smKeySwapScript' value='-3'/>
<enum name='smKeySysScript' value='-2'/>
<enum name='smKeyToggleDirection' value='-9'/>
<enum name='smKeyToggleInline' value='-8'/>
<enum name='smKhmer' value='20'/>
<enum name='smKlingon' value='32'/>
<enum name='smKorean' value='3'/>
<enum name='smLao' value='22'/>
<enum name='smLaotian' value='22'/>
<enum name='smLastByte' value='1'/>
<enum name='smMalayalam' value='17'/>
<enum name='smMaskAll' value='-1'/>
<enum name='smMaskAscii' value='1'/>
<enum name='smMaskAscii1' value='4'/>
<enum name='smMaskAscii2' value='8'/>
<enum name='smMaskBopomofo2' value='1024'/>
<enum name='smMaskGana2' value='128'/>
<enum name='smMaskHangul2' value='256'/>
<enum name='smMaskJamo2' value='512'/>
<enum name='smMaskKana1' value='16'/>
<enum name='smMaskKana2' value='32'/>
<enum name='smMaskNative' value='2'/>
<enum name='smMiddleByte' value='2'/>
<enum name='smMongolian' value='27'/>
<enum name='smNewPErr' value='-339'/>
<enum name='smNilsBlockErr' value='-336'/>
<enum name='smNoBoardId' value='-315'/>
<enum name='smNoBoardSRsrc' value='-313'/>
<enum name='smNoDir' value='-304'/>
<enum name='smNoGoodOpens' value='-349'/>
<enum name='smNoJmpTbl' value='-318'/>
<enum name='smNoMoresRsrcs' value='-344'/>
<enum name='smNosInfoArray' value='-306'/>
<enum name='smNotInstalled' value='0'/>
<enum name='smNumberPartsTable' value='2'/>
<enum name='smOffsetErr' value='-348'/>
<enum name='smOriya' value='12'/>
<enum name='smPRAMInitErr' value='-292'/>
<enum name='smPriInitErr' value='-293'/>
<enum name='smPunctBlank' value='768'/>
<enum name='smPunctGraphic' value='1280'/>
<enum name='smPunctNormal' value='0'/>
<enum name='smPunctNumber' value='256'/>
<enum name='smPunctRepeat' value='1024'/>
<enum name='smPunctSymbol' value='512'/>
<enum name='smRSymbol' value='8'/>
<enum name='smRecNotFnd' value='-351'/>
<enum name='smRegionCode' value='40'/>
<enum name='smReservedErr' value='-332'/>
<enum name='smReservedSlot' value='-318'/>
<enum name='smResrvErr' value='-307'/>
<enum name='smRevisionErr' value='-303'/>
<enum name='smRoman' value='0'/>
<enum name='smRussian' value='7'/>
<enum name='smSDMInitErr' value='-290'/>
<enum name='smSRTInitErr' value='-291'/>
<enum name='smSRTOvrFlErr' value='-350'/>
<enum name='smSelOOBErr' value='-338'/>
<enum name='smSimpChinese' value='25'/>
<enum name='smSindhi' value='31'/>
<enum name='smSingleByte' value='0'/>
<enum name='smSinhalese' value='18'/>
<enum name='smSlavic' value='29'/>
<enum name='smSlotOOBErr' value='-337'/>
<enum name='smSysScript' value='18'/>
<enum name='smSystemScript' value='-1'/>
<enum name='smTamil' value='14'/>
<enum name='smTelugu' value='15'/>
<enum name='smThai' value='21'/>
<enum name='smTibetan' value='26'/>
<enum name='smTradChinese' value='2'/>
<enum name='smTransAscii' value='0'/>
<enum name='smTransAscii1' value='2'/>
<enum name='smTransAscii2' value='3'/>
<enum name='smTransBopomofo2' value='10'/>
<enum name='smTransCase' value='254'/>
<enum name='smTransGana2' value='7'/>
<enum name='smTransHangul2' value='8'/>
<enum name='smTransHangulFormat' value='2'/>
<enum name='smTransJamo2' value='9'/>
<enum name='smTransKana1' value='4'/>
<enum name='smTransKana2' value='5'/>
<enum name='smTransLower' value='16384'/>
<enum name='smTransNative' value='1'/>
<enum name='smTransPreDoubleByting' value='1'/>
<enum name='smTransPreLowerCasing' value='2'/>
<enum name='smTransRuleBaseFormat' value='1'/>
<enum name='smTransSystem' value='255'/>
<enum name='smTransUpper' value='32768'/>
<enum name='smUnExBusErr' value='-308'/>
<enum name='smUnTokenTable' value='3'/>
<enum name='smUnicodeScript' value='126'/>
<enum name='smUninterp' value='32'/>
<enum name='smUprHalfCharSet' value='128'/>
<enum name='smVietnamese' value='30'/>
<enum name='smWhiteSpaceList' value='4'/>
<enum name='smWordSelectTable' value='0'/>
<enum name='smWordWrapTable' value='1'/>
<enum name='smallDateBit' value='31'/>
<enum name='smcClassMask' value='3840'/>
<enum name='smcDoubleMask' value='32768'/>
<enum name='smcOrientationMask' value='4096'/>
<enum name='smcReserved' value='240'/>
<enum name='smcRightMask' value='8192'/>
<enum name='smcTypeMask' value='15'/>
<enum name='smcUpperMask' value='16384'/>
<enum name='smfDisableKeyScriptSync' value='27'/>
<enum name='smfDisableKeyScriptSyncMask' value='134217728'/>
<enum name='smfDualCaret' value='30'/>
<enum name='smfNameTagEnab' value='29'/>
<enum name='smfShowIcon' value='31'/>
<enum name='smfUseAssocFontInfo' value='28'/>
<enum name='smsGetDrvrErr' value='-345'/>
<enum name='smsPointerNil' value='-335'/>
<enum name='smsfAutoInit' value='6'/>
<enum name='smsfB0Digits' value='5'/>
<enum name='smsfContext' value='3'/>
<enum name='smsfForms' value='13'/>
<enum name='smsfIntellCP' value='0'/>
<enum name='smsfLigatures' value='14'/>
<enum name='smsfNatCase' value='2'/>
<enum name='smsfNoForceFont' value='4'/>
<enum name='smsfReverse' value='15'/>
<enum name='smsfSingByte' value='1'/>
<enum name='smsfSynchUnstyledTE' value='8'/>
<enum name='smsfUnivExt' value='7'/>
<enum name='sortsAfter' value='1'/>
<enum name='sortsBefore' value='-1'/>
<enum name='sortsEqual' value='0'/>
<enum name='soundSupportNotAvailableErr' value='-2056'/>
<enum name='sourceNotFoundErr' value='-2061'/>
<enum name='spdAdjErr' value='-79'/>
<enum name='staleEditState' value='-2025'/>
<enum name='statusErr' value='-18'/>
<enum name='strUserBreak' value='-491'/>
<enum name='streamingNodeNotReadyErr' value='-30553'/>
<enum name='stringOverflow' value='2'/>
<enum name='supDay' value='1'/>
<enum name='supMonth' value='4'/>
<enum name='supWeek' value='2'/>
<enum name='supYear' value='8'/>
<enum name='svDisabled' value='-32640'/>
<enum name='svTempDisable' value='-32768'/>
<enum name='synthNotReady' value='-242'/>
<enum name='synthOpenFailed' value='-241'/>
<enum name='synthesizerNotRespondingOSErr' value='-2082'/>
<enum name='synthesizerOSErr' value='-2083'/>
<enum name='systemCurLang' value='-2'/>
<enum name='systemDefLang' value='-3'/>
<enum name='teScrapSizeErr' value='-501'/>
<enum name='telAPattNotSupp' value='-10016'/>
<enum name='telAlreadyOpen' value='-10070'/>
<enum name='telAutoAnsNotOn' value='-10112'/>
<enum name='telBadAPattErr' value='-10015'/>
<enum name='telBadBearerType' value='-10058'/>
<enum name='telBadCAErr' value='-10003'/>
<enum name='telBadCodeResource' value='-10108'/>
<enum name='telBadDNDType' value='-10023'/>
<enum name='telBadDNErr' value='-10002'/>
<enum name='telBadDNType' value='-10050'/>
<enum name='telBadDisplayMode' value='-10062'/>
<enum name='telBadFeatureID' value='-10053'/>
<enum name='telBadFunction' value='-10091'/>
<enum name='telBadFwdType' value='-10054'/>
<enum name='telBadHTypeErr' value='-10010'/>
<enum name='telBadHandErr' value='-10004'/>
<enum name='telBadIndex' value='-10017'/>
<enum name='telBadIntExt' value='-10021'/>
<enum name='telBadIntercomID' value='-10052'/>
<enum name='telBadLevelErr' value='-10012'/>
<enum name='telBadPageID' value='-10051'/>
<enum name='telBadParkID' value='-10056'/>
<enum name='telBadPickupGroupID' value='-10055'/>
<enum name='telBadProcErr' value='-10005'/>
<enum name='telBadProcID' value='-10110'/>
<enum name='telBadRate' value='-10059'/>
<enum name='telBadSWErr' value='-10114'/>
<enum name='telBadSampleRate' value='-10115'/>
<enum name='telBadSelect' value='-10057'/>
<enum name='telBadStateErr' value='-10019'/>
<enum name='telBadTermErr' value='-10001'/>
<enum name='telBadVTypeErr' value='-10013'/>
<enum name='telCANotAcceptable' value='-10080'/>
<enum name='telCANotDeflectable' value='-10082'/>
<enum name='telCANotRejectable' value='-10081'/>
<enum name='telCAUnavail' value='-10006'/>
<enum name='telCBErr' value='-10046'/>
<enum name='telConfErr' value='-10042'/>
<enum name='telConfLimitErr' value='-10040'/>
<enum name='telConfLimitExceeded' value='-10047'/>
<enum name='telConfNoLimit' value='-10041'/>
<enum name='telConfRej' value='-10043'/>
<enum name='telDNDTypeNotSupp' value='-10024'/>
<enum name='telDNTypeNotSupp' value='-10060'/>
<enum name='telDetAlreadyOn' value='-10113'/>
<enum name='telDeviceNotFound' value='-10109'/>
<enum name='telDisplayModeNotSupp' value='-10063'/>
<enum name='telFeatActive' value='-10032'/>
<enum name='telFeatNotAvail' value='-10031'/>
<enum name='telFeatNotSub' value='-10030'/>
<enum name='telFeatNotSupp' value='-10033'/>
<enum name='telFwdTypeNotSupp' value='-10061'/>
<enum name='telGenericError' value='-1'/>
<enum name='telHTypeNotSupp' value='-10011'/>
<enum name='telIndexNotSupp' value='-10018'/>
<enum name='telInitFailed' value='-10107'/>
<enum name='telIntExtNotSupp' value='-10022'/>
<enum name='telNoCallbackRef' value='-10064'/>
<enum name='telNoCommFolder' value='-10106'/>
<enum name='telNoErr' value='0'/>
<enum name='telNoMemErr' value='-10007'/>
<enum name='telNoOpenErr' value='-10008'/>
<enum name='telNoSuchTool' value='-10102'/>
<enum name='telNoTools' value='8'/>
<enum name='telNotEnoughdspBW' value='-10116'/>
<enum name='telPBErr' value='-10090'/>
<enum name='telStateNotSupp' value='-10020'/>
<enum name='telStillNeeded' value='-10071'/>
<enum name='telTermNotOpen' value='-10072'/>
<enum name='telTransferErr' value='-10044'/>
<enum name='telTransferRej' value='-10045'/>
<enum name='telUnknownErr' value='-10103'/>
<enum name='telVTypeNotSupp' value='-10014'/>
<enum name='telValidateFailed' value='-10111'/>
<enum name='textParserBadParamErr' value='-5220'/>
<enum name='textParserBadParserObjectErr' value='-5223'/>
<enum name='textParserBadTextEncodingErr' value='-5227'/>
<enum name='textParserBadTextLanguageErr' value='-5226'/>
<enum name='textParserBadTokenValueErr' value='-5222'/>
<enum name='textParserNoMoreTextErr' value='-5225'/>
<enum name='textParserNoMoreTokensErr' value='-5229'/>
<enum name='textParserNoSuchTokenFoundErr' value='-5228'/>
<enum name='textParserObjectNotFoundErr' value='-5221'/>
<enum name='textParserParamErr' value='-5224'/>
<enum name='themeBadCursorIndexErr' value='-30565'/>
<enum name='themeBadTextColorErr' value='-30563'/>
<enum name='themeHasNoAccentsErr' value='-30564'/>
<enum name='themeInvalidBrushErr' value='-30560'/>
<enum name='themeMonitorDepthNotSupportedErr' value='-30567'/>
<enum name='themeNoAppropriateBrushErr' value='-30568'/>
<enum name='themeProcessNotRegisteredErr' value='-30562'/>
<enum name='themeProcessRegisteredErr' value='-30561'/>
<enum name='themeScriptFontNotFoundErr' value='-30566'/>
<enum name='threadBadAppContextErr' value='-616'/>
<enum name='threadNotFoundErr' value='-618'/>
<enum name='threadProtocolErr' value='-619'/>
<enum name='threadTooManyReqsErr' value='-617'/>
<enum name='tilde' value='247'/>
<enum name='timeCycle12' value='255'/>
<enum name='timeCycle24' value='0'/>
<enum name='timeCycleZero' value='1'/>
<enum name='timeNotInMedia' value='-2032'/>
<enum name='timeNotInTrack' value='-2031'/>
<enum name='timeNotInViewErr' value='-30546'/>
<enum name='tk0BadErr' value='-76'/>
<enum name='tmfoErr' value='-42'/>
<enum name='tmwdoErr' value='-121'/>
<enum name='togChar12HourBit' value='30'/>
<enum name='togCharZCycleBit' value='29'/>
<enum name='togDelta12HourBit' value='28'/>
<enum name='toggleBadChar' value='4'/>
<enum name='toggleBadDelta' value='3'/>
<enum name='toggleBadField' value='2'/>
<enum name='toggleBadNum' value='6'/>
<enum name='toggleErr3' value='7'/>
<enum name='toggleErr4' value='8'/>
<enum name='toggleErr5' value='9'/>
<enum name='toggleOK' value='1'/>
<enum name='toggleOutOfRange' value='7'/>
<enum name='toggleUndefined' value='0'/>
<enum name='toggleUnknown' value='5'/>
<enum name='tokDecPoint' value='14'/>
<enum name='tokEMinus' value='16'/>
<enum name='tokEPlus' value='15'/>
<enum name='tokEscape' value='13'/>
<enum name='tokLeadPlacer' value='3'/>
<enum name='tokLeader' value='4'/>
<enum name='tokLeftQuote' value='1'/>
<enum name='tokMaxSymbols' value='31'/>
<enum name='tokMinusSign' value='9'/>
<enum name='tokNonLeader' value='5'/>
<enum name='tokPercent' value='7'/>
<enum name='tokPlusSign' value='8'/>
<enum name='tokReserved' value='11'/>
<enum name='tokRightQuote' value='2'/>
<enum name='tokSeparator' value='12'/>
<enum name='tokThousands' value='10'/>
<enum name='tokZeroLead' value='6'/>
<enum name='token1Quote' value='52'/>
<enum name='token2Equal' value='38'/>
<enum name='token2Quote' value='51'/>
<enum name='tokenAlpha' value='4'/>
<enum name='tokenAltNum' value='11'/>
<enum name='tokenAltReal' value='13'/>
<enum name='tokenAmpersand' value='57'/>
<enum name='tokenAsterisk' value='26'/>
<enum name='tokenAtSign' value='58'/>
<enum name='tokenBackSlash' value='30'/>
<enum name='tokenBar' value='59'/>
<enum name='tokenCapPi' value='66'/>
<enum name='tokenCarat' value='55'/>
<enum name='tokenCaret' value='55'/>
<enum name='tokenCenterDot' value='78'/>
<enum name='tokenColon' value='68'/>
<enum name='tokenColonEqual' value='39'/>
<enum name='tokenComma' value='45'/>
<enum name='tokenDivide' value='27'/>
<enum name='tokenDollar' value='70'/>
<enum name='tokenEllipsis' value='77'/>
<enum name='tokenEmpty' value='-1'/>
<enum name='tokenEqual' value='33'/>
<enum name='tokenErr' value='33024'/>
<enum name='tokenEscape' value='10'/>
<enum name='tokenExclam' value='43'/>
<enum name='tokenExclamEqual' value='42'/>
<enum name='tokenFraction' value='72'/>
<enum name='tokenGreat' value='32'/>
<enum name='tokenGreatEqual1' value='37'/>
<enum name='tokenGreatEqual2' value='36'/>
<enum name='tokenHash' value='69'/>
<enum name='tokenInfinity' value='67'/>
<enum name='tokenIntegral' value='64'/>
<enum name='tokenIntl' value='4'/>
<enum name='tokenIntlCurrency' value='73'/>
<enum name='tokenLeft1Quote' value='49'/>
<enum name='tokenLeft2Quote' value='47'/>
<enum name='tokenLeftBracket' value='18'/>
<enum name='tokenLeftComment' value='7'/>
<enum name='tokenLeftCurly' value='20'/>
<enum name='tokenLeftEnclose' value='22'/>
<enum name='tokenLeftLit' value='2'/>
<enum name='tokenLeftParen' value='16'/>
<enum name='tokenLeftSingGuillemet' value='74'/>
<enum name='tokenLess' value='31'/>
<enum name='tokenLessEqual1' value='35'/>
<enum name='tokenLessEqual2' value='34'/>
<enum name='tokenLessGreat' value='41'/>
<enum name='tokenLiteral' value='9'/>
<enum name='tokenMicro' value='65'/>
<enum name='tokenMinus' value='25'/>
<enum name='tokenNewLine' value='6'/>
<enum name='tokenNil' value='127'/>
<enum name='tokenNoBreakSpace' value='71'/>
<enum name='tokenNotEqual' value='40'/>
<enum name='tokenNumeric' value='5'/>
<enum name='tokenOK' value='0'/>
<enum name='tokenOverflow' value='1'/>
<enum name='tokenPerThousand' value='76'/>
<enum name='tokenPercent' value='54'/>
<enum name='tokenPeriod' value='46'/>
<enum name='tokenPi' value='61'/>
<enum name='tokenPlus' value='24'/>
<enum name='tokenPlusMinus' value='28'/>
<enum name='tokenQuestion' value='60'/>
<enum name='tokenRealNum' value='12'/>
<enum name='tokenReserve1' value='14'/>
<enum name='tokenReserve2' value='15'/>
<enum name='tokenRight1Quote' value='50'/>
<enum name='tokenRight2Quote' value='48'/>
<enum name='tokenRightBracket' value='19'/>
<enum name='tokenRightComment' value='8'/>
<enum name='tokenRightCurly' value='21'/>
<enum name='tokenRightEnclose' value='23'/>
<enum name='tokenRightLit' value='3'/>
<enum name='tokenRightParen' value='17'/>
<enum name='tokenRightSingGuillemet' value='75'/>
<enum name='tokenRoot' value='62'/>
<enum name='tokenSemicolon' value='53'/>
<enum name='tokenSigma' value='63'/>
<enum name='tokenSlash' value='29'/>
<enum name='tokenTilda' value='44'/>
<enum name='tokenTilde' value='44'/>
<enum name='tokenUnderline' value='56'/>
<enum name='tokenUnknown' value='0'/>
<enum name='tokenWhite' value='1'/>
<enum name='tooManyReqs' value='-1097'/>
<enum name='tooManySeps' value='32'/>
<enum name='tooManySkts' value='-1098'/>
<enum name='trackIDNotFound' value='-2029'/>
<enum name='trackNotInMovie' value='-2030'/>
<enum name='true32b' value='1'/>
<enum name='tsmAlreadyRegisteredErr' value='-2503'/>
<enum name='tsmCantChangeForcedClassStateErr' value='-2530'/>
<enum name='tsmCantOpenComponentErr' value='-2509'/>
<enum name='tsmComponentAlreadyOpenErr' value='-2515'/>
<enum name='tsmComponentNoErr' value='0'/>
<enum name='tsmComponentPropertyNotFoundErr' value='-2532'/>
<enum name='tsmComponentPropertyUnsupportedErr' value='-2531'/>
<enum name='tsmDefaultIsNotInputMethodErr' value='-2524'/>
<enum name='tsmDocNotActiveErr' value='-2507'/>
<enum name='tsmDocPropertyBufferTooSmallErr' value='-2529'/>
<enum name='tsmDocPropertyNotFoundErr' value='-2528'/>
<enum name='tsmDocumentOpenErr' value='-2511'/>
<enum name='tsmInputMethodIsOldErr' value='-2516'/>
<enum name='tsmInputMethodNotFoundErr' value='-2501'/>
<enum name='tsmInputModeChangeFailedErr' value='-2533'/>
<enum name='tsmInvalidContext' value='-2520'/>
<enum name='tsmInvalidDocIDErr' value='-2505'/>
<enum name='tsmNeverRegisteredErr' value='-2504'/>
<enum name='tsmNoHandler' value='-2521'/>
<enum name='tsmNoMoreTokens' value='-2522'/>
<enum name='tsmNoOpenTSErr' value='-2508'/>
<enum name='tsmNoStem' value='-2523'/>
<enum name='tsmNotAnAppErr' value='-2502'/>
<enum name='tsmScriptHasNoIMErr' value='-2517'/>
<enum name='tsmTSHasNoMenuErr' value='-2513'/>
<enum name='tsmTSMDocBusyErr' value='-2506'/>
<enum name='tsmTSNotOpenErr' value='-2514'/>
<enum name='tsmTextServiceNotFoundErr' value='-2510'/>
<enum name='tsmUnknownErr' value='-2519'/>
<enum name='tsmUnsupScriptLanguageErr' value='-2500'/>
<enum name='tsmUnsupportedTypeErr' value='-2518'/>
<enum name='tsmUseInputWindowErr' value='-2512'/>
<enum name='tuneParseOSErr' value='-2087'/>
<enum name='tunePlayerFullOSErr' value='-2086'/>
<enum name='twoSideErr' value='-78'/>
<enum name='unicodeBufErr' value='-8764'/>
<enum name='unicodeCharErr' value='-8763'/>
<enum name='unicodeChecksumErr' value='-8769'/>
<enum name='unicodeContextualErr' value='-8758'/>
<enum name='unicodeDirectionErr' value='-8759'/>
<enum name='unicodeElementErr' value='-8762'/>
<enum name='unicodeFallbacksErr' value='-8766'/>
<enum name='unicodeNoTableErr' value='-8768'/>
<enum name='unicodeNotFoundErr' value='-8761'/>
<enum name='unicodePartConvertErr' value='-8765'/>
<enum name='unicodeTableFormatErr' value='-8760'/>
<enum name='unicodeTextEncodingDataErr' value='-8757'/>
<enum name='unicodeVariantErr' value='-8767'/>
<enum name='unimpErr' value='-4'/>
<enum name='unitEmptyErr' value='-22'/>
<enum name='unitTblFullErr' value='-29'/>
<enum name='unknownFormatErr' value='-2114'/>
<enum name='unknownInsertModeErr' value='-20000'/>
<enum name='unresolvedComponentDLLErr' value='-3004'/>
<enum name='unsupportedAuxiliaryImportData' value='-2057'/>
<enum name='unsupportedForPlatformErr' value='-1858'/>
<enum name='unsupportedOSErr' value='-2096'/>
<enum name='unsupportedProcessorErr' value='-2097'/>
<enum name='updPixMemErr' value='-125'/>
<enum name='uppCallComponentCanDoProcInfo' value='752'/>
<enum name='uppCallComponentCloseProcInfo' value='1008'/>
<enum name='uppCallComponentGetMPWorkFunctionProcInfo' value='4080'/>
<enum name='uppCallComponentGetPublicResourceProcInfo' value='15344'/>
<enum name='uppCallComponentOpenProcInfo' value='1008'/>
<enum name='uppCallComponentRegisterProcInfo' value='240'/>
<enum name='uppCallComponentTargetProcInfo' value='1008'/>
<enum name='uppCallComponentUnregisterProcInfo' value='240'/>
<enum name='uppCallComponentVersionProcInfo' value='240'/>
<enum name='uppComponentFunctionImplementedProcInfo' value='752'/>
<enum name='uppComponentSetTargetProcInfo' value='1008'/>
<enum name='uppGetComponentVersionProcInfo' value='240'/>
<enum name='urlDataHFTPBadNameListErr' value='-2144'/>
<enum name='urlDataHFTPBadPasswordErr' value='-2136'/>
<enum name='urlDataHFTPBadUserErr' value='-2135'/>
<enum name='urlDataHFTPDataConnectionErr' value='-2138'/>
<enum name='urlDataHFTPFilenameErr' value='-2142'/>
<enum name='urlDataHFTPNeedPasswordErr' value='-2145'/>
<enum name='urlDataHFTPNoDirectoryErr' value='-2139'/>
<enum name='urlDataHFTPNoNetDriverErr' value='-2143'/>
<enum name='urlDataHFTPNoPasswordErr' value='-2146'/>
<enum name='urlDataHFTPPermissionsErr' value='-2141'/>
<enum name='urlDataHFTPProtocolErr' value='-2133'/>
<enum name='urlDataHFTPQuotaErr' value='-2140'/>
<enum name='urlDataHFTPServerDisconnectedErr' value='-2147'/>
<enum name='urlDataHFTPServerErr' value='-2137'/>
<enum name='urlDataHFTPShutdownErr' value='-2134'/>
<enum name='urlDataHFTPURLErr' value='-2148'/>
<enum name='urlDataHHTTPNoNetDriverErr' value='-2130'/>
<enum name='urlDataHHTTPProtocolErr' value='-2129'/>
<enum name='urlDataHHTTPRedirectErr' value='-2132'/>
<enum name='urlDataHHTTPURLErr' value='-2131'/>
<enum name='useATalk' value='1'/>
<enum name='useAsync' value='2'/>
<enum name='useExtClk' value='3'/>
<enum name='useFree' value='0'/>
<enum name='useMIDI' value='4'/>
<enum name='userBreak' value='-490'/>
<enum name='userCanceledErr' value='-128'/>
<enum name='userDataItemNotFound' value='-2026'/>
<enum name='userRejectErr' value='-912'/>
<enum name='vLckdErr' value='-46'/>
<enum name='vTypErr' value='-2'/>
<enum name='vType' value='1'/>
<enum name='validDateFields' value='-1'/>
<enum name='validInstancesExist' value='-3001'/>
<enum name='verAfrikaans' value='102'/>
<enum name='verAlternateGr' value='64'/>
<enum name='verArabia' value='16'/>
<enum name='verArabic' value='16'/>
<enum name='verArmenia' value='84'/>
<enum name='verArmenian' value='84'/>
<enum name='verAustralia' value='15'/>
<enum name='verAustria' value='92'/>
<enum name='verAustriaGerman' value='92'/>
<enum name='verBelarus' value='61'/>
<enum name='verBelgiumLux' value='6'/>
<enum name='verBelgiumLuxPoint' value='27'/>
<enum name='verBengali' value='60'/>
<enum name='verBhutan' value='83'/>
<enum name='verBrazil' value='71'/>
<enum name='verBreton' value='77'/>
<enum name='verBritain' value='2'/>
<enum name='verBrittany' value='77'/>
<enum name='verBulgaria' value='72'/>
<enum name='verByeloRussian' value='61'/>
<enum name='verCanadaComma' value='28'/>
<enum name='verCanadaPoint' value='29'/>
<enum name='verCatalonia' value='73'/>
<enum name='verChina' value='52'/>
<enum name='verCroatia' value='68'/>
<enum name='verCyprus' value='23'/>
<enum name='verCzech' value='56'/>
<enum name='verDenmark' value='9'/>
<enum name='verEastAsiaGeneric' value='58'/>
<enum name='verEngCanada' value='82'/>
<enum name='verErr' value='-84'/>
<enum name='verEsperanto' value='103'/>
<enum name='verEstonia' value='44'/>
<enum name='verFaeroeIsl' value='47'/>
<enum name='verFarEastGeneric' value='58'/>
<enum name='verFaroeIsl' value='47'/>
<enum name='verFinland' value='17'/>
<enum name='verFlemish' value='6'/>
<enum name='verFlemishPoint' value='27'/>
<enum name='verFrBelgium' value='98'/>
<enum name='verFrBelgiumLux' value='6'/>
<enum name='verFrCanada' value='11'/>
<enum name='verFrSwiss' value='18'/>
<enum name='verFrance' value='1'/>
<enum name='verFrenchUniversal' value='91'/>
<enum name='verGenericFE' value='58'/>
<enum name='verGeorgia' value='85'/>
<enum name='verGeorgian' value='85'/>
<enum name='verGermanReformed' value='70'/>
<enum name='verGermany' value='3'/>
<enum name='verGrSwiss' value='19'/>
<enum name='verGreece' value='20'/>
<enum name='verGreeceAlt' value='64'/>
<enum name='verGreecePoly' value='40'/>
<enum name='verGreekAncient' value='40'/>
<enum name='verGreenland' value='107'/>
<enum name='verGujarati' value='94'/>
<enum name='verHungary' value='43'/>
<enum name='verIceland' value='21'/>
<enum name='verIndia' value='33'/>
<enum name='verIndiaHindi' value='33'/>
<enum name='verIndiaUrdu' value='96'/>
<enum name='verInternational' value='37'/>
<enum name='verIran' value='48'/>
<enum name='verIreland' value='50'/>
<enum name='verIrelandEnglish' value='108'/>
<enum name='verIrishGaelicScript' value='81'/>
<enum name='verIsrael' value='13'/>
<enum name='verItalianSwiss' value='36'/>
<enum name='verItaly' value='4'/>
<enum name='verJapan' value='14'/>
<enum name='verKorea' value='51'/>
<enum name='verLapland' value='46'/>
<enum name='verLatvia' value='45'/>
<enum name='verLithuania' value='41'/>
<enum name='verMacedonia' value='67'/>
<enum name='verMacedonian' value='67'/>
<enum name='verMagyar' value='59'/>
<enum name='verMalta' value='22'/>
<enum name='verManxGaelic' value='76'/>
<enum name='verMarathi' value='104'/>
<enum name='verMultilingual' value='74'/>
<enum name='verNepal' value='106'/>
<enum name='verNetherlands' value='5'/>
<enum name='verNetherlandsComma' value='26'/>
<enum name='verNorway' value='12'/>
<enum name='verNunavut' value='78'/>
<enum name='verNynorsk' value='101'/>
<enum name='verPakistan' value='34'/>
<enum name='verPakistanUrdu' value='34'/>
<enum name='verPoland' value='42'/>
<enum name='verPortugal' value='10'/>
<enum name='verPunjabi' value='95'/>
<enum name='verRomania' value='39'/>
<enum name='verRumania' value='39'/>
<enum name='verRussia' value='49'/>
<enum name='verSami' value='46'/>
<enum name='verScottishGaelic' value='75'/>
<enum name='verScriptGeneric' value='55'/>
<enum name='verSerbia' value='65'/>
<enum name='verSerbian' value='65'/>
<enum name='verSingapore' value='100'/>
<enum name='verSlovak' value='57'/>
<enum name='verSlovenia' value='66'/>
<enum name='verSlovenian' value='66'/>
<enum name='verSpLatinAmerica' value='86'/>
<enum name='verSpain' value='8'/>
<enum name='verSweden' value='7'/>
<enum name='verTaiwan' value='53'/>
<enum name='verThailand' value='54'/>
<enum name='verTibet' value='105'/>
<enum name='verTibetan' value='105'/>
<enum name='verTonga' value='88'/>
<enum name='verTurkey' value='24'/>
<enum name='verTurkishModified' value='35'/>
<enum name='verUS' value='0'/>
<enum name='verUkraine' value='62'/>
<enum name='verUkrania' value='62'/>
<enum name='verUnspecified' value='32767'/>
<enum name='verUzbek' value='99'/>
<enum name='verVietnam' value='97'/>
<enum name='verWales' value='79'/>
<enum name='verWelsh' value='79'/>
<enum name='verYugoCroatian' value='25'/>
<enum name='verYugoslavia' value='25'/>
<enum name='vervariantDenmark' value='32'/>
<enum name='vervariantNorway' value='31'/>
<enum name='vervariantPortugal' value='30'/>
<enum name='videoOutputInUseErr' value='-2090'/>
<enum name='vmAddressNotInFileViewErr' value='-647'/>
<enum name='vmBadDriver' value='-632'/>
<enum name='vmBusyBackingFileErr' value='-642'/>
<enum name='vmFileViewAccessErr' value='-645'/>
<enum name='vmInvalidBackingFileIDErr' value='-640'/>
<enum name='vmInvalidFileViewIDErr' value='-644'/>
<enum name='vmInvalidOwningProcessErr' value='-648'/>
<enum name='vmKernelMMUInitErr' value='-629'/>
<enum name='vmMappingPrivilegesErr' value='-641'/>
<enum name='vmMemLckdErr' value='-631'/>
<enum name='vmMorePhysicalThanVirtualErr' value='-628'/>
<enum name='vmNoMoreBackingFilesErr' value='-643'/>
<enum name='vmNoMoreFileViewsErr' value='-646'/>
<enum name='vmNoVectorErr' value='-633'/>
<enum name='vmOffErr' value='-630'/>
<enum name='voiceNotFound' value='-244'/>
<enum name='volGoneErr' value='-124'/>
<enum name='volMountChangedBit' value='14'/>
<enum name='volMountChangedMask' value='16384'/>
<enum name='volMountExtendedFlagsBit' value='7'/>
<enum name='volMountExtendedFlagsMask' value='128'/>
<enum name='volMountFSReservedMask' value='255'/>
<enum name='volMountInteractBit' value='15'/>
<enum name='volMountInteractMask' value='32768'/>
<enum name='volMountNoLoginMsgFlagBit' value='0'/>
<enum name='volMountNoLoginMsgFlagMask' value='1'/>
<enum name='volMountSysReservedMask' value='65280'/>
<enum name='volOffLinErr' value='-53'/>
<enum name='volOnLinErr' value='-55'/>
<enum name='volVMBusyErr' value='-1311'/>
<enum name='wPrErr' value='-44'/>
<enum name='wackBadFileErr' value='-2115'/>
<enum name='wackBadMetaDataErr' value='-2117'/>
<enum name='wackForkNotFoundErr' value='-2116'/>
<enum name='weekOfYearField' value='9'/>
<enum name='weekOfYearMask' value='512'/>
<enum name='wfFileNotFound' value='-2021'/>
<enum name='windowAppModalStateAlreadyExistsErr' value='-5617'/>
<enum name='windowAttributeImmutableErr' value='-5612'/>
<enum name='windowAttributesConflictErr' value='-5613'/>
<enum name='windowGroupInvalidErr' value='-5616'/>
<enum name='windowManagerInternalErr' value='-5614'/>
<enum name='windowNoAppModalStateErr' value='-5618'/>
<enum name='windowWrongStateErr' value='-5615'/>
<enum name='wrPermErr' value='-61'/>
<enum name='wrUnderrun' value='-74'/>
<enum name='wrgVolTypErr' value='-123'/>
<enum name='writErr' value='-20'/>
<enum name='writeReference' value='0'/>
<enum name='writingPastEnd' value='-189'/>
<enum name='wrongApplicationPlatform' value='-875'/>
<enum name='ydm' value='5'/>
<enum name='yearField' value='1'/>
<enum name='yearMask' value='2'/>
<enum name='ymd' value='2'/>
<enum name='zeroCycle' value='1'/>
<function name='AbsoluteDeltaToDuration'>
<arg declared_type='AbsoluteTime' name='leftAbsoluteTime' type='{UnsignedWide=II}'/>
<arg declared_type='AbsoluteTime' name='rightAbsoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='Duration' type='l' type64='i'/>
</function>
<function name='AbsoluteDeltaToNanoseconds'>
<arg declared_type='AbsoluteTime' name='leftAbsoluteTime' type='{UnsignedWide=II}'/>
<arg declared_type='AbsoluteTime' name='rightAbsoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='Nanoseconds' type='{UnsignedWide=II}'/>
</function>
<function name='AbsoluteToDuration'>
<arg declared_type='AbsoluteTime' name='absoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='Duration' type='l' type64='i'/>
</function>
<function name='AbsoluteToNanoseconds'>
<arg declared_type='AbsoluteTime' name='absoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='Nanoseconds' type='{UnsignedWide=II}'/>
</function>
<function name='AddAbsoluteToAbsolute'>
<arg declared_type='AbsoluteTime' name='absoluteTime1' type='{UnsignedWide=II}'/>
<arg declared_type='AbsoluteTime' name='absoluteTime2' type='{UnsignedWide=II}'/>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='AddAtomic'>
<arg declared_type='SInt32' name='amount' type='l' type64='i'/>
<arg declared_type='SInt32*' name='address' type='^i'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='AddAtomic16'>
<arg declared_type='SInt32' name='amount' type='l' type64='i'/>
<arg declared_type='SInt16*' name='address' type='^s'/>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='AddAtomic8'>
<arg declared_type='SInt32' name='amount' type='l' type64='i'/>
<arg declared_type='SInt8*' name='address' type='*'/>
<retval declared_type='SInt8' type='c'/>
</function>
<function name='AddCollectionItem'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='id' type='l' type64='i'/>
<arg declared_type='SInt32' name='itemSize' type='l' type64='i'/>
<arg const='true' declared_type='void*' name='itemData' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AddCollectionItemHdl'>
<arg declared_type='Collection' name='aCollection' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='id' type='l' type64='i'/>
<arg declared_type='Handle' name='itemData' type='^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AddDurationToAbsolute'>
<arg declared_type='Duration' name='duration' type='l' type64='i'/>
<arg declared_type='AbsoluteTime' name='absoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='AddFolderDescriptor'>
<arg declared_type='FolderType' name='foldType' type='L' type64='I'/>
<arg declared_type='FolderDescFlags' name='flags' type='L' type64='I'/>
<arg declared_type='FolderClass' name='foldClass' type='L' type64='I'/>
<arg declared_type='FolderLocation' name='foldLocation' type='L' type64='I'/>
<arg declared_type='OSType' name='badgeSignature' type='L' type64='I'/>
<arg declared_type='OSType' name='badgeType' type='L' type64='I'/>
<arg declared_type='ConstStrFileNameParam' name='name' type='*'/>
<arg declared_type='Boolean' name='replaceFlag' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='AddNanosecondsToAbsolute'>
<arg declared_type='Nanoseconds' name='nanoseconds' type='{UnsignedWide=II}'/>
<arg declared_type='AbsoluteTime' name='absoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='AddResource'>
<arg declared_type='Handle' name='theData' type='^*'/>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<arg declared_type='ResID' name='theID' type='s'/>
<arg declared_type='ConstStr255Param' name='name' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='BitAnd'>
<arg declared_type='long' name='value1' type='l' type64='q'/>
<arg declared_type='long' name='value2' type='l' type64='q'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='BitAndAtomic'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt32*' name='address' type='^I'/>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='BitAndAtomic16'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt16*' name='address' type='^S'/>
<retval declared_type='UInt16' type='S'/>
</function>
<function name='BitAndAtomic8'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt8*' name='address' type='*'/>
<retval declared_type='UInt8' type='C'/>
</function>
<function name='BitClr'>
<arg declared_type='void*' name='bytePtr' type='^v'/>
<arg declared_type='long' name='bitNum' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='BitNot'>
<arg declared_type='long' name='value' type='l' type64='q'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='BitOr'>
<arg declared_type='long' name='value1' type='l' type64='q'/>
<arg declared_type='long' name='value2' type='l' type64='q'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='BitOrAtomic'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt32*' name='address' type='^I'/>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='BitOrAtomic16'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt16*' name='address' type='^S'/>
<retval declared_type='UInt16' type='S'/>
</function>
<function name='BitOrAtomic8'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt8*' name='address' type='*'/>
<retval declared_type='UInt8' type='C'/>
</function>
<function name='BitSet'>
<arg declared_type='void*' name='bytePtr' type='^v'/>
<arg declared_type='long' name='bitNum' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='BitShift'>
<arg declared_type='long' name='value' type='l' type64='q'/>
<arg declared_type='short' name='count' type='s'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='BitTst'>
<arg const='true' declared_type='void*' name='bytePtr' type='^v'/>
<arg declared_type='long' name='bitNum' type='l' type64='q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='BitXor'>
<arg declared_type='long' name='value1' type='l' type64='q'/>
<arg declared_type='long' name='value2' type='l' type64='q'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='BitXorAtomic'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt32*' name='address' type='^I'/>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='BitXorAtomic16'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt16*' name='address' type='^S'/>
<retval declared_type='UInt16' type='S'/>
</function>
<function name='BitXorAtomic8'>
<arg declared_type='UInt32' name='mask' type='L' type64='I'/>
<arg declared_type='UInt8*' name='address' type='*'/>
<retval declared_type='UInt8' type='C'/>
</function>
<function name='CSBackupIsItemExcluded'>
<arg declared_type='CFURLRef' name='item' type='^{__CFURL=}'/>
<arg declared_type='Boolean*' name='excludeByPath' type='^B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSBackupSetItemExcluded'>
<arg declared_type='CFURLRef' name='item' type='^{__CFURL=}'/>
<arg declared_type='Boolean' name='exclude' type='B'/>
<arg declared_type='Boolean' name='excludeByPath' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CSCopyMachineName'>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSCopyUserName'>
<arg declared_type='Boolean' name='useShortName' type='B'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSDiskSpaceCancelRecovery'>
<arg declared_type='CFUUIDRef' name='operationUUID' type='^{__CFUUID=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSDiskSpaceGetRecoveryEstimate'>
<arg declared_type='CFURLRef' name='volumeURL' type='^{__CFURL=}'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='CSDiskSpaceStartRecovery'>
<arg declared_type='CFURLRef' name='volumeURL' type='^{__CFURL=}'/>
<arg declared_type='UInt64' name='bytesNeeded' type='Q'/>
<arg declared_type='CSDiskSpaceRecoveryOptions' name='options' type='i'/>
<arg declared_type='CFUUIDRef*' name='outOperationUUID' type='^^{__CFUUID}'/>
<arg declared_type='dispatch_queue_t' name='callbackQueue' type='@'/>
<arg declared_type='CSDiskSpaceRecoveryCallback' function_pointer='true' name='callback' type='@?'>
<arg declared_type='Boolean' type='B'/>
<arg declared_type='UInt64' type='Q'/>
<arg declared_type='CFErrorRef' type='^{__CFError=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='CSGetComponentsThreadMode'>
<retval declared_type='CSComponentsThreadMode' type='L' type64='I'/>
</function>
<function name='CSSetComponentsThreadMode'>
<arg declared_type='CSComponentsThreadMode' name='mode' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CallComponentCanDo'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type='SInt16' name='ftnNumber' type='s'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentClose'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type='ComponentInstance' name='self' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentDispatch'>
<arg declared_type='ComponentParameters*' name='cp' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentFunction'>
<arg declared_type='ComponentParameters*' name='params' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='ComponentFunctionUPP' function_pointer='true' name='func' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentFunctionWithStorage'>
<arg declared_type='Handle' name='storage' type='^*'/>
<arg declared_type='ComponentParameters*' name='params' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='ComponentFunctionUPP' function_pointer='true' name='func' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentFunctionWithStorageProcInfo'>
<arg declared_type='Handle' name='storage' type='^*'/>
<arg declared_type='ComponentParameters*' name='params' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='ProcPtr' function_pointer='true' name='func' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<arg declared_type='ProcInfoType' name='funcProcInfo' type='L' type64='Q'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentGetMPWorkFunction'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type='ComponentMPWorkFunctionUPP*' name='workFunction' type='^^?'/>
<arg declared_type='void**' name='refCon' type='^^v'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentGetPublicResource'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type='OSType' name='resourceType' type='L' type64='I'/>
<arg declared_type='SInt16' name='resourceID' type='s'/>
<arg declared_type='Handle*' name='resource' type='^^*'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentOpen'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type='ComponentInstance' name='self' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentRegister'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentTarget'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type='ComponentInstance' name='target' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentUnregister'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CallComponentVersion'>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='CaptureComponent'>
<arg declared_type='Component' name='capturedComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='Component' name='capturingComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='ChangeTextToUnicodeInfo'>
<arg declared_type='TextToUnicodeInfo' name='ioTextToUnicodeInfo' type='^{OpaqueTextToUnicodeInfo=}'/>
<arg declared_type='ConstUnicodeMappingPtr' name='iUnicodeMapping' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ChangeUnicodeToTextInfo'>
<arg declared_type='UnicodeToTextInfo' name='ioUnicodeToTextInfo' type='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type='ConstUnicodeMappingPtr' name='iUnicodeMapping' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ChangedResource'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CloneCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='Collection' type='^{OpaqueCollection=}'/>
</function>
<function name='CloseComponent'>
<arg declared_type='ComponentInstance' name='aComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='CloseComponentResFile'>
<arg declared_type='ResFileRefNum' name='refnum' type='s' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='CloseResFile'>
<arg declared_type='ResFileRefNum' name='refNum' type='s' type64='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CollectionTagExists'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CompareAndSwap'>
<arg declared_type='UInt32' name='oldValue' type='L' type64='I'/>
<arg declared_type='UInt32' name='newValue' type='L' type64='I'/>
<arg declared_type='UInt32*' name='address' type='^I'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='ConvertFromPStringToUnicode'>
<arg declared_type='TextToUnicodeInfo' name='iTextToUnicodeInfo' type='^{OpaqueTextToUnicodeInfo=}'/>
<arg declared_type='ConstStr255Param' name='iPascalStr' type='*'/>
<arg declared_type='ByteCount' name='iOutputBufLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oUnicodeLen' type='^I' type64='^Q'/>
<arg declared_type='UniChar*' name='oUnicodeStr' type='^S'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ConvertFromTextToUnicode'>
<arg declared_type='TextToUnicodeInfo' name='iTextToUnicodeInfo' type='^{OpaqueTextToUnicodeInfo=}'/>
<arg declared_type='ByteCount' name='iSourceLen' type='L' type64='Q'/>
<arg declared_type='ConstLogicalAddress' name='iSourceStr' type='^v'/>
<arg declared_type='OptionBits' name='iControlFlags' type='L' type64='I'/>
<arg declared_type='ItemCount' name='iOffsetCount' type='L' type64='Q'/>
<arg const='true' declared_type='ByteOffset*' name='iOffsetArray' type='^I' type64='^Q'/>
<arg declared_type='ItemCount*' name='oOffsetCount' type='^I' type64='^Q'/>
<arg declared_type='ByteOffset*' name='oOffsetArray' type='^I' type64='^Q'/>
<arg declared_type='ByteCount' name='iOutputBufLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oSourceRead' type='^I' type64='^Q'/>
<arg declared_type='ByteCount*' name='oUnicodeLen' type='^I' type64='^Q'/>
<arg declared_type='UniChar*' name='oUnicodeStr' type='^S'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ConvertFromUnicodeToPString'>
<arg declared_type='UnicodeToTextInfo' name='iUnicodeToTextInfo' type='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type='ByteCount' name='iUnicodeLen' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='iUnicodeStr' type='^S'/>
<arg declared_type='unsigned char*' name='oPascalStr' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ConvertFromUnicodeToScriptCodeRun'>
<arg declared_type='UnicodeToTextRunInfo' name='iUnicodeToTextInfo' type='^{OpaqueUnicodeToTextRunInfo=}'/>
<arg declared_type='ByteCount' name='iUnicodeLen' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='iUnicodeStr' type='^S'/>
<arg declared_type='OptionBits' name='iControlFlags' type='L' type64='I'/>
<arg declared_type='ItemCount' name='iOffsetCount' type='L' type64='Q'/>
<arg const='true' declared_type='ByteOffset*' name='iOffsetArray' type='^I' type64='^Q'/>
<arg declared_type='ItemCount*' name='oOffsetCount' type='^I' type64='^Q'/>
<arg declared_type='ByteOffset*' name='oOffsetArray' type='^I' type64='^Q'/>
<arg declared_type='ByteCount' name='iOutputBufLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oInputRead' type='^I' type64='^Q'/>
<arg declared_type='ByteCount*' name='oOutputLen' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' name='oOutputStr' type='^v'/>
<arg declared_type='ItemCount' name='iScriptRunBufLen' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='oScriptRunOutLen' type='^I' type64='^Q'/>
<arg declared_type='ScriptCodeRun*' name='oScriptCodeRuns' type='^{ScriptCodeRun=Is}' type64='^{ScriptCodeRun=Qs}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ConvertFromUnicodeToText'>
<arg declared_type='UnicodeToTextInfo' name='iUnicodeToTextInfo' type='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type='ByteCount' name='iUnicodeLen' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='iUnicodeStr' type='^S'/>
<arg declared_type='OptionBits' name='iControlFlags' type='L' type64='I'/>
<arg declared_type='ItemCount' name='iOffsetCount' type='L' type64='Q'/>
<arg const='true' declared_type='ByteOffset*' name='iOffsetArray' type='^I' type64='^Q'/>
<arg declared_type='ItemCount*' name='oOffsetCount' type='^I' type64='^Q'/>
<arg declared_type='ByteOffset*' name='oOffsetArray' type='^I' type64='^Q'/>
<arg declared_type='ByteCount' name='iOutputBufLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oInputRead' type='^I' type64='^Q'/>
<arg declared_type='ByteCount*' name='oOutputLen' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' name='oOutputStr' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ConvertFromUnicodeToTextRun'>
<arg declared_type='UnicodeToTextRunInfo' name='iUnicodeToTextInfo' type='^{OpaqueUnicodeToTextRunInfo=}'/>
<arg declared_type='ByteCount' name='iUnicodeLen' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='iUnicodeStr' type='^S'/>
<arg declared_type='OptionBits' name='iControlFlags' type='L' type64='I'/>
<arg declared_type='ItemCount' name='iOffsetCount' type='L' type64='Q'/>
<arg const='true' declared_type='ByteOffset*' name='iOffsetArray' type='^I' type64='^Q'/>
<arg declared_type='ItemCount*' name='oOffsetCount' type='^I' type64='^Q'/>
<arg declared_type='ByteOffset*' name='oOffsetArray' type='^I' type64='^Q'/>
<arg declared_type='ByteCount' name='iOutputBufLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oInputRead' type='^I' type64='^Q'/>
<arg declared_type='ByteCount*' name='oOutputLen' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' name='oOutputStr' type='^v'/>
<arg declared_type='ItemCount' name='iEncodingRunBufLen' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='oEncodingRunOutLen' type='^I' type64='^Q'/>
<arg declared_type='TextEncodingRun*' name='oEncodingRuns' type='^{TextEncodingRun=II}' type64='^{TextEncodingRun=QI}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CopyCollection'>
<arg declared_type='Collection' name='srcCollection' type='^{OpaqueCollection=}'/>
<arg declared_type='Collection' name='dstCollection' type='^{OpaqueCollection=}'/>
<retval declared_type='Collection' type='^{OpaqueCollection=}'/>
</function>
<function name='CoreEndianFlipData'>
<arg declared_type='OSType' name='dataDomain' type='L' type64='I'/>
<arg declared_type='OSType' name='dataType' type='L' type64='I'/>
<arg declared_type='SInt16' name='id' type='s'/>
<arg declared_type='void*' name='data' type='^v'/>
<arg declared_type='ByteCount' name='dataLen' type='L' type64='Q'/>
<arg declared_type='Boolean' name='currentlyNative' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CoreEndianGetFlipper'>
<arg declared_type='OSType' name='dataDomain' type='L' type64='I'/>
<arg declared_type='OSType' name='dataType' type='L' type64='I'/>
<arg declared_type='CoreEndianFlipProc*' name='proc' type='^^?'/>
<arg declared_type='void**' name='refcon' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CoreEndianInstallFlipper'>
<arg declared_type='OSType' name='dataDomain' type='L' type64='I'/>
<arg declared_type='OSType' name='dataType' type='L' type64='I'/>
<arg declared_type='CoreEndianFlipProc' function_pointer='true' name='proc' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt16' type='s'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='Boolean' type='B'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='void*' name='refcon' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='Count1Resources'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<retval declared_type='ResourceCount' type='s'/>
</function>
<function name='Count1Types'>
<retval declared_type='ResourceCount' type='s'/>
</function>
<function name='CountCollectionItems'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='CountCollectionOwners'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='CountCollectionTags'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='CountComponentInstances'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='CountComponents'>
<arg declared_type='ComponentDescription*' name='looking' type='^{ComponentDescription=IIIII}'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='CountResources'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<retval declared_type='ResourceCount' type='s'/>
</function>
<function name='CountTaggedCollectionItems'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='CountTypes'>
<retval declared_type='ResourceCount' type='s'/>
</function>
<function name='CountUnicodeMappings'>
<arg declared_type='OptionBits' name='iFilter' type='L' type64='I'/>
<arg declared_type='ConstUnicodeMappingPtr' name='iFindMapping' type='^{UnicodeMapping=IIi}'/>
<arg declared_type='ItemCount*' name='oActualCount' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CreateTextEncoding'>
<arg declared_type='TextEncodingBase' name='encodingBase' type='L' type64='I'/>
<arg declared_type='TextEncodingVariant' name='encodingVariant' type='L' type64='I'/>
<arg declared_type='TextEncodingFormat' name='encodingFormat' type='L' type64='I'/>
<retval declared_type='TextEncoding' type='L' type64='I'/>
</function>
<function name='CreateTextToUnicodeInfo'>
<arg declared_type='ConstUnicodeMappingPtr' name='iUnicodeMapping' type='^{UnicodeMapping=IIi}'/>
<arg declared_type='TextToUnicodeInfo*' name='oTextToUnicodeInfo' type='^^{OpaqueTextToUnicodeInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CreateTextToUnicodeInfoByEncoding'>
<arg declared_type='TextEncoding' name='iEncoding' type='L' type64='I'/>
<arg declared_type='TextToUnicodeInfo*' name='oTextToUnicodeInfo' type='^^{OpaqueTextToUnicodeInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CreateThreadPool'>
<arg declared_type='ThreadStyle' name='threadStyle' type='L' type64='I'/>
<arg declared_type='SInt16' name='numToCreate' type='s'/>
<arg declared_type='Size' name='stackSize' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='CreateUnicodeToTextInfo'>
<arg declared_type='ConstUnicodeMappingPtr' name='iUnicodeMapping' type='^{UnicodeMapping=IIi}'/>
<arg declared_type='UnicodeToTextInfo*' name='oUnicodeToTextInfo' type='^^{OpaqueUnicodeToTextInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CreateUnicodeToTextInfoByEncoding'>
<arg declared_type='TextEncoding' name='iEncoding' type='L' type64='I'/>
<arg declared_type='UnicodeToTextInfo*' name='oUnicodeToTextInfo' type='^^{OpaqueUnicodeToTextInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CreateUnicodeToTextRunInfo'>
<arg declared_type='ItemCount' name='iNumberOfMappings' type='L' type64='Q'/>
<arg const='true' declared_type='UnicodeMapping*' name='iUnicodeMappings' type='^{UnicodeMapping=IIi}'/>
<arg declared_type='UnicodeToTextRunInfo*' name='oUnicodeToTextInfo' type='^^{OpaqueUnicodeToTextRunInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CreateUnicodeToTextRunInfoByEncoding'>
<arg declared_type='ItemCount' name='iNumberOfEncodings' type='L' type64='Q'/>
<arg const='true' declared_type='TextEncoding*' name='iEncodings' type='^I'/>
<arg declared_type='UnicodeToTextRunInfo*' name='oUnicodeToTextInfo' type='^^{OpaqueUnicodeToTextRunInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CreateUnicodeToTextRunInfoByScriptCode'>
<arg declared_type='ItemCount' name='iNumberOfScriptCodes' type='L' type64='Q'/>
<arg const='true' declared_type='ScriptCode*' name='iScripts' type='^s'/>
<arg declared_type='UnicodeToTextRunInfo*' name='oUnicodeToTextInfo' type='^^{OpaqueUnicodeToTextRunInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CurResFile'>
<retval declared_type='ResFileRefNum' type='s' type64='i'/>
</function>
<function name='DebugAssert'>
<arg declared_type='OSType' name='componentSignature' type='L' type64='I'/>
<arg declared_type='UInt32' name='options' type='L' type64='I'/>
<arg const='true' declared_type='char*' name='assertionString' type='*'/>
<arg const='true' declared_type='char*' name='exceptionLabelString' type='*'/>
<arg const='true' declared_type='char*' name='errorString' type='*'/>
<arg const='true' declared_type='char*' name='fileName' type='*'/>
<arg declared_type='long' name='lineNumber' type='l' type64='q'/>
<arg declared_type='void*' name='value' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='DecrementAtomic'>
<arg declared_type='SInt32*' name='address' type='^i'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='DecrementAtomic16'>
<arg declared_type='SInt16*' name='address' type='^s'/>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='DecrementAtomic8'>
<arg declared_type='SInt8*' name='address' type='*'/>
<retval declared_type='SInt8' type='c'/>
</function>
<function name='Delay'>
<arg declared_type='unsigned long' name='numTicks' type='L' type64='Q'/>
<arg declared_type='unsigned long*' name='finalTicks' type='^L' type64='^Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='DelegateComponentCall'>
<arg declared_type='ComponentParameters*' name='originalParams' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='ComponentInstance' name='ci' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='DeleteGestaltValue'>
<arg declared_type='OSType' name='selector' type='L' type64='I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='Dequeue'>
<arg declared_type='QElemPtr' name='qElement' type='^{QElem=^{QElem}s[1s]}'/>
<arg declared_type='QHdrPtr' name='qHeader' type='^{QHdr=s^{QElem}^{QElem}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='DetachResource'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='DetachResourceFile'>
<arg declared_type='ResFileRefNum' name='refNum' type='s' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='DetermineIfPathIsEnclosedByFolder'>
<arg declared_type='FSVolumeRefNum' name='domainOrVRefNum' type='s'/>
<arg declared_type='OSType' name='folderType' type='L' type64='I'/>
<arg const='true' declared_type='UInt8*' name='utf8Path' type='*'/>
<arg declared_type='Boolean' name='pathIsRealPath' type='B'/>
<arg declared_type='Boolean*' name='outResult' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='DisposeAVLCompareItemsUPP'>
<arg declared_type='AVLCompareItemsUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='AVLNodeType' type='S'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeAVLDisposeItemUPP'>
<arg declared_type='AVLDisposeItemUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeAVLItemSizeUPP'>
<arg declared_type='AVLItemSizeUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='ByteCount' type='L' type64='Q'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeAVLWalkUPP'>
<arg declared_type='AVLWalkUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='AVLVisitStage' type='S'/>
<arg declared_type='AVLNodeType' type='S'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCollectionExceptionUPP'>
<arg declared_type='CollectionExceptionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='Collection' type='^{OpaqueCollection=}'/>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCollectionFlattenUPP'>
<arg declared_type='CollectionFlattenUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeComponentFunctionUPP'>
<arg declared_type='ComponentFunctionUPP' function_pointer='true' name='userUPP' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeComponentMPWorkFunctionUPP'>
<arg declared_type='ComponentMPWorkFunctionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ComponentMPWorkFunctionHeaderRecordPtr' type='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeComponentRoutineUPP'>
<arg declared_type='ComponentRoutineUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ComponentParameters*' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='Handle' type='^*'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeDebugAssertOutputHandlerUPP'>
<arg declared_type='DebugAssertOutputHandlerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ConstStr255Param' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeDebugComponent'>
<arg declared_type='OSType' name='componentSignature' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='DisposeDebugComponentCallbackUPP'>
<arg declared_type='DebugComponentCallbackUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeDebuggerDisposeThreadUPP'>
<arg declared_type='DebuggerDisposeThreadUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeDebuggerNewThreadUPP'>
<arg declared_type='DebuggerNewThreadUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeDebuggerThreadSchedulerUPP'>
<arg declared_type='DebuggerThreadSchedulerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeDeferredTaskUPP'>
<arg declared_type='DeferredTaskUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeExceptionHandlerUPP'>
<arg declared_type='ExceptionHandlerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ExceptionInformation*' type='^{ExceptionInformation=I^{MachineInformationIntel}^{RegisterInformationIntel}^{FPUInformationIntel}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel}}' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeFNSubscriptionUPP'>
<arg declared_type='FNSubscriptionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='FNMessage' type='L' type64='I'/>
<arg declared_type='OptionBits' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='FNSubscriptionRef' type='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeFSVolumeEjectUPP'>
<arg declared_type='FSVolumeEjectUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeFSVolumeMountUPP'>
<arg declared_type='FSVolumeMountUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeFSVolumeUnmountUPP'>
<arg declared_type='FSVolumeUnmountUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeFolderManagerNotificationUPP'>
<arg declared_type='FolderManagerNotificationUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeGetMissingComponentResourceUPP'>
<arg declared_type='GetMissingComponentResourceUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt16' type='s'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='Handle*' type='^^*'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeHandle'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeIOCompletionUPP'>
<arg declared_type='IOCompletionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeIndexToUCStringUPP'>
<arg declared_type='IndexToUCStringUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='CFStringRef*' type='^^{__CFString}'/>
<arg declared_type='UCTypeSelectOptions*' type='^S'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposePtr'>
<arg declared_type='Ptr' name='p' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeResErrUPP'>
<arg declared_type='ResErrUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeSelectorFunctionUPP'>
<arg declared_type='SelectorFunctionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt32*' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeTextToUnicodeInfo'>
<arg declared_type='TextToUnicodeInfo*' name='ioTextToUnicodeInfo' type='^^{OpaqueTextToUnicodeInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='DisposeThread'>
<arg declared_type='ThreadID' name='threadToDump' type='L' type64='Q'/>
<arg declared_type='void*' name='threadResult' type='^v'/>
<arg declared_type='Boolean' name='recycleThread' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='DisposeThreadEntryUPP'>
<arg declared_type='ThreadEntryUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='voidPtr' type='^v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeThreadSchedulerUPP'>
<arg declared_type='ThreadSchedulerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeThreadSwitchUPP'>
<arg declared_type='ThreadSwitchUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeThreadTerminationUPP'>
<arg declared_type='ThreadTerminationUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeTimerUPP'>
<arg declared_type='TimerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='TMTaskPtr' type='^{TMTask=^{QElem}s^?lll}' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeUnicodeToTextFallbackUPP'>
<arg declared_type='UnicodeToTextFallbackUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='UniChar*' type='^S'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' type='*'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' type='^v'/>
<arg declared_type='ConstUnicodeMappingPtr' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeUnicodeToTextInfo'>
<arg declared_type='UnicodeToTextInfo*' name='ioUnicodeToTextInfo' type='^^{OpaqueUnicodeToTextInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='DisposeUnicodeToTextRunInfo'>
<arg declared_type='UnicodeToTextRunInfo*' name='ioUnicodeToTextRunInfo' type='^^{OpaqueUnicodeToTextRunInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='DurationToAbsolute'>
<arg declared_type='Duration' name='duration' type='l' type64='i'/>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='DurationToNanoseconds'>
<arg declared_type='Duration' name='theDuration' type='l' type64='i'/>
<retval declared_type='Nanoseconds' type='{UnsignedWide=II}'/>
</function>
<function name='EmptyCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='EmptyHandle'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Enqueue'>
<arg declared_type='QElemPtr' name='qElement' type='^{QElem=^{QElem}s[1s]}'/>
<arg declared_type='QHdrPtr' name='qHeader' type='^{QHdr=s^{QElem}^{QElem}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FNGetDirectoryForSubscription'>
<arg declared_type='FNSubscriptionRef' name='subscription' type='^{OpaqueFNSubscriptionRef=}'/>
<arg declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FNNotify'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='FNMessage' name='message' type='L' type64='I'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FNNotifyAll'>
<arg declared_type='FNMessage' name='message' type='L' type64='I'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FNNotifyByPath'>
<arg const='true' declared_type='UInt8*' name='path' type='*'/>
<arg declared_type='FNMessage' name='message' type='L' type64='I'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FNSubscribe'>
<arg const='true' declared_type='FSRef*' name='directoryRef' type='^{FSRef=[80C]}'/>
<arg declared_type='FNSubscriptionUPP' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FNMessage' type='L' type64='I'/>
<arg declared_type='OptionBits' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='FNSubscriptionRef' type='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='refcon' type='^v'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FNSubscriptionRef*' name='subscription' type='^^{OpaqueFNSubscriptionRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FNSubscribeByPath'>
<arg const='true' declared_type='UInt8*' name='directoryPath' type='*'/>
<arg declared_type='FNSubscriptionUPP' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FNMessage' type='L' type64='I'/>
<arg declared_type='OptionBits' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='FNSubscriptionRef' type='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='refcon' type='^v'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FNSubscriptionRef*' name='subscription' type='^^{OpaqueFNSubscriptionRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FNUnsubscribe'>
<arg declared_type='FNSubscriptionRef' name='subscription' type='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSAllocateFork'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='FSAllocationFlags' name='flags' type='S'/>
<arg declared_type='UInt16' name='positionMode' type='S'/>
<arg declared_type='SInt64' name='positionOffset' type='q'/>
<arg declared_type='UInt64' name='requestCount' type='Q'/>
<arg declared_type='UInt64*' name='actualCount' type='^Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCancelVolumeOperation'>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSCatalogSearch'>
<arg declared_type='FSIterator' name='iterator' type='^{OpaqueFSIterator=}'/>
<arg const='true' declared_type='FSSearchParams*' name='searchCriteria' type='^{FSSearchParams=iII^S^{FSCatalogInfo}^{FSCatalogInfo}}' type64='^{FSSearchParams=iIQ^S^{FSCatalogInfo}^{FSCatalogInfo}}'/>
<arg declared_type='ItemCount' name='maximumObjects' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualObjects' type='^I' type64='^Q'/>
<arg declared_type='Boolean*' name='containerChanged' type='^B'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg declared_type='FSCatalogInfo*' name='catalogInfos' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='FSRef*' name='refs' type='^{FSRef=[80C]}'/>
<arg declared_type='FSSpecPtr' name='specs' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<arg declared_type='HFSUniStr255*' name='names' type='^{HFSUniStr255=S[255S]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCloseFork'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCloseIterator'>
<arg declared_type='FSIterator' name='iterator' type='^{OpaqueFSIterator=}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCompareFSRefs'>
<arg const='true' declared_type='FSRef*' name='ref1' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='ref2' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCopyAliasInfo'>
<arg declared_type='AliasHandle' name='inAlias' type='^^{AliasRecord}'/>
<arg declared_type='HFSUniStr255*' name='targetName' type='^{HFSUniStr255=S[255S]}'/>
<arg declared_type='HFSUniStr255*' name='volumeName' type='^{HFSUniStr255=S[255S]}'/>
<arg declared_type='CFStringRef*' name='pathString' type='^^{__CFString}'/>
<arg declared_type='FSAliasInfoBitmap*' name='whichInfo' type='^I'/>
<arg declared_type='FSAliasInfo*' name='info' type='^{FSAliasInfo={UTCDateTime=SIS}{UTCDateTime=SIS}IIIISSBBBBB}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSCopyDADiskForVolume'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='DADiskRef*' name='disk' type='^^{__DADisk}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSCopyDiskIDForVolume'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='CFStringRef*' name='diskID' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSCopyObjectAsync'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='FSRef*' name='source' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='destDir' type='^{FSRef=[80C]}'/>
<arg declared_type='CFStringRef' name='destName' type='^{__CFString=}'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSFileOperationStatusProcPtr' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSFileOperationRef' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='FSRef*' type='^{FSRef=[80C]}'/>
<arg declared_type='FSFileOperationStage' type='L' type64='I'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFTimeInterval' name='statusChangeInterval' type='d'/>
<arg declared_type='FSFileOperationClientContext*' name='clientContext' type='^{FSFileOperationClientContext=i^v^?^?^?}' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSCopyObjectSync'>
<arg const='true' declared_type='FSRef*' name='source' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='destDir' type='^{FSRef=[80C]}'/>
<arg declared_type='CFStringRef' name='destName' type='^{__CFString=}'/>
<arg declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSCopyURLForVolume'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='CFURLRef*' name='url' type='^^{__CFURL}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSCreateDirectoryUnicode'>
<arg const='true' declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='name' type='^S'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg const='true' declared_type='FSCatalogInfo*' name='catalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<arg declared_type='FSSpecPtr' name='newSpec' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<arg declared_type='UInt32*' name='newDirID' type='^I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCreateFileAndOpenForkUnicode'>
<arg const='true' declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='name' type='^S'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg const='true' declared_type='FSCatalogInfo*' name='catalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<arg declared_type='SInt8' name='permissions' type='c'/>
<arg declared_type='FSIORefNum*' name='forkRefNum' type='^s' type64='^i'/>
<arg declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSCreateFileUnicode'>
<arg const='true' declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='name' type='^S'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg const='true' declared_type='FSCatalogInfo*' name='catalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<arg declared_type='FSSpecPtr' name='newSpec' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCreateFork'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCreateResFile'>
<arg const='true' declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='name' type='^S'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg const='true' declared_type='FSCatalogInfo*' name='catalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<arg declared_type='FSSpecPtr' name='newSpec' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSCreateResourceFile'>
<arg const='true' declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='name' type='^S'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg const='true' declared_type='FSCatalogInfo*' name='catalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<arg declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<arg declared_type='FSSpecPtr' name='newSpec' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCreateResourceFork'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<arg declared_type='UInt32' name='flags' type='L' type64='I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSCreateStringFromHFSUniStr'>
<arg declared_type='CFAllocatorRef' name='alloc' type='^{__CFAllocator=}'/>
<arg const='true' declared_type='HFSUniStr255*' name='uniStr' type='^{HFSUniStr255=S[255S]}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='FSCreateVolumeOperation'>
<arg declared_type='FSVolumeOperation*' name='volumeOp' type='^^{OpaqueFSVolumeOperation}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSDeleteFork'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSDeleteObject'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSDetermineIfRefIsEnclosedByFolder'>
<arg declared_type='FSVolumeRefNum' name='domainOrVRefNum' type='s'/>
<arg declared_type='OSType' name='folderType' type='L' type64='I'/>
<arg const='true' declared_type='FSRef*' name='inRef' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='outResult' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSDisposeVolumeOperation'>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSEjectVolumeAsync'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' name='clientData' type='^v'/>
<arg declared_type='FSVolumeEjectUPP' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFRunLoopRef' name='runloop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runloopMode' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSEjectVolumeSync'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='pid_t*' name='dissenter' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSExchangeObjects'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='destRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSFileOperationCancel'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileOperationCopyStatus'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg declared_type='FSRef*' name='currentItem' type='^{FSRef=[80C]}'/>
<arg declared_type='FSFileOperationStage*' name='stage' type='^I'/>
<arg declared_type='OSStatus*' name='error' type='^i'/>
<arg declared_type='CFDictionaryRef*' name='statusDictionary' type='^^{__CFDictionary}'/>
<arg declared_type='void**' name='info' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileOperationCreate'>
<arg declared_type='CFAllocatorRef' name='alloc' type='^{__CFAllocator=}'/>
<retval declared_type='FSFileOperationRef' type='^{__FSFileOperation=}'/>
</function>
<function name='FSFileOperationGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='FSFileOperationScheduleWithRunLoop'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileOperationUnscheduleFromRunLoop'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecurityCopyAccessControlList'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='acl_t*' name='accessControlList' type='^^{_acl}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecurityCreate'>
<arg declared_type='CFAllocatorRef' name='alloc' type='^{__CFAllocator=}'/>
<retval declared_type='FSFileSecurityRef' type='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecurityCreateWithFSPermissionInfo'>
<arg declared_type='CFAllocatorRef' name='alloc' type='^{__CFAllocator=}'/>
<arg const='true' declared_type='FSPermissionInfo*' name='permissions' type='^{FSPermissionInfo=IICCS^{__FSFileSecurity}}'/>
<retval declared_type='FSFileSecurityRef' type='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecurityGetGroup'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='UInt32*' name='group' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecurityGetGroupUUID'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='CFUUIDBytes*' name='group' type='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecurityGetMode'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='UInt16*' name='mode' type='^S'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecurityGetOwner'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='UInt32*' name='owner' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecurityGetOwnerUUID'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='CFUUIDBytes*' name='owner' type='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecurityGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='FSFileSecurityRefCreateCopy'>
<arg declared_type='CFAllocatorRef' name='alloc' type='^{__CFAllocator=}'/>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<retval declared_type='FSFileSecurityRef' type='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecuritySetAccessControlList'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='acl_t' name='accessControlList' type='^{_acl=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecuritySetGroup'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='UInt32' name='group' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecuritySetGroupUUID'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg const='true' declared_type='CFUUIDBytes*' name='group' type='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecuritySetMode'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='UInt16' name='mode' type='S'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecuritySetOwner'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg declared_type='UInt32' name='owner' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFileSecuritySetOwnerUUID'>
<arg declared_type='FSFileSecurityRef' name='fileSec' type='^{__FSFileSecurity=}'/>
<arg const='true' declared_type='CFUUIDBytes*' name='owner' type='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFindFolder'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='OSType' name='folderType' type='L' type64='I'/>
<arg declared_type='Boolean' name='createFolder' type='B'/>
<arg declared_type='FSRef*' name='foundRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSFlushFork'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSFlushVolume'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSFollowFinderAlias'>
<arg declared_type='FSRef*' name='fromFile' type='^{FSRef=[80C]}'/>
<arg declared_type='AliasHandle' name='alias' type='^^{AliasRecord}'/>
<arg declared_type='Boolean' name='logon' type='B'/>
<arg declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='wasChanged' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetAsyncEjectStatus'>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='FSEjectStatus*' name='status' type='^I'/>
<arg declared_type='OSStatus*' name='volumeOpStatus' type='^i'/>
<arg declared_type='FSVolumeRefNum*' name='volumeRefNum' type='^s'/>
<arg declared_type='pid_t*' name='dissenter' type='^i'/>
<arg declared_type='void**' name='clientData' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetAsyncMountStatus'>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='FSMountStatus*' name='status' type='^I'/>
<arg declared_type='OSStatus*' name='volumeOpStatus' type='^i'/>
<arg declared_type='FSVolumeRefNum*' name='mountedVolumeRefNum' type='^s'/>
<arg declared_type='void**' name='clientData' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetAsyncUnmountStatus'>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='FSUnmountStatus*' name='status' type='^I'/>
<arg declared_type='OSStatus*' name='volumeOpStatus' type='^i'/>
<arg declared_type='FSVolumeRefNum*' name='volumeRefNum' type='^s'/>
<arg declared_type='pid_t*' name='dissenter' type='^i'/>
<arg declared_type='void**' name='clientData' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetCatalogInfo'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg declared_type='FSCatalogInfo*' name='catalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='HFSUniStr255*' name='outName' type='^{HFSUniStr255=S[255S]}'/>
<arg declared_type='FSSpecPtr' name='fsSpec' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<arg declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetCatalogInfoBulk'>
<arg declared_type='FSIterator' name='iterator' type='^{OpaqueFSIterator=}'/>
<arg declared_type='ItemCount' name='maximumObjects' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualObjects' type='^I' type64='^Q'/>
<arg declared_type='Boolean*' name='containerChanged' type='^B'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg declared_type='FSCatalogInfo*' name='catalogInfos' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='FSRef*' name='refs' type='^{FSRef=[80C]}'/>
<arg declared_type='FSSpecPtr' name='specs' type='^{FSSpec=si[64C]}' type64='^{FSSpec=[70C]}'/>
<arg declared_type='HFSUniStr255*' name='names' type='^{HFSUniStr255=S[255S]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetDataForkName'>
<arg declared_type='HFSUniStr255*' name='dataForkName' type='^{HFSUniStr255=S[255S]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetForkCBInfo'>
<arg declared_type='FSIORefNum' name='desiredRefNum' type='s' type64='i'/>
<arg declared_type='FSVolumeRefNum' name='volume' type='s'/>
<arg declared_type='short*' name='iterator' type='^s'/>
<arg declared_type='FSIORefNum*' name='actualRefNum' type='^s' type64='^i'/>
<arg declared_type='FSForkInfo*' name='forkInfo' type='^{FSForkInfo=CcsIIIQQQQ}'/>
<arg declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='HFSUniStr255*' name='outForkName' type='^{HFSUniStr255=S[255S]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetForkPosition'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='SInt64*' name='position' type='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetForkSize'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='SInt64*' name='forkSize' type='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetHFSUniStrFromString'>
<arg declared_type='CFStringRef' name='theString' type='^{__CFString=}'/>
<arg declared_type='HFSUniStr255*' name='uniStr' type='^{HFSUniStr255=S[255S]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetResourceForkName'>
<arg declared_type='HFSUniStr255*' name='resourceForkName' type='^{HFSUniStr255=S[255S]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetTemporaryDirectoryForReplaceObject'>
<arg const='true' declared_type='FSRef*' name='originalObject' type='^{FSRef=[80C]}'/>
<arg declared_type='FSRef*' name='temporaryDirectory' type='^{FSRef=[80C]}'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetVolumeForDADisk'>
<arg declared_type='DADiskRef' name='disk' type='^{__DADisk=}'/>
<arg declared_type='FSVolumeRefNum*' name='vRefNum' type='^s'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetVolumeForDiskID'>
<arg declared_type='CFStringRef' name='diskID' type='^{__CFString=}'/>
<arg declared_type='FSVolumeRefNum*' name='vRefNum' type='^s'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetVolumeInfo'>
<arg declared_type='FSVolumeRefNum' name='volume' type='s'/>
<arg declared_type='ItemCount' name='volumeIndex' type='L' type64='Q'/>
<arg declared_type='FSVolumeRefNum*' name='actualVolume' type='^s'/>
<arg declared_type='FSVolumeInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg declared_type='FSVolumeInfo*' name='info' type='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSs}' type64='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSi}'/>
<arg declared_type='HFSUniStr255*' name='volumeName' type='^{HFSUniStr255=S[255S]}'/>
<arg declared_type='FSRef*' name='rootDirectory' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSGetVolumeMountInfo'>
<arg declared_type='FSVolumeRefNum' name='volume' type='s'/>
<arg declared_type='BytePtr' name='buffer' type='*'/>
<arg declared_type='ByteCount' name='bufferSize' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='actualSize' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetVolumeMountInfoSize'>
<arg declared_type='FSVolumeRefNum' name='volume' type='s'/>
<arg declared_type='ByteCount*' name='size' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSGetVolumeParms'>
<arg declared_type='FSVolumeRefNum' name='volume' type='s'/>
<arg declared_type='GetVolParmsInfoBuffer*' name='buffer' type='^{GetVolParmsInfoBuffer=si^*iisi^vI}' type64='^{GetVolParmsInfoBuffer=si^*iisi^vQ}'/>
<arg declared_type='ByteCount' name='bufferSize' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSIsAliasFile'>
<arg const='true' declared_type='FSRef*' name='fileRef' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='aliasFileFlag' type='^B'/>
<arg declared_type='Boolean*' name='folderFlag' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSIsFSRefValid'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='FSIterateForks'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='CatPositionRec*' name='forkIterator' type='^{CatPositionRec=i[6s]}'/>
<arg declared_type='HFSUniStr255*' name='forkName' type='^{HFSUniStr255=S[255S]}'/>
<arg declared_type='SInt64*' name='forkSize' type='^q'/>
<arg declared_type='UInt64*' name='forkPhysicalSize' type='^Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSLockRange'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='UInt16' name='positionMode' type='S'/>
<arg declared_type='SInt64' name='positionOffset' type='q'/>
<arg declared_type='UInt64' name='requestCount' type='Q'/>
<arg declared_type='UInt64*' name='rangeStart' type='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMakeFSRefUnicode'>
<arg const='true' declared_type='FSRef*' name='parentRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='name' type='^S'/>
<arg declared_type='TextEncoding' name='textEncodingHint' type='L' type64='I'/>
<arg declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSMatchAliasBulk'>
<arg const='true' declared_type='FSRef*' name='fromFile' type='^{FSRef=[80C]}'/>
<arg declared_type='unsigned long' name='rulesMask' type='L' type64='Q'/>
<arg declared_type='AliasHandle' name='inAlias' type='^^{AliasRecord}'/>
<arg declared_type='short*' name='aliasCount' type='^s'/>
<arg declared_type='FSRef*' name='aliasList' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='needsUpdate' type='^B'/>
<arg declared_type='FSAliasFilterProcPtr' function_pointer='true' name='aliasFilter' type='^?'>
<arg const='true' declared_type='FSRef*' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' type='^B'/>
<arg declared_type='Ptr' type='*'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg declared_type='void*' name='yourDataPtr' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMountLocalVolumeAsync'>
<arg declared_type='CFStringRef' name='diskID' type='^{__CFString=}'/>
<arg declared_type='CFURLRef' name='mountDir' type='^{__CFURL=}'/>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' name='clientData' type='^v'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSVolumeMountUPP' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFRunLoopRef' name='runloop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runloopMode' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMountLocalVolumeSync'>
<arg declared_type='CFStringRef' name='diskID' type='^{__CFString=}'/>
<arg declared_type='CFURLRef' name='mountDir' type='^{__CFURL=}'/>
<arg declared_type='FSVolumeRefNum*' name='mountedVolumeRefNum' type='^s'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMountServerVolumeAsync'>
<arg declared_type='CFURLRef' name='url' type='^{__CFURL=}'/>
<arg declared_type='CFURLRef' name='mountDir' type='^{__CFURL=}'/>
<arg declared_type='CFStringRef' name='user' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='password' type='^{__CFString=}'/>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' name='clientData' type='^v'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSVolumeMountUPP' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFRunLoopRef' name='runloop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runloopMode' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMountServerVolumeSync'>
<arg declared_type='CFURLRef' name='url' type='^{__CFURL=}'/>
<arg declared_type='CFURLRef' name='mountDir' type='^{__CFURL=}'/>
<arg declared_type='CFStringRef' name='user' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='password' type='^{__CFString=}'/>
<arg declared_type='FSVolumeRefNum*' name='mountedVolumeRefNum' type='^s'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMoveObject'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='destDirectory' type='^{FSRef=[80C]}'/>
<arg declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSMoveObjectAsync'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='FSRef*' name='source' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='destDir' type='^{FSRef=[80C]}'/>
<arg declared_type='CFStringRef' name='destName' type='^{__CFString=}'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSFileOperationStatusProcPtr' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSFileOperationRef' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='FSRef*' type='^{FSRef=[80C]}'/>
<arg declared_type='FSFileOperationStage' type='L' type64='I'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFTimeInterval' name='statusChangeInterval' type='d'/>
<arg declared_type='FSFileOperationClientContext*' name='clientContext' type='^{FSFileOperationClientContext=i^v^?^?^?}' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMoveObjectSync'>
<arg const='true' declared_type='FSRef*' name='source' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='destDir' type='^{FSRef=[80C]}'/>
<arg declared_type='CFStringRef' name='destName' type='^{__CFString=}'/>
<arg declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMoveObjectToTrashAsync'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='FSRef*' name='source' type='^{FSRef=[80C]}'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSFileOperationStatusProcPtr' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSFileOperationRef' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='FSRef*' type='^{FSRef=[80C]}'/>
<arg declared_type='FSFileOperationStage' type='L' type64='I'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFTimeInterval' name='statusChangeInterval' type='d'/>
<arg declared_type='FSFileOperationClientContext*' name='clientContext' type='^{FSFileOperationClientContext=i^v^?^?^?}' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSMoveObjectToTrashSync'>
<arg const='true' declared_type='FSRef*' name='source' type='^{FSRef=[80C]}'/>
<arg declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSNewAlias'>
<arg const='true' declared_type='FSRef*' name='fromFile' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='AliasHandle*' name='inAlias' type='^^^{AliasRecord}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSNewAliasFromPath'>
<arg const='true' declared_type='char*' name='fromFilePath' type='*'/>
<arg const='true' declared_type='char*' name='targetPath' type='*'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='AliasHandle*' name='inAlias' type='^^^{AliasRecord}'/>
<arg declared_type='Boolean*' name='isDirectory' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSNewAliasMinimal'>
<arg const='true' declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='AliasHandle*' name='inAlias' type='^^^{AliasRecord}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSNewAliasMinimalUnicode'>
<arg const='true' declared_type='FSRef*' name='targetParentRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='targetNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='targetName' type='^S'/>
<arg declared_type='AliasHandle*' name='inAlias' type='^^^{AliasRecord}'/>
<arg declared_type='Boolean*' name='isDirectory' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSNewAliasUnicode'>
<arg const='true' declared_type='FSRef*' name='fromFile' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='targetParentRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='targetNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='targetName' type='^S'/>
<arg declared_type='AliasHandle*' name='inAlias' type='^^^{AliasRecord}'/>
<arg declared_type='Boolean*' name='isDirectory' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSOpenFork'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<arg declared_type='SInt8' name='permissions' type='c'/>
<arg declared_type='FSIORefNum*' name='forkRefNum' type='^s' type64='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSOpenIterator'>
<arg const='true' declared_type='FSRef*' name='container' type='^{FSRef=[80C]}'/>
<arg declared_type='FSIteratorFlags' name='iteratorFlags' type='L' type64='I'/>
<arg declared_type='FSIterator*' name='iterator' type='^^{OpaqueFSIterator}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSOpenOrphanResFile'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='SignedByte' name='permission' type='c'/>
<arg declared_type='ResFileRefNum*' name='refNum' type='^s' type64='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSOpenResFile'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='SInt8' name='permission' type='c'/>
<retval declared_type='ResFileRefNum' type='s' type64='i'/>
</function>
<function name='FSOpenResourceFile'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='forkNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='forkName' type='^S'/>
<arg declared_type='SInt8' name='permissions' type='c'/>
<arg declared_type='ResFileRefNum*' name='refNum' type='^s' type64='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSPathCopyObjectAsync'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='char*' name='sourcePath' type='*'/>
<arg const='true' declared_type='char*' name='destDirPath' type='*'/>
<arg declared_type='CFStringRef' name='destName' type='^{__CFString=}'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSPathFileOperationStatusProcPtr' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSFileOperationRef' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='FSFileOperationStage' type='L' type64='I'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFTimeInterval' name='statusChangeInterval' type='d'/>
<arg declared_type='FSFileOperationClientContext*' name='clientContext' type='^{FSFileOperationClientContext=i^v^?^?^?}' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathCopyObjectSync'>
<arg const='true' declared_type='char*' name='sourcePath' type='*'/>
<arg const='true' declared_type='char*' name='destDirPath' type='*'/>
<arg declared_type='CFStringRef' name='destName' type='^{__CFString=}'/>
<arg declared_type='char**' name='targetPath' type='^*'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathFileOperationCopyStatus'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg declared_type='char**' name='currentItem' type='^*'/>
<arg declared_type='FSFileOperationStage*' name='stage' type='^I'/>
<arg declared_type='OSStatus*' name='error' type='^i'/>
<arg declared_type='CFDictionaryRef*' name='statusDictionary' type='^^{__CFDictionary}'/>
<arg declared_type='void**' name='info' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathGetTemporaryDirectoryForReplaceObject'>
<arg const='true' declared_type='char*' name='originalObjectPath' type='*'/>
<arg declared_type='char*' name='temporaryDirectoryPath' type='*'/>
<arg declared_type='UInt32' name='maxPathSize' type='L' type64='I'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathMakeRef'>
<arg const='true' declared_type='UInt8*' name='path' type='*'/>
<arg declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='isDirectory' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathMakeRefWithOptions'>
<arg const='true' declared_type='UInt8*' name='path' type='*'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<arg declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='isDirectory' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathMoveObjectAsync'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='char*' name='sourcePath' type='*'/>
<arg const='true' declared_type='char*' name='destDirPath' type='*'/>
<arg declared_type='CFStringRef' name='destName' type='^{__CFString=}'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSPathFileOperationStatusProcPtr' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSFileOperationRef' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='FSFileOperationStage' type='L' type64='I'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFTimeInterval' name='statusChangeInterval' type='d'/>
<arg declared_type='FSFileOperationClientContext*' name='clientContext' type='^{FSFileOperationClientContext=i^v^?^?^?}' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathMoveObjectSync'>
<arg const='true' declared_type='char*' name='sourcePath' type='*'/>
<arg const='true' declared_type='char*' name='destDirPath' type='*'/>
<arg declared_type='CFStringRef' name='destName' type='^{__CFString=}'/>
<arg declared_type='char**' name='targetPath' type='^*'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathMoveObjectToTrashAsync'>
<arg declared_type='FSFileOperationRef' name='fileOp' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='char*' name='sourcePath' type='*'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSPathFileOperationStatusProcPtr' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSFileOperationRef' type='^{__FSFileOperation=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='FSFileOperationStage' type='L' type64='I'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFTimeInterval' name='statusChangeInterval' type='d'/>
<arg declared_type='FSFileOperationClientContext*' name='clientContext' type='^{FSFileOperationClientContext=i^v^?^?^?}' type64='^{FSFileOperationClientContext=q^v^?^?^?}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathMoveObjectToTrashSync'>
<arg const='true' declared_type='char*' name='sourcePath' type='*'/>
<arg declared_type='char**' name='targetPath' type='^*'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSPathReplaceObject'>
<arg const='true' declared_type='char*' name='originalObjectPath' type='*'/>
<arg const='true' declared_type='char*' name='replacementObjectPath' type='*'/>
<arg declared_type='CFStringRef' name='newName' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='temporaryName' type='^{__CFString=}'/>
<arg const='true' declared_type='char*' name='temporaryDirectoryPath' type='*'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSReadFork'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='UInt16' name='positionMode' type='S'/>
<arg declared_type='SInt64' name='positionOffset' type='q'/>
<arg declared_type='ByteCount' name='requestCount' type='L' type64='Q'/>
<arg declared_type='void*' name='buffer' type='^v'/>
<arg declared_type='ByteCount*' name='actualCount' type='^I' type64='^Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSRefMakePath'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='UInt8*' name='path' type='*'/>
<arg declared_type='UInt32' name='pathBufferSize' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSRenameUnicode'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='nameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='name' type='^S'/>
<arg declared_type='TextEncoding' name='textEncodingHint' type='L' type64='I'/>
<arg declared_type='FSRef*' name='newRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSReplaceObject'>
<arg const='true' declared_type='FSRef*' name='originalObject' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='replacementObject' type='^{FSRef=[80C]}'/>
<arg declared_type='CFStringRef' name='newName' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='temporaryName' type='^{__CFString=}'/>
<arg const='true' declared_type='FSRef*' name='temporaryDirectory' type='^{FSRef=[80C]}'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSRef*' name='resultObject' type='^{FSRef=[80C]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSResolveAlias'>
<arg const='true' declared_type='FSRef*' name='fromFile' type='^{FSRef=[80C]}'/>
<arg declared_type='AliasHandle' name='alias' type='^^{AliasRecord}'/>
<arg declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='wasChanged' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSResolveAliasFile'>
<arg declared_type='FSRef*' name='theRef' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean' name='resolveAliasChains' type='B'/>
<arg declared_type='Boolean*' name='targetIsFolder' type='^B'/>
<arg declared_type='Boolean*' name='wasAliased' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSResolveAliasFileWithMountFlags'>
<arg declared_type='FSRef*' name='theRef' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean' name='resolveAliasChains' type='B'/>
<arg declared_type='Boolean*' name='targetIsFolder' type='^B'/>
<arg declared_type='Boolean*' name='wasAliased' type='^B'/>
<arg declared_type='unsigned long' name='mountFlags' type='L' type64='Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSResolveAliasWithMountFlags'>
<arg const='true' declared_type='FSRef*' name='fromFile' type='^{FSRef=[80C]}'/>
<arg declared_type='AliasHandle' name='inAlias' type='^^{AliasRecord}'/>
<arg declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='wasChanged' type='^B'/>
<arg declared_type='unsigned long' name='mountFlags' type='L' type64='Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSResolveNodeID'>
<arg declared_type='FSVolumeRefNum' name='volume' type='s'/>
<arg declared_type='UInt32' name='nodeID' type='L' type64='I'/>
<arg declared_type='FSRefPtr' name='newRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSResourceFileAlreadyOpen'>
<arg const='true' declared_type='FSRef*' name='resourceFileRef' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean*' name='inChain' type='^B'/>
<arg declared_type='ResFileRefNum*' name='refNum' type='^s' type64='^i'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='FSSetCatalogInfo'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='FSCatalogInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg const='true' declared_type='FSCatalogInfo*' name='catalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSSetForkPosition'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='UInt16' name='positionMode' type='S'/>
<arg declared_type='SInt64' name='positionOffset' type='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSSetForkSize'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='UInt16' name='positionMode' type='S'/>
<arg declared_type='SInt64' name='positionOffset' type='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSSetVolumeInfo'>
<arg declared_type='FSVolumeRefNum' name='volume' type='s'/>
<arg declared_type='FSVolumeInfoBitmap' name='whichInfo' type='L' type64='I'/>
<arg const='true' declared_type='FSVolumeInfo*' name='info' type='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSs}' type64='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSi}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSUnlinkObject'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSUnlockRange'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='UInt16' name='positionMode' type='S'/>
<arg declared_type='SInt64' name='positionOffset' type='q'/>
<arg declared_type='UInt64' name='requestCount' type='Q'/>
<arg declared_type='UInt64*' name='rangeStart' type='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSUnmountVolumeAsync'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' name='clientData' type='^v'/>
<arg declared_type='FSVolumeUnmountUPP' function_pointer='true' name='callback' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='CFRunLoopRef' name='runloop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runloopMode' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSUnmountVolumeSync'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='pid_t*' name='dissenter' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSUpdateAlias'>
<arg const='true' declared_type='FSRef*' name='fromFile' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='target' type='^{FSRef=[80C]}'/>
<arg declared_type='AliasHandle' name='alias' type='^^{AliasRecord}'/>
<arg declared_type='Boolean*' name='wasChanged' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FSVolumeMount'>
<arg declared_type='BytePtr' name='buffer' type='*'/>
<arg declared_type='FSVolumeRefNum*' name='mountedVolume' type='^s'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FSWriteFork'>
<arg declared_type='FSIORefNum' name='forkRefNum' type='s' type64='i'/>
<arg declared_type='UInt16' name='positionMode' type='S'/>
<arg declared_type='SInt64' name='positionOffset' type='q'/>
<arg declared_type='ByteCount' name='requestCount' type='L' type64='Q'/>
<arg const='true' declared_type='void*' name='buffer' type='^v'/>
<arg declared_type='ByteCount*' name='actualCount' type='^I' type64='^Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FindFolder'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='OSType' name='folderType' type='L' type64='I'/>
<arg declared_type='Boolean' name='createFolder' type='B'/>
<arg declared_type='FSVolumeRefNum*' name='foundVRefNum' type='^s'/>
<arg declared_type='SInt32*' name='foundDirID' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FindNextComponent'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='ComponentDescription*' name='looking' type='^{ComponentDescription=IIIII}'/>
<retval declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='Fix2Frac'>
<arg declared_type='Fixed' name='x' type='l' type64='i'/>
<retval declared_type='Fract' type='l' type64='i'/>
</function>
<function name='Fix2Long'>
<arg declared_type='Fixed' name='x' type='l' type64='i'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='Fix2X'>
<arg declared_type='Fixed' name='x' type='l' type64='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='FixATan2'>
<arg declared_type='SInt32' name='x' type='l' type64='i'/>
<arg declared_type='SInt32' name='y' type='l' type64='i'/>
<retval declared_type='Fixed' type='l' type64='i'/>
</function>
<function name='FixDiv'>
<arg declared_type='Fixed' name='x' type='l' type64='i'/>
<arg declared_type='Fixed' name='y' type='l' type64='i'/>
<retval declared_type='Fixed' type='l' type64='i'/>
</function>
<function name='FixMul'>
<arg declared_type='Fixed' name='a' type='l' type64='i'/>
<arg declared_type='Fixed' name='b' type='l' type64='i'/>
<retval declared_type='Fixed' type='l' type64='i'/>
</function>
<function name='FixRatio'>
<arg declared_type='short' name='numer' type='s'/>
<arg declared_type='short' name='denom' type='s'/>
<retval declared_type='Fixed' type='l' type64='i'/>
</function>
<function name='FixRound'>
<arg declared_type='Fixed' name='x' type='l' type64='i'/>
<retval declared_type='short' type='s'/>
</function>
<function name='FlattenCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionFlattenUPP' function_pointer='true' name='flattenProc' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='void*' name='refCon' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FlattenCollectionToHdl'>
<arg declared_type='Collection' name='aCollection' type='^{OpaqueCollection=}'/>
<arg declared_type='Handle' name='flattened' type='^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='FlattenPartialCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionFlattenUPP' function_pointer='true' name='flattenProc' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='void*' name='refCon' type='^v'/>
<arg declared_type='SInt32' name='whichAttributes' type='l' type64='i'/>
<arg declared_type='SInt32' name='matchingAttributes' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='Frac2Fix'>
<arg declared_type='Fract' name='x' type='l' type64='i'/>
<retval declared_type='Fixed' type='l' type64='i'/>
</function>
<function name='Frac2X'>
<arg declared_type='Fract' name='x' type='l' type64='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='FracCos'>
<arg declared_type='Fixed' name='x' type='l' type64='i'/>
<retval declared_type='Fract' type='l' type64='i'/>
</function>
<function name='FracDiv'>
<arg declared_type='Fract' name='x' type='l' type64='i'/>
<arg declared_type='Fract' name='y' type='l' type64='i'/>
<retval declared_type='Fract' type='l' type64='i'/>
</function>
<function name='FracMul'>
<arg declared_type='Fract' name='x' type='l' type64='i'/>
<arg declared_type='Fract' name='y' type='l' type64='i'/>
<retval declared_type='Fract' type='l' type64='i'/>
</function>
<function name='FracSin'>
<arg declared_type='Fixed' name='x' type='l' type64='i'/>
<retval declared_type='Fract' type='l' type64='i'/>
</function>
<function name='FracSqrt'>
<arg declared_type='Fract' name='x' type='l' type64='i'/>
<retval declared_type='Fract' type='l' type64='i'/>
</function>
<function name='Gestalt'>
<arg declared_type='OSType' name='selector' type='L' type64='I'/>
<arg declared_type='SInt32*' name='response' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='Get1IndResource'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<arg declared_type='ResourceIndex' name='itemIndex' type='s'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='Get1IndType'>
<arg declared_type='ResType*' name='theType' type='^I'/>
<arg declared_type='ResourceIndex' name='itemIndex' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Get1NamedResource'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<arg declared_type='ConstStr255Param' name='name' type='*'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='Get1Resource'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<arg declared_type='ResID' name='theID' type='s'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='GetAliasSize'>
<arg declared_type='AliasHandle' name='alias' type='^^{AliasRecord}'/>
<retval declared_type='Size' type='l' type64='q'/>
</function>
<function name='GetAliasSizeFromPtr'>
<arg const='true' declared_type='AliasRecord*' name='alias' type='^{AliasRecord=[6C]}'/>
<retval declared_type='Size' type='l' type64='q'/>
</function>
<function name='GetAliasUserType'>
<arg declared_type='AliasHandle' name='alias' type='^^{AliasRecord}'/>
<retval declared_type='OSType' type='L' type64='I'/>
</function>
<function name='GetAliasUserTypeFromPtr'>
<arg const='true' declared_type='AliasRecord*' name='alias' type='^{AliasRecord=[6C]}'/>
<retval declared_type='OSType' type='L' type64='I'/>
</function>
<function name='GetCollectionDefaultAttributes'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='GetCollectionExceptionProc'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='CollectionExceptionUPP' function_pointer='true' type='^?'>
<arg declared_type='Collection' type='^{OpaqueCollection=}'/>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='GetCollectionItem'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='id' type='l' type64='i'/>
<arg declared_type='SInt32*' name='itemSize' type='^i'/>
<arg declared_type='void*' name='itemData' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetCollectionItemHdl'>
<arg declared_type='Collection' name='aCollection' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='id' type='l' type64='i'/>
<arg declared_type='Handle' name='itemData' type='^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetCollectionItemInfo'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='id' type='l' type64='i'/>
<arg declared_type='SInt32*' name='itemIndex' type='^i'/>
<arg declared_type='SInt32*' name='itemSize' type='^i'/>
<arg declared_type='SInt32*' name='attributes' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetCollectionRetainCount'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='ItemCount' type='L' type64='Q'/>
</function>
<function name='GetComponentIndString'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='unsigned char*' name='theString' type='*'/>
<arg declared_type='SInt16' name='strListID' type='s'/>
<arg declared_type='SInt16' name='index' type='s'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetComponentInfo'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='ComponentDescription*' name='cd' type='^{ComponentDescription=IIIII}'/>
<arg declared_type='Handle' name='componentName' type='^*'/>
<arg declared_type='Handle' name='componentInfo' type='^*'/>
<arg declared_type='Handle' name='componentIcon' type='^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetComponentInstanceError'>
<arg declared_type='ComponentInstance' name='aComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetComponentInstanceStorage'>
<arg declared_type='ComponentInstance' name='aComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='GetComponentListModSeed'>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='GetComponentPublicIndString'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='unsigned char*' name='theString' type='*'/>
<arg declared_type='SInt16' name='strListID' type='s'/>
<arg declared_type='SInt16' name='index' type='s'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetComponentPublicResource'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='OSType' name='resourceType' type='L' type64='I'/>
<arg declared_type='SInt16' name='resourceID' type='s'/>
<arg declared_type='Handle*' name='theResource' type='^^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetComponentPublicResourceList'>
<arg declared_type='OSType' name='resourceType' type='L' type64='I'/>
<arg declared_type='SInt16' name='resourceID' type='s'/>
<arg declared_type='SInt32' name='flags' type='l' type64='i'/>
<arg declared_type='ComponentDescription*' name='cd' type='^{ComponentDescription=IIIII}'/>
<arg declared_type='GetMissingComponentResourceUPP' function_pointer='true' name='missingProc' type='^?'>
<arg declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt16' type='s'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='Handle*' type='^^*'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='void*' name='refCon' type='^v'/>
<arg declared_type='void*' name='atomContainerPtr' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetComponentRefcon'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='GetComponentResource'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='OSType' name='resType' type='L' type64='I'/>
<arg declared_type='SInt16' name='resID' type='s'/>
<arg declared_type='Handle*' name='theResource' type='^^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetComponentTypeModSeed'>
<arg declared_type='OSType' name='componentType' type='L' type64='I'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='GetCurrentThread'>
<arg declared_type='ThreadID*' name='currentThreadID' type='^I' type64='^Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetDebugComponentInfo'>
<arg declared_type='UInt32' name='itemIndex' type='L' type64='I'/>
<arg declared_type='OSType*' name='componentSignature' type='^I'/>
<arg declared_type='unsigned char*' name='componentName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetDebugOptionInfo'>
<arg declared_type='UInt32' name='itemIndex' type='L' type64='I'/>
<arg declared_type='OSType' name='componentSignature' type='L' type64='I'/>
<arg declared_type='SInt32*' name='optionSelectorNum' type='^i'/>
<arg declared_type='unsigned char*' name='optionName' type='*'/>
<arg declared_type='Boolean*' name='optionSetting' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetDefaultThreadStackSize'>
<arg declared_type='ThreadStyle' name='threadStyle' type='L' type64='I'/>
<arg declared_type='Size*' name='stackSize' type='^i' type64='^q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetFolderNameUnicode'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='OSType' name='foldType' type='L' type64='I'/>
<arg declared_type='FSVolumeRefNum*' name='foundVRefNum' type='^s'/>
<arg declared_type='HFSUniStr255*' name='name' type='^{HFSUniStr255=S[255S]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetFolderTypes'>
<arg declared_type='UInt32' name='requestedTypeCount' type='L' type64='I'/>
<arg declared_type='UInt32*' name='totalTypeCount' type='^I'/>
<arg declared_type='FolderType*' name='theTypes' type='^I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetHandleSize'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='Size' type='l' type64='q'/>
</function>
<function name='GetIndResource'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<arg declared_type='ResourceIndex' name='itemIndex' type='s'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='GetIndType'>
<arg declared_type='ResType*' name='theType' type='^I'/>
<arg declared_type='ResourceIndex' name='itemIndex' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='GetIndexedCollectionItem'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='itemIndex' type='l' type64='i'/>
<arg declared_type='SInt32*' name='itemSize' type='^i'/>
<arg declared_type='void*' name='itemData' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetIndexedCollectionItemHdl'>
<arg declared_type='Collection' name='aCollection' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='itemIndex' type='l' type64='i'/>
<arg declared_type='Handle' name='itemData' type='^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetIndexedCollectionItemInfo'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='itemIndex' type='l' type64='i'/>
<arg declared_type='CollectionTag*' name='tag' type='^I'/>
<arg declared_type='SInt32*' name='id' type='^i'/>
<arg declared_type='SInt32*' name='itemSize' type='^i'/>
<arg declared_type='SInt32*' name='attributes' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetIndexedCollectionTag'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='tagIndex' type='l' type64='i'/>
<arg declared_type='CollectionTag*' name='tag' type='^I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetMacOSStatusCommentString'>
<arg declared_type='OSStatus' name='err' type='l' type64='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='GetMacOSStatusErrorString'>
<arg declared_type='OSStatus' name='err' type='l' type64='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='GetMaxResourceSize'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='GetNamedResource'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<arg declared_type='ConstStr255Param' name='name' type='*'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='GetNewCollection'>
<arg declared_type='SInt16' name='collectionID' type='s'/>
<retval declared_type='Collection' type='^{OpaqueCollection=}'/>
</function>
<function name='GetNextFOND'>
<arg declared_type='Handle' name='fondHandle' type='^*'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='GetNextResourceFile'>
<arg declared_type='ResFileRefNum' name='curRefNum' type='s' type64='i'/>
<arg declared_type='ResFileRefNum*' name='nextRefNum' type='^s' type64='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetPtrSize'>
<arg declared_type='Ptr' name='p' type='*'/>
<retval declared_type='Size' type='l' type64='q'/>
</function>
<function name='GetResAttrs'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='ResAttributes' type='s'/>
</function>
<function name='GetResFileAttrs'>
<arg declared_type='ResFileRefNum' name='refNum' type='s' type64='i'/>
<retval declared_type='ResFileAttributes' type='s'/>
</function>
<function name='GetResInfo'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<arg declared_type='ResID*' name='theID' type='^s'/>
<arg declared_type='ResType*' name='theType' type='^I'/>
<arg declared_type='unsigned char*' name='name' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='GetResource'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<arg declared_type='ResID' name='theID' type='s'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='GetResourceSizeOnDisk'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='GetScriptInfoFromTextEncoding'>
<arg declared_type='TextEncoding' name='iEncoding' type='L' type64='I'/>
<arg declared_type='ScriptCode*' name='oTextScriptID' type='^s'/>
<arg declared_type='LangCode*' name='oTextLanguageID' type='^s'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetScriptManagerVariable'>
<arg declared_type='short' name='selector' type='s'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='GetTaggedCollectionItem'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='whichItem' type='l' type64='i'/>
<arg declared_type='SInt32*' name='itemSize' type='^i'/>
<arg declared_type='void*' name='itemData' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetTaggedCollectionItemInfo'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='whichItem' type='l' type64='i'/>
<arg declared_type='SInt32*' name='id' type='^i'/>
<arg declared_type='SInt32*' name='itemIndex' type='^i'/>
<arg declared_type='SInt32*' name='itemSize' type='^i'/>
<arg declared_type='SInt32*' name='attributes' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetTextEncodingBase'>
<arg declared_type='TextEncoding' name='encoding' type='L' type64='I'/>
<retval declared_type='TextEncodingBase' type='L' type64='I'/>
</function>
<function name='GetTextEncodingFormat'>
<arg declared_type='TextEncoding' name='encoding' type='L' type64='I'/>
<retval declared_type='TextEncodingFormat' type='L' type64='I'/>
</function>
<function name='GetTextEncodingFromScriptInfo'>
<arg declared_type='ScriptCode' name='iTextScriptID' type='s'/>
<arg declared_type='LangCode' name='iTextLanguageID' type='s'/>
<arg declared_type='RegionCode' name='iTextRegionID' type='s'/>
<arg declared_type='TextEncoding*' name='oEncoding' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetTextEncodingName'>
<arg declared_type='TextEncoding' name='iEncoding' type='L' type64='I'/>
<arg declared_type='TextEncodingNameSelector' name='iNamePartSelector' type='L' type64='I'/>
<arg declared_type='RegionCode' name='iPreferredRegion' type='s'/>
<arg declared_type='TextEncoding' name='iPreferredEncoding' type='L' type64='I'/>
<arg declared_type='ByteCount' name='iOutputBufLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oNameLength' type='^I' type64='^Q'/>
<arg declared_type='RegionCode*' name='oActualRegion' type='^s'/>
<arg declared_type='TextEncoding*' name='oActualEncoding' type='^I'/>
<arg declared_type='TextPtr' name='oEncodingName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetTextEncodingVariant'>
<arg declared_type='TextEncoding' name='encoding' type='L' type64='I'/>
<retval declared_type='TextEncodingVariant' type='L' type64='I'/>
</function>
<function name='GetThreadCurrentTaskRef'>
<arg declared_type='ThreadTaskRef*' name='threadTRef' type='^^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetThreadState'>
<arg declared_type='ThreadID' name='threadToGet' type='L' type64='Q'/>
<arg declared_type='ThreadState*' name='threadState' type='^S'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetThreadStateGivenTaskRef'>
<arg declared_type='ThreadTaskRef' name='threadTRef' type='^v'/>
<arg declared_type='ThreadID' name='threadToGet' type='L' type64='Q'/>
<arg declared_type='ThreadState*' name='threadState' type='^S'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetTopResourceFile'>
<arg declared_type='ResFileRefNum*' name='refNum' type='^s' type64='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='HClrRBit'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='HGetState'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='SInt8' type='c'/>
</function>
<function name='HLock'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='HLockHi'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='HSetRBit'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='HSetState'>
<arg declared_type='Handle' name='h' type='^*'/>
<arg declared_type='SInt8' name='flags' type='c'/>
<retval declared_type='void' type='v'/>
</function>
<function name='HUnlock'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='HandAndHand'>
<arg declared_type='Handle' name='hand1' type='^*'/>
<arg declared_type='Handle' name='hand2' type='^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='HandToHand'>
<arg declared_type='Handle*' name='theHndl' type='^^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='HomeResFile'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='ResFileRefNum' type='s' type64='i'/>
</function>
<function name='IdentifyFolder'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='SInt32' name='dirID' type='l' type64='i'/>
<arg declared_type='FolderType*' name='foldType' type='^I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='IncrementAtomic'>
<arg declared_type='SInt32*' name='address' type='^i'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='IncrementAtomic16'>
<arg declared_type='SInt16*' name='address' type='^s'/>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='IncrementAtomic8'>
<arg declared_type='SInt8*' name='address' type='*'/>
<retval declared_type='SInt8' type='c'/>
</function>
<function name='InsTime'>
<arg declared_type='QElemPtr' name='tmTaskPtr' type='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='InsXTime'>
<arg declared_type='QElemPtr' name='tmTaskPtr' type='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='InsertResourceFile'>
<arg declared_type='ResFileRefNum' name='refNum' type='s' type64='i'/>
<arg declared_type='RsrcChainLocation' name='where' type='s'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InstallDebugAssertOutputHandler'>
<arg declared_type='DebugAssertOutputHandlerUPP' function_pointer='true' name='handler' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ConstStr255Param' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InstallExceptionHandler'>
<arg declared_type='ExceptionHandlerTPP' function_pointer='true' name='theHandler' type='^?'>
<arg declared_type='ExceptionInformation*' type='^{ExceptionInformation=I^{MachineInformationIntel}^{RegisterInformationIntel}^{FPUInformationIntel}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel}}' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='ExceptionHandlerTPP' function_pointer='true' type='^?'>
<arg declared_type='ExceptionInformation*' type='^{ExceptionInformation=I^{MachineInformationIntel}^{RegisterInformationIntel}^{FPUInformationIntel}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel}}' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</retval>
</function>
<function name='InstallTimeTask'>
<arg declared_type='QElemPtr' name='tmTaskPtr' type='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InstallXTimeTask'>
<arg declared_type='QElemPtr' name='tmTaskPtr' type='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvalidateFolderDescriptorCache'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='SInt32' name='dirID' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeAVLCompareItemsUPP'>
<arg declared_type='AVLTreePtr' name='tree' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' name='i1' type='^v'/>
<arg const='true' declared_type='void*' name='i2' type='^v'/>
<arg declared_type='AVLNodeType' name='nd_typ' type='S'/>
<arg declared_type='AVLCompareItemsUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='AVLNodeType' type='S'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</arg>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='InvokeAVLDisposeItemUPP'>
<arg declared_type='AVLTreePtr' name='tree' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' name='dataP' type='^v'/>
<arg declared_type='AVLDisposeItemUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeAVLItemSizeUPP'>
<arg declared_type='AVLTreePtr' name='tree' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' name='itemPtr' type='^v'/>
<arg declared_type='AVLItemSizeUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='ByteCount' type='L' type64='Q'/>
</arg>
<retval declared_type='ByteCount' type='L' type64='Q'/>
</function>
<function name='InvokeAVLWalkUPP'>
<arg declared_type='AVLTreePtr' name='tree' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' name='dataPtr' type='^v'/>
<arg declared_type='AVLVisitStage' name='visitStage' type='S'/>
<arg declared_type='AVLNodeType' name='node' type='S'/>
<arg declared_type='UInt32' name='level' type='L' type64='I'/>
<arg declared_type='SInt32' name='balance' type='l' type64='i'/>
<arg declared_type='void*' name='refCon' type='^v'/>
<arg declared_type='AVLWalkUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='AVLVisitStage' type='S'/>
<arg declared_type='AVLNodeType' type='S'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeCollectionExceptionUPP'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='OSErr' name='status' type='s'/>
<arg declared_type='CollectionExceptionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='Collection' type='^{OpaqueCollection=}'/>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeCollectionFlattenUPP'>
<arg declared_type='SInt32' name='size' type='l' type64='i'/>
<arg declared_type='void*' name='data' type='^v'/>
<arg declared_type='void*' name='refCon' type='^v'/>
<arg declared_type='CollectionFlattenUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeComponentMPWorkFunctionUPP'>
<arg declared_type='void*' name='globalRefCon' type='^v'/>
<arg declared_type='ComponentMPWorkFunctionHeaderRecordPtr' name='header' type='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<arg declared_type='ComponentMPWorkFunctionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ComponentMPWorkFunctionHeaderRecordPtr' type='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</arg>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='InvokeComponentRoutineUPP'>
<arg declared_type='ComponentParameters*' name='cp' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='Handle' name='componentStorage' type='^*'/>
<arg declared_type='ComponentRoutineUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ComponentParameters*' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='Handle' type='^*'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</arg>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</function>
<function name='InvokeDebugAssertOutputHandlerUPP'>
<arg declared_type='OSType' name='componentSignature' type='L' type64='I'/>
<arg declared_type='UInt32' name='options' type='L' type64='I'/>
<arg const='true' declared_type='char*' name='assertionString' type='*'/>
<arg const='true' declared_type='char*' name='exceptionLabelString' type='*'/>
<arg const='true' declared_type='char*' name='errorString' type='*'/>
<arg const='true' declared_type='char*' name='fileName' type='*'/>
<arg declared_type='long' name='lineNumber' type='l' type64='q'/>
<arg declared_type='void*' name='value' type='^v'/>
<arg declared_type='ConstStr255Param' name='outputMsg' type='*'/>
<arg declared_type='DebugAssertOutputHandlerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ConstStr255Param' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeDebugComponentCallbackUPP'>
<arg declared_type='SInt32' name='optionSelectorNum' type='l' type64='i'/>
<arg declared_type='UInt32' name='command' type='L' type64='I'/>
<arg declared_type='Boolean*' name='optionSetting' type='^B'/>
<arg declared_type='DebugComponentCallbackUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeDebuggerDisposeThreadUPP'>
<arg declared_type='ThreadID' name='threadDeleted' type='L' type64='Q'/>
<arg declared_type='DebuggerDisposeThreadUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeDebuggerNewThreadUPP'>
<arg declared_type='ThreadID' name='threadCreated' type='L' type64='Q'/>
<arg declared_type='DebuggerNewThreadUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeDebuggerThreadSchedulerUPP'>
<arg declared_type='SchedulerInfoRecPtr' name='schedulerInfo' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<arg declared_type='DebuggerThreadSchedulerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</arg>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</function>
<function name='InvokeDeferredTaskUPP'>
<arg declared_type='long' name='dtParam' type='l' type64='q'/>
<arg declared_type='DeferredTaskUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeExceptionHandlerUPP'>
<arg declared_type='ExceptionInformation*' name='theException' type='^{ExceptionInformation=I^{MachineInformationIntel}^{RegisterInformationIntel}^{FPUInformationIntel}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel}}' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<arg declared_type='ExceptionHandlerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ExceptionInformation*' type='^{ExceptionInformation=I^{MachineInformationIntel}^{RegisterInformationIntel}^{FPUInformationIntel}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel}}' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='InvokeFNSubscriptionUPP'>
<arg declared_type='FNMessage' name='message' type='L' type64='I'/>
<arg declared_type='OptionBits' name='flags' type='L' type64='I'/>
<arg declared_type='void*' name='refcon' type='^v'/>
<arg declared_type='FNSubscriptionRef' name='subscription' type='^{OpaqueFNSubscriptionRef=}'/>
<arg declared_type='FNSubscriptionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='FNMessage' type='L' type64='I'/>
<arg declared_type='OptionBits' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='FNSubscriptionRef' type='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeFSVolumeEjectUPP'>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' name='clientData' type='^v'/>
<arg declared_type='OSStatus' name='err' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' name='volumeRefNum' type='s'/>
<arg declared_type='pid_t' name='dissenter' type='i'/>
<arg declared_type='FSVolumeEjectUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeFSVolumeMountUPP'>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' name='clientData' type='^v'/>
<arg declared_type='OSStatus' name='err' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' name='mountedVolumeRefNum' type='s'/>
<arg declared_type='FSVolumeMountUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeFSVolumeUnmountUPP'>
<arg declared_type='FSVolumeOperation' name='volumeOp' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' name='clientData' type='^v'/>
<arg declared_type='OSStatus' name='err' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' name='volumeRefNum' type='s'/>
<arg declared_type='pid_t' name='dissenter' type='i'/>
<arg declared_type='FSVolumeUnmountUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeFolderManagerNotificationUPP'>
<arg declared_type='OSType' name='message' type='L' type64='I'/>
<arg declared_type='void*' name='arg' type='^v'/>
<arg declared_type='void*' name='userRefCon' type='^v'/>
<arg declared_type='FolderManagerNotificationUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='InvokeGetMissingComponentResourceUPP'>
<arg declared_type='Component' name='c' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='OSType' name='resType' type='L' type64='I'/>
<arg declared_type='SInt16' name='resID' type='s'/>
<arg declared_type='void*' name='refCon' type='^v'/>
<arg declared_type='Handle*' name='resource' type='^^*'/>
<arg declared_type='GetMissingComponentResourceUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt16' type='s'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='Handle*' type='^^*'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeIOCompletionUPP'>
<arg declared_type='ParmBlkPtr' name='paramBlock' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<arg declared_type='IOCompletionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeIndexToUCStringUPP'>
<arg declared_type='UInt32' name='index' type='L' type64='I'/>
<arg declared_type='void*' name='listDataPtr' type='^v'/>
<arg declared_type='void*' name='refcon' type='^v'/>
<arg declared_type='CFStringRef*' name='outString' type='^^{__CFString}'/>
<arg declared_type='UCTypeSelectOptions*' name='tsOptions' type='^S'/>
<arg declared_type='IndexToUCStringUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='CFStringRef*' type='^^{__CFString}'/>
<arg declared_type='UCTypeSelectOptions*' type='^S'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='InvokeResErrUPP'>
<arg declared_type='OSErr' name='thErr' type='s'/>
<arg declared_type='ResErrUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeSelectorFunctionUPP'>
<arg declared_type='OSType' name='selector' type='L' type64='I'/>
<arg declared_type='SInt32*' name='response' type='^i'/>
<arg declared_type='SelectorFunctionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt32*' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeThreadEntryUPP'>
<arg declared_type='void*' name='threadParam' type='^v'/>
<arg declared_type='ThreadEntryUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='voidPtr' type='^v'/>
</arg>
<retval declared_type='voidPtr' type='^v'/>
</function>
<function name='InvokeThreadSchedulerUPP'>
<arg declared_type='SchedulerInfoRecPtr' name='schedulerInfo' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<arg declared_type='ThreadSchedulerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</arg>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</function>
<function name='InvokeThreadSwitchUPP'>
<arg declared_type='ThreadID' name='threadBeingSwitched' type='L' type64='Q'/>
<arg declared_type='void*' name='switchProcParam' type='^v'/>
<arg declared_type='ThreadSwitchUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeThreadTerminationUPP'>
<arg declared_type='ThreadID' name='threadTerminated' type='L' type64='Q'/>
<arg declared_type='void*' name='terminationProcParam' type='^v'/>
<arg declared_type='ThreadTerminationUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeTimerUPP'>
<arg declared_type='TMTaskPtr' name='tmTaskPtr' type='^{TMTask=^{QElem}s^?lll}' type64='^{TMTask=^{QElem}s^?qqq}'/>
<arg declared_type='TimerUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='TMTaskPtr' type='^{TMTask=^{QElem}s^?lll}' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeUnicodeToTextFallbackUPP'>
<arg declared_type='UniChar*' name='iSrcUniStr' type='^S'/>
<arg declared_type='ByteCount' name='iSrcUniStrLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oSrcConvLen' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' name='oDestStr' type='*'/>
<arg declared_type='ByteCount' name='iDestStrLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oDestConvLen' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' name='iInfoPtr' type='^v'/>
<arg declared_type='ConstUnicodeMappingPtr' name='iUnicodeMappingPtr' type='^{UnicodeMapping=IIi}'/>
<arg declared_type='UnicodeToTextFallbackUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='UniChar*' type='^S'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' type='*'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' type='^v'/>
<arg declared_type='ConstUnicodeMappingPtr' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='IsHandleValid'>
<arg declared_type='Handle' name='h' type='^*'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='IsHeapValid'>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='IsMetric'>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='IsPointerValid'>
<arg declared_type='Ptr' name='p' type='*'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='LMGetApFontID'>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='LMGetBootDrive'>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='LMGetIntlSpec'>
<retval declared_type='Ptr' type='*'/>
</function>
<function name='LMGetMemErr'>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='LMGetResErr'>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='LMGetResLoad'>
<retval declared_type='UInt8' type='C'/>
</function>
<function name='LMGetSysFontSize'>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='LMGetSysMap'>
<retval declared_type='SInt16' type='s'/>
</function>
<function name='LMGetTmpResLoad'>
<retval declared_type='UInt8' type='C'/>
</function>
<function name='LMSetApFontID'>
<arg declared_type='SInt16' name='value' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetBootDrive'>
<arg declared_type='SInt16' name='value' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetIntlSpec'>
<arg declared_type='Ptr' name='value' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetMemErr'>
<arg declared_type='SInt16' name='value' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetResErr'>
<arg declared_type='SInt16' name='value' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetResLoad'>
<arg declared_type='UInt8' name='value' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetSysFontFam'>
<arg declared_type='SInt16' name='value' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetSysFontSize'>
<arg declared_type='SInt16' name='value' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetSysMap'>
<arg declared_type='SInt16' name='value' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LMSetTmpResLoad'>
<arg declared_type='UInt8' name='value' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LoadResource'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LocaleCountNames'>
<arg declared_type='LocaleRef' name='locale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='LocaleOperationVariant' name='opVariant' type='L' type64='I'/>
<arg declared_type='LocaleNameMask' name='nameMask' type='L' type64='I'/>
<arg declared_type='ItemCount*' name='nameCount' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleGetIndName'>
<arg declared_type='LocaleRef' name='locale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='LocaleOperationVariant' name='opVariant' type='L' type64='I'/>
<arg declared_type='LocaleNameMask' name='nameMask' type='L' type64='I'/>
<arg declared_type='ItemCount' name='nameIndex' type='L' type64='Q'/>
<arg declared_type='UniCharCount' name='maxNameLen' type='L' type64='Q'/>
<arg declared_type='UniCharCount*' name='actualNameLen' type='^I' type64='^Q'/>
<arg declared_type='UniChar*' name='displayName' type='^S'/>
<arg declared_type='LocaleRef*' name='displayLocale' type='^^{OpaqueLocaleRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleGetName'>
<arg declared_type='LocaleRef' name='locale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='LocaleOperationVariant' name='opVariant' type='L' type64='I'/>
<arg declared_type='LocaleNameMask' name='nameMask' type='L' type64='I'/>
<arg declared_type='LocaleRef' name='displayLocale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='UniCharCount' name='maxNameLen' type='L' type64='Q'/>
<arg declared_type='UniCharCount*' name='actualNameLen' type='^I' type64='^Q'/>
<arg declared_type='UniChar*' name='displayName' type='^S'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleOperationCountLocales'>
<arg declared_type='LocaleOperationClass' name='opClass' type='L' type64='I'/>
<arg declared_type='ItemCount*' name='localeCount' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleOperationCountNames'>
<arg declared_type='LocaleOperationClass' name='opClass' type='L' type64='I'/>
<arg declared_type='ItemCount*' name='nameCount' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleOperationGetIndName'>
<arg declared_type='LocaleOperationClass' name='opClass' type='L' type64='I'/>
<arg declared_type='ItemCount' name='nameIndex' type='L' type64='Q'/>
<arg declared_type='UniCharCount' name='maxNameLen' type='L' type64='Q'/>
<arg declared_type='UniCharCount*' name='actualNameLen' type='^I' type64='^Q'/>
<arg declared_type='UniChar*' name='displayName' type='^S'/>
<arg declared_type='LocaleRef*' name='displayLocale' type='^^{OpaqueLocaleRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleOperationGetLocales'>
<arg declared_type='LocaleOperationClass' name='opClass' type='L' type64='I'/>
<arg declared_type='ItemCount' name='maxLocaleCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualLocaleCount' type='^I' type64='^Q'/>
<arg declared_type='LocaleAndVariant*' name='localeVariantList' type='^{LocaleAndVariant=^{OpaqueLocaleRef}I}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleOperationGetName'>
<arg declared_type='LocaleOperationClass' name='opClass' type='L' type64='I'/>
<arg declared_type='LocaleRef' name='displayLocale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='UniCharCount' name='maxNameLen' type='L' type64='Q'/>
<arg declared_type='UniCharCount*' name='actualNameLen' type='^I' type64='^Q'/>
<arg declared_type='UniChar*' name='displayName' type='^S'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleRefFromLangOrRegionCode'>
<arg declared_type='LangCode' name='lang' type='s'/>
<arg declared_type='RegionCode' name='region' type='s'/>
<arg declared_type='LocaleRef*' name='locale' type='^^{OpaqueLocaleRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleRefFromLocaleString'>
<arg const='true' declared_type='char*' name='localeString' type='*'/>
<arg declared_type='LocaleRef*' name='locale' type='^^{OpaqueLocaleRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleRefGetPartString'>
<arg declared_type='LocaleRef' name='locale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='LocalePartMask' name='partMask' type='L' type64='I'/>
<arg declared_type='ByteCount' name='maxStringLen' type='L' type64='Q'/>
<arg declared_type='char*' name='partString' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LocaleStringToLangAndRegionCodes'>
<arg const='true' declared_type='char*' name='localeString' type='*'/>
<arg declared_type='LangCode*' name='lang' type='^s'/>
<arg declared_type='RegionCode*' name='region' type='^s'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='Long2Fix'>
<arg declared_type='SInt32' name='x' type='l' type64='i'/>
<retval declared_type='Fixed' type='l' type64='i'/>
</function>
<function name='LongDoubleToSInt64'>
<arg declared_type='long double' name='value' type='D'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='LongDoubleToUInt64'>
<arg declared_type='long double' name='value' type='D'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='MPAllocate'>
<arg declared_type='ByteCount' name='size' type='L' type64='Q'/>
<retval declared_type='LogicalAddress' type='^v'/>
</function>
<function name='MPAllocateAligned'>
<arg declared_type='ByteCount' name='size' type='L' type64='Q'/>
<arg declared_type='UInt8' name='alignment' type='C'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<retval declared_type='LogicalAddress' type='^v'/>
</function>
<function name='MPAllocateTaskStorageIndex'>
<arg declared_type='TaskStorageIndex*' name='taskIndex' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPArmTimer'>
<arg declared_type='MPTimerID' name='timerID' type='^{OpaqueMPTimerID=}'/>
<arg declared_type='AbsoluteTime*' name='expirationTime' type='^{UnsignedWide=II}'/>
<arg declared_type='OptionBits' name='options' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPBlockClear'>
<arg declared_type='LogicalAddress' name='address' type='^v'/>
<arg declared_type='ByteCount' name='size' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MPBlockCopy'>
<arg declared_type='LogicalAddress' name='source' type='^v'/>
<arg declared_type='LogicalAddress' name='destination' type='^v'/>
<arg declared_type='ByteCount' name='size' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MPCancelTimer'>
<arg declared_type='MPTimerID' name='timerID' type='^{OpaqueMPTimerID=}'/>
<arg declared_type='AbsoluteTime*' name='timeRemaining' type='^{UnsignedWide=II}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCauseNotification'>
<arg declared_type='MPNotificationID' name='notificationID' type='^{OpaqueMPNotificationID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCreateCriticalRegion'>
<arg declared_type='MPCriticalRegionID*' name='criticalRegion' type='^^{OpaqueMPCriticalRegionID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCreateEvent'>
<arg declared_type='MPEventID*' name='event' type='^^{OpaqueMPEventID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCreateNotification'>
<arg declared_type='MPNotificationID*' name='notificationID' type='^^{OpaqueMPNotificationID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCreateQueue'>
<arg declared_type='MPQueueID*' name='queue' type='^^{OpaqueMPQueueID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCreateSemaphore'>
<arg declared_type='MPSemaphoreCount' name='maximumValue' type='L' type64='Q'/>
<arg declared_type='MPSemaphoreCount' name='initialValue' type='L' type64='Q'/>
<arg declared_type='MPSemaphoreID*' name='semaphore' type='^^{OpaqueMPSemaphoreID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCreateTask'>
<arg declared_type='TaskProc' function_pointer='true' name='entryPoint' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='void*' name='parameter' type='^v'/>
<arg declared_type='ByteCount' name='stackSize' type='L' type64='Q'/>
<arg declared_type='MPQueueID' name='notifyQueue' type='^{OpaqueMPQueueID=}'/>
<arg declared_type='void*' name='terminationParameter1' type='^v'/>
<arg declared_type='void*' name='terminationParameter2' type='^v'/>
<arg declared_type='MPTaskOptions' name='options' type='L' type64='I'/>
<arg declared_type='MPTaskID*' name='task' type='^^{OpaqueMPTaskID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCreateTimer'>
<arg declared_type='MPTimerID*' name='timerID' type='^^{OpaqueMPTimerID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPCurrentTaskID'>
<retval declared_type='MPTaskID' type='^{OpaqueMPTaskID=}'/>
</function>
<function name='MPDeallocateTaskStorageIndex'>
<arg declared_type='TaskStorageIndex' name='taskIndex' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPDelayUntil'>
<arg declared_type='AbsoluteTime*' name='expirationTime' type='^{UnsignedWide=II}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPDeleteCriticalRegion'>
<arg declared_type='MPCriticalRegionID' name='criticalRegion' type='^{OpaqueMPCriticalRegionID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPDeleteEvent'>
<arg declared_type='MPEventID' name='event' type='^{OpaqueMPEventID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPDeleteNotification'>
<arg declared_type='MPNotificationID' name='notificationID' type='^{OpaqueMPNotificationID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPDeleteQueue'>
<arg declared_type='MPQueueID' name='queue' type='^{OpaqueMPQueueID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPDeleteSemaphore'>
<arg declared_type='MPSemaphoreID' name='semaphore' type='^{OpaqueMPSemaphoreID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPDeleteTimer'>
<arg declared_type='MPTimerID' name='timerID' type='^{OpaqueMPTimerID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPDisposeTaskException'>
<arg declared_type='MPTaskID' name='task' type='^{OpaqueMPTaskID=}'/>
<arg declared_type='OptionBits' name='action' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPEnterCriticalRegion'>
<arg declared_type='MPCriticalRegionID' name='criticalRegion' type='^{OpaqueMPCriticalRegionID=}'/>
<arg declared_type='Duration' name='timeout' type='l' type64='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPExit'>
<arg declared_type='OSStatus' name='status' type='l' type64='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MPExitCriticalRegion'>
<arg declared_type='MPCriticalRegionID' name='criticalRegion' type='^{OpaqueMPCriticalRegionID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPExtractTaskState'>
<arg declared_type='MPTaskID' name='task' type='^{OpaqueMPTaskID=}'/>
<arg declared_type='MPTaskStateKind' name='kind' type='L' type64='I'/>
<arg declared_type='void*' name='info' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPFree'>
<arg declared_type='LogicalAddress' name='object' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MPGetAllocatedBlockSize'>
<arg declared_type='LogicalAddress' name='object' type='^v'/>
<retval declared_type='ByteCount' type='L' type64='Q'/>
</function>
<function name='MPGetNextCpuID'>
<arg declared_type='MPCoherenceID' name='owningCoherenceID' type='^{OpaqueMPCoherenceID=}'/>
<arg declared_type='MPCpuID*' name='cpuID' type='^^{OpaqueMPCpuID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPGetNextTaskID'>
<arg declared_type='MPProcessID' name='owningProcessID' type='^{OpaqueMPProcessID=}'/>
<arg declared_type='MPTaskID*' name='taskID' type='^^{OpaqueMPTaskID}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPGetTaskStorageValue'>
<arg declared_type='TaskStorageIndex' name='taskIndex' type='L' type64='Q'/>
<retval declared_type='TaskStorageValue' type='^v'/>
</function>
<function name='MPModifyNotification'>
<arg declared_type='MPNotificationID' name='notificationID' type='^{OpaqueMPNotificationID=}'/>
<arg declared_type='MPOpaqueID' name='anID' type='^{OpaqueMPOpaqueID=}'/>
<arg declared_type='void*' name='notifyParam1' type='^v'/>
<arg declared_type='void*' name='notifyParam2' type='^v'/>
<arg declared_type='void*' name='notifyParam3' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPModifyNotificationParameters'>
<arg declared_type='MPNotificationID' name='notificationID' type='^{OpaqueMPNotificationID=}'/>
<arg declared_type='MPOpaqueIDClass' name='kind' type='L' type64='I'/>
<arg declared_type='void*' name='notifyParam1' type='^v'/>
<arg declared_type='void*' name='notifyParam2' type='^v'/>
<arg declared_type='void*' name='notifyParam3' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPNotifyQueue'>
<arg declared_type='MPQueueID' name='queue' type='^{OpaqueMPQueueID=}'/>
<arg declared_type='void*' name='param1' type='^v'/>
<arg declared_type='void*' name='param2' type='^v'/>
<arg declared_type='void*' name='param3' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPProcessors'>
<retval declared_type='ItemCount' type='L' type64='Q'/>
</function>
<function name='MPProcessorsScheduled'>
<retval declared_type='ItemCount' type='L' type64='Q'/>
</function>
<function name='MPRegisterDebugger'>
<arg declared_type='MPQueueID' name='queue' type='^{OpaqueMPQueueID=}'/>
<arg declared_type='MPDebuggerLevel' name='level' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPRemoteCall'>
<arg declared_type='MPRemoteProcedure' function_pointer='true' name='remoteProc' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</arg>
<arg declared_type='void*' name='parameter' type='^v'/>
<arg declared_type='MPRemoteContext' name='context' type='C'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='MPRemoteCallCFM'>
<arg declared_type='MPRemoteProcedure' function_pointer='true' name='remoteProc' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</arg>
<arg declared_type='void*' name='parameter' type='^v'/>
<arg declared_type='MPRemoteContext' name='context' type='C'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='MPSetEvent'>
<arg declared_type='MPEventID' name='event' type='^{OpaqueMPEventID=}'/>
<arg declared_type='MPEventFlags' name='flags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPSetExceptionHandler'>
<arg declared_type='MPTaskID' name='task' type='^{OpaqueMPTaskID=}'/>
<arg declared_type='MPQueueID' name='exceptionQ' type='^{OpaqueMPQueueID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPSetQueueReserve'>
<arg declared_type='MPQueueID' name='queue' type='^{OpaqueMPQueueID=}'/>
<arg declared_type='ItemCount' name='count' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPSetTaskState'>
<arg declared_type='MPTaskID' name='task' type='^{OpaqueMPTaskID=}'/>
<arg declared_type='MPTaskStateKind' name='kind' type='L' type64='I'/>
<arg declared_type='void*' name='info' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPSetTaskStorageValue'>
<arg declared_type='TaskStorageIndex' name='taskIndex' type='L' type64='Q'/>
<arg declared_type='TaskStorageValue' name='value' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPSetTaskType'>
<arg declared_type='MPTaskID' name='task' type='^{OpaqueMPTaskID=}'/>
<arg declared_type='OSType' name='taskType' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPSetTaskWeight'>
<arg declared_type='MPTaskID' name='task' type='^{OpaqueMPTaskID=}'/>
<arg declared_type='MPTaskWeight' name='weight' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPSetTimerNotify'>
<arg declared_type='MPTimerID' name='timerID' type='^{OpaqueMPTimerID=}'/>
<arg declared_type='MPOpaqueID' name='anID' type='^{OpaqueMPOpaqueID=}'/>
<arg declared_type='void*' name='notifyParam1' type='^v'/>
<arg declared_type='void*' name='notifyParam2' type='^v'/>
<arg declared_type='void*' name='notifyParam3' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPSignalSemaphore'>
<arg declared_type='MPSemaphoreID' name='semaphore' type='^{OpaqueMPSemaphoreID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPTaskIsPreemptive'>
<arg declared_type='MPTaskID' name='taskID' type='^{OpaqueMPTaskID=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MPTerminateTask'>
<arg declared_type='MPTaskID' name='task' type='^{OpaqueMPTaskID=}'/>
<arg declared_type='OSStatus' name='terminationStatus' type='l' type64='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPThrowException'>
<arg declared_type='MPTaskID' name='task' type='^{OpaqueMPTaskID=}'/>
<arg declared_type='MPExceptionKind' name='kind' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPUnregisterDebugger'>
<arg declared_type='MPQueueID' name='queue' type='^{OpaqueMPQueueID=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPWaitForEvent'>
<arg declared_type='MPEventID' name='event' type='^{OpaqueMPEventID=}'/>
<arg declared_type='MPEventFlags*' name='flags' type='^I'/>
<arg declared_type='Duration' name='timeout' type='l' type64='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPWaitOnQueue'>
<arg declared_type='MPQueueID' name='queue' type='^{OpaqueMPQueueID=}'/>
<arg declared_type='void**' name='param1' type='^^v'/>
<arg declared_type='void**' name='param2' type='^^v'/>
<arg declared_type='void**' name='param3' type='^^v'/>
<arg declared_type='Duration' name='timeout' type='l' type64='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPWaitOnSemaphore'>
<arg declared_type='MPSemaphoreID' name='semaphore' type='^{OpaqueMPSemaphoreID=}'/>
<arg declared_type='Duration' name='timeout' type='l' type64='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MPYield'>
<retval declared_type='void' type='v'/>
</function>
<function name='MemError'>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='Microseconds'>
<arg declared_type='UnsignedWide*' name='microTickCount' type='^{UnsignedWide=II}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='Munger'>
<arg declared_type='Handle' name='h' type='^*'/>
<arg declared_type='long' name='offset' type='l' type64='q'/>
<arg const='true' declared_type='void*' name='ptr1' type='^v'/>
<arg declared_type='long' name='len1' type='l' type64='q'/>
<arg const='true' declared_type='void*' name='ptr2' type='^v'/>
<arg declared_type='long' name='len2' type='l' type64='q'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='NanosecondsToAbsolute'>
<arg declared_type='Nanoseconds' name='nanoseconds' type='{UnsignedWide=II}'/>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='NanosecondsToDuration'>
<arg declared_type='Nanoseconds' name='theNanoseconds' type='{UnsignedWide=II}'/>
<retval declared_type='Duration' type='l' type64='i'/>
</function>
<function name='NearestMacTextEncodings'>
<arg declared_type='TextEncoding' name='generalEncoding' type='L' type64='I'/>
<arg declared_type='TextEncoding*' name='bestMacEncoding' type='^I'/>
<arg declared_type='TextEncoding*' name='alternateMacEncoding' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='NewAVLCompareItemsUPP'>
<arg declared_type='AVLCompareItemsProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='AVLNodeType' type='S'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</arg>
<retval declared_type='AVLCompareItemsUPP' function_pointer='true' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='AVLNodeType' type='S'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</retval>
</function>
<function name='NewAVLDisposeItemUPP'>
<arg declared_type='AVLDisposeItemProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AVLDisposeItemUPP' function_pointer='true' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewAVLItemSizeUPP'>
<arg declared_type='AVLItemSizeProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='ByteCount' type='L' type64='Q'/>
</arg>
<retval declared_type='AVLItemSizeUPP' function_pointer='true' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='ByteCount' type='L' type64='Q'/>
</retval>
</function>
<function name='NewAVLWalkUPP'>
<arg declared_type='AVLWalkProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='AVLVisitStage' type='S'/>
<arg declared_type='AVLNodeType' type='S'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='AVLWalkUPP' function_pointer='true' type='^?'>
<arg declared_type='AVLTreePtr' type='^{AVLTreeStruct=I[8L]}' type64='^{AVLTreeStruct=I[8Q]}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='AVLVisitStage' type='S'/>
<arg declared_type='AVLNodeType' type='S'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewCollection'>
<retval declared_type='Collection' type='^{OpaqueCollection=}'/>
</function>
<function name='NewCollectionExceptionUPP'>
<arg declared_type='CollectionExceptionProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='Collection' type='^{OpaqueCollection=}'/>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='CollectionExceptionUPP' function_pointer='true' type='^?'>
<arg declared_type='Collection' type='^{OpaqueCollection=}'/>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewCollectionFlattenUPP'>
<arg declared_type='CollectionFlattenProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='CollectionFlattenUPP' function_pointer='true' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewComponentFunctionUPP'>
<arg declared_type='ProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<arg declared_type='ProcInfoType' name='procInfo' type='L' type64='Q'/>
<retval declared_type='ComponentFunctionUPP' function_pointer='true' type='^?'>
<retval declared_type='long' type='l' type64='q'/>
</retval>
</function>
<function name='NewComponentMPWorkFunctionUPP'>
<arg declared_type='ComponentMPWorkFunctionProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ComponentMPWorkFunctionHeaderRecordPtr' type='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</arg>
<retval declared_type='ComponentMPWorkFunctionUPP' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ComponentMPWorkFunctionHeaderRecordPtr' type='^{ComponentMPWorkFunctionHeaderRecord=IIISCC}'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</retval>
</function>
<function name='NewComponentRoutineUPP'>
<arg declared_type='ComponentRoutineProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='ComponentParameters*' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='Handle' type='^*'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</arg>
<retval declared_type='ComponentRoutineUPP' function_pointer='true' type='^?'>
<arg declared_type='ComponentParameters*' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='Handle' type='^*'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</retval>
</function>
<function name='NewDebugAssertOutputHandlerUPP'>
<arg declared_type='DebugAssertOutputHandlerProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ConstStr255Param' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='DebugAssertOutputHandlerUPP' function_pointer='true' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='ConstStr255Param' type='*'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewDebugComponent'>
<arg declared_type='OSType' name='componentSignature' type='L' type64='I'/>
<arg declared_type='ConstStr255Param' name='componentName' type='*'/>
<arg declared_type='DebugComponentCallbackUPP' function_pointer='true' name='componentCallback' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='NewDebugComponentCallbackUPP'>
<arg declared_type='DebugComponentCallbackProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='DebugComponentCallbackUPP' function_pointer='true' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='Boolean*' type='^B'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewDebugOption'>
<arg declared_type='OSType' name='componentSignature' type='L' type64='I'/>
<arg declared_type='SInt32' name='optionSelectorNum' type='l' type64='i'/>
<arg declared_type='ConstStr255Param' name='optionName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='NewDebuggerDisposeThreadUPP'>
<arg declared_type='DebuggerDisposeThreadProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='DebuggerDisposeThreadUPP' function_pointer='true' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewDebuggerNewThreadUPP'>
<arg declared_type='DebuggerNewThreadProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='DebuggerNewThreadUPP' function_pointer='true' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewDebuggerThreadSchedulerUPP'>
<arg declared_type='DebuggerThreadSchedulerProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</arg>
<retval declared_type='DebuggerThreadSchedulerUPP' function_pointer='true' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</retval>
</function>
<function name='NewDeferredTaskUPP'>
<arg declared_type='DeferredTaskProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='DeferredTaskUPP' function_pointer='true' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewEmptyHandle'>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='NewExceptionHandlerUPP'>
<arg declared_type='ExceptionHandlerProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='ExceptionInformation*' type='^{ExceptionInformation=I^{MachineInformationIntel}^{RegisterInformationIntel}^{FPUInformationIntel}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel}}' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='ExceptionHandlerUPP' function_pointer='true' type='^?'>
<arg declared_type='ExceptionInformation*' type='^{ExceptionInformation=I^{MachineInformationIntel}^{RegisterInformationIntel}^{FPUInformationIntel}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel}}' type64='^{ExceptionInformation=Q^{MachineInformationIntel64}^{RegisterInformationIntel64}^{FPUInformationIntel64}(ExceptionInfo=^{MemoryExceptionInformation})^{VectorInformationIntel64}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</retval>
</function>
<function name='NewFNSubscriptionUPP'>
<arg declared_type='FNSubscriptionProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='FNMessage' type='L' type64='I'/>
<arg declared_type='OptionBits' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='FNSubscriptionRef' type='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FNSubscriptionUPP' function_pointer='true' type='^?'>
<arg declared_type='FNMessage' type='L' type64='I'/>
<arg declared_type='OptionBits' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='FNSubscriptionRef' type='^{OpaqueFNSubscriptionRef=}'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewFSVolumeEjectUPP'>
<arg declared_type='FSVolumeEjectProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FSVolumeEjectUPP' function_pointer='true' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewFSVolumeMountUPP'>
<arg declared_type='FSVolumeMountProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FSVolumeMountUPP' function_pointer='true' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewFSVolumeUnmountUPP'>
<arg declared_type='FSVolumeUnmountProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='FSVolumeUnmountUPP' function_pointer='true' type='^?'>
<arg declared_type='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='OSStatus' type='l' type64='i'/>
<arg declared_type='FSVolumeRefNum' type='s'/>
<arg declared_type='pid_t' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewFolderManagerNotificationUPP'>
<arg declared_type='FolderManagerNotificationProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='FolderManagerNotificationUPP' function_pointer='true' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</retval>
</function>
<function name='NewGestaltValue'>
<arg declared_type='OSType' name='selector' type='L' type64='I'/>
<arg declared_type='SInt32' name='newValue' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='NewGetMissingComponentResourceUPP'>
<arg declared_type='GetMissingComponentResourceProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt16' type='s'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='Handle*' type='^^*'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='GetMissingComponentResourceUPP' function_pointer='true' type='^?'>
<arg declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt16' type='s'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='Handle*' type='^^*'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewHandle'>
<arg declared_type='Size' name='byteCount' type='l' type64='q'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='NewHandleClear'>
<arg declared_type='Size' name='byteCount' type='l' type64='q'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='NewIOCompletionUPP'>
<arg declared_type='IOCompletionProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='IOCompletionUPP' function_pointer='true' type='^?'>
<arg declared_type='ParmBlkPtr' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})' type64='^v'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewIndexToUCStringUPP'>
<arg declared_type='IndexToUCStringProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='CFStringRef*' type='^^{__CFString}'/>
<arg declared_type='UCTypeSelectOptions*' type='^S'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='IndexToUCStringUPP' function_pointer='true' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='CFStringRef*' type='^^{__CFString}'/>
<arg declared_type='UCTypeSelectOptions*' type='^S'/>
<retval declared_type='Boolean' type='B'/>
</retval>
</function>
<function name='NewPtr'>
<arg declared_type='Size' name='byteCount' type='l' type64='q'/>
<retval declared_type='Ptr' type='*'/>
</function>
<function name='NewPtrClear'>
<arg declared_type='Size' name='byteCount' type='l' type64='q'/>
<retval declared_type='Ptr' type='*'/>
</function>
<function name='NewResErrUPP'>
<arg declared_type='ResErrProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ResErrUPP' function_pointer='true' type='^?'>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewSelectorFunctionUPP'>
<arg declared_type='SelectorFunctionProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt32*' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='SelectorFunctionUPP' function_pointer='true' type='^?'>
<arg declared_type='OSType' type='L' type64='I'/>
<arg declared_type='SInt32*' type='^i'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewThread'>
<arg declared_type='ThreadStyle' name='threadStyle' type='L' type64='I'/>
<arg declared_type='ThreadEntryTPP' function_pointer='true' name='threadEntry' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='voidPtr' type='^v'/>
</arg>
<arg declared_type='void*' name='threadParam' type='^v'/>
<arg declared_type='Size' name='stackSize' type='l' type64='q'/>
<arg declared_type='ThreadOptions' name='options' type='L' type64='I'/>
<arg declared_type='void**' name='threadResult' type='^^v'/>
<arg declared_type='ThreadID*' name='threadMade' type='^I' type64='^Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='NewThreadEntryUPP'>
<arg declared_type='ThreadEntryProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='voidPtr' type='^v'/>
</arg>
<retval declared_type='ThreadEntryUPP' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='voidPtr' type='^v'/>
</retval>
</function>
<function name='NewThreadSchedulerUPP'>
<arg declared_type='ThreadSchedulerProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</arg>
<retval declared_type='ThreadSchedulerUPP' function_pointer='true' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</retval>
</function>
<function name='NewThreadSwitchUPP'>
<arg declared_type='ThreadSwitchProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ThreadSwitchUPP' function_pointer='true' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewThreadTerminationUPP'>
<arg declared_type='ThreadTerminationProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='ThreadTerminationUPP' function_pointer='true' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewTimerUPP'>
<arg declared_type='TimerProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='TMTaskPtr' type='^{TMTask=^{QElem}s^?lll}' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='TimerUPP' function_pointer='true' type='^?'>
<arg declared_type='TMTaskPtr' type='^{TMTask=^{QElem}s^?lll}' type64='^{TMTask=^{QElem}s^?qqq}'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewUnicodeToTextFallbackUPP'>
<arg declared_type='UnicodeToTextFallbackProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='UniChar*' type='^S'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' type='*'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' type='^v'/>
<arg declared_type='ConstUnicodeMappingPtr' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='UnicodeToTextFallbackUPP' function_pointer='true' type='^?'>
<arg declared_type='UniChar*' type='^S'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' type='*'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' type='^v'/>
<arg declared_type='ConstUnicodeMappingPtr' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</retval>
</function>
<function name='OpenAComponent'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='ComponentInstance*' name='ci' type='^^{ComponentInstanceRecord}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='OpenAComponentResFile'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='ResFileRefNum*' name='resRef' type='^s' type64='^i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='OpenADefaultComponent'>
<arg declared_type='OSType' name='componentType' type='L' type64='I'/>
<arg declared_type='OSType' name='componentSubType' type='L' type64='I'/>
<arg declared_type='ComponentInstance*' name='ci' type='^^{ComponentInstanceRecord}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='OpenComponent'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
</function>
<function name='OpenComponentResFile'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type='ResFileRefNum' type='s' type64='i'/>
</function>
<function name='OpenDefaultComponent'>
<arg declared_type='OSType' name='componentType' type='L' type64='I'/>
<arg declared_type='OSType' name='componentSubType' type='L' type64='I'/>
<retval declared_type='ComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
</function>
<function name='PBAllocateForkAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBAllocateForkSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBCatalogSearchAsync'>
<arg declared_type='FSCatalogBulkParam*' name='paramBlock' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBCatalogSearchSync'>
<arg declared_type='FSCatalogBulkParam*' name='paramBlock' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBCloseForkAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBCloseForkSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBCloseIteratorAsync'>
<arg declared_type='FSCatalogBulkParam*' name='paramBlock' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBCloseIteratorSync'>
<arg declared_type='FSCatalogBulkParam*' name='paramBlock' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBCompareFSRefsAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBCompareFSRefsSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBCreateDirectoryUnicodeAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBCreateDirectoryUnicodeSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBCreateFileAndOpenForkUnicodeAsync'>
<arg declared_type='FSRefForkIOParamPtr' name='paramBlock' type='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}I^SI^{FSCatalogInfo}I^ScCs^{FSRef}}' type64='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}Q^SI^{FSCatalogInfo}Q^ScCi^{FSRef}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBCreateFileAndOpenForkUnicodeSync'>
<arg declared_type='FSRefForkIOParamPtr' name='paramBlock' type='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}I^SI^{FSCatalogInfo}I^ScCs^{FSRef}}' type64='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}Q^SI^{FSCatalogInfo}Q^ScCi^{FSRef}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBCreateFileUnicodeAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBCreateFileUnicodeSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBCreateForkAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBCreateForkSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBDeleteForkAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBDeleteForkSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBDeleteObjectAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBDeleteObjectSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBExchangeObjectsAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBExchangeObjectsSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBFSCopyFileAsync'>
<arg declared_type='FSRefParamPtr' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBFSCopyFileSync'>
<arg declared_type='FSRefParamPtr' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBFSResolveNodeIDAsync'>
<arg declared_type='FSRefParamPtr' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBFSResolveNodeIDSync'>
<arg declared_type='FSRefParamPtr' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBFlushForkAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBFlushForkSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBFlushVolumeAsync'>
<arg declared_type='FSRefParamPtr' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBFlushVolumeSync'>
<arg declared_type='FSRefParamPtr' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBGetCatalogInfoAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBGetCatalogInfoBulkAsync'>
<arg declared_type='FSCatalogBulkParam*' name='paramBlock' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBGetCatalogInfoBulkSync'>
<arg declared_type='FSCatalogBulkParam*' name='paramBlock' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBGetCatalogInfoSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBGetForkCBInfoAsync'>
<arg declared_type='FSForkCBInfoParam*' name='paramBlock' type='^{FSForkCBInfoParam=^{QElem}ss*^?sssss^{FSRef}^{FSForkInfo}^{HFSUniStr255}}' type64='^{FSForkCBInfoParam=^{QElem}ss*^?sisis^{FSRef}^{FSForkInfo}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBGetForkCBInfoSync'>
<arg declared_type='FSForkCBInfoParam*' name='paramBlock' type='^{FSForkCBInfoParam=^{QElem}ss*^?sssss^{FSRef}^{FSForkInfo}^{HFSUniStr255}}' type64='^{FSForkCBInfoParam=^{QElem}ss*^?sisis^{FSRef}^{FSForkInfo}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBGetForkPositionAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBGetForkPositionSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBGetForkSizeAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBGetForkSizeSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBGetVolumeInfoAsync'>
<arg declared_type='FSVolumeInfoParam*' name='paramBlock' type='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBGetVolumeInfoSync'>
<arg declared_type='FSVolumeInfoParam*' name='paramBlock' type='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBIterateForksAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBIterateForksSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBMakeFSRefUnicodeAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBMakeFSRefUnicodeSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBMoveObjectAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBMoveObjectSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBOpenForkAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBOpenForkSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBOpenIteratorAsync'>
<arg declared_type='FSCatalogBulkParam*' name='paramBlock' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBOpenIteratorSync'>
<arg declared_type='FSCatalogBulkParam*' name='paramBlock' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBReadForkAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBReadForkSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBRenameUnicodeAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBRenameUnicodeSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBSetCatalogInfoAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBSetCatalogInfoSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBSetForkPositionAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBSetForkPositionSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBSetForkSizeAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBSetForkSizeSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBSetVolumeInfoAsync'>
<arg declared_type='FSVolumeInfoParam*' name='paramBlock' type='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBSetVolumeInfoSync'>
<arg declared_type='FSVolumeInfoParam*' name='paramBlock' type='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBUnlinkObjectAsync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBUnlinkObjectSync'>
<arg declared_type='FSRefParam*' name='paramBlock' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBWriteForkAsync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PBWriteForkSync'>
<arg declared_type='FSForkIOParam*' name='paramBlock' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PBXLockRangeAsync'>
<arg declared_type='FSRangeLockParamPtr' name='paramBlock' type='^{FSRangeLockParam=^{QElem}ss*^?ssQSqQ}' type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBXLockRangeSync'>
<arg declared_type='FSRangeLockParamPtr' name='paramBlock' type='^{FSRangeLockParam=^{QElem}ss*^?ssQSqQ}' type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBXUnlockRangeAsync'>
<arg declared_type='FSRangeLockParamPtr' name='paramBlock' type='^{FSRangeLockParam=^{QElem}ss*^?ssQSqQ}' type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PBXUnlockRangeSync'>
<arg declared_type='FSRangeLockParamPtr' name='paramBlock' type='^{FSRangeLockParam=^{QElem}ss*^?ssQSqQ}' type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='PLpos'>
<arg declared_type='ConstStr255Param' name='str1' type='*'/>
<arg declared_type='ConstStr255Param' name='searchStr' type='*'/>
<retval declared_type='short' type='s'/>
</function>
<function name='PLstrcat'>
<arg declared_type='StringPtr' name='str' type='*'/>
<arg declared_type='ConstStr255Param' name='append' type='*'/>
<retval declared_type='StringPtr' type='*'/>
</function>
<function name='PLstrchr'>
<arg declared_type='ConstStr255Param' name='str1' type='*'/>
<arg declared_type='short' name='ch1' type='s'/>
<retval declared_type='Ptr' type='*'/>
</function>
<function name='PLstrcmp'>
<arg declared_type='ConstStr255Param' name='str1' type='*'/>
<arg declared_type='ConstStr255Param' name='str2' type='*'/>
<retval declared_type='short' type='s'/>
</function>
<function name='PLstrcpy'>
<arg declared_type='StringPtr' name='dest' type='*'/>
<arg declared_type='ConstStr255Param' name='source' type='*'/>
<retval declared_type='StringPtr' type='*'/>
</function>
<function name='PLstrlen'>
<arg declared_type='ConstStr255Param' name='str' type='*'/>
<retval declared_type='short' type='s'/>
</function>
<function name='PLstrncat'>
<arg declared_type='StringPtr' name='str1' type='*'/>
<arg declared_type='ConstStr255Param' name='append' type='*'/>
<arg declared_type='short' name='num' type='s'/>
<retval declared_type='StringPtr' type='*'/>
</function>
<function name='PLstrncmp'>
<arg declared_type='ConstStr255Param' name='str1' type='*'/>
<arg declared_type='ConstStr255Param' name='str2' type='*'/>
<arg declared_type='short' name='num' type='s'/>
<retval declared_type='short' type='s'/>
</function>
<function name='PLstrncpy'>
<arg declared_type='StringPtr' name='dest' type='*'/>
<arg declared_type='ConstStr255Param' name='source' type='*'/>
<arg declared_type='short' name='num' type='s'/>
<retval declared_type='StringPtr' type='*'/>
</function>
<function name='PLstrpbrk'>
<arg declared_type='ConstStr255Param' name='str1' type='*'/>
<arg declared_type='ConstStr255Param' name='charSet' type='*'/>
<retval declared_type='Ptr' type='*'/>
</function>
<function name='PLstrrchr'>
<arg declared_type='ConstStr255Param' name='str1' type='*'/>
<arg declared_type='short' name='ch1' type='s'/>
<retval declared_type='Ptr' type='*'/>
</function>
<function name='PLstrspn'>
<arg declared_type='ConstStr255Param' name='str1' type='*'/>
<arg declared_type='ConstStr255Param' name='charSet' type='*'/>
<retval declared_type='short' type='s'/>
</function>
<function name='PLstrstr'>
<arg declared_type='ConstStr255Param' name='str1' type='*'/>
<arg declared_type='ConstStr255Param' name='searchStr' type='*'/>
<retval declared_type='Ptr' type='*'/>
</function>
<function name='PrimeTime'>
<arg declared_type='QElemPtr' name='tmTaskPtr' type='^{QElem=^{QElem}s[1s]}'/>
<arg declared_type='long' name='count' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PrimeTimeTask'>
<arg declared_type='QElemPtr' name='tmTaskPtr' type='^{QElem=^{QElem}s[1s]}'/>
<arg declared_type='long' name='count' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PtrAndHand'>
<arg const='true' declared_type='void*' name='ptr1' type='^v'/>
<arg declared_type='Handle' name='hand2' type='^*'/>
<arg declared_type='long' name='size' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PtrToHand'>
<arg const='true' declared_type='void*' name='srcPtr' type='^v'/>
<arg declared_type='Handle*' name='dstHndl' type='^^*'/>
<arg declared_type='long' name='size' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PtrToXHand'>
<arg const='true' declared_type='void*' name='srcPtr' type='^v'/>
<arg declared_type='Handle' name='dstHndl' type='^*'/>
<arg declared_type='long' name='size' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='PurgeCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='whichAttributes' type='l' type64='i'/>
<arg declared_type='SInt32' name='matchingAttributes' type='l' type64='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='PurgeCollectionTag'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='QueryUnicodeMappings'>
<arg declared_type='OptionBits' name='iFilter' type='L' type64='I'/>
<arg declared_type='ConstUnicodeMappingPtr' name='iFindMapping' type='^{UnicodeMapping=IIi}'/>
<arg declared_type='ItemCount' name='iMaxCount' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='oActualCount' type='^I' type64='^Q'/>
<arg declared_type='UnicodeMapping*' name='oReturnedMappings' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ReadLocation'>
<arg declared_type='MachineLocation*' name='loc' type='^{MachineLocation=ii(?=l{?=[3c]c})}' type64='^{MachineLocation=ii(?=q{?=[3c]c})}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ReadPartialResource'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<arg declared_type='long' name='offset' type='l' type64='q'/>
<arg declared_type='void*' name='buffer' type='^v'/>
<arg declared_type='long' name='count' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ReallocateHandle'>
<arg declared_type='Handle' name='h' type='^*'/>
<arg declared_type='Size' name='byteCount' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RecoverHandle'>
<arg declared_type='Ptr' name='p' type='*'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='RegisterComponent'>
<arg declared_type='ComponentDescription*' name='cd' type='^{ComponentDescription=IIIII}'/>
<arg declared_type='ComponentRoutineUPP' function_pointer='true' name='componentEntryPoint' type='^?'>
<arg declared_type='ComponentParameters*' type='^{ComponentParameters=CCs[1l]}' type64='^{ComponentParameters=CCsI[1q]}'/>
<arg declared_type='Handle' type='^*'/>
<retval declared_type='ComponentResult' type='l' type64='i'/>
</arg>
<arg declared_type='SInt16' name='global' type='s'/>
<arg declared_type='Handle' name='componentName' type='^*'/>
<arg declared_type='Handle' name='componentInfo' type='^*'/>
<arg declared_type='Handle' name='componentIcon' type='^*'/>
<retval declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='RegisterComponentFileRef'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='SInt16' name='global' type='s'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='RegisterComponentFileRefEntries'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='SInt16' name='global' type='s'/>
<arg const='true' declared_type='ComponentDescription*' name='toRegister' type='^{ComponentDescription=IIIII}'/>
<arg declared_type='UInt32' name='registerCount' type='L' type64='I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='RegisterComponentResource'>
<arg declared_type='ComponentResourceHandle' name='cr' type='^^{ComponentResource}'/>
<arg declared_type='SInt16' name='global' type='s'/>
<retval declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='RegisterComponentResourceFile'>
<arg declared_type='SInt16' name='resRefNum' type='s'/>
<arg declared_type='SInt16' name='global' type='s'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='ReleaseCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ReleaseFolder'>
<arg declared_type='FSVolumeRefNum' name='vRefNum' type='s'/>
<arg declared_type='OSType' name='folderType' type='L' type64='I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ReleaseResource'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RemoveCollectionItem'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='id' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='RemoveFolderDescriptor'>
<arg declared_type='FolderType' name='foldType' type='L' type64='I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='RemoveIndexedCollectionItem'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='itemIndex' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='RemoveResource'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RemoveTimeTask'>
<arg declared_type='QElemPtr' name='tmTaskPtr' type='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ReplaceGestaltValue'>
<arg declared_type='OSType' name='selector' type='L' type64='I'/>
<arg declared_type='SInt32' name='replacementValue' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ReplaceIndexedCollectionItem'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='itemIndex' type='l' type64='i'/>
<arg declared_type='SInt32' name='itemSize' type='l' type64='i'/>
<arg const='true' declared_type='void*' name='itemData' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ReplaceIndexedCollectionItemHdl'>
<arg declared_type='Collection' name='aCollection' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='itemIndex' type='l' type64='i'/>
<arg declared_type='Handle' name='itemData' type='^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ResError'>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ResetTextToUnicodeInfo'>
<arg declared_type='TextToUnicodeInfo' name='ioTextToUnicodeInfo' type='^{OpaqueTextToUnicodeInfo=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ResetUnicodeToTextInfo'>
<arg declared_type='UnicodeToTextInfo' name='ioUnicodeToTextInfo' type='^{OpaqueUnicodeToTextInfo=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ResetUnicodeToTextRunInfo'>
<arg declared_type='UnicodeToTextRunInfo' name='ioUnicodeToTextRunInfo' type='^{OpaqueUnicodeToTextRunInfo=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='ResolveComponentAlias'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type='Component' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
</function>
<function name='ResolveDefaultTextEncoding'>
<arg declared_type='TextEncoding' name='encoding' type='L' type64='I'/>
<retval declared_type='TextEncoding' type='L' type64='I'/>
</function>
<function name='RetainCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='RevertTextEncodingToScriptInfo'>
<arg declared_type='TextEncoding' name='iEncoding' type='L' type64='I'/>
<arg declared_type='ScriptCode*' name='oTextScriptID' type='^s'/>
<arg declared_type='LangCode*' name='oTextLanguageID' type='^s'/>
<arg declared_type='unsigned char*' name='oTextFontname' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='RmvTime'>
<arg declared_type='QElemPtr' name='tmTaskPtr' type='^{QElem=^{QElem}s[1s]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='S32Set'>
<arg declared_type='SInt64' name='value' type='q'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='S64Add'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64And'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='S64BitwiseAnd'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64BitwiseEor'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64BitwiseNot'>
<arg declared_type='SInt64' name='value' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64BitwiseOr'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Compare'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='S64Div'>
<arg declared_type='SInt64' name='dividend' type='q'/>
<arg declared_type='SInt64' name='divisor' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Divide'>
<arg declared_type='SInt64' name='dividend' type='q'/>
<arg declared_type='SInt64' name='divisor' type='q'/>
<arg declared_type='SInt64*' name='remainder' type='^q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Eor'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='S64Max'>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Min'>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Mod'>
<arg declared_type='SInt64' name='dividend' type='q'/>
<arg declared_type='SInt64' name='divisor' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Multiply'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Negate'>
<arg declared_type='SInt64' name='value' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Not'>
<arg declared_type='SInt64' name='value' type='q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='S64Or'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='S64Set'>
<arg declared_type='SInt32' name='value' type='l' type64='i'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64SetU'>
<arg declared_type='UInt32' name='value' type='L' type64='I'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64ShiftLeft'>
<arg declared_type='SInt64' name='value' type='q'/>
<arg declared_type='UInt32' name='shift' type='L' type64='I'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64ShiftRight'>
<arg declared_type='SInt64' name='value' type='q'/>
<arg declared_type='UInt32' name='shift' type='L' type64='I'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='S64Subtract'>
<arg declared_type='SInt64' name='left' type='q'/>
<arg declared_type='SInt64' name='right' type='q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='SInt64ToLongDouble'>
<arg declared_type='SInt64' name='value' type='q'/>
<retval declared_type='long double' type='D'/>
</function>
<function name='SInt64ToUInt64'>
<arg declared_type='SInt64' name='value' type='q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function inline='true' name='SInt64ToWide'>
<arg declared_type='SInt64' name='s' type='q'/>
<retval declared_type='wide' type='{wide=Ii}'/>
</function>
<function name='SetAliasUserType'>
<arg declared_type='AliasHandle' name='alias' type='^^{AliasRecord}'/>
<arg declared_type='OSType' name='userType' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetAliasUserTypeWithPtr'>
<arg declared_type='AliasPtr' name='alias' type='^{AliasRecord=[6C]}'/>
<arg declared_type='OSType' name='userType' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetCollectionDefaultAttributes'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='whichAttributes' type='l' type64='i'/>
<arg declared_type='SInt32' name='newAttributes' type='l' type64='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetCollectionExceptionProc'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionExceptionUPP' function_pointer='true' name='exceptionProc' type='^?'>
<arg declared_type='Collection' type='^{OpaqueCollection=}'/>
<arg declared_type='OSErr' type='s'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='SetCollectionItemInfo'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionTag' name='tag' type='L' type64='I'/>
<arg declared_type='SInt32' name='id' type='l' type64='i'/>
<arg declared_type='SInt32' name='whichAttributes' type='l' type64='i'/>
<arg declared_type='SInt32' name='newAttributes' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetComponentInstanceError'>
<arg declared_type='ComponentInstance' name='aComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type='OSErr' name='theError' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetComponentInstanceStorage'>
<arg declared_type='ComponentInstance' name='aComponentInstance' type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<arg declared_type='Handle' name='theStorage' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetComponentRefcon'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='long' name='theRefcon' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetDebugOptionValue'>
<arg declared_type='OSType' name='componentSignature' type='L' type64='I'/>
<arg declared_type='SInt32' name='optionSelectorNum' type='l' type64='i'/>
<arg declared_type='Boolean' name='newOptionSetting' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SetDebuggerNotificationProcs'>
<arg declared_type='DebuggerNewThreadTPP' function_pointer='true' name='notifyNewThread' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='DebuggerDisposeThreadTPP' function_pointer='true' name='notifyDisposeThread' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='DebuggerThreadSchedulerTPP' function_pointer='true' name='notifyThreadScheduler' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetDefaultComponent'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='SInt16' name='flags' type='s'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetFallbackUnicodeToText'>
<arg declared_type='UnicodeToTextInfo' name='iUnicodeToTextInfo' type='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type='UnicodeToTextFallbackUPP' function_pointer='true' name='iFallback' type='^?'>
<arg declared_type='UniChar*' type='^S'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' type='*'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' type='^v'/>
<arg declared_type='ConstUnicodeMappingPtr' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='OptionBits' name='iControlFlags' type='L' type64='I'/>
<arg declared_type='LogicalAddress' name='iInfoPtr' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SetFallbackUnicodeToTextRun'>
<arg declared_type='UnicodeToTextRunInfo' name='iUnicodeToTextRunInfo' type='^{OpaqueUnicodeToTextRunInfo=}'/>
<arg declared_type='UnicodeToTextFallbackUPP' function_pointer='true' name='iFallback' type='^?'>
<arg declared_type='UniChar*' type='^S'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' type='*'/>
<arg declared_type='ByteCount' type='L' type64='Q'/>
<arg declared_type='ByteCount*' type='^I' type64='^Q'/>
<arg declared_type='LogicalAddress' type='^v'/>
<arg declared_type='ConstUnicodeMappingPtr' type='^{UnicodeMapping=IIi}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='OptionBits' name='iControlFlags' type='L' type64='I'/>
<arg declared_type='LogicalAddress' name='iInfoPtr' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SetGestaltValue'>
<arg declared_type='OSType' name='selector' type='L' type64='I'/>
<arg declared_type='SInt32' name='newValue' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetHandleSize'>
<arg declared_type='Handle' name='h' type='^*'/>
<arg declared_type='Size' name='newSize' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetIndexedCollectionItemInfo'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='SInt32' name='itemIndex' type='l' type64='i'/>
<arg declared_type='SInt32' name='whichAttributes' type='l' type64='i'/>
<arg declared_type='SInt32' name='newAttributes' type='l' type64='i'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetPtrSize'>
<arg declared_type='Ptr' name='p' type='*'/>
<arg declared_type='Size' name='newSize' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetResAttrs'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<arg declared_type='ResAttributes' name='attrs' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetResFileAttrs'>
<arg declared_type='ResFileRefNum' name='refNum' type='s' type64='i'/>
<arg declared_type='ResFileAttributes' name='attrs' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetResInfo'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<arg declared_type='ResID' name='theID' type='s'/>
<arg declared_type='ConstStr255Param' name='name' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetResLoad'>
<arg declared_type='Boolean' name='load' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetResPurge'>
<arg declared_type='Boolean' name='install' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetResourceSize'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<arg declared_type='long' name='newSize' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SetScriptManagerVariable'>
<arg declared_type='short' name='selector' type='s'/>
<arg declared_type='long' name='param' type='l' type64='q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetThreadReadyGivenTaskRef'>
<arg declared_type='ThreadTaskRef' name='threadTRef' type='^v'/>
<arg declared_type='ThreadID' name='threadToSet' type='L' type64='Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetThreadScheduler'>
<arg declared_type='ThreadSchedulerTPP' function_pointer='true' name='threadScheduler' type='^?'>
<arg declared_type='SchedulerInfoRecPtr' type='^{SchedulerInfoRec=IIII}' type64='^{SchedulerInfoRec=IQQQ}'/>
<retval declared_type='ThreadID' type='L' type64='Q'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetThreadState'>
<arg declared_type='ThreadID' name='threadToSet' type='L' type64='Q'/>
<arg declared_type='ThreadState' name='newState' type='S'/>
<arg declared_type='ThreadID' name='suggestedThread' type='L' type64='Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetThreadStateEndCritical'>
<arg declared_type='ThreadID' name='threadToSet' type='L' type64='Q'/>
<arg declared_type='ThreadState' name='newState' type='S'/>
<arg declared_type='ThreadID' name='suggestedThread' type='L' type64='Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetThreadSwitcher'>
<arg declared_type='ThreadID' name='thread' type='L' type64='Q'/>
<arg declared_type='ThreadSwitchTPP' function_pointer='true' name='threadSwitcher' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='switchProcParam' type='^v'/>
<arg declared_type='Boolean' name='inOrOut' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetThreadTerminator'>
<arg declared_type='ThreadID' name='thread' type='L' type64='Q'/>
<arg declared_type='ThreadTerminationTPP' function_pointer='true' name='threadTerminator' type='^?'>
<arg declared_type='ThreadID' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='terminationProcParam' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SubAbsoluteFromAbsolute'>
<arg declared_type='AbsoluteTime' name='leftAbsoluteTime' type='{UnsignedWide=II}'/>
<arg declared_type='AbsoluteTime' name='rightAbsoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='SubDurationFromAbsolute'>
<arg declared_type='Duration' name='duration' type='l' type64='i'/>
<arg declared_type='AbsoluteTime' name='absoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='SubNanosecondsFromAbsolute'>
<arg declared_type='Nanoseconds' name='nanoseconds' type='{UnsignedWide=II}'/>
<arg declared_type='AbsoluteTime' name='absoluteTime' type='{UnsignedWide=II}'/>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='SysError'>
<arg declared_type='short' name='errorCode' type='s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='TECClearConverterContextInfo'>
<arg declared_type='TECObjectRef' name='encodingConverter' type='^{OpaqueTECObjectRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECClearSnifferContextInfo'>
<arg declared_type='TECSnifferObjectRef' name='encodingSniffer' type='^{OpaqueTECSnifferObjectRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECConvertText'>
<arg declared_type='TECObjectRef' name='encodingConverter' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='ConstTextPtr' name='inputBuffer' type='*'/>
<arg declared_type='ByteCount' name='inputBufferLength' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='actualInputLength' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' name='outputBuffer' type='*'/>
<arg declared_type='ByteCount' name='outputBufferLength' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='actualOutputLength' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECConvertTextToMultipleEncodings'>
<arg declared_type='TECObjectRef' name='encodingConverter' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='ConstTextPtr' name='inputBuffer' type='*'/>
<arg declared_type='ByteCount' name='inputBufferLength' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='actualInputLength' type='^I' type64='^Q'/>
<arg declared_type='TextPtr' name='outputBuffer' type='*'/>
<arg declared_type='ByteCount' name='outputBufferLength' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='actualOutputLength' type='^I' type64='^Q'/>
<arg declared_type='TextEncodingRun*' name='outEncodingsBuffer' type='^{TextEncodingRun=II}' type64='^{TextEncodingRun=QI}'/>
<arg declared_type='ItemCount' name='maxOutEncodingRuns' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualOutEncodingRuns' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCopyTextEncodingInternetNameAndMIB'>
<arg declared_type='TextEncoding' name='textEncoding' type='L' type64='I'/>
<arg declared_type='TECInternetNameUsageMask' name='usage' type='L' type64='I'/>
<arg declared_type='CFStringRef*' name='encodingNamePtr' type='^^{__CFString}'/>
<arg declared_type='SInt32*' name='mibEnumPtr' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCountAvailableSniffers'>
<arg declared_type='ItemCount*' name='numberOfEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCountAvailableTextEncodings'>
<arg declared_type='ItemCount*' name='numberEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCountDestinationTextEncodings'>
<arg declared_type='TextEncoding' name='inputEncoding' type='L' type64='I'/>
<arg declared_type='ItemCount*' name='numberOfEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCountDirectTextEncodingConversions'>
<arg declared_type='ItemCount*' name='numberOfEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCountMailTextEncodings'>
<arg declared_type='RegionCode' name='locale' type='s'/>
<arg declared_type='ItemCount*' name='numberEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCountSubTextEncodings'>
<arg declared_type='TextEncoding' name='inputEncoding' type='L' type64='I'/>
<arg declared_type='ItemCount*' name='numberOfEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCountWebTextEncodings'>
<arg declared_type='RegionCode' name='locale' type='s'/>
<arg declared_type='ItemCount*' name='numberEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCreateConverter'>
<arg declared_type='TECObjectRef*' name='newEncodingConverter' type='^^{OpaqueTECObjectRef}'/>
<arg declared_type='TextEncoding' name='inputEncoding' type='L' type64='I'/>
<arg declared_type='TextEncoding' name='outputEncoding' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCreateConverterFromPath'>
<arg declared_type='TECObjectRef*' name='newEncodingConverter' type='^^{OpaqueTECObjectRef}'/>
<arg const='true' declared_type='TextEncoding*' name='inPath' type='^I'/>
<arg declared_type='ItemCount' name='inEncodings' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCreateOneToManyConverter'>
<arg declared_type='TECObjectRef*' name='newEncodingConverter' type='^^{OpaqueTECObjectRef}'/>
<arg declared_type='TextEncoding' name='inputEncoding' type='L' type64='I'/>
<arg declared_type='ItemCount' name='numOutputEncodings' type='L' type64='Q'/>
<arg const='true' declared_type='TextEncoding*' name='outputEncodings' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECCreateSniffer'>
<arg declared_type='TECSnifferObjectRef*' name='encodingSniffer' type='^^{OpaqueTECSnifferObjectRef}'/>
<arg const='true' declared_type='TextEncoding*' name='testEncodings' type='^I'/>
<arg declared_type='ItemCount' name='numTextEncodings' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECDisposeConverter'>
<arg declared_type='TECObjectRef' name='newEncodingConverter' type='^{OpaqueTECObjectRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECDisposeSniffer'>
<arg declared_type='TECSnifferObjectRef' name='encodingSniffer' type='^{OpaqueTECSnifferObjectRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECFlushMultipleEncodings'>
<arg declared_type='TECObjectRef' name='encodingConverter' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='TextPtr' name='outputBuffer' type='*'/>
<arg declared_type='ByteCount' name='outputBufferLength' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='actualOutputLength' type='^I' type64='^Q'/>
<arg declared_type='TextEncodingRun*' name='outEncodingsBuffer' type='^{TextEncodingRun=II}' type64='^{TextEncodingRun=QI}'/>
<arg declared_type='ItemCount' name='maxOutEncodingRuns' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualOutEncodingRuns' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECFlushText'>
<arg declared_type='TECObjectRef' name='encodingConverter' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='TextPtr' name='outputBuffer' type='*'/>
<arg declared_type='ByteCount' name='outputBufferLength' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='actualOutputLength' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetAvailableSniffers'>
<arg declared_type='TextEncoding*' name='availableSniffers' type='^I'/>
<arg declared_type='ItemCount' name='maxAvailableSniffers' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualAvailableSniffers' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetAvailableTextEncodings'>
<arg declared_type='TextEncoding*' name='availableEncodings' type='^I'/>
<arg declared_type='ItemCount' name='maxAvailableEncodings' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualAvailableEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetDestinationTextEncodings'>
<arg declared_type='TextEncoding' name='inputEncoding' type='L' type64='I'/>
<arg declared_type='TextEncoding*' name='destinationEncodings' type='^I'/>
<arg declared_type='ItemCount' name='maxDestinationEncodings' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualDestinationEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetDirectTextEncodingConversions'>
<arg declared_type='TECConversionInfo*' name='availableConversions' type='^{TECConversionInfo=IISS}'/>
<arg declared_type='ItemCount' name='maxAvailableConversions' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualAvailableConversions' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetEncodingList'>
<arg declared_type='TECObjectRef' name='encodingConverter' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='ItemCount*' name='numEncodings' type='^I' type64='^Q'/>
<arg declared_type='Handle*' name='encodingList' type='^^*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetInfo'>
<arg declared_type='TECInfoHandle*' name='tecInfo' type='^^^{TECInfo}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetMailTextEncodings'>
<arg declared_type='RegionCode' name='locale' type='s'/>
<arg declared_type='TextEncoding*' name='availableEncodings' type='^I'/>
<arg declared_type='ItemCount' name='maxAvailableEncodings' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualAvailableEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetSubTextEncodings'>
<arg declared_type='TextEncoding' name='inputEncoding' type='L' type64='I'/>
<arg declared_type='TextEncoding*' name='subEncodings' type='^I'/>
<arg declared_type='ItemCount' name='maxSubEncodings' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualSubEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetTextEncodingFromInternetName'>
<arg declared_type='TextEncoding*' name='textEncoding' type='^I'/>
<arg declared_type='ConstStr255Param' name='encodingName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetTextEncodingFromInternetNameOrMIB'>
<arg declared_type='TextEncoding*' name='textEncodingPtr' type='^I'/>
<arg declared_type='TECInternetNameUsageMask' name='usage' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='encodingName' type='^{__CFString=}'/>
<arg declared_type='SInt32' name='mibEnum' type='l' type64='i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetTextEncodingInternetName'>
<arg declared_type='TextEncoding' name='textEncoding' type='L' type64='I'/>
<arg declared_type='unsigned char*' name='encodingName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECGetWebTextEncodings'>
<arg declared_type='RegionCode' name='locale' type='s'/>
<arg declared_type='TextEncoding*' name='availableEncodings' type='^I'/>
<arg declared_type='ItemCount' name='maxAvailableEncodings' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualAvailableEncodings' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECSetBasicOptions'>
<arg declared_type='TECObjectRef' name='encodingConverter' type='^{OpaqueTECObjectRef=}'/>
<arg declared_type='OptionBits' name='controlFlags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TECSniffTextEncoding'>
<arg declared_type='TECSnifferObjectRef' name='encodingSniffer' type='^{OpaqueTECSnifferObjectRef=}'/>
<arg declared_type='ConstTextPtr' name='inputBuffer' type='*'/>
<arg declared_type='ByteCount' name='inputBufferLength' type='L' type64='Q'/>
<arg declared_type='TextEncoding*' name='testEncodings' type='^I'/>
<arg declared_type='ItemCount' name='numTextEncodings' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='numErrsArray' type='^I' type64='^Q'/>
<arg declared_type='ItemCount' name='maxErrs' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='numFeaturesArray' type='^I' type64='^Q'/>
<arg declared_type='ItemCount' name='maxFeatures' type='L' type64='Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TaskLevel'>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='TempNewHandle'>
<arg declared_type='Size' name='logicalSize' type='l' type64='q'/>
<arg declared_type='OSErr*' name='resultCode' type='^s'/>
<retval declared_type='Handle' type='^*'/>
</function>
<function name='TestAndClear'>
<arg declared_type='UInt32' name='bit' type='L' type64='I'/>
<arg declared_type='UInt8*' name='address' type='*'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='TestAndSet'>
<arg declared_type='UInt32' name='bit' type='L' type64='I'/>
<arg declared_type='UInt8*' name='address' type='*'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='ThreadBeginCritical'>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ThreadCurrentStackSpace'>
<arg declared_type='ThreadID' name='thread' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='freeStack' type='^I' type64='^Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ThreadEndCritical'>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='TickCount'>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='TruncateForTextToUnicode'>
<arg declared_type='ConstTextToUnicodeInfo' name='iTextToUnicodeInfo' type='^{OpaqueTextToUnicodeInfo=}'/>
<arg declared_type='ByteCount' name='iSourceLen' type='L' type64='Q'/>
<arg declared_type='ConstLogicalAddress' name='iSourceStr' type='^v'/>
<arg declared_type='ByteCount' name='iMaxLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oTruncatedLen' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='TruncateForUnicodeToText'>
<arg declared_type='ConstUnicodeToTextInfo' name='iUnicodeToTextInfo' type='^{OpaqueUnicodeToTextInfo=}'/>
<arg declared_type='ByteCount' name='iSourceLen' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='iSourceStr' type='^S'/>
<arg declared_type='OptionBits' name='iControlFlags' type='L' type64='I'/>
<arg declared_type='ByteCount' name='iMaxLen' type='L' type64='Q'/>
<arg declared_type='ByteCount*' name='oTruncatedLen' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='U32SetU'>
<arg declared_type='UInt64' name='value' type='Q'/>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='U64Add'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64And'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='U64BitwiseAnd'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64BitwiseEor'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64BitwiseNot'>
<arg declared_type='UInt64' name='value' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64BitwiseOr'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64Compare'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='U64Div'>
<arg declared_type='UInt64' name='dividend' type='Q'/>
<arg declared_type='UInt64' name='divisor' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64Divide'>
<arg declared_type='UInt64' name='dividend' type='Q'/>
<arg declared_type='UInt64' name='divisor' type='Q'/>
<arg declared_type='UInt64*' name='remainder' type='^Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64Eor'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='U64Max'>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64Mod'>
<arg declared_type='UInt64' name='dividend' type='Q'/>
<arg declared_type='UInt64' name='divisor' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64Multiply'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64Not'>
<arg declared_type='UInt64' name='value' type='Q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='U64Or'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='U64Set'>
<arg declared_type='SInt32' name='value' type='l' type64='i'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64SetU'>
<arg declared_type='UInt32' name='value' type='L' type64='I'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64ShiftLeft'>
<arg declared_type='UInt64' name='value' type='Q'/>
<arg declared_type='UInt32' name='shift' type='L' type64='I'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64ShiftRight'>
<arg declared_type='UInt64' name='value' type='Q'/>
<arg declared_type='UInt32' name='shift' type='L' type64='I'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='U64Subtract'>
<arg declared_type='UInt64' name='left' type='Q'/>
<arg declared_type='UInt64' name='right' type='Q'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='UCCompareCollationKeys'>
<arg const='true' declared_type='UCCollationValue*' name='key1Ptr' type='^I'/>
<arg declared_type='ItemCount' name='key1Length' type='L' type64='Q'/>
<arg const='true' declared_type='UCCollationValue*' name='key2Ptr' type='^I'/>
<arg declared_type='ItemCount' name='key2Length' type='L' type64='Q'/>
<arg declared_type='Boolean*' name='equivalent' type='^B'/>
<arg declared_type='SInt32*' name='order' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCCompareText'>
<arg declared_type='CollatorRef' name='collatorRef' type='^{OpaqueCollatorRef=}'/>
<arg const='true' declared_type='UniChar*' name='text1Ptr' type='^S'/>
<arg declared_type='UniCharCount' name='text1Length' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='text2Ptr' type='^S'/>
<arg declared_type='UniCharCount' name='text2Length' type='L' type64='Q'/>
<arg declared_type='Boolean*' name='equivalent' type='^B'/>
<arg declared_type='SInt32*' name='order' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCCompareTextDefault'>
<arg declared_type='UCCollateOptions' name='options' type='L' type64='I'/>
<arg const='true' declared_type='UniChar*' name='text1Ptr' type='^S'/>
<arg declared_type='UniCharCount' name='text1Length' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='text2Ptr' type='^S'/>
<arg declared_type='UniCharCount' name='text2Length' type='L' type64='Q'/>
<arg declared_type='Boolean*' name='equivalent' type='^B'/>
<arg declared_type='SInt32*' name='order' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCCompareTextNoLocale'>
<arg declared_type='UCCollateOptions' name='options' type='L' type64='I'/>
<arg const='true' declared_type='UniChar*' name='text1Ptr' type='^S'/>
<arg declared_type='UniCharCount' name='text1Length' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='text2Ptr' type='^S'/>
<arg declared_type='UniCharCount' name='text2Length' type='L' type64='Q'/>
<arg declared_type='Boolean*' name='equivalent' type='^B'/>
<arg declared_type='SInt32*' name='order' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCConvertCFAbsoluteTimeToLongDateTime'>
<arg declared_type='CFAbsoluteTime' name='iCFTime' type='d'/>
<arg declared_type='LongDateTime*' name='oLongDate' type='^q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCConvertCFAbsoluteTimeToSeconds'>
<arg declared_type='CFAbsoluteTime' name='iCFTime' type='d'/>
<arg declared_type='UInt32*' name='oSeconds' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCConvertCFAbsoluteTimeToUTCDateTime'>
<arg declared_type='CFAbsoluteTime' name='iCFTime' type='d'/>
<arg declared_type='UTCDateTime*' name='oUTCDate' type='^{UTCDateTime=SIS}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCConvertLongDateTimeToCFAbsoluteTime'>
<arg declared_type='LongDateTime' name='iLongTime' type='q'/>
<arg declared_type='CFAbsoluteTime*' name='oCFTime' type='^d'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCConvertSecondsToCFAbsoluteTime'>
<arg declared_type='UInt32' name='iSeconds' type='L' type64='I'/>
<arg declared_type='CFAbsoluteTime*' name='oCFTime' type='^d'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCConvertUTCDateTimeToCFAbsoluteTime'>
<arg const='true' declared_type='UTCDateTime*' name='iUTCDate' type='^{UTCDateTime=SIS}'/>
<arg declared_type='CFAbsoluteTime*' name='oCFTime' type='^d'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCCreateCollator'>
<arg declared_type='LocaleRef' name='locale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='LocaleOperationVariant' name='opVariant' type='L' type64='I'/>
<arg declared_type='UCCollateOptions' name='options' type='L' type64='I'/>
<arg declared_type='CollatorRef*' name='collatorRef' type='^^{OpaqueCollatorRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCCreateTextBreakLocator'>
<arg declared_type='LocaleRef' name='locale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='LocaleOperationVariant' name='opVariant' type='L' type64='I'/>
<arg declared_type='UCTextBreakType' name='breakTypes' type='L' type64='I'/>
<arg declared_type='TextBreakLocatorRef*' name='breakRef' type='^^{OpaqueTextBreakLocatorRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCDisposeCollator'>
<arg declared_type='CollatorRef*' name='collatorRef' type='^^{OpaqueCollatorRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCDisposeTextBreakLocator'>
<arg declared_type='TextBreakLocatorRef*' name='breakRef' type='^^{OpaqueTextBreakLocatorRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCFindTextBreak'>
<arg declared_type='TextBreakLocatorRef' name='breakRef' type='^{OpaqueTextBreakLocatorRef=}'/>
<arg declared_type='UCTextBreakType' name='breakType' type='L' type64='I'/>
<arg declared_type='UCTextBreakOptions' name='options' type='L' type64='I'/>
<arg const='true' declared_type='UniChar*' name='textPtr' type='^S'/>
<arg declared_type='UniCharCount' name='textLength' type='L' type64='Q'/>
<arg declared_type='UniCharArrayOffset' name='startOffset' type='L' type64='Q'/>
<arg declared_type='UniCharArrayOffset*' name='breakOffset' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCGetCharProperty'>
<arg const='true' declared_type='UniChar*' name='charPtr' type='^S'/>
<arg declared_type='UniCharCount' name='textLength' type='L' type64='Q'/>
<arg declared_type='UCCharPropertyType' name='propType' type='l' type64='i'/>
<arg declared_type='UCCharPropertyValue*' name='propValue' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCGetCollationKey'>
<arg declared_type='CollatorRef' name='collatorRef' type='^{OpaqueCollatorRef=}'/>
<arg const='true' declared_type='UniChar*' name='textPtr' type='^S'/>
<arg declared_type='UniCharCount' name='textLength' type='L' type64='Q'/>
<arg declared_type='ItemCount' name='maxKeySize' type='L' type64='Q'/>
<arg declared_type='ItemCount*' name='actualKeySize' type='^I' type64='^Q'/>
<arg declared_type='UCCollationValue*' name='collationKey' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function inline='true' name='UCGetUnicodeScalarValueForSurrogatePair'>
<arg declared_type='UniChar' name='surrogateHigh' type='S'/>
<arg declared_type='UniChar' name='surrogateLow' type='S'/>
<retval declared_type='UnicodeScalarValue' type='L' type64='I'/>
</function>
<function inline='true' name='UCIsSurrogateHighCharacter'>
<arg declared_type='UniChar' name='character' type='S'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function inline='true' name='UCIsSurrogateLowCharacter'>
<arg declared_type='UniChar' name='character' type='S'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='UCKeyTranslate'>
<arg const='true' declared_type='UCKeyboardLayout*' name='keyLayoutPtr' type='^{UCKeyboardLayout=SSII[1{UCKeyboardTypeHeader=IIIIIII}]}'/>
<arg declared_type='UInt16' name='virtualKeyCode' type='S'/>
<arg declared_type='UInt16' name='keyAction' type='S'/>
<arg declared_type='UInt32' name='modifierKeyState' type='L' type64='I'/>
<arg declared_type='UInt32' name='keyboardType' type='L' type64='I'/>
<arg declared_type='OptionBits' name='keyTranslateOptions' type='L' type64='I'/>
<arg declared_type='UInt32*' name='deadKeyState' type='^I'/>
<arg declared_type='UniCharCount' name='maxStringLength' type='L' type64='Q'/>
<arg declared_type='UniCharCount*' name='actualStringLength' type='^I' type64='^Q'/>
<arg declared_type='UniChar*' name='unicodeString' type='^S'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCTypeSelectAddKeyToSelector'>
<arg declared_type='UCTypeSelectRef' name='inRef' type='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type='CFStringRef' name='inText' type='^{__CFString=}'/>
<arg declared_type='double' name='inEventTime' type='d'/>
<arg declared_type='Boolean*' name='updateFlag' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCTypeSelectCompare'>
<arg declared_type='UCTypeSelectRef' name='ref' type='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type='CFStringRef' name='inText' type='^{__CFString=}'/>
<arg declared_type='UCTypeSelectCompareResult*' name='result' type='^i'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCTypeSelectCreateSelector'>
<arg declared_type='LocaleRef' name='locale' type='^{OpaqueLocaleRef=}'/>
<arg declared_type='LocaleOperationVariant' name='opVariant' type='L' type64='I'/>
<arg declared_type='UCCollateOptions' name='options' type='L' type64='I'/>
<arg declared_type='UCTypeSelectRef*' name='newSelector' type='^^{OpaqueUCTypeSelectRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCTypeSelectFindItem'>
<arg declared_type='UCTypeSelectRef' name='ref' type='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type='UInt32' name='listSize' type='L' type64='I'/>
<arg declared_type='void*' name='listDataPtr' type='^v'/>
<arg declared_type='void*' name='refcon' type='^v'/>
<arg declared_type='IndexToUCStringUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='CFStringRef*' type='^^{__CFString}'/>
<arg declared_type='UCTypeSelectOptions*' type='^S'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg declared_type='UInt32*' name='closestItem' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCTypeSelectFlushSelectorData'>
<arg declared_type='UCTypeSelectRef' name='ref' type='^{OpaqueUCTypeSelectRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCTypeSelectReleaseSelector'>
<arg declared_type='UCTypeSelectRef*' name='ref' type='^^{OpaqueUCTypeSelectRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCTypeSelectWalkList'>
<arg declared_type='UCTypeSelectRef' name='ref' type='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type='CFStringRef' name='currSelect' type='^{__CFString=}'/>
<arg declared_type='UCTSWalkDirection' name='direction' type='S'/>
<arg declared_type='UInt32' name='listSize' type='L' type64='I'/>
<arg declared_type='void*' name='listDataPtr' type='^v'/>
<arg declared_type='void*' name='refcon' type='^v'/>
<arg declared_type='IndexToUCStringUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='UInt32' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='CFStringRef*' type='^^{__CFString}'/>
<arg declared_type='UCTypeSelectOptions*' type='^S'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<arg declared_type='UInt32*' name='closestItem' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UCTypeSelectWouldResetBuffer'>
<arg declared_type='UCTypeSelectRef' name='inRef' type='^{OpaqueUCTypeSelectRef=}'/>
<arg declared_type='CFStringRef' name='inText' type='^{__CFString=}'/>
<arg declared_type='double' name='inEventTime' type='d'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='UInt64ToLongDouble'>
<arg declared_type='UInt64' name='value' type='Q'/>
<retval declared_type='long double' type='D'/>
</function>
<function name='UInt64ToSInt64'>
<arg declared_type='UInt64' name='value' type='Q'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function inline='true' name='UInt64ToUnsignedWide'>
<arg declared_type='UInt64' name='u' type='Q'/>
<retval declared_type='UnsignedWide' type='{UnsignedWide=II}'/>
</function>
<function name='UncaptureComponent'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='UnflattenCollection'>
<arg declared_type='Collection' name='c' type='^{OpaqueCollection=}'/>
<arg declared_type='CollectionFlattenUPP' function_pointer='true' name='flattenProc' type='^?'>
<arg declared_type='SInt32' type='l' type64='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<arg declared_type='void*' name='refCon' type='^v'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='UnflattenCollectionFromHdl'>
<arg declared_type='Collection' name='aCollection' type='^{OpaqueCollection=}'/>
<arg declared_type='Handle' name='flattened' type='^*'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='Unique1ID'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<retval declared_type='ResID' type='s'/>
</function>
<function name='UniqueID'>
<arg declared_type='ResType' name='theType' type='L' type64='I'/>
<retval declared_type='ResID' type='s'/>
</function>
<function name='UnregisterComponent'>
<arg declared_type='Component' name='aComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='UnsignedFixedMulDiv'>
<arg declared_type='UnsignedFixed' name='value' type='L' type64='I'/>
<arg declared_type='UnsignedFixed' name='multiplier' type='L' type64='I'/>
<arg declared_type='UnsignedFixed' name='divisor' type='L' type64='I'/>
<retval declared_type='UnsignedFixed' type='L' type64='I'/>
</function>
<function inline='true' name='UnsignedWideToUInt64'>
<arg declared_type='UnsignedWide' name='uw' type='{UnsignedWide=II}'/>
<retval declared_type='UInt64' type='Q'/>
</function>
<function name='UpTime'>
<retval declared_type='AbsoluteTime' type='{UnsignedWide=II}'/>
</function>
<function name='UpdateResFile'>
<arg declared_type='ResFileRefNum' name='refNum' type='s' type64='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='UpgradeScriptInfoToTextEncoding'>
<arg declared_type='ScriptCode' name='iTextScriptID' type='s'/>
<arg declared_type='LangCode' name='iTextLanguageID' type='s'/>
<arg declared_type='RegionCode' name='iRegionID' type='s'/>
<arg declared_type='ConstStr255Param' name='iTextFontname' type='*'/>
<arg declared_type='TextEncoding*' name='oEncoding' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UseResFile'>
<arg declared_type='ResFileRefNum' name='refNum' type='s' type64='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WideAdd'>
<arg declared_type='wide*' name='target' type='^{wide=Ii}'/>
<arg const='true' declared_type='wide*' name='source' type='^{wide=Ii}'/>
<retval declared_type='wide*' type='^{wide=Ii}'/>
</function>
<function name='WideBitShift'>
<arg declared_type='wide*' name='target' type='^{wide=Ii}'/>
<arg declared_type='SInt32' name='shift' type='l' type64='i'/>
<retval declared_type='wide*' type='^{wide=Ii}'/>
</function>
<function name='WideCompare'>
<arg const='true' declared_type='wide*' name='target' type='^{wide=Ii}'/>
<arg const='true' declared_type='wide*' name='source' type='^{wide=Ii}'/>
<retval declared_type='short' type='s'/>
</function>
<function name='WideDivide'>
<arg const='true' declared_type='wide*' name='dividend' type='^{wide=Ii}'/>
<arg declared_type='SInt32' name='divisor' type='l' type64='i'/>
<arg declared_type='SInt32*' name='remainder' type='^i'/>
<retval declared_type='SInt32' type='l' type64='i'/>
</function>
<function name='WideMultiply'>
<arg declared_type='SInt32' name='multiplicand' type='l' type64='i'/>
<arg declared_type='SInt32' name='multiplier' type='l' type64='i'/>
<arg declared_type='wide*' name='target' type='^{wide=Ii}'/>
<retval declared_type='wide*' type='^{wide=Ii}'/>
</function>
<function name='WideNegate'>
<arg declared_type='wide*' name='target' type='^{wide=Ii}'/>
<retval declared_type='wide*' type='^{wide=Ii}'/>
</function>
<function name='WideShift'>
<arg declared_type='wide*' name='target' type='^{wide=Ii}'/>
<arg declared_type='SInt32' name='shift' type='l' type64='i'/>
<retval declared_type='wide*' type='^{wide=Ii}'/>
</function>
<function name='WideSquareRoot'>
<arg const='true' declared_type='wide*' name='source' type='^{wide=Ii}'/>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='WideSubtract'>
<arg declared_type='wide*' name='target' type='^{wide=Ii}'/>
<arg const='true' declared_type='wide*' name='source' type='^{wide=Ii}'/>
<retval declared_type='wide*' type='^{wide=Ii}'/>
</function>
<function inline='true' name='WideToSInt64'>
<arg declared_type='wide' name='w' type='{wide=Ii}'/>
<retval declared_type='SInt64' type='q'/>
</function>
<function name='WideWideDivide'>
<arg declared_type='wide*' name='dividend' type='^{wide=Ii}'/>
<arg declared_type='SInt32' name='divisor' type='l' type64='i'/>
<arg declared_type='SInt32*' name='remainder' type='^i'/>
<retval declared_type='wide*' type='^{wide=Ii}'/>
</function>
<function name='WritePartialResource'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<arg declared_type='long' name='offset' type='l' type64='q'/>
<arg const='true' declared_type='void*' name='buffer' type='^v'/>
<arg declared_type='long' name='count' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WriteResource'>
<arg declared_type='Handle' name='theResource' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='X2Fix'>
<arg declared_type='double' name='x' type='d'/>
<retval declared_type='Fixed' type='l' type64='i'/>
</function>
<function name='X2Frac'>
<arg declared_type='double' name='x' type='d'/>
<retval declared_type='Fract' type='l' type64='i'/>
</function>
<function name='YieldToAnyThread'>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='YieldToThread'>
<arg declared_type='ThreadID' name='suggestedThread' type='L' type64='Q'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='annuity'>
<arg declared_type='double' name='rate' type='d'/>
<arg declared_type='double' name='periods' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='compound'>
<arg declared_type='double' name='rate' type='d'/>
<arg declared_type='double' name='periods' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='dec2f'>
<arg const='true' declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='dec2l'>
<arg const='true' declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='dec2num'>
<arg const='true' declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type='double_t' type='d'/>
</function>
<function name='dec2numl'>
<arg const='true' declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type='long double' type='D'/>
</function>
<function name='dec2s'>
<arg const='true' declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type='short' type='s'/>
</function>
<function name='dec2str'>
<arg const='true' declared_type='decform*' name='f' type='^{decform=ccs}'/>
<arg const='true' declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<arg declared_type='char*' name='s' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='dtox80'>
<arg const='true' declared_type='double*' name='x' type='^d'/>
<arg declared_type='extended80*' name='x80' type='^{Float80=s[4S]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='ldtox80'>
<arg const='true' declared_type='long double*' name='x' type='^D'/>
<arg declared_type='extended80*' name='x80' type='^{Float80=s[4S]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='num2dec'>
<arg const='true' declared_type='decform*' name='f' type='^{decform=ccs}'/>
<arg declared_type='double_t' name='x' type='d'/>
<arg declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='num2decl'>
<arg const='true' declared_type='decform*' name='f' type='^{decform=ccs}'/>
<arg declared_type='long double' name='x' type='D'/>
<arg declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='numtostring'>
<arg declared_type='long' name='theNum' type='l' type64='q'/>
<arg declared_type='char*' name='theString' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='randomx'>
<arg declared_type='double_t*' name='x' type='^d'/>
<retval declared_type='double_t' type='d'/>
</function>
<function name='relation'>
<arg declared_type='double_t' name='x' type='d'/>
<arg declared_type='double_t' name='y' type='d'/>
<retval declared_type='relop' type='s'/>
</function>
<function name='relationl'>
<arg declared_type='long double' name='x' type='D'/>
<arg declared_type='long double' name='y' type='D'/>
<retval declared_type='relop' type='s'/>
</function>
<function name='str2dec'>
<arg const='true' declared_type='char*' name='s' type='*'/>
<arg declared_type='short*' name='ix' type='^s'/>
<arg declared_type='decimal*' name='d' type='^{decimal=ccs{?=C[36C]C}}'/>
<arg declared_type='short*' name='vp' type='^s'/>
<retval declared_type='void' type='v'/>
</function>
<function name='x80tod'>
<arg const='true' declared_type='extended80*' name='x80' type='^{Float80=s[4S]}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='x80told'>
<arg const='true' declared_type='extended80*' name='x80' type='^{Float80=s[4S]}'/>
<arg declared_type='long double*' name='x' type='^D'/>
<retval declared_type='void' type='v'/>
</function>
<function_alias name='MacGetCurrentThread' original='GetCurrentThread'/>
<function_alias name='MacLoadResource' original='LoadResource'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<cftype name='DCSDictionaryRef' type='^{__DCSDictionary=}'/>
<function name='DCSCopyTextDefinition'>
<arg declared_type='DCSDictionaryRef' name='dictionary' type='^{__DCSDictionary=}'/>
<arg declared_type='CFStringRef' name='textString' type='^{__CFString=}'/>
<arg declared_type='CFRange' name='range' type='{_CFRange=ii}' type64='{_CFRange=qq}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='DCSGetTermRangeInString'>
<arg declared_type='DCSDictionaryRef' name='dictionary' type='^{__DCSDictionary=}'/>
<arg declared_type='CFStringRef' name='textString' type='^{__CFString=}'/>
<arg declared_type='CFIndex' name='offset' type='l' type64='q'/>
<retval declared_type='CFRange' type='{_CFRange=ii}' type64='{_CFRange=qq}'/>
</function>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<struct name='FSEventStreamContext' type='{FSEventStreamContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{FSEventStreamContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='CFAllocatorRetainCallBack' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='CFAllocatorReleaseCallBack' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
</struct>
<cftype name='ConstFSEventStreamRef' type='^{__FSEventStream=}'/>
<cftype name='FSEventStreamRef' type='^{__FSEventStream=}'/>
<enum name='kFSEventStreamCreateFlagFileEvents' value='16'/>
<enum name='kFSEventStreamCreateFlagIgnoreSelf' value='8'/>
<enum name='kFSEventStreamCreateFlagMarkSelf' value='32'/>
<enum name='kFSEventStreamCreateFlagNoDefer' value='2'/>
<enum name='kFSEventStreamCreateFlagNone' value='0'/>
<enum name='kFSEventStreamCreateFlagUseCFTypes' value='1'/>
<enum name='kFSEventStreamCreateFlagWatchRoot' value='4'/>
<enum name='kFSEventStreamEventFlagEventIdsWrapped' value='8'/>
<enum name='kFSEventStreamEventFlagHistoryDone' value='16'/>
<enum name='kFSEventStreamEventFlagItemChangeOwner' value='16384'/>
<enum name='kFSEventStreamEventFlagItemCreated' value='256'/>
<enum name='kFSEventStreamEventFlagItemFinderInfoMod' value='8192'/>
<enum name='kFSEventStreamEventFlagItemInodeMetaMod' value='1024'/>
<enum name='kFSEventStreamEventFlagItemIsDir' value='131072'/>
<enum name='kFSEventStreamEventFlagItemIsFile' value='65536'/>
<enum name='kFSEventStreamEventFlagItemIsSymlink' value='262144'/>
<enum name='kFSEventStreamEventFlagItemModified' value='4096'/>
<enum name='kFSEventStreamEventFlagItemRemoved' value='512'/>
<enum name='kFSEventStreamEventFlagItemRenamed' value='2048'/>
<enum name='kFSEventStreamEventFlagItemXattrMod' value='32768'/>
<enum name='kFSEventStreamEventFlagKernelDropped' value='4'/>
<enum name='kFSEventStreamEventFlagMount' value='64'/>
<enum name='kFSEventStreamEventFlagMustScanSubDirs' value='1'/>
<enum name='kFSEventStreamEventFlagNone' value='0'/>
<enum name='kFSEventStreamEventFlagOwnEvent' value='524288'/>
<enum name='kFSEventStreamEventFlagRootChanged' value='32'/>
<enum name='kFSEventStreamEventFlagUnmount' value='128'/>
<enum name='kFSEventStreamEventFlagUserDropped' value='2'/>
<enum name='kFSEventStreamEventIdSinceNow' value='18446744073709551615'/>
<function name='FSEventStreamCopyDescription'>
<arg declared_type='ConstFSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='FSEventStreamCopyPathsBeingWatched'>
<arg declared_type='ConstFSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='FSEventStreamCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='FSEventStreamCallback' function_pointer='true' name='callback' type='^?'>
<arg declared_type='ConstFSEventStreamRef' type='^{__FSEventStream=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='size_t' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='FSEventStreamEventFlags*' type='^I'/>
<arg const='true' declared_type='FSEventStreamEventId*' type='^Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='FSEventStreamContext*' name='context' type='^{FSEventStreamContext=i^v^?^?^?}' type64='^{FSEventStreamContext=q^v^?^?^?}'/>
<arg declared_type='CFArrayRef' name='pathsToWatch' type='^{__CFArray=}'/>
<arg declared_type='FSEventStreamEventId' name='sinceWhen' type='Q'/>
<arg declared_type='CFTimeInterval' name='latency' type='d'/>
<arg declared_type='FSEventStreamCreateFlags' name='flags' type='L' type64='I'/>
<retval already_retained='true' declared_type='FSEventStreamRef' type='^{__FSEventStream=}'/>
</function>
<function name='FSEventStreamCreateRelativeToDevice'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='FSEventStreamCallback' function_pointer='true' name='callback' type='^?'>
<arg declared_type='ConstFSEventStreamRef' type='^{__FSEventStream=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='size_t' type='L' type64='Q'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='FSEventStreamEventFlags*' type='^I'/>
<arg const='true' declared_type='FSEventStreamEventId*' type='^Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='FSEventStreamContext*' name='context' type='^{FSEventStreamContext=i^v^?^?^?}' type64='^{FSEventStreamContext=q^v^?^?^?}'/>
<arg declared_type='dev_t' name='deviceToWatch' type='i'/>
<arg declared_type='CFArrayRef' name='pathsToWatchRelativeToDevice' type='^{__CFArray=}'/>
<arg declared_type='FSEventStreamEventId' name='sinceWhen' type='Q'/>
<arg declared_type='CFTimeInterval' name='latency' type='d'/>
<arg declared_type='FSEventStreamCreateFlags' name='flags' type='L' type64='I'/>
<retval already_retained='true' declared_type='FSEventStreamRef' type='^{__FSEventStream=}'/>
</function>
<function name='FSEventStreamFlushAsync'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='FSEventStreamEventId' type='Q'/>
</function>
<function name='FSEventStreamFlushSync'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventStreamGetDeviceBeingWatched'>
<arg declared_type='ConstFSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='dev_t' type='i'/>
</function>
<function name='FSEventStreamGetLatestEventId'>
<arg declared_type='ConstFSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='FSEventStreamEventId' type='Q'/>
</function>
<function name='FSEventStreamInvalidate'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventStreamRelease'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventStreamRetain'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventStreamScheduleWithRunLoop'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventStreamSetDispatchQueue'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<arg declared_type='dispatch_queue_t' name='q' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventStreamSetExclusionPaths'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<arg declared_type='CFArrayRef' name='pathsToExclude' type='^{__CFArray=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='FSEventStreamShow'>
<arg declared_type='ConstFSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventStreamStart'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='FSEventStreamStop'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventStreamUnscheduleFromRunLoop'>
<arg declared_type='FSEventStreamRef' name='streamRef' type='^{__FSEventStream=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='FSEventsCopyUUIDForDevice'>
<arg declared_type='dev_t' name='dev' type='i'/>
<retval already_retained='true' declared_type='CFUUIDRef' type='^{__CFUUID=}'/>
</function>
<function name='FSEventsGetCurrentEventId'>
<retval declared_type='FSEventStreamEventId' type='Q'/>
</function>
<function name='FSEventsGetLastEventIdForDeviceBeforeTime'>
<arg declared_type='dev_t' name='dev' type='i'/>
<arg declared_type='CFAbsoluteTime' name='time' type='d'/>
<retval declared_type='FSEventStreamEventId' type='Q'/>
</function>
<function name='FSEventsPurgeEventsForDeviceUpToEventId'>
<arg declared_type='dev_t' name='dev' type='i'/>
<arg declared_type='FSEventStreamEventId' name='eventId' type='Q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework'/>
<depends_on path='/System/Library/Frameworks/ServiceManagement.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<struct name='LSApplicationParameters' type='{LSApplicationParameters=&quot;version&quot;i&quot;flags&quot;I&quot;application&quot;^{FSRef}&quot;asyncLaunchRefCon&quot;^v&quot;environment&quot;^{__CFDictionary}&quot;argv&quot;^{__CFArray}&quot;initialEvent&quot;^{AEDesc}}' type64='{LSApplicationParameters=&quot;version&quot;q&quot;flags&quot;I&quot;application&quot;^{FSRef}&quot;asyncLaunchRefCon&quot;^v&quot;environment&quot;^{__CFDictionary}&quot;argv&quot;^{__CFArray}&quot;initialEvent&quot;^{AEDesc}}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='LSLaunchFlags' name='flags' type='L' type64='I'/>
<field const='true' declared_type='FSRef*' name='application' type='^{FSRef=[80C]}'/>
<field declared_type='void*' name='asyncLaunchRefCon' type='^v'/>
<field declared_type='CFDictionaryRef' name='environment' type='^{__CFDictionary=}'/>
<field declared_type='CFArrayRef' name='argv' type='^{__CFArray=}'/>
<field declared_type='AppleEvent*' name='initialEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
</struct>
<struct name='LSItemInfoRecord' type='{LSItemInfoRecord=&quot;flags&quot;I&quot;filetype&quot;I&quot;creator&quot;I&quot;extension&quot;^{__CFString}&quot;iconFileName&quot;^{__CFString}&quot;kindID&quot;I}' type64='{LSItemInfoRecord=&quot;flags&quot;I&quot;filetype&quot;I&quot;creator&quot;I&quot;extension&quot;^{__CFString}}'>
<field declared_type='LSItemInfoFlags' name='flags' type='L' type64='I'/>
<field declared_type='OSType' name='filetype' type='L' type64='I'/>
<field declared_type='OSType' name='creator' type='L' type64='I'/>
<field declared_type='CFStringRef' name='extension' type='^{__CFString=}'/>
<field declared_type='CFStringRef' name='iconFileName' type='^{__CFString=}'/>
<field declared_type='LSKindID' name='kindID' type='L'/>
</struct>
<struct name='LSLaunchFSRefSpec' type='{LSLaunchFSRefSpec=&quot;appRef&quot;^{FSRef}&quot;numDocs&quot;I&quot;itemRefs&quot;^{FSRef}&quot;passThruParams&quot;^{AEDesc}&quot;launchFlags&quot;I&quot;asyncRefCon&quot;^v}' type64='{LSLaunchFSRefSpec=&quot;appRef&quot;^{FSRef}&quot;numDocs&quot;Q&quot;itemRefs&quot;^{FSRef}&quot;passThruParams&quot;^{AEDesc}&quot;launchFlags&quot;I&quot;asyncRefCon&quot;^v}'>
<field const='true' declared_type='FSRef*' name='appRef' type='^{FSRef=[80C]}'/>
<field declared_type='ItemCount' name='numDocs' type='L' type64='Q'/>
<field const='true' declared_type='FSRef*' name='itemRefs' type='^{FSRef=[80C]}'/>
<field const='true' declared_type='AEDesc*' name='passThruParams' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<field declared_type='LSLaunchFlags' name='launchFlags' type='L' type64='I'/>
<field declared_type='void*' name='asyncRefCon' type='^v'/>
</struct>
<struct name='LSLaunchURLSpec' type='{LSLaunchURLSpec=&quot;appURL&quot;^{__CFURL}&quot;itemURLs&quot;^{__CFArray}&quot;passThruParams&quot;^{AEDesc}&quot;launchFlags&quot;I&quot;asyncRefCon&quot;^v}'>
<field declared_type='CFURLRef' name='appURL' type='^{__CFURL=}'/>
<field declared_type='CFArrayRef' name='itemURLs' type='^{__CFArray=}'/>
<field const='true' declared_type='AEDesc*' name='passThruParams' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<field declared_type='LSLaunchFlags' name='launchFlags' type='L' type64='I'/>
<field declared_type='void*' name='asyncRefCon' type='^v'/>
</struct>
<cftype gettypeid_func='LSSharedFileListItemGetTypeID' name='LSSharedFileListItemRef' type='^{OpaqueLSSharedFileListItemRef=}'/>
<cftype gettypeid_func='LSSharedFileListGetTypeID' name='LSSharedFileListRef' type='^{OpaqueLSSharedFileListRef=}'/>
<cftype name='IconRef' type='^{OpaqueIconRef=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemContentType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemDisplayKind' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemDisplayName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemExtension' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemExtensionIsHidden' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemFileCreator' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemFileType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemIsInvisible' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemQuarantineProperties' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSItemRoleHandlerDisplayName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineAgentBundleIdentifierKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineAgentNameKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineDataURLKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineOriginURLKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineTimeStampKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineTypeCalendarEventAttachment' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineTypeEmailAttachment' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineTypeInstantMessageAttachment' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineTypeKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineTypeOtherAttachment' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineTypeOtherDownload' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kLSQuarantineTypeWebDownload' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListFavoriteItems' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListFavoriteVolumes' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListGlobalLoginItems' type='^{__CFString=}'/>
<constant declared_type='LSSharedFileListItemRef' name='kLSSharedFileListItemBeforeFirst' type='^{OpaqueLSSharedFileListItemRef=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListItemHidden' type='^{__CFString=}'/>
<constant declared_type='LSSharedFileListItemRef' name='kLSSharedFileListItemLast' type='^{OpaqueLSSharedFileListItemRef=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListLoginItemHidden' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListRecentApplicationItems' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListRecentDocumentItems' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListRecentItemsMaxAmount' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListRecentServerItems' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListSessionLoginItems' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListVolumesComputerVisible' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListVolumesIDiskVisible' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kLSSharedFileListVolumesNetworkVisible' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTExportedTypeDeclarationsKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTImportedTypeDeclarationsKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTagClassFilenameExtension' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTagClassMIMEType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTagClassNSPboardType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTagClassOSType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTType3DContent' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAVIMovie' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAliasFile' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAliasRecord' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAppleICNS' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAppleProtectedMPEG4Audio' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAppleProtectedMPEG4Video' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAppleScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeApplication' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeApplicationBundle' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeApplicationFile' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeArchive' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAssemblyLanguageSource' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAudio' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAudioInterchangeFileFormat' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeAudiovisualContent' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeBMP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeBinaryPropertyList' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeBookmark' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeBundle' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeBzip2Archive' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeCHeader' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeCPlusPlusHeader' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeCPlusPlusSource' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeCSource' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeCalendarEvent' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeCommaSeparatedText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeCompositeContent' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeConformsToKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeContact' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeContent' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeData' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeDatabase' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeDelimitedText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeDescriptionKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeDirectory' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeDiskImage' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeElectronicPublication' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeEmailMessage' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeExecutable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeFileURL' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeFlatRTFD' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeFolder' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeFont' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeFramework' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeGIF' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeGNUZipArchive' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeHTML' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeICO' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeIconFileKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeIdentifierKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeImage' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeInkText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeInternetLocation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeItem' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeJPEG' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeJPEG2000' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeJSON' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeJavaArchive' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeJavaClass' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeJavaScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeJavaSource' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeLog' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeM3UPlaylist' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMIDIAudio' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMP3' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMPEG' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMPEG2TransportStream' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMPEG2Video' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMPEG4' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMPEG4Audio' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMessage' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMountPoint' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeMovie' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeOSAScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeOSAScriptBundle' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeObjectiveCPlusPlusSource' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeObjectiveCSource' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePDF' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePHPScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePICT' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePKCS12' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePNG' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePackage' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePerlScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePlainText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePlaylist' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePluginBundle' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePresentation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePropertyList' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypePythonScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeQuickLookGenerator' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeQuickTimeImage' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeQuickTimeMovie' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeRTF' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeRTFD' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeRawImage' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeReferenceURLKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeResolvable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeRubyScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeScalableVectorGraphics' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeShellScript' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeSourceCode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeSpotlightImporter' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeSpreadsheet' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeSymLink' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeSystemPreferencesPane' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeTIFF' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeTXNTextAndMultimediaData' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeTabSeparatedText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeTagSpecificationKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeToDoItem' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeURL' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeURLBookmarkData' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeUTF16ExternalPlainText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeUTF16PlainText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeUTF8PlainText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeUTF8TabSeparatedText' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeUnixExecutable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeVCard' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeVersionKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeVideo' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeVolume' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeWaveformAudio' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeWebArchive' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeWindowsExecutable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeX509Certificate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeXML' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeXMLPropertyList' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeXPCService' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kUTTypeZipArchive' type='^{__CFString=}'/>
<enum name='appleMenuFolderIconResource' value='-3982'/>
<enum name='controlPanelFolderIconResource' value='-3976'/>
<enum name='desktopIconResource' value='-3992'/>
<enum name='dropFolderIconResource' value='-3979'/>
<enum name='extensionsFolderIconResource' value='-3973'/>
<enum name='floppyIconResource' value='-3998'/>
<enum name='fontsFolderIconResource' value='-3968'/>
<enum name='fullTrashIconResource' value='-3984'/>
<enum name='genericApplicationIconResource' value='-3996'/>
<enum name='genericCDROMIconResource' value='-3987'/>
<enum name='genericDeskAccessoryIconResource' value='-3991'/>
<enum name='genericDocumentIconResource' value='-4000'/>
<enum name='genericEditionFileIconResource' value='-3989'/>
<enum name='genericExtensionIconResource' value='-16415'/>
<enum name='genericFileServerIconResource' value='-3972'/>
<enum name='genericFolderIconResource' value='-3999'/>
<enum name='genericHardDiskIconResource' value='-3995'/>
<enum name='genericMoverObjectIconResource' value='-3969'/>
<enum name='genericPreferencesIconResource' value='-3971'/>
<enum name='genericQueryDocumentIconResource' value='-16506'/>
<enum name='genericRAMDiskIconResource' value='-3988'/>
<enum name='genericStationeryIconResource' value='-3985'/>
<enum name='genericSuitcaseIconResource' value='-3970'/>
<enum name='kAFPServerIcon' value='1634103411'/>
<enum name='kAlertCautionBadgeIcon' value='1667392615'/>
<enum name='kAlertCautionIcon' value='1667331444'/>
<enum name='kAlertNoteIcon' value='1852798053'/>
<enum name='kAlertStopIcon' value='1937010544'/>
<enum name='kAliasBadgeIcon' value='1633838183'/>
<enum name='kAppearanceFolderIcon' value='1634758770'/>
<enum name='kAppleExtrasFolderIcon' value='1634040004'/>
<enum name='kAppleLogoIcon' value='1667330156'/>
<enum name='kAppleMenuFolderIcon' value='1634561653'/>
<enum name='kAppleMenuFolderIconResource' value='-3982'/>
<enum name='kAppleMenuIcon' value='1935765612'/>
<enum name='kAppleScriptBadgeIcon' value='1935897200'/>
<enum name='kAppleTalkIcon' value='1635019883'/>
<enum name='kAppleTalkZoneIcon' value='1635023470'/>
<enum name='kApplicationSupportFolderIcon' value='1634956656'/>
<enum name='kApplicationsFolderIcon' value='1634758771'/>
<enum name='kAssistantsFolderIcon' value='1634956484'/>
<enum name='kBackwardArrowIcon' value='1650553455'/>
<enum name='kBurningIcon' value='1651864174'/>
<enum name='kClipboardIcon' value='1129072976'/>
<enum name='kClippingPictureTypeIcon' value='1668051056'/>
<enum name='kClippingSoundTypeIcon' value='1668051059'/>
<enum name='kClippingTextTypeIcon' value='1668051060'/>
<enum name='kClippingUnknownTypeIcon' value='1668051061'/>
<enum name='kColorSyncFolderIcon' value='1886547814'/>
<enum name='kComputerIcon' value='1919905652'/>
<enum name='kConnectToIcon' value='1668178804'/>
<enum name='kContextualMenuItemsFolderIcon' value='1668116085'/>
<enum name='kControlPanelDisabledFolderIcon' value='1668575812'/>
<enum name='kControlPanelFolderIcon' value='1668575852'/>
<enum name='kControlPanelFolderIconResource' value='-3976'/>
<enum name='kControlStripModulesFolderIcon' value='1935963844'/>
<enum name='kDeleteAliasIcon' value='1684106345'/>
<enum name='kDesktopIcon' value='1684370283'/>
<enum name='kDesktopIconResource' value='-3992'/>
<enum name='kDocumentsFolderIcon' value='1685021555'/>
<enum name='kDropFolderIcon' value='1684172664'/>
<enum name='kDropFolderIconResource' value='-3979'/>
<enum name='kEjectMediaIcon' value='1701471587'/>
<enum name='kExtensionsDisabledFolderIcon' value='1702392900'/>
<enum name='kExtensionsFolderIcon' value='1702392942'/>
<enum name='kExtensionsFolderIconResource' value='-3973'/>
<enum name='kFTPServerIcon' value='1718906995'/>
<enum name='kFavoriteItemsIcon' value='1717663346'/>
<enum name='kFavoritesFolderIcon' value='1717663347'/>
<enum name='kFinderIcon' value='1179534418'/>
<enum name='kFloppyIconResource' value='-3998'/>
<enum name='kFontSuitcaseIcon' value='1179011404'/>
<enum name='kFontsFolderIcon' value='1718578804'/>
<enum name='kFontsFolderIconResource' value='-3968'/>
<enum name='kForwardArrowIcon' value='1717662319'/>
<enum name='kFullTrashIcon' value='1718907496'/>
<enum name='kFullTrashIconResource' value='-3984'/>
<enum name='kGenericApplicationIcon' value='1095782476'/>
<enum name='kGenericApplicationIconResource' value='-3996'/>
<enum name='kGenericCDROMIcon' value='1667523698'/>
<enum name='kGenericCDROMIconResource' value='-3987'/>
<enum name='kGenericComponentIcon' value='1953001063'/>
<enum name='kGenericControlPanelIcon' value='1095782467'/>
<enum name='kGenericControlStripModuleIcon' value='1935959414'/>
<enum name='kGenericDeskAccessoryIcon' value='1095782468'/>
<enum name='kGenericDeskAccessoryIconResource' value='-3991'/>
<enum name='kGenericDocumentIcon' value='1685021557'/>
<enum name='kGenericDocumentIconResource' value='-4000'/>
<enum name='kGenericEditionFileIcon' value='1701082214'/>
<enum name='kGenericEditionFileIconResource' value='-3989'/>
<enum name='kGenericExtensionIcon' value='1229867348'/>
<enum name='kGenericExtensionIconResource' value='-16415'/>
<enum name='kGenericFileServerIcon' value='1936881266'/>
<enum name='kGenericFileServerIconResource' value='-3972'/>
<enum name='kGenericFloppyIcon' value='1718382713'/>
<enum name='kGenericFolderIcon' value='1718379634'/>
<enum name='kGenericFolderIconResource' value='-3999'/>
<enum name='kGenericFontIcon' value='1717987692'/>
<enum name='kGenericFontScalerIcon' value='1935895666'/>
<enum name='kGenericHardDiskIcon' value='1751413611'/>
<enum name='kGenericHardDiskIconResource' value='-3995'/>
<enum name='kGenericIDiskIcon' value='1768190827'/>
<enum name='kGenericMoverObjectIcon' value='1836021362'/>
<enum name='kGenericMoverObjectIconResource' value='-3969'/>
<enum name='kGenericNetworkIcon' value='1735288180'/>
<enum name='kGenericPCCardIcon' value='1885564259'/>
<enum name='kGenericPreferencesIcon' value='1886545254'/>
<enum name='kGenericPreferencesIconResource' value='-3971'/>
<enum name='kGenericQueryDocumentIcon' value='1902473849'/>
<enum name='kGenericQueryDocumentIconResource' value='-16506'/>
<enum name='kGenericRAMDiskIcon' value='1918987620'/>
<enum name='kGenericRAMDiskIconResource' value='-3988'/>
<enum name='kGenericRemovableMediaIcon' value='1919774582'/>
<enum name='kGenericSharedLibaryIcon' value='1936223330'/>
<enum name='kGenericStationeryIcon' value='1935961955'/>
<enum name='kGenericStationeryIconResource' value='-3985'/>
<enum name='kGenericSuitcaseIcon' value='1937074548'/>
<enum name='kGenericSuitcaseIconResource' value='-3970'/>
<enum name='kGenericURLIcon' value='1735750252'/>
<enum name='kGenericWORMIcon' value='2003792493'/>
<enum name='kGenericWindowIcon' value='1735879022'/>
<enum name='kGridIcon' value='1735551332'/>
<enum name='kGroupIcon' value='1735554416'/>
<enum name='kGuestUserIcon' value='1735750514'/>
<enum name='kHTTPServerIcon' value='1752461427'/>
<enum name='kHelpFolderIcon' value='-999789456'/>
<enum name='kHelpIcon' value='1751477360'/>
<enum name='kHelpIconResource' value='-20271'/>
<enum name='kIPFileServerIcon' value='1769173622'/>
<enum name='kIconServicesCatalogInfoMask' value='531550'/>
<enum name='kIconServicesNoBadgeFlag' value='1'/>
<enum name='kIconServicesNormalUsageFlag' value='0'/>
<enum name='kIconServicesUpdateIfNeededFlag' value='2'/>
<enum name='kInternationResourcesIcon' value='1768319340'/>
<enum name='kInternationalResourcesIcon' value='1768319340'/>
<enum name='kInternetFolderIcon' value='1768846532'/>
<enum name='kInternetLocationAppleShareIcon' value='1768710502'/>
<enum name='kInternetLocationAppleTalkZoneIcon' value='1768710516'/>
<enum name='kInternetLocationFTPIcon' value='1768711796'/>
<enum name='kInternetLocationFileIcon' value='1768711785'/>
<enum name='kInternetLocationGenericIcon' value='1768712037'/>
<enum name='kInternetLocationHTTPIcon' value='1768712308'/>
<enum name='kInternetLocationMailIcon' value='1768713569'/>
<enum name='kInternetLocationNSLNeighborhoodIcon' value='1768713843'/>
<enum name='kInternetLocationNewsIcon' value='1768713847'/>
<enum name='kInternetPlugInFolderIcon' value='-999398028'/>
<enum name='kInternetSearchSitesFolderIcon' value='1769173862'/>
<enum name='kKeepArrangedIcon' value='1634889319'/>
<enum name='kKeyboardLayoutIcon' value='1801873772'/>
<enum name='kLSAcceptAllowLoginUI' value='2'/>
<enum name='kLSAcceptDefault' value='1'/>
<enum name='kLSAppDoesNotClaimTypeErr' value='-10820'/>
<enum name='kLSAppDoesNotSupportSchemeWarning' value='-10821'/>
<enum name='kLSAppInTrashErr' value='-10660'/>
<enum name='kLSApplicationNotFoundErr' value='-10814'/>
<enum name='kLSAttributeNotFoundErr' value='-10662'/>
<enum name='kLSAttributeNotSettableErr' value='-10663'/>
<enum name='kLSCannotSetInfoErr' value='-10823'/>
<enum name='kLSDataErr' value='-10817'/>
<enum name='kLSDataTooOldErr' value='-10816'/>
<enum name='kLSDataUnavailableErr' value='-10813'/>
<enum name='kLSExecutableIncorrectFormat' value='-10661'/>
<enum name='kLSHandlerOptionsDefault' value='0'/>
<enum name='kLSHandlerOptionsIgnoreCreator' value='1'/>
<enum name='kLSIncompatibleApplicationVersionErr' value='-10664'/>
<enum name='kLSIncompatibleSystemVersionErr' value='-10825'/>
<enum name='kLSInitializeDefaults' value='1'/>
<enum name='kLSInvalidExtensionIndex' value='4294967295' value64='18446744073709551615'/>
<enum name='kLSItemInfoAppIsScriptable' value='2048'/>
<enum name='kLSItemInfoAppPrefersClassic' value='1024'/>
<enum name='kLSItemInfoAppPrefersNative' value='512'/>
<enum name='kLSItemInfoExtensionIsHidden' value='1048576'/>
<enum name='kLSItemInfoIsAliasFile' value='16'/>
<enum name='kLSItemInfoIsApplication' value='4'/>
<enum name='kLSItemInfoIsClassicApp' value='256'/>
<enum name='kLSItemInfoIsContainer' value='8'/>
<enum name='kLSItemInfoIsInvisible' value='64'/>
<enum name='kLSItemInfoIsNativeApp' value='128'/>
<enum name='kLSItemInfoIsPackage' value='2'/>
<enum name='kLSItemInfoIsPlainFile' value='1'/>
<enum name='kLSItemInfoIsSymlink' value='32'/>
<enum name='kLSItemInfoIsVolume' value='4096'/>
<enum name='kLSLaunchAndDisplayErrors' value='64'/>
<enum name='kLSLaunchAndHide' value='1048576'/>
<enum name='kLSLaunchAndHideOthers' value='2097152'/>
<enum name='kLSLaunchAndPrint' value='2'/>
<enum name='kLSLaunchAsync' value='65536'/>
<enum name='kLSLaunchDefaults' value='1'/>
<enum name='kLSLaunchDontAddToRecents' value='256'/>
<enum name='kLSLaunchDontSwitch' value='512'/>
<enum name='kLSLaunchHasUntrustedContents' value='4194304'/>
<enum name='kLSLaunchInClassic' value='262144'/>
<enum name='kLSLaunchInProgressErr' value='-10818'/>
<enum name='kLSLaunchInhibitBGOnly' value='128'/>
<enum name='kLSLaunchNewInstance' value='524288'/>
<enum name='kLSLaunchNoParams' value='2048'/>
<enum name='kLSLaunchReserved2' value='4'/>
<enum name='kLSLaunchReserved3' value='8'/>
<enum name='kLSLaunchReserved4' value='16'/>
<enum name='kLSLaunchReserved5' value='32'/>
<enum name='kLSLaunchStartClassic' value='131072'/>
<enum name='kLSMinCatInfoBitmap' value='6154'/>
<enum name='kLSMultipleSessionsNotSupportedErr' value='-10829'/>
<enum name='kLSNoClassicEnvironmentErr' value='-10828'/>
<enum name='kLSNoExecutableErr' value='-10827'/>
<enum name='kLSNoLaunchPermissionErr' value='-10826'/>
<enum name='kLSNoRegistrationInfoErr' value='-10824'/>
<enum name='kLSNoRosettaEnvironmentErr' value='-10665'/>
<enum name='kLSNotAnApplicationErr' value='-10811'/>
<enum name='kLSNotInitializedErr' value='-10812'/>
<enum name='kLSNotRegisteredErr' value='-10819'/>
<enum name='kLSRequestAllFlags' value='16'/>
<enum name='kLSRequestAllInfo' value='4294967295'/>
<enum name='kLSRequestAppTypeFlags' value='8'/>
<enum name='kLSRequestBasicFlagsOnly' value='4'/>
<enum name='kLSRequestExtension' value='1'/>
<enum name='kLSRequestExtensionFlagsOnly' value='64'/>
<enum name='kLSRequestIconAndKind' value='32'/>
<enum name='kLSRequestTypeCreator' value='2'/>
<enum name='kLSRolesAll' value='4294967295'/>
<enum name='kLSRolesEditor' value='4'/>
<enum name='kLSRolesNone' value='1'/>
<enum name='kLSRolesShell' value='8'/>
<enum name='kLSRolesViewer' value='2'/>
<enum name='kLSServerCommunicationErr' value='-10822'/>
<enum name='kLSSharedFileListDoNotMountVolumes' value='2'/>
<enum name='kLSSharedFileListNoUserInteraction' value='1'/>
<enum name='kLSUnknownCreator' value='0'/>
<enum name='kLSUnknownErr' value='-10810'/>
<enum name='kLSUnknownType' value='0'/>
<enum name='kLSUnknownTypeErr' value='-10815'/>
<enum name='kLocalesFolderIcon' value='-999526557'/>
<enum name='kLockedBadgeIcon' value='1818387559'/>
<enum name='kLockedIcon' value='1819239275'/>
<enum name='kMacOSReadMeFolderIcon' value='1836020420'/>
<enum name='kMountedBadgeIcon' value='1835164775'/>
<enum name='kMountedFolderIcon' value='1835955300'/>
<enum name='kMountedFolderIconResource' value='-3977'/>
<enum name='kNoFilesIcon' value='1852205420'/>
<enum name='kNoFolderIcon' value='1852206180'/>
<enum name='kNoWriteIcon' value='1853321844'/>
<enum name='kOpenFolderIcon' value='1868983396'/>
<enum name='kOpenFolderIconResource' value='-3997'/>
<enum name='kOwnedFolderIcon' value='1870098020'/>
<enum name='kOwnedFolderIconResource' value='-3980'/>
<enum name='kOwnerIcon' value='1937077106'/>
<enum name='kPreferencesFolderIcon' value='1886545604'/>
<enum name='kPreferencesFolderIconResource' value='-3974'/>
<enum name='kPrintMonitorFolderIcon' value='1886547572'/>
<enum name='kPrintMonitorFolderIconResource' value='-3975'/>
<enum name='kPrinterDescriptionFolderIcon' value='1886413926'/>
<enum name='kPrinterDriverFolderIcon' value='-999263644'/>
<enum name='kPrivateFolderIcon' value='1886549606'/>
<enum name='kPrivateFolderIconResource' value='-3994'/>
<enum name='kProtectedApplicationFolderIcon' value='1885433968'/>
<enum name='kProtectedSystemFolderIcon' value='1886615923'/>
<enum name='kPublicFolderIcon' value='1886741094'/>
<enum name='kQuestionMarkIcon' value='1903519091'/>
<enum name='kRecentApplicationsFolderIcon' value='1918988400'/>
<enum name='kRecentDocumentsFolderIcon' value='1919184739'/>
<enum name='kRecentItemsIcon' value='1919118964'/>
<enum name='kRecentServersFolderIcon' value='1920168566'/>
<enum name='kRightContainerArrowIcon' value='1919115634'/>
<enum name='kScriptingAdditionsFolderIcon' value='-999070862'/>
<enum name='kScriptsFolderIcon' value='1935897284'/>
<enum name='kSharedBadgeIcon' value='1935828071'/>
<enum name='kSharedFolderIcon' value='1936221804'/>
<enum name='kSharedFolderIconResource' value='-3978'/>
<enum name='kSharedLibrariesFolderIcon' value='-999528094'/>
<enum name='kSharingPrivsNotApplicableIcon' value='1936223841'/>
<enum name='kSharingPrivsReadOnlyIcon' value='1936224879'/>
<enum name='kSharingPrivsReadWriteIcon' value='1936224887'/>
<enum name='kSharingPrivsUnknownIcon' value='1936225643'/>
<enum name='kSharingPrivsWritableIcon' value='2003986804'/>
<enum name='kShortcutIcon' value='1936224884'/>
<enum name='kShutdownItemsDisabledFolderIcon' value='1936221252'/>
<enum name='kShutdownItemsFolderIcon' value='1936221286'/>
<enum name='kSortAscendingIcon' value='1634954852'/>
<enum name='kSortDescendingIcon' value='1685286500'/>
<enum name='kSoundFileIcon' value='1936091500'/>
<enum name='kSpeakableItemsFolder' value='1936747369'/>
<enum name='kStartupFolderIconResource' value='-3981'/>
<enum name='kStartupItemsDisabledFolderIcon' value='1937011268'/>
<enum name='kStartupItemsFolderIcon' value='1937011316'/>
<enum name='kSystemExtensionDisabledFolderIcon' value='1835098948'/>
<enum name='kSystemFolderIcon' value='1835098995'/>
<enum name='kSystemFolderIconResource' value='-3983'/>
<enum name='kSystemIconsCreator' value='1835098995'/>
<enum name='kSystemSuitcaseIcon' value='2054388083'/>
<enum name='kTextEncodingsFolderIcon' value='-999004808'/>
<enum name='kToolbarAdvancedIcon' value='1952604534'/>
<enum name='kToolbarApplicationsFolderIcon' value='1950445683'/>
<enum name='kToolbarCustomizeIcon' value='1952675187'/>
<enum name='kToolbarDeleteIcon' value='1952736620'/>
<enum name='kToolbarDesktopFolderIcon' value='1950643051'/>
<enum name='kToolbarDocumentsFolderIcon' value='1950642019'/>
<enum name='kToolbarDownloadsFolderIcon' value='1950644078'/>
<enum name='kToolbarFavoritesIcon' value='1952866678'/>
<enum name='kToolbarHomeIcon' value='1953001325'/>
<enum name='kToolbarInfoIcon' value='1952606574'/>
<enum name='kToolbarLabelsIcon' value='1952607330'/>
<enum name='kToolbarLibraryFolderIcon' value='1951164770'/>
<enum name='kToolbarMovieFolderIcon' value='1951231862'/>
<enum name='kToolbarMusicFolderIcon' value='1951233395'/>
<enum name='kToolbarPicturesFolderIcon' value='1951426915'/>
<enum name='kToolbarPublicFolderIcon' value='1951429986'/>
<enum name='kToolbarSitesFolderIcon' value='1951626355'/>
<enum name='kToolbarUtilitiesFolderIcon' value='1951757420'/>
<enum name='kTrashIcon' value='1953657704'/>
<enum name='kTrashIconResource' value='-3993'/>
<enum name='kTrueTypeFlatFontIcon' value='1936092788'/>
<enum name='kTrueTypeFontIcon' value='1952868716'/>
<enum name='kTrueTypeMultiFlatFontIcon' value='1953784678'/>
<enum name='kUnknownFSObjectIcon' value='1970169459'/>
<enum name='kUnlockedIcon' value='1970037611'/>
<enum name='kUserFolderIcon' value='1969646692'/>
<enum name='kUserIDiskIcon' value='1969517419'/>
<enum name='kUserIcon' value='1970496882'/>
<enum name='kUsersFolderIcon' value='1970500292'/>
<enum name='kUtilitiesFolderIcon' value='1970563524'/>
<enum name='kVoicesFolderIcon' value='1719037795'/>
<enum name='kWorkgroupFolderIcon' value='2003201124'/>
<enum name='mountedFolderIconResource' value='-3977'/>
<enum name='openFolderIconResource' value='-3997'/>
<enum name='ownedFolderIconResource' value='-3980'/>
<enum name='preferencesFolderIconResource' value='-3974'/>
<enum name='printMonitorFolderIconResource' value='-3975'/>
<enum name='privateFolderIconResource' value='-3994'/>
<enum name='sharedFolderIconResource' value='-3978'/>
<enum name='startupFolderIconResource' value='-3981'/>
<enum name='systemFolderIconResource' value='-3983'/>
<enum name='trashIconResource' value='-3993'/>
<function name='AcquireIconRef'>
<arg declared_type='IconRef' name='theIconRef' type='^{OpaqueIconRef=}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='CompositeIconRef'>
<arg declared_type='IconRef' name='backgroundIconRef' type='^{OpaqueIconRef=}'/>
<arg declared_type='IconRef' name='foregroundIconRef' type='^{OpaqueIconRef=}'/>
<arg declared_type='IconRef*' name='compositeIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetCustomIconsEnabled'>
<arg declared_type='SInt16' name='vRefNum' type='s'/>
<arg declared_type='Boolean*' name='customIconsEnabled' type='^B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetIconRef'>
<arg declared_type='SInt16' name='vRefNum' type='s'/>
<arg declared_type='OSType' name='creator' type='L' type64='I'/>
<arg declared_type='OSType' name='iconType' type='L' type64='I'/>
<arg declared_type='IconRef*' name='theIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetIconRefFromComponent'>
<arg declared_type='Component' name='inComponent' type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<arg declared_type='IconRef*' name='outIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetIconRefFromFileInfo'>
<arg const='true' declared_type='FSRef*' name='inRef' type='^{FSRef=[80C]}'/>
<arg declared_type='UniCharCount' name='inFileNameLength' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='inFileName' type='^S'/>
<arg declared_type='FSCatalogInfoBitmap' name='inWhichInfo' type='L' type64='I'/>
<arg const='true' declared_type='FSCatalogInfo*' name='inCatalogInfo' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}' type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}'/>
<arg declared_type='IconServicesUsageFlags' name='inUsageFlags' type='L' type64='I'/>
<arg declared_type='IconRef*' name='outIconRef' type='^^{OpaqueIconRef}'/>
<arg declared_type='SInt16*' name='outLabel' type='^s'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetIconRefFromFolder'>
<arg declared_type='SInt16' name='vRefNum' type='s'/>
<arg declared_type='SInt32' name='parentFolderID' type='l' type64='i'/>
<arg declared_type='SInt32' name='folderID' type='l' type64='i'/>
<arg declared_type='SInt8' name='attributes' type='c'/>
<arg declared_type='SInt8' name='accessPrivileges' type='c'/>
<arg declared_type='IconRef*' name='theIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetIconRefFromIconFamilyPtr'>
<arg const='true' declared_type='IconFamilyResource*' name='inIconFamilyPtr' type='^{IconFamilyResource=Ii[1{IconFamilyElement=Ii[1C]}]}'/>
<arg declared_type='Size' name='inSize' type='l' type64='q'/>
<arg declared_type='IconRef*' name='outIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetIconRefFromTypeInfo'>
<arg declared_type='OSType' name='inCreator' type='L' type64='I'/>
<arg declared_type='OSType' name='inType' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='inExtension' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inMIMEType' type='^{__CFString=}'/>
<arg declared_type='IconServicesUsageFlags' name='inUsageFlags' type='L' type64='I'/>
<arg declared_type='IconRef*' name='outIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='GetIconRefOwners'>
<arg declared_type='IconRef' name='theIconRef' type='^{OpaqueIconRef=}'/>
<arg declared_type='UInt16*' name='owners' type='^S'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='IsDataAvailableInIconRef'>
<arg declared_type='OSType' name='inIconKind' type='L' type64='I'/>
<arg declared_type='IconRef' name='inIconRef' type='^{OpaqueIconRef=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='IsIconRefComposite'>
<arg declared_type='IconRef' name='compositeIconRef' type='^{OpaqueIconRef=}'/>
<arg declared_type='IconRef*' name='backgroundIconRef' type='^^{OpaqueIconRef}'/>
<arg declared_type='IconRef*' name='foregroundIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='IsValidIconRef'>
<arg declared_type='IconRef' name='theIconRef' type='^{OpaqueIconRef=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='LSCanRefAcceptItem'>
<arg const='true' declared_type='FSRef*' name='inItemFSRef' type='^{FSRef=[80C]}'/>
<arg const='true' declared_type='FSRef*' name='inTargetRef' type='^{FSRef=[80C]}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<arg declared_type='LSAcceptanceFlags' name='inFlags' type='L' type64='I'/>
<arg declared_type='Boolean*' name='outAcceptsItem' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCanURLAcceptURL'>
<arg declared_type='CFURLRef' name='inItemURL' type='^{__CFURL=}'/>
<arg declared_type='CFURLRef' name='inTargetURL' type='^{__CFURL=}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<arg declared_type='LSAcceptanceFlags' name='inFlags' type='L' type64='I'/>
<arg declared_type='Boolean*' name='outAcceptsItem' type='^B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyAllHandlersForURLScheme'>
<arg declared_type='CFStringRef' name='inURLScheme' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='LSCopyAllRoleHandlersForContentType'>
<arg declared_type='CFStringRef' name='inContentType' type='^{__CFString=}'/>
<arg declared_type='LSRolesMask' name='inRole' type='L' type64='I'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='LSCopyApplicationForMIMEType'>
<arg declared_type='CFStringRef' name='inMIMEType' type='^{__CFString=}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<arg declared_type='CFURLRef*' name='outAppURL' type='^^{__CFURL}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyApplicationURLsForBundleIdentifier'>
<arg declared_type='CFStringRef' name='inBundleIdentifier' type='^{__CFString=}'/>
<arg declared_type='CFErrorRef*' name='outError' type='^^{__CFError}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='LSCopyApplicationURLsForURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='LSCopyDefaultApplicationURLForContentType'>
<arg declared_type='CFStringRef' name='inContentType' type='^{__CFString=}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<arg declared_type='CFErrorRef*' name='outError' type='^^{__CFError}'/>
<retval already_retained='true' declared_type='CFURLRef' type='^{__CFURL=}'/>
</function>
<function name='LSCopyDefaultApplicationURLForURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<arg declared_type='CFErrorRef*' name='outError' type='^^{__CFError}'/>
<retval already_retained='true' declared_type='CFURLRef' type='^{__CFURL=}'/>
</function>
<function name='LSCopyDefaultHandlerForURLScheme'>
<arg declared_type='CFStringRef' name='inURLScheme' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='LSCopyDefaultRoleHandlerForContentType'>
<arg declared_type='CFStringRef' name='inContentType' type='^{__CFString=}'/>
<arg declared_type='LSRolesMask' name='inRole' type='L' type64='I'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='LSCopyDisplayNameForRef'>
<arg const='true' declared_type='FSRef*' name='inRef' type='^{FSRef=[80C]}'/>
<arg declared_type='CFStringRef*' name='outDisplayName' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyDisplayNameForURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='CFStringRef*' name='outDisplayName' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyItemAttribute'>
<arg const='true' declared_type='FSRef*' name='inItem' type='^{FSRef=[80C]}'/>
<arg declared_type='LSRolesMask' name='inRoles' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='inAttributeName' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef*' name='outValue' type='^^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyItemAttributes'>
<arg const='true' declared_type='FSRef*' name='inItem' type='^{FSRef=[80C]}'/>
<arg declared_type='LSRolesMask' name='inRoles' type='L' type64='I'/>
<arg declared_type='CFArrayRef' name='inAttributeNames' type='^{__CFArray=}'/>
<arg declared_type='CFDictionaryRef*' name='outValues' type='^^{__CFDictionary}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyItemInfoForRef'>
<arg const='true' declared_type='FSRef*' name='inItemRef' type='^{FSRef=[80C]}'/>
<arg declared_type='LSRequestedInfo' name='inWhichInfo' type='L' type64='I'/>
<arg declared_type='LSItemInfoRecord*' name='outItemInfo' type='^{LSItemInfoRecord=III^{__CFString}^{__CFString}I}' type64='^{LSItemInfoRecord=III^{__CFString}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyItemInfoForURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='LSRequestedInfo' name='inWhichInfo' type='L' type64='I'/>
<arg declared_type='LSItemInfoRecord*' name='outItemInfo' type='^{LSItemInfoRecord=III^{__CFString}^{__CFString}I}' type64='^{LSItemInfoRecord=III^{__CFString}}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyKindStringForMIMEType'>
<arg declared_type='CFStringRef' name='inMIMEType' type='^{__CFString=}'/>
<arg declared_type='CFStringRef*' name='outKindString' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyKindStringForRef'>
<arg const='true' declared_type='FSRef*' name='inFSRef' type='^{FSRef=[80C]}'/>
<arg declared_type='CFStringRef*' name='outKindString' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyKindStringForTypeInfo'>
<arg declared_type='OSType' name='inType' type='L' type64='I'/>
<arg declared_type='OSType' name='inCreator' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='inExtension' type='^{__CFString=}'/>
<arg declared_type='CFStringRef*' name='outKindString' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSCopyKindStringForURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='CFStringRef*' name='outKindString' type='^^{__CFString}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSFindApplicationForInfo'>
<arg declared_type='OSType' name='inCreator' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='inBundleID' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inName' type='^{__CFString=}'/>
<arg declared_type='FSRef*' name='outAppRef' type='^{FSRef=[80C]}'/>
<arg declared_type='CFURLRef*' name='outAppURL' type='^^{__CFURL}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSGetApplicationForInfo'>
<arg declared_type='OSType' name='inType' type='L' type64='I'/>
<arg declared_type='OSType' name='inCreator' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='inExtension' type='^{__CFString=}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<arg declared_type='FSRef*' name='outAppRef' type='^{FSRef=[80C]}'/>
<arg declared_type='CFURLRef*' name='outAppURL' type='^^{__CFURL}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSGetApplicationForItem'>
<arg const='true' declared_type='FSRef*' name='inItemRef' type='^{FSRef=[80C]}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<arg declared_type='FSRef*' name='outAppRef' type='^{FSRef=[80C]}'/>
<arg declared_type='CFURLRef*' name='outAppURL' type='^^{__CFURL}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSGetApplicationForURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='LSRolesMask' name='inRoleMask' type='L' type64='I'/>
<arg declared_type='FSRef*' name='outAppRef' type='^{FSRef=[80C]}'/>
<arg declared_type='CFURLRef*' name='outAppURL' type='^^{__CFURL}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSGetExtensionInfo'>
<arg declared_type='UniCharCount' name='inNameLen' type='L' type64='Q'/>
<arg const='true' declared_type='UniChar*' name='inNameBuffer' type='^S'/>
<arg declared_type='UniCharCount*' name='outExtStartIndex' type='^I' type64='^Q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSGetHandlerOptionsForContentType'>
<arg declared_type='CFStringRef' name='inContentType' type='^{__CFString=}'/>
<retval declared_type='LSHandlerOptions' type='L' type64='I'/>
</function>
<function name='LSInit'>
<arg declared_type='LSInitializeFlags' name='inFlags' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSOpenApplication'>
<arg const='true' declared_type='LSApplicationParameters*' name='appParams' type='^{LSApplicationParameters=iI^{FSRef}^v^{__CFDictionary}^{__CFArray}^{AEDesc}}' type64='^{LSApplicationParameters=qI^{FSRef}^v^{__CFDictionary}^{__CFArray}^{AEDesc}}'/>
<arg declared_type='ProcessSerialNumber*' name='outPSN' type='^{ProcessSerialNumber=II}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSOpenCFURLRef'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='CFURLRef*' name='outLaunchedURL' type='^^{__CFURL}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSOpenFSRef'>
<arg const='true' declared_type='FSRef*' name='inRef' type='^{FSRef=[80C]}'/>
<arg declared_type='FSRef*' name='outLaunchedRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSOpenFromRefSpec'>
<arg const='true' declared_type='LSLaunchFSRefSpec*' name='inLaunchSpec' type='^{LSLaunchFSRefSpec=^{FSRef}I^{FSRef}^{AEDesc}I^v}' type64='^{LSLaunchFSRefSpec=^{FSRef}Q^{FSRef}^{AEDesc}I^v}'/>
<arg declared_type='FSRef*' name='outLaunchedRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSOpenFromURLSpec'>
<arg const='true' declared_type='LSLaunchURLSpec*' name='inLaunchSpec' type='^{LSLaunchURLSpec=^{__CFURL}^{__CFArray}^{AEDesc}I^v}'/>
<arg declared_type='CFURLRef*' name='outLaunchedURL' type='^^{__CFURL}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSOpenItemsWithRole'>
<arg const='true' declared_type='FSRef*' name='inItems' type='^{FSRef=[80C]}'/>
<arg declared_type='CFIndex' name='inItemCount' type='l' type64='q'/>
<arg declared_type='LSRolesMask' name='inRole' type='L' type64='I'/>
<arg const='true' declared_type='AEKeyDesc*' name='inAEParam' type='^{AEKeyDesc=I{AEDesc=I^^{OpaqueAEDataStorageType}}}'/>
<arg const='true' declared_type='LSApplicationParameters*' name='inAppParams' type='^{LSApplicationParameters=iI^{FSRef}^v^{__CFDictionary}^{__CFArray}^{AEDesc}}' type64='^{LSApplicationParameters=qI^{FSRef}^v^{__CFDictionary}^{__CFArray}^{AEDesc}}'/>
<arg declared_type='ProcessSerialNumber*' name='outPSNs' type='^{ProcessSerialNumber=II}'/>
<arg declared_type='CFIndex' name='inMaxPSNCount' type='l' type64='q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSOpenURLsWithRole'>
<arg declared_type='CFArrayRef' name='inURLs' type='^{__CFArray=}'/>
<arg declared_type='LSRolesMask' name='inRole' type='L' type64='I'/>
<arg const='true' declared_type='AEKeyDesc*' name='inAEParam' type='^{AEKeyDesc=I{AEDesc=I^^{OpaqueAEDataStorageType}}}'/>
<arg const='true' declared_type='LSApplicationParameters*' name='inAppParams' type='^{LSApplicationParameters=iI^{FSRef}^v^{__CFDictionary}^{__CFArray}^{AEDesc}}' type64='^{LSApplicationParameters=qI^{FSRef}^v^{__CFDictionary}^{__CFArray}^{AEDesc}}'/>
<arg declared_type='ProcessSerialNumber*' name='outPSNs' type='^{ProcessSerialNumber=II}'/>
<arg declared_type='CFIndex' name='inMaxPSNCount' type='l' type64='q'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSRegisterFSRef'>
<arg const='true' declared_type='FSRef*' name='inRef' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean' name='inUpdate' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSRegisterURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='Boolean' name='inUpdate' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSetDefaultHandlerForURLScheme'>
<arg declared_type='CFStringRef' name='inURLScheme' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inHandlerBundleID' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSetDefaultRoleHandlerForContentType'>
<arg declared_type='CFStringRef' name='inContentType' type='^{__CFString=}'/>
<arg declared_type='LSRolesMask' name='inRole' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='inHandlerBundleID' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSetExtensionHiddenForRef'>
<arg const='true' declared_type='FSRef*' name='inRef' type='^{FSRef=[80C]}'/>
<arg declared_type='Boolean' name='inHide' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSetExtensionHiddenForURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='Boolean' name='inHide' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSetHandlerOptionsForContentType'>
<arg declared_type='CFStringRef' name='inContentType' type='^{__CFString=}'/>
<arg declared_type='LSHandlerOptions' name='inOptions' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSetItemAttribute'>
<arg const='true' declared_type='FSRef*' name='inItem' type='^{FSRef=[80C]}'/>
<arg declared_type='LSRolesMask' name='inRoles' type='L' type64='I'/>
<arg declared_type='CFStringRef' name='inAttributeName' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='inValue' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSharedFileListAddObserver'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='CFRunLoopRef' name='inRunloop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='inRunloopMode' type='^{__CFString=}'/>
<arg declared_type='LSSharedFileListChangedProcPtr' function_pointer='true' name='callback' type='^?'>
<arg declared_type='LSSharedFileListRef' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='context' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LSSharedFileListCopyProperty'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='CFStringRef' name='inPropertyName' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFTypeRef' type='@'/>
</function>
<function name='LSSharedFileListCopySnapshot'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='UInt32*' name='outSnapshotSeed' type='^I'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='LSSharedFileListCreate'>
<arg declared_type='CFAllocatorRef' name='inAllocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='inListType' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='listOptions' type='@'/>
<retval already_retained='true' declared_type='LSSharedFileListRef' type='^{OpaqueLSSharedFileListRef=}'/>
</function>
<function name='LSSharedFileListGetSeedValue'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='LSSharedFileListGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='LSSharedFileListInsertItemFSRef'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='LSSharedFileListItemRef' name='insertAfterThisItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<arg declared_type='CFStringRef' name='inDisplayName' type='^{__CFString=}'/>
<arg declared_type='IconRef' name='inIconRef' type='^{OpaqueIconRef=}'/>
<arg const='true' declared_type='FSRef*' name='inFSRef' type='^{FSRef=[80C]}'/>
<arg declared_type='CFDictionaryRef' name='inPropertiesToSet' type='^{__CFDictionary=}'/>
<arg declared_type='CFArrayRef' name='inPropertiesToClear' type='^{__CFArray=}'/>
<retval declared_type='LSSharedFileListItemRef' type='^{OpaqueLSSharedFileListItemRef=}'/>
</function>
<function name='LSSharedFileListInsertItemURL'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='LSSharedFileListItemRef' name='insertAfterThisItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<arg declared_type='CFStringRef' name='inDisplayName' type='^{__CFString=}'/>
<arg declared_type='IconRef' name='inIconRef' type='^{OpaqueIconRef=}'/>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='CFDictionaryRef' name='inPropertiesToSet' type='^{__CFDictionary=}'/>
<arg declared_type='CFArrayRef' name='inPropertiesToClear' type='^{__CFArray=}'/>
<retval declared_type='LSSharedFileListItemRef' type='^{OpaqueLSSharedFileListItemRef=}'/>
</function>
<function name='LSSharedFileListItemCopyDisplayName'>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='LSSharedFileListItemCopyIconRef'>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<retval already_retained='true' declared_type='IconRef' type='^{OpaqueIconRef=}'/>
</function>
<function name='LSSharedFileListItemCopyProperty'>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<arg declared_type='CFStringRef' name='inPropertyName' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFTypeRef' type='@'/>
</function>
<function name='LSSharedFileListItemCopyResolvedURL'>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<arg declared_type='LSSharedFileListResolutionFlags' name='inFlags' type='L' type64='I'/>
<arg declared_type='CFErrorRef*' name='outError' type='^^{__CFError}'/>
<retval already_retained='true' declared_type='CFURLRef' type='^{__CFURL=}'/>
</function>
<function name='LSSharedFileListItemGetID'>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<retval declared_type='UInt32' type='L' type64='I'/>
</function>
<function name='LSSharedFileListItemGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='LSSharedFileListItemMove'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<arg declared_type='LSSharedFileListItemRef' name='inMoveAfterItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSharedFileListItemRemove'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSharedFileListItemResolve'>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<arg declared_type='LSSharedFileListResolutionFlags' name='inFlags' type='L' type64='I'/>
<arg declared_type='CFURLRef*' name='outURL' type='^^{__CFURL}'/>
<arg declared_type='FSRef*' name='outRef' type='^{FSRef=[80C]}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSharedFileListItemSetProperty'>
<arg declared_type='LSSharedFileListItemRef' name='inItem' type='^{OpaqueLSSharedFileListItemRef=}'/>
<arg declared_type='CFStringRef' name='inPropertyName' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='inPropertyData' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSharedFileListRemoveAllItems'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSharedFileListRemoveObserver'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='CFRunLoopRef' name='inRunloop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='inRunloopMode' type='^{__CFString=}'/>
<arg declared_type='LSSharedFileListChangedProcPtr' function_pointer='true' name='callback' type='^?'>
<arg declared_type='LSSharedFileListRef' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='context' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='LSSharedFileListSetAuthorization'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='AuthorizationRef' name='inAuthorization' type='^{AuthorizationOpaqueRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSSharedFileListSetProperty'>
<arg declared_type='LSSharedFileListRef' name='inList' type='^{OpaqueLSSharedFileListRef=}'/>
<arg declared_type='CFStringRef' name='inPropertyName' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='inPropertyData' type='@'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='LSTerm'>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='OverrideIconRef'>
<arg declared_type='IconRef' name='oldIconRef' type='^{OpaqueIconRef=}'/>
<arg declared_type='IconRef' name='newIconRef' type='^{OpaqueIconRef=}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ReadIconFromFSRef'>
<arg const='true' declared_type='FSRef*' name='ref' type='^{FSRef=[80C]}'/>
<arg declared_type='IconFamilyHandle*' name='iconFamily' type='^^^{IconFamilyResource}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='RegisterIconRefFromFSRef'>
<arg declared_type='OSType' name='creator' type='L' type64='I'/>
<arg declared_type='OSType' name='iconType' type='L' type64='I'/>
<arg const='true' declared_type='FSRef*' name='iconFile' type='^{FSRef=[80C]}'/>
<arg declared_type='IconRef*' name='theIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='RegisterIconRefFromIconFamily'>
<arg declared_type='OSType' name='creator' type='L' type64='I'/>
<arg declared_type='OSType' name='iconType' type='L' type64='I'/>
<arg declared_type='IconFamilyHandle' name='iconFamily' type='^^{IconFamilyResource}'/>
<arg declared_type='IconRef*' name='theIconRef' type='^^{OpaqueIconRef}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='ReleaseIconRef'>
<arg declared_type='IconRef' name='theIconRef' type='^{OpaqueIconRef=}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='RemoveIconRefOverride'>
<arg declared_type='IconRef' name='theIconRef' type='^{OpaqueIconRef=}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='SetCustomIconsEnabled'>
<arg declared_type='SInt16' name='vRefNum' type='s'/>
<arg declared_type='Boolean' name='enableCustomIcons' type='B'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='UTCreateStringForOSType'>
<arg declared_type='OSType' name='inOSType' type='L' type64='I'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='UTGetOSTypeFromString'>
<arg declared_type='CFStringRef' name='inString' type='^{__CFString=}'/>
<retval declared_type='OSType' type='L' type64='I'/>
</function>
<function name='UTTypeConformsTo'>
<arg declared_type='CFStringRef' name='inUTI' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inConformsToUTI' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='UTTypeCopyAllTagsWithClass'>
<arg declared_type='CFStringRef' name='inUTI' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inTagClass' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='UTTypeCopyDeclaration'>
<arg declared_type='CFStringRef' name='inUTI' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='UTTypeCopyDeclaringBundleURL'>
<arg declared_type='CFStringRef' name='inUTI' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFURLRef' type='^{__CFURL=}'/>
</function>
<function name='UTTypeCopyDescription'>
<arg declared_type='CFStringRef' name='inUTI' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='UTTypeCopyPreferredTagWithClass'>
<arg declared_type='CFStringRef' name='inUTI' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inTagClass' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='UTTypeCreateAllIdentifiersForTag'>
<arg declared_type='CFStringRef' name='inTagClass' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inTag' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inConformingToUTI' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='UTTypeCreatePreferredIdentifierForTag'>
<arg declared_type='CFStringRef' name='inTagClass' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inTag' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inConformingToUTI' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='UTTypeEqual'>
<arg declared_type='CFStringRef' name='inUTI1' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='inUTI2' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='UTTypeIsDeclared'>
<arg declared_type='CFStringRef' name='inUTI' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='UTTypeIsDynamic'>
<arg declared_type='CFStringRef' name='inUTI' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='UnregisterIconRef'>
<arg declared_type='OSType' name='creator' type='L' type64='I'/>
<arg declared_type='OSType' name='iconType' type='L' type64='I'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='UpdateIconRef'>
<arg declared_type='IconRef' name='theIconRef' type='^{OpaqueIconRef=}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<struct name='MDQueryBatchingParams' type='{_MDQueryBatchingParams=&quot;first_max_num&quot;I&quot;first_max_ms&quot;I&quot;progress_max_num&quot;I&quot;progress_max_ms&quot;I&quot;update_max_num&quot;I&quot;update_max_ms&quot;I}' type64='{_MDQueryBatchingParams=&quot;first_max_num&quot;Q&quot;first_max_ms&quot;Q&quot;progress_max_num&quot;Q&quot;progress_max_ms&quot;Q&quot;update_max_num&quot;Q&quot;update_max_ms&quot;Q}'>
<field declared_type='size_t' name='first_max_num' type='L' type64='Q'/>
<field declared_type='size_t' name='first_max_ms' type='L' type64='Q'/>
<field declared_type='size_t' name='progress_max_num' type='L' type64='Q'/>
<field declared_type='size_t' name='progress_max_ms' type='L' type64='Q'/>
<field declared_type='size_t' name='update_max_num' type='L' type64='Q'/>
<field declared_type='size_t' name='update_max_ms' type='L' type64='Q'/>
</struct>
<cftype gettypeid_func='MDItemGetTypeID' name='MDItemRef' type='^{__MDItem=}'/>
<cftype gettypeid_func='MDLabelGetTypeID' name='MDLabelRef' type='^{__MDLabel=}'/>
<cftype gettypeid_func='MDQueryGetTypeID' name='MDQueryRef' type='^{__MDQuery=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDAttributeAllValues' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDAttributeDisplayValues' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDAttributeMultiValued' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDAttributeName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDAttributeReadOnlyValues' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDAttributeType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDExporterAvaliable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAcquisitionMake' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAcquisitionModel' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAlbum' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAltitude' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAperture' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAppleLoopDescriptors' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAppleLoopsKeyFilterType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAppleLoopsLoopMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAppleLoopsRootKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemApplicationCategories' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAttributeChangeDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAudiences' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAudioBitRate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAudioChannelCount' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAudioEncodingApplication' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAudioSampleRate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAudioTrackNumber' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAuthorAddresses' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAuthorEmailAddresses' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemAuthors' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemBitsPerSample' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemCFBundleIdentifier' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemCameraOwner' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemCity' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemCodecs' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemColorSpace' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemComment' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemComposer' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemContactKeywords' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemContentCreationDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemContentModificationDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemContentType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemContentTypeTree' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemContributors' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemCopyright' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemCountry' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemCoverage' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemCreator' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemDateAdded' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemDeliveryType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemDescription' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemDirector' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemDisplayName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemDownloadedDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemDueDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemDurationSeconds' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemEXIFGPSVersion' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemEXIFVersion' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemEditors' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemEmailAddresses' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemEncodingApplications' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemExecutableArchitectures' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemExecutablePlatform' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemExposureMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemExposureProgram' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemExposureTimeSeconds' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemExposureTimeString' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFNumber' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSContentChangeDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSCreationDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSExists' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSHasCustomIcon' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSInvisible' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSIsExtensionHidden' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSIsReadable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSIsStationery' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSIsWriteable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSLabel' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSNodeCount' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSOwnerGroupID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSOwnerUserID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFSSize' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFinderComment' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFlashOnOff' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFocalLength' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFocalLength35mm' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemFonts' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSAreaInformation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSDOP' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSDateStamp' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSDestBearing' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSDestDistance' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSDestLatitude' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSDestLongitude' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSDifferental' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSMapDatum' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSMeasureMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSProcessingMethod' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSStatus' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGPSTrack' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemGenre' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemHasAlphaChannel' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemHeadline' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemISOSpeed' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemIdentifier' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemImageDirection' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemInformation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemInstantMessageAddresses' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemInstructions' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemIsApplicationManaged' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemIsGeneralMIDISequence' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemIsLikelyJunk' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemKeySignature' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemKeywords' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemKind' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLabelID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLabelIcon' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLabelKind' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLabelUUID' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLanguages' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLastUsedDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLatitude' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLayerNames' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLensModel' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLongitude' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemLyricist' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemMaxAperture' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemMediaTypes' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemMeteringMode' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemMusicalGenre' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemMusicalInstrumentCategory' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemMusicalInstrumentName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemNamedLocation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemNumberOfPages' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemOrganizations' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemOrientation' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemOriginalFormat' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemOriginalSource' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPageHeight' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPageWidth' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemParticipants' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPath' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPerformers' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPhoneNumbers' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPixelCount' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPixelHeight' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPixelWidth' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemProducer' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemProfileName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemProjects' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemPublishers' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemRecipientAddresses' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemRecipientEmailAddresses' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemRecipients' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemRecordingDate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemRecordingYear' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemRedEyeOnOff' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemResolutionHeightDPI' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemResolutionWidthDPI' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemRights' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemSecurityMethod' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemSpeed' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemStarRating' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemStateOrProvince' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemStreamable' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemSubject' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemSupportFileType' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemTempo' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemTextContent' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemTheme' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemTimeSignature' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemTimestamp' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemTitle' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemTotalBitRate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemURL' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemVersion' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemVideoBitRate' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemWhereFroms' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDItemWhiteBalance' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDLabelAddedNotification' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelBundleURL' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDLabelChangedNotification' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelContentChangeDate' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelDisplayName' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelIconData' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelIconUUID' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelIsMutuallyExclusiveSetMember' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelKind' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelKindIsMutuallyExclusiveSetKey' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelKindVisibilityKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDLabelRemovedNotification' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelSetsFinderColor' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelUUID' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDLabelVisibility' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDPrivateVisibility' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kMDPublicVisibility' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryDidFinishNotification' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryDidUpdateNotification' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryProgressNotification' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryResultContentRelevance' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryScopeAllIndexed' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryScopeComputer' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryScopeComputerIndexed' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryScopeHome' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryScopeNetwork' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryScopeNetworkIndexed' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryUpdateAddedItems' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryUpdateChangedItems' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kMDQueryUpdateRemovedItems' type='^{__CFString=}'/>
<enum name='kMDLabelLocalDomain' value='1'/>
<enum name='kMDLabelUserDomain' value='0'/>
<enum name='kMDQueryAllowFSTranslation' value='8'/>
<enum name='kMDQueryReverseSortOrderFlag' value='1'/>
<enum name='kMDQuerySynchronous' value='1'/>
<enum name='kMDQueryWantsUpdates' value='4'/>
<function name='MDCopyLabelKinds'>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDCopyLabelWithUUID'>
<arg declared_type='CFUUIDRef' name='labelUUID' type='^{__CFUUID=}'/>
<retval already_retained='true' declared_type='MDLabelRef' type='^{__MDLabel=}'/>
</function>
<function name='MDCopyLabelsMatchingExpression'>
<arg declared_type='CFStringRef' name='simpleQueryString' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDCopyLabelsWithKind'>
<arg declared_type='CFStringRef' name='kind' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDItemCopyAttribute'>
<arg declared_type='MDItemRef' name='item' type='^{__MDItem=}'/>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFTypeRef' type='@'/>
</function>
<function name='MDItemCopyAttributeList' variadic='true'>
<arg declared_type='MDItemRef' name='item' type='^{__MDItem=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='MDItemCopyAttributeNames'>
<arg declared_type='MDItemRef' name='item' type='^{__MDItem=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDItemCopyAttributes'>
<arg declared_type='MDItemRef' name='item' type='^{__MDItem=}'/>
<arg declared_type='CFArrayRef' name='names' type='^{__CFArray=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='MDItemCopyLabels'>
<arg declared_type='MDItemRef' name='item' type='^{__MDItem=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDItemCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='path' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='MDItemRef' type='^{__MDItem=}'/>
</function>
<function name='MDItemCreateWithURL'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFURLRef' name='url' type='^{__CFURL=}'/>
<retval already_retained='true' declared_type='MDItemRef' type='^{__MDItem=}'/>
</function>
<function name='MDItemGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='MDItemRemoveLabel'>
<arg declared_type='MDItemRef' name='item' type='^{__MDItem=}'/>
<arg declared_type='MDLabelRef' name='label' type='^{__MDLabel=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MDItemSetLabel'>
<arg declared_type='MDItemRef' name='item' type='^{__MDItem=}'/>
<arg declared_type='MDLabelRef' name='label' type='^{__MDLabel=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MDItemsCopyAttributes'>
<arg declared_type='CFArrayRef' name='items' type='^{__CFArray=}'/>
<arg declared_type='CFArrayRef' name='names' type='^{__CFArray=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDItemsCreateWithURLs'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFArrayRef' name='urls' type='^{__CFArray=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDLabelCopyAttribute'>
<arg declared_type='MDLabelRef' name='label' type='^{__MDLabel=}'/>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFTypeRef' type='@'/>
</function>
<function name='MDLabelCopyAttributeName'>
<arg declared_type='MDLabelRef' name='label' type='^{__MDLabel=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='MDLabelCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='displayName' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='kind' type='^{__CFString=}'/>
<arg declared_type='MDLabelDomain' name='domain' type='i'/>
<retval already_retained='true' declared_type='MDLabelRef' type='^{__MDLabel=}'/>
</function>
<function name='MDLabelDelete'>
<arg declared_type='MDLabelRef' name='label' type='^{__MDLabel=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MDLabelGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='MDLabelSetAttributes'>
<arg declared_type='MDLabelRef' name='label' type='^{__MDLabel=}'/>
<arg declared_type='CFDictionaryRef' name='attrs' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MDQueryCopyQueryString'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='MDQueryCopySortingAttributes'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDQueryCopyValueListAttributes'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDQueryCopyValuesOfAttribute'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDQueryCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='queryString' type='^{__CFString=}'/>
<arg declared_type='CFArrayRef' name='valueListAttrs' type='^{__CFArray=}'/>
<arg declared_type='CFArrayRef' name='sortingAttrs' type='^{__CFArray=}'/>
<retval already_retained='true' declared_type='MDQueryRef' type='^{__MDQuery=}'/>
</function>
<function name='MDQueryCreateForItems'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='queryString' type='^{__CFString=}'/>
<arg declared_type='CFArrayRef' name='valueListAttrs' type='^{__CFArray=}'/>
<arg declared_type='CFArrayRef' name='sortingAttrs' type='^{__CFArray=}'/>
<arg declared_type='CFArrayRef' name='items' type='^{__CFArray=}'/>
<retval already_retained='true' declared_type='MDQueryRef' type='^{__MDQuery=}'/>
</function>
<function name='MDQueryCreateSubset'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFStringRef' name='queryString' type='^{__CFString=}'/>
<arg declared_type='CFArrayRef' name='valueListAttrs' type='^{__CFArray=}'/>
<arg declared_type='CFArrayRef' name='sortingAttrs' type='^{__CFArray=}'/>
<retval already_retained='true' declared_type='MDQueryRef' type='^{__MDQuery=}'/>
</function>
<function name='MDQueryDisableUpdates'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQueryEnableUpdates'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQueryExecute'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFOptionFlags' name='optionFlags' type='L' type64='Q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MDQueryGetAttributeValueOfResultAtIndex'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<arg declared_type='CFIndex' name='idx' type='l' type64='q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='MDQueryGetBatchingParameters'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval declared_type='MDQueryBatchingParams' type='{_MDQueryBatchingParams=IIIIII}' type64='{_MDQueryBatchingParams=QQQQQQ}'/>
</function>
<function name='MDQueryGetCountOfResultsWithAttributeValue'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='value' type='@'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='MDQueryGetIndexOfResult'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg const='true' declared_type='void*' name='result' type='^v'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='MDQueryGetResultAtIndex'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFIndex' name='idx' type='l' type64='q'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='MDQueryGetResultCount'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='MDQueryGetSortOptionFlagsForAttribute'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFStringRef' name='fieldName' type='^{__CFString=}'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='MDQueryGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='MDQueryIsGatheringComplete'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MDQuerySetBatchingParameters'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='MDQueryBatchingParams' name='params' type='{_MDQueryBatchingParams=IIIIII}' type64='{_MDQueryBatchingParams=QQQQQQ}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQuerySetCreateResultFunction'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='MDQueryCreateResultFunction' function_pointer='true' name='func' type='^?'>
<arg declared_type='MDQueryRef' type='^{__MDQuery=}'/>
<arg declared_type='MDItemRef' type='^{__MDItem=}'/>
<arg declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</arg>
<arg declared_type='void*' name='context' type='^v'/>
<arg const='true' declared_type='CFArrayCallBacks*' name='cb' type='^{_CFArrayCallBacks=i^?^?^?^?}' type64='^{_CFArrayCallBacks=q^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQuerySetCreateValueFunction'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='MDQueryCreateValueFunction' function_pointer='true' name='func' type='^?'>
<arg declared_type='MDQueryRef' type='^{__MDQuery=}'/>
<arg declared_type='CFStringRef' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</arg>
<arg declared_type='void*' name='context' type='^v'/>
<arg const='true' declared_type='CFArrayCallBacks*' name='cb' type='^{_CFArrayCallBacks=i^?^?^?^?}' type64='^{_CFArrayCallBacks=q^?^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQuerySetDispatchQueue'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='dispatch_queue_t' name='queue' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQuerySetMaxCount'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFIndex' name='size' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQuerySetSearchScope'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFArrayRef' name='scopeDirectories' type='^{__CFArray=}'/>
<arg declared_type='OptionBits' name='scopeOptions' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQuerySetSortComparator'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='MDQuerySortComparatorFunction' function_pointer='true' name='comparator' type='^?'>
<arg const='true' declared_type='CFTypeRef*' type='^^v'/>
<arg const='true' declared_type='CFTypeRef*' type='^^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFComparisonResult' type='l' type64='q'/>
</arg>
<arg declared_type='void*' name='context' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQuerySetSortComparatorBlock'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFComparisonResult (^)( CFTypeRef *, CFTypeRef *)' function_pointer='true' name='comparator' type='@?'>
<arg const='true' declared_type='CFTypeRef*' type='^^v'/>
<arg const='true' declared_type='CFTypeRef*' type='^^v'/>
<retval declared_type='CFComparisonResult' type='l' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='MDQuerySetSortOptionFlagsForAttribute'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFStringRef' name='fieldName' type='^{__CFString=}'/>
<arg declared_type='uint32_t' name='flags' type='I'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MDQuerySetSortOrder'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<arg declared_type='CFArrayRef' name='sortingAttrs' type='^{__CFArray=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='MDQueryStop'>
<arg declared_type='MDQueryRef' name='query' type='^{__MDQuery=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='MDSchemaCopyAllAttributes'>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='MDSchemaCopyAttributesForContentType'>
<arg declared_type='CFStringRef' name='contentTypeUTI' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='MDSchemaCopyDisplayDescriptionForAttribute'>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='MDSchemaCopyDisplayNameForAttribute'>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='MDSchemaCopyMetaAttributesForAttribute'>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<struct name='CSIdentityClientContext' type='{CSIdentityClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;statusUpdated&quot;^?}' type64='{CSIdentityClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;statusUpdated&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='CFAllocatorRetainCallBack' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='CFAllocatorReleaseCallBack' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
<field declared_type='CSIdentityStatusUpdatedCallback' function_pointer='true' name='statusUpdated' type='^?'>
<arg declared_type='CSIdentityRef' type='^{__CSIdentity=}'/>
<arg declared_type='CFIndex' type='l' type64='q'/>
<arg declared_type='CFErrorRef' type='^{__CFError=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='CSIdentityQueryClientContext' type='{CSIdentityQueryClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retainInfo&quot;^?&quot;releaseInfo&quot;^?&quot;copyInfoDescription&quot;^?&quot;receiveEvent&quot;^?}' type64='{CSIdentityQueryClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retainInfo&quot;^?&quot;releaseInfo&quot;^?&quot;copyInfoDescription&quot;^?&quot;receiveEvent&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='CFAllocatorRetainCallBack' function_pointer='true' name='retainInfo' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='CFAllocatorReleaseCallBack' function_pointer='true' name='releaseInfo' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyInfoDescription' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
<field declared_type='CSIdentityQueryReceiveEventCallback' function_pointer='true' name='receiveEvent' type='^?'>
<arg declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
<arg declared_type='CSIdentityQueryEvent' type='l' type64='q'/>
<arg declared_type='CFArrayRef' type='^{__CFArray=}'/>
<arg declared_type='CFErrorRef' type='^{__CFError=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='IconFamilyElement' type='{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}'>
<field declared_type='OSType' name='elementType' type='L' type64='I'/>
<field declared_type='SInt32' name='elementSize' type='l' type64='i'/>
<field declared_type='unsigned char*' name='elementData' type='[1C]'/>
</struct>
<struct name='IconFamilyResource' type='{IconFamilyResource=&quot;resourceType&quot;I&quot;resourceSize&quot;i&quot;elements&quot;[1{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}]}'>
<field declared_type='OSType' name='resourceType' type='L' type64='I'/>
<field declared_type='SInt32' name='resourceSize' type='l' type64='i'/>
<field declared_type='IconFamilyElement*' name='elements' type='[1{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}]'/>
</struct>
<struct name='KCAttribute' type='{SecKeychainAttribute=&quot;tag&quot;I&quot;length&quot;I&quot;data&quot;^v}'>
<field declared_type='SecKeychainAttrType' name='tag' type='L' type64='I'/>
<field declared_type='UInt32' name='length' type='L' type64='I'/>
<field declared_type='void*' name='data' type='^v'/>
</struct>
<struct name='KCAttributeList' type='{SecKeychainAttributeList=&quot;count&quot;I&quot;attr&quot;^{SecKeychainAttribute}}'>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='SecKeychainAttribute*' name='attr' type='^{SecKeychainAttribute=II^v}'/>
</struct>
<struct name='KCCallbackInfo' type='{KCCallbackInfo=&quot;version&quot;I&quot;item&quot;^{OpaqueSecKeychainItemRef}&quot;processID&quot;[2l]&quot;event&quot;[4l]&quot;keychain&quot;^{OpaqueSecKeychainRef}}' type64='{KCCallbackInfo=&quot;version&quot;I&quot;item&quot;^{OpaqueSecKeychainItemRef}&quot;processID&quot;[2i]&quot;event&quot;[4i]&quot;keychain&quot;^{OpaqueSecKeychainRef}}'>
<field declared_type='UInt32' name='version' type='L' type64='I'/>
<field declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<field declared_type='SInt32*' name='processID' type='[2l]' type64='[2i]'/>
<field declared_type='SInt32*' name='event' type='[4l]' type64='[4i]'/>
<field declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
</struct>
<struct name='SleepQRec' type='{SleepQRec=&quot;sleepQLink&quot;^{SleepQRec}&quot;sleepQType&quot;s&quot;sleepQProc&quot;^?&quot;sleepQFlags&quot;s}'>
<field declared_type='SleepQRecPtr' name='sleepQLink' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<field declared_type='short' name='sleepQType' type='s'/>
<field declared_type='SleepQUPP' function_pointer='true' name='sleepQProc' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='short' name='sleepQFlags' type='s'/>
</struct>
<struct name='WSClientContext' type='{WSClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{WSClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='WSClientContextRetainCallBackProcPtr' function_pointer='true' name='retain' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='WSClientContextReleaseCallBackProcPtr' function_pointer='true' name='release' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='WSClientContextCopyDescriptionCallBackProcPtr' function_pointer='true' name='copyDescription' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
</struct>
<cftype gettypeid_func='CSIdentityAuthorityGetTypeID' name='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
<cftype gettypeid_func='CSIdentityQueryGetTypeID' name='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
<cftype gettypeid_func='CSIdentityGetTypeID' name='CSIdentityRef' type='^{__CSIdentity=}'/>
<cftype gettypeid_func='WSMethodInvocationGetTypeID' name='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
<cftype gettypeid_func='WSProtocolHandlerGetTypeID' name='WSProtocolHandlerRef' type='^{OpaqueWSProtocolHandlerRef=}'/>
<constant const='true' declared_type='CFStringRef' name='kCSIdentityErrorDomain' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kCSIdentityGeneratePosixName' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSDebugIncomingBody' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSDebugIncomingHeaders' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSDebugOutgoingBody' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSDebugOutgoingHeaders' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSFaultCode' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSFaultExtra' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSFaultString' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPExtraHeaders' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPFollowsRedirects' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPMessage' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPProxy' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPResponseMessage' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPVersion' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSMethodInvocationResult' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSMethodInvocationResultParameterName' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSMethodInvocationTimeoutValue' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSNetworkStreamFaultString' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSRecordNamespaceURI' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSRecordParameterOrder' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSRecordType' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAP1999Protocol' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAP2001Protocol' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPBodyEncodingStyle' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPMessageHeaders' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPMethodNamespaceURI' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPStyleDoc' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPStyleRPC' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSStreamErrorDomain' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSStreamErrorError' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSStreamErrorMessage' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSXMLRPCProtocol' type='^{__CFString=}'/>
<string_constant name='kWSMethodName' nsstring='true' value='/WSMethodName'/>
<string_constant name='kWSMethodParameterOrder' nsstring='true' value='/WSMethodParameterOrder'/>
<string_constant name='kWSMethodParameters' nsstring='true' value='/WSMethodParameters'/>
<enum name='HDActivity' value='3'/>
<enum name='IdleActivity' value='4'/>
<enum name='NetActivity' value='2'/>
<enum name='OverallAct' value='0'/>
<enum name='UsrActivity' value='1'/>
<enum name='eWSArrayType' value='8'/>
<enum name='eWSBooleanType' value='2'/>
<enum name='eWSDataType' value='7'/>
<enum name='eWSDateType' value='6'/>
<enum name='eWSDictionaryType' value='9'/>
<enum name='eWSDoubleType' value='4'/>
<enum name='eWSIntegerType' value='3'/>
<enum name='eWSNullType' value='1'/>
<enum name='eWSStringType' value='5'/>
<enum name='eWSUnknownType' value='0'/>
<enum name='errWSInternalError' value='-65793'/>
<enum name='errWSParseError' value='-65795'/>
<enum name='errWSTimeoutError' value='-65796'/>
<enum name='errWSTransportError' value='-65794'/>
<enum name='kAccountKCItemAttr' value='1633903476'/>
<enum name='kAddKCEvent' value='3'/>
<enum name='kAddKCEventMask' value='8'/>
<enum name='kAddressKCItemAttr' value='1633969266'/>
<enum name='kAnyAuthType' value='0'/>
<enum name='kAnyPort' value='0'/>
<enum name='kAnyProtocol' value='0'/>
<enum name='kAppleSharePasswordKCItemClass' value='1634953328'/>
<enum name='kAuthTypeKCItemAttr' value='1635023216'/>
<enum name='kCSIdentityAuthorityNotAccessibleErr' value='-2'/>
<enum name='kCSIdentityClassGroup' value='2'/>
<enum name='kCSIdentityClassUser' value='1'/>
<enum name='kCSIdentityCommitCompleted' value='1'/>
<enum name='kCSIdentityDeletedErr' value='-4'/>
<enum name='kCSIdentityDuplicateFullNameErr' value='-6'/>
<enum name='kCSIdentityDuplicatePosixNameErr' value='-8'/>
<enum name='kCSIdentityFlagHidden' value='1'/>
<enum name='kCSIdentityFlagNone' value='0'/>
<enum name='kCSIdentityInvalidFullNameErr' value='-5'/>
<enum name='kCSIdentityInvalidPosixNameErr' value='-7'/>
<enum name='kCSIdentityPermissionErr' value='-3'/>
<enum name='kCSIdentityQueryEventErrorOccurred' value='5'/>
<enum name='kCSIdentityQueryEventResultsAdded' value='2'/>
<enum name='kCSIdentityQueryEventResultsChanged' value='3'/>
<enum name='kCSIdentityQueryEventResultsRemoved' value='4'/>
<enum name='kCSIdentityQueryEventSearchPhaseFinished' value='1'/>
<enum name='kCSIdentityQueryGenerateUpdateEvents' value='1'/>
<enum name='kCSIdentityQueryIncludeHiddenIdentities' value='2'/>
<enum name='kCSIdentityQueryStringBeginsWith' value='2'/>
<enum name='kCSIdentityQueryStringEquals' value='1'/>
<enum name='kCSIdentityUnknownAuthorityErr' value='-1'/>
<enum name='kCertSearchAny' value='0'/>
<enum name='kCertSearchDecryptAllowed' value='64'/>
<enum name='kCertSearchDecryptDisallowed' value='128'/>
<enum name='kCertSearchDecryptIgnored' value='0'/>
<enum name='kCertSearchDecryptMask' value='192'/>
<enum name='kCertSearchEncryptAllowed' value='16'/>
<enum name='kCertSearchEncryptDisallowed' value='32'/>
<enum name='kCertSearchEncryptIgnored' value='0'/>
<enum name='kCertSearchEncryptMask' value='48'/>
<enum name='kCertSearchPrivKeyRequired' value='4096'/>
<enum name='kCertSearchShift' value='0'/>
<enum name='kCertSearchSigningAllowed' value='1'/>
<enum name='kCertSearchSigningDisallowed' value='2'/>
<enum name='kCertSearchSigningIgnored' value='0'/>
<enum name='kCertSearchSigningMask' value='3'/>
<enum name='kCertSearchUnwrapAllowed' value='1024'/>
<enum name='kCertSearchUnwrapDisallowed' value='2048'/>
<enum name='kCertSearchUnwrapIgnored' value='0'/>
<enum name='kCertSearchUnwrapMask' value='3072'/>
<enum name='kCertSearchVerifyAllowed' value='4'/>
<enum name='kCertSearchVerifyDisallowed' value='8'/>
<enum name='kCertSearchVerifyIgnored' value='0'/>
<enum name='kCertSearchVerifyMask' value='12'/>
<enum name='kCertSearchWrapAllowed' value='256'/>
<enum name='kCertSearchWrapDisallowed' value='512'/>
<enum name='kCertSearchWrapIgnored' value='0'/>
<enum name='kCertSearchWrapMask' value='768'/>
<enum name='kCertUsageAllAdd' value='2147483392'/>
<enum name='kCertUsageDecryptAdd' value='16384'/>
<enum name='kCertUsageDecryptAskAndAdd' value='32768'/>
<enum name='kCertUsageEncryptAdd' value='4096'/>
<enum name='kCertUsageEncryptAskAndAdd' value='8192'/>
<enum name='kCertUsageKeyExchAdd' value='65536'/>
<enum name='kCertUsageKeyExchAskAndAdd' value='131072'/>
<enum name='kCertUsageRootAdd' value='262144'/>
<enum name='kCertUsageRootAskAndAdd' value='524288'/>
<enum name='kCertUsageSSLAdd' value='1048576'/>
<enum name='kCertUsageSSLAskAndAdd' value='2097152'/>
<enum name='kCertUsageShift' value='8'/>
<enum name='kCertUsageSigningAdd' value='256'/>
<enum name='kCertUsageSigningAskAndAdd' value='512'/>
<enum name='kCertUsageVerifyAdd' value='1024'/>
<enum name='kCertUsageVerifyAskAndAdd' value='2048'/>
<enum name='kCertificateKCItemClass' value='1667592820'/>
<enum name='kClassKCItemAttr' value='1668047219'/>
<enum name='kCommentKCItemAttr' value='1768123764'/>
<enum name='kCommonNameKCItemAttr' value='1668161568'/>
<enum name='kCreationDateKCItemAttr' value='1667522932'/>
<enum name='kCreatorKCItemAttr' value='1668445298'/>
<enum name='kCustomIconKCItemAttr' value='1668641641'/>
<enum name='kDataAccessKCEvent' value='10'/>
<enum name='kDataAccessKCEventMask' value='1024'/>
<enum name='kDecryptKCItemAttr' value='1684366194'/>
<enum name='kDefaultChangedKCEvent' value='9'/>
<enum name='kDefaultChangedKCEventMask' value='512'/>
<enum name='kDeleteKCEvent' value='4'/>
<enum name='kDeleteKCEventMask' value='16'/>
<enum name='kDescriptionKCItemAttr' value='1684370275'/>
<enum name='kDeviceInitiatedWake' value='18'/>
<enum name='kDozeDemand' value='7'/>
<enum name='kDozeRequest' value='9'/>
<enum name='kDozeToFullWakeUp' value='20'/>
<enum name='kDozeWakeUp' value='8'/>
<enum name='kDropIconVariant' value='1685221232'/>
<enum name='kEMailKCItemAttr' value='1835100524'/>
<enum name='kEncryptKCItemAttr' value='1701733234'/>
<enum name='kEndDateKCItemAttr' value='1701077364'/>
<enum name='kEnterIdle' value='24'/>
<enum name='kEnterRun' value='11'/>
<enum name='kEnterStandby' value='10'/>
<enum name='kEveryKCEventMask' value='65535'/>
<enum name='kExitIdle' value='26'/>
<enum name='kFirstFailKCStopOn' value='3'/>
<enum name='kFirstPassKCStopOn' value='2'/>
<enum name='kGenericKCItemAttr' value='1734700641'/>
<enum name='kGenericPasswordKCItemClass' value='1734700656'/>
<enum name='kGetPowerInfo' value='21'/>
<enum name='kGetPowerLevel' value='16'/>
<enum name='kGetWakeOnNetInfo' value='22'/>
<enum name='kHuge1BitMask' value='1768122403'/>
<enum name='kHuge32BitData' value='1768436530'/>
<enum name='kHuge4BitData' value='1768122420'/>
<enum name='kHuge8BitData' value='1768122424'/>
<enum name='kHuge8BitMask' value='1748528491'/>
<enum name='kIconFamilyType' value='1768124019'/>
<enum name='kIconServices1024PixelDataARGB' value='1768108336'/>
<enum name='kIconServices128PixelDataARGB' value='1768108087'/>
<enum name='kIconServices16PixelDataARGB' value='1768108084'/>
<enum name='kIconServices256PixelDataARGB' value='1768108088'/>
<enum name='kIconServices32PixelDataARGB' value='1768108085'/>
<enum name='kIconServices48PixelDataARGB' value='1768108086'/>
<enum name='kIconServices512PixelDataARGB' value='1768108089'/>
<enum name='kIdleKCEvent' value='0'/>
<enum name='kIdleKCEventMask' value='1'/>
<enum name='kInternetPasswordKCItemClass' value='1768842612'/>
<enum name='kInvisibleKCItemAttr' value='1768846953'/>
<enum name='kIssuerKCItemAttr' value='1769173877'/>
<enum name='kIssuerURLKCItemAttr' value='1769304684'/>
<enum name='kKCAuthTypeDPA' value='1685086561'/>
<enum name='kKCAuthTypeDefault' value='1684434036'/>
<enum name='kKCAuthTypeHTTPDigest' value='1752462436'/>
<enum name='kKCAuthTypeMSN' value='1836281441'/>
<enum name='kKCAuthTypeNTLM' value='1853123693'/>
<enum name='kKCAuthTypeRPA' value='1919967585'/>
<enum name='kKCProtocolTypeAFP' value='1634103328'/>
<enum name='kKCProtocolTypeAppleTalk' value='1635019883'/>
<enum name='kKCProtocolTypeFTP' value='1718906912'/>
<enum name='kKCProtocolTypeFTPAccount' value='1718906977'/>
<enum name='kKCProtocolTypeHTTP' value='1752462448'/>
<enum name='kKCProtocolTypeIMAP' value='1768776048'/>
<enum name='kKCProtocolTypeIRC' value='1769104160'/>
<enum name='kKCProtocolTypeLDAP' value='1818517872'/>
<enum name='kKCProtocolTypeNNTP' value='1852732528'/>
<enum name='kKCProtocolTypePOP3' value='1886351411'/>
<enum name='kKCProtocolTypeSMTP' value='1936553072'/>
<enum name='kKCProtocolTypeSOCKS' value='1936685088'/>
<enum name='kKCProtocolTypeTelnet' value='1952803950'/>
<enum name='kKeychainListChangedKCEvent' value='11'/>
<enum name='kLabelKCItemAttr' value='1818321516'/>
<enum name='kLarge1BitMask' value='1229147683'/>
<enum name='kLarge32BitData' value='1768698674'/>
<enum name='kLarge4BitData' value='1768123444'/>
<enum name='kLarge8BitData' value='1768123448'/>
<enum name='kLarge8BitMask' value='1815637355'/>
<enum name='kLockKCEvent' value='1'/>
<enum name='kLockKCEventMask' value='2'/>
<enum name='kMini1BitMask' value='1768123683'/>
<enum name='kMini4BitData' value='1768123700'/>
<enum name='kMini8BitData' value='1768123704'/>
<enum name='kModDateKCItemAttr' value='1835295092'/>
<enum name='kNegativeKCItemAttr' value='1852139361'/>
<enum name='kNoneKCStopOn' value='1'/>
<enum name='kOpenDropIconVariant' value='1868853872'/>
<enum name='kOpenIconVariant' value='1869636974'/>
<enum name='kPasswordChangedKCEvent' value='6'/>
<enum name='kPasswordChangedKCEventMask' value='64'/>
<enum name='kPathKCItemAttr' value='1885434984'/>
<enum name='kPolicyKCStopOn' value='0'/>
<enum name='kPortKCItemAttr' value='1886351988'/>
<enum name='kProtocolKCItemAttr' value='1886675820'/>
<enum name='kPublicKeyHashKCItemAttr' value='1752198009'/>
<enum name='kRdPermKCStatus' value='2'/>
<enum name='kRolloverIconVariant' value='1870030194'/>
<enum name='kScriptCodeKCItemAttr' value='1935897200'/>
<enum name='kSecOptionReserved' value='255'/>
<enum name='kSecurityDomainKCItemAttr' value='1935961454'/>
<enum name='kSerialNumberKCItemAttr' value='1936614002'/>
<enum name='kServerKCItemAttr' value='1936881266'/>
<enum name='kServiceKCItemAttr' value='1937138533'/>
<enum name='kSetPowerLevel' value='17'/>
<enum name='kSignKCItemAttr' value='1936287598'/>
<enum name='kSignatureKCItemAttr' value='1936943463'/>
<enum name='kSleepDemand' value='2'/>
<enum name='kSleepDeny' value='5'/>
<enum name='kSleepNow' value='6'/>
<enum name='kSleepRequest' value='1'/>
<enum name='kSleepRevoke' value='4'/>
<enum name='kSleepUnlock' value='4'/>
<enum name='kSleepWakeUp' value='3'/>
<enum name='kSmall1BitMask' value='1768125219'/>
<enum name='kSmall32BitData' value='1769157426'/>
<enum name='kSmall4BitData' value='1768125236'/>
<enum name='kSmall8BitData' value='1768125240'/>
<enum name='kSmall8BitMask' value='1933077867'/>
<enum name='kStartDateKCItemAttr' value='1935958388'/>
<enum name='kStillIdle' value='25'/>
<enum name='kSubjectKCItemAttr' value='1937072746'/>
<enum name='kSuspendDemand' value='13'/>
<enum name='kSuspendRequest' value='12'/>
<enum name='kSuspendRevoke' value='14'/>
<enum name='kSuspendWakeToDoze' value='23'/>
<enum name='kSuspendWakeUp' value='15'/>
<enum name='kSystemEventKCEventMask' value='256'/>
<enum name='kSystemKCEvent' value='8'/>
<enum name='kSystemSoundClientTimedOutError' value='-1501'/>
<enum name='kSystemSoundNoError' value='0'/>
<enum name='kSystemSoundUnspecifiedError' value='-1500'/>
<enum name='kThumbnail32BitData' value='1769222962'/>
<enum name='kThumbnail8BitMask' value='1949855083'/>
<enum name='kTileIconVariant' value='1953066085'/>
<enum name='kTypeKCItemAttr' value='1954115685'/>
<enum name='kUnlockKCEvent' value='2'/>
<enum name='kUnlockKCEventMask' value='4'/>
<enum name='kUnlockStateKCStatus' value='1'/>
<enum name='kUnwrapKCItemAttr' value='1970173810'/>
<enum name='kUpdateKCEvent' value='5'/>
<enum name='kUpdateKCEventMask' value='32'/>
<enum name='kVerifyKCItemAttr' value='1986359913'/>
<enum name='kVolumeKCItemAttr' value='1986817381'/>
<enum name='kWakeToDoze' value='19'/>
<enum name='kWrPermKCStatus' value='4'/>
<enum name='kWrapKCItemAttr' value='2003984752'/>
<enum name='large1BitMask' value='1229147683'/>
<enum name='large4BitData' value='1768123444'/>
<enum name='large8BitData' value='1768123448'/>
<enum name='mini1BitMask' value='1768123683'/>
<enum name='mini4BitData' value='1768123700'/>
<enum name='mini8BitData' value='1768123704'/>
<enum name='noCalls' value='1'/>
<enum name='noRequest' value='2'/>
<enum name='sleepQType' value='16'/>
<enum name='slpQType' value='16'/>
<enum name='small1BitMask' value='1768125219'/>
<enum name='small4BitData' value='1768125236'/>
<enum name='small8BitData' value='1768125240'/>
<function name='AlertSoundPlay'>
<retval declared_type='void' type='v'/>
</function>
<function name='AlertSoundPlayCustomSound'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='BatteryCount'>
<retval declared_type='short' type='s'/>
</function>
<function name='CSGetDefaultIdentityAuthority'>
<retval declared_type='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSGetLocalIdentityAuthority'>
<retval declared_type='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSGetManagedIdentityAuthority'>
<retval declared_type='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSIdentityAddAlias'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='alias' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityAddMember'>
<arg declared_type='CSIdentityRef' name='group' type='^{__CSIdentity=}'/>
<arg declared_type='CSIdentityRef' name='member' type='^{__CSIdentity=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityAuthenticateUsingPassword'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='password' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityAuthorityCopyLocalizedName'>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityAuthorityGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='CSIdentityCommit'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='AuthorizationRef' name='authorization' type='^{AuthorizationOpaqueRef=}'/>
<arg declared_type='CFErrorRef*' name='error' type='^^{__CFError}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityCommitAsynchronously'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg const='true' declared_type='CSIdentityClientContext*' name='clientContext' type='^{CSIdentityClientContext=i^v^?^?^?^?}' type64='^{CSIdentityClientContext=q^v^?^?^?^?}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<arg declared_type='AuthorizationRef' name='authorization' type='^{AuthorizationOpaqueRef=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityClass' name='identityClass' type='l' type64='q'/>
<arg declared_type='CFStringRef' name='fullName' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='posixName' type='^{__CFString=}'/>
<arg declared_type='CSIdentityFlags' name='flags' type='L' type64='Q'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityRef' type='^{__CSIdentity=}'/>
</function>
<function name='CSIdentityCreateCopy'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type='CSIdentityRef' type='^{__CSIdentity=}'/>
</function>
<function name='CSIdentityCreateGroupMembershipQuery'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityRef' name='group' type='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityCreatePersistentReference'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='CSIdentityDelete'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityGetAliases'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='CSIdentityGetAuthority'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSIdentityGetCertificate'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<retval declared_type='SecCertificateRef' type='^{OpaqueSecCertificateRef=}'/>
</function>
<function name='CSIdentityGetClass'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CSIdentityClass' type='l' type64='q'/>
</function>
<function name='CSIdentityGetEmailAddress'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityGetFullName'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityGetImageData'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='CSIdentityGetImageDataType'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityGetImageURL'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFURLRef' type='^{__CFURL=}'/>
</function>
<function name='CSIdentityGetPosixID'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='id_t' type='I'/>
</function>
<function name='CSIdentityGetPosixName'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='CSIdentityGetUUID'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFUUIDRef' type='^{__CFUUID=}'/>
</function>
<function name='CSIdentityIsCommitting'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityIsEnabled'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityIsHidden'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityIsMemberOfGroup'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CSIdentityRef' name='group' type='^{__CSIdentity=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityQueryCopyResults'>
<arg declared_type='CSIdentityQueryRef' name='query' type='^{__CSIdentityQuery=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='CSIdentityQueryCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityClass' name='identityClass' type='l' type64='q'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForCurrentUser'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForName'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<arg declared_type='CSIdentityQueryStringComparisonMethod' name='comparisonMethod' type='l' type64='q'/>
<arg declared_type='CSIdentityClass' name='identityClass' type='l' type64='q'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForPersistentReference'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFDataRef' name='referenceData' type='^{__CFData=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForPosixID'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='id_t' name='posixID' type='I'/>
<arg declared_type='CSIdentityClass' name='identityClass' type='l' type64='q'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForUUID'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFUUIDRef' name='uuid' type='^{__CFUUID=}'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryExecute'>
<arg declared_type='CSIdentityQueryRef' name='query' type='^{__CSIdentityQuery=}'/>
<arg declared_type='CSIdentityQueryFlags' name='flags' type='L' type64='Q'/>
<arg declared_type='CFErrorRef*' name='error' type='^^{__CFError}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityQueryExecuteAsynchronously'>
<arg declared_type='CSIdentityQueryRef' name='query' type='^{__CSIdentityQuery=}'/>
<arg declared_type='CSIdentityQueryFlags' name='flags' type='L' type64='Q'/>
<arg const='true' declared_type='CSIdentityQueryClientContext*' name='clientContext' type='^{CSIdentityQueryClientContext=i^v^?^?^?^?}' type64='^{CSIdentityQueryClientContext=q^v^?^?^?^?}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityQueryGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='CSIdentityQueryStop'>
<arg declared_type='CSIdentityQueryRef' name='query' type='^{__CSIdentityQuery=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityRemoveAlias'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='alias' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityRemoveClient'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityRemoveMember'>
<arg declared_type='CSIdentityRef' name='group' type='^{__CSIdentity=}'/>
<arg declared_type='CSIdentityRef' name='member' type='^{__CSIdentity=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetCertificate'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<arg declared_type='SecCertificateRef' name='certificate' type='^{OpaqueSecCertificateRef=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetEmailAddress'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='emailAddress' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetFullName'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='fullName' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetImageData'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFDataRef' name='imageData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef' name='imageDataType' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetImageURL'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFURLRef' name='url' type='^{__CFURL=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetIsEnabled'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<arg declared_type='Boolean' name='isEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetPassword'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='password' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CurrentProcessorSpeed'>
<retval declared_type='short' type='s'/>
</function>
<function name='DisposeKCCallbackUPP'>
<arg declared_type='KCCallbackUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeSleepQUPP'>
<arg declared_type='SleepQUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeSystemSoundCompletionUPP'>
<arg declared_type='SystemSoundCompletionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='GetCPUSpeed'>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='InvokeKCCallbackUPP'>
<arg declared_type='KCEvent' name='keychainEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' name='info' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' name='userContext' type='^v'/>
<arg declared_type='KCCallbackUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='InvokeSleepQUPP'>
<arg declared_type='long' name='message' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' name='qRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<arg declared_type='SleepQUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='InvokeSystemSoundCompletionUPP'>
<arg declared_type='SystemSoundActionID' name='actionID' type='L' type64='I'/>
<arg declared_type='void*' name='userData' type='^v'/>
<arg declared_type='SystemSoundCompletionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCAddCallback'>
<arg declared_type='KCCallbackUPP' function_pointer='true' name='callbackProc' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='KCEventMask' name='eventMask' type='S'/>
<arg declared_type='void*' name='userContext' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCCopyItem'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='KCRef' name='destKeychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='KCItemRef*' name='copy' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCCountKeychains'>
<retval declared_type='UInt16' type='S'/>
</function>
<function name='KCDeleteItem'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindAppleSharePassword'>
<arg declared_type='AFPServerSignature*' name='serverSignature' type='^[16C]'/>
<arg declared_type='ConstStringPtr' name='serverAddress' type='*'/>
<arg declared_type='ConstStringPtr' name='serverName' type='*'/>
<arg declared_type='ConstStringPtr' name='volumeName' type='*'/>
<arg declared_type='ConstStringPtr' name='accountName' type='*'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindFirstItem'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg const='true' declared_type='KCAttributeList*' name='attrList' type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}'/>
<arg declared_type='KCSearchRef*' name='search' type='^^{OpaqueSecKeychainSearchRef}'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindGenericPassword'>
<arg declared_type='ConstStringPtr' name='serviceName' type='*'/>
<arg declared_type='ConstStringPtr' name='accountName' type='*'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindInternetPassword'>
<arg declared_type='ConstStringPtr' name='serverName' type='*'/>
<arg declared_type='ConstStringPtr' name='securityDomain' type='*'/>
<arg declared_type='ConstStringPtr' name='accountName' type='*'/>
<arg declared_type='UInt16' name='port' type='S'/>
<arg declared_type='OSType' name='protocol' type='L' type64='I'/>
<arg declared_type='OSType' name='authType' type='L' type64='I'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindInternetPasswordWithPath'>
<arg declared_type='ConstStringPtr' name='serverName' type='*'/>
<arg declared_type='ConstStringPtr' name='securityDomain' type='*'/>
<arg declared_type='ConstStringPtr' name='accountName' type='*'/>
<arg declared_type='ConstStringPtr' name='path' type='*'/>
<arg declared_type='UInt16' name='port' type='S'/>
<arg declared_type='OSType' name='protocol' type='L' type64='I'/>
<arg declared_type='OSType' name='authType' type='L' type64='I'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindNextItem'>
<arg declared_type='KCSearchRef' name='search' type='^{OpaqueSecKeychainSearchRef=}'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetAttribute'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='KCAttribute*' name='attr' type='^{SecKeychainAttribute=II^v}'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetData'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='data' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetDefaultKeychain'>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetIndKeychain'>
<arg declared_type='UInt16' name='index' type='S'/>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetKeychain'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetKeychainManagerVersion'>
<arg declared_type='UInt32*' name='returnVers' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetKeychainName'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='StringPtr' name='keychainName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetStatus'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='UInt32*' name='keychainStatus' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCIsInteractionAllowed'>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='KCLock'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCMakeAliasFromKCRef'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='AliasHandle*' name='keychainAlias' type='^^^{AliasRecord}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCMakeKCRefFromAlias'>
<arg declared_type='AliasHandle' name='keychainAlias' type='^^{AliasRecord}'/>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCMakeKCRefFromFSRef'>
<arg declared_type='FSRef*' name='keychainFSRef' type='^{FSRef=[80C]}'/>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCNewItem'>
<arg declared_type='KCItemClass' name='itemClass' type='L' type64='I'/>
<arg declared_type='OSType' name='itemCreator' type='L' type64='I'/>
<arg declared_type='UInt32' name='length' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='data' type='^v'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCReleaseItem'>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCReleaseKeychain'>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCReleaseSearch'>
<arg declared_type='KCSearchRef*' name='search' type='^^{OpaqueSecKeychainSearchRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCRemoveCallback'>
<arg declared_type='KCCallbackUPP' function_pointer='true' name='callbackProc' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCSetAttribute'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='KCAttribute*' name='attr' type='^{SecKeychainAttribute=II^v}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCSetData'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='UInt32' name='length' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='data' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCSetDefaultKeychain'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCSetInteractionAllowed'>
<arg declared_type='Boolean' name='state' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCUpdateItem'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MaximumProcessorSpeed'>
<retval declared_type='short' type='s'/>
</function>
<function name='MinimumProcessorSpeed'>
<retval declared_type='short' type='s'/>
</function>
<function name='NewKCCallbackUPP'>
<arg declared_type='KCCallbackProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='KCCallbackUPP' function_pointer='true' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</retval>
</function>
<function name='NewSleepQUPP'>
<arg declared_type='SleepQProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='SleepQUPP' function_pointer='true' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</retval>
</function>
<function name='NewSystemSoundCompletionUPP'>
<arg declared_type='SystemSoundCompletionProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='SystemSoundCompletionUPP' function_pointer='true' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</retval>
</function>
<function name='SleepQInstall'>
<arg declared_type='SleepQRecPtr' name='qRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SleepQRemove'>
<arg declared_type='SleepQRecPtr' name='qRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SystemSoundGetActionID'>
<arg const='true' declared_type='FSRef*' name='userFile' type='^{FSRef=[80C]}'/>
<arg declared_type='SystemSoundActionID*' name='outAction' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SystemSoundPlay'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SystemSoundRemoveActionID'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SystemSoundRemoveCompletionRoutine'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SystemSoundSetCompletionRoutine'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<arg declared_type='CFRunLoopRef' name='inRunLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='inRunLoopMode' type='^{__CFString=}'/>
<arg declared_type='SystemSoundCompletionUPP' function_pointer='true' name='inCompletionRoutine' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='void*' name='inUserData' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UpdateSystemActivity'>
<arg declared_type='UInt8' name='activity' type='C'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='WSGetCFTypeIDFromWSTypeID'>
<arg declared_type='WSTypeID' name='typeID' type='i'/>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='WSGetWSTypeIDFromCFType'>
<arg declared_type='CFTypeRef' name='ref' type='@'/>
<retval declared_type='WSTypeID' type='i'/>
</function>
<function name='WSMethodInvocationAddDeserializationOverride'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFStringRef' name='typeNamespace' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='typeName' type='^{__CFString=}'/>
<arg declared_type='WSMethodInvocationDeserializationProcPtr' function_pointer='true' name='deserializationProc' type='^?'>
<arg declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFXMLTreeRef' type='^{__CFTree=}'/>
<arg declared_type='CFXMLTreeRef' type='^{__CFTree=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFTypeRef' type='@'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationAddSerializationOverride'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFTypeID' name='objType' type='L' type64='Q'/>
<arg declared_type='WSMethodInvocationSerializationProcPtr' function_pointer='true' name='serializationProc' type='^?'>
<arg declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFTypeRef' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationCopyParameters'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFArrayRef*' name='parameterOrder' type='^^{__CFArray}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='WSMethodInvocationCopyProperty'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFStringRef' name='propertyName' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFTypeRef' type='@'/>
</function>
<function name='WSMethodInvocationCopySerialization'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='WSMethodInvocationCreate'>
<arg declared_type='CFURLRef' name='url' type='^{__CFURL=}'/>
<arg declared_type='CFStringRef' name='methodName' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='protocol' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
</function>
<function name='WSMethodInvocationCreateFromSerialization'>
<arg declared_type='CFDataRef' name='contract' type='^{__CFData=}'/>
<retval already_retained='true' declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
</function>
<function name='WSMethodInvocationGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='WSMethodInvocationInvoke'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='WSMethodInvocationScheduleWithRunLoop'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationSetCallBack'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='WSMethodInvocationCallBackProcPtr' function_pointer='true' name='clientCB' type='^?'>
<arg declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationSetParameters'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFDictionaryRef' name='parameters' type='^{__CFDictionary=}'/>
<arg declared_type='CFArrayRef' name='parameterOrder' type='^{__CFArray=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationSetProperty'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFStringRef' name='propertyName' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='propertyValue' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationUnscheduleFromRunLoop'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodResultIsFault'>
<arg declared_type='CFDictionaryRef' name='methodResult' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='WSProtocolHandlerCopyFaultDocument'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFDictionaryRef' name='methodContext' type='^{__CFDictionary=}'/>
<arg declared_type='CFDictionaryRef' name='faultDict' type='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCopyProperty'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='propertyName' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFTypeRef' type='@'/>
</function>
<function name='WSProtocolHandlerCopyReplyDictionary'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='methodName' type='^{__CFString=}'/>
<arg declared_type='CFDataRef' name='data' type='^{__CFData=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='WSProtocolHandlerCopyReplyDocument'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFDictionaryRef' name='methodContext' type='^{__CFDictionary=}'/>
<arg declared_type='CFTypeRef' name='resultValue' type='@'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCopyRequestDictionary'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFDataRef' name='data' type='^{__CFData=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='WSProtocolHandlerCopyRequestDocument'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='methodName' type='^{__CFString=}'/>
<arg declared_type='CFDictionaryRef' name='methodParams' type='^{__CFDictionary=}'/>
<arg declared_type='CFArrayRef' name='methodParamOrder' type='^{__CFArray=}'/>
<arg declared_type='CFDictionaryRef' name='methodExtras' type='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='protocol' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='WSProtocolHandlerRef' type='^{OpaqueWSProtocolHandlerRef=}'/>
</function>
<function name='WSProtocolHandlerGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='WSProtocolHandlerSetDeserializationOverride'>
<arg declared_type='WSProtocolHandlerRef' name='protocol' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='typeNamespace' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='typeName' type='^{__CFString=}'/>
<arg declared_type='WSProtocolHandlerDeserializationProcPtr' function_pointer='true' name='deserializationProc' type='^?'>
<arg declared_type='WSProtocolHandlerRef' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFXMLTreeRef' type='^{__CFTree=}'/>
<arg declared_type='CFXMLTreeRef' type='^{__CFTree=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFTypeRef' type='@'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSProtocolHandlerSetProperty'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='propertyName' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='propertyValue' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSProtocolHandlerSetSerializationOverride'>
<arg declared_type='WSProtocolHandlerRef' name='protocol' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFTypeID' name='objType' type='L' type64='Q'/>
<arg declared_type='WSProtocolHandlerSerializationProcPtr' function_pointer='true' name='serializationProc' type='^?'>
<arg declared_type='WSProtocolHandlerRef' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFTypeRef' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='kcfindapplesharepassword'>
<arg declared_type='AFPServerSignature*' name='serverSignature' type='^[16C]'/>
<arg const='true' declared_type='char*' name='serverAddress' type='*'/>
<arg const='true' declared_type='char*' name='serverName' type='*'/>
<arg const='true' declared_type='char*' name='volumeName' type='*'/>
<arg const='true' declared_type='char*' name='accountName' type='*'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='kcfindgenericpassword'>
<arg const='true' declared_type='char*' name='serviceName' type='*'/>
<arg const='true' declared_type='char*' name='accountName' type='*'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='kcfindinternetpassword'>
<arg const='true' declared_type='char*' name='serverName' type='*'/>
<arg const='true' declared_type='char*' name='securityDomain' type='*'/>
<arg const='true' declared_type='char*' name='accountName' type='*'/>
<arg declared_type='UInt16' name='port' type='S'/>
<arg declared_type='OSType' name='protocol' type='L' type64='I'/>
<arg declared_type='OSType' name='authType' type='L' type64='I'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='kcfindinternetpasswordwithpath'>
<arg const='true' declared_type='char*' name='serverName' type='*'/>
<arg const='true' declared_type='char*' name='securityDomain' type='*'/>
<arg const='true' declared_type='char*' name='accountName' type='*'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg declared_type='UInt16' name='port' type='S'/>
<arg declared_type='OSType' name='protocol' type='L' type64='I'/>
<arg declared_type='OSType' name='authType' type='L' type64='I'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='kcgetkeychainname'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='char*' name='keychainName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<cftype gettypeid_func='SKIndexDocumentIteratorGetTypeID' name='SKIndexDocumentIteratorRef' type='^{__SKIndexDocumentIterator=}'/>
<cftype gettypeid_func='SKIndexGetTypeID' name='SKIndexRef' type='^{__SKIndex=}'/>
<cftype gettypeid_func='SKSearchGroupGetTypeID' name='SKSearchGroupRef' type='^{__SKSearchGroup=}'/>
<cftype gettypeid_func='SKSearchGetTypeID' name='SKSearchRef' type='^{__SKSearch=}'/>
<cftype gettypeid_func='SKSearchResultsGetTypeID' name='SKSearchResultsRef' type='^{__SKSearchResults=}'/>
<cftype gettypeid_func='SKSummaryGetTypeID' name='SKSummaryRef' type='^{__SKSummary=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKEndTermChars' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKLanguageTypes' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKMaximumTerms' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKMinTermLength' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKProximityIndexing' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKStartTermChars' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKStopWords' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKSubstitutions' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kSKTermChars' type='^{__CFString=}'/>
<enum name='kSKDocumentStateAddPending' value='2'/>
<enum name='kSKDocumentStateDeletePending' value='3'/>
<enum name='kSKDocumentStateIndexed' value='1'/>
<enum name='kSKDocumentStateNotIndexed' value='0'/>
<enum name='kSKIndexInverted' value='1'/>
<enum name='kSKIndexInvertedVector' value='3'/>
<enum name='kSKIndexUnknown' value='0'/>
<enum name='kSKIndexVector' value='2'/>
<enum name='kSKSearchBooleanRanked' value='1'/>
<enum name='kSKSearchOptionDefault' value='0'/>
<enum name='kSKSearchOptionFindSimilar' value='4'/>
<enum name='kSKSearchOptionNoRelevanceScores' value='1'/>
<enum name='kSKSearchOptionSpaceMeansOR' value='2'/>
<enum name='kSKSearchPrefixRanked' value='3'/>
<enum name='kSKSearchRanked' value='0'/>
<enum name='kSKSearchRequiredRanked' value='2'/>
<function name='SKDocumentCopyURL'>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<retval already_retained='true' declared_type='CFURLRef' type='^{__CFURL=}'/>
</function>
<function name='SKDocumentCreate'>
<arg declared_type='CFStringRef' name='inScheme' type='^{__CFString=}'/>
<arg declared_type='SKDocumentRef' name='inParent' type='@'/>
<arg declared_type='CFStringRef' name='inName' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='SKDocumentRef' type='@'/>
</function>
<function name='SKDocumentCreateWithURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<retval already_retained='true' declared_type='SKDocumentRef' type='@'/>
</function>
<function name='SKDocumentGetName'>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SKDocumentGetParent'>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<retval declared_type='SKDocumentRef' type='@'/>
</function>
<function name='SKDocumentGetSchemeName'>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SKDocumentGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SKIndexAddDocument'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<arg declared_type='CFStringRef' name='inMIMETypeHint' type='^{__CFString=}'/>
<arg declared_type='Boolean' name='inCanReplace' type='B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SKIndexAddDocumentWithText'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<arg declared_type='CFStringRef' name='inDocumentText' type='^{__CFString=}'/>
<arg declared_type='Boolean' name='inCanReplace' type='B'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SKIndexClose'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SKIndexCompact'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SKIndexCopyDocumentForDocumentID'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentID' name='inDocumentID' type='l' type64='q'/>
<retval already_retained='true' declared_type='SKDocumentRef' type='@'/>
</function>
<function name='SKIndexCopyDocumentIDArrayForTermID'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFIndex' name='inTermID' type='l' type64='q'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SKIndexCopyDocumentProperties'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SKIndexCopyDocumentRefsForDocumentIDs'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFIndex' name='inCount' type='l' type64='q'/>
<arg declared_type='SKDocumentID*' name='inDocumentIDsArray' type='^i' type64='^q'/>
<arg declared_type='SKDocumentRef*' name='outDocumentRefsArray' type='^^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SKIndexCopyDocumentURLsForDocumentIDs'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFIndex' name='inCount' type='l' type64='q'/>
<arg declared_type='SKDocumentID*' name='inDocumentIDsArray' type='^i' type64='^q'/>
<arg declared_type='CFURLRef*' name='outDocumentURLsArray' type='^^{__CFURL}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SKIndexCopyInfoForDocumentIDs'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFIndex' name='inCount' type='l' type64='q'/>
<arg declared_type='SKDocumentID*' name='inDocumentIDsArray' type='^i' type64='^q'/>
<arg declared_type='CFStringRef*' name='outNamesArray' type='^^{__CFString}'/>
<arg declared_type='SKDocumentID*' name='outParentIDsArray' type='^i' type64='^q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SKIndexCopyTermIDArrayForDocumentID'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentID' name='inDocumentID' type='l' type64='q'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SKIndexCopyTermStringForTermID'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFIndex' name='inTermID' type='l' type64='q'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SKIndexCreateWithMutableData'>
<arg declared_type='CFMutableDataRef' name='inData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef' name='inIndexName' type='^{__CFString=}'/>
<arg declared_type='SKIndexType' name='inIndexType' type='i'/>
<arg declared_type='CFDictionaryRef' name='inAnalysisProperties' type='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type='SKIndexRef' type='^{__SKIndex=}'/>
</function>
<function name='SKIndexCreateWithURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='CFStringRef' name='inIndexName' type='^{__CFString=}'/>
<arg declared_type='SKIndexType' name='inIndexType' type='i'/>
<arg declared_type='CFDictionaryRef' name='inAnalysisProperties' type='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type='SKIndexRef' type='^{__SKIndex=}'/>
</function>
<function name='SKIndexDocumentIteratorCopyNext'>
<arg declared_type='SKIndexDocumentIteratorRef' name='inIterator' type='^{__SKIndexDocumentIterator=}'/>
<retval already_retained='true' declared_type='SKDocumentRef' type='@'/>
</function>
<function name='SKIndexDocumentIteratorCreate'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inParentDocument' type='@'/>
<retval already_retained='true' declared_type='SKIndexDocumentIteratorRef' type='^{__SKIndexDocumentIterator=}'/>
</function>
<function name='SKIndexDocumentIteratorGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SKIndexFlush'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SKIndexGetAnalysisProperties'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='SKIndexGetDocumentCount'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKIndexGetDocumentID'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<retval declared_type='SKDocumentID' type='l' type64='q'/>
</function>
<function name='SKIndexGetDocumentState'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<retval declared_type='SKDocumentIndexState' type='i'/>
</function>
<function name='SKIndexGetDocumentTermCount'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentID' name='inDocumentID' type='l' type64='q'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKIndexGetDocumentTermFrequency'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentID' name='inDocumentID' type='l' type64='q'/>
<arg declared_type='CFIndex' name='inTermID' type='l' type64='q'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKIndexGetIndexType'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='SKIndexType' type='i'/>
</function>
<function name='SKIndexGetMaximumBytesBeforeFlush'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKIndexGetMaximumDocumentID'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='SKDocumentID' type='l' type64='q'/>
</function>
<function name='SKIndexGetMaximumTermID'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKIndexGetTermDocumentCount'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFIndex' name='inTermID' type='l' type64='q'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKIndexGetTermIDForTermString'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFStringRef' name='inTermString' type='^{__CFString=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKIndexGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SKIndexMoveDocument'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<arg declared_type='SKDocumentRef' name='inNewParent' type='@'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SKIndexOpenWithData'>
<arg declared_type='CFDataRef' name='inData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef' name='inIndexName' type='^{__CFString=}'/>
<retval declared_type='SKIndexRef' type='^{__SKIndex=}'/>
</function>
<function name='SKIndexOpenWithMutableData'>
<arg declared_type='CFMutableDataRef' name='inData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef' name='inIndexName' type='^{__CFString=}'/>
<retval declared_type='SKIndexRef' type='^{__SKIndex=}'/>
</function>
<function name='SKIndexOpenWithURL'>
<arg declared_type='CFURLRef' name='inURL' type='^{__CFURL=}'/>
<arg declared_type='CFStringRef' name='inIndexName' type='^{__CFString=}'/>
<arg declared_type='Boolean' name='inWriteAccess' type='B'/>
<retval declared_type='SKIndexRef' type='^{__SKIndex=}'/>
</function>
<function name='SKIndexRemoveDocument'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SKIndexRenameDocument'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<arg declared_type='CFStringRef' name='inNewName' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SKIndexSetDocumentProperties'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' name='inDocument' type='@'/>
<arg declared_type='CFDictionaryRef' name='inProperties' type='^{__CFDictionary=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SKIndexSetMaximumBytesBeforeFlush'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFIndex' name='inBytesForUpdate' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SKLoadDefaultExtractorPlugIns'>
<retval declared_type='void' type='v'/>
</function>
<function name='SKSearchCancel'>
<arg declared_type='SKSearchRef' name='inSearch' type='^{__SKSearch=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SKSearchCreate'>
<arg declared_type='SKIndexRef' name='inIndex' type='^{__SKIndex=}'/>
<arg declared_type='CFStringRef' name='inQuery' type='^{__CFString=}'/>
<arg declared_type='SKSearchOptions' name='inSearchOptions' type='L' type64='I'/>
<retval already_retained='true' declared_type='SKSearchRef' type='^{__SKSearch=}'/>
</function>
<function name='SKSearchFindMatches'>
<arg declared_type='SKSearchRef' name='inSearch' type='^{__SKSearch=}'/>
<arg declared_type='CFIndex' name='inMaximumCount' type='l' type64='q'/>
<arg declared_type='SKDocumentID*' name='outDocumentIDsArray' type='^i' type64='^q'/>
<arg declared_type='float*' name='outScoresArray' type='^f'/>
<arg declared_type='CFTimeInterval' name='maximumTime' type='d'/>
<arg declared_type='CFIndex*' name='outFoundCount' type='^i' type64='^q'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='SKSearchGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SKSearchGroupCopyIndexes'>
<arg declared_type='SKSearchGroupRef' name='inSearchGroup' type='^{__SKSearchGroup=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SKSearchGroupCreate'>
<arg declared_type='CFArrayRef' name='inArrayOfInIndexes' type='^{__CFArray=}'/>
<retval already_retained='true' declared_type='SKSearchGroupRef' type='^{__SKSearchGroup=}'/>
</function>
<function name='SKSearchGroupGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SKSearchResultsCopyMatchingTerms'>
<arg declared_type='SKSearchResultsRef' name='inSearchResults' type='^{__SKSearchResults=}'/>
<arg declared_type='CFIndex' name='inItem' type='l' type64='q'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='SKSearchResultsCreateWithDocuments'>
<arg declared_type='SKSearchGroupRef' name='inSearchGroup' type='^{__SKSearchGroup=}'/>
<arg declared_type='CFArrayRef' name='inExampleDocuments' type='^{__CFArray=}'/>
<arg declared_type='CFIndex' name='inMaxFoundDocuments' type='l' type64='q'/>
<arg declared_type='void*' name='inContext' type='^v'/>
<arg declared_type='SKSearchResultsFilterCallBack' function_pointer='true' name='inFilterCallBack' type='^?'>
<arg declared_type='SKIndexRef' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval already_retained='true' declared_type='SKSearchResultsRef' type='^{__SKSearchResults=}'/>
</function>
<function name='SKSearchResultsCreateWithQuery'>
<arg declared_type='SKSearchGroupRef' name='inSearchGroup' type='^{__SKSearchGroup=}'/>
<arg declared_type='CFStringRef' name='inQuery' type='^{__CFString=}'/>
<arg declared_type='SKSearchType' name='inSearchType' type='i'/>
<arg declared_type='CFIndex' name='inMaxFoundDocuments' type='l' type64='q'/>
<arg declared_type='void*' name='inContext' type='^v'/>
<arg declared_type='SKSearchResultsFilterCallBack' function_pointer='true' name='inFilterCallBack' type='^?'>
<arg declared_type='SKIndexRef' type='^{__SKIndex=}'/>
<arg declared_type='SKDocumentRef' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval already_retained='true' declared_type='SKSearchResultsRef' type='^{__SKSearchResults=}'/>
</function>
<function name='SKSearchResultsGetCount'>
<arg declared_type='SKSearchResultsRef' name='inSearchResults' type='^{__SKSearchResults=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKSearchResultsGetInfoInRange'>
<arg declared_type='SKSearchResultsRef' name='inSearchResults' type='^{__SKSearchResults=}'/>
<arg declared_type='CFRange' name='inRange' type='{_CFRange=ii}' type64='{_CFRange=qq}'/>
<arg declared_type='SKDocumentRef*' name='outDocumentsArray' type='^^v'/>
<arg declared_type='SKIndexRef*' name='outIndexesArray' type='^^{__SKIndex}'/>
<arg declared_type='float*' name='outScoresArray' type='^f'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKSearchResultsGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='SKSummaryCopyParagraphAtIndex'>
<arg declared_type='SKSummaryRef' name='summary' type='^{__SKSummary=}'/>
<arg declared_type='CFIndex' name='i' type='l' type64='q'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SKSummaryCopyParagraphSummaryString'>
<arg declared_type='SKSummaryRef' name='summary' type='^{__SKSummary=}'/>
<arg declared_type='CFIndex' name='numParagraphs' type='l' type64='q'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SKSummaryCopySentenceAtIndex'>
<arg declared_type='SKSummaryRef' name='summary' type='^{__SKSummary=}'/>
<arg declared_type='CFIndex' name='i' type='l' type64='q'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SKSummaryCopySentenceSummaryString'>
<arg declared_type='SKSummaryRef' name='summary' type='^{__SKSummary=}'/>
<arg declared_type='CFIndex' name='numSentences' type='l' type64='q'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='SKSummaryCreateWithString'>
<arg declared_type='CFStringRef' name='inString' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='SKSummaryRef' type='^{__SKSummary=}'/>
</function>
<function name='SKSummaryGetParagraphCount'>
<arg declared_type='SKSummaryRef' name='summary' type='^{__SKSummary=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKSummaryGetParagraphSummaryInfo'>
<arg declared_type='SKSummaryRef' name='summary' type='^{__SKSummary=}'/>
<arg declared_type='CFIndex' name='numParagraphsInSummary' type='l' type64='q'/>
<arg declared_type='CFIndex*' name='outRankOrderOfParagraphs' type='^i' type64='^q'/>
<arg declared_type='CFIndex*' name='outParagraphIndexOfParagraphs' type='^i' type64='^q'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKSummaryGetSentenceCount'>
<arg declared_type='SKSummaryRef' name='summary' type='^{__SKSummary=}'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKSummaryGetSentenceSummaryInfo'>
<arg declared_type='SKSummaryRef' name='summary' type='^{__SKSummary=}'/>
<arg declared_type='CFIndex' name='numSentencesInSummary' type='l' type64='q'/>
<arg declared_type='CFIndex*' name='outRankOrderOfSentences' type='^i' type64='^q'/>
<arg declared_type='CFIndex*' name='outSentenceIndexOfSentences' type='^i' type64='^q'/>
<arg declared_type='CFIndex*' name='outParagraphIndexOfSentences' type='^i' type64='^q'/>
<retval declared_type='CFIndex' type='l' type64='q'/>
</function>
<function name='SKSummaryGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
</signatures>
