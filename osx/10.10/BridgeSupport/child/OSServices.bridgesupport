<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<struct name='CSIdentityClientContext' type='{CSIdentityClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;statusUpdated&quot;^?}' type64='{CSIdentityClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?&quot;statusUpdated&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='CFAllocatorRetainCallBack' function_pointer='true' name='retain' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='CFAllocatorReleaseCallBack' function_pointer='true' name='release' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyDescription' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
<field declared_type='CSIdentityStatusUpdatedCallback' function_pointer='true' name='statusUpdated' type='^?'>
<arg declared_type='CSIdentityRef' type='^{__CSIdentity=}'/>
<arg declared_type='CFIndex' type='l' type64='q'/>
<arg declared_type='CFErrorRef' type='^{__CFError=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='CSIdentityQueryClientContext' type='{CSIdentityQueryClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retainInfo&quot;^?&quot;releaseInfo&quot;^?&quot;copyInfoDescription&quot;^?&quot;receiveEvent&quot;^?}' type64='{CSIdentityQueryClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retainInfo&quot;^?&quot;releaseInfo&quot;^?&quot;copyInfoDescription&quot;^?&quot;receiveEvent&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='CFAllocatorRetainCallBack' function_pointer='true' name='retainInfo' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='CFAllocatorReleaseCallBack' function_pointer='true' name='releaseInfo' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='CFAllocatorCopyDescriptionCallBack' function_pointer='true' name='copyInfoDescription' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
<field declared_type='CSIdentityQueryReceiveEventCallback' function_pointer='true' name='receiveEvent' type='^?'>
<arg declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
<arg declared_type='CSIdentityQueryEvent' type='l' type64='q'/>
<arg declared_type='CFArrayRef' type='^{__CFArray=}'/>
<arg declared_type='CFErrorRef' type='^{__CFError=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='IconFamilyElement' type='{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}'>
<field declared_type='OSType' name='elementType' type='L' type64='I'/>
<field declared_type='SInt32' name='elementSize' type='l' type64='i'/>
<field declared_type='unsigned char*' name='elementData' type='[1C]'/>
</struct>
<struct name='IconFamilyResource' type='{IconFamilyResource=&quot;resourceType&quot;I&quot;resourceSize&quot;i&quot;elements&quot;[1{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}]}'>
<field declared_type='OSType' name='resourceType' type='L' type64='I'/>
<field declared_type='SInt32' name='resourceSize' type='l' type64='i'/>
<field declared_type='IconFamilyElement*' name='elements' type='[1{IconFamilyElement=&quot;elementType&quot;I&quot;elementSize&quot;i&quot;elementData&quot;[1C]}]'/>
</struct>
<struct name='KCAttribute' type='{SecKeychainAttribute=&quot;tag&quot;I&quot;length&quot;I&quot;data&quot;^v}'>
<field declared_type='SecKeychainAttrType' name='tag' type='L' type64='I'/>
<field declared_type='UInt32' name='length' type='L' type64='I'/>
<field declared_type='void*' name='data' type='^v'/>
</struct>
<struct name='KCAttributeList' type='{SecKeychainAttributeList=&quot;count&quot;I&quot;attr&quot;^{SecKeychainAttribute}}'>
<field declared_type='UInt32' name='count' type='L' type64='I'/>
<field declared_type='SecKeychainAttribute*' name='attr' type='^{SecKeychainAttribute=II^v}'/>
</struct>
<struct name='KCCallbackInfo' type='{KCCallbackInfo=&quot;version&quot;I&quot;item&quot;^{OpaqueSecKeychainItemRef}&quot;processID&quot;[2l]&quot;event&quot;[4l]&quot;keychain&quot;^{OpaqueSecKeychainRef}}' type64='{KCCallbackInfo=&quot;version&quot;I&quot;item&quot;^{OpaqueSecKeychainItemRef}&quot;processID&quot;[2i]&quot;event&quot;[4i]&quot;keychain&quot;^{OpaqueSecKeychainRef}}'>
<field declared_type='UInt32' name='version' type='L' type64='I'/>
<field declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<field declared_type='SInt32*' name='processID' type='[2l]' type64='[2i]'/>
<field declared_type='SInt32*' name='event' type='[4l]' type64='[4i]'/>
<field declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
</struct>
<struct name='SleepQRec' type='{SleepQRec=&quot;sleepQLink&quot;^{SleepQRec}&quot;sleepQType&quot;s&quot;sleepQProc&quot;^?&quot;sleepQFlags&quot;s}'>
<field declared_type='SleepQRecPtr' name='sleepQLink' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<field declared_type='short' name='sleepQType' type='s'/>
<field declared_type='SleepQUPP' function_pointer='true' name='sleepQProc' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</field>
<field declared_type='short' name='sleepQFlags' type='s'/>
</struct>
<struct name='WSClientContext' type='{WSClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type64='{WSClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'>
<field declared_type='CFIndex' name='version' type='l' type64='q'/>
<field declared_type='void*' name='info' type='^v'/>
<field declared_type='WSClientContextRetainCallBackProcPtr' function_pointer='true' name='retain' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='WSClientContextReleaseCallBackProcPtr' function_pointer='true' name='release' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='WSClientContextCopyDescriptionCallBackProcPtr' function_pointer='true' name='copyDescription' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</field>
</struct>
<cftype gettypeid_func='CSIdentityAuthorityGetTypeID' name='CSIdentityAuthorityRef' tollfree='__NSCFType' type='^{__CSIdentityAuthority=}'/>
<cftype gettypeid_func='CSIdentityQueryGetTypeID' name='CSIdentityQueryRef' tollfree='__NSCFType' type='^{__CSIdentityQuery=}'/>
<cftype gettypeid_func='CSIdentityGetTypeID' name='CSIdentityRef' tollfree='__NSCFType' type='^{__CSIdentity=}'/>
<cftype gettypeid_func='WSMethodInvocationGetTypeID' name='WSMethodInvocationRef' tollfree='__NSCFType' type='^{OpaqueWSMethodInvocationRef=}'/>
<cftype gettypeid_func='WSProtocolHandlerGetTypeID' name='WSProtocolHandlerRef' tollfree='__NSCFType' type='^{OpaqueWSProtocolHandlerRef=}'/>
<constant const='true' declared_type='CFStringRef' name='kCSIdentityErrorDomain' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kCSIdentityGeneratePosixName' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSDebugIncomingBody' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSDebugIncomingHeaders' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSDebugOutgoingBody' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSDebugOutgoingHeaders' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSFaultCode' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSFaultExtra' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSFaultString' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPExtraHeaders' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPFollowsRedirects' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPMessage' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPProxy' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPResponseMessage' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSHTTPVersion' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSMethodInvocationResult' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSMethodInvocationResultParameterName' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSMethodInvocationTimeoutValue' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSNetworkStreamFaultString' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSRecordNamespaceURI' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSRecordParameterOrder' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSRecordType' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAP1999Protocol' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAP2001Protocol' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPBodyEncodingStyle' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPMessageHeaders' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPMethodNamespaceURI' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPStyleDoc' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSSOAPStyleRPC' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSStreamErrorDomain' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSStreamErrorError' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSStreamErrorMessage' type='^{__CFString=}'/>
<constant declared_type='CFStringRef' name='kWSXMLRPCProtocol' type='^{__CFString=}'/>
<string_constant name='kWSMethodName' nsstring='true' value='/WSMethodName'/>
<string_constant name='kWSMethodParameterOrder' nsstring='true' value='/WSMethodParameterOrder'/>
<string_constant name='kWSMethodParameters' nsstring='true' value='/WSMethodParameters'/>
<enum name='HDActivity' value='3'/>
<enum name='IdleActivity' value='4'/>
<enum name='NetActivity' value='2'/>
<enum name='OverallAct' value='0'/>
<enum name='UsrActivity' value='1'/>
<enum name='eWSArrayType' value='8'/>
<enum name='eWSBooleanType' value='2'/>
<enum name='eWSDataType' value='7'/>
<enum name='eWSDateType' value='6'/>
<enum name='eWSDictionaryType' value='9'/>
<enum name='eWSDoubleType' value='4'/>
<enum name='eWSIntegerType' value='3'/>
<enum name='eWSNullType' value='1'/>
<enum name='eWSStringType' value='5'/>
<enum name='eWSUnknownType' value='0'/>
<enum name='errWSInternalError' value='-65793'/>
<enum name='errWSParseError' value='-65795'/>
<enum name='errWSTimeoutError' value='-65796'/>
<enum name='errWSTransportError' value='-65794'/>
<enum name='kAccountKCItemAttr' value='1633903476'/>
<enum name='kAddKCEvent' value='3'/>
<enum name='kAddKCEventMask' value='8'/>
<enum name='kAddressKCItemAttr' value='1633969266'/>
<enum name='kAnyAuthType' value='0'/>
<enum name='kAnyPort' value='0'/>
<enum name='kAnyProtocol' value='0'/>
<enum name='kAppleSharePasswordKCItemClass' value='1634953328'/>
<enum name='kAuthTypeKCItemAttr' value='1635023216'/>
<enum name='kCSIdentityAuthorityNotAccessibleErr' value='-2'/>
<enum name='kCSIdentityClassGroup' value='2'/>
<enum name='kCSIdentityClassUser' value='1'/>
<enum name='kCSIdentityCommitCompleted' value='1'/>
<enum name='kCSIdentityDeletedErr' value='-4'/>
<enum name='kCSIdentityDuplicateFullNameErr' value='-6'/>
<enum name='kCSIdentityDuplicatePosixNameErr' value='-8'/>
<enum name='kCSIdentityFlagHidden' value='1'/>
<enum name='kCSIdentityFlagNone' value='0'/>
<enum name='kCSIdentityInvalidFullNameErr' value='-5'/>
<enum name='kCSIdentityInvalidPosixNameErr' value='-7'/>
<enum name='kCSIdentityPermissionErr' value='-3'/>
<enum name='kCSIdentityQueryEventErrorOccurred' value='5'/>
<enum name='kCSIdentityQueryEventResultsAdded' value='2'/>
<enum name='kCSIdentityQueryEventResultsChanged' value='3'/>
<enum name='kCSIdentityQueryEventResultsRemoved' value='4'/>
<enum name='kCSIdentityQueryEventSearchPhaseFinished' value='1'/>
<enum name='kCSIdentityQueryGenerateUpdateEvents' value='1'/>
<enum name='kCSIdentityQueryIncludeHiddenIdentities' value='2'/>
<enum name='kCSIdentityQueryStringBeginsWith' value='2'/>
<enum name='kCSIdentityQueryStringEquals' value='1'/>
<enum name='kCSIdentityUnknownAuthorityErr' value='-1'/>
<enum name='kCertSearchAny' value='0'/>
<enum name='kCertSearchDecryptAllowed' value='64'/>
<enum name='kCertSearchDecryptDisallowed' value='128'/>
<enum name='kCertSearchDecryptIgnored' value='0'/>
<enum name='kCertSearchDecryptMask' value='192'/>
<enum name='kCertSearchEncryptAllowed' value='16'/>
<enum name='kCertSearchEncryptDisallowed' value='32'/>
<enum name='kCertSearchEncryptIgnored' value='0'/>
<enum name='kCertSearchEncryptMask' value='48'/>
<enum name='kCertSearchPrivKeyRequired' value='4096'/>
<enum name='kCertSearchShift' value='0'/>
<enum name='kCertSearchSigningAllowed' value='1'/>
<enum name='kCertSearchSigningDisallowed' value='2'/>
<enum name='kCertSearchSigningIgnored' value='0'/>
<enum name='kCertSearchSigningMask' value='3'/>
<enum name='kCertSearchUnwrapAllowed' value='1024'/>
<enum name='kCertSearchUnwrapDisallowed' value='2048'/>
<enum name='kCertSearchUnwrapIgnored' value='0'/>
<enum name='kCertSearchUnwrapMask' value='3072'/>
<enum name='kCertSearchVerifyAllowed' value='4'/>
<enum name='kCertSearchVerifyDisallowed' value='8'/>
<enum name='kCertSearchVerifyIgnored' value='0'/>
<enum name='kCertSearchVerifyMask' value='12'/>
<enum name='kCertSearchWrapAllowed' value='256'/>
<enum name='kCertSearchWrapDisallowed' value='512'/>
<enum name='kCertSearchWrapIgnored' value='0'/>
<enum name='kCertSearchWrapMask' value='768'/>
<enum name='kCertUsageAllAdd' value='2147483392'/>
<enum name='kCertUsageDecryptAdd' value='16384'/>
<enum name='kCertUsageDecryptAskAndAdd' value='32768'/>
<enum name='kCertUsageEncryptAdd' value='4096'/>
<enum name='kCertUsageEncryptAskAndAdd' value='8192'/>
<enum name='kCertUsageKeyExchAdd' value='65536'/>
<enum name='kCertUsageKeyExchAskAndAdd' value='131072'/>
<enum name='kCertUsageRootAdd' value='262144'/>
<enum name='kCertUsageRootAskAndAdd' value='524288'/>
<enum name='kCertUsageSSLAdd' value='1048576'/>
<enum name='kCertUsageSSLAskAndAdd' value='2097152'/>
<enum name='kCertUsageShift' value='8'/>
<enum name='kCertUsageSigningAdd' value='256'/>
<enum name='kCertUsageSigningAskAndAdd' value='512'/>
<enum name='kCertUsageVerifyAdd' value='1024'/>
<enum name='kCertUsageVerifyAskAndAdd' value='2048'/>
<enum name='kCertificateKCItemClass' value='1667592820'/>
<enum name='kClassKCItemAttr' value='1668047219'/>
<enum name='kCommentKCItemAttr' value='1768123764'/>
<enum name='kCommonNameKCItemAttr' value='1668161568'/>
<enum name='kCreationDateKCItemAttr' value='1667522932'/>
<enum name='kCreatorKCItemAttr' value='1668445298'/>
<enum name='kCustomIconKCItemAttr' value='1668641641'/>
<enum name='kDataAccessKCEvent' value='10'/>
<enum name='kDataAccessKCEventMask' value='1024'/>
<enum name='kDecryptKCItemAttr' value='1684366194'/>
<enum name='kDefaultChangedKCEvent' value='9'/>
<enum name='kDefaultChangedKCEventMask' value='512'/>
<enum name='kDeleteKCEvent' value='4'/>
<enum name='kDeleteKCEventMask' value='16'/>
<enum name='kDescriptionKCItemAttr' value='1684370275'/>
<enum name='kDeviceInitiatedWake' value='18'/>
<enum name='kDozeDemand' value='7'/>
<enum name='kDozeRequest' value='9'/>
<enum name='kDozeToFullWakeUp' value='20'/>
<enum name='kDozeWakeUp' value='8'/>
<enum name='kDropIconVariant' value='1685221232'/>
<enum name='kEMailKCItemAttr' value='1835100524'/>
<enum name='kEncryptKCItemAttr' value='1701733234'/>
<enum name='kEndDateKCItemAttr' value='1701077364'/>
<enum name='kEnterIdle' value='24'/>
<enum name='kEnterRun' value='11'/>
<enum name='kEnterStandby' value='10'/>
<enum name='kEveryKCEventMask' value='65535'/>
<enum name='kExitIdle' value='26'/>
<enum name='kFirstFailKCStopOn' value='3'/>
<enum name='kFirstPassKCStopOn' value='2'/>
<enum name='kGenericKCItemAttr' value='1734700641'/>
<enum name='kGenericPasswordKCItemClass' value='1734700656'/>
<enum name='kGetPowerInfo' value='21'/>
<enum name='kGetPowerLevel' value='16'/>
<enum name='kGetWakeOnNetInfo' value='22'/>
<enum name='kHuge1BitMask' value='1768122403'/>
<enum name='kHuge32BitData' value='1768436530'/>
<enum name='kHuge4BitData' value='1768122420'/>
<enum name='kHuge8BitData' value='1768122424'/>
<enum name='kHuge8BitMask' value='1748528491'/>
<enum name='kIconFamilyType' value='1768124019'/>
<enum name='kIconServices1024PixelDataARGB' value='1768108336'/>
<enum name='kIconServices128PixelDataARGB' value='1768108087'/>
<enum name='kIconServices16PixelDataARGB' value='1768108084'/>
<enum name='kIconServices256PixelDataARGB' value='1768108088'/>
<enum name='kIconServices32PixelDataARGB' value='1768108085'/>
<enum name='kIconServices48PixelDataARGB' value='1768108086'/>
<enum name='kIconServices512PixelDataARGB' value='1768108089'/>
<enum name='kIdleKCEvent' value='0'/>
<enum name='kIdleKCEventMask' value='1'/>
<enum name='kInternetPasswordKCItemClass' value='1768842612'/>
<enum name='kInvisibleKCItemAttr' value='1768846953'/>
<enum name='kIssuerKCItemAttr' value='1769173877'/>
<enum name='kIssuerURLKCItemAttr' value='1769304684'/>
<enum name='kKCAuthTypeDPA' value='1685086561'/>
<enum name='kKCAuthTypeDefault' value='1684434036'/>
<enum name='kKCAuthTypeHTTPDigest' value='1752462436'/>
<enum name='kKCAuthTypeMSN' value='1836281441'/>
<enum name='kKCAuthTypeNTLM' value='1853123693'/>
<enum name='kKCAuthTypeRPA' value='1919967585'/>
<enum name='kKCProtocolTypeAFP' value='1634103328'/>
<enum name='kKCProtocolTypeAppleTalk' value='1635019883'/>
<enum name='kKCProtocolTypeFTP' value='1718906912'/>
<enum name='kKCProtocolTypeFTPAccount' value='1718906977'/>
<enum name='kKCProtocolTypeHTTP' value='1752462448'/>
<enum name='kKCProtocolTypeIMAP' value='1768776048'/>
<enum name='kKCProtocolTypeIRC' value='1769104160'/>
<enum name='kKCProtocolTypeLDAP' value='1818517872'/>
<enum name='kKCProtocolTypeNNTP' value='1852732528'/>
<enum name='kKCProtocolTypePOP3' value='1886351411'/>
<enum name='kKCProtocolTypeSMTP' value='1936553072'/>
<enum name='kKCProtocolTypeSOCKS' value='1936685088'/>
<enum name='kKCProtocolTypeTelnet' value='1952803950'/>
<enum name='kKeychainListChangedKCEvent' value='11'/>
<enum name='kLabelKCItemAttr' value='1818321516'/>
<enum name='kLarge1BitMask' value='1229147683'/>
<enum name='kLarge32BitData' value='1768698674'/>
<enum name='kLarge4BitData' value='1768123444'/>
<enum name='kLarge8BitData' value='1768123448'/>
<enum name='kLarge8BitMask' value='1815637355'/>
<enum name='kLockKCEvent' value='1'/>
<enum name='kLockKCEventMask' value='2'/>
<enum name='kMini1BitMask' value='1768123683'/>
<enum name='kMini4BitData' value='1768123700'/>
<enum name='kMini8BitData' value='1768123704'/>
<enum name='kModDateKCItemAttr' value='1835295092'/>
<enum name='kNegativeKCItemAttr' value='1852139361'/>
<enum name='kNoneKCStopOn' value='1'/>
<enum name='kOpenDropIconVariant' value='1868853872'/>
<enum name='kOpenIconVariant' value='1869636974'/>
<enum name='kPasswordChangedKCEvent' value='6'/>
<enum name='kPasswordChangedKCEventMask' value='64'/>
<enum name='kPathKCItemAttr' value='1885434984'/>
<enum name='kPolicyKCStopOn' value='0'/>
<enum name='kPortKCItemAttr' value='1886351988'/>
<enum name='kProtocolKCItemAttr' value='1886675820'/>
<enum name='kPublicKeyHashKCItemAttr' value='1752198009'/>
<enum name='kRdPermKCStatus' value='2'/>
<enum name='kRolloverIconVariant' value='1870030194'/>
<enum name='kScriptCodeKCItemAttr' value='1935897200'/>
<enum name='kSecOptionReserved' value='255'/>
<enum name='kSecurityDomainKCItemAttr' value='1935961454'/>
<enum name='kSerialNumberKCItemAttr' value='1936614002'/>
<enum name='kServerKCItemAttr' value='1936881266'/>
<enum name='kServiceKCItemAttr' value='1937138533'/>
<enum name='kSetPowerLevel' value='17'/>
<enum name='kSignKCItemAttr' value='1936287598'/>
<enum name='kSignatureKCItemAttr' value='1936943463'/>
<enum name='kSleepDemand' value='2'/>
<enum name='kSleepDeny' value='5'/>
<enum name='kSleepNow' value='6'/>
<enum name='kSleepRequest' value='1'/>
<enum name='kSleepRevoke' value='4'/>
<enum name='kSleepUnlock' value='4'/>
<enum name='kSleepWakeUp' value='3'/>
<enum name='kSmall1BitMask' value='1768125219'/>
<enum name='kSmall32BitData' value='1769157426'/>
<enum name='kSmall4BitData' value='1768125236'/>
<enum name='kSmall8BitData' value='1768125240'/>
<enum name='kSmall8BitMask' value='1933077867'/>
<enum name='kStartDateKCItemAttr' value='1935958388'/>
<enum name='kStillIdle' value='25'/>
<enum name='kSubjectKCItemAttr' value='1937072746'/>
<enum name='kSuspendDemand' value='13'/>
<enum name='kSuspendRequest' value='12'/>
<enum name='kSuspendRevoke' value='14'/>
<enum name='kSuspendWakeToDoze' value='23'/>
<enum name='kSuspendWakeUp' value='15'/>
<enum name='kSystemEventKCEventMask' value='256'/>
<enum name='kSystemKCEvent' value='8'/>
<enum name='kSystemSoundClientTimedOutError' value='-1501'/>
<enum name='kSystemSoundNoError' value='0'/>
<enum name='kSystemSoundUnspecifiedError' value='-1500'/>
<enum name='kThumbnail32BitData' value='1769222962'/>
<enum name='kThumbnail8BitMask' value='1949855083'/>
<enum name='kTileIconVariant' value='1953066085'/>
<enum name='kTypeKCItemAttr' value='1954115685'/>
<enum name='kUnlockKCEvent' value='2'/>
<enum name='kUnlockKCEventMask' value='4'/>
<enum name='kUnlockStateKCStatus' value='1'/>
<enum name='kUnwrapKCItemAttr' value='1970173810'/>
<enum name='kUpdateKCEvent' value='5'/>
<enum name='kUpdateKCEventMask' value='32'/>
<enum name='kVerifyKCItemAttr' value='1986359913'/>
<enum name='kVolumeKCItemAttr' value='1986817381'/>
<enum name='kWakeToDoze' value='19'/>
<enum name='kWrPermKCStatus' value='4'/>
<enum name='kWrapKCItemAttr' value='2003984752'/>
<enum name='large1BitMask' value='1229147683'/>
<enum name='large4BitData' value='1768123444'/>
<enum name='large8BitData' value='1768123448'/>
<enum name='mini1BitMask' value='1768123683'/>
<enum name='mini4BitData' value='1768123700'/>
<enum name='mini8BitData' value='1768123704'/>
<enum name='noCalls' value='1'/>
<enum name='noRequest' value='2'/>
<enum name='sleepQType' value='16'/>
<enum name='slpQType' value='16'/>
<enum name='small1BitMask' value='1768125219'/>
<enum name='small4BitData' value='1768125236'/>
<enum name='small8BitData' value='1768125240'/>
<function name='AlertSoundPlay'>
<retval declared_type='void' type='v'/>
</function>
<function name='AlertSoundPlayCustomSound'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='BatteryCount'>
<retval declared_type='short' type='s'/>
</function>
<function name='CSGetDefaultIdentityAuthority'>
<retval declared_type='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSGetLocalIdentityAuthority'>
<retval declared_type='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSGetManagedIdentityAuthority'>
<retval declared_type='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSIdentityAddAlias'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='alias' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityAddMember'>
<arg declared_type='CSIdentityRef' name='group' type='^{__CSIdentity=}'/>
<arg declared_type='CSIdentityRef' name='member' type='^{__CSIdentity=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityAuthenticateUsingPassword'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='password' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityAuthorityCopyLocalizedName'>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityAuthorityGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='CSIdentityCommit'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='AuthorizationRef' name='authorization' type='^{AuthorizationOpaqueRef=}'/>
<arg declared_type='CFErrorRef*' name='error' type='^^{__CFError}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityCommitAsynchronously'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg const='true' declared_type='CSIdentityClientContext*' name='clientContext' type='^{CSIdentityClientContext=i^v^?^?^?^?}' type64='^{CSIdentityClientContext=q^v^?^?^?^?}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<arg declared_type='AuthorizationRef' name='authorization' type='^{AuthorizationOpaqueRef=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityClass' name='identityClass' type='l' type64='q'/>
<arg declared_type='CFStringRef' name='fullName' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='posixName' type='^{__CFString=}'/>
<arg declared_type='CSIdentityFlags' name='flags' type='L' type64='Q'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityRef' type='^{__CSIdentity=}'/>
</function>
<function name='CSIdentityCreateCopy'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type='CSIdentityRef' type='^{__CSIdentity=}'/>
</function>
<function name='CSIdentityCreateGroupMembershipQuery'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityRef' name='group' type='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityCreatePersistentReference'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='CSIdentityDelete'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityGetAliases'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='CSIdentityGetAuthority'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CSIdentityAuthorityRef' type='^{__CSIdentityAuthority=}'/>
</function>
<function name='CSIdentityGetCertificate'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<retval declared_type='SecCertificateRef' type='^{OpaqueSecCertificateRef=}'/>
</function>
<function name='CSIdentityGetClass'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CSIdentityClass' type='l' type64='q'/>
</function>
<function name='CSIdentityGetEmailAddress'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityGetFullName'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityGetImageData'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='CSIdentityGetImageDataType'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityGetImageURL'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFURLRef' type='^{__CFURL=}'/>
</function>
<function name='CSIdentityGetPosixID'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='id_t' type='I'/>
</function>
<function name='CSIdentityGetPosixName'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</function>
<function name='CSIdentityGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='CSIdentityGetUUID'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='CFUUIDRef' type='^{__CFUUID=}'/>
</function>
<function name='CSIdentityIsCommitting'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityIsEnabled'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityIsHidden'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityIsMemberOfGroup'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CSIdentityRef' name='group' type='^{__CSIdentity=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityQueryCopyResults'>
<arg declared_type='CSIdentityQueryRef' name='query' type='^{__CSIdentityQuery=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='CSIdentityQueryCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CSIdentityClass' name='identityClass' type='l' type64='q'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForCurrentUser'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForName'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='name' type='^{__CFString=}'/>
<arg declared_type='CSIdentityQueryStringComparisonMethod' name='comparisonMethod' type='l' type64='q'/>
<arg declared_type='CSIdentityClass' name='identityClass' type='l' type64='q'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForPersistentReference'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFDataRef' name='referenceData' type='^{__CFData=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForPosixID'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='id_t' name='posixID' type='I'/>
<arg declared_type='CSIdentityClass' name='identityClass' type='l' type64='q'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryCreateForUUID'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFUUIDRef' name='uuid' type='^{__CFUUID=}'/>
<arg declared_type='CSIdentityAuthorityRef' name='authority' type='^{__CSIdentityAuthority=}'/>
<retval already_retained='true' declared_type='CSIdentityQueryRef' type='^{__CSIdentityQuery=}'/>
</function>
<function name='CSIdentityQueryExecute'>
<arg declared_type='CSIdentityQueryRef' name='query' type='^{__CSIdentityQuery=}'/>
<arg declared_type='CSIdentityQueryFlags' name='flags' type='L' type64='Q'/>
<arg declared_type='CFErrorRef*' name='error' type='^^{__CFError}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityQueryExecuteAsynchronously'>
<arg declared_type='CSIdentityQueryRef' name='query' type='^{__CSIdentityQuery=}'/>
<arg declared_type='CSIdentityQueryFlags' name='flags' type='L' type64='Q'/>
<arg const='true' declared_type='CSIdentityQueryClientContext*' name='clientContext' type='^{CSIdentityQueryClientContext=i^v^?^?^?^?}' type64='^{CSIdentityQueryClientContext=q^v^?^?^?^?}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='CSIdentityQueryGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='CSIdentityQueryStop'>
<arg declared_type='CSIdentityQueryRef' name='query' type='^{__CSIdentityQuery=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityRemoveAlias'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='alias' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityRemoveClient'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentityRemoveMember'>
<arg declared_type='CSIdentityRef' name='group' type='^{__CSIdentity=}'/>
<arg declared_type='CSIdentityRef' name='member' type='^{__CSIdentity=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetCertificate'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<arg declared_type='SecCertificateRef' name='certificate' type='^{OpaqueSecCertificateRef=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetEmailAddress'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='emailAddress' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetFullName'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='fullName' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetImageData'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFDataRef' name='imageData' type='^{__CFData=}'/>
<arg declared_type='CFStringRef' name='imageDataType' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetImageURL'>
<arg declared_type='CSIdentityRef' name='identity' type='^{__CSIdentity=}'/>
<arg declared_type='CFURLRef' name='url' type='^{__CFURL=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetIsEnabled'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<arg declared_type='Boolean' name='isEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CSIdentitySetPassword'>
<arg declared_type='CSIdentityRef' name='user' type='^{__CSIdentity=}'/>
<arg declared_type='CFStringRef' name='password' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CurrentProcessorSpeed'>
<retval declared_type='short' type='s'/>
</function>
<function name='DisposeKCCallbackUPP'>
<arg declared_type='KCCallbackUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeSleepQUPP'>
<arg declared_type='SleepQUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeSystemSoundCompletionUPP'>
<arg declared_type='SystemSoundCompletionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='GetCPUSpeed'>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='InvokeKCCallbackUPP'>
<arg declared_type='KCEvent' name='keychainEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' name='info' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' name='userContext' type='^v'/>
<arg declared_type='KCCallbackUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='InvokeSleepQUPP'>
<arg declared_type='long' name='message' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' name='qRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<arg declared_type='SleepQUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='InvokeSystemSoundCompletionUPP'>
<arg declared_type='SystemSoundActionID' name='actionID' type='L' type64='I'/>
<arg declared_type='void*' name='userData' type='^v'/>
<arg declared_type='SystemSoundCompletionUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCAddCallback'>
<arg declared_type='KCCallbackUPP' function_pointer='true' name='callbackProc' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='KCEventMask' name='eventMask' type='S'/>
<arg declared_type='void*' name='userContext' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCCopyItem'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='KCRef' name='destKeychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='KCItemRef*' name='copy' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCCountKeychains'>
<retval declared_type='UInt16' type='S'/>
</function>
<function name='KCDeleteItem'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindAppleSharePassword'>
<arg declared_type='AFPServerSignature*' name='serverSignature' type='^[16C]'/>
<arg declared_type='ConstStringPtr' name='serverAddress' type='*'/>
<arg declared_type='ConstStringPtr' name='serverName' type='*'/>
<arg declared_type='ConstStringPtr' name='volumeName' type='*'/>
<arg declared_type='ConstStringPtr' name='accountName' type='*'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindFirstItem'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg const='true' declared_type='KCAttributeList*' name='attrList' type='^{SecKeychainAttributeList=I^{SecKeychainAttribute}}'/>
<arg declared_type='KCSearchRef*' name='search' type='^^{OpaqueSecKeychainSearchRef}'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindGenericPassword'>
<arg declared_type='ConstStringPtr' name='serviceName' type='*'/>
<arg declared_type='ConstStringPtr' name='accountName' type='*'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindInternetPassword'>
<arg declared_type='ConstStringPtr' name='serverName' type='*'/>
<arg declared_type='ConstStringPtr' name='securityDomain' type='*'/>
<arg declared_type='ConstStringPtr' name='accountName' type='*'/>
<arg declared_type='UInt16' name='port' type='S'/>
<arg declared_type='OSType' name='protocol' type='L' type64='I'/>
<arg declared_type='OSType' name='authType' type='L' type64='I'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindInternetPasswordWithPath'>
<arg declared_type='ConstStringPtr' name='serverName' type='*'/>
<arg declared_type='ConstStringPtr' name='securityDomain' type='*'/>
<arg declared_type='ConstStringPtr' name='accountName' type='*'/>
<arg declared_type='ConstStringPtr' name='path' type='*'/>
<arg declared_type='UInt16' name='port' type='S'/>
<arg declared_type='OSType' name='protocol' type='L' type64='I'/>
<arg declared_type='OSType' name='authType' type='L' type64='I'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCFindNextItem'>
<arg declared_type='KCSearchRef' name='search' type='^{OpaqueSecKeychainSearchRef=}'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetAttribute'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='KCAttribute*' name='attr' type='^{SecKeychainAttribute=II^v}'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetData'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='data' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetDefaultKeychain'>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetIndKeychain'>
<arg declared_type='UInt16' name='index' type='S'/>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetKeychain'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetKeychainManagerVersion'>
<arg declared_type='UInt32*' name='returnVers' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetKeychainName'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='StringPtr' name='keychainName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCGetStatus'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='UInt32*' name='keychainStatus' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCIsInteractionAllowed'>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='KCLock'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCMakeAliasFromKCRef'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='AliasHandle*' name='keychainAlias' type='^^^{AliasRecord}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCMakeKCRefFromAlias'>
<arg declared_type='AliasHandle' name='keychainAlias' type='^^{AliasRecord}'/>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCMakeKCRefFromFSRef'>
<arg declared_type='FSRef*' name='keychainFSRef' type='^{FSRef=[80C]}'/>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCNewItem'>
<arg declared_type='KCItemClass' name='itemClass' type='L' type64='I'/>
<arg declared_type='OSType' name='itemCreator' type='L' type64='I'/>
<arg declared_type='UInt32' name='length' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='data' type='^v'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCReleaseItem'>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCReleaseKeychain'>
<arg declared_type='KCRef*' name='keychain' type='^^{OpaqueSecKeychainRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCReleaseSearch'>
<arg declared_type='KCSearchRef*' name='search' type='^^{OpaqueSecKeychainSearchRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCRemoveCallback'>
<arg declared_type='KCCallbackUPP' function_pointer='true' name='callbackProc' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCSetAttribute'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='KCAttribute*' name='attr' type='^{SecKeychainAttribute=II^v}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCSetData'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<arg declared_type='UInt32' name='length' type='L' type64='I'/>
<arg const='true' declared_type='void*' name='data' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCSetDefaultKeychain'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCSetInteractionAllowed'>
<arg declared_type='Boolean' name='state' type='B'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='KCUpdateItem'>
<arg declared_type='KCItemRef' name='item' type='^{OpaqueSecKeychainItemRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='MaximumProcessorSpeed'>
<retval declared_type='short' type='s'/>
</function>
<function name='MinimumProcessorSpeed'>
<retval declared_type='short' type='s'/>
</function>
<function name='NewKCCallbackUPP'>
<arg declared_type='KCCallbackProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='KCCallbackUPP' function_pointer='true' type='^?'>
<arg declared_type='KCEvent' type='S'/>
<arg declared_type='KCCallbackInfo*' type='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2l][4l]^{OpaqueSecKeychainRef}}' type64='^{KCCallbackInfo=I^{OpaqueSecKeychainItemRef}[2i][4i]^{OpaqueSecKeychainRef}}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</retval>
</function>
<function name='NewSleepQUPP'>
<arg declared_type='SleepQProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</arg>
<retval declared_type='SleepQUPP' function_pointer='true' type='^?'>
<arg declared_type='long' type='l' type64='q'/>
<arg declared_type='SleepQRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='long' type='l' type64='q'/>
</retval>
</function>
<function name='NewSystemSoundCompletionUPP'>
<arg declared_type='SystemSoundCompletionProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<retval declared_type='SystemSoundCompletionUPP' function_pointer='true' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</retval>
</function>
<function name='SleepQInstall'>
<arg declared_type='SleepQRecPtr' name='qRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SleepQRemove'>
<arg declared_type='SleepQRecPtr' name='qRecPtr' type='^{SleepQRec=^{SleepQRec}s^?s}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SystemSoundGetActionID'>
<arg const='true' declared_type='FSRef*' name='userFile' type='^{FSRef=[80C]}'/>
<arg declared_type='SystemSoundActionID*' name='outAction' type='^I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SystemSoundPlay'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SystemSoundRemoveActionID'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='SystemSoundRemoveCompletionRoutine'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='SystemSoundSetCompletionRoutine'>
<arg declared_type='SystemSoundActionID' name='inAction' type='L' type64='I'/>
<arg declared_type='CFRunLoopRef' name='inRunLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='inRunLoopMode' type='^{__CFString=}'/>
<arg declared_type='SystemSoundCompletionUPP' function_pointer='true' name='inCompletionRoutine' type='^?'>
<arg declared_type='SystemSoundActionID' type='L' type64='I'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</arg>
<arg declared_type='void*' name='inUserData' type='^v'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='UpdateSystemActivity'>
<arg declared_type='UInt8' name='activity' type='C'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='WSGetCFTypeIDFromWSTypeID'>
<arg declared_type='WSTypeID' name='typeID' type='i'/>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='WSGetWSTypeIDFromCFType'>
<arg declared_type='CFTypeRef' name='ref' type='@'/>
<retval declared_type='WSTypeID' type='i'/>
</function>
<function name='WSMethodInvocationAddDeserializationOverride'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFStringRef' name='typeNamespace' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='typeName' type='^{__CFString=}'/>
<arg declared_type='WSMethodInvocationDeserializationProcPtr' function_pointer='true' name='deserializationProc' type='^?'>
<arg declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFXMLTreeRef' type='^{__CFTree=}'/>
<arg declared_type='CFXMLTreeRef' type='^{__CFTree=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFTypeRef' type='@'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationAddSerializationOverride'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFTypeID' name='objType' type='L' type64='Q'/>
<arg declared_type='WSMethodInvocationSerializationProcPtr' function_pointer='true' name='serializationProc' type='^?'>
<arg declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFTypeRef' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationCopyParameters'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFArrayRef*' name='parameterOrder' type='^^{__CFArray}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='WSMethodInvocationCopyProperty'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFStringRef' name='propertyName' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFTypeRef' type='@'/>
</function>
<function name='WSMethodInvocationCopySerialization'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='WSMethodInvocationCreate'>
<arg declared_type='CFURLRef' name='url' type='^{__CFURL=}'/>
<arg declared_type='CFStringRef' name='methodName' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='protocol' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
</function>
<function name='WSMethodInvocationCreateFromSerialization'>
<arg declared_type='CFDataRef' name='contract' type='^{__CFData=}'/>
<retval already_retained='true' declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
</function>
<function name='WSMethodInvocationGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='WSMethodInvocationInvoke'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<retval declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='WSMethodInvocationScheduleWithRunLoop'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationSetCallBack'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='WSMethodInvocationCallBackProcPtr' function_pointer='true' name='clientCB' type='^?'>
<arg declared_type='WSMethodInvocationRef' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationSetParameters'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFDictionaryRef' name='parameters' type='^{__CFDictionary=}'/>
<arg declared_type='CFArrayRef' name='parameterOrder' type='^{__CFArray=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationSetProperty'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFStringRef' name='propertyName' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='propertyValue' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodInvocationUnscheduleFromRunLoop'>
<arg declared_type='WSMethodInvocationRef' name='invocation' type='^{OpaqueWSMethodInvocationRef=}'/>
<arg declared_type='CFRunLoopRef' name='runLoop' type='^{__CFRunLoop=}'/>
<arg declared_type='CFStringRef' name='runLoopMode' type='^{__CFString=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSMethodResultIsFault'>
<arg declared_type='CFDictionaryRef' name='methodResult' type='^{__CFDictionary=}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='WSProtocolHandlerCopyFaultDocument'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFDictionaryRef' name='methodContext' type='^{__CFDictionary=}'/>
<arg declared_type='CFDictionaryRef' name='faultDict' type='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCopyProperty'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='propertyName' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFTypeRef' type='@'/>
</function>
<function name='WSProtocolHandlerCopyReplyDictionary'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='methodName' type='^{__CFString=}'/>
<arg declared_type='CFDataRef' name='data' type='^{__CFData=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='WSProtocolHandlerCopyReplyDocument'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFDictionaryRef' name='methodContext' type='^{__CFDictionary=}'/>
<arg declared_type='CFTypeRef' name='resultValue' type='@'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCopyRequestDictionary'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFDataRef' name='data' type='^{__CFData=}'/>
<retval already_retained='true' declared_type='CFDictionaryRef' type='^{__CFDictionary=}'/>
</function>
<function name='WSProtocolHandlerCopyRequestDocument'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='methodName' type='^{__CFString=}'/>
<arg declared_type='CFDictionaryRef' name='methodParams' type='^{__CFDictionary=}'/>
<arg declared_type='CFArrayRef' name='methodParamOrder' type='^{__CFArray=}'/>
<arg declared_type='CFDictionaryRef' name='methodExtras' type='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type='CFDataRef' type='^{__CFData=}'/>
</function>
<function name='WSProtocolHandlerCreate'>
<arg declared_type='CFAllocatorRef' name='allocator' type='^{__CFAllocator=}'/>
<arg declared_type='CFStringRef' name='protocol' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='WSProtocolHandlerRef' type='^{OpaqueWSProtocolHandlerRef=}'/>
</function>
<function name='WSProtocolHandlerGetTypeID'>
<retval declared_type='CFTypeID' type='L' type64='Q'/>
</function>
<function name='WSProtocolHandlerSetDeserializationOverride'>
<arg declared_type='WSProtocolHandlerRef' name='protocol' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='typeNamespace' type='^{__CFString=}'/>
<arg declared_type='CFStringRef' name='typeName' type='^{__CFString=}'/>
<arg declared_type='WSProtocolHandlerDeserializationProcPtr' function_pointer='true' name='deserializationProc' type='^?'>
<arg declared_type='WSProtocolHandlerRef' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFXMLTreeRef' type='^{__CFTree=}'/>
<arg declared_type='CFXMLTreeRef' type='^{__CFTree=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFTypeRef' type='@'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSProtocolHandlerSetProperty'>
<arg declared_type='WSProtocolHandlerRef' name='ref' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFStringRef' name='propertyName' type='^{__CFString=}'/>
<arg declared_type='CFTypeRef' name='propertyValue' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='WSProtocolHandlerSetSerializationOverride'>
<arg declared_type='WSProtocolHandlerRef' name='protocol' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFTypeID' name='objType' type='L' type64='Q'/>
<arg declared_type='WSProtocolHandlerSerializationProcPtr' function_pointer='true' name='serializationProc' type='^?'>
<arg declared_type='WSProtocolHandlerRef' type='^{OpaqueWSProtocolHandlerRef=}'/>
<arg declared_type='CFTypeRef' type='@'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='CFStringRef' type='^{__CFString=}'/>
</arg>
<arg declared_type='WSClientContext*' name='context' type='^{WSClientContext=i^v^?^?^?}' type64='^{WSClientContext=q^v^?^?^?}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='kcfindapplesharepassword'>
<arg declared_type='AFPServerSignature*' name='serverSignature' type='^[16C]'/>
<arg const='true' declared_type='char*' name='serverAddress' type='*'/>
<arg const='true' declared_type='char*' name='serverName' type='*'/>
<arg const='true' declared_type='char*' name='volumeName' type='*'/>
<arg const='true' declared_type='char*' name='accountName' type='*'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='kcfindgenericpassword'>
<arg const='true' declared_type='char*' name='serviceName' type='*'/>
<arg const='true' declared_type='char*' name='accountName' type='*'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='kcfindinternetpassword'>
<arg const='true' declared_type='char*' name='serverName' type='*'/>
<arg const='true' declared_type='char*' name='securityDomain' type='*'/>
<arg const='true' declared_type='char*' name='accountName' type='*'/>
<arg declared_type='UInt16' name='port' type='S'/>
<arg declared_type='OSType' name='protocol' type='L' type64='I'/>
<arg declared_type='OSType' name='authType' type='L' type64='I'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='kcfindinternetpasswordwithpath'>
<arg const='true' declared_type='char*' name='serverName' type='*'/>
<arg const='true' declared_type='char*' name='securityDomain' type='*'/>
<arg const='true' declared_type='char*' name='accountName' type='*'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg declared_type='UInt16' name='port' type='S'/>
<arg declared_type='OSType' name='protocol' type='L' type64='I'/>
<arg declared_type='OSType' name='authType' type='L' type64='I'/>
<arg declared_type='UInt32' name='maxLength' type='L' type64='I'/>
<arg declared_type='void*' name='passwordData' type='^v'/>
<arg declared_type='UInt32*' name='actualLength' type='^I'/>
<arg declared_type='KCItemRef*' name='item' type='^^{OpaqueSecKeychainItemRef}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='kcgetkeychainname'>
<arg declared_type='KCRef' name='keychain' type='^{OpaqueSecKeychainRef=}'/>
<arg declared_type='char*' name='keychainName' type='*'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
</signatures>
