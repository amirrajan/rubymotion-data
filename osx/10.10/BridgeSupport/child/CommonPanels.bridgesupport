<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreGraphics.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<struct name='CalibratorInfo' type='{CalibratorInfo=&quot;dataSize&quot;I&quot;displayID&quot;I&quot;profileLocationSize&quot;I&quot;profileLocationPtr&quot;^{CMProfileLocation}&quot;eventProc&quot;^?&quot;isGood&quot;B}'>
<field declared_type='UInt32' name='dataSize' type='L' type64='I'/>
<field declared_type='CMDisplayIDType' name='displayID' type='L' type64='I'/>
<field declared_type='UInt32' name='profileLocationSize' type='L' type64='I'/>
<field declared_type='CMProfileLocation*' name='profileLocationPtr' type='^{CMProfileLocation=s(CMProfLoc={CMFileLocation={FSSpec=si[64C]}}{CMHandleLocation=^*}{CMPtrLocation=*}{CMProcedureLocation=^?^v}{CMPathLocation=[256c]}{CMBufferLocation=^vI})}' type64='^{CMProfileLocation=s(CMProfLoc={CMHandleLocation=^*}{CMPathLocation=[1024c]}{CMBufferLocation=^vI})}'/>
<field declared_type='CalibrateEventUPP' function_pointer='true' name='eventProc' type='^?'>
<arg declared_type='EventRecord*' type='^{EventRecord=SLI{Point=ss}S}' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='Boolean' name='isGood' type='B'/>
</struct>
<struct name='FontSelectionQDStyle' type='{FontSelectionQDStyle=&quot;version&quot;I&quot;instance&quot;{FMFontFamilyInstance=&quot;fontFamily&quot;s&quot;fontStyle&quot;s}&quot;size&quot;s&quot;hasColor&quot;B&quot;reserved&quot;C&quot;color&quot;{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}}'>
<field declared_type='UInt32' name='version' type='L' type64='I'/>
<field declared_type='FMFontFamilyInstance' name='instance' type='{FMFontFamilyInstance=&quot;fontFamily&quot;s&quot;fontStyle&quot;s}'/>
<field declared_type='FMFontSize' name='size' type='s'/>
<field declared_type='Boolean' name='hasColor' type='B'/>
<field declared_type='UInt8' name='reserved' type='C'/>
<field declared_type='RGBColor' name='color' type='{RGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}'/>
</struct>
<struct name='NColorPickerInfo' type='{NColorPickerInfo=&quot;theColor&quot;{NPMColor=&quot;profile&quot;^{OpaqueCMProfileRef}&quot;color&quot;(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})}&quot;dstProfile&quot;^{OpaqueCMProfileRef}&quot;flags&quot;I&quot;placeWhere&quot;s&quot;dialogOrigin&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;pickerType&quot;I&quot;eventProc&quot;^?&quot;colorProc&quot;^?&quot;colorProcData&quot;I&quot;prompt&quot;[256C]&quot;mInfo&quot;{PickerMenuItemInfo=&quot;editMenuID&quot;s&quot;cutItem&quot;s&quot;copyItem&quot;s&quot;pasteItem&quot;s&quot;clearItem&quot;s&quot;undoItem&quot;s}&quot;newColorChosen&quot;B&quot;reserved&quot;C}' type64='{NColorPickerInfo=&quot;theColor&quot;{NPMColor=&quot;profile&quot;^{OpaqueCMProfileRef}&quot;color&quot;(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})}&quot;dstProfile&quot;^{OpaqueCMProfileRef}&quot;flags&quot;I&quot;placeWhere&quot;s&quot;dialogOrigin&quot;{Point=&quot;v&quot;s&quot;h&quot;s}&quot;pickerType&quot;I&quot;colorProc&quot;^?&quot;colorProcData&quot;^v&quot;prompt&quot;[256C]&quot;mInfo&quot;{PickerMenuItemInfo=&quot;editMenuID&quot;s&quot;cutItem&quot;s&quot;copyItem&quot;s&quot;pasteItem&quot;s&quot;clearItem&quot;s&quot;undoItem&quot;s}&quot;newColorChosen&quot;B&quot;reserved&quot;C}'>
<field declared_type='NPMColor' name='theColor' type='{NPMColor=&quot;profile&quot;^{OpaqueCMProfileRef}&quot;color&quot;(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})}'/>
<field declared_type='CMProfileRef' name='dstProfile' type='^{OpaqueCMProfileRef=}'/>
<field declared_type='UInt32' name='flags' type='L' type64='I'/>
<field declared_type='DialogPlacementSpec' name='placeWhere' type='s'/>
<field declared_type='Point' name='dialogOrigin' type='{Point=&quot;v&quot;s&quot;h&quot;s}'/>
<field declared_type='OSType' name='pickerType' type='L' type64='I'/>
<field declared_type='UserEventUPP' declared_type64='NColorChangedUPP' function_pointer='true' name='colorProc' type='^?'>
<arg declared_type='EventRecord*' declared_type64='SRefCon' type='^{EventRecord=SLI{Point=ss}S}' type64='^v'/>
<arg declared_type64='NPMColor*' type64='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type='Boolean' declared_type64='void' type='B' type64='v'/>
</field>
<field declared_type='NColorChangedUPP' declared_type64='URefCon' function_pointer='true' name='colorProcData' type='^?' type64='^v'>
<arg declared_type='SRefCon' type='l'/>
<arg declared_type='NPMColor*' type='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='URefCon' declared_type64='Str255' name='prompt' type='L' type64='[256C]'/>
<field declared_type='Str255' declared_type64='PickerMenuItemInfo' name='mInfo' type='[256C]' type64='{PickerMenuItemInfo=&quot;editMenuID&quot;s&quot;cutItem&quot;s&quot;copyItem&quot;s&quot;pasteItem&quot;s&quot;clearItem&quot;s&quot;undoItem&quot;s}'/>
<field declared_type='PickerMenuItemInfo' declared_type64='Boolean' name='newColorChosen' type='{PickerMenuItemInfo=&quot;editMenuID&quot;s&quot;cutItem&quot;s&quot;copyItem&quot;s&quot;pasteItem&quot;s&quot;clearItem&quot;s&quot;undoItem&quot;s}' type64='B'/>
<field declared_type='Boolean' declared_type64='UInt8' name='reserved' type='B' type64='C'/>
<field declared_type='UInt8' name='reserved' type='C'/>
</struct>
<struct name='NPMColor' type='{NPMColor=&quot;profile&quot;^{OpaqueCMProfileRef}&quot;color&quot;(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})}'>
<field declared_type='CMProfileRef' name='profile' type='^{OpaqueCMProfileRef=}'/>
<field declared_type='CMColor' name='color' type='(CMColor=&quot;rgb&quot;{CMRGBColor=&quot;red&quot;S&quot;green&quot;S&quot;blue&quot;S}&quot;hsv&quot;{CMHSVColor=&quot;hue&quot;S&quot;saturation&quot;S&quot;value&quot;S}&quot;hls&quot;{CMHLSColor=&quot;hue&quot;S&quot;lightness&quot;S&quot;saturation&quot;S}&quot;XYZ&quot;{CMXYZColor=&quot;X&quot;S&quot;Y&quot;S&quot;Z&quot;S}&quot;Lab&quot;{CMLabColor=&quot;L&quot;S&quot;a&quot;S&quot;b&quot;S}&quot;Luv&quot;{CMLuvColor=&quot;L&quot;S&quot;u&quot;S&quot;v&quot;S}&quot;Yxy&quot;{CMYxyColor=&quot;capY&quot;S&quot;x&quot;S&quot;y&quot;S}&quot;cmyk&quot;{CMCMYKColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S&quot;black&quot;S}&quot;cmy&quot;{CMCMYColor=&quot;cyan&quot;S&quot;magenta&quot;S&quot;yellow&quot;S}&quot;gray&quot;{CMGrayColor=&quot;gray&quot;S}&quot;mc5&quot;{CMMultichannel5Color=&quot;components&quot;[5C]}&quot;mc6&quot;{CMMultichannel6Color=&quot;components&quot;[6C]}&quot;mc7&quot;{CMMultichannel7Color=&quot;components&quot;[7C]}&quot;mc8&quot;{CMMultichannel8Color=&quot;components&quot;[8C]}&quot;namedColor&quot;{CMNamedColor=&quot;namedColorIndex&quot;I})'/>
</struct>
<struct name='PickerMenuItemInfo' type='{PickerMenuItemInfo=&quot;editMenuID&quot;s&quot;cutItem&quot;s&quot;copyItem&quot;s&quot;pasteItem&quot;s&quot;clearItem&quot;s&quot;undoItem&quot;s}'>
<field declared_type='SInt16' name='editMenuID' type='s'/>
<field declared_type='SInt16' name='cutItem' type='s'/>
<field declared_type='SInt16' name='copyItem' type='s'/>
<field declared_type='SInt16' name='pasteItem' type='s'/>
<field declared_type='SInt16' name='clearItem' type='s'/>
<field declared_type='SInt16' name='undoItem' type='s'/>
</struct>
<cftype name='FCFontDescriptorRef' type='^{OpaqueFCFontDescriptorRef=}'/>
<cftype name='Picker' type='^{OpaquePicker=}'/>
<constant const='true' declared_type='CFStringRef' name='kFCFontCGColorAttribute' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFCFontFaceAttribute' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFCFontFamilyAttribute' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFCFontNameAttribute' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFCFontSizeAttribute' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFCFontVisibleNameAttribute' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelATSUFontIDKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelAttributeSizesKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelAttributeTagsKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelAttributeValuesKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelAttributesKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelBackgroundColorAttributeName' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelFeatureSelectorsKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelFeatureTypesKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelMouseTrackingState' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelVariationAxesKey' type='^{__CFString=}'/>
<constant const='true' declared_type='CFStringRef' name='kFontPanelVariationValuesKey' type='^{__CFString=}'/>
<enum name='fontPanelFontSelectionQDStyleVersionErr' value='-8882'/>
<enum name='fontPanelSelectionStyleErr' value='-8881'/>
<enum name='fontPanelShowErr' value='-8880'/>
<enum name='kAtSpecifiedOrigin' value='0'/>
<enum name='kCalibratorNamePrefix' value='1667329129'/>
<enum name='kCenterOnMainScreen' value='2'/>
<enum name='kColorPickerAppIsColorSyncAware' value='16'/>
<enum name='kColorPickerCallColorProcLive' value='512'/>
<enum name='kColorPickerCanAnimatePalette' value='8'/>
<enum name='kColorPickerCanModifyPalette' value='4'/>
<enum name='kColorPickerDetachedFromChoices' value='256'/>
<enum name='kColorPickerDialogIsModal' value='2'/>
<enum name='kColorPickerDialogIsMoveable' value='1'/>
<enum name='kColorPickerInApplicationDialog' value='64'/>
<enum name='kColorPickerInPickerDialog' value='128'/>
<enum name='kColorPickerInSystemDialog' value='32'/>
<enum name='kDeepestColorScreen' value='1'/>
<enum name='kDefaultColorPickerHeight' value='238'/>
<enum name='kDefaultColorPickerWidth' value='383'/>
<enum name='kEventClassFont' value='1718578804'/>
<enum name='kEventFontPanelClosed' value='1'/>
<enum name='kEventFontSelection' value='2'/>
<enum name='kEventParamATSUFontID' value='1635084644'/>
<enum name='kEventParamATSUFontSize' value='1635087226'/>
<enum name='kEventParamCTFontDescriptor' value='1668572772'/>
<enum name='kEventParamDictionary' value='1684628340'/>
<enum name='kEventParamFMFontFamily' value='1718445677'/>
<enum name='kEventParamFMFontSize' value='1718449018'/>
<enum name='kEventParamFMFontStyle' value='1718449012'/>
<enum name='kEventParamFontColor' value='1717791858'/>
<enum name='kEventParamViewAttributesDictionary' value='1684104291'/>
<enum name='kFontSelectionATSUIType' value='1634956396'/>
<enum name='kFontSelectionCoreTextType' value='1668572772'/>
<enum name='kFontSelectionQDStyleVersionZero' value='0'/>
<enum name='kFontSelectionQDType' value='1903391852'/>
<enum name='kHICommandShowHideFontPanel' value='1936221808'/>
<enum name='typeATSUFontID' value='1835100014'/>
<enum name='typeATSUSize' value='1718188132'/>
<enum name='typeCTFontDescriptorRef' value='1667658873'/>
<enum name='typeFMFontFamily' value='1936224114'/>
<enum name='typeFMFontSize' value='1936224114'/>
<enum name='typeFMFontStyle' value='1936224114'/>
<enum name='typeFontColor' value='1666336578'/>
<function name='CMCalibrateDisplay'>
<arg declared_type='CalibratorInfo*' name='theInfo' type='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='DisposeCalibrateEventUPP'>
<arg declared_type='CalibrateEventUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='EventRecord*' type='^{EventRecord=SLI{Point=ss}S}' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCalibrateUPP'>
<arg declared_type='CalibrateUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='CalibratorInfo*' type='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeCanCalibrateUPP'>
<arg declared_type='CanCalibrateUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='CMDisplayIDType' type='L' type64='I'/>
<arg declared_type='unsigned char*' type='*'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='DisposeNColorChangedUPP'>
<arg declared_type='NColorChangedUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='NPMColor*' type='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='FCAddCollection'>
<arg declared_type='CFStringRef' name='iCollection' type='^{__CFString=}'/>
<arg declared_type='OptionBits' name='iCollectionOptions' type='L' type64='I'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FCAddFontDescriptorToCollection'>
<arg declared_type='FCFontDescriptorRef' name='iDescriptor' type='^{OpaqueFCFontDescriptorRef=}'/>
<arg declared_type='CFStringRef' name='iCollection' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FCCopyCollectionNames'>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='FCCopyFontDescriptorsInCollection'>
<arg declared_type='CFStringRef' name='iCollection' type='^{__CFString=}'/>
<retval already_retained='true' declared_type='CFArrayRef' type='^{__CFArray=}'/>
</function>
<function name='FCFontDescriptorCreateWithFontAttributes'>
<arg declared_type='CFDictionaryRef' name='iAttributes' type='^{__CFDictionary=}'/>
<retval already_retained='true' declared_type='FCFontDescriptorRef' type='^{OpaqueFCFontDescriptorRef=}'/>
</function>
<function name='FCFontDescriptorCreateWithName'>
<arg declared_type='CFStringRef' name='iFontName' type='^{__CFString=}'/>
<arg declared_type='CGFloat' name='iSize' type='f' type64='d'/>
<retval already_retained='true' declared_type='FCFontDescriptorRef' type='^{OpaqueFCFontDescriptorRef=}'/>
</function>
<function name='FCRemoveCollection'>
<arg declared_type='CFStringRef' name='iCollection' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FCRemoveFontDescriptorFromCollection'>
<arg declared_type='FCFontDescriptorRef' name='iDescriptor' type='^{OpaqueFCFontDescriptorRef=}'/>
<arg declared_type='CFStringRef' name='iCollection' type='^{__CFString=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='FPIsFontPanelVisible'>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='FPShowHideFontPanel'>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='GetColor'>
<arg declared_type='Point' name='where' type='{Point=ss}'/>
<arg declared_type='ConstStr255Param' name='prompt' type='*'/>
<arg const='true' declared_type='RGBColor*' name='inColor' type='^{RGBColor=SSS}'/>
<arg declared_type='RGBColor*' name='outColor' type='^{RGBColor=SSS}'/>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='InvokeCalibrateEventUPP'>
<arg declared_type='EventRecord*' name='event' type='^{EventRecord=SLI{Point=ss}S}' type64='^{EventRecord=SQI{Point=ss}S}'/>
<arg declared_type='CalibrateEventUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='EventRecord*' type='^{EventRecord=SLI{Point=ss}S}' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='InvokeCalibrateUPP'>
<arg declared_type='CalibratorInfo*' name='theInfo' type='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<arg declared_type='CalibrateUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='CalibratorInfo*' type='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='InvokeCanCalibrateUPP'>
<arg declared_type='CMDisplayIDType' name='displayID' type='L' type64='I'/>
<arg declared_type='unsigned char*' name='errMessage' type='*'/>
<arg declared_type='CanCalibrateUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='CMDisplayIDType' type='L' type64='I'/>
<arg declared_type='unsigned char*' type='*'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='Boolean' type='B'/>
</function>
<function name='InvokeNColorChangedUPP'>
<arg declared_type='SRefCon' name='userData' type='l' type64='^v'/>
<arg declared_type='NPMColor*' name='newColor' type='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<arg declared_type='NColorChangedUPP' function_pointer='true' name='userUPP' type='^?'>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='NPMColor*' type='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='NPickColor'>
<arg declared_type='NColorPickerInfo*' name='theColorInfo' type='^{NColorPickerInfo={NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}^{OpaqueCMProfileRef}Is{Point=ss}I^?^?I[256C]{PickerMenuItemInfo=ssssss}BC}' type64='^{NColorPickerInfo={NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}^{OpaqueCMProfileRef}Is{Point=ss}I^?^v[256C]{PickerMenuItemInfo=ssssss}BC}'/>
<retval declared_type='OSErr' type='s'/>
</function>
<function name='NewCalibrateEventUPP'>
<arg declared_type='CalibrateEventProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='EventRecord*' type='^{EventRecord=SLI{Point=ss}S}' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='CalibrateEventUPP' function_pointer='true' type='^?'>
<arg declared_type='EventRecord*' type='^{EventRecord=SLI{Point=ss}S}' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='NewCalibrateUPP'>
<arg declared_type='CalibrateProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='CalibratorInfo*' type='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type='OSErr' type='s'/>
</arg>
<retval declared_type='CalibrateUPP' function_pointer='true' type='^?'>
<arg declared_type='CalibratorInfo*' type='^{CalibratorInfo=III^{CMProfileLocation}^?B}'/>
<retval declared_type='OSErr' type='s'/>
</retval>
</function>
<function name='NewCanCalibrateUPP'>
<arg declared_type='CanCalibrateProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='CMDisplayIDType' type='L' type64='I'/>
<arg declared_type='unsigned char*' type='*'/>
<retval declared_type='Boolean' type='B'/>
</arg>
<retval declared_type='CanCalibrateUPP' function_pointer='true' type='^?'>
<arg declared_type='CMDisplayIDType' type='L' type64='I'/>
<arg declared_type='unsigned char*' type='*'/>
<retval declared_type='Boolean' type='B'/>
</retval>
</function>
<function name='NewNColorChangedUPP'>
<arg declared_type='NColorChangedProcPtr' function_pointer='true' name='userRoutine' type='^?'>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='NPMColor*' type='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NColorChangedUPP' function_pointer='true' type='^?'>
<arg declared_type='SRefCon' type='l' type64='^v'/>
<arg declared_type='NPMColor*' type='^{NPMColor=^{OpaqueCMProfileRef}(CMColor={CMRGBColor=SSS}{CMHSVColor=SSS}{CMHLSColor=SSS}{CMXYZColor=SSS}{CMLabColor=SSS}{CMLuvColor=SSS}{CMYxyColor=SSS}{CMCMYKColor=SSSS}{CMCMYColor=SSS}{CMGrayColor=S}{CMMultichannel5Color=[5C]}{CMMultichannel6Color=[6C]}{CMMultichannel7Color=[7C]}{CMMultichannel8Color=[8C]}{CMNamedColor=I})}'/>
<retval declared_type='void' type='v'/>
</retval>
</function>
<function name='SetFontInfoForSelection'>
<arg declared_type='OSType' name='iStyleType' type='L' type64='I'/>
<arg declared_type='UInt32' name='iNumStyles' type='L' type64='I'/>
<arg declared_type='void*' name='iStyles' type='^v'/>
<arg declared_type='EventTargetRef' name='iFPEventTarget' type='^{OpaqueEventTargetRef=}'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
</signatures>
