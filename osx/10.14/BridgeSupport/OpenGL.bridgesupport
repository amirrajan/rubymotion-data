<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CGLContextObj' type64='{_CGLContextObject=&quot;rend&quot;^{__GLIContextRec}&quot;disp&quot;{__GLIFunctionDispatchRec=&quot;accum&quot;^?&quot;alpha_func&quot;^?&quot;are_textures_resident&quot;^?&quot;array_element&quot;^?&quot;begin&quot;^?&quot;bind_texture&quot;^?&quot;bitmap&quot;^?&quot;blend_func&quot;^?&quot;call_list&quot;^?&quot;call_lists&quot;^?&quot;clear&quot;^?&quot;clear_accum&quot;^?&quot;clear_color&quot;^?&quot;clear_depth&quot;^?&quot;clear_index&quot;^?&quot;clear_stencil&quot;^?&quot;clip_plane&quot;^?&quot;color3b&quot;^?&quot;color3bv&quot;^?&quot;color3d&quot;^?&quot;color3dv&quot;^?&quot;color3f&quot;^?&quot;color3fv&quot;^?&quot;color3i&quot;^?&quot;color3iv&quot;^?&quot;color3s&quot;^?&quot;color3sv&quot;^?&quot;color3ub&quot;^?&quot;color3ubv&quot;^?&quot;color3ui&quot;^?&quot;color3uiv&quot;^?&quot;color3us&quot;^?&quot;color3usv&quot;^?&quot;color4b&quot;^?&quot;color4bv&quot;^?&quot;color4d&quot;^?&quot;color4dv&quot;^?&quot;color4f&quot;^?&quot;color4fv&quot;^?&quot;color4i&quot;^?&quot;color4iv&quot;^?&quot;color4s&quot;^?&quot;color4sv&quot;^?&quot;color4ub&quot;^?&quot;color4ubv&quot;^?&quot;color4ui&quot;^?&quot;color4uiv&quot;^?&quot;color4us&quot;^?&quot;color4usv&quot;^?&quot;color_mask&quot;^?&quot;color_material&quot;^?&quot;color_pointer&quot;^?&quot;copy_pixels&quot;^?&quot;copy_tex_image1D&quot;^?&quot;copy_tex_image2D&quot;^?&quot;copy_tex_sub_image1D&quot;^?&quot;copy_tex_sub_image2D&quot;^?&quot;cull_face&quot;^?&quot;delete_lists&quot;^?&quot;delete_textures&quot;^?&quot;depth_func&quot;^?&quot;depth_mask&quot;^?&quot;depth_range&quot;^?&quot;disable&quot;^?&quot;disable_client_state&quot;^?&quot;draw_arrays&quot;^?&quot;draw_buffer&quot;^?&quot;draw_elements&quot;^?&quot;draw_pixels&quot;^?&quot;edge_flag&quot;^?&quot;edge_flag_pointer&quot;^?&quot;edge_flagv&quot;^?&quot;enable&quot;^?&quot;enable_client_state&quot;^?&quot;end&quot;^?&quot;end_list&quot;^?&quot;eval_coord1d&quot;^?&quot;eval_coord1dv&quot;^?&quot;eval_coord1f&quot;^?&quot;eval_coord1fv&quot;^?&quot;eval_coord2d&quot;^?&quot;eval_coord2dv&quot;^?&quot;eval_coord2f&quot;^?&quot;eval_coord2fv&quot;^?&quot;eval_mesh1&quot;^?&quot;eval_mesh2&quot;^?&quot;eval_point1&quot;^?&quot;eval_point2&quot;^?&quot;feedback_buffer&quot;^?&quot;finish&quot;^?&quot;flush&quot;^?&quot;fogf&quot;^?&quot;fogfv&quot;^?&quot;fogi&quot;^?&quot;fogiv&quot;^?&quot;front_face&quot;^?&quot;frustum&quot;^?&quot;gen_lists&quot;^?&quot;gen_textures&quot;^?&quot;get_booleanv&quot;^?&quot;get_clip_plane&quot;^?&quot;get_doublev&quot;^?&quot;get_error&quot;^?&quot;get_floatv&quot;^?&quot;get_integerv&quot;^?&quot;get_lightfv&quot;^?&quot;get_lightiv&quot;^?&quot;get_mapdv&quot;^?&quot;get_mapfv&quot;^?&quot;get_mapiv&quot;^?&quot;get_materialfv&quot;^?&quot;get_materialiv&quot;^?&quot;get_pixel_mapfv&quot;^?&quot;get_pixel_mapuiv&quot;^?&quot;get_pixel_mapusv&quot;^?&quot;get_pointerv&quot;^?&quot;get_polygon_stipple&quot;^?&quot;get_string&quot;^?&quot;get_tex_envfv&quot;^?&quot;get_tex_enviv&quot;^?&quot;get_tex_gendv&quot;^?&quot;get_tex_genfv&quot;^?&quot;get_tex_geniv&quot;^?&quot;get_tex_image&quot;^?&quot;get_tex_level_parameterfv&quot;^?&quot;get_tex_level_parameteriv&quot;^?&quot;get_tex_parameterfv&quot;^?&quot;get_tex_parameteriv&quot;^?&quot;hint&quot;^?&quot;index_mask&quot;^?&quot;index_pointer&quot;^?&quot;indexd&quot;^?&quot;indexdv&quot;^?&quot;indexf&quot;^?&quot;indexfv&quot;^?&quot;indexi&quot;^?&quot;indexiv&quot;^?&quot;indexs&quot;^?&quot;indexsv&quot;^?&quot;indexub&quot;^?&quot;indexubv&quot;^?&quot;init_names&quot;^?&quot;interleaved_arrays&quot;^?&quot;is_enabled&quot;^?&quot;is_list&quot;^?&quot;is_texture&quot;^?&quot;light_modelf&quot;^?&quot;light_modelfv&quot;^?&quot;light_modeli&quot;^?&quot;light_modeliv&quot;^?&quot;lightf&quot;^?&quot;lightfv&quot;^?&quot;lighti&quot;^?&quot;lightiv&quot;^?&quot;line_stipple&quot;^?&quot;line_width&quot;^?&quot;list_base&quot;^?&quot;load_identity&quot;^?&quot;load_matrixd&quot;^?&quot;load_matrixf&quot;^?&quot;load_name&quot;^?&quot;logic_op&quot;^?&quot;map1d&quot;^?&quot;map1f&quot;^?&quot;map2d&quot;^?&quot;map2f&quot;^?&quot;map_grid1d&quot;^?&quot;map_grid1f&quot;^?&quot;map_grid2d&quot;^?&quot;map_grid2f&quot;^?&quot;materialf&quot;^?&quot;materialfv&quot;^?&quot;materiali&quot;^?&quot;materialiv&quot;^?&quot;matrix_mode&quot;^?&quot;mult_matrixd&quot;^?&quot;mult_matrixf&quot;^?&quot;new_list&quot;^?&quot;normal3b&quot;^?&quot;normal3bv&quot;^?&quot;normal3d&quot;^?&quot;normal3dv&quot;^?&quot;normal3f&quot;^?&quot;normal3fv&quot;^?&quot;normal3i&quot;^?&quot;normal3iv&quot;^?&quot;normal3s&quot;^?&quot;normal3sv&quot;^?&quot;normal_pointer&quot;^?&quot;ortho&quot;^?&quot;pass_through&quot;^?&quot;pixel_mapfv&quot;^?&quot;pixel_mapuiv&quot;^?&quot;pixel_mapusv&quot;^?&quot;pixel_storef&quot;^?&quot;pixel_storei&quot;^?&quot;pixel_transferf&quot;^?&quot;pixel_transferi&quot;^?&quot;pixel_zoom&quot;^?&quot;point_size&quot;^?&quot;polygon_mode&quot;^?&quot;polygon_offset&quot;^?&quot;polygon_stipple&quot;^?&quot;pop_attrib&quot;^?&quot;pop_client_attrib&quot;^?&quot;pop_matrix&quot;^?&quot;pop_name&quot;^?&quot;prioritize_textures&quot;^?&quot;push_attrib&quot;^?&quot;push_client_attrib&quot;^?&quot;push_matrix&quot;^?&quot;push_name&quot;^?&quot;raster_pos2d&quot;^?&quot;raster_pos2dv&quot;^?&quot;raster_pos2f&quot;^?&quot;raster_pos2fv&quot;^?&quot;raster_pos2i&quot;^?&quot;raster_pos2iv&quot;^?&quot;raster_pos2s&quot;^?&quot;raster_pos2sv&quot;^?&quot;raster_pos3d&quot;^?&quot;raster_pos3dv&quot;^?&quot;raster_pos3f&quot;^?&quot;raster_pos3fv&quot;^?&quot;raster_pos3i&quot;^?&quot;raster_pos3iv&quot;^?&quot;raster_pos3s&quot;^?&quot;raster_pos3sv&quot;^?&quot;raster_pos4d&quot;^?&quot;raster_pos4dv&quot;^?&quot;raster_pos4f&quot;^?&quot;raster_pos4fv&quot;^?&quot;raster_pos4i&quot;^?&quot;raster_pos4iv&quot;^?&quot;raster_pos4s&quot;^?&quot;raster_pos4sv&quot;^?&quot;read_buffer&quot;^?&quot;read_pixels&quot;^?&quot;rectd&quot;^?&quot;rectdv&quot;^?&quot;rectf&quot;^?&quot;rectfv&quot;^?&quot;recti&quot;^?&quot;rectiv&quot;^?&quot;rects&quot;^?&quot;rectsv&quot;^?&quot;render_mode&quot;^?&quot;rotated&quot;^?&quot;rotatef&quot;^?&quot;scaled&quot;^?&quot;scalef&quot;^?&quot;scissor&quot;^?&quot;select_buffer&quot;^?&quot;shade_model&quot;^?&quot;stencil_func&quot;^?&quot;stencil_mask&quot;^?&quot;stencil_op&quot;^?&quot;tex_coord1d&quot;^?&quot;tex_coord1dv&quot;^?&quot;tex_coord1f&quot;^?&quot;tex_coord1fv&quot;^?&quot;tex_coord1i&quot;^?&quot;tex_coord1iv&quot;^?&quot;tex_coord1s&quot;^?&quot;tex_coord1sv&quot;^?&quot;tex_coord2d&quot;^?&quot;tex_coord2dv&quot;^?&quot;tex_coord2f&quot;^?&quot;tex_coord2fv&quot;^?&quot;tex_coord2i&quot;^?&quot;tex_coord2iv&quot;^?&quot;tex_coord2s&quot;^?&quot;tex_coord2sv&quot;^?&quot;tex_coord3d&quot;^?&quot;tex_coord3dv&quot;^?&quot;tex_coord3f&quot;^?&quot;tex_coord3fv&quot;^?&quot;tex_coord3i&quot;^?&quot;tex_coord3iv&quot;^?&quot;tex_coord3s&quot;^?&quot;tex_coord3sv&quot;^?&quot;tex_coord4d&quot;^?&quot;tex_coord4dv&quot;^?&quot;tex_coord4f&quot;^?&quot;tex_coord4fv&quot;^?&quot;tex_coord4i&quot;^?&quot;tex_coord4iv&quot;^?&quot;tex_coord4s&quot;^?&quot;tex_coord4sv&quot;^?&quot;tex_coord_pointer&quot;^?&quot;tex_envf&quot;^?&quot;tex_envfv&quot;^?&quot;tex_envi&quot;^?&quot;tex_enviv&quot;^?&quot;tex_gend&quot;^?&quot;tex_gendv&quot;^?&quot;tex_genf&quot;^?&quot;tex_genfv&quot;^?&quot;tex_geni&quot;^?&quot;tex_geniv&quot;^?&quot;tex_image1D&quot;^?&quot;tex_image2D&quot;^?&quot;tex_parameterf&quot;^?&quot;tex_parameterfv&quot;^?&quot;tex_parameteri&quot;^?&quot;tex_parameteriv&quot;^?&quot;tex_sub_image1D&quot;^?&quot;tex_sub_image2D&quot;^?&quot;translated&quot;^?&quot;translatef&quot;^?&quot;vertex2d&quot;^?&quot;vertex2dv&quot;^?&quot;vertex2f&quot;^?&quot;vertex2fv&quot;^?&quot;vertex2i&quot;^?&quot;vertex2iv&quot;^?&quot;vertex2s&quot;^?&quot;vertex2sv&quot;^?&quot;vertex3d&quot;^?&quot;vertex3dv&quot;^?&quot;vertex3f&quot;^?&quot;vertex3fv&quot;^?&quot;vertex3i&quot;^?&quot;vertex3iv&quot;^?&quot;vertex3s&quot;^?&quot;vertex3sv&quot;^?&quot;vertex4d&quot;^?&quot;vertex4dv&quot;^?&quot;vertex4f&quot;^?&quot;vertex4fv&quot;^?&quot;vertex4i&quot;^?&quot;vertex4iv&quot;^?&quot;vertex4s&quot;^?&quot;vertex4sv&quot;^?&quot;vertex_pointer&quot;^?&quot;viewport&quot;^?&quot;blend_func_separate&quot;^?&quot;blend_color&quot;^?&quot;blend_equation&quot;^?&quot;lock_arrays_EXT&quot;^?&quot;unlock_arrays_EXT&quot;^?&quot;client_active_texture&quot;^?&quot;active_texture&quot;^?&quot;multi_tex_coord1d&quot;^?&quot;multi_tex_coord1dv&quot;^?&quot;multi_tex_coord1f&quot;^?&quot;multi_tex_coord1fv&quot;^?&quot;multi_tex_coord1i&quot;^?&quot;multi_tex_coord1iv&quot;^?&quot;multi_tex_coord1s&quot;^?&quot;multi_tex_coord1sv&quot;^?&quot;multi_tex_coord2d&quot;^?&quot;multi_tex_coord2dv&quot;^?&quot;multi_tex_coord2f&quot;^?&quot;multi_tex_coord2fv&quot;^?&quot;multi_tex_coord2i&quot;^?&quot;multi_tex_coord2iv&quot;^?&quot;multi_tex_coord2s&quot;^?&quot;multi_tex_coord2sv&quot;^?&quot;multi_tex_coord3d&quot;^?&quot;multi_tex_coord3dv&quot;^?&quot;multi_tex_coord3f&quot;^?&quot;multi_tex_coord3fv&quot;^?&quot;multi_tex_coord3i&quot;^?&quot;multi_tex_coord3iv&quot;^?&quot;multi_tex_coord3s&quot;^?&quot;multi_tex_coord3sv&quot;^?&quot;multi_tex_coord4d&quot;^?&quot;multi_tex_coord4dv&quot;^?&quot;multi_tex_coord4f&quot;^?&quot;multi_tex_coord4fv&quot;^?&quot;multi_tex_coord4i&quot;^?&quot;multi_tex_coord4iv&quot;^?&quot;multi_tex_coord4s&quot;^?&quot;multi_tex_coord4sv&quot;^?&quot;load_transpose_matrixd&quot;^?&quot;load_transpose_matrixf&quot;^?&quot;mult_transpose_matrixd&quot;^?&quot;mult_transpose_matrixf&quot;^?&quot;compressed_tex_image3D&quot;^?&quot;compressed_tex_image2D&quot;^?&quot;compressed_tex_image1D&quot;^?&quot;compressed_tex_sub_image3D&quot;^?&quot;compressed_tex_sub_image2D&quot;^?&quot;compressed_tex_sub_image1D&quot;^?&quot;get_compressed_tex_image&quot;^?&quot;secondary_color3b&quot;^?&quot;secondary_color3bv&quot;^?&quot;secondary_color3d&quot;^?&quot;secondary_color3dv&quot;^?&quot;secondary_color3f&quot;^?&quot;secondary_color3fv&quot;^?&quot;secondary_color3i&quot;^?&quot;secondary_color3iv&quot;^?&quot;secondary_color3s&quot;^?&quot;secondary_color3sv&quot;^?&quot;secondary_color3ub&quot;^?&quot;secondary_color3ubv&quot;^?&quot;secondary_color3ui&quot;^?&quot;secondary_color3uiv&quot;^?&quot;secondary_color3us&quot;^?&quot;secondary_color3usv&quot;^?&quot;secondary_color_pointer&quot;^?&quot;vertex_array_range_EXT&quot;^?&quot;flush_vertex_array_range_EXT&quot;^?&quot;draw_range_elements&quot;^?&quot;color_table&quot;^?&quot;color_table_parameterfv&quot;^?&quot;color_table_parameteriv&quot;^?&quot;copy_color_table&quot;^?&quot;get_color_table&quot;^?&quot;get_color_table_parameterfv&quot;^?&quot;get_color_table_parameteriv&quot;^?&quot;color_sub_table&quot;^?&quot;copy_color_sub_table&quot;^?&quot;convolution_filter1D&quot;^?&quot;convolution_filter2D&quot;^?&quot;convolution_parameterf&quot;^?&quot;convolution_parameterfv&quot;^?&quot;convolution_parameteri&quot;^?&quot;convolution_parameteriv&quot;^?&quot;copy_convolution_filter1D&quot;^?&quot;copy_convolution_filter2D&quot;^?&quot;get_convolution_filter&quot;^?&quot;get_convolution_parameterfv&quot;^?&quot;get_convolution_parameteriv&quot;^?&quot;get_separable_filter&quot;^?&quot;separable_filter2D&quot;^?&quot;get_histogram&quot;^?&quot;get_histogram_parameterfv&quot;^?&quot;get_histogram_parameteriv&quot;^?&quot;get_minmax&quot;^?&quot;get_minmax_parameterfv&quot;^?&quot;get_minmax_parameteriv&quot;^?&quot;histogram&quot;^?&quot;minmax&quot;^?&quot;reset_histogram&quot;^?&quot;reset_minmax&quot;^?&quot;tex_image3D&quot;^?&quot;tex_sub_image3D&quot;^?&quot;copy_tex_sub_image3D&quot;^?&quot;get_uniform_indices&quot;^?&quot;get_active_uniformsiv&quot;^?&quot;get_active_uniform_name&quot;^?&quot;get_uniform_block_index&quot;^?&quot;get_active_uniform_blockiv&quot;^?&quot;get_active_uniform_block_name&quot;^?&quot;uniform_block_binding&quot;^?&quot;get_combiner_input_parameterfv_NV&quot;^?&quot;get_combiner_input_parameteriv_NV&quot;^?&quot;get_combiner_output_parameterfv_NV&quot;^?&quot;get_combiner_output_parameteriv_NV&quot;^?&quot;get_final_combiner_input_parameterfv_NV&quot;^?&quot;get_final_combiner_input_parameteriv_NV&quot;^?&quot;combiner_stage_parameterfv_NV&quot;^?&quot;get_combiner_stage_parameterfv_NV&quot;^?&quot;texture_range_APPLE&quot;^?&quot;get_tex_parameter_pointerv_APPLE&quot;^?&quot;blend_equation_separate_EXT&quot;^?&quot;sample_coverage&quot;^?&quot;sample_pass&quot;^?&quot;pn_trianglesi_ATI&quot;^?&quot;pn_trianglesf_ATI&quot;^?&quot;gen_fences_APPLE&quot;^?&quot;delete_fences_APPLE&quot;^?&quot;set_fence_APPLE&quot;^?&quot;is_fence_APPLE&quot;^?&quot;test_fence_APPLE&quot;^?&quot;finish_fence_APPLE&quot;^?&quot;test_object_APPLE&quot;^?&quot;finish_object_APPLE&quot;^?&quot;bind_program_ARB&quot;^?&quot;delete_programs_ARB&quot;^?&quot;gen_programs_ARB&quot;^?&quot;is_program_ARB&quot;^?&quot;vertex_attrib1s_ARB&quot;^?&quot;vertex_attrib1f_ARB&quot;^?&quot;vertex_attrib1d_ARB&quot;^?&quot;vertex_attrib2s_ARB&quot;^?&quot;vertex_attrib2f_ARB&quot;^?&quot;vertex_attrib2d_ARB&quot;^?&quot;vertex_attrib3s_ARB&quot;^?&quot;vertex_attrib3f_ARB&quot;^?&quot;vertex_attrib3d_ARB&quot;^?&quot;vertex_attrib4s_ARB&quot;^?&quot;vertex_attrib4f_ARB&quot;^?&quot;vertex_attrib4d_ARB&quot;^?&quot;vertex_attrib4Nub_ARB&quot;^?&quot;vertex_attrib1sv_ARB&quot;^?&quot;vertex_attrib1fv_ARB&quot;^?&quot;vertex_attrib1dv_ARB&quot;^?&quot;vertex_attrib2sv_ARB&quot;^?&quot;vertex_attrib2fv_ARB&quot;^?&quot;vertex_attrib2dv_ARB&quot;^?&quot;vertex_attrib3sv_ARB&quot;^?&quot;vertex_attrib3fv_ARB&quot;^?&quot;vertex_attrib3dv_ARB&quot;^?&quot;vertex_attrib4bv_ARB&quot;^?&quot;vertex_attrib4sv_ARB&quot;^?&quot;vertex_attrib4iv_ARB&quot;^?&quot;vertex_attrib4ubv_ARB&quot;^?&quot;vertex_attrib4usv_ARB&quot;^?&quot;vertex_attrib4uiv_ARB&quot;^?&quot;vertex_attrib4fv_ARB&quot;^?&quot;vertex_attrib4dv_ARB&quot;^?&quot;vertex_attrib4Nbv_ARB&quot;^?&quot;vertex_attrib4Nsv_ARB&quot;^?&quot;vertex_attrib4Niv_ARB&quot;^?&quot;vertex_attrib4Nubv_ARB&quot;^?&quot;vertex_attrib4Nusv_ARB&quot;^?&quot;vertex_attrib4Nuiv_ARB&quot;^?&quot;vertex_attrib_pointer_ARB&quot;^?&quot;enable_vertex_attrib_array_ARB&quot;^?&quot;disable_vertex_attrib_array_ARB&quot;^?&quot;get_vertex_attribdv_ARB&quot;^?&quot;get_vertex_attribfv_ARB&quot;^?&quot;get_vertex_attribiv_ARB&quot;^?&quot;get_vertex_attrib_pointerv_ARB&quot;^?&quot;program_env_parameter4d_ARB&quot;^?&quot;program_env_parameter4dv_ARB&quot;^?&quot;program_env_parameter4f_ARB&quot;^?&quot;program_env_parameter4fv_ARB&quot;^?&quot;program_local_parameter4d_ARB&quot;^?&quot;program_local_parameter4dv_ARB&quot;^?&quot;program_local_parameter4f_ARB&quot;^?&quot;program_local_parameter4fv_ARB&quot;^?&quot;get_program_env_parameterdv_ARB&quot;^?&quot;get_program_env_parameterfv_ARB&quot;^?&quot;get_program_local_parameterdv_ARB&quot;^?&quot;get_program_local_parameterfv_ARB&quot;^?&quot;program_string_ARB&quot;^?&quot;get_program_string_ARB&quot;^?&quot;get_programiv_ARB&quot;^?&quot;enable_vertex_attrib_ARB&quot;^?&quot;disable_vertex_attrib_ARB&quot;^?&quot;is_vertex_attrib_enabled_ARB&quot;^?&quot;map_vertex_attrib1d_ARB&quot;^?&quot;map_vertex_attrib1f_ARB&quot;^?&quot;map_vertex_attrib2d_ARB&quot;^?&quot;map_vertex_attrib2f_ARB&quot;^?&quot;point_parameterf&quot;^?&quot;point_parameterfv&quot;^?&quot;point_parameteri&quot;^?&quot;point_parameteriv&quot;^?&quot;fog_coordf&quot;^?&quot;fog_coordfv&quot;^?&quot;fog_coordd&quot;^?&quot;fog_coorddv&quot;^?&quot;fog_coord_pointer&quot;^?&quot;vertex_array_parameteri_EXT&quot;^?&quot;bind_vertex_array_EXT&quot;^?&quot;delete_vertex_arrays_EXT&quot;^?&quot;gen_vertex_arrays_EXT&quot;^?&quot;is_vertex_array_EXT&quot;^?&quot;element_pointer_APPLE&quot;^?&quot;draw_element_array_APPLE&quot;^?&quot;draw_range_element_array_APPLE&quot;^?&quot;weightbv_ARB&quot;^?&quot;weightsv_ARB&quot;^?&quot;weightiv_ARB&quot;^?&quot;weightfv_ARB&quot;^?&quot;weightdv_ARB&quot;^?&quot;weightubv_ARB&quot;^?&quot;weightusv_ARB&quot;^?&quot;weightuiv_ARB&quot;^?&quot;weight_pointer_ARB&quot;^?&quot;vertex_blend_ARB&quot;^?&quot;multi_draw_arrays&quot;^?&quot;multi_draw_elements&quot;^?&quot;window_pos2d&quot;^?&quot;window_pos2dv&quot;^?&quot;window_pos2f&quot;^?&quot;window_pos2fv&quot;^?&quot;window_pos2i&quot;^?&quot;window_pos2iv&quot;^?&quot;window_pos2s&quot;^?&quot;window_pos2sv&quot;^?&quot;window_pos3d&quot;^?&quot;window_pos3dv&quot;^?&quot;window_pos3f&quot;^?&quot;window_pos3fv&quot;^?&quot;window_pos3i&quot;^?&quot;window_pos3iv&quot;^?&quot;window_pos3s&quot;^?&quot;window_pos3sv&quot;^?&quot;active_stencil_face_EXT&quot;^?&quot;stencil_op_separate_ATI&quot;^?&quot;stencil_func_separate_ATI&quot;^?&quot;flush_render_APPLE&quot;^?&quot;finish_render_APPLE&quot;^?&quot;swap_APPLE&quot;^?&quot;delete_object_ARB&quot;^?&quot;get_handle_ARB&quot;^?&quot;detach_object_ARB&quot;^?&quot;create_shader_object_ARB&quot;^?&quot;shader_source_ARB&quot;^?&quot;compile_shader_ARB&quot;^?&quot;create_program_object_ARB&quot;^?&quot;attach_object_ARB&quot;^?&quot;link_program_ARB&quot;^?&quot;use_program_object_ARB&quot;^?&quot;validate_program_ARB&quot;^?&quot;uniform1f_ARB&quot;^?&quot;uniform2f_ARB&quot;^?&quot;uniform3f_ARB&quot;^?&quot;uniform4f_ARB&quot;^?&quot;uniform1i_ARB&quot;^?&quot;uniform2i_ARB&quot;^?&quot;uniform3i_ARB&quot;^?&quot;uniform4i_ARB&quot;^?&quot;uniform1fv_ARB&quot;^?&quot;uniform2fv_ARB&quot;^?&quot;uniform3fv_ARB&quot;^?&quot;uniform4fv_ARB&quot;^?&quot;uniform1iv_ARB&quot;^?&quot;uniform2iv_ARB&quot;^?&quot;uniform3iv_ARB&quot;^?&quot;uniform4iv_ARB&quot;^?&quot;uniform_matrix2fv_ARB&quot;^?&quot;uniform_matrix3fv_ARB&quot;^?&quot;uniform_matrix4fv_ARB&quot;^?&quot;get_object_parameterfv_ARB&quot;^?&quot;get_object_parameteriv_ARB&quot;^?&quot;get_info_log_ARB&quot;^?&quot;get_attached_objects_ARB&quot;^?&quot;get_uniform_location_ARB&quot;^?&quot;get_active_uniform_ARB&quot;^?&quot;get_uniformfv_ARB&quot;^?&quot;get_uniformiv_ARB&quot;^?&quot;get_shader_source_ARB&quot;^?&quot;bind_attrib_location_ARB&quot;^?&quot;get_active_attrib_ARB&quot;^?&quot;get_attrib_location_ARB&quot;^?&quot;clamp_color_ARB&quot;^?&quot;gen_queries&quot;^?&quot;delete_queries&quot;^?&quot;is_query&quot;^?&quot;begin_query&quot;^?&quot;end_query&quot;^?&quot;get_queryiv&quot;^?&quot;get_query_objectiv&quot;^?&quot;get_query_objectuiv&quot;^?&quot;bind_buffer&quot;^?&quot;delete_buffers&quot;^?&quot;gen_buffers&quot;^?&quot;is_buffer&quot;^?&quot;buffer_data&quot;^?&quot;buffer_sub_data&quot;^?&quot;get_buffer_sub_data&quot;^?&quot;map_buffer&quot;^?&quot;unmap_buffer&quot;^?&quot;get_buffer_parameteriv&quot;^?&quot;get_buffer_pointerv&quot;^?&quot;depth_bounds_EXT&quot;^?&quot;draw_buffers_ARB&quot;^?&quot;is_shader&quot;^?&quot;is_program&quot;^?&quot;get_shaderiv&quot;^?&quot;get_programiv&quot;^?&quot;get_shader_info_log&quot;^?&quot;get_program_info_log&quot;^?&quot;stencil_func_separate&quot;^?&quot;stencil_mask_separate&quot;^?&quot;multi_draw_element_array_APPLE&quot;^?&quot;multi_draw_range_element_array_APPLE&quot;^?&quot;is_renderbuffer_EXT&quot;^?&quot;bind_renderbuffer_EXT&quot;^?&quot;delete_renderbuffers_EXT&quot;^?&quot;gen_renderbuffers_EXT&quot;^?&quot;renderbuffer_storage_EXT&quot;^?&quot;get_renderbuffer_parameteriv_EXT&quot;^?&quot;is_framebuffer_EXT&quot;^?&quot;bind_framebuffer_EXT&quot;^?&quot;delete_framebuffers_EXT&quot;^?&quot;gen_framebuffers_EXT&quot;^?&quot;check_framebuffer_status_EXT&quot;^?&quot;framebuffer_texture1D_EXT&quot;^?&quot;framebuffer_texture2D_EXT&quot;^?&quot;framebuffer_texture3D_EXT&quot;^?&quot;framebuffer_renderbuffer_EXT&quot;^?&quot;get_framebuffer_attachment_parameteriv_EXT&quot;^?&quot;generate_mipmap_EXT&quot;^?&quot;buffer_parameteri_APPLE&quot;^?&quot;flush_mapped_buffer_range_APPLE&quot;^?&quot;program_env_parameters4fv_EXT&quot;^?&quot;program_local_parameters4fv_EXT&quot;^?&quot;object_purgeable_APPLE&quot;^?&quot;object_unpurgeable_APPLE&quot;^?&quot;get_object_parameteriv_APPLE&quot;^?&quot;program_parameteri_EXT&quot;^?&quot;framebuffer_texture_EXT&quot;^?&quot;framebuffer_texture_layer_EXT&quot;^?&quot;framebuffer_texture_face_EXT&quot;^?&quot;bind_buffer_range_EXT&quot;^?&quot;bind_buffer_offset_EXT&quot;^?&quot;bind_buffer_base_EXT&quot;^?&quot;begin_transform_feedback_EXT&quot;^?&quot;end_transform_feedback_EXT&quot;^?&quot;transform_feedback_varyings_EXT&quot;^?&quot;get_transform_feedback_varying_EXT&quot;^?&quot;get_integer_indexedv_EXT&quot;^?&quot;get_boolean_indexedv_EXT&quot;^?&quot;uniform_buffer_EXT&quot;^?&quot;get_uniform_buffer_size_EXT&quot;^?&quot;get_uniform_buffer_offset_EXT&quot;^?&quot;clear_colorIi_EXT&quot;^?&quot;clear_colorIui_EXT&quot;^?&quot;tex_parameterIiv_EXT&quot;^?&quot;tex_parameterIuiv_EXT&quot;^?&quot;get_tex_parameterIiv_EXT&quot;^?&quot;get_tex_parameterIuiv_EXT&quot;^?&quot;vertex_attribI1i_EXT&quot;^?&quot;vertex_attribI2i_EXT&quot;^?&quot;vertex_attribI3i_EXT&quot;^?&quot;vertex_attribI4i_EXT&quot;^?&quot;vertex_attribI1ui_EXT&quot;^?&quot;vertex_attribI2ui_EXT&quot;^?&quot;vertex_attribI3ui_EXT&quot;^?&quot;vertex_attribI4ui_EXT&quot;^?&quot;vertex_attribI1iv_EXT&quot;^?&quot;vertex_attribI2iv_EXT&quot;^?&quot;vertex_attribI3iv_EXT&quot;^?&quot;vertex_attribI4iv_EXT&quot;^?&quot;vertex_attribI1uiv_EXT&quot;^?&quot;vertex_attribI2uiv_EXT&quot;^?&quot;vertex_attribI3uiv_EXT&quot;^?&quot;vertex_attribI4uiv_EXT&quot;^?&quot;vertex_attribI4bv_EXT&quot;^?&quot;vertex_attribI4sv_EXT&quot;^?&quot;vertex_attribI4ubv_EXT&quot;^?&quot;vertex_attribI4usv_EXT&quot;^?&quot;vertex_attribI_pointer_EXT&quot;^?&quot;get_vertex_attribIiv_EXT&quot;^?&quot;get_vertex_attribIuiv_EXT&quot;^?&quot;uniform1ui_EXT&quot;^?&quot;uniform2ui_EXT&quot;^?&quot;uniform3ui_EXT&quot;^?&quot;uniform4ui_EXT&quot;^?&quot;uniform1uiv_EXT&quot;^?&quot;uniform2uiv_EXT&quot;^?&quot;uniform3uiv_EXT&quot;^?&quot;uniform4uiv_EXT&quot;^?&quot;get_uniformuiv_EXT&quot;^?&quot;bind_frag_data_location_EXT&quot;^?&quot;get_frag_data_location_EXT&quot;^?&quot;color_mask_indexed_EXT&quot;^?&quot;enable_indexed_EXT&quot;^?&quot;disable_indexed_EXT&quot;^?&quot;is_enabled_indexed_EXT&quot;^?&quot;uniform_matrix2x3fv&quot;^?&quot;uniform_matrix3x2fv&quot;^?&quot;uniform_matrix2x4fv&quot;^?&quot;uniform_matrix4x2fv&quot;^?&quot;uniform_matrix3x4fv&quot;^?&quot;uniform_matrix4x3fv&quot;^?&quot;blit_framebuffer_EXT&quot;^?&quot;renderbuffer_storage_multisample_EXT&quot;^?&quot;begin_conditional_render_NV&quot;^?&quot;end_conditional_render_NV&quot;^?&quot;get_attached_shaders&quot;^?&quot;provoking_vertex_EXT&quot;^?&quot;vertex_attrib_divisor&quot;^?&quot;draw_arrays_instanced&quot;^?&quot;draw_elements_instanced&quot;^?&quot;draw_elements_base_vertex&quot;^?&quot;draw_range_elements_base_vertex&quot;^?&quot;draw_elements_instanced_base_vertex&quot;^?&quot;multi_draw_elements_base_vertex&quot;^?&quot;bind_vertex_array_ARB&quot;^?&quot;delete_vertex_arrays_ARB&quot;^?&quot;gen_vertex_arrays_ARB&quot;^?&quot;is_vertex_array_ARB&quot;^?&quot;point_size_pointer&quot;^?&quot;vertex_point_sizef_APPLE&quot;^?&quot;clear_bufferiv&quot;^?&quot;clear_bufferuiv&quot;^?&quot;clear_bufferfv&quot;^?&quot;clear_bufferfi&quot;^?&quot;get_stringi&quot;^?&quot;fence_sync&quot;^?&quot;is_sync&quot;^?&quot;delete_sync&quot;^?&quot;client_wait_sync&quot;^?&quot;wait_sync&quot;^?&quot;get_integer64v_sync&quot;^?&quot;get_synciv&quot;^?&quot;tex_image2D_multisample&quot;^?&quot;tex_image3D_multisample&quot;^?&quot;get_multisamplefv&quot;^?&quot;sample_maski&quot;^?&quot;tex_buffer&quot;^?&quot;copy_buffer_sub_data&quot;^?&quot;primitive_restart_index&quot;^?&quot;get_query_objecti64v&quot;^?&quot;get_query_objectui64v&quot;^?&quot;map_buffer_range&quot;^?&quot;flush_mapped_buffer_range&quot;^?&quot;query_counter&quot;^?&quot;get_integer64i_v&quot;^?&quot;get_buffer_parameteri64v&quot;^?&quot;gen_samplers&quot;^?&quot;delete_samplers&quot;^?&quot;is_sampler&quot;^?&quot;bind_sampler&quot;^?&quot;sampler_parameteri&quot;^?&quot;sampler_parameteriv&quot;^?&quot;sampler_parameterf&quot;^?&quot;sampler_parameterfv&quot;^?&quot;sampler_parameterIiv&quot;^?&quot;sampler_parameterIuiv&quot;^?&quot;get_sampler_parameteriv&quot;^?&quot;get_sampler_parameterfv&quot;^?&quot;get_sampler_parameterIiv&quot;^?&quot;get_sampler_parameterIuiv&quot;^?&quot;label_object_EXT&quot;^?&quot;get_object_label_EXT&quot;^?&quot;insert_event_marker_EXT&quot;^?&quot;push_group_marker_EXT&quot;^?&quot;pop_group_marker_EXT&quot;^?&quot;use_program_stages&quot;^?&quot;active_shader_program&quot;^?&quot;create_shader_programv&quot;^?&quot;bind_program_pipeline&quot;^?&quot;delete_program_pipelines&quot;^?&quot;gen_program_pipelines&quot;^?&quot;is_program_pipeline&quot;^?&quot;get_program_pipelineiv&quot;^?&quot;validate_program_pipeline&quot;^?&quot;get_program_pipeline_info_log&quot;^?&quot;program_uniform1i&quot;^?&quot;program_uniform2i&quot;^?&quot;program_uniform3i&quot;^?&quot;program_uniform4i&quot;^?&quot;program_uniform1f&quot;^?&quot;program_uniform2f&quot;^?&quot;program_uniform3f&quot;^?&quot;program_uniform4f&quot;^?&quot;program_uniform1iv&quot;^?&quot;program_uniform2iv&quot;^?&quot;program_uniform3iv&quot;^?&quot;program_uniform4iv&quot;^?&quot;program_uniform1fv&quot;^?&quot;program_uniform2fv&quot;^?&quot;program_uniform3fv&quot;^?&quot;program_uniform4fv&quot;^?&quot;program_uniform_matrix2fv&quot;^?&quot;program_uniform_matrix3fv&quot;^?&quot;program_uniform_matrix4fv&quot;^?&quot;program_uniform1ui&quot;^?&quot;program_uniform2ui&quot;^?&quot;program_uniform3ui&quot;^?&quot;program_uniform4ui&quot;^?&quot;program_uniform1uiv&quot;^?&quot;program_uniform2uiv&quot;^?&quot;program_uniform3uiv&quot;^?&quot;program_uniform4uiv&quot;^?&quot;program_uniform_matrix2x3fv&quot;^?&quot;program_uniform_matrix3x2fv&quot;^?&quot;program_uniform_matrix2x4fv&quot;^?&quot;program_uniform_matrix4x2fv&quot;^?&quot;program_uniform_matrix3x4fv&quot;^?&quot;program_uniform_matrix4x3fv&quot;^?&quot;bind_frag_data_location_indexed&quot;^?&quot;get_frag_data_index&quot;^?&quot;blend_func_i&quot;^?&quot;blend_func_separate_i&quot;^?&quot;blend_equation_i&quot;^?&quot;blend_equation_separate_i&quot;^?&quot;named_string_ARB&quot;^?&quot;delete_named_string_ARB&quot;^?&quot;compile_shader_include_ARB&quot;^?&quot;is_named_string_ARB&quot;^?&quot;get_named_string_ARB&quot;^?&quot;get_named_string_iv_ARB&quot;^?&quot;release_shader_compiler&quot;^?&quot;shader_binary&quot;^?&quot;get_shader_precision_format&quot;^?&quot;depth_rangef&quot;^?&quot;clear_depthf&quot;^?&quot;vertex_attribP1ui&quot;^?&quot;vertex_attribP2ui&quot;^?&quot;vertex_attribP3ui&quot;^?&quot;vertex_attribP4ui&quot;^?&quot;vertex_attribP1uiv&quot;^?&quot;vertex_attribP2uiv&quot;^?&quot;vertex_attribP3uiv&quot;^?&quot;vertex_attribP4uiv&quot;^?&quot;get_program_binary&quot;^?&quot;program_binary&quot;^?&quot;min_sample_shading&quot;^?&quot;viewport_arrayv&quot;^?&quot;viewport_indexedf&quot;^?&quot;viewport_indexedfv&quot;^?&quot;scissor_arrayv&quot;^?&quot;scissor_indexed&quot;^?&quot;scissor_indexedv&quot;^?&quot;depth_range_arrayv&quot;^?&quot;depth_range_indexed&quot;^?&quot;get_floati_v&quot;^?&quot;get_doublei_v&quot;^?&quot;draw_arrays_indirect&quot;^?&quot;draw_elements_indirect&quot;^?&quot;patch_parameteri&quot;^?&quot;patch_parameterfv&quot;^?&quot;bind_transform_feedback&quot;^?&quot;gen_transform_feedbacks&quot;^?&quot;delete_transform_feedbacks&quot;^?&quot;pause_transform_feedback&quot;^?&quot;resume_transform_feedback&quot;^?&quot;is_transform_feedback&quot;^?&quot;draw_transform_feedback&quot;^?&quot;begin_query_indexed&quot;^?&quot;end_query_indexed&quot;^?&quot;get_query_indexediv&quot;^?&quot;draw_transform_feedback_stream&quot;^?&quot;program_uniform1d&quot;^?&quot;program_uniform2d&quot;^?&quot;program_uniform3d&quot;^?&quot;program_uniform4d&quot;^?&quot;program_uniform1dv&quot;^?&quot;program_uniform2dv&quot;^?&quot;program_uniform3dv&quot;^?&quot;program_uniform4dv&quot;^?&quot;program_uniform_matrix2dv&quot;^?&quot;program_uniform_matrix3dv&quot;^?&quot;program_uniform_matrix4dv&quot;^?&quot;program_uniform_matrix2x3dv&quot;^?&quot;program_uniform_matrix3x2dv&quot;^?&quot;program_uniform_matrix2x4dv&quot;^?&quot;program_uniform_matrix4x2dv&quot;^?&quot;program_uniform_matrix3x4dv&quot;^?&quot;program_uniform_matrix4x3dv&quot;^?&quot;uniform1d&quot;^?&quot;uniform2d&quot;^?&quot;uniform3d&quot;^?&quot;uniform4d&quot;^?&quot;uniform1dv&quot;^?&quot;uniform2dv&quot;^?&quot;uniform3dv&quot;^?&quot;uniform4dv&quot;^?&quot;uniform_matrix2dv&quot;^?&quot;uniform_matrix3dv&quot;^?&quot;uniform_matrix4dv&quot;^?&quot;uniform_matrix2x3dv&quot;^?&quot;uniform_matrix3x2dv&quot;^?&quot;uniform_matrix2x4dv&quot;^?&quot;uniform_matrix4x2dv&quot;^?&quot;uniform_matrix3x4dv&quot;^?&quot;uniform_matrix4x3dv&quot;^?&quot;get_uniformdv&quot;^?&quot;vertex_attribl1d&quot;^?&quot;vertex_attribl2d&quot;^?&quot;vertex_attribl3d&quot;^?&quot;vertex_attribl4d&quot;^?&quot;vertex_attribl1dv&quot;^?&quot;vertex_attribl2dv&quot;^?&quot;vertex_attribl3dv&quot;^?&quot;vertex_attribl4dv&quot;^?&quot;vertex_attrib_lpointer&quot;^?&quot;get_vertex_attrib_ldv&quot;^?&quot;get_subroutine_uniform_location&quot;^?&quot;get_subroutine_index&quot;^?&quot;get_active_subroutine_uniformiv&quot;^?&quot;get_active_subroutine_uniform_name&quot;^?&quot;get_active_subroutine_name&quot;^?&quot;uniform_subroutinesuiv&quot;^?&quot;get_uniform_subroutineuiv&quot;^?&quot;get_program_stageiv&quot;^?&quot;get_internal_formativ&quot;^?&quot;tex_storage1D&quot;^?&quot;tex_storage2D&quot;^?&quot;tex_storage3D&quot;^?&quot;label_object_with_responsible_process_APPLE&quot;^?&quot;texture_barrier_NV&quot;^?}&quot;priv&quot;^{_CGLPrivateObject}&quot;stak&quot;^v}'>
<field declared_type64='GLIContext' name='rend' type64='^{__GLIContextRec=}'/>
<field declared_type64='GLIFunctionDispatch' name='disp' type64='{__GLIFunctionDispatchRec=&quot;accum&quot;^?&quot;alpha_func&quot;^?&quot;are_textures_resident&quot;^?&quot;array_element&quot;^?&quot;begin&quot;^?&quot;bind_texture&quot;^?&quot;bitmap&quot;^?&quot;blend_func&quot;^?&quot;call_list&quot;^?&quot;call_lists&quot;^?&quot;clear&quot;^?&quot;clear_accum&quot;^?&quot;clear_color&quot;^?&quot;clear_depth&quot;^?&quot;clear_index&quot;^?&quot;clear_stencil&quot;^?&quot;clip_plane&quot;^?&quot;color3b&quot;^?&quot;color3bv&quot;^?&quot;color3d&quot;^?&quot;color3dv&quot;^?&quot;color3f&quot;^?&quot;color3fv&quot;^?&quot;color3i&quot;^?&quot;color3iv&quot;^?&quot;color3s&quot;^?&quot;color3sv&quot;^?&quot;color3ub&quot;^?&quot;color3ubv&quot;^?&quot;color3ui&quot;^?&quot;color3uiv&quot;^?&quot;color3us&quot;^?&quot;color3usv&quot;^?&quot;color4b&quot;^?&quot;color4bv&quot;^?&quot;color4d&quot;^?&quot;color4dv&quot;^?&quot;color4f&quot;^?&quot;color4fv&quot;^?&quot;color4i&quot;^?&quot;color4iv&quot;^?&quot;color4s&quot;^?&quot;color4sv&quot;^?&quot;color4ub&quot;^?&quot;color4ubv&quot;^?&quot;color4ui&quot;^?&quot;color4uiv&quot;^?&quot;color4us&quot;^?&quot;color4usv&quot;^?&quot;color_mask&quot;^?&quot;color_material&quot;^?&quot;color_pointer&quot;^?&quot;copy_pixels&quot;^?&quot;copy_tex_image1D&quot;^?&quot;copy_tex_image2D&quot;^?&quot;copy_tex_sub_image1D&quot;^?&quot;copy_tex_sub_image2D&quot;^?&quot;cull_face&quot;^?&quot;delete_lists&quot;^?&quot;delete_textures&quot;^?&quot;depth_func&quot;^?&quot;depth_mask&quot;^?&quot;depth_range&quot;^?&quot;disable&quot;^?&quot;disable_client_state&quot;^?&quot;draw_arrays&quot;^?&quot;draw_buffer&quot;^?&quot;draw_elements&quot;^?&quot;draw_pixels&quot;^?&quot;edge_flag&quot;^?&quot;edge_flag_pointer&quot;^?&quot;edge_flagv&quot;^?&quot;enable&quot;^?&quot;enable_client_state&quot;^?&quot;end&quot;^?&quot;end_list&quot;^?&quot;eval_coord1d&quot;^?&quot;eval_coord1dv&quot;^?&quot;eval_coord1f&quot;^?&quot;eval_coord1fv&quot;^?&quot;eval_coord2d&quot;^?&quot;eval_coord2dv&quot;^?&quot;eval_coord2f&quot;^?&quot;eval_coord2fv&quot;^?&quot;eval_mesh1&quot;^?&quot;eval_mesh2&quot;^?&quot;eval_point1&quot;^?&quot;eval_point2&quot;^?&quot;feedback_buffer&quot;^?&quot;finish&quot;^?&quot;flush&quot;^?&quot;fogf&quot;^?&quot;fogfv&quot;^?&quot;fogi&quot;^?&quot;fogiv&quot;^?&quot;front_face&quot;^?&quot;frustum&quot;^?&quot;gen_lists&quot;^?&quot;gen_textures&quot;^?&quot;get_booleanv&quot;^?&quot;get_clip_plane&quot;^?&quot;get_doublev&quot;^?&quot;get_error&quot;^?&quot;get_floatv&quot;^?&quot;get_integerv&quot;^?&quot;get_lightfv&quot;^?&quot;get_lightiv&quot;^?&quot;get_mapdv&quot;^?&quot;get_mapfv&quot;^?&quot;get_mapiv&quot;^?&quot;get_materialfv&quot;^?&quot;get_materialiv&quot;^?&quot;get_pixel_mapfv&quot;^?&quot;get_pixel_mapuiv&quot;^?&quot;get_pixel_mapusv&quot;^?&quot;get_pointerv&quot;^?&quot;get_polygon_stipple&quot;^?&quot;get_string&quot;^?&quot;get_tex_envfv&quot;^?&quot;get_tex_enviv&quot;^?&quot;get_tex_gendv&quot;^?&quot;get_tex_genfv&quot;^?&quot;get_tex_geniv&quot;^?&quot;get_tex_image&quot;^?&quot;get_tex_level_parameterfv&quot;^?&quot;get_tex_level_parameteriv&quot;^?&quot;get_tex_parameterfv&quot;^?&quot;get_tex_parameteriv&quot;^?&quot;hint&quot;^?&quot;index_mask&quot;^?&quot;index_pointer&quot;^?&quot;indexd&quot;^?&quot;indexdv&quot;^?&quot;indexf&quot;^?&quot;indexfv&quot;^?&quot;indexi&quot;^?&quot;indexiv&quot;^?&quot;indexs&quot;^?&quot;indexsv&quot;^?&quot;indexub&quot;^?&quot;indexubv&quot;^?&quot;init_names&quot;^?&quot;interleaved_arrays&quot;^?&quot;is_enabled&quot;^?&quot;is_list&quot;^?&quot;is_texture&quot;^?&quot;light_modelf&quot;^?&quot;light_modelfv&quot;^?&quot;light_modeli&quot;^?&quot;light_modeliv&quot;^?&quot;lightf&quot;^?&quot;lightfv&quot;^?&quot;lighti&quot;^?&quot;lightiv&quot;^?&quot;line_stipple&quot;^?&quot;line_width&quot;^?&quot;list_base&quot;^?&quot;load_identity&quot;^?&quot;load_matrixd&quot;^?&quot;load_matrixf&quot;^?&quot;load_name&quot;^?&quot;logic_op&quot;^?&quot;map1d&quot;^?&quot;map1f&quot;^?&quot;map2d&quot;^?&quot;map2f&quot;^?&quot;map_grid1d&quot;^?&quot;map_grid1f&quot;^?&quot;map_grid2d&quot;^?&quot;map_grid2f&quot;^?&quot;materialf&quot;^?&quot;materialfv&quot;^?&quot;materiali&quot;^?&quot;materialiv&quot;^?&quot;matrix_mode&quot;^?&quot;mult_matrixd&quot;^?&quot;mult_matrixf&quot;^?&quot;new_list&quot;^?&quot;normal3b&quot;^?&quot;normal3bv&quot;^?&quot;normal3d&quot;^?&quot;normal3dv&quot;^?&quot;normal3f&quot;^?&quot;normal3fv&quot;^?&quot;normal3i&quot;^?&quot;normal3iv&quot;^?&quot;normal3s&quot;^?&quot;normal3sv&quot;^?&quot;normal_pointer&quot;^?&quot;ortho&quot;^?&quot;pass_through&quot;^?&quot;pixel_mapfv&quot;^?&quot;pixel_mapuiv&quot;^?&quot;pixel_mapusv&quot;^?&quot;pixel_storef&quot;^?&quot;pixel_storei&quot;^?&quot;pixel_transferf&quot;^?&quot;pixel_transferi&quot;^?&quot;pixel_zoom&quot;^?&quot;point_size&quot;^?&quot;polygon_mode&quot;^?&quot;polygon_offset&quot;^?&quot;polygon_stipple&quot;^?&quot;pop_attrib&quot;^?&quot;pop_client_attrib&quot;^?&quot;pop_matrix&quot;^?&quot;pop_name&quot;^?&quot;prioritize_textures&quot;^?&quot;push_attrib&quot;^?&quot;push_client_attrib&quot;^?&quot;push_matrix&quot;^?&quot;push_name&quot;^?&quot;raster_pos2d&quot;^?&quot;raster_pos2dv&quot;^?&quot;raster_pos2f&quot;^?&quot;raster_pos2fv&quot;^?&quot;raster_pos2i&quot;^?&quot;raster_pos2iv&quot;^?&quot;raster_pos2s&quot;^?&quot;raster_pos2sv&quot;^?&quot;raster_pos3d&quot;^?&quot;raster_pos3dv&quot;^?&quot;raster_pos3f&quot;^?&quot;raster_pos3fv&quot;^?&quot;raster_pos3i&quot;^?&quot;raster_pos3iv&quot;^?&quot;raster_pos3s&quot;^?&quot;raster_pos3sv&quot;^?&quot;raster_pos4d&quot;^?&quot;raster_pos4dv&quot;^?&quot;raster_pos4f&quot;^?&quot;raster_pos4fv&quot;^?&quot;raster_pos4i&quot;^?&quot;raster_pos4iv&quot;^?&quot;raster_pos4s&quot;^?&quot;raster_pos4sv&quot;^?&quot;read_buffer&quot;^?&quot;read_pixels&quot;^?&quot;rectd&quot;^?&quot;rectdv&quot;^?&quot;rectf&quot;^?&quot;rectfv&quot;^?&quot;recti&quot;^?&quot;rectiv&quot;^?&quot;rects&quot;^?&quot;rectsv&quot;^?&quot;render_mode&quot;^?&quot;rotated&quot;^?&quot;rotatef&quot;^?&quot;scaled&quot;^?&quot;scalef&quot;^?&quot;scissor&quot;^?&quot;select_buffer&quot;^?&quot;shade_model&quot;^?&quot;stencil_func&quot;^?&quot;stencil_mask&quot;^?&quot;stencil_op&quot;^?&quot;tex_coord1d&quot;^?&quot;tex_coord1dv&quot;^?&quot;tex_coord1f&quot;^?&quot;tex_coord1fv&quot;^?&quot;tex_coord1i&quot;^?&quot;tex_coord1iv&quot;^?&quot;tex_coord1s&quot;^?&quot;tex_coord1sv&quot;^?&quot;tex_coord2d&quot;^?&quot;tex_coord2dv&quot;^?&quot;tex_coord2f&quot;^?&quot;tex_coord2fv&quot;^?&quot;tex_coord2i&quot;^?&quot;tex_coord2iv&quot;^?&quot;tex_coord2s&quot;^?&quot;tex_coord2sv&quot;^?&quot;tex_coord3d&quot;^?&quot;tex_coord3dv&quot;^?&quot;tex_coord3f&quot;^?&quot;tex_coord3fv&quot;^?&quot;tex_coord3i&quot;^?&quot;tex_coord3iv&quot;^?&quot;tex_coord3s&quot;^?&quot;tex_coord3sv&quot;^?&quot;tex_coord4d&quot;^?&quot;tex_coord4dv&quot;^?&quot;tex_coord4f&quot;^?&quot;tex_coord4fv&quot;^?&quot;tex_coord4i&quot;^?&quot;tex_coord4iv&quot;^?&quot;tex_coord4s&quot;^?&quot;tex_coord4sv&quot;^?&quot;tex_coord_pointer&quot;^?&quot;tex_envf&quot;^?&quot;tex_envfv&quot;^?&quot;tex_envi&quot;^?&quot;tex_enviv&quot;^?&quot;tex_gend&quot;^?&quot;tex_gendv&quot;^?&quot;tex_genf&quot;^?&quot;tex_genfv&quot;^?&quot;tex_geni&quot;^?&quot;tex_geniv&quot;^?&quot;tex_image1D&quot;^?&quot;tex_image2D&quot;^?&quot;tex_parameterf&quot;^?&quot;tex_parameterfv&quot;^?&quot;tex_parameteri&quot;^?&quot;tex_parameteriv&quot;^?&quot;tex_sub_image1D&quot;^?&quot;tex_sub_image2D&quot;^?&quot;translated&quot;^?&quot;translatef&quot;^?&quot;vertex2d&quot;^?&quot;vertex2dv&quot;^?&quot;vertex2f&quot;^?&quot;vertex2fv&quot;^?&quot;vertex2i&quot;^?&quot;vertex2iv&quot;^?&quot;vertex2s&quot;^?&quot;vertex2sv&quot;^?&quot;vertex3d&quot;^?&quot;vertex3dv&quot;^?&quot;vertex3f&quot;^?&quot;vertex3fv&quot;^?&quot;vertex3i&quot;^?&quot;vertex3iv&quot;^?&quot;vertex3s&quot;^?&quot;vertex3sv&quot;^?&quot;vertex4d&quot;^?&quot;vertex4dv&quot;^?&quot;vertex4f&quot;^?&quot;vertex4fv&quot;^?&quot;vertex4i&quot;^?&quot;vertex4iv&quot;^?&quot;vertex4s&quot;^?&quot;vertex4sv&quot;^?&quot;vertex_pointer&quot;^?&quot;viewport&quot;^?&quot;blend_func_separate&quot;^?&quot;blend_color&quot;^?&quot;blend_equation&quot;^?&quot;lock_arrays_EXT&quot;^?&quot;unlock_arrays_EXT&quot;^?&quot;client_active_texture&quot;^?&quot;active_texture&quot;^?&quot;multi_tex_coord1d&quot;^?&quot;multi_tex_coord1dv&quot;^?&quot;multi_tex_coord1f&quot;^?&quot;multi_tex_coord1fv&quot;^?&quot;multi_tex_coord1i&quot;^?&quot;multi_tex_coord1iv&quot;^?&quot;multi_tex_coord1s&quot;^?&quot;multi_tex_coord1sv&quot;^?&quot;multi_tex_coord2d&quot;^?&quot;multi_tex_coord2dv&quot;^?&quot;multi_tex_coord2f&quot;^?&quot;multi_tex_coord2fv&quot;^?&quot;multi_tex_coord2i&quot;^?&quot;multi_tex_coord2iv&quot;^?&quot;multi_tex_coord2s&quot;^?&quot;multi_tex_coord2sv&quot;^?&quot;multi_tex_coord3d&quot;^?&quot;multi_tex_coord3dv&quot;^?&quot;multi_tex_coord3f&quot;^?&quot;multi_tex_coord3fv&quot;^?&quot;multi_tex_coord3i&quot;^?&quot;multi_tex_coord3iv&quot;^?&quot;multi_tex_coord3s&quot;^?&quot;multi_tex_coord3sv&quot;^?&quot;multi_tex_coord4d&quot;^?&quot;multi_tex_coord4dv&quot;^?&quot;multi_tex_coord4f&quot;^?&quot;multi_tex_coord4fv&quot;^?&quot;multi_tex_coord4i&quot;^?&quot;multi_tex_coord4iv&quot;^?&quot;multi_tex_coord4s&quot;^?&quot;multi_tex_coord4sv&quot;^?&quot;load_transpose_matrixd&quot;^?&quot;load_transpose_matrixf&quot;^?&quot;mult_transpose_matrixd&quot;^?&quot;mult_transpose_matrixf&quot;^?&quot;compressed_tex_image3D&quot;^?&quot;compressed_tex_image2D&quot;^?&quot;compressed_tex_image1D&quot;^?&quot;compressed_tex_sub_image3D&quot;^?&quot;compressed_tex_sub_image2D&quot;^?&quot;compressed_tex_sub_image1D&quot;^?&quot;get_compressed_tex_image&quot;^?&quot;secondary_color3b&quot;^?&quot;secondary_color3bv&quot;^?&quot;secondary_color3d&quot;^?&quot;secondary_color3dv&quot;^?&quot;secondary_color3f&quot;^?&quot;secondary_color3fv&quot;^?&quot;secondary_color3i&quot;^?&quot;secondary_color3iv&quot;^?&quot;secondary_color3s&quot;^?&quot;secondary_color3sv&quot;^?&quot;secondary_color3ub&quot;^?&quot;secondary_color3ubv&quot;^?&quot;secondary_color3ui&quot;^?&quot;secondary_color3uiv&quot;^?&quot;secondary_color3us&quot;^?&quot;secondary_color3usv&quot;^?&quot;secondary_color_pointer&quot;^?&quot;vertex_array_range_EXT&quot;^?&quot;flush_vertex_array_range_EXT&quot;^?&quot;draw_range_elements&quot;^?&quot;color_table&quot;^?&quot;color_table_parameterfv&quot;^?&quot;color_table_parameteriv&quot;^?&quot;copy_color_table&quot;^?&quot;get_color_table&quot;^?&quot;get_color_table_parameterfv&quot;^?&quot;get_color_table_parameteriv&quot;^?&quot;color_sub_table&quot;^?&quot;copy_color_sub_table&quot;^?&quot;convolution_filter1D&quot;^?&quot;convolution_filter2D&quot;^?&quot;convolution_parameterf&quot;^?&quot;convolution_parameterfv&quot;^?&quot;convolution_parameteri&quot;^?&quot;convolution_parameteriv&quot;^?&quot;copy_convolution_filter1D&quot;^?&quot;copy_convolution_filter2D&quot;^?&quot;get_convolution_filter&quot;^?&quot;get_convolution_parameterfv&quot;^?&quot;get_convolution_parameteriv&quot;^?&quot;get_separable_filter&quot;^?&quot;separable_filter2D&quot;^?&quot;get_histogram&quot;^?&quot;get_histogram_parameterfv&quot;^?&quot;get_histogram_parameteriv&quot;^?&quot;get_minmax&quot;^?&quot;get_minmax_parameterfv&quot;^?&quot;get_minmax_parameteriv&quot;^?&quot;histogram&quot;^?&quot;minmax&quot;^?&quot;reset_histogram&quot;^?&quot;reset_minmax&quot;^?&quot;tex_image3D&quot;^?&quot;tex_sub_image3D&quot;^?&quot;copy_tex_sub_image3D&quot;^?&quot;get_uniform_indices&quot;^?&quot;get_active_uniformsiv&quot;^?&quot;get_active_uniform_name&quot;^?&quot;get_uniform_block_index&quot;^?&quot;get_active_uniform_blockiv&quot;^?&quot;get_active_uniform_block_name&quot;^?&quot;uniform_block_binding&quot;^?&quot;get_combiner_input_parameterfv_NV&quot;^?&quot;get_combiner_input_parameteriv_NV&quot;^?&quot;get_combiner_output_parameterfv_NV&quot;^?&quot;get_combiner_output_parameteriv_NV&quot;^?&quot;get_final_combiner_input_parameterfv_NV&quot;^?&quot;get_final_combiner_input_parameteriv_NV&quot;^?&quot;combiner_stage_parameterfv_NV&quot;^?&quot;get_combiner_stage_parameterfv_NV&quot;^?&quot;texture_range_APPLE&quot;^?&quot;get_tex_parameter_pointerv_APPLE&quot;^?&quot;blend_equation_separate_EXT&quot;^?&quot;sample_coverage&quot;^?&quot;sample_pass&quot;^?&quot;pn_trianglesi_ATI&quot;^?&quot;pn_trianglesf_ATI&quot;^?&quot;gen_fences_APPLE&quot;^?&quot;delete_fences_APPLE&quot;^?&quot;set_fence_APPLE&quot;^?&quot;is_fence_APPLE&quot;^?&quot;test_fence_APPLE&quot;^?&quot;finish_fence_APPLE&quot;^?&quot;test_object_APPLE&quot;^?&quot;finish_object_APPLE&quot;^?&quot;bind_program_ARB&quot;^?&quot;delete_programs_ARB&quot;^?&quot;gen_programs_ARB&quot;^?&quot;is_program_ARB&quot;^?&quot;vertex_attrib1s_ARB&quot;^?&quot;vertex_attrib1f_ARB&quot;^?&quot;vertex_attrib1d_ARB&quot;^?&quot;vertex_attrib2s_ARB&quot;^?&quot;vertex_attrib2f_ARB&quot;^?&quot;vertex_attrib2d_ARB&quot;^?&quot;vertex_attrib3s_ARB&quot;^?&quot;vertex_attrib3f_ARB&quot;^?&quot;vertex_attrib3d_ARB&quot;^?&quot;vertex_attrib4s_ARB&quot;^?&quot;vertex_attrib4f_ARB&quot;^?&quot;vertex_attrib4d_ARB&quot;^?&quot;vertex_attrib4Nub_ARB&quot;^?&quot;vertex_attrib1sv_ARB&quot;^?&quot;vertex_attrib1fv_ARB&quot;^?&quot;vertex_attrib1dv_ARB&quot;^?&quot;vertex_attrib2sv_ARB&quot;^?&quot;vertex_attrib2fv_ARB&quot;^?&quot;vertex_attrib2dv_ARB&quot;^?&quot;vertex_attrib3sv_ARB&quot;^?&quot;vertex_attrib3fv_ARB&quot;^?&quot;vertex_attrib3dv_ARB&quot;^?&quot;vertex_attrib4bv_ARB&quot;^?&quot;vertex_attrib4sv_ARB&quot;^?&quot;vertex_attrib4iv_ARB&quot;^?&quot;vertex_attrib4ubv_ARB&quot;^?&quot;vertex_attrib4usv_ARB&quot;^?&quot;vertex_attrib4uiv_ARB&quot;^?&quot;vertex_attrib4fv_ARB&quot;^?&quot;vertex_attrib4dv_ARB&quot;^?&quot;vertex_attrib4Nbv_ARB&quot;^?&quot;vertex_attrib4Nsv_ARB&quot;^?&quot;vertex_attrib4Niv_ARB&quot;^?&quot;vertex_attrib4Nubv_ARB&quot;^?&quot;vertex_attrib4Nusv_ARB&quot;^?&quot;vertex_attrib4Nuiv_ARB&quot;^?&quot;vertex_attrib_pointer_ARB&quot;^?&quot;enable_vertex_attrib_array_ARB&quot;^?&quot;disable_vertex_attrib_array_ARB&quot;^?&quot;get_vertex_attribdv_ARB&quot;^?&quot;get_vertex_attribfv_ARB&quot;^?&quot;get_vertex_attribiv_ARB&quot;^?&quot;get_vertex_attrib_pointerv_ARB&quot;^?&quot;program_env_parameter4d_ARB&quot;^?&quot;program_env_parameter4dv_ARB&quot;^?&quot;program_env_parameter4f_ARB&quot;^?&quot;program_env_parameter4fv_ARB&quot;^?&quot;program_local_parameter4d_ARB&quot;^?&quot;program_local_parameter4dv_ARB&quot;^?&quot;program_local_parameter4f_ARB&quot;^?&quot;program_local_parameter4fv_ARB&quot;^?&quot;get_program_env_parameterdv_ARB&quot;^?&quot;get_program_env_parameterfv_ARB&quot;^?&quot;get_program_local_parameterdv_ARB&quot;^?&quot;get_program_local_parameterfv_ARB&quot;^?&quot;program_string_ARB&quot;^?&quot;get_program_string_ARB&quot;^?&quot;get_programiv_ARB&quot;^?&quot;enable_vertex_attrib_ARB&quot;^?&quot;disable_vertex_attrib_ARB&quot;^?&quot;is_vertex_attrib_enabled_ARB&quot;^?&quot;map_vertex_attrib1d_ARB&quot;^?&quot;map_vertex_attrib1f_ARB&quot;^?&quot;map_vertex_attrib2d_ARB&quot;^?&quot;map_vertex_attrib2f_ARB&quot;^?&quot;point_parameterf&quot;^?&quot;point_parameterfv&quot;^?&quot;point_parameteri&quot;^?&quot;point_parameteriv&quot;^?&quot;fog_coordf&quot;^?&quot;fog_coordfv&quot;^?&quot;fog_coordd&quot;^?&quot;fog_coorddv&quot;^?&quot;fog_coord_pointer&quot;^?&quot;vertex_array_parameteri_EXT&quot;^?&quot;bind_vertex_array_EXT&quot;^?&quot;delete_vertex_arrays_EXT&quot;^?&quot;gen_vertex_arrays_EXT&quot;^?&quot;is_vertex_array_EXT&quot;^?&quot;element_pointer_APPLE&quot;^?&quot;draw_element_array_APPLE&quot;^?&quot;draw_range_element_array_APPLE&quot;^?&quot;weightbv_ARB&quot;^?&quot;weightsv_ARB&quot;^?&quot;weightiv_ARB&quot;^?&quot;weightfv_ARB&quot;^?&quot;weightdv_ARB&quot;^?&quot;weightubv_ARB&quot;^?&quot;weightusv_ARB&quot;^?&quot;weightuiv_ARB&quot;^?&quot;weight_pointer_ARB&quot;^?&quot;vertex_blend_ARB&quot;^?&quot;multi_draw_arrays&quot;^?&quot;multi_draw_elements&quot;^?&quot;window_pos2d&quot;^?&quot;window_pos2dv&quot;^?&quot;window_pos2f&quot;^?&quot;window_pos2fv&quot;^?&quot;window_pos2i&quot;^?&quot;window_pos2iv&quot;^?&quot;window_pos2s&quot;^?&quot;window_pos2sv&quot;^?&quot;window_pos3d&quot;^?&quot;window_pos3dv&quot;^?&quot;window_pos3f&quot;^?&quot;window_pos3fv&quot;^?&quot;window_pos3i&quot;^?&quot;window_pos3iv&quot;^?&quot;window_pos3s&quot;^?&quot;window_pos3sv&quot;^?&quot;active_stencil_face_EXT&quot;^?&quot;stencil_op_separate_ATI&quot;^?&quot;stencil_func_separate_ATI&quot;^?&quot;flush_render_APPLE&quot;^?&quot;finish_render_APPLE&quot;^?&quot;swap_APPLE&quot;^?&quot;delete_object_ARB&quot;^?&quot;get_handle_ARB&quot;^?&quot;detach_object_ARB&quot;^?&quot;create_shader_object_ARB&quot;^?&quot;shader_source_ARB&quot;^?&quot;compile_shader_ARB&quot;^?&quot;create_program_object_ARB&quot;^?&quot;attach_object_ARB&quot;^?&quot;link_program_ARB&quot;^?&quot;use_program_object_ARB&quot;^?&quot;validate_program_ARB&quot;^?&quot;uniform1f_ARB&quot;^?&quot;uniform2f_ARB&quot;^?&quot;uniform3f_ARB&quot;^?&quot;uniform4f_ARB&quot;^?&quot;uniform1i_ARB&quot;^?&quot;uniform2i_ARB&quot;^?&quot;uniform3i_ARB&quot;^?&quot;uniform4i_ARB&quot;^?&quot;uniform1fv_ARB&quot;^?&quot;uniform2fv_ARB&quot;^?&quot;uniform3fv_ARB&quot;^?&quot;uniform4fv_ARB&quot;^?&quot;uniform1iv_ARB&quot;^?&quot;uniform2iv_ARB&quot;^?&quot;uniform3iv_ARB&quot;^?&quot;uniform4iv_ARB&quot;^?&quot;uniform_matrix2fv_ARB&quot;^?&quot;uniform_matrix3fv_ARB&quot;^?&quot;uniform_matrix4fv_ARB&quot;^?&quot;get_object_parameterfv_ARB&quot;^?&quot;get_object_parameteriv_ARB&quot;^?&quot;get_info_log_ARB&quot;^?&quot;get_attached_objects_ARB&quot;^?&quot;get_uniform_location_ARB&quot;^?&quot;get_active_uniform_ARB&quot;^?&quot;get_uniformfv_ARB&quot;^?&quot;get_uniformiv_ARB&quot;^?&quot;get_shader_source_ARB&quot;^?&quot;bind_attrib_location_ARB&quot;^?&quot;get_active_attrib_ARB&quot;^?&quot;get_attrib_location_ARB&quot;^?&quot;clamp_color_ARB&quot;^?&quot;gen_queries&quot;^?&quot;delete_queries&quot;^?&quot;is_query&quot;^?&quot;begin_query&quot;^?&quot;end_query&quot;^?&quot;get_queryiv&quot;^?&quot;get_query_objectiv&quot;^?&quot;get_query_objectuiv&quot;^?&quot;bind_buffer&quot;^?&quot;delete_buffers&quot;^?&quot;gen_buffers&quot;^?&quot;is_buffer&quot;^?&quot;buffer_data&quot;^?&quot;buffer_sub_data&quot;^?&quot;get_buffer_sub_data&quot;^?&quot;map_buffer&quot;^?&quot;unmap_buffer&quot;^?&quot;get_buffer_parameteriv&quot;^?&quot;get_buffer_pointerv&quot;^?&quot;depth_bounds_EXT&quot;^?&quot;draw_buffers_ARB&quot;^?&quot;is_shader&quot;^?&quot;is_program&quot;^?&quot;get_shaderiv&quot;^?&quot;get_programiv&quot;^?&quot;get_shader_info_log&quot;^?&quot;get_program_info_log&quot;^?&quot;stencil_func_separate&quot;^?&quot;stencil_mask_separate&quot;^?&quot;multi_draw_element_array_APPLE&quot;^?&quot;multi_draw_range_element_array_APPLE&quot;^?&quot;is_renderbuffer_EXT&quot;^?&quot;bind_renderbuffer_EXT&quot;^?&quot;delete_renderbuffers_EXT&quot;^?&quot;gen_renderbuffers_EXT&quot;^?&quot;renderbuffer_storage_EXT&quot;^?&quot;get_renderbuffer_parameteriv_EXT&quot;^?&quot;is_framebuffer_EXT&quot;^?&quot;bind_framebuffer_EXT&quot;^?&quot;delete_framebuffers_EXT&quot;^?&quot;gen_framebuffers_EXT&quot;^?&quot;check_framebuffer_status_EXT&quot;^?&quot;framebuffer_texture1D_EXT&quot;^?&quot;framebuffer_texture2D_EXT&quot;^?&quot;framebuffer_texture3D_EXT&quot;^?&quot;framebuffer_renderbuffer_EXT&quot;^?&quot;get_framebuffer_attachment_parameteriv_EXT&quot;^?&quot;generate_mipmap_EXT&quot;^?&quot;buffer_parameteri_APPLE&quot;^?&quot;flush_mapped_buffer_range_APPLE&quot;^?&quot;program_env_parameters4fv_EXT&quot;^?&quot;program_local_parameters4fv_EXT&quot;^?&quot;object_purgeable_APPLE&quot;^?&quot;object_unpurgeable_APPLE&quot;^?&quot;get_object_parameteriv_APPLE&quot;^?&quot;program_parameteri_EXT&quot;^?&quot;framebuffer_texture_EXT&quot;^?&quot;framebuffer_texture_layer_EXT&quot;^?&quot;framebuffer_texture_face_EXT&quot;^?&quot;bind_buffer_range_EXT&quot;^?&quot;bind_buffer_offset_EXT&quot;^?&quot;bind_buffer_base_EXT&quot;^?&quot;begin_transform_feedback_EXT&quot;^?&quot;end_transform_feedback_EXT&quot;^?&quot;transform_feedback_varyings_EXT&quot;^?&quot;get_transform_feedback_varying_EXT&quot;^?&quot;get_integer_indexedv_EXT&quot;^?&quot;get_boolean_indexedv_EXT&quot;^?&quot;uniform_buffer_EXT&quot;^?&quot;get_uniform_buffer_size_EXT&quot;^?&quot;get_uniform_buffer_offset_EXT&quot;^?&quot;clear_colorIi_EXT&quot;^?&quot;clear_colorIui_EXT&quot;^?&quot;tex_parameterIiv_EXT&quot;^?&quot;tex_parameterIuiv_EXT&quot;^?&quot;get_tex_parameterIiv_EXT&quot;^?&quot;get_tex_parameterIuiv_EXT&quot;^?&quot;vertex_attribI1i_EXT&quot;^?&quot;vertex_attribI2i_EXT&quot;^?&quot;vertex_attribI3i_EXT&quot;^?&quot;vertex_attribI4i_EXT&quot;^?&quot;vertex_attribI1ui_EXT&quot;^?&quot;vertex_attribI2ui_EXT&quot;^?&quot;vertex_attribI3ui_EXT&quot;^?&quot;vertex_attribI4ui_EXT&quot;^?&quot;vertex_attribI1iv_EXT&quot;^?&quot;vertex_attribI2iv_EXT&quot;^?&quot;vertex_attribI3iv_EXT&quot;^?&quot;vertex_attribI4iv_EXT&quot;^?&quot;vertex_attribI1uiv_EXT&quot;^?&quot;vertex_attribI2uiv_EXT&quot;^?&quot;vertex_attribI3uiv_EXT&quot;^?&quot;vertex_attribI4uiv_EXT&quot;^?&quot;vertex_attribI4bv_EXT&quot;^?&quot;vertex_attribI4sv_EXT&quot;^?&quot;vertex_attribI4ubv_EXT&quot;^?&quot;vertex_attribI4usv_EXT&quot;^?&quot;vertex_attribI_pointer_EXT&quot;^?&quot;get_vertex_attribIiv_EXT&quot;^?&quot;get_vertex_attribIuiv_EXT&quot;^?&quot;uniform1ui_EXT&quot;^?&quot;uniform2ui_EXT&quot;^?&quot;uniform3ui_EXT&quot;^?&quot;uniform4ui_EXT&quot;^?&quot;uniform1uiv_EXT&quot;^?&quot;uniform2uiv_EXT&quot;^?&quot;uniform3uiv_EXT&quot;^?&quot;uniform4uiv_EXT&quot;^?&quot;get_uniformuiv_EXT&quot;^?&quot;bind_frag_data_location_EXT&quot;^?&quot;get_frag_data_location_EXT&quot;^?&quot;color_mask_indexed_EXT&quot;^?&quot;enable_indexed_EXT&quot;^?&quot;disable_indexed_EXT&quot;^?&quot;is_enabled_indexed_EXT&quot;^?&quot;uniform_matrix2x3fv&quot;^?&quot;uniform_matrix3x2fv&quot;^?&quot;uniform_matrix2x4fv&quot;^?&quot;uniform_matrix4x2fv&quot;^?&quot;uniform_matrix3x4fv&quot;^?&quot;uniform_matrix4x3fv&quot;^?&quot;blit_framebuffer_EXT&quot;^?&quot;renderbuffer_storage_multisample_EXT&quot;^?&quot;begin_conditional_render_NV&quot;^?&quot;end_conditional_render_NV&quot;^?&quot;get_attached_shaders&quot;^?&quot;provoking_vertex_EXT&quot;^?&quot;vertex_attrib_divisor&quot;^?&quot;draw_arrays_instanced&quot;^?&quot;draw_elements_instanced&quot;^?&quot;draw_elements_base_vertex&quot;^?&quot;draw_range_elements_base_vertex&quot;^?&quot;draw_elements_instanced_base_vertex&quot;^?&quot;multi_draw_elements_base_vertex&quot;^?&quot;bind_vertex_array_ARB&quot;^?&quot;delete_vertex_arrays_ARB&quot;^?&quot;gen_vertex_arrays_ARB&quot;^?&quot;is_vertex_array_ARB&quot;^?&quot;point_size_pointer&quot;^?&quot;vertex_point_sizef_APPLE&quot;^?&quot;clear_bufferiv&quot;^?&quot;clear_bufferuiv&quot;^?&quot;clear_bufferfv&quot;^?&quot;clear_bufferfi&quot;^?&quot;get_stringi&quot;^?&quot;fence_sync&quot;^?&quot;is_sync&quot;^?&quot;delete_sync&quot;^?&quot;client_wait_sync&quot;^?&quot;wait_sync&quot;^?&quot;get_integer64v_sync&quot;^?&quot;get_synciv&quot;^?&quot;tex_image2D_multisample&quot;^?&quot;tex_image3D_multisample&quot;^?&quot;get_multisamplefv&quot;^?&quot;sample_maski&quot;^?&quot;tex_buffer&quot;^?&quot;copy_buffer_sub_data&quot;^?&quot;primitive_restart_index&quot;^?&quot;get_query_objecti64v&quot;^?&quot;get_query_objectui64v&quot;^?&quot;map_buffer_range&quot;^?&quot;flush_mapped_buffer_range&quot;^?&quot;query_counter&quot;^?&quot;get_integer64i_v&quot;^?&quot;get_buffer_parameteri64v&quot;^?&quot;gen_samplers&quot;^?&quot;delete_samplers&quot;^?&quot;is_sampler&quot;^?&quot;bind_sampler&quot;^?&quot;sampler_parameteri&quot;^?&quot;sampler_parameteriv&quot;^?&quot;sampler_parameterf&quot;^?&quot;sampler_parameterfv&quot;^?&quot;sampler_parameterIiv&quot;^?&quot;sampler_parameterIuiv&quot;^?&quot;get_sampler_parameteriv&quot;^?&quot;get_sampler_parameterfv&quot;^?&quot;get_sampler_parameterIiv&quot;^?&quot;get_sampler_parameterIuiv&quot;^?&quot;label_object_EXT&quot;^?&quot;get_object_label_EXT&quot;^?&quot;insert_event_marker_EXT&quot;^?&quot;push_group_marker_EXT&quot;^?&quot;pop_group_marker_EXT&quot;^?&quot;use_program_stages&quot;^?&quot;active_shader_program&quot;^?&quot;create_shader_programv&quot;^?&quot;bind_program_pipeline&quot;^?&quot;delete_program_pipelines&quot;^?&quot;gen_program_pipelines&quot;^?&quot;is_program_pipeline&quot;^?&quot;get_program_pipelineiv&quot;^?&quot;validate_program_pipeline&quot;^?&quot;get_program_pipeline_info_log&quot;^?&quot;program_uniform1i&quot;^?&quot;program_uniform2i&quot;^?&quot;program_uniform3i&quot;^?&quot;program_uniform4i&quot;^?&quot;program_uniform1f&quot;^?&quot;program_uniform2f&quot;^?&quot;program_uniform3f&quot;^?&quot;program_uniform4f&quot;^?&quot;program_uniform1iv&quot;^?&quot;program_uniform2iv&quot;^?&quot;program_uniform3iv&quot;^?&quot;program_uniform4iv&quot;^?&quot;program_uniform1fv&quot;^?&quot;program_uniform2fv&quot;^?&quot;program_uniform3fv&quot;^?&quot;program_uniform4fv&quot;^?&quot;program_uniform_matrix2fv&quot;^?&quot;program_uniform_matrix3fv&quot;^?&quot;program_uniform_matrix4fv&quot;^?&quot;program_uniform1ui&quot;^?&quot;program_uniform2ui&quot;^?&quot;program_uniform3ui&quot;^?&quot;program_uniform4ui&quot;^?&quot;program_uniform1uiv&quot;^?&quot;program_uniform2uiv&quot;^?&quot;program_uniform3uiv&quot;^?&quot;program_uniform4uiv&quot;^?&quot;program_uniform_matrix2x3fv&quot;^?&quot;program_uniform_matrix3x2fv&quot;^?&quot;program_uniform_matrix2x4fv&quot;^?&quot;program_uniform_matrix4x2fv&quot;^?&quot;program_uniform_matrix3x4fv&quot;^?&quot;program_uniform_matrix4x3fv&quot;^?&quot;bind_frag_data_location_indexed&quot;^?&quot;get_frag_data_index&quot;^?&quot;blend_func_i&quot;^?&quot;blend_func_separate_i&quot;^?&quot;blend_equation_i&quot;^?&quot;blend_equation_separate_i&quot;^?&quot;named_string_ARB&quot;^?&quot;delete_named_string_ARB&quot;^?&quot;compile_shader_include_ARB&quot;^?&quot;is_named_string_ARB&quot;^?&quot;get_named_string_ARB&quot;^?&quot;get_named_string_iv_ARB&quot;^?&quot;release_shader_compiler&quot;^?&quot;shader_binary&quot;^?&quot;get_shader_precision_format&quot;^?&quot;depth_rangef&quot;^?&quot;clear_depthf&quot;^?&quot;vertex_attribP1ui&quot;^?&quot;vertex_attribP2ui&quot;^?&quot;vertex_attribP3ui&quot;^?&quot;vertex_attribP4ui&quot;^?&quot;vertex_attribP1uiv&quot;^?&quot;vertex_attribP2uiv&quot;^?&quot;vertex_attribP3uiv&quot;^?&quot;vertex_attribP4uiv&quot;^?&quot;get_program_binary&quot;^?&quot;program_binary&quot;^?&quot;min_sample_shading&quot;^?&quot;viewport_arrayv&quot;^?&quot;viewport_indexedf&quot;^?&quot;viewport_indexedfv&quot;^?&quot;scissor_arrayv&quot;^?&quot;scissor_indexed&quot;^?&quot;scissor_indexedv&quot;^?&quot;depth_range_arrayv&quot;^?&quot;depth_range_indexed&quot;^?&quot;get_floati_v&quot;^?&quot;get_doublei_v&quot;^?&quot;draw_arrays_indirect&quot;^?&quot;draw_elements_indirect&quot;^?&quot;patch_parameteri&quot;^?&quot;patch_parameterfv&quot;^?&quot;bind_transform_feedback&quot;^?&quot;gen_transform_feedbacks&quot;^?&quot;delete_transform_feedbacks&quot;^?&quot;pause_transform_feedback&quot;^?&quot;resume_transform_feedback&quot;^?&quot;is_transform_feedback&quot;^?&quot;draw_transform_feedback&quot;^?&quot;begin_query_indexed&quot;^?&quot;end_query_indexed&quot;^?&quot;get_query_indexediv&quot;^?&quot;draw_transform_feedback_stream&quot;^?&quot;program_uniform1d&quot;^?&quot;program_uniform2d&quot;^?&quot;program_uniform3d&quot;^?&quot;program_uniform4d&quot;^?&quot;program_uniform1dv&quot;^?&quot;program_uniform2dv&quot;^?&quot;program_uniform3dv&quot;^?&quot;program_uniform4dv&quot;^?&quot;program_uniform_matrix2dv&quot;^?&quot;program_uniform_matrix3dv&quot;^?&quot;program_uniform_matrix4dv&quot;^?&quot;program_uniform_matrix2x3dv&quot;^?&quot;program_uniform_matrix3x2dv&quot;^?&quot;program_uniform_matrix2x4dv&quot;^?&quot;program_uniform_matrix4x2dv&quot;^?&quot;program_uniform_matrix3x4dv&quot;^?&quot;program_uniform_matrix4x3dv&quot;^?&quot;uniform1d&quot;^?&quot;uniform2d&quot;^?&quot;uniform3d&quot;^?&quot;uniform4d&quot;^?&quot;uniform1dv&quot;^?&quot;uniform2dv&quot;^?&quot;uniform3dv&quot;^?&quot;uniform4dv&quot;^?&quot;uniform_matrix2dv&quot;^?&quot;uniform_matrix3dv&quot;^?&quot;uniform_matrix4dv&quot;^?&quot;uniform_matrix2x3dv&quot;^?&quot;uniform_matrix3x2dv&quot;^?&quot;uniform_matrix2x4dv&quot;^?&quot;uniform_matrix4x2dv&quot;^?&quot;uniform_matrix3x4dv&quot;^?&quot;uniform_matrix4x3dv&quot;^?&quot;get_uniformdv&quot;^?&quot;vertex_attribl1d&quot;^?&quot;vertex_attribl2d&quot;^?&quot;vertex_attribl3d&quot;^?&quot;vertex_attribl4d&quot;^?&quot;vertex_attribl1dv&quot;^?&quot;vertex_attribl2dv&quot;^?&quot;vertex_attribl3dv&quot;^?&quot;vertex_attribl4dv&quot;^?&quot;vertex_attrib_lpointer&quot;^?&quot;get_vertex_attrib_ldv&quot;^?&quot;get_subroutine_uniform_location&quot;^?&quot;get_subroutine_index&quot;^?&quot;get_active_subroutine_uniformiv&quot;^?&quot;get_active_subroutine_uniform_name&quot;^?&quot;get_active_subroutine_name&quot;^?&quot;uniform_subroutinesuiv&quot;^?&quot;get_uniform_subroutineuiv&quot;^?&quot;get_program_stageiv&quot;^?&quot;get_internal_formativ&quot;^?&quot;tex_storage1D&quot;^?&quot;tex_storage2D&quot;^?&quot;tex_storage3D&quot;^?&quot;label_object_with_responsible_process_APPLE&quot;^?&quot;texture_barrier_NV&quot;^?}'/>
<field declared_type64='CGLPrivateObj' name='priv' type64='^{_CGLPrivateObject=}'/>
<field declared_type64='void*' name='stak' type64='^v'/>
</struct>
<struct name='GLIFunctionDispatch' type64='{__GLIFunctionDispatchRec=&quot;accum&quot;^?&quot;alpha_func&quot;^?&quot;are_textures_resident&quot;^?&quot;array_element&quot;^?&quot;begin&quot;^?&quot;bind_texture&quot;^?&quot;bitmap&quot;^?&quot;blend_func&quot;^?&quot;call_list&quot;^?&quot;call_lists&quot;^?&quot;clear&quot;^?&quot;clear_accum&quot;^?&quot;clear_color&quot;^?&quot;clear_depth&quot;^?&quot;clear_index&quot;^?&quot;clear_stencil&quot;^?&quot;clip_plane&quot;^?&quot;color3b&quot;^?&quot;color3bv&quot;^?&quot;color3d&quot;^?&quot;color3dv&quot;^?&quot;color3f&quot;^?&quot;color3fv&quot;^?&quot;color3i&quot;^?&quot;color3iv&quot;^?&quot;color3s&quot;^?&quot;color3sv&quot;^?&quot;color3ub&quot;^?&quot;color3ubv&quot;^?&quot;color3ui&quot;^?&quot;color3uiv&quot;^?&quot;color3us&quot;^?&quot;color3usv&quot;^?&quot;color4b&quot;^?&quot;color4bv&quot;^?&quot;color4d&quot;^?&quot;color4dv&quot;^?&quot;color4f&quot;^?&quot;color4fv&quot;^?&quot;color4i&quot;^?&quot;color4iv&quot;^?&quot;color4s&quot;^?&quot;color4sv&quot;^?&quot;color4ub&quot;^?&quot;color4ubv&quot;^?&quot;color4ui&quot;^?&quot;color4uiv&quot;^?&quot;color4us&quot;^?&quot;color4usv&quot;^?&quot;color_mask&quot;^?&quot;color_material&quot;^?&quot;color_pointer&quot;^?&quot;copy_pixels&quot;^?&quot;copy_tex_image1D&quot;^?&quot;copy_tex_image2D&quot;^?&quot;copy_tex_sub_image1D&quot;^?&quot;copy_tex_sub_image2D&quot;^?&quot;cull_face&quot;^?&quot;delete_lists&quot;^?&quot;delete_textures&quot;^?&quot;depth_func&quot;^?&quot;depth_mask&quot;^?&quot;depth_range&quot;^?&quot;disable&quot;^?&quot;disable_client_state&quot;^?&quot;draw_arrays&quot;^?&quot;draw_buffer&quot;^?&quot;draw_elements&quot;^?&quot;draw_pixels&quot;^?&quot;edge_flag&quot;^?&quot;edge_flag_pointer&quot;^?&quot;edge_flagv&quot;^?&quot;enable&quot;^?&quot;enable_client_state&quot;^?&quot;end&quot;^?&quot;end_list&quot;^?&quot;eval_coord1d&quot;^?&quot;eval_coord1dv&quot;^?&quot;eval_coord1f&quot;^?&quot;eval_coord1fv&quot;^?&quot;eval_coord2d&quot;^?&quot;eval_coord2dv&quot;^?&quot;eval_coord2f&quot;^?&quot;eval_coord2fv&quot;^?&quot;eval_mesh1&quot;^?&quot;eval_mesh2&quot;^?&quot;eval_point1&quot;^?&quot;eval_point2&quot;^?&quot;feedback_buffer&quot;^?&quot;finish&quot;^?&quot;flush&quot;^?&quot;fogf&quot;^?&quot;fogfv&quot;^?&quot;fogi&quot;^?&quot;fogiv&quot;^?&quot;front_face&quot;^?&quot;frustum&quot;^?&quot;gen_lists&quot;^?&quot;gen_textures&quot;^?&quot;get_booleanv&quot;^?&quot;get_clip_plane&quot;^?&quot;get_doublev&quot;^?&quot;get_error&quot;^?&quot;get_floatv&quot;^?&quot;get_integerv&quot;^?&quot;get_lightfv&quot;^?&quot;get_lightiv&quot;^?&quot;get_mapdv&quot;^?&quot;get_mapfv&quot;^?&quot;get_mapiv&quot;^?&quot;get_materialfv&quot;^?&quot;get_materialiv&quot;^?&quot;get_pixel_mapfv&quot;^?&quot;get_pixel_mapuiv&quot;^?&quot;get_pixel_mapusv&quot;^?&quot;get_pointerv&quot;^?&quot;get_polygon_stipple&quot;^?&quot;get_string&quot;^?&quot;get_tex_envfv&quot;^?&quot;get_tex_enviv&quot;^?&quot;get_tex_gendv&quot;^?&quot;get_tex_genfv&quot;^?&quot;get_tex_geniv&quot;^?&quot;get_tex_image&quot;^?&quot;get_tex_level_parameterfv&quot;^?&quot;get_tex_level_parameteriv&quot;^?&quot;get_tex_parameterfv&quot;^?&quot;get_tex_parameteriv&quot;^?&quot;hint&quot;^?&quot;index_mask&quot;^?&quot;index_pointer&quot;^?&quot;indexd&quot;^?&quot;indexdv&quot;^?&quot;indexf&quot;^?&quot;indexfv&quot;^?&quot;indexi&quot;^?&quot;indexiv&quot;^?&quot;indexs&quot;^?&quot;indexsv&quot;^?&quot;indexub&quot;^?&quot;indexubv&quot;^?&quot;init_names&quot;^?&quot;interleaved_arrays&quot;^?&quot;is_enabled&quot;^?&quot;is_list&quot;^?&quot;is_texture&quot;^?&quot;light_modelf&quot;^?&quot;light_modelfv&quot;^?&quot;light_modeli&quot;^?&quot;light_modeliv&quot;^?&quot;lightf&quot;^?&quot;lightfv&quot;^?&quot;lighti&quot;^?&quot;lightiv&quot;^?&quot;line_stipple&quot;^?&quot;line_width&quot;^?&quot;list_base&quot;^?&quot;load_identity&quot;^?&quot;load_matrixd&quot;^?&quot;load_matrixf&quot;^?&quot;load_name&quot;^?&quot;logic_op&quot;^?&quot;map1d&quot;^?&quot;map1f&quot;^?&quot;map2d&quot;^?&quot;map2f&quot;^?&quot;map_grid1d&quot;^?&quot;map_grid1f&quot;^?&quot;map_grid2d&quot;^?&quot;map_grid2f&quot;^?&quot;materialf&quot;^?&quot;materialfv&quot;^?&quot;materiali&quot;^?&quot;materialiv&quot;^?&quot;matrix_mode&quot;^?&quot;mult_matrixd&quot;^?&quot;mult_matrixf&quot;^?&quot;new_list&quot;^?&quot;normal3b&quot;^?&quot;normal3bv&quot;^?&quot;normal3d&quot;^?&quot;normal3dv&quot;^?&quot;normal3f&quot;^?&quot;normal3fv&quot;^?&quot;normal3i&quot;^?&quot;normal3iv&quot;^?&quot;normal3s&quot;^?&quot;normal3sv&quot;^?&quot;normal_pointer&quot;^?&quot;ortho&quot;^?&quot;pass_through&quot;^?&quot;pixel_mapfv&quot;^?&quot;pixel_mapuiv&quot;^?&quot;pixel_mapusv&quot;^?&quot;pixel_storef&quot;^?&quot;pixel_storei&quot;^?&quot;pixel_transferf&quot;^?&quot;pixel_transferi&quot;^?&quot;pixel_zoom&quot;^?&quot;point_size&quot;^?&quot;polygon_mode&quot;^?&quot;polygon_offset&quot;^?&quot;polygon_stipple&quot;^?&quot;pop_attrib&quot;^?&quot;pop_client_attrib&quot;^?&quot;pop_matrix&quot;^?&quot;pop_name&quot;^?&quot;prioritize_textures&quot;^?&quot;push_attrib&quot;^?&quot;push_client_attrib&quot;^?&quot;push_matrix&quot;^?&quot;push_name&quot;^?&quot;raster_pos2d&quot;^?&quot;raster_pos2dv&quot;^?&quot;raster_pos2f&quot;^?&quot;raster_pos2fv&quot;^?&quot;raster_pos2i&quot;^?&quot;raster_pos2iv&quot;^?&quot;raster_pos2s&quot;^?&quot;raster_pos2sv&quot;^?&quot;raster_pos3d&quot;^?&quot;raster_pos3dv&quot;^?&quot;raster_pos3f&quot;^?&quot;raster_pos3fv&quot;^?&quot;raster_pos3i&quot;^?&quot;raster_pos3iv&quot;^?&quot;raster_pos3s&quot;^?&quot;raster_pos3sv&quot;^?&quot;raster_pos4d&quot;^?&quot;raster_pos4dv&quot;^?&quot;raster_pos4f&quot;^?&quot;raster_pos4fv&quot;^?&quot;raster_pos4i&quot;^?&quot;raster_pos4iv&quot;^?&quot;raster_pos4s&quot;^?&quot;raster_pos4sv&quot;^?&quot;read_buffer&quot;^?&quot;read_pixels&quot;^?&quot;rectd&quot;^?&quot;rectdv&quot;^?&quot;rectf&quot;^?&quot;rectfv&quot;^?&quot;recti&quot;^?&quot;rectiv&quot;^?&quot;rects&quot;^?&quot;rectsv&quot;^?&quot;render_mode&quot;^?&quot;rotated&quot;^?&quot;rotatef&quot;^?&quot;scaled&quot;^?&quot;scalef&quot;^?&quot;scissor&quot;^?&quot;select_buffer&quot;^?&quot;shade_model&quot;^?&quot;stencil_func&quot;^?&quot;stencil_mask&quot;^?&quot;stencil_op&quot;^?&quot;tex_coord1d&quot;^?&quot;tex_coord1dv&quot;^?&quot;tex_coord1f&quot;^?&quot;tex_coord1fv&quot;^?&quot;tex_coord1i&quot;^?&quot;tex_coord1iv&quot;^?&quot;tex_coord1s&quot;^?&quot;tex_coord1sv&quot;^?&quot;tex_coord2d&quot;^?&quot;tex_coord2dv&quot;^?&quot;tex_coord2f&quot;^?&quot;tex_coord2fv&quot;^?&quot;tex_coord2i&quot;^?&quot;tex_coord2iv&quot;^?&quot;tex_coord2s&quot;^?&quot;tex_coord2sv&quot;^?&quot;tex_coord3d&quot;^?&quot;tex_coord3dv&quot;^?&quot;tex_coord3f&quot;^?&quot;tex_coord3fv&quot;^?&quot;tex_coord3i&quot;^?&quot;tex_coord3iv&quot;^?&quot;tex_coord3s&quot;^?&quot;tex_coord3sv&quot;^?&quot;tex_coord4d&quot;^?&quot;tex_coord4dv&quot;^?&quot;tex_coord4f&quot;^?&quot;tex_coord4fv&quot;^?&quot;tex_coord4i&quot;^?&quot;tex_coord4iv&quot;^?&quot;tex_coord4s&quot;^?&quot;tex_coord4sv&quot;^?&quot;tex_coord_pointer&quot;^?&quot;tex_envf&quot;^?&quot;tex_envfv&quot;^?&quot;tex_envi&quot;^?&quot;tex_enviv&quot;^?&quot;tex_gend&quot;^?&quot;tex_gendv&quot;^?&quot;tex_genf&quot;^?&quot;tex_genfv&quot;^?&quot;tex_geni&quot;^?&quot;tex_geniv&quot;^?&quot;tex_image1D&quot;^?&quot;tex_image2D&quot;^?&quot;tex_parameterf&quot;^?&quot;tex_parameterfv&quot;^?&quot;tex_parameteri&quot;^?&quot;tex_parameteriv&quot;^?&quot;tex_sub_image1D&quot;^?&quot;tex_sub_image2D&quot;^?&quot;translated&quot;^?&quot;translatef&quot;^?&quot;vertex2d&quot;^?&quot;vertex2dv&quot;^?&quot;vertex2f&quot;^?&quot;vertex2fv&quot;^?&quot;vertex2i&quot;^?&quot;vertex2iv&quot;^?&quot;vertex2s&quot;^?&quot;vertex2sv&quot;^?&quot;vertex3d&quot;^?&quot;vertex3dv&quot;^?&quot;vertex3f&quot;^?&quot;vertex3fv&quot;^?&quot;vertex3i&quot;^?&quot;vertex3iv&quot;^?&quot;vertex3s&quot;^?&quot;vertex3sv&quot;^?&quot;vertex4d&quot;^?&quot;vertex4dv&quot;^?&quot;vertex4f&quot;^?&quot;vertex4fv&quot;^?&quot;vertex4i&quot;^?&quot;vertex4iv&quot;^?&quot;vertex4s&quot;^?&quot;vertex4sv&quot;^?&quot;vertex_pointer&quot;^?&quot;viewport&quot;^?&quot;blend_func_separate&quot;^?&quot;blend_color&quot;^?&quot;blend_equation&quot;^?&quot;lock_arrays_EXT&quot;^?&quot;unlock_arrays_EXT&quot;^?&quot;client_active_texture&quot;^?&quot;active_texture&quot;^?&quot;multi_tex_coord1d&quot;^?&quot;multi_tex_coord1dv&quot;^?&quot;multi_tex_coord1f&quot;^?&quot;multi_tex_coord1fv&quot;^?&quot;multi_tex_coord1i&quot;^?&quot;multi_tex_coord1iv&quot;^?&quot;multi_tex_coord1s&quot;^?&quot;multi_tex_coord1sv&quot;^?&quot;multi_tex_coord2d&quot;^?&quot;multi_tex_coord2dv&quot;^?&quot;multi_tex_coord2f&quot;^?&quot;multi_tex_coord2fv&quot;^?&quot;multi_tex_coord2i&quot;^?&quot;multi_tex_coord2iv&quot;^?&quot;multi_tex_coord2s&quot;^?&quot;multi_tex_coord2sv&quot;^?&quot;multi_tex_coord3d&quot;^?&quot;multi_tex_coord3dv&quot;^?&quot;multi_tex_coord3f&quot;^?&quot;multi_tex_coord3fv&quot;^?&quot;multi_tex_coord3i&quot;^?&quot;multi_tex_coord3iv&quot;^?&quot;multi_tex_coord3s&quot;^?&quot;multi_tex_coord3sv&quot;^?&quot;multi_tex_coord4d&quot;^?&quot;multi_tex_coord4dv&quot;^?&quot;multi_tex_coord4f&quot;^?&quot;multi_tex_coord4fv&quot;^?&quot;multi_tex_coord4i&quot;^?&quot;multi_tex_coord4iv&quot;^?&quot;multi_tex_coord4s&quot;^?&quot;multi_tex_coord4sv&quot;^?&quot;load_transpose_matrixd&quot;^?&quot;load_transpose_matrixf&quot;^?&quot;mult_transpose_matrixd&quot;^?&quot;mult_transpose_matrixf&quot;^?&quot;compressed_tex_image3D&quot;^?&quot;compressed_tex_image2D&quot;^?&quot;compressed_tex_image1D&quot;^?&quot;compressed_tex_sub_image3D&quot;^?&quot;compressed_tex_sub_image2D&quot;^?&quot;compressed_tex_sub_image1D&quot;^?&quot;get_compressed_tex_image&quot;^?&quot;secondary_color3b&quot;^?&quot;secondary_color3bv&quot;^?&quot;secondary_color3d&quot;^?&quot;secondary_color3dv&quot;^?&quot;secondary_color3f&quot;^?&quot;secondary_color3fv&quot;^?&quot;secondary_color3i&quot;^?&quot;secondary_color3iv&quot;^?&quot;secondary_color3s&quot;^?&quot;secondary_color3sv&quot;^?&quot;secondary_color3ub&quot;^?&quot;secondary_color3ubv&quot;^?&quot;secondary_color3ui&quot;^?&quot;secondary_color3uiv&quot;^?&quot;secondary_color3us&quot;^?&quot;secondary_color3usv&quot;^?&quot;secondary_color_pointer&quot;^?&quot;vertex_array_range_EXT&quot;^?&quot;flush_vertex_array_range_EXT&quot;^?&quot;draw_range_elements&quot;^?&quot;color_table&quot;^?&quot;color_table_parameterfv&quot;^?&quot;color_table_parameteriv&quot;^?&quot;copy_color_table&quot;^?&quot;get_color_table&quot;^?&quot;get_color_table_parameterfv&quot;^?&quot;get_color_table_parameteriv&quot;^?&quot;color_sub_table&quot;^?&quot;copy_color_sub_table&quot;^?&quot;convolution_filter1D&quot;^?&quot;convolution_filter2D&quot;^?&quot;convolution_parameterf&quot;^?&quot;convolution_parameterfv&quot;^?&quot;convolution_parameteri&quot;^?&quot;convolution_parameteriv&quot;^?&quot;copy_convolution_filter1D&quot;^?&quot;copy_convolution_filter2D&quot;^?&quot;get_convolution_filter&quot;^?&quot;get_convolution_parameterfv&quot;^?&quot;get_convolution_parameteriv&quot;^?&quot;get_separable_filter&quot;^?&quot;separable_filter2D&quot;^?&quot;get_histogram&quot;^?&quot;get_histogram_parameterfv&quot;^?&quot;get_histogram_parameteriv&quot;^?&quot;get_minmax&quot;^?&quot;get_minmax_parameterfv&quot;^?&quot;get_minmax_parameteriv&quot;^?&quot;histogram&quot;^?&quot;minmax&quot;^?&quot;reset_histogram&quot;^?&quot;reset_minmax&quot;^?&quot;tex_image3D&quot;^?&quot;tex_sub_image3D&quot;^?&quot;copy_tex_sub_image3D&quot;^?&quot;get_uniform_indices&quot;^?&quot;get_active_uniformsiv&quot;^?&quot;get_active_uniform_name&quot;^?&quot;get_uniform_block_index&quot;^?&quot;get_active_uniform_blockiv&quot;^?&quot;get_active_uniform_block_name&quot;^?&quot;uniform_block_binding&quot;^?&quot;get_combiner_input_parameterfv_NV&quot;^?&quot;get_combiner_input_parameteriv_NV&quot;^?&quot;get_combiner_output_parameterfv_NV&quot;^?&quot;get_combiner_output_parameteriv_NV&quot;^?&quot;get_final_combiner_input_parameterfv_NV&quot;^?&quot;get_final_combiner_input_parameteriv_NV&quot;^?&quot;combiner_stage_parameterfv_NV&quot;^?&quot;get_combiner_stage_parameterfv_NV&quot;^?&quot;texture_range_APPLE&quot;^?&quot;get_tex_parameter_pointerv_APPLE&quot;^?&quot;blend_equation_separate_EXT&quot;^?&quot;sample_coverage&quot;^?&quot;sample_pass&quot;^?&quot;pn_trianglesi_ATI&quot;^?&quot;pn_trianglesf_ATI&quot;^?&quot;gen_fences_APPLE&quot;^?&quot;delete_fences_APPLE&quot;^?&quot;set_fence_APPLE&quot;^?&quot;is_fence_APPLE&quot;^?&quot;test_fence_APPLE&quot;^?&quot;finish_fence_APPLE&quot;^?&quot;test_object_APPLE&quot;^?&quot;finish_object_APPLE&quot;^?&quot;bind_program_ARB&quot;^?&quot;delete_programs_ARB&quot;^?&quot;gen_programs_ARB&quot;^?&quot;is_program_ARB&quot;^?&quot;vertex_attrib1s_ARB&quot;^?&quot;vertex_attrib1f_ARB&quot;^?&quot;vertex_attrib1d_ARB&quot;^?&quot;vertex_attrib2s_ARB&quot;^?&quot;vertex_attrib2f_ARB&quot;^?&quot;vertex_attrib2d_ARB&quot;^?&quot;vertex_attrib3s_ARB&quot;^?&quot;vertex_attrib3f_ARB&quot;^?&quot;vertex_attrib3d_ARB&quot;^?&quot;vertex_attrib4s_ARB&quot;^?&quot;vertex_attrib4f_ARB&quot;^?&quot;vertex_attrib4d_ARB&quot;^?&quot;vertex_attrib4Nub_ARB&quot;^?&quot;vertex_attrib1sv_ARB&quot;^?&quot;vertex_attrib1fv_ARB&quot;^?&quot;vertex_attrib1dv_ARB&quot;^?&quot;vertex_attrib2sv_ARB&quot;^?&quot;vertex_attrib2fv_ARB&quot;^?&quot;vertex_attrib2dv_ARB&quot;^?&quot;vertex_attrib3sv_ARB&quot;^?&quot;vertex_attrib3fv_ARB&quot;^?&quot;vertex_attrib3dv_ARB&quot;^?&quot;vertex_attrib4bv_ARB&quot;^?&quot;vertex_attrib4sv_ARB&quot;^?&quot;vertex_attrib4iv_ARB&quot;^?&quot;vertex_attrib4ubv_ARB&quot;^?&quot;vertex_attrib4usv_ARB&quot;^?&quot;vertex_attrib4uiv_ARB&quot;^?&quot;vertex_attrib4fv_ARB&quot;^?&quot;vertex_attrib4dv_ARB&quot;^?&quot;vertex_attrib4Nbv_ARB&quot;^?&quot;vertex_attrib4Nsv_ARB&quot;^?&quot;vertex_attrib4Niv_ARB&quot;^?&quot;vertex_attrib4Nubv_ARB&quot;^?&quot;vertex_attrib4Nusv_ARB&quot;^?&quot;vertex_attrib4Nuiv_ARB&quot;^?&quot;vertex_attrib_pointer_ARB&quot;^?&quot;enable_vertex_attrib_array_ARB&quot;^?&quot;disable_vertex_attrib_array_ARB&quot;^?&quot;get_vertex_attribdv_ARB&quot;^?&quot;get_vertex_attribfv_ARB&quot;^?&quot;get_vertex_attribiv_ARB&quot;^?&quot;get_vertex_attrib_pointerv_ARB&quot;^?&quot;program_env_parameter4d_ARB&quot;^?&quot;program_env_parameter4dv_ARB&quot;^?&quot;program_env_parameter4f_ARB&quot;^?&quot;program_env_parameter4fv_ARB&quot;^?&quot;program_local_parameter4d_ARB&quot;^?&quot;program_local_parameter4dv_ARB&quot;^?&quot;program_local_parameter4f_ARB&quot;^?&quot;program_local_parameter4fv_ARB&quot;^?&quot;get_program_env_parameterdv_ARB&quot;^?&quot;get_program_env_parameterfv_ARB&quot;^?&quot;get_program_local_parameterdv_ARB&quot;^?&quot;get_program_local_parameterfv_ARB&quot;^?&quot;program_string_ARB&quot;^?&quot;get_program_string_ARB&quot;^?&quot;get_programiv_ARB&quot;^?&quot;enable_vertex_attrib_ARB&quot;^?&quot;disable_vertex_attrib_ARB&quot;^?&quot;is_vertex_attrib_enabled_ARB&quot;^?&quot;map_vertex_attrib1d_ARB&quot;^?&quot;map_vertex_attrib1f_ARB&quot;^?&quot;map_vertex_attrib2d_ARB&quot;^?&quot;map_vertex_attrib2f_ARB&quot;^?&quot;point_parameterf&quot;^?&quot;point_parameterfv&quot;^?&quot;point_parameteri&quot;^?&quot;point_parameteriv&quot;^?&quot;fog_coordf&quot;^?&quot;fog_coordfv&quot;^?&quot;fog_coordd&quot;^?&quot;fog_coorddv&quot;^?&quot;fog_coord_pointer&quot;^?&quot;vertex_array_parameteri_EXT&quot;^?&quot;bind_vertex_array_EXT&quot;^?&quot;delete_vertex_arrays_EXT&quot;^?&quot;gen_vertex_arrays_EXT&quot;^?&quot;is_vertex_array_EXT&quot;^?&quot;element_pointer_APPLE&quot;^?&quot;draw_element_array_APPLE&quot;^?&quot;draw_range_element_array_APPLE&quot;^?&quot;weightbv_ARB&quot;^?&quot;weightsv_ARB&quot;^?&quot;weightiv_ARB&quot;^?&quot;weightfv_ARB&quot;^?&quot;weightdv_ARB&quot;^?&quot;weightubv_ARB&quot;^?&quot;weightusv_ARB&quot;^?&quot;weightuiv_ARB&quot;^?&quot;weight_pointer_ARB&quot;^?&quot;vertex_blend_ARB&quot;^?&quot;multi_draw_arrays&quot;^?&quot;multi_draw_elements&quot;^?&quot;window_pos2d&quot;^?&quot;window_pos2dv&quot;^?&quot;window_pos2f&quot;^?&quot;window_pos2fv&quot;^?&quot;window_pos2i&quot;^?&quot;window_pos2iv&quot;^?&quot;window_pos2s&quot;^?&quot;window_pos2sv&quot;^?&quot;window_pos3d&quot;^?&quot;window_pos3dv&quot;^?&quot;window_pos3f&quot;^?&quot;window_pos3fv&quot;^?&quot;window_pos3i&quot;^?&quot;window_pos3iv&quot;^?&quot;window_pos3s&quot;^?&quot;window_pos3sv&quot;^?&quot;active_stencil_face_EXT&quot;^?&quot;stencil_op_separate_ATI&quot;^?&quot;stencil_func_separate_ATI&quot;^?&quot;flush_render_APPLE&quot;^?&quot;finish_render_APPLE&quot;^?&quot;swap_APPLE&quot;^?&quot;delete_object_ARB&quot;^?&quot;get_handle_ARB&quot;^?&quot;detach_object_ARB&quot;^?&quot;create_shader_object_ARB&quot;^?&quot;shader_source_ARB&quot;^?&quot;compile_shader_ARB&quot;^?&quot;create_program_object_ARB&quot;^?&quot;attach_object_ARB&quot;^?&quot;link_program_ARB&quot;^?&quot;use_program_object_ARB&quot;^?&quot;validate_program_ARB&quot;^?&quot;uniform1f_ARB&quot;^?&quot;uniform2f_ARB&quot;^?&quot;uniform3f_ARB&quot;^?&quot;uniform4f_ARB&quot;^?&quot;uniform1i_ARB&quot;^?&quot;uniform2i_ARB&quot;^?&quot;uniform3i_ARB&quot;^?&quot;uniform4i_ARB&quot;^?&quot;uniform1fv_ARB&quot;^?&quot;uniform2fv_ARB&quot;^?&quot;uniform3fv_ARB&quot;^?&quot;uniform4fv_ARB&quot;^?&quot;uniform1iv_ARB&quot;^?&quot;uniform2iv_ARB&quot;^?&quot;uniform3iv_ARB&quot;^?&quot;uniform4iv_ARB&quot;^?&quot;uniform_matrix2fv_ARB&quot;^?&quot;uniform_matrix3fv_ARB&quot;^?&quot;uniform_matrix4fv_ARB&quot;^?&quot;get_object_parameterfv_ARB&quot;^?&quot;get_object_parameteriv_ARB&quot;^?&quot;get_info_log_ARB&quot;^?&quot;get_attached_objects_ARB&quot;^?&quot;get_uniform_location_ARB&quot;^?&quot;get_active_uniform_ARB&quot;^?&quot;get_uniformfv_ARB&quot;^?&quot;get_uniformiv_ARB&quot;^?&quot;get_shader_source_ARB&quot;^?&quot;bind_attrib_location_ARB&quot;^?&quot;get_active_attrib_ARB&quot;^?&quot;get_attrib_location_ARB&quot;^?&quot;clamp_color_ARB&quot;^?&quot;gen_queries&quot;^?&quot;delete_queries&quot;^?&quot;is_query&quot;^?&quot;begin_query&quot;^?&quot;end_query&quot;^?&quot;get_queryiv&quot;^?&quot;get_query_objectiv&quot;^?&quot;get_query_objectuiv&quot;^?&quot;bind_buffer&quot;^?&quot;delete_buffers&quot;^?&quot;gen_buffers&quot;^?&quot;is_buffer&quot;^?&quot;buffer_data&quot;^?&quot;buffer_sub_data&quot;^?&quot;get_buffer_sub_data&quot;^?&quot;map_buffer&quot;^?&quot;unmap_buffer&quot;^?&quot;get_buffer_parameteriv&quot;^?&quot;get_buffer_pointerv&quot;^?&quot;depth_bounds_EXT&quot;^?&quot;draw_buffers_ARB&quot;^?&quot;is_shader&quot;^?&quot;is_program&quot;^?&quot;get_shaderiv&quot;^?&quot;get_programiv&quot;^?&quot;get_shader_info_log&quot;^?&quot;get_program_info_log&quot;^?&quot;stencil_func_separate&quot;^?&quot;stencil_mask_separate&quot;^?&quot;multi_draw_element_array_APPLE&quot;^?&quot;multi_draw_range_element_array_APPLE&quot;^?&quot;is_renderbuffer_EXT&quot;^?&quot;bind_renderbuffer_EXT&quot;^?&quot;delete_renderbuffers_EXT&quot;^?&quot;gen_renderbuffers_EXT&quot;^?&quot;renderbuffer_storage_EXT&quot;^?&quot;get_renderbuffer_parameteriv_EXT&quot;^?&quot;is_framebuffer_EXT&quot;^?&quot;bind_framebuffer_EXT&quot;^?&quot;delete_framebuffers_EXT&quot;^?&quot;gen_framebuffers_EXT&quot;^?&quot;check_framebuffer_status_EXT&quot;^?&quot;framebuffer_texture1D_EXT&quot;^?&quot;framebuffer_texture2D_EXT&quot;^?&quot;framebuffer_texture3D_EXT&quot;^?&quot;framebuffer_renderbuffer_EXT&quot;^?&quot;get_framebuffer_attachment_parameteriv_EXT&quot;^?&quot;generate_mipmap_EXT&quot;^?&quot;buffer_parameteri_APPLE&quot;^?&quot;flush_mapped_buffer_range_APPLE&quot;^?&quot;program_env_parameters4fv_EXT&quot;^?&quot;program_local_parameters4fv_EXT&quot;^?&quot;object_purgeable_APPLE&quot;^?&quot;object_unpurgeable_APPLE&quot;^?&quot;get_object_parameteriv_APPLE&quot;^?&quot;program_parameteri_EXT&quot;^?&quot;framebuffer_texture_EXT&quot;^?&quot;framebuffer_texture_layer_EXT&quot;^?&quot;framebuffer_texture_face_EXT&quot;^?&quot;bind_buffer_range_EXT&quot;^?&quot;bind_buffer_offset_EXT&quot;^?&quot;bind_buffer_base_EXT&quot;^?&quot;begin_transform_feedback_EXT&quot;^?&quot;end_transform_feedback_EXT&quot;^?&quot;transform_feedback_varyings_EXT&quot;^?&quot;get_transform_feedback_varying_EXT&quot;^?&quot;get_integer_indexedv_EXT&quot;^?&quot;get_boolean_indexedv_EXT&quot;^?&quot;uniform_buffer_EXT&quot;^?&quot;get_uniform_buffer_size_EXT&quot;^?&quot;get_uniform_buffer_offset_EXT&quot;^?&quot;clear_colorIi_EXT&quot;^?&quot;clear_colorIui_EXT&quot;^?&quot;tex_parameterIiv_EXT&quot;^?&quot;tex_parameterIuiv_EXT&quot;^?&quot;get_tex_parameterIiv_EXT&quot;^?&quot;get_tex_parameterIuiv_EXT&quot;^?&quot;vertex_attribI1i_EXT&quot;^?&quot;vertex_attribI2i_EXT&quot;^?&quot;vertex_attribI3i_EXT&quot;^?&quot;vertex_attribI4i_EXT&quot;^?&quot;vertex_attribI1ui_EXT&quot;^?&quot;vertex_attribI2ui_EXT&quot;^?&quot;vertex_attribI3ui_EXT&quot;^?&quot;vertex_attribI4ui_EXT&quot;^?&quot;vertex_attribI1iv_EXT&quot;^?&quot;vertex_attribI2iv_EXT&quot;^?&quot;vertex_attribI3iv_EXT&quot;^?&quot;vertex_attribI4iv_EXT&quot;^?&quot;vertex_attribI1uiv_EXT&quot;^?&quot;vertex_attribI2uiv_EXT&quot;^?&quot;vertex_attribI3uiv_EXT&quot;^?&quot;vertex_attribI4uiv_EXT&quot;^?&quot;vertex_attribI4bv_EXT&quot;^?&quot;vertex_attribI4sv_EXT&quot;^?&quot;vertex_attribI4ubv_EXT&quot;^?&quot;vertex_attribI4usv_EXT&quot;^?&quot;vertex_attribI_pointer_EXT&quot;^?&quot;get_vertex_attribIiv_EXT&quot;^?&quot;get_vertex_attribIuiv_EXT&quot;^?&quot;uniform1ui_EXT&quot;^?&quot;uniform2ui_EXT&quot;^?&quot;uniform3ui_EXT&quot;^?&quot;uniform4ui_EXT&quot;^?&quot;uniform1uiv_EXT&quot;^?&quot;uniform2uiv_EXT&quot;^?&quot;uniform3uiv_EXT&quot;^?&quot;uniform4uiv_EXT&quot;^?&quot;get_uniformuiv_EXT&quot;^?&quot;bind_frag_data_location_EXT&quot;^?&quot;get_frag_data_location_EXT&quot;^?&quot;color_mask_indexed_EXT&quot;^?&quot;enable_indexed_EXT&quot;^?&quot;disable_indexed_EXT&quot;^?&quot;is_enabled_indexed_EXT&quot;^?&quot;uniform_matrix2x3fv&quot;^?&quot;uniform_matrix3x2fv&quot;^?&quot;uniform_matrix2x4fv&quot;^?&quot;uniform_matrix4x2fv&quot;^?&quot;uniform_matrix3x4fv&quot;^?&quot;uniform_matrix4x3fv&quot;^?&quot;blit_framebuffer_EXT&quot;^?&quot;renderbuffer_storage_multisample_EXT&quot;^?&quot;begin_conditional_render_NV&quot;^?&quot;end_conditional_render_NV&quot;^?&quot;get_attached_shaders&quot;^?&quot;provoking_vertex_EXT&quot;^?&quot;vertex_attrib_divisor&quot;^?&quot;draw_arrays_instanced&quot;^?&quot;draw_elements_instanced&quot;^?&quot;draw_elements_base_vertex&quot;^?&quot;draw_range_elements_base_vertex&quot;^?&quot;draw_elements_instanced_base_vertex&quot;^?&quot;multi_draw_elements_base_vertex&quot;^?&quot;bind_vertex_array_ARB&quot;^?&quot;delete_vertex_arrays_ARB&quot;^?&quot;gen_vertex_arrays_ARB&quot;^?&quot;is_vertex_array_ARB&quot;^?&quot;point_size_pointer&quot;^?&quot;vertex_point_sizef_APPLE&quot;^?&quot;clear_bufferiv&quot;^?&quot;clear_bufferuiv&quot;^?&quot;clear_bufferfv&quot;^?&quot;clear_bufferfi&quot;^?&quot;get_stringi&quot;^?&quot;fence_sync&quot;^?&quot;is_sync&quot;^?&quot;delete_sync&quot;^?&quot;client_wait_sync&quot;^?&quot;wait_sync&quot;^?&quot;get_integer64v_sync&quot;^?&quot;get_synciv&quot;^?&quot;tex_image2D_multisample&quot;^?&quot;tex_image3D_multisample&quot;^?&quot;get_multisamplefv&quot;^?&quot;sample_maski&quot;^?&quot;tex_buffer&quot;^?&quot;copy_buffer_sub_data&quot;^?&quot;primitive_restart_index&quot;^?&quot;get_query_objecti64v&quot;^?&quot;get_query_objectui64v&quot;^?&quot;map_buffer_range&quot;^?&quot;flush_mapped_buffer_range&quot;^?&quot;query_counter&quot;^?&quot;get_integer64i_v&quot;^?&quot;get_buffer_parameteri64v&quot;^?&quot;gen_samplers&quot;^?&quot;delete_samplers&quot;^?&quot;is_sampler&quot;^?&quot;bind_sampler&quot;^?&quot;sampler_parameteri&quot;^?&quot;sampler_parameteriv&quot;^?&quot;sampler_parameterf&quot;^?&quot;sampler_parameterfv&quot;^?&quot;sampler_parameterIiv&quot;^?&quot;sampler_parameterIuiv&quot;^?&quot;get_sampler_parameteriv&quot;^?&quot;get_sampler_parameterfv&quot;^?&quot;get_sampler_parameterIiv&quot;^?&quot;get_sampler_parameterIuiv&quot;^?&quot;label_object_EXT&quot;^?&quot;get_object_label_EXT&quot;^?&quot;insert_event_marker_EXT&quot;^?&quot;push_group_marker_EXT&quot;^?&quot;pop_group_marker_EXT&quot;^?&quot;use_program_stages&quot;^?&quot;active_shader_program&quot;^?&quot;create_shader_programv&quot;^?&quot;bind_program_pipeline&quot;^?&quot;delete_program_pipelines&quot;^?&quot;gen_program_pipelines&quot;^?&quot;is_program_pipeline&quot;^?&quot;get_program_pipelineiv&quot;^?&quot;validate_program_pipeline&quot;^?&quot;get_program_pipeline_info_log&quot;^?&quot;program_uniform1i&quot;^?&quot;program_uniform2i&quot;^?&quot;program_uniform3i&quot;^?&quot;program_uniform4i&quot;^?&quot;program_uniform1f&quot;^?&quot;program_uniform2f&quot;^?&quot;program_uniform3f&quot;^?&quot;program_uniform4f&quot;^?&quot;program_uniform1iv&quot;^?&quot;program_uniform2iv&quot;^?&quot;program_uniform3iv&quot;^?&quot;program_uniform4iv&quot;^?&quot;program_uniform1fv&quot;^?&quot;program_uniform2fv&quot;^?&quot;program_uniform3fv&quot;^?&quot;program_uniform4fv&quot;^?&quot;program_uniform_matrix2fv&quot;^?&quot;program_uniform_matrix3fv&quot;^?&quot;program_uniform_matrix4fv&quot;^?&quot;program_uniform1ui&quot;^?&quot;program_uniform2ui&quot;^?&quot;program_uniform3ui&quot;^?&quot;program_uniform4ui&quot;^?&quot;program_uniform1uiv&quot;^?&quot;program_uniform2uiv&quot;^?&quot;program_uniform3uiv&quot;^?&quot;program_uniform4uiv&quot;^?&quot;program_uniform_matrix2x3fv&quot;^?&quot;program_uniform_matrix3x2fv&quot;^?&quot;program_uniform_matrix2x4fv&quot;^?&quot;program_uniform_matrix4x2fv&quot;^?&quot;program_uniform_matrix3x4fv&quot;^?&quot;program_uniform_matrix4x3fv&quot;^?&quot;bind_frag_data_location_indexed&quot;^?&quot;get_frag_data_index&quot;^?&quot;blend_func_i&quot;^?&quot;blend_func_separate_i&quot;^?&quot;blend_equation_i&quot;^?&quot;blend_equation_separate_i&quot;^?&quot;named_string_ARB&quot;^?&quot;delete_named_string_ARB&quot;^?&quot;compile_shader_include_ARB&quot;^?&quot;is_named_string_ARB&quot;^?&quot;get_named_string_ARB&quot;^?&quot;get_named_string_iv_ARB&quot;^?&quot;release_shader_compiler&quot;^?&quot;shader_binary&quot;^?&quot;get_shader_precision_format&quot;^?&quot;depth_rangef&quot;^?&quot;clear_depthf&quot;^?&quot;vertex_attribP1ui&quot;^?&quot;vertex_attribP2ui&quot;^?&quot;vertex_attribP3ui&quot;^?&quot;vertex_attribP4ui&quot;^?&quot;vertex_attribP1uiv&quot;^?&quot;vertex_attribP2uiv&quot;^?&quot;vertex_attribP3uiv&quot;^?&quot;vertex_attribP4uiv&quot;^?&quot;get_program_binary&quot;^?&quot;program_binary&quot;^?&quot;min_sample_shading&quot;^?&quot;viewport_arrayv&quot;^?&quot;viewport_indexedf&quot;^?&quot;viewport_indexedfv&quot;^?&quot;scissor_arrayv&quot;^?&quot;scissor_indexed&quot;^?&quot;scissor_indexedv&quot;^?&quot;depth_range_arrayv&quot;^?&quot;depth_range_indexed&quot;^?&quot;get_floati_v&quot;^?&quot;get_doublei_v&quot;^?&quot;draw_arrays_indirect&quot;^?&quot;draw_elements_indirect&quot;^?&quot;patch_parameteri&quot;^?&quot;patch_parameterfv&quot;^?&quot;bind_transform_feedback&quot;^?&quot;gen_transform_feedbacks&quot;^?&quot;delete_transform_feedbacks&quot;^?&quot;pause_transform_feedback&quot;^?&quot;resume_transform_feedback&quot;^?&quot;is_transform_feedback&quot;^?&quot;draw_transform_feedback&quot;^?&quot;begin_query_indexed&quot;^?&quot;end_query_indexed&quot;^?&quot;get_query_indexediv&quot;^?&quot;draw_transform_feedback_stream&quot;^?&quot;program_uniform1d&quot;^?&quot;program_uniform2d&quot;^?&quot;program_uniform3d&quot;^?&quot;program_uniform4d&quot;^?&quot;program_uniform1dv&quot;^?&quot;program_uniform2dv&quot;^?&quot;program_uniform3dv&quot;^?&quot;program_uniform4dv&quot;^?&quot;program_uniform_matrix2dv&quot;^?&quot;program_uniform_matrix3dv&quot;^?&quot;program_uniform_matrix4dv&quot;^?&quot;program_uniform_matrix2x3dv&quot;^?&quot;program_uniform_matrix3x2dv&quot;^?&quot;program_uniform_matrix2x4dv&quot;^?&quot;program_uniform_matrix4x2dv&quot;^?&quot;program_uniform_matrix3x4dv&quot;^?&quot;program_uniform_matrix4x3dv&quot;^?&quot;uniform1d&quot;^?&quot;uniform2d&quot;^?&quot;uniform3d&quot;^?&quot;uniform4d&quot;^?&quot;uniform1dv&quot;^?&quot;uniform2dv&quot;^?&quot;uniform3dv&quot;^?&quot;uniform4dv&quot;^?&quot;uniform_matrix2dv&quot;^?&quot;uniform_matrix3dv&quot;^?&quot;uniform_matrix4dv&quot;^?&quot;uniform_matrix2x3dv&quot;^?&quot;uniform_matrix3x2dv&quot;^?&quot;uniform_matrix2x4dv&quot;^?&quot;uniform_matrix4x2dv&quot;^?&quot;uniform_matrix3x4dv&quot;^?&quot;uniform_matrix4x3dv&quot;^?&quot;get_uniformdv&quot;^?&quot;vertex_attribl1d&quot;^?&quot;vertex_attribl2d&quot;^?&quot;vertex_attribl3d&quot;^?&quot;vertex_attribl4d&quot;^?&quot;vertex_attribl1dv&quot;^?&quot;vertex_attribl2dv&quot;^?&quot;vertex_attribl3dv&quot;^?&quot;vertex_attribl4dv&quot;^?&quot;vertex_attrib_lpointer&quot;^?&quot;get_vertex_attrib_ldv&quot;^?&quot;get_subroutine_uniform_location&quot;^?&quot;get_subroutine_index&quot;^?&quot;get_active_subroutine_uniformiv&quot;^?&quot;get_active_subroutine_uniform_name&quot;^?&quot;get_active_subroutine_name&quot;^?&quot;uniform_subroutinesuiv&quot;^?&quot;get_uniform_subroutineuiv&quot;^?&quot;get_program_stageiv&quot;^?&quot;get_internal_formativ&quot;^?&quot;tex_storage1D&quot;^?&quot;tex_storage2D&quot;^?&quot;tex_storage3D&quot;^?&quot;label_object_with_responsible_process_APPLE&quot;^?&quot;texture_barrier_NV&quot;^?}'>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat)' function_pointer='true' name='accum' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLclampf)' function_pointer='true' name='alpha_func' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLclampf' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLsizei, GLuint *, GLboolean *)' function_pointer='true' name='are_textures_resident' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<arg declared_type64='GLboolean*' type64='*'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint)' function_pointer='true' name='array_element' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='begin' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='bind_texture' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte *)' function_pointer='true' name='bitmap' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum)' function_pointer='true' name='blend_func' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='call_list' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLenum, GLvoid *)' function_pointer='true' name='call_lists' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbitfield)' function_pointer='true' name='clear' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLbitfield' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='clear_accum' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampf, GLclampf, GLclampf, GLclampf)' function_pointer='true' name='clear_color' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampf' type64='f'/>
<arg declared_type64='GLclampf' type64='f'/>
<arg declared_type64='GLclampf' type64='f'/>
<arg declared_type64='GLclampf' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampd)' function_pointer='true' name='clear_depth' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampd' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='clear_index' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint)' function_pointer='true' name='clear_stencil' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble *)' function_pointer='true' name='clip_plane' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbyte, GLbyte, GLbyte)' function_pointer='true' name='color3b' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbyte *)' function_pointer='true' name='color3bv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLbyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='color3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='color3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='color3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='color3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint)' function_pointer='true' name='color3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='color3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort)' function_pointer='true' name='color3s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='color3sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte, GLubyte, GLubyte)' function_pointer='true' name='color3ub' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte *)' function_pointer='true' name='color3ubv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint)' function_pointer='true' name='color3ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint *)' function_pointer='true' name='color3uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLushort, GLushort, GLushort)' function_pointer='true' name='color3us' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLushort' type64='S'/>
<arg declared_type64='GLushort' type64='S'/>
<arg declared_type64='GLushort' type64='S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLushort *)' function_pointer='true' name='color3usv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbyte, GLbyte, GLbyte, GLbyte)' function_pointer='true' name='color4b' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbyte *)' function_pointer='true' name='color4bv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLbyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='color4d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='color4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='color4f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='color4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint)' function_pointer='true' name='color4i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='color4iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort, GLshort)' function_pointer='true' name='color4s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='color4sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte, GLubyte, GLubyte, GLubyte)' function_pointer='true' name='color4ub' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte *)' function_pointer='true' name='color4ubv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint, GLuint)' function_pointer='true' name='color4ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint *)' function_pointer='true' name='color4uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLushort, GLushort, GLushort, GLushort)' function_pointer='true' name='color4us' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLushort' type64='S'/>
<arg declared_type64='GLushort' type64='S'/>
<arg declared_type64='GLushort' type64='S'/>
<arg declared_type64='GLushort' type64='S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLushort *)' function_pointer='true' name='color4usv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLboolean, GLboolean, GLboolean, GLboolean)' function_pointer='true' name='color_mask' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum)' function_pointer='true' name='color_material' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='color_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLsizei, GLsizei, GLenum)' function_pointer='true' name='copy_pixels' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint)' function_pointer='true' name='copy_tex_image1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint)' function_pointer='true' name='copy_tex_image2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLint, GLsizei)' function_pointer='true' name='copy_tex_sub_image1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei)' function_pointer='true' name='copy_tex_sub_image2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='cull_face' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei)' function_pointer='true' name='delete_lists' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_textures' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='depth_func' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLboolean)' function_pointer='true' name='depth_mask' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampd, GLclampd)' function_pointer='true' name='depth_range' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampd' type64='d'/>
<arg declared_type64='GLclampd' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='disable' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='disable_client_state' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLsizei)' function_pointer='true' name='draw_arrays' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='draw_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLvoid *)' function_pointer='true' name='draw_elements' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='draw_pixels' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLboolean)' function_pointer='true' name='edge_flag' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLvoid *)' function_pointer='true' name='edge_flag_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLboolean *)' function_pointer='true' name='edge_flagv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLboolean*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='enable' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='enable_client_state' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='end' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='end_list' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble)' function_pointer='true' name='eval_coord1d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='eval_coord1dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='eval_coord1f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='eval_coord1fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble)' function_pointer='true' name='eval_coord2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='eval_coord2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat)' function_pointer='true' name='eval_coord2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='eval_coord2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint)' function_pointer='true' name='eval_mesh1' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLint)' function_pointer='true' name='eval_mesh2' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint)' function_pointer='true' name='eval_point1' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint)' function_pointer='true' name='eval_point2' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLenum, GLfloat *)' function_pointer='true' name='feedback_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='finish' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='flush' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat)' function_pointer='true' name='fogf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='fogfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='fogi' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *)' function_pointer='true' name='fogiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='front_face' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='frustum' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLuint (*)(GLIContext, GLsizei)' function_pointer='true' name='gen_lists' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='GLuint' type64='I'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_textures' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLboolean *)' function_pointer='true' name='get_booleanv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble *)' function_pointer='true' name='get_clip_plane' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble *)' function_pointer='true' name='get_doublev' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLenum (*)(GLIContext)' function_pointer='true' name='get_error' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='GLenum' type64='I'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='get_floatv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *)' function_pointer='true' name='get_integerv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_lightfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_lightiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLdouble *)' function_pointer='true' name='get_mapdv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_mapfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_mapiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_materialfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_materialiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='get_pixel_mapfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint *)' function_pointer='true' name='get_pixel_mapuiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLushort *)' function_pointer='true' name='get_pixel_mapusv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLvoid **)' function_pointer='true' name='get_pointerv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid**' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte *)' function_pointer='true' name='get_polygon_stipple' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field const='true' declared_type64='GLubyte *(*)(GLIContext, GLenum)' function_pointer='true' name='get_string' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval const='true' declared_type64='GLubyte*' type64='*'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_tex_envfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_tex_enviv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLdouble *)' function_pointer='true' name='get_tex_gendv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_tex_genfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_tex_geniv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLenum, GLvoid *)' function_pointer='true' name='get_tex_image' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLfloat *)' function_pointer='true' name='get_tex_level_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLint *)' function_pointer='true' name='get_tex_level_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_tex_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_tex_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum)' function_pointer='true' name='hint' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='index_mask' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='index_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble)' function_pointer='true' name='indexd' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='indexdv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='indexf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='indexfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint)' function_pointer='true' name='indexi' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='indexiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort)' function_pointer='true' name='indexs' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='indexsv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte)' function_pointer='true' name='indexub' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLubyte' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte *)' function_pointer='true' name='indexubv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='init_names' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='interleaved_arrays' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLenum)' function_pointer='true' name='is_enabled' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_list' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_texture' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat)' function_pointer='true' name='light_modelf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='light_modelfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='light_modeli' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *)' function_pointer='true' name='light_modeliv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat)' function_pointer='true' name='lightf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='lightfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint)' function_pointer='true' name='lighti' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='lightiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLushort)' function_pointer='true' name='line_stipple' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLushort' type64='S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='line_width' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='list_base' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='load_identity' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='load_matrixd' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='load_matrixf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='load_name' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='logic_op' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble *)' function_pointer='true' name='map1d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat *)' function_pointer='true' name='map1f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble *)' function_pointer='true' name='map2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat *)' function_pointer='true' name='map2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLdouble, GLdouble)' function_pointer='true' name='map_grid1d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLfloat, GLfloat)' function_pointer='true' name='map_grid1f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble)' function_pointer='true' name='map_grid2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat)' function_pointer='true' name='map_grid2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat)' function_pointer='true' name='materialf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='materialfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint)' function_pointer='true' name='materiali' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='materialiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='matrix_mode' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='mult_matrixd' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='mult_matrixf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum)' function_pointer='true' name='new_list' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbyte, GLbyte, GLbyte)' function_pointer='true' name='normal3b' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbyte *)' function_pointer='true' name='normal3bv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLbyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='normal3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='normal3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='normal3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='normal3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint)' function_pointer='true' name='normal3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='normal3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort)' function_pointer='true' name='normal3s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='normal3sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='normal_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='ortho' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='pass_through' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLfloat *)' function_pointer='true' name='pixel_mapfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLuint *)' function_pointer='true' name='pixel_mapuiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLushort *)' function_pointer='true' name='pixel_mapusv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat)' function_pointer='true' name='pixel_storef' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='pixel_storei' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat)' function_pointer='true' name='pixel_transferf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='pixel_transferi' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat)' function_pointer='true' name='pixel_zoom' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='point_size' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum)' function_pointer='true' name='polygon_mode' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat)' function_pointer='true' name='polygon_offset' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte *)' function_pointer='true' name='polygon_stipple' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='pop_attrib' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='pop_client_attrib' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='pop_matrix' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='pop_name' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *, GLclampf *)' function_pointer='true' name='prioritize_textures' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<arg const='true' declared_type64='GLclampf*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbitfield)' function_pointer='true' name='push_attrib' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLbitfield' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbitfield)' function_pointer='true' name='push_client_attrib' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLbitfield' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='push_matrix' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='push_name' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble)' function_pointer='true' name='raster_pos2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='raster_pos2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat)' function_pointer='true' name='raster_pos2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='raster_pos2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint)' function_pointer='true' name='raster_pos2i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='raster_pos2iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort)' function_pointer='true' name='raster_pos2s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='raster_pos2sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='raster_pos3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='raster_pos3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='raster_pos3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='raster_pos3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint)' function_pointer='true' name='raster_pos3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='raster_pos3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort)' function_pointer='true' name='raster_pos3s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='raster_pos3sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='raster_pos4d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='raster_pos4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='raster_pos4f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='raster_pos4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint)' function_pointer='true' name='raster_pos4i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='raster_pos4iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort, GLshort)' function_pointer='true' name='raster_pos4s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='raster_pos4sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='read_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='read_pixels' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='rectd' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *, GLdouble *)' function_pointer='true' name='rectdv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='rectf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *, GLfloat *)' function_pointer='true' name='rectfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint)' function_pointer='true' name='recti' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *, GLint *)' function_pointer='true' name='rectiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort, GLshort)' function_pointer='true' name='rects' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *, GLshort *)' function_pointer='true' name='rectsv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLint (*)(GLIContext, GLenum)' function_pointer='true' name='render_mode' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLint' type64='i'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='rotated' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='rotatef' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='scaled' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='scalef' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLsizei, GLsizei)' function_pointer='true' name='scissor' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='select_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='shade_model' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLuint)' function_pointer='true' name='stencil_func' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='stencil_mask' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum)' function_pointer='true' name='stencil_op' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble)' function_pointer='true' name='tex_coord1d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='tex_coord1dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='tex_coord1f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='tex_coord1fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint)' function_pointer='true' name='tex_coord1i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='tex_coord1iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort)' function_pointer='true' name='tex_coord1s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='tex_coord1sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble)' function_pointer='true' name='tex_coord2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='tex_coord2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat)' function_pointer='true' name='tex_coord2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='tex_coord2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint)' function_pointer='true' name='tex_coord2i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='tex_coord2iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort)' function_pointer='true' name='tex_coord2s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='tex_coord2sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='tex_coord3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='tex_coord3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='tex_coord3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='tex_coord3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint)' function_pointer='true' name='tex_coord3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='tex_coord3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort)' function_pointer='true' name='tex_coord3s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='tex_coord3sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='tex_coord4d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='tex_coord4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='tex_coord4f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='tex_coord4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint)' function_pointer='true' name='tex_coord4i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='tex_coord4iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort, GLshort)' function_pointer='true' name='tex_coord4s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='tex_coord4sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='tex_coord_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat)' function_pointer='true' name='tex_envf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='tex_envfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint)' function_pointer='true' name='tex_envi' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='tex_enviv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLdouble)' function_pointer='true' name='tex_gend' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLdouble *)' function_pointer='true' name='tex_gendv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat)' function_pointer='true' name='tex_genf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='tex_genfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint)' function_pointer='true' name='tex_geni' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='tex_geniv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLsizei, GLint, GLenum, GLenum, GLvoid *)' function_pointer='true' name='tex_image1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid *)' function_pointer='true' name='tex_image2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat)' function_pointer='true' name='tex_parameterf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='tex_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint)' function_pointer='true' name='tex_parameteri' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='tex_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='tex_sub_image1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='tex_sub_image2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='translated' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='translatef' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble)' function_pointer='true' name='vertex2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='vertex2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat)' function_pointer='true' name='vertex2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='vertex2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint)' function_pointer='true' name='vertex2i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='vertex2iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort)' function_pointer='true' name='vertex2s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='vertex2sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='vertex3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='vertex3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='vertex3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='vertex3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint)' function_pointer='true' name='vertex3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='vertex3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort)' function_pointer='true' name='vertex3s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='vertex3sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='vertex4d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='vertex4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='vertex4f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='vertex4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint)' function_pointer='true' name='vertex4i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='vertex4iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort, GLshort)' function_pointer='true' name='vertex4s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='vertex4sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='vertex_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLsizei, GLsizei)' function_pointer='true' name='viewport' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLenum)' function_pointer='true' name='blend_func_separate' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampf, GLclampf, GLclampf, GLclampf)' function_pointer='true' name='blend_color' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampf' type64='f'/>
<arg declared_type64='GLclampf' type64='f'/>
<arg declared_type64='GLclampf' type64='f'/>
<arg declared_type64='GLclampf' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='blend_equation' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei)' function_pointer='true' name='lock_arrays_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='unlock_arrays_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='client_active_texture' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='active_texture' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble)' function_pointer='true' name='multi_tex_coord1d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble *)' function_pointer='true' name='multi_tex_coord1dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat)' function_pointer='true' name='multi_tex_coord1f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='multi_tex_coord1fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='multi_tex_coord1i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *)' function_pointer='true' name='multi_tex_coord1iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLshort)' function_pointer='true' name='multi_tex_coord1s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLshort *)' function_pointer='true' name='multi_tex_coord1sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble, GLdouble)' function_pointer='true' name='multi_tex_coord2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble *)' function_pointer='true' name='multi_tex_coord2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat, GLfloat)' function_pointer='true' name='multi_tex_coord2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='multi_tex_coord2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint)' function_pointer='true' name='multi_tex_coord2i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *)' function_pointer='true' name='multi_tex_coord2iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLshort, GLshort)' function_pointer='true' name='multi_tex_coord2s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLshort *)' function_pointer='true' name='multi_tex_coord2sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='multi_tex_coord3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble *)' function_pointer='true' name='multi_tex_coord3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='multi_tex_coord3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='multi_tex_coord3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint)' function_pointer='true' name='multi_tex_coord3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *)' function_pointer='true' name='multi_tex_coord3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLshort, GLshort, GLshort)' function_pointer='true' name='multi_tex_coord3s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLshort *)' function_pointer='true' name='multi_tex_coord3sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='multi_tex_coord4d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLdouble *)' function_pointer='true' name='multi_tex_coord4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='multi_tex_coord4f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='multi_tex_coord4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLint)' function_pointer='true' name='multi_tex_coord4i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *)' function_pointer='true' name='multi_tex_coord4iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLshort, GLshort, GLshort, GLshort)' function_pointer='true' name='multi_tex_coord4s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLshort *)' function_pointer='true' name='multi_tex_coord4sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='load_transpose_matrixd' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='load_transpose_matrixf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='mult_transpose_matrixd' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='mult_transpose_matrixf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid *)' function_pointer='true' name='compressed_tex_image3D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid *)' function_pointer='true' name='compressed_tex_image2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid *)' function_pointer='true' name='compressed_tex_image1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='compressed_tex_sub_image3D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='compressed_tex_sub_image2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='compressed_tex_sub_image1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLvoid *)' function_pointer='true' name='get_compressed_tex_image' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbyte, GLbyte, GLbyte)' function_pointer='true' name='secondary_color3b' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<arg declared_type64='GLbyte' type64='c'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLbyte *)' function_pointer='true' name='secondary_color3bv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLbyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='secondary_color3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='secondary_color3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='secondary_color3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='secondary_color3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint)' function_pointer='true' name='secondary_color3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='secondary_color3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort)' function_pointer='true' name='secondary_color3s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='secondary_color3sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte, GLubyte, GLubyte)' function_pointer='true' name='secondary_color3ub' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLubyte *)' function_pointer='true' name='secondary_color3ubv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint)' function_pointer='true' name='secondary_color3ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint *)' function_pointer='true' name='secondary_color3uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLushort, GLushort, GLushort)' function_pointer='true' name='secondary_color3us' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLushort' type64='S'/>
<arg declared_type64='GLushort' type64='S'/>
<arg declared_type64='GLushort' type64='S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLushort *)' function_pointer='true' name='secondary_color3usv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='secondary_color_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLvoid *)' function_pointer='true' name='vertex_array_range_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLvoid *)' function_pointer='true' name='flush_vertex_array_range_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid *)' function_pointer='true' name='draw_range_elements' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='color_table' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='color_table_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='color_table_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint, GLint, GLsizei)' function_pointer='true' name='copy_color_table' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLvoid *)' function_pointer='true' name='get_color_table' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_color_table_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_color_table_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='color_sub_table' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLint, GLint, GLsizei)' function_pointer='true' name='copy_color_sub_table' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='convolution_filter1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='convolution_filter2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat)' function_pointer='true' name='convolution_parameterf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='convolution_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint)' function_pointer='true' name='convolution_parameteri' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='convolution_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint, GLint, GLsizei)' function_pointer='true' name='copy_convolution_filter1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint, GLint, GLsizei, GLsizei)' function_pointer='true' name='copy_convolution_filter2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLvoid *)' function_pointer='true' name='get_convolution_filter' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_convolution_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_convolution_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLvoid *, GLvoid *, GLvoid *)' function_pointer='true' name='get_separable_filter' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid *, GLvoid *)' function_pointer='true' name='separable_filter2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLboolean, GLenum, GLenum, GLvoid *)' function_pointer='true' name='get_histogram' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_histogram_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_histogram_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLboolean, GLenum, GLenum, GLvoid *)' function_pointer='true' name='get_minmax' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_minmax_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_minmax_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLboolean)' function_pointer='true' name='histogram' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLboolean)' function_pointer='true' name='minmax' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='reset_histogram' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='reset_minmax' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid *)' function_pointer='true' name='tex_image3D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)' function_pointer='true' name='tex_sub_image3D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei)' function_pointer='true' name='copy_tex_sub_image3D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLchar * *, GLuint *)' function_pointer='true' name='get_uniform_indices' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLchar **' type64='^*'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLuint *, GLenum, GLint *)' function_pointer='true' name='get_active_uniformsiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLsizei, GLsizei *, GLchar *)' function_pointer='true' name='get_active_uniform_name' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLuint (*)(GLIContext, GLuint, GLchar *)' function_pointer='true' name='get_uniform_block_index' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='GLuint' type64='I'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLenum, GLint *)' function_pointer='true' name='get_active_uniform_blockiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLsizei, GLsizei *, GLchar *)' function_pointer='true' name='get_active_uniform_block_name' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint)' function_pointer='true' name='uniform_block_binding' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_combiner_input_parameterfv_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLenum, GLint *)' function_pointer='true' name='get_combiner_input_parameteriv_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_combiner_output_parameterfv_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLint *)' function_pointer='true' name='get_combiner_output_parameteriv_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_final_combiner_input_parameterfv_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_final_combiner_input_parameteriv_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='combiner_stage_parameterfv_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLfloat *)' function_pointer='true' name='get_combiner_stage_parameterfv_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='texture_range_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLvoid **)' function_pointer='true' name='get_tex_parameter_pointerv_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid**' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum)' function_pointer='true' name='blend_equation_separate_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampf, GLboolean)' function_pointer='true' name='sample_coverage' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampf' type64='f'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='sample_pass' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='pn_trianglesi_ATI' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat)' function_pointer='true' name='pn_trianglesf_ATI' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_fences_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_fences_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='set_fence_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_fence_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='test_fence_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='finish_fence_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='test_object_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='finish_object_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='bind_program_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_programs_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_programs_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_program_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort)' function_pointer='true' name='vertex_attrib1s_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat)' function_pointer='true' name='vertex_attrib1f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble)' function_pointer='true' name='vertex_attrib1d_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort, GLshort)' function_pointer='true' name='vertex_attrib2s_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat, GLfloat)' function_pointer='true' name='vertex_attrib2f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble, GLdouble)' function_pointer='true' name='vertex_attrib2d_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort, GLshort, GLshort)' function_pointer='true' name='vertex_attrib3s_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='vertex_attrib3f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='vertex_attrib3d_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort, GLshort, GLshort, GLshort)' function_pointer='true' name='vertex_attrib4s_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='vertex_attrib4f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='vertex_attrib4d_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLubyte, GLubyte, GLubyte, GLubyte)' function_pointer='true' name='vertex_attrib4Nub_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<arg declared_type64='GLubyte' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort *)' function_pointer='true' name='vertex_attrib1sv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat *)' function_pointer='true' name='vertex_attrib1fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble *)' function_pointer='true' name='vertex_attrib1dv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort *)' function_pointer='true' name='vertex_attrib2sv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat *)' function_pointer='true' name='vertex_attrib2fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble *)' function_pointer='true' name='vertex_attrib2dv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort *)' function_pointer='true' name='vertex_attrib3sv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat *)' function_pointer='true' name='vertex_attrib3fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble *)' function_pointer='true' name='vertex_attrib3dv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLbyte *)' function_pointer='true' name='vertex_attrib4bv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLbyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort *)' function_pointer='true' name='vertex_attrib4sv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint *)' function_pointer='true' name='vertex_attrib4iv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLubyte *)' function_pointer='true' name='vertex_attrib4ubv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLushort *)' function_pointer='true' name='vertex_attrib4usv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint *)' function_pointer='true' name='vertex_attrib4uiv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat *)' function_pointer='true' name='vertex_attrib4fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble *)' function_pointer='true' name='vertex_attrib4dv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLbyte *)' function_pointer='true' name='vertex_attrib4Nbv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLbyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort *)' function_pointer='true' name='vertex_attrib4Nsv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint *)' function_pointer='true' name='vertex_attrib4Niv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLubyte *)' function_pointer='true' name='vertex_attrib4Nubv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLushort *)' function_pointer='true' name='vertex_attrib4Nusv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint *)' function_pointer='true' name='vertex_attrib4Nuiv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid *)' function_pointer='true' name='vertex_attrib_pointer_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='enable_vertex_attrib_array_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='disable_vertex_attrib_array_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLdouble *)' function_pointer='true' name='get_vertex_attribdv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLfloat *)' function_pointer='true' name='get_vertex_attribfv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='get_vertex_attribiv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLvoid **)' function_pointer='true' name='get_vertex_attrib_pointerv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid**' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='program_env_parameter4d_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLdouble *)' function_pointer='true' name='program_env_parameter4dv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='program_env_parameter4f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLfloat *)' function_pointer='true' name='program_env_parameter4fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='program_local_parameter4d_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLdouble *)' function_pointer='true' name='program_local_parameter4dv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='program_local_parameter4f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLfloat *)' function_pointer='true' name='program_local_parameter4fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLdouble *)' function_pointer='true' name='get_program_env_parameterdv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLfloat *)' function_pointer='true' name='get_program_env_parameterfv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLdouble *)' function_pointer='true' name='get_program_local_parameterdv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLfloat *)' function_pointer='true' name='get_program_local_parameterfv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='program_string_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLvoid *)' function_pointer='true' name='get_program_string_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_programiv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum)' function_pointer='true' name='enable_vertex_attrib_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum)' function_pointer='true' name='disable_vertex_attrib_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint, GLenum)' function_pointer='true' name='is_vertex_attrib_enabled_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble *)' function_pointer='true' name='map_vertex_attrib1d_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat *)' function_pointer='true' name='map_vertex_attrib1f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble *)' function_pointer='true' name='map_vertex_attrib2d_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat *)' function_pointer='true' name='map_vertex_attrib2f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat)' function_pointer='true' name='point_parameterf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='point_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='point_parameteri' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *)' function_pointer='true' name='point_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='fog_coordf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='fog_coordfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble)' function_pointer='true' name='fog_coordd' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='fog_coorddv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='fog_coord_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='vertex_array_parameteri_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='bind_vertex_array_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_vertex_arrays_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_vertex_arrays_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_vertex_array_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLvoid *)' function_pointer='true' name='element_pointer_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLsizei)' function_pointer='true' name='draw_element_array_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint, GLint, GLsizei)' function_pointer='true' name='draw_range_element_array_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLbyte *)' function_pointer='true' name='weightbv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLbyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLshort *)' function_pointer='true' name='weightsv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint *)' function_pointer='true' name='weightiv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLfloat *)' function_pointer='true' name='weightfv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLdouble *)' function_pointer='true' name='weightdv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLubyte *)' function_pointer='true' name='weightubv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLushort *)' function_pointer='true' name='weightusv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLuint *)' function_pointer='true' name='weightuiv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='weight_pointer_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint)' function_pointer='true' name='vertex_blend_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *, GLsizei *, GLsizei)' function_pointer='true' name='multi_draw_arrays' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<arg const='true' declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei *, GLenum, GLvoid * *, GLsizei)' function_pointer='true' name='multi_draw_elements' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid **' type64='^^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble)' function_pointer='true' name='window_pos2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='window_pos2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat)' function_pointer='true' name='window_pos2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='window_pos2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint)' function_pointer='true' name='window_pos2i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='window_pos2iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort)' function_pointer='true' name='window_pos2s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='window_pos2sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='window_pos3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLdouble *)' function_pointer='true' name='window_pos3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='window_pos3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat *)' function_pointer='true' name='window_pos3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint)' function_pointer='true' name='window_pos3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint *)' function_pointer='true' name='window_pos3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort, GLshort, GLshort)' function_pointer='true' name='window_pos3s' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<arg declared_type64='GLshort' type64='s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLshort *)' function_pointer='true' name='window_pos3sv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='active_stencil_face_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLenum)' function_pointer='true' name='stencil_op_separate_ATI' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint, GLuint)' function_pointer='true' name='stencil_func_separate_ATI' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='flush_render_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='finish_render_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='swap_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB)' function_pointer='true' name='delete_object_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLhandleARB (*)(GLIContext, GLenum)' function_pointer='true' name='get_handle_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLhandleARB' type64='^v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLhandleARB)' function_pointer='true' name='detach_object_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLhandleARB (*)(GLIContext, GLenum)' function_pointer='true' name='create_shader_object_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLhandleARB' type64='^v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLsizei, GLcharARB * *, GLint *)' function_pointer='true' name='shader_source_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLcharARB **' type64='^*'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB)' function_pointer='true' name='compile_shader_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLhandleARB (*)(GLIContext)' function_pointer='true' name='create_program_object_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='GLhandleARB' type64='^v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLhandleARB)' function_pointer='true' name='attach_object_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB)' function_pointer='true' name='link_program_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB)' function_pointer='true' name='use_program_object_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB)' function_pointer='true' name='validate_program_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLfloat)' function_pointer='true' name='uniform1f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLfloat, GLfloat)' function_pointer='true' name='uniform2f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='uniform3f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='uniform4f_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint)' function_pointer='true' name='uniform1i_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint)' function_pointer='true' name='uniform2i_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint)' function_pointer='true' name='uniform3i_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint, GLint)' function_pointer='true' name='uniform4i_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLfloat *)' function_pointer='true' name='uniform1fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLfloat *)' function_pointer='true' name='uniform2fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLfloat *)' function_pointer='true' name='uniform3fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLfloat *)' function_pointer='true' name='uniform4fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLint *)' function_pointer='true' name='uniform1iv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLint *)' function_pointer='true' name='uniform2iv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLint *)' function_pointer='true' name='uniform3iv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLint *)' function_pointer='true' name='uniform4iv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix2fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix3fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix4fv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLenum, GLfloat *)' function_pointer='true' name='get_object_parameterfv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLenum, GLint *)' function_pointer='true' name='get_object_parameteriv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLsizei, GLsizei *, GLcharARB *)' function_pointer='true' name='get_info_log_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLcharARB*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLsizei, GLsizei *, GLhandleARB *)' function_pointer='true' name='get_attached_objects_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLhandleARB*' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLint (*)(GLIContext, GLhandleARB, GLcharARB *)' function_pointer='true' name='get_uniform_location_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg const='true' declared_type64='GLcharARB*' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLcharARB *)' function_pointer='true' name='get_active_uniform_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLint*' type64='^i'/>
<arg declared_type64='GLenum*' type64='^I'/>
<arg declared_type64='GLcharARB*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLint, GLfloat *)' function_pointer='true' name='get_uniformfv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLint, GLint *)' function_pointer='true' name='get_uniformiv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLsizei, GLsizei *, GLcharARB *)' function_pointer='true' name='get_shader_source_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLcharARB*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLuint, GLcharARB *)' function_pointer='true' name='bind_attrib_location_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLcharARB*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLhandleARB, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLcharARB *)' function_pointer='true' name='get_active_attrib_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLint*' type64='^i'/>
<arg declared_type64='GLenum*' type64='^I'/>
<arg declared_type64='GLcharARB*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLint (*)(GLIContext, GLhandleARB, GLcharARB *)' function_pointer='true' name='get_attrib_location_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLhandleARB' type64='^v'/>
<arg const='true' declared_type64='GLcharARB*' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum)' function_pointer='true' name='clamp_color_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_queries' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_queries' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_query' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='begin_query' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='end_query' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_queryiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='get_query_objectiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLuint *)' function_pointer='true' name='get_query_objectuiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='bind_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_buffers' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_buffers' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizeiptrARB, GLvoid *, GLenum)' function_pointer='true' name='buffer_data' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizeiptrARB' type64='q'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLintptrARB, GLsizeiptrARB, GLvoid *)' function_pointer='true' name='buffer_sub_data' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLintptrARB' type64='q'/>
<arg declared_type64='GLsizeiptrARB' type64='q'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLintptrARB, GLsizeiptrARB, GLvoid *)' function_pointer='true' name='get_buffer_sub_data' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLintptrARB' type64='q'/>
<arg declared_type64='GLsizeiptrARB' type64='q'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLvoid *(*)(GLIContext, GLenum, GLenum)' function_pointer='true' name='map_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLvoid*' type64='^v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLenum)' function_pointer='true' name='unmap_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_buffer_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLvoid **)' function_pointer='true' name='get_buffer_pointerv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLvoid**' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampd, GLclampd)' function_pointer='true' name='depth_bounds_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampd' type64='d'/>
<arg declared_type64='GLclampd' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLenum *)' function_pointer='true' name='draw_buffers_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLenum*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_shader' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_program' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='get_shaderiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='get_programiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLsizei *, GLchar *)' function_pointer='true' name='get_shader_info_log' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLsizei *, GLchar *)' function_pointer='true' name='get_program_info_log' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint, GLuint)' function_pointer='true' name='stencil_func_separate' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='stencil_mask_separate' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint *, GLsizei *, GLsizei)' function_pointer='true' name='multi_draw_element_array_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<arg const='true' declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint, GLint *, GLsizei *, GLsizei)' function_pointer='true' name='multi_draw_range_element_array_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<arg const='true' declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_renderbuffer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='bind_renderbuffer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_renderbuffers_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_renderbuffers_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLsizei, GLsizei)' function_pointer='true' name='renderbuffer_storage_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_renderbuffer_parameteriv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_framebuffer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='bind_framebuffer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_framebuffers_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_framebuffers_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLenum (*)(GLIContext, GLenum)' function_pointer='true' name='check_framebuffer_status_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLenum' type64='I'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLuint, GLint)' function_pointer='true' name='framebuffer_texture1D_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLuint, GLint)' function_pointer='true' name='framebuffer_texture2D_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLuint, GLint, GLint)' function_pointer='true' name='framebuffer_texture3D_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLuint)' function_pointer='true' name='framebuffer_renderbuffer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLint *)' function_pointer='true' name='get_framebuffer_attachment_parameteriv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='generate_mipmap_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint)' function_pointer='true' name='buffer_parameteri_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLintptr, GLsizeiptr)' function_pointer='true' name='flush_mapped_buffer_range_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLintptr' type64='q'/>
<arg declared_type64='GLsizeiptr' type64='q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLsizei, GLfloat *)' function_pointer='true' name='program_env_parameters4fv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLsizei, GLfloat *)' function_pointer='true' name='program_local_parameters4fv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLenum (*)(GLIContext, GLenum, GLuint, GLenum)' function_pointer='true' name='object_purgeable_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLenum' type64='I'/>
</field>
<field declared_type64='GLenum (*)(GLIContext, GLenum, GLuint, GLenum)' function_pointer='true' name='object_unpurgeable_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLenum' type64='I'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLenum, GLint *)' function_pointer='true' name='get_object_parameteriv_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint)' function_pointer='true' name='program_parameteri_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLuint, GLint)' function_pointer='true' name='framebuffer_texture_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLuint, GLint, GLint)' function_pointer='true' name='framebuffer_texture_layer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLuint, GLint, GLenum)' function_pointer='true' name='framebuffer_texture_face_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint, GLintptr, GLsizeiptr)' function_pointer='true' name='bind_buffer_range_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLintptr' type64='q'/>
<arg declared_type64='GLsizeiptr' type64='q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint, GLintptr)' function_pointer='true' name='bind_buffer_offset_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLintptr' type64='q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint)' function_pointer='true' name='bind_buffer_base_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='begin_transform_feedback_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='end_transform_feedback_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLchar * *, GLenum)' function_pointer='true' name='transform_feedback_varyings_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLchar **' type64='^*'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLsizei, GLsizei *, GLsizei *, GLenum *, GLchar *)' function_pointer='true' name='get_transform_feedback_varying_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLenum*' type64='^I'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLint *)' function_pointer='true' name='get_integer_indexedv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLboolean *)' function_pointer='true' name='get_boolean_indexedv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLboolean*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLuint)' function_pointer='true' name='uniform_buffer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLint (*)(GLIContext, GLuint, GLint)' function_pointer='true' name='get_uniform_buffer_size_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='GLint' type64='i'/>
</field>
<field declared_type64='GLintptr (*)(GLIContext, GLuint, GLint)' function_pointer='true' name='get_uniform_buffer_offset_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='GLintptr' type64='q'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint)' function_pointer='true' name='clear_colorIi_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint, GLuint)' function_pointer='true' name='clear_colorIui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='tex_parameterIiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLuint *)' function_pointer='true' name='tex_parameterIuiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *)' function_pointer='true' name='get_tex_parameterIiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLuint *)' function_pointer='true' name='get_tex_parameterIuiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint)' function_pointer='true' name='vertex_attribI1i_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLint)' function_pointer='true' name='vertex_attribI2i_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLint, GLint)' function_pointer='true' name='vertex_attribI3i_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLint, GLint, GLint)' function_pointer='true' name='vertex_attribI4i_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint)' function_pointer='true' name='vertex_attribI1ui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint)' function_pointer='true' name='vertex_attribI2ui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint, GLuint)' function_pointer='true' name='vertex_attribI3ui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint, GLuint, GLuint)' function_pointer='true' name='vertex_attribI4ui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint *)' function_pointer='true' name='vertex_attribI1iv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint *)' function_pointer='true' name='vertex_attribI2iv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint *)' function_pointer='true' name='vertex_attribI3iv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint *)' function_pointer='true' name='vertex_attribI4iv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint *)' function_pointer='true' name='vertex_attribI1uiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint *)' function_pointer='true' name='vertex_attribI2uiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint *)' function_pointer='true' name='vertex_attribI3uiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint *)' function_pointer='true' name='vertex_attribI4uiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLbyte *)' function_pointer='true' name='vertex_attribI4bv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLbyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLshort *)' function_pointer='true' name='vertex_attribI4sv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLshort*' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLubyte *)' function_pointer='true' name='vertex_attribI4ubv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLubyte*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLushort *)' function_pointer='true' name='vertex_attribI4usv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLushort*' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='vertex_attribI_pointer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='get_vertex_attribIiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLuint *)' function_pointer='true' name='get_vertex_attribIuiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLuint)' function_pointer='true' name='uniform1ui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLuint, GLuint)' function_pointer='true' name='uniform2ui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLuint, GLuint, GLuint)' function_pointer='true' name='uniform3ui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLuint, GLuint, GLuint, GLuint)' function_pointer='true' name='uniform4ui_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLuint *)' function_pointer='true' name='uniform1uiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLuint *)' function_pointer='true' name='uniform2uiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLuint *)' function_pointer='true' name='uniform3uiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLuint *)' function_pointer='true' name='uniform4uiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLuint *)' function_pointer='true' name='get_uniformuiv_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLchar *)' function_pointer='true' name='bind_frag_data_location_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLint (*)(GLIContext, GLuint, GLchar *)' function_pointer='true' name='get_frag_data_location_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLboolean, GLboolean, GLboolean, GLboolean)' function_pointer='true' name='color_mask_indexed_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='enable_indexed_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='disable_indexed_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='is_enabled_indexed_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix2x3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix3x2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix2x4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix4x2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix3x4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='uniform_matrix4x3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum)' function_pointer='true' name='blit_framebuffer_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLbitfield' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLsizei, GLsizei)' function_pointer='true' name='renderbuffer_storage_multisample_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum)' function_pointer='true' name='begin_conditional_render_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='end_conditional_render_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLsizei *, GLuint *)' function_pointer='true' name='get_attached_shaders' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum)' function_pointer='true' name='provoking_vertex_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint)' function_pointer='true' name='vertex_attrib_divisor' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLsizei, GLsizei)' function_pointer='true' name='draw_arrays_instanced' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLvoid *, GLsizei)' function_pointer='true' name='draw_elements_instanced' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLvoid *, GLint)' function_pointer='true' name='draw_elements_base_vertex' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid *, GLint)' function_pointer='true' name='draw_range_elements_base_vertex' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLvoid *, GLsizei, GLint)' function_pointer='true' name='draw_elements_instanced_base_vertex' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei *, GLenum, GLvoid * *, GLsizei, GLint *)' function_pointer='true' name='multi_draw_elements_base_vertex' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid **' type64='^^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='bind_vertex_array_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_vertex_arrays_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_vertex_arrays_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_vertex_array_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLvoid *)' function_pointer='true' name='point_size_pointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLfloat)' function_pointer='true' name='vertex_point_sizef_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLint *)' function_pointer='true' name='clear_bufferiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLuint *)' function_pointer='true' name='clear_bufferuiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLfloat *)' function_pointer='true' name='clear_bufferfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLfloat, GLint)' function_pointer='true' name='clear_bufferfi' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field const='true' declared_type64='GLubyte *(*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='get_stringi' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval const='true' declared_type64='GLubyte*' type64='*'/>
</field>
<field declared_type64='GLsync (*)(GLIContext, GLenum, GLbitfield)' function_pointer='true' name='fence_sync' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLbitfield' type64='I'/>
<retval declared_type64='GLsync' type64='^{__GLsync=}'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLsync)' function_pointer='true' name='is_sync' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsync' type64='^{__GLsync=}'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsync)' function_pointer='true' name='delete_sync' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsync' type64='^{__GLsync=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLenum (*)(GLIContext, GLsync, GLbitfield, GLuint64)' function_pointer='true' name='client_wait_sync' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsync' type64='^{__GLsync=}'/>
<arg declared_type64='GLbitfield' type64='I'/>
<arg declared_type64='GLuint64' type64='Q'/>
<retval declared_type64='GLenum' type64='I'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsync, GLbitfield, GLuint64)' function_pointer='true' name='wait_sync' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsync' type64='^{__GLsync=}'/>
<arg declared_type64='GLbitfield' type64='I'/>
<arg declared_type64='GLuint64' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint64 *)' function_pointer='true' name='get_integer64v_sync' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint64*' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsync, GLenum, GLsizei, GLsizei *, GLint *)' function_pointer='true' name='get_synciv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsync' type64='^{__GLsync=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean)' function_pointer='true' name='tex_image2D_multisample' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean)' function_pointer='true' name='tex_image3D_multisample' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLfloat *)' function_pointer='true' name='get_multisamplefv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLbitfield)' function_pointer='true' name='sample_maski' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLbitfield' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLuint)' function_pointer='true' name='tex_buffer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr)' function_pointer='true' name='copy_buffer_sub_data' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLintptr' type64='q'/>
<arg declared_type64='GLintptr' type64='q'/>
<arg declared_type64='GLsizeiptr' type64='q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='primitive_restart_index' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint64EXT *)' function_pointer='true' name='get_query_objecti64v' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint64EXT*' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLuint64EXT *)' function_pointer='true' name='get_query_objectui64v' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint64EXT*' type64='^Q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLvoid *(*)(GLIContext, GLenum, GLintptr, GLsizeiptr, GLenum)' function_pointer='true' name='map_buffer_range' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLintptr' type64='q'/>
<arg declared_type64='GLsizeiptr' type64='q'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='GLvoid*' type64='^v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLintptr, GLsizeiptr)' function_pointer='true' name='flush_mapped_buffer_range' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLintptr' type64='q'/>
<arg declared_type64='GLsizeiptr' type64='q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum)' function_pointer='true' name='query_counter' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLint64 *)' function_pointer='true' name='get_integer64i_v' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint64*' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint64 *)' function_pointer='true' name='get_buffer_parameteri64v' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint64*' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_samplers' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_samplers' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_sampler' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint)' function_pointer='true' name='bind_sampler' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint)' function_pointer='true' name='sampler_parameteri' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='sampler_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLfloat)' function_pointer='true' name='sampler_parameterf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLfloat *)' function_pointer='true' name='sampler_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='sampler_parameterIiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLuint *)' function_pointer='true' name='sampler_parameterIuiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='get_sampler_parameteriv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLfloat *)' function_pointer='true' name='get_sampler_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='get_sampler_parameterIiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLuint *)' function_pointer='true' name='get_sampler_parameterIuiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLsizei, GLchar *)' function_pointer='true' name='label_object_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLsizei, GLsizei *, GLchar *)' function_pointer='true' name='get_object_label_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLchar *)' function_pointer='true' name='insert_event_marker_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLchar *)' function_pointer='true' name='push_group_marker_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='pop_group_marker_EXT' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLbitfield, GLuint)' function_pointer='true' name='use_program_stages' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLbitfield' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint)' function_pointer='true' name='active_shader_program' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLuint (*)(GLIContext, GLenum, GLsizei, GLchar * *)' function_pointer='true' name='create_shader_programv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLchar **' type64='^*'/>
<retval declared_type64='GLuint' type64='I'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='bind_program_pipeline' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_program_pipelines' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_program_pipelines' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_program_pipeline' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLint *)' function_pointer='true' name='get_program_pipelineiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint)' function_pointer='true' name='validate_program_pipeline' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLsizei *, GLchar *)' function_pointer='true' name='get_program_pipeline_info_log' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLint)' function_pointer='true' name='program_uniform1i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLint, GLint)' function_pointer='true' name='program_uniform2i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLint, GLint, GLint)' function_pointer='true' name='program_uniform3i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLint, GLint, GLint, GLint)' function_pointer='true' name='program_uniform4i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLfloat)' function_pointer='true' name='program_uniform1f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLfloat, GLfloat)' function_pointer='true' name='program_uniform2f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='program_uniform3f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='program_uniform4f' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLint *)' function_pointer='true' name='program_uniform1iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLint *)' function_pointer='true' name='program_uniform2iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLint *)' function_pointer='true' name='program_uniform3iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLint *)' function_pointer='true' name='program_uniform4iv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLfloat *)' function_pointer='true' name='program_uniform1fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLfloat *)' function_pointer='true' name='program_uniform2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLfloat *)' function_pointer='true' name='program_uniform3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLfloat *)' function_pointer='true' name='program_uniform4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLuint)' function_pointer='true' name='program_uniform1ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLuint, GLuint)' function_pointer='true' name='program_uniform2ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLuint, GLuint, GLuint)' function_pointer='true' name='program_uniform3ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLuint, GLuint, GLuint, GLuint)' function_pointer='true' name='program_uniform4ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLuint *)' function_pointer='true' name='program_uniform1uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLuint *)' function_pointer='true' name='program_uniform2uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLuint *)' function_pointer='true' name='program_uniform3uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLuint *)' function_pointer='true' name='program_uniform4uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix2x3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix3x2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix2x4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix4x2fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix3x4fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLfloat *)' function_pointer='true' name='program_uniform_matrix4x3fv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLuint, GLuint, GLchar *)' function_pointer='true' name='bind_frag_data_location_indexed' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLint (*)(GLIContext, GLuint, GLchar *)' function_pointer='true' name='get_frag_data_index' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLenum)' function_pointer='true' name='blend_func_i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLenum, GLenum, GLenum)' function_pointer='true' name='blend_func_separate_i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum)' function_pointer='true' name='blend_equation_i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLenum)' function_pointer='true' name='blend_equation_separate_i' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLchar *, GLint, GLchar *)' function_pointer='true' name='named_string_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLchar *)' function_pointer='true' name='delete_named_string_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLchar * *, GLint *)' function_pointer='true' name='compile_shader_include_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLchar **' type64='^*'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLint, GLchar *)' function_pointer='true' name='is_named_string_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLchar *, GLsizei, GLint *, GLchar *)' function_pointer='true' name='get_named_string_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLchar *, GLenum, GLint *)' function_pointer='true' name='get_named_string_iv_ARB' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='release_shader_compiler' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLuint *, GLenum, GLvoid *, GLint)' function_pointer='true' name='shader_binary' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLint *, GLint *)' function_pointer='true' name='get_shader_precision_format' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampf, GLclampf)' function_pointer='true' name='depth_rangef' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampf' type64='f'/>
<arg declared_type64='GLclampf' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampf)' function_pointer='true' name='clear_depthf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampf' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLboolean, GLuint)' function_pointer='true' name='vertex_attribP1ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLboolean, GLuint)' function_pointer='true' name='vertex_attribP2ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLboolean, GLuint)' function_pointer='true' name='vertex_attribP3ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLboolean, GLuint)' function_pointer='true' name='vertex_attribP4ui' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLboolean, GLuint *)' function_pointer='true' name='vertex_attribP1uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLboolean, GLuint *)' function_pointer='true' name='vertex_attribP2uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLboolean, GLuint *)' function_pointer='true' name='vertex_attribP3uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLboolean, GLuint *)' function_pointer='true' name='vertex_attribP4uiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLsizei *, GLenum *, GLvoid *)' function_pointer='true' name='get_program_binary' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLenum*' type64='^I'/>
<arg declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLvoid *, GLsizei)' function_pointer='true' name='program_binary' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLclampf)' function_pointer='true' name='min_sample_shading' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLclampf' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLfloat *)' function_pointer='true' name='viewport_arrayv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat, GLfloat, GLfloat, GLfloat)' function_pointer='true' name='viewport_indexedf' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<arg declared_type64='GLfloat' type64='f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLfloat *)' function_pointer='true' name='viewport_indexedfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLint *)' function_pointer='true' name='scissor_arrayv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLint, GLsizei, GLsizei)' function_pointer='true' name='scissor_indexed' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint *)' function_pointer='true' name='scissor_indexedv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLsizei, GLclampd *)' function_pointer='true' name='depth_range_arrayv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLclampd*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLclampd, GLclampd)' function_pointer='true' name='depth_range_indexed' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLclampd' type64='d'/>
<arg declared_type64='GLclampd' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLfloat *)' function_pointer='true' name='get_floati_v' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLdouble *)' function_pointer='true' name='get_doublei_v' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLvoid *)' function_pointer='true' name='draw_arrays_indirect' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLvoid *)' function_pointer='true' name='draw_elements_indirect' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLvoid*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint)' function_pointer='true' name='patch_parameteri' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLfloat *)' function_pointer='true' name='patch_parameterfv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLfloat*' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='bind_transform_feedback' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='gen_transform_feedbacks' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLsizei, GLuint *)' function_pointer='true' name='delete_transform_feedbacks' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='pause_transform_feedback' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='resume_transform_feedback' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLboolean (*)(GLIContext, GLuint)' function_pointer='true' name='is_transform_feedback' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='draw_transform_feedback' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint)' function_pointer='true' name='begin_query_indexed' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint)' function_pointer='true' name='end_query_indexed' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLenum, GLint *)' function_pointer='true' name='get_query_indexediv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLuint)' function_pointer='true' name='draw_transform_feedback_stream' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLdouble)' function_pointer='true' name='program_uniform1d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLdouble, GLdouble)' function_pointer='true' name='program_uniform2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='program_uniform3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='program_uniform4d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLdouble *)' function_pointer='true' name='program_uniform1dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLdouble *)' function_pointer='true' name='program_uniform2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLdouble *)' function_pointer='true' name='program_uniform3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLdouble *)' function_pointer='true' name='program_uniform4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix2x3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix3x2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix2x4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix4x2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix3x4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='program_uniform_matrix4x3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLdouble)' function_pointer='true' name='uniform1d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLdouble, GLdouble)' function_pointer='true' name='uniform2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='uniform3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='uniform4d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLdouble *)' function_pointer='true' name='uniform1dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLdouble *)' function_pointer='true' name='uniform2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLdouble *)' function_pointer='true' name='uniform3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLdouble *)' function_pointer='true' name='uniform4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix2x3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix3x2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix2x4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix4x2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix3x4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLint, GLsizei, GLboolean, GLdouble *)' function_pointer='true' name='uniform_matrix4x3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLboolean' type64='C'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLdouble *)' function_pointer='true' name='get_uniformdv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble)' function_pointer='true' name='vertex_attribl1d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble, GLdouble)' function_pointer='true' name='vertex_attribl2d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='vertex_attribl3d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble, GLdouble, GLdouble, GLdouble)' function_pointer='true' name='vertex_attribl4d' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<arg declared_type64='GLdouble' type64='d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble *)' function_pointer='true' name='vertex_attribl1dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble *)' function_pointer='true' name='vertex_attribl2dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble *)' function_pointer='true' name='vertex_attribl3dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLdouble *)' function_pointer='true' name='vertex_attribl4dv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg const='true' declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLint, GLenum, GLsizei, void *)' function_pointer='true' name='vertex_attrib_lpointer' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='void*' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLdouble *)' function_pointer='true' name='get_vertex_attrib_ldv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLdouble*' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='GLint (*)(GLIContext, GLuint, GLenum, GLchar *)' function_pointer='true' name='get_subroutine_uniform_location' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</field>
<field declared_type64='GLuint (*)(GLIContext, GLuint, GLenum, GLchar *)' function_pointer='true' name='get_subroutine_index' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg const='true' declared_type64='GLchar*' type64='*'/>
<retval declared_type64='GLuint' type64='I'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLuint, GLenum, GLint *)' function_pointer='true' name='get_active_subroutine_uniformiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *)' function_pointer='true' name='get_active_subroutine_uniform_name' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *)' function_pointer='true' name='get_active_subroutine_name' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei*' type64='^i'/>
<arg declared_type64='GLchar*' type64='*'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLuint *)' function_pointer='true' name='uniform_subroutinesuiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg const='true' declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLint, GLuint *)' function_pointer='true' name='get_uniform_subroutineuiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<arg declared_type64='GLuint*' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLuint, GLenum, GLenum, GLint *)' function_pointer='true' name='get_program_stageiv' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLenum, GLenum, GLsizei, GLint *)' function_pointer='true' name='get_internal_formativ' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLint*' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLsizei)' function_pointer='true' name='tex_storage1D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLsizei, GLsizei)' function_pointer='true' name='tex_storage2D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei)' function_pointer='true' name='tex_storage3D' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<arg declared_type64='GLsizei' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext, GLenum, GLuint, GLint)' function_pointer='true' name='label_object_with_responsible_process_APPLE' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<arg declared_type64='GLenum' type64='I'/>
<arg declared_type64='GLuint' type64='I'/>
<arg declared_type64='GLint' type64='i'/>
<retval declared_type64='void' type64='v'/>
</field>
<field declared_type64='void (*)(GLIContext)' function_pointer='true' name='texture_barrier_NV' type64='^?'>
<arg declared_type64='GLIContext' type64='^{__GLIContextRec=}'/>
<retval declared_type64='void' type64='v'/>
</field>
</struct>
<cftype name='CGLPBufferObj' type64='^{_CGLPBufferObject=}'/>
<cftype name='CGLPixelFormatObj' type64='^{_CGLPixelFormatObject=}'/>
<cftype name='CGLPrivateObj' type64='^{_CGLPrivateObject=}'/>
<cftype name='CGLRendererInfoObj' type64='^{_CGLRendererInfoObject=}'/>
<cftype name='CGLShareGroupObj' type64='^{CGLShareGroupRec=}'/>
<cftype name='GLIContext' type64='^{__GLIContextRec=}'/>
<cftype name='GLIShared' type64='^{__GLISharedRec=}'/>
<cftype name='GLUnurbs' type64='^{GLUnurbs=}'/>
<cftype name='GLUnurbsObj' type64='^{GLUnurbs=}'/>
<cftype name='GLUquadric' type64='^{GLUquadric=}'/>
<cftype name='GLUquadricObj' type64='^{GLUquadric=}'/>
<cftype name='GLUtesselator' type64='^{GLUtesselator=}'/>
<cftype name='GLUtesselatorObj' type64='^{GLUtesselator=}'/>
<cftype name='GLUtriangulatorObj' type64='^{GLUtesselator=}'/>
<cftype name='GLsync' type64='^{__GLsync=}'/>
<cftype name='IOSurfaceRef' type64='^{__IOSurface=}'/>
<cftype name='cl_device_id' type64='^{_cl_device_id=}'/>
<constant declared_type64='void' name='glEndConditionalRenderNV' type64='v'/>
<constant declared_type64='void' name='glEndTransformFeedbackEXT' type64='v'/>
<constant declared_type64='void' name='glFinish' type64='v'/>
<constant declared_type64='void' name='glFlush' type64='v'/>
<constant declared_type64='GLenum' name='glGetError' type64='I'/>
<enum name='CGL_VERSION_1_0' value64='1'/>
<enum name='CGL_VERSION_1_1' value64='1'/>
<enum name='CGL_VERSION_1_2' value64='1'/>
<enum name='CGL_VERSION_1_3' value64='1'/>
<enum name='GLU_AUTO_LOAD_MATRIX' value64='100200'/>
<enum name='GLU_BEGIN' value64='100100'/>
<enum name='GLU_CCW' value64='100121'/>
<enum name='GLU_CULLING' value64='100201'/>
<enum name='GLU_CW' value64='100120'/>
<enum name='GLU_DISPLAY_MODE' value64='100204'/>
<enum name='GLU_DOMAIN_DISTANCE' value64='100217'/>
<enum name='GLU_EDGE_FLAG' value64='100104'/>
<enum name='GLU_END' value64='100102'/>
<enum name='GLU_ERROR' value64='100103'/>
<enum name='GLU_EXTENSIONS' value64='100801'/>
<enum name='GLU_EXTERIOR' value64='100123'/>
<enum name='GLU_EXT_nurbs_tessellator' value64='1'/>
<enum name='GLU_EXT_object_space_tess' value64='1'/>
<enum name='GLU_FALSE' value64='0'/>
<enum name='GLU_FILL' value64='100012'/>
<enum name='GLU_FLAT' value64='100001'/>
<enum name='GLU_INCOMPATIBLE_GL_VERSION' value64='100903'/>
<enum name='GLU_INSIDE' value64='100021'/>
<enum name='GLU_INTERIOR' value64='100122'/>
<enum name='GLU_INVALID_ENUM' value64='100900'/>
<enum name='GLU_INVALID_OPERATION' value64='100904'/>
<enum name='GLU_INVALID_VALUE' value64='100901'/>
<enum name='GLU_LINE' value64='100011'/>
<enum name='GLU_MAP1_TRIM_2' value64='100210'/>
<enum name='GLU_MAP1_TRIM_3' value64='100211'/>
<enum name='GLU_NONE' value64='100002'/>
<enum name='GLU_NURBS_BEGIN' value64='100164'/>
<enum name='GLU_NURBS_BEGIN_DATA' value64='100170'/>
<enum name='GLU_NURBS_BEGIN_DATA_EXT' value64='100170'/>
<enum name='GLU_NURBS_BEGIN_EXT' value64='100164'/>
<enum name='GLU_NURBS_COLOR' value64='100167'/>
<enum name='GLU_NURBS_COLOR_DATA' value64='100173'/>
<enum name='GLU_NURBS_COLOR_DATA_EXT' value64='100173'/>
<enum name='GLU_NURBS_COLOR_EXT' value64='100167'/>
<enum name='GLU_NURBS_END' value64='100169'/>
<enum name='GLU_NURBS_END_DATA' value64='100175'/>
<enum name='GLU_NURBS_END_DATA_EXT' value64='100175'/>
<enum name='GLU_NURBS_END_EXT' value64='100169'/>
<enum name='GLU_NURBS_ERROR' value64='100103'/>
<enum name='GLU_NURBS_ERROR1' value64='100251'/>
<enum name='GLU_NURBS_ERROR10' value64='100260'/>
<enum name='GLU_NURBS_ERROR11' value64='100261'/>
<enum name='GLU_NURBS_ERROR12' value64='100262'/>
<enum name='GLU_NURBS_ERROR13' value64='100263'/>
<enum name='GLU_NURBS_ERROR14' value64='100264'/>
<enum name='GLU_NURBS_ERROR15' value64='100265'/>
<enum name='GLU_NURBS_ERROR16' value64='100266'/>
<enum name='GLU_NURBS_ERROR17' value64='100267'/>
<enum name='GLU_NURBS_ERROR18' value64='100268'/>
<enum name='GLU_NURBS_ERROR19' value64='100269'/>
<enum name='GLU_NURBS_ERROR2' value64='100252'/>
<enum name='GLU_NURBS_ERROR20' value64='100270'/>
<enum name='GLU_NURBS_ERROR21' value64='100271'/>
<enum name='GLU_NURBS_ERROR22' value64='100272'/>
<enum name='GLU_NURBS_ERROR23' value64='100273'/>
<enum name='GLU_NURBS_ERROR24' value64='100274'/>
<enum name='GLU_NURBS_ERROR25' value64='100275'/>
<enum name='GLU_NURBS_ERROR26' value64='100276'/>
<enum name='GLU_NURBS_ERROR27' value64='100277'/>
<enum name='GLU_NURBS_ERROR28' value64='100278'/>
<enum name='GLU_NURBS_ERROR29' value64='100279'/>
<enum name='GLU_NURBS_ERROR3' value64='100253'/>
<enum name='GLU_NURBS_ERROR30' value64='100280'/>
<enum name='GLU_NURBS_ERROR31' value64='100281'/>
<enum name='GLU_NURBS_ERROR32' value64='100282'/>
<enum name='GLU_NURBS_ERROR33' value64='100283'/>
<enum name='GLU_NURBS_ERROR34' value64='100284'/>
<enum name='GLU_NURBS_ERROR35' value64='100285'/>
<enum name='GLU_NURBS_ERROR36' value64='100286'/>
<enum name='GLU_NURBS_ERROR37' value64='100287'/>
<enum name='GLU_NURBS_ERROR4' value64='100254'/>
<enum name='GLU_NURBS_ERROR5' value64='100255'/>
<enum name='GLU_NURBS_ERROR6' value64='100256'/>
<enum name='GLU_NURBS_ERROR7' value64='100257'/>
<enum name='GLU_NURBS_ERROR8' value64='100258'/>
<enum name='GLU_NURBS_ERROR9' value64='100259'/>
<enum name='GLU_NURBS_MODE' value64='100160'/>
<enum name='GLU_NURBS_MODE_EXT' value64='100160'/>
<enum name='GLU_NURBS_NORMAL' value64='100166'/>
<enum name='GLU_NURBS_NORMAL_DATA' value64='100172'/>
<enum name='GLU_NURBS_NORMAL_DATA_EXT' value64='100172'/>
<enum name='GLU_NURBS_NORMAL_EXT' value64='100166'/>
<enum name='GLU_NURBS_RENDERER' value64='100162'/>
<enum name='GLU_NURBS_RENDERER_EXT' value64='100162'/>
<enum name='GLU_NURBS_TESSELLATOR' value64='100161'/>
<enum name='GLU_NURBS_TESSELLATOR_EXT' value64='100161'/>
<enum name='GLU_NURBS_TEXTURE_COORD' value64='100168'/>
<enum name='GLU_NURBS_TEXTURE_COORD_DATA' value64='100174'/>
<enum name='GLU_NURBS_TEX_COORD_DATA_EXT' value64='100174'/>
<enum name='GLU_NURBS_TEX_COORD_EXT' value64='100168'/>
<enum name='GLU_NURBS_VERTEX' value64='100165'/>
<enum name='GLU_NURBS_VERTEX_DATA' value64='100171'/>
<enum name='GLU_NURBS_VERTEX_DATA_EXT' value64='100171'/>
<enum name='GLU_NURBS_VERTEX_EXT' value64='100165'/>
<enum name='GLU_OBJECT_PARAMETRIC_ERROR' value64='100208'/>
<enum name='GLU_OBJECT_PARAMETRIC_ERROR_EXT' value64='100208'/>
<enum name='GLU_OBJECT_PATH_LENGTH' value64='100209'/>
<enum name='GLU_OBJECT_PATH_LENGTH_EXT' value64='100209'/>
<enum name='GLU_OUTLINE_PATCH' value64='100241'/>
<enum name='GLU_OUTLINE_POLYGON' value64='100240'/>
<enum name='GLU_OUTSIDE' value64='100020'/>
<enum name='GLU_OUT_OF_MEMORY' value64='100902'/>
<enum name='GLU_PARAMETRIC_ERROR' value64='100216'/>
<enum name='GLU_PARAMETRIC_TOLERANCE' value64='100202'/>
<enum name='GLU_PATH_LENGTH' value64='100215'/>
<enum name='GLU_POINT' value64='100010'/>
<enum name='GLU_SAMPLING_METHOD' value64='100205'/>
<enum name='GLU_SAMPLING_TOLERANCE' value64='100203'/>
<enum name='GLU_SILHOUETTE' value64='100013'/>
<enum name='GLU_SMOOTH' value64='100000'/>
<enum name='GLU_TESS_BEGIN' value64='100100'/>
<enum name='GLU_TESS_BEGIN_DATA' value64='100106'/>
<enum name='GLU_TESS_BOUNDARY_ONLY' value64='100141'/>
<enum name='GLU_TESS_COMBINE' value64='100105'/>
<enum name='GLU_TESS_COMBINE_DATA' value64='100111'/>
<enum name='GLU_TESS_COORD_TOO_LARGE' value64='100155'/>
<enum name='GLU_TESS_EDGE_FLAG' value64='100104'/>
<enum name='GLU_TESS_EDGE_FLAG_DATA' value64='100110'/>
<enum name='GLU_TESS_END' value64='100102'/>
<enum name='GLU_TESS_END_DATA' value64='100108'/>
<enum name='GLU_TESS_ERROR' value64='100103'/>
<enum name='GLU_TESS_ERROR1' value64='100151'/>
<enum name='GLU_TESS_ERROR2' value64='100152'/>
<enum name='GLU_TESS_ERROR3' value64='100153'/>
<enum name='GLU_TESS_ERROR4' value64='100154'/>
<enum name='GLU_TESS_ERROR5' value64='100155'/>
<enum name='GLU_TESS_ERROR6' value64='100156'/>
<enum name='GLU_TESS_ERROR7' value64='100157'/>
<enum name='GLU_TESS_ERROR8' value64='100158'/>
<enum name='GLU_TESS_ERROR_DATA' value64='100109'/>
<enum name='GLU_TESS_MAX_COORD' value64='1.0e150'/>
<enum name='GLU_TESS_MISSING_BEGIN_CONTOUR' value64='100152'/>
<enum name='GLU_TESS_MISSING_BEGIN_POLYGON' value64='100151'/>
<enum name='GLU_TESS_MISSING_END_CONTOUR' value64='100154'/>
<enum name='GLU_TESS_MISSING_END_POLYGON' value64='100153'/>
<enum name='GLU_TESS_NEED_COMBINE_CALLBACK' value64='100156'/>
<enum name='GLU_TESS_TOLERANCE' value64='100142'/>
<enum name='GLU_TESS_VERTEX' value64='100101'/>
<enum name='GLU_TESS_VERTEX_DATA' value64='100107'/>
<enum name='GLU_TESS_WINDING_ABS_GEQ_TWO' value64='100134'/>
<enum name='GLU_TESS_WINDING_NEGATIVE' value64='100133'/>
<enum name='GLU_TESS_WINDING_NONZERO' value64='100131'/>
<enum name='GLU_TESS_WINDING_ODD' value64='100130'/>
<enum name='GLU_TESS_WINDING_POSITIVE' value64='100132'/>
<enum name='GLU_TESS_WINDING_RULE' value64='100140'/>
<enum name='GLU_TRUE' value64='1'/>
<enum name='GLU_UNKNOWN' value64='100124'/>
<enum name='GLU_U_STEP' value64='100206'/>
<enum name='GLU_VERSION' value64='100800'/>
<enum name='GLU_VERSION_1_1' value64='1'/>
<enum name='GLU_VERSION_1_2' value64='1'/>
<enum name='GLU_VERSION_1_3' value64='1'/>
<enum name='GLU_VERTEX' value64='100101'/>
<enum name='GLU_V_STEP' value64='100207'/>
<enum name='GL_2D' value64='1536'/>
<enum name='GL_2_BYTES' value64='5127'/>
<enum name='GL_3D' value64='1537'/>
<enum name='GL_3D_COLOR' value64='1538'/>
<enum name='GL_3D_COLOR_TEXTURE' value64='1539'/>
<enum name='GL_3_BYTES' value64='5128'/>
<enum name='GL_4D_COLOR_TEXTURE' value64='1540'/>
<enum name='GL_4_BYTES' value64='5129'/>
<enum name='GL_ABGR_EXT' value64='32768'/>
<enum name='GL_ACCUM' value64='256'/>
<enum name='GL_ACCUM_ALPHA_BITS' value64='3419'/>
<enum name='GL_ACCUM_BLUE_BITS' value64='3418'/>
<enum name='GL_ACCUM_BUFFER_BIT' value64='512'/>
<enum name='GL_ACCUM_CLEAR_VALUE' value64='2944'/>
<enum name='GL_ACCUM_GREEN_BITS' value64='3417'/>
<enum name='GL_ACCUM_RED_BITS' value64='3416'/>
<enum name='GL_ACTIVE_ATTRIBUTES' value64='35721'/>
<enum name='GL_ACTIVE_ATTRIBUTE_MAX_LENGTH' value64='35722'/>
<enum name='GL_ACTIVE_PROGRAM' value64='33369'/>
<enum name='GL_ACTIVE_STENCIL_FACE_EXT' value64='35089'/>
<enum name='GL_ACTIVE_SUBROUTINES' value64='36325'/>
<enum name='GL_ACTIVE_SUBROUTINE_MAX_LENGTH' value64='36424'/>
<enum name='GL_ACTIVE_SUBROUTINE_UNIFORMS' value64='36326'/>
<enum name='GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS' value64='36423'/>
<enum name='GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH' value64='36425'/>
<enum name='GL_ACTIVE_TEXTURE' value64='34016'/>
<enum name='GL_ACTIVE_TEXTURE_ARB' value64='34016'/>
<enum name='GL_ACTIVE_UNIFORMS' value64='35718'/>
<enum name='GL_ACTIVE_UNIFORM_BLOCKS' value64='35382'/>
<enum name='GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH' value64='35381'/>
<enum name='GL_ACTIVE_UNIFORM_MAX_LENGTH' value64='35719'/>
<enum name='GL_ACTIVE_VERTEX_UNITS_ARB' value64='34469'/>
<enum name='GL_ADD' value64='260'/>
<enum name='GL_ADD_SIGNED' value64='34164'/>
<enum name='GL_ADD_SIGNED_ARB' value64='34164'/>
<enum name='GL_ALIASED_LINE_WIDTH_RANGE' value64='33902'/>
<enum name='GL_ALIASED_POINT_SIZE_RANGE' value64='33901'/>
<enum name='GL_ALL_ATTRIB_BITS' value64='1048575'/>
<enum name='GL_ALL_SHADER_BITS' value64='4294967295'/>
<enum name='GL_ALPHA' value64='6406'/>
<enum name='GL_ALPHA12' value64='32829'/>
<enum name='GL_ALPHA16' value64='32830'/>
<enum name='GL_ALPHA16F_ARB' value64='34844'/>
<enum name='GL_ALPHA16I_EXT' value64='36234'/>
<enum name='GL_ALPHA16UI_EXT' value64='36216'/>
<enum name='GL_ALPHA32F_ARB' value64='34838'/>
<enum name='GL_ALPHA32I_EXT' value64='36228'/>
<enum name='GL_ALPHA32UI_EXT' value64='36210'/>
<enum name='GL_ALPHA4' value64='32827'/>
<enum name='GL_ALPHA8' value64='32828'/>
<enum name='GL_ALPHA8I_EXT' value64='36240'/>
<enum name='GL_ALPHA8UI_EXT' value64='36222'/>
<enum name='GL_ALPHA_BIAS' value64='3357'/>
<enum name='GL_ALPHA_BITS' value64='3413'/>
<enum name='GL_ALPHA_BLEND_EQUATION_ATI' value64='34877'/>
<enum name='GL_ALPHA_FLOAT16_APPLE' value64='34844'/>
<enum name='GL_ALPHA_FLOAT16_ATI' value64='34844'/>
<enum name='GL_ALPHA_FLOAT32_APPLE' value64='34838'/>
<enum name='GL_ALPHA_FLOAT32_ATI' value64='34838'/>
<enum name='GL_ALPHA_INTEGER_EXT' value64='36247'/>
<enum name='GL_ALPHA_SCALE' value64='3356'/>
<enum name='GL_ALPHA_TEST' value64='3008'/>
<enum name='GL_ALPHA_TEST_FUNC' value64='3009'/>
<enum name='GL_ALPHA_TEST_REF' value64='3010'/>
<enum name='GL_ALREADY_SIGNALED' value64='37146'/>
<enum name='GL_ALWAYS' value64='519'/>
<enum name='GL_AMBIENT' value64='4608'/>
<enum name='GL_AMBIENT_AND_DIFFUSE' value64='5634'/>
<enum name='GL_AND' value64='5377'/>
<enum name='GL_AND_INVERTED' value64='5380'/>
<enum name='GL_AND_REVERSE' value64='5378'/>
<enum name='GL_ANY_SAMPLES_PASSED' value64='35887'/>
<enum name='GL_APPLE_aux_depth_stencil' value64='1'/>
<enum name='GL_APPLE_client_storage' value64='1'/>
<enum name='GL_APPLE_container_object_shareable' value64='1'/>
<enum name='GL_APPLE_element_array' value64='1'/>
<enum name='GL_APPLE_fence' value64='1'/>
<enum name='GL_APPLE_float_pixels' value64='1'/>
<enum name='GL_APPLE_flush_buffer_range' value64='1'/>
<enum name='GL_APPLE_flush_render' value64='1'/>
<enum name='GL_APPLE_object_purgeable' value64='1'/>
<enum name='GL_APPLE_packed_pixels' value64='1'/>
<enum name='GL_APPLE_pixel_buffer' value64='1'/>
<enum name='GL_APPLE_rgb_422' value64='1'/>
<enum name='GL_APPLE_row_bytes' value64='1'/>
<enum name='GL_APPLE_specular_vector' value64='1'/>
<enum name='GL_APPLE_texture_range' value64='1'/>
<enum name='GL_APPLE_transform_hint' value64='1'/>
<enum name='GL_APPLE_vertex_array_object' value64='1'/>
<enum name='GL_APPLE_vertex_array_range' value64='1'/>
<enum name='GL_APPLE_vertex_point_size' value64='1'/>
<enum name='GL_APPLE_vertex_program_evaluators' value64='1'/>
<enum name='GL_APPLE_ycbcr_422' value64='1'/>
<enum name='GL_ARB_ES2_compatibility' value64='1'/>
<enum name='GL_ARB_blend_func_extended' value64='1'/>
<enum name='GL_ARB_color_buffer_float' value64='1'/>
<enum name='GL_ARB_copy_buffer' value64='1'/>
<enum name='GL_ARB_depth_buffer_float' value64='1'/>
<enum name='GL_ARB_depth_clamp' value64='1'/>
<enum name='GL_ARB_depth_texture' value64='1'/>
<enum name='GL_ARB_draw_buffers' value64='1'/>
<enum name='GL_ARB_draw_buffers_blend' value64='1'/>
<enum name='GL_ARB_draw_elements_base_vertex' value64='1'/>
<enum name='GL_ARB_draw_indirect' value64='1'/>
<enum name='GL_ARB_draw_instanced' value64='1'/>
<enum name='GL_ARB_explicit_attrib_location' value64='1'/>
<enum name='GL_ARB_fragment_coord_conventions' value64='1'/>
<enum name='GL_ARB_fragment_program' value64='1'/>
<enum name='GL_ARB_fragment_program_shadow' value64='1'/>
<enum name='GL_ARB_fragment_shader' value64='1'/>
<enum name='GL_ARB_framebuffer_object' value64='1'/>
<enum name='GL_ARB_framebuffer_sRGB' value64='1'/>
<enum name='GL_ARB_get_program_binary' value64='1'/>
<enum name='GL_ARB_gpu_shader5' value64='1'/>
<enum name='GL_ARB_gpu_shader_fp64' value64='1'/>
<enum name='GL_ARB_half_float_pixel' value64='1'/>
<enum name='GL_ARB_half_float_vertex' value64='1'/>
<enum name='GL_ARB_imaging' value64='1'/>
<enum name='GL_ARB_instanced_arrays' value64='1'/>
<enum name='GL_ARB_internalformat_query' value64='1'/>
<enum name='GL_ARB_map_buffer_range' value64='1'/>
<enum name='GL_ARB_multisample' value64='1'/>
<enum name='GL_ARB_multitexture' value64='1'/>
<enum name='GL_ARB_occlusion_query' value64='1'/>
<enum name='GL_ARB_occlusion_query2' value64='1'/>
<enum name='GL_ARB_pixel_buffer_object' value64='1'/>
<enum name='GL_ARB_point_parameters' value64='1'/>
<enum name='GL_ARB_point_sprite' value64='1'/>
<enum name='GL_ARB_provoking_vertex' value64='1'/>
<enum name='GL_ARB_sample_shading' value64='1'/>
<enum name='GL_ARB_sampler_objects' value64='1'/>
<enum name='GL_ARB_seamless_cube_map' value64='1'/>
<enum name='GL_ARB_separate_shader_objects' value64='1'/>
<enum name='GL_ARB_shader_bit_encoding' value64='1'/>
<enum name='GL_ARB_shader_objects' value64='1'/>
<enum name='GL_ARB_shader_precision' value64='1'/>
<enum name='GL_ARB_shader_subroutine' value64='1'/>
<enum name='GL_ARB_shader_texture_lod' value64='1'/>
<enum name='GL_ARB_shading_language_100' value64='1'/>
<enum name='GL_ARB_shading_language_include' value64='1'/>
<enum name='GL_ARB_shadow' value64='1'/>
<enum name='GL_ARB_shadow_ambient' value64='1'/>
<enum name='GL_ARB_sync' value64='1'/>
<enum name='GL_ARB_tessellation_shader' value64='1'/>
<enum name='GL_ARB_texture_border_clamp' value64='1'/>
<enum name='GL_ARB_texture_buffer_object_rgb32' value64='1'/>
<enum name='GL_ARB_texture_compression' value64='1'/>
<enum name='GL_ARB_texture_compression_rgtc' value64='1'/>
<enum name='GL_ARB_texture_cube_map' value64='1'/>
<enum name='GL_ARB_texture_cube_map_array' value64='1'/>
<enum name='GL_ARB_texture_env_add' value64='1'/>
<enum name='GL_ARB_texture_env_combine' value64='1'/>
<enum name='GL_ARB_texture_env_crossbar' value64='1'/>
<enum name='GL_ARB_texture_env_dot3' value64='1'/>
<enum name='GL_ARB_texture_float' value64='1'/>
<enum name='GL_ARB_texture_gather' value64='1'/>
<enum name='GL_ARB_texture_mirrored_repeat' value64='1'/>
<enum name='GL_ARB_texture_multisample' value64='1'/>
<enum name='GL_ARB_texture_non_power_of_two' value64='1'/>
<enum name='GL_ARB_texture_query_lod' value64='1'/>
<enum name='GL_ARB_texture_rectangle' value64='1'/>
<enum name='GL_ARB_texture_rg' value64='1'/>
<enum name='GL_ARB_texture_rgb10_a2ui' value64='1'/>
<enum name='GL_ARB_texture_storage' value64='1'/>
<enum name='GL_ARB_texture_swizzle' value64='1'/>
<enum name='GL_ARB_timer_query' value64='1'/>
<enum name='GL_ARB_transform_feedback2' value64='1'/>
<enum name='GL_ARB_transform_feedback3' value64='1'/>
<enum name='GL_ARB_transpose_matrix' value64='1'/>
<enum name='GL_ARB_uniform_buffer_object' value64='1'/>
<enum name='GL_ARB_vertex_array_bgra' value64='1'/>
<enum name='GL_ARB_vertex_array_object' value64='1'/>
<enum name='GL_ARB_vertex_attrib_64bit' value64='1'/>
<enum name='GL_ARB_vertex_blend' value64='1'/>
<enum name='GL_ARB_vertex_buffer_object' value64='1'/>
<enum name='GL_ARB_vertex_program' value64='1'/>
<enum name='GL_ARB_vertex_shader' value64='1'/>
<enum name='GL_ARB_vertex_type_2_10_10_10_rev' value64='1'/>
<enum name='GL_ARB_viewport_array' value64='1'/>
<enum name='GL_ARB_window_pos' value64='1'/>
<enum name='GL_ARRAY_BUFFER' value64='34962'/>
<enum name='GL_ARRAY_BUFFER_ARB' value64='34962'/>
<enum name='GL_ARRAY_BUFFER_BINDING' value64='34964'/>
<enum name='GL_ARRAY_BUFFER_BINDING_ARB' value64='34964'/>
<enum name='GL_ATI_blend_equation_separate' value64='1'/>
<enum name='GL_ATI_blend_weighted_minmax' value64='1'/>
<enum name='GL_ATI_separate_stencil' value64='1'/>
<enum name='GL_ATI_texture_compression_3dc' value64='1'/>
<enum name='GL_ATI_texture_env_combine3' value64='1'/>
<enum name='GL_ATI_texture_float' value64='1'/>
<enum name='GL_ATI_texture_mirror_once' value64='1'/>
<enum name='GL_ATTACHED_SHADERS' value64='35717'/>
<enum name='GL_ATTRIB_STACK_DEPTH' value64='2992'/>
<enum name='GL_AUTO_NORMAL' value64='3456'/>
<enum name='GL_AUX0' value64='1033'/>
<enum name='GL_AUX1' value64='1034'/>
<enum name='GL_AUX2' value64='1035'/>
<enum name='GL_AUX3' value64='1036'/>
<enum name='GL_AUX_BUFFERS' value64='3072'/>
<enum name='GL_AUX_DEPTH_STENCIL_APPLE' value64='35348'/>
<enum name='GL_BACK' value64='1029'/>
<enum name='GL_BACK_LEFT' value64='1026'/>
<enum name='GL_BACK_RIGHT' value64='1027'/>
<enum name='GL_BGR' value64='32992'/>
<enum name='GL_BGRA' value64='32993'/>
<enum name='GL_BGRA_EXT' value64='32993'/>
<enum name='GL_BGRA_INTEGER' value64='36251'/>
<enum name='GL_BGRA_INTEGER_EXT' value64='36251'/>
<enum name='GL_BGR_EXT' value64='32992'/>
<enum name='GL_BGR_INTEGER' value64='36250'/>
<enum name='GL_BGR_INTEGER_EXT' value64='36250'/>
<enum name='GL_BITMAP' value64='6656'/>
<enum name='GL_BITMAP_TOKEN' value64='1796'/>
<enum name='GL_BLEND' value64='3042'/>
<enum name='GL_BLEND_COLOR' value64='32773'/>
<enum name='GL_BLEND_COLOR_EXT' value64='32773'/>
<enum name='GL_BLEND_DST' value64='3040'/>
<enum name='GL_BLEND_DST_ALPHA' value64='32970'/>
<enum name='GL_BLEND_DST_ALPHA_EXT' value64='32970'/>
<enum name='GL_BLEND_DST_RGB' value64='32968'/>
<enum name='GL_BLEND_DST_RGB_EXT' value64='32968'/>
<enum name='GL_BLEND_EQUATION' value64='32777'/>
<enum name='GL_BLEND_EQUATION_ALPHA' value64='34877'/>
<enum name='GL_BLEND_EQUATION_ALPHA_EXT' value64='34877'/>
<enum name='GL_BLEND_EQUATION_EXT' value64='32777'/>
<enum name='GL_BLEND_EQUATION_RGB' value64='32777'/>
<enum name='GL_BLEND_EQUATION_RGB_EXT' value64='32777'/>
<enum name='GL_BLEND_SRC' value64='3041'/>
<enum name='GL_BLEND_SRC_ALPHA' value64='32971'/>
<enum name='GL_BLEND_SRC_ALPHA_EXT' value64='32971'/>
<enum name='GL_BLEND_SRC_RGB' value64='32969'/>
<enum name='GL_BLEND_SRC_RGB_EXT' value64='32969'/>
<enum name='GL_BLUE' value64='6405'/>
<enum name='GL_BLUE_BIAS' value64='3355'/>
<enum name='GL_BLUE_BITS' value64='3412'/>
<enum name='GL_BLUE_INTEGER' value64='36246'/>
<enum name='GL_BLUE_INTEGER_EXT' value64='36246'/>
<enum name='GL_BLUE_SCALE' value64='3354'/>
<enum name='GL_BOOL' value64='35670'/>
<enum name='GL_BOOL_ARB' value64='35670'/>
<enum name='GL_BOOL_VEC2' value64='35671'/>
<enum name='GL_BOOL_VEC2_ARB' value64='35671'/>
<enum name='GL_BOOL_VEC3' value64='35672'/>
<enum name='GL_BOOL_VEC3_ARB' value64='35672'/>
<enum name='GL_BOOL_VEC4' value64='35673'/>
<enum name='GL_BOOL_VEC4_ARB' value64='35673'/>
<enum name='GL_BUFFER_ACCESS' value64='35003'/>
<enum name='GL_BUFFER_ACCESS_ARB' value64='35003'/>
<enum name='GL_BUFFER_ACCESS_FLAGS' value64='37151'/>
<enum name='GL_BUFFER_FLUSHING_UNMAP_APPLE' value64='35347'/>
<enum name='GL_BUFFER_MAPPED' value64='35004'/>
<enum name='GL_BUFFER_MAPPED_ARB' value64='35004'/>
<enum name='GL_BUFFER_MAP_LENGTH' value64='37152'/>
<enum name='GL_BUFFER_MAP_OFFSET' value64='37153'/>
<enum name='GL_BUFFER_MAP_POINTER' value64='35005'/>
<enum name='GL_BUFFER_MAP_POINTER_ARB' value64='35005'/>
<enum name='GL_BUFFER_OBJECT_APPLE' value64='34227'/>
<enum name='GL_BUFFER_OBJECT_EXT' value64='37201'/>
<enum name='GL_BUFFER_SERIALIZED_MODIFY_APPLE' value64='35346'/>
<enum name='GL_BUFFER_SIZE' value64='34660'/>
<enum name='GL_BUFFER_SIZE_ARB' value64='34660'/>
<enum name='GL_BUFFER_USAGE' value64='34661'/>
<enum name='GL_BUFFER_USAGE_ARB' value64='34661'/>
<enum name='GL_BYTE' value64='5120'/>
<enum name='GL_C3F_V3F' value64='10788'/>
<enum name='GL_C4F_N3F_V3F' value64='10790'/>
<enum name='GL_C4UB_V2F' value64='10786'/>
<enum name='GL_C4UB_V3F' value64='10787'/>
<enum name='GL_CCW' value64='2305'/>
<enum name='GL_CLAMP' value64='10496'/>
<enum name='GL_CLAMP_FRAGMENT_COLOR_ARB' value64='35099'/>
<enum name='GL_CLAMP_READ_COLOR' value64='35100'/>
<enum name='GL_CLAMP_READ_COLOR_ARB' value64='35100'/>
<enum name='GL_CLAMP_TO_BORDER' value64='33069'/>
<enum name='GL_CLAMP_TO_BORDER_ARB' value64='33069'/>
<enum name='GL_CLAMP_TO_EDGE' value64='33071'/>
<enum name='GL_CLAMP_TO_EDGE_SGIS' value64='33071'/>
<enum name='GL_CLAMP_VERTEX_COLOR_ARB' value64='35098'/>
<enum name='GL_CLEAR' value64='5376'/>
<enum name='GL_CLIENT_ACTIVE_TEXTURE' value64='34017'/>
<enum name='GL_CLIENT_ACTIVE_TEXTURE_ARB' value64='34017'/>
<enum name='GL_CLIENT_ALL_ATTRIB_BITS' value64='4294967295'/>
<enum name='GL_CLIENT_ATTRIB_STACK_DEPTH' value64='2993'/>
<enum name='GL_CLIENT_PIXEL_STORE_BIT' value64='1'/>
<enum name='GL_CLIENT_VERTEX_ARRAY_BIT' value64='2'/>
<enum name='GL_CLIP_DISTANCE0' value64='12288'/>
<enum name='GL_CLIP_DISTANCE1' value64='12289'/>
<enum name='GL_CLIP_DISTANCE2' value64='12290'/>
<enum name='GL_CLIP_DISTANCE3' value64='12291'/>
<enum name='GL_CLIP_DISTANCE4' value64='12292'/>
<enum name='GL_CLIP_DISTANCE5' value64='12293'/>
<enum name='GL_CLIP_DISTANCE6' value64='12294'/>
<enum name='GL_CLIP_DISTANCE7' value64='12295'/>
<enum name='GL_CLIP_PLANE0' value64='12288'/>
<enum name='GL_CLIP_PLANE1' value64='12289'/>
<enum name='GL_CLIP_PLANE2' value64='12290'/>
<enum name='GL_CLIP_PLANE3' value64='12291'/>
<enum name='GL_CLIP_PLANE4' value64='12292'/>
<enum name='GL_CLIP_PLANE5' value64='12293'/>
<enum name='GL_CLIP_VOLUME_CLIPPING_HINT_EXT' value64='33008'/>
<enum name='GL_COEFF' value64='2560'/>
<enum name='GL_COLOR' value64='6144'/>
<enum name='GL_COLOR_ARRAY' value64='32886'/>
<enum name='GL_COLOR_ARRAY_BUFFER_BINDING' value64='34968'/>
<enum name='GL_COLOR_ARRAY_BUFFER_BINDING_ARB' value64='34968'/>
<enum name='GL_COLOR_ARRAY_POINTER' value64='32912'/>
<enum name='GL_COLOR_ARRAY_SIZE' value64='32897'/>
<enum name='GL_COLOR_ARRAY_STRIDE' value64='32899'/>
<enum name='GL_COLOR_ARRAY_TYPE' value64='32898'/>
<enum name='GL_COLOR_ATTACHMENT0' value64='36064'/>
<enum name='GL_COLOR_ATTACHMENT0_EXT' value64='36064'/>
<enum name='GL_COLOR_ATTACHMENT1' value64='36065'/>
<enum name='GL_COLOR_ATTACHMENT10' value64='36074'/>
<enum name='GL_COLOR_ATTACHMENT10_EXT' value64='36074'/>
<enum name='GL_COLOR_ATTACHMENT11' value64='36075'/>
<enum name='GL_COLOR_ATTACHMENT11_EXT' value64='36075'/>
<enum name='GL_COLOR_ATTACHMENT12' value64='36076'/>
<enum name='GL_COLOR_ATTACHMENT12_EXT' value64='36076'/>
<enum name='GL_COLOR_ATTACHMENT13' value64='36077'/>
<enum name='GL_COLOR_ATTACHMENT13_EXT' value64='36077'/>
<enum name='GL_COLOR_ATTACHMENT14' value64='36078'/>
<enum name='GL_COLOR_ATTACHMENT14_EXT' value64='36078'/>
<enum name='GL_COLOR_ATTACHMENT15' value64='36079'/>
<enum name='GL_COLOR_ATTACHMENT15_EXT' value64='36079'/>
<enum name='GL_COLOR_ATTACHMENT1_EXT' value64='36065'/>
<enum name='GL_COLOR_ATTACHMENT2' value64='36066'/>
<enum name='GL_COLOR_ATTACHMENT2_EXT' value64='36066'/>
<enum name='GL_COLOR_ATTACHMENT3' value64='36067'/>
<enum name='GL_COLOR_ATTACHMENT3_EXT' value64='36067'/>
<enum name='GL_COLOR_ATTACHMENT4' value64='36068'/>
<enum name='GL_COLOR_ATTACHMENT4_EXT' value64='36068'/>
<enum name='GL_COLOR_ATTACHMENT5' value64='36069'/>
<enum name='GL_COLOR_ATTACHMENT5_EXT' value64='36069'/>
<enum name='GL_COLOR_ATTACHMENT6' value64='36070'/>
<enum name='GL_COLOR_ATTACHMENT6_EXT' value64='36070'/>
<enum name='GL_COLOR_ATTACHMENT7' value64='36071'/>
<enum name='GL_COLOR_ATTACHMENT7_EXT' value64='36071'/>
<enum name='GL_COLOR_ATTACHMENT8' value64='36072'/>
<enum name='GL_COLOR_ATTACHMENT8_EXT' value64='36072'/>
<enum name='GL_COLOR_ATTACHMENT9' value64='36073'/>
<enum name='GL_COLOR_ATTACHMENT9_EXT' value64='36073'/>
<enum name='GL_COLOR_BUFFER_BIT' value64='16384'/>
<enum name='GL_COLOR_CLEAR_VALUE' value64='3106'/>
<enum name='GL_COLOR_FLOAT_APPLE' value64='35343'/>
<enum name='GL_COLOR_INDEX' value64='6400'/>
<enum name='GL_COLOR_INDEXES' value64='5635'/>
<enum name='GL_COLOR_LOGIC_OP' value64='3058'/>
<enum name='GL_COLOR_MATERIAL' value64='2903'/>
<enum name='GL_COLOR_MATERIAL_FACE' value64='2901'/>
<enum name='GL_COLOR_MATERIAL_PARAMETER' value64='2902'/>
<enum name='GL_COLOR_MATRIX' value64='32945'/>
<enum name='GL_COLOR_MATRIX_SGI' value64='32945'/>
<enum name='GL_COLOR_MATRIX_STACK_DEPTH' value64='32946'/>
<enum name='GL_COLOR_MATRIX_STACK_DEPTH_SGI' value64='32946'/>
<enum name='GL_COLOR_SUM' value64='33880'/>
<enum name='GL_COLOR_SUM_ARB' value64='33880'/>
<enum name='GL_COLOR_SUM_EXT' value64='33880'/>
<enum name='GL_COLOR_TABLE' value64='32976'/>
<enum name='GL_COLOR_TABLE_ALPHA_SIZE' value64='32989'/>
<enum name='GL_COLOR_TABLE_BIAS' value64='32983'/>
<enum name='GL_COLOR_TABLE_BLUE_SIZE' value64='32988'/>
<enum name='GL_COLOR_TABLE_FORMAT' value64='32984'/>
<enum name='GL_COLOR_TABLE_GREEN_SIZE' value64='32987'/>
<enum name='GL_COLOR_TABLE_INTENSITY_SIZE' value64='32991'/>
<enum name='GL_COLOR_TABLE_LUMINANCE_SIZE' value64='32990'/>
<enum name='GL_COLOR_TABLE_RED_SIZE' value64='32986'/>
<enum name='GL_COLOR_TABLE_SCALE' value64='32982'/>
<enum name='GL_COLOR_TABLE_WIDTH' value64='32985'/>
<enum name='GL_COLOR_WRITEMASK' value64='3107'/>
<enum name='GL_COMBINE' value64='34160'/>
<enum name='GL_COMBINE_ALPHA' value64='34162'/>
<enum name='GL_COMBINE_ALPHA_ARB' value64='34162'/>
<enum name='GL_COMBINE_ARB' value64='34160'/>
<enum name='GL_COMBINE_RGB' value64='34161'/>
<enum name='GL_COMBINE_RGB_ARB' value64='34161'/>
<enum name='GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT' value64='34894'/>
<enum name='GL_COMPARE_REF_TO_TEXTURE' value64='34894'/>
<enum name='GL_COMPARE_R_TO_TEXTURE' value64='34894'/>
<enum name='GL_COMPARE_R_TO_TEXTURE_ARB' value64='34894'/>
<enum name='GL_COMPATIBLE_SUBROUTINES' value64='36427'/>
<enum name='GL_COMPILE' value64='4864'/>
<enum name='GL_COMPILE_AND_EXECUTE' value64='4865'/>
<enum name='GL_COMPILE_STATUS' value64='35713'/>
<enum name='GL_COMPRESSED_ALPHA' value64='34025'/>
<enum name='GL_COMPRESSED_ALPHA_ARB' value64='34025'/>
<enum name='GL_COMPRESSED_INTENSITY' value64='34028'/>
<enum name='GL_COMPRESSED_INTENSITY_ARB' value64='34028'/>
<enum name='GL_COMPRESSED_LUMINANCE' value64='34026'/>
<enum name='GL_COMPRESSED_LUMINANCE_ALPHA' value64='34027'/>
<enum name='GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI' value64='34871'/>
<enum name='GL_COMPRESSED_LUMINANCE_ALPHA_ARB' value64='34027'/>
<enum name='GL_COMPRESSED_LUMINANCE_ARB' value64='34026'/>
<enum name='GL_COMPRESSED_RED' value64='33317'/>
<enum name='GL_COMPRESSED_RED_RGTC1' value64='36283'/>
<enum name='GL_COMPRESSED_RG' value64='33318'/>
<enum name='GL_COMPRESSED_RGB' value64='34029'/>
<enum name='GL_COMPRESSED_RGBA' value64='34030'/>
<enum name='GL_COMPRESSED_RGBA_ARB' value64='34030'/>
<enum name='GL_COMPRESSED_RGBA_S3TC_DXT1_EXT' value64='33777'/>
<enum name='GL_COMPRESSED_RGBA_S3TC_DXT3_EXT' value64='33778'/>
<enum name='GL_COMPRESSED_RGBA_S3TC_DXT5_EXT' value64='33779'/>
<enum name='GL_COMPRESSED_RGB_ARB' value64='34029'/>
<enum name='GL_COMPRESSED_RGB_S3TC_DXT1_EXT' value64='33776'/>
<enum name='GL_COMPRESSED_RG_RGTC2' value64='36285'/>
<enum name='GL_COMPRESSED_SIGNED_RED_RGTC1' value64='36284'/>
<enum name='GL_COMPRESSED_SIGNED_RG_RGTC2' value64='36286'/>
<enum name='GL_COMPRESSED_SLUMINANCE' value64='35914'/>
<enum name='GL_COMPRESSED_SLUMINANCE_ALPHA' value64='35915'/>
<enum name='GL_COMPRESSED_SLUMINANCE_ALPHA_EXT' value64='35915'/>
<enum name='GL_COMPRESSED_SLUMINANCE_EXT' value64='35914'/>
<enum name='GL_COMPRESSED_SRGB' value64='35912'/>
<enum name='GL_COMPRESSED_SRGB_ALPHA' value64='35913'/>
<enum name='GL_COMPRESSED_SRGB_ALPHA_EXT' value64='35913'/>
<enum name='GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT' value64='35917'/>
<enum name='GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT' value64='35918'/>
<enum name='GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT' value64='35919'/>
<enum name='GL_COMPRESSED_SRGB_EXT' value64='35912'/>
<enum name='GL_COMPRESSED_SRGB_S3TC_DXT1_EXT' value64='35916'/>
<enum name='GL_COMPRESSED_TEXTURE_FORMATS' value64='34467'/>
<enum name='GL_COMPRESSED_TEXTURE_FORMATS_ARB' value64='34467'/>
<enum name='GL_CONDITION_SATISFIED' value64='37148'/>
<enum name='GL_CONSTANT' value64='34166'/>
<enum name='GL_CONSTANT_ALPHA' value64='32771'/>
<enum name='GL_CONSTANT_ALPHA_EXT' value64='32771'/>
<enum name='GL_CONSTANT_ARB' value64='34166'/>
<enum name='GL_CONSTANT_ATTENUATION' value64='4615'/>
<enum name='GL_CONSTANT_BORDER' value64='33105'/>
<enum name='GL_CONSTANT_COLOR' value64='32769'/>
<enum name='GL_CONSTANT_COLOR_EXT' value64='32769'/>
<enum name='GL_CONTEXT_COMPATIBILITY_PROFILE_BIT' value64='2'/>
<enum name='GL_CONTEXT_CORE_PROFILE_BIT' value64='1'/>
<enum name='GL_CONTEXT_FLAGS' value64='33310'/>
<enum name='GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT' value64='1'/>
<enum name='GL_CONTEXT_PROFILE_MASK' value64='37158'/>
<enum name='GL_CONVOLUTION_1D' value64='32784'/>
<enum name='GL_CONVOLUTION_2D' value64='32785'/>
<enum name='GL_CONVOLUTION_BORDER_COLOR' value64='33108'/>
<enum name='GL_CONVOLUTION_BORDER_MODE' value64='32787'/>
<enum name='GL_CONVOLUTION_FILTER_BIAS' value64='32789'/>
<enum name='GL_CONVOLUTION_FILTER_SCALE' value64='32788'/>
<enum name='GL_CONVOLUTION_FORMAT' value64='32791'/>
<enum name='GL_CONVOLUTION_HEIGHT' value64='32793'/>
<enum name='GL_CONVOLUTION_WIDTH' value64='32792'/>
<enum name='GL_COORD_REPLACE' value64='34914'/>
<enum name='GL_COORD_REPLACE_ARB' value64='34914'/>
<enum name='GL_COORD_REPLACE_NV' value64='34914'/>
<enum name='GL_COPY' value64='5379'/>
<enum name='GL_COPY_INVERTED' value64='5388'/>
<enum name='GL_COPY_PIXEL_TOKEN' value64='1798'/>
<enum name='GL_COPY_READ_BUFFER' value64='36662'/>
<enum name='GL_COPY_WRITE_BUFFER' value64='36663'/>
<enum name='GL_CULL_FACE' value64='2884'/>
<enum name='GL_CULL_FACE_MODE' value64='2885'/>
<enum name='GL_CURRENT_BIT' value64='1'/>
<enum name='GL_CURRENT_COLOR' value64='2816'/>
<enum name='GL_CURRENT_FOG_COORD' value64='33875'/>
<enum name='GL_CURRENT_FOG_COORDINATE' value64='33875'/>
<enum name='GL_CURRENT_FOG_COORDINATE_EXT' value64='33875'/>
<enum name='GL_CURRENT_INDEX' value64='2817'/>
<enum name='GL_CURRENT_MATRIX_ARB' value64='34369'/>
<enum name='GL_CURRENT_MATRIX_STACK_DEPTH_ARB' value64='34368'/>
<enum name='GL_CURRENT_NORMAL' value64='2818'/>
<enum name='GL_CURRENT_POINT_SIZE_APPLE' value64='35367'/>
<enum name='GL_CURRENT_PROGRAM' value64='35725'/>
<enum name='GL_CURRENT_QUERY' value64='34917'/>
<enum name='GL_CURRENT_QUERY_ARB' value64='34917'/>
<enum name='GL_CURRENT_RASTER_COLOR' value64='2820'/>
<enum name='GL_CURRENT_RASTER_DISTANCE' value64='2825'/>
<enum name='GL_CURRENT_RASTER_INDEX' value64='2821'/>
<enum name='GL_CURRENT_RASTER_POSITION' value64='2823'/>
<enum name='GL_CURRENT_RASTER_POSITION_VALID' value64='2824'/>
<enum name='GL_CURRENT_RASTER_SECONDARY_COLOR' value64='33887'/>
<enum name='GL_CURRENT_RASTER_TEXTURE_COORDS' value64='2822'/>
<enum name='GL_CURRENT_SECONDARY_COLOR' value64='33881'/>
<enum name='GL_CURRENT_SECONDARY_COLOR_EXT' value64='33881'/>
<enum name='GL_CURRENT_TEXTURE_COORDS' value64='2819'/>
<enum name='GL_CURRENT_VERTEX_ATTRIB' value64='34342'/>
<enum name='GL_CURRENT_VERTEX_ATTRIB_ARB' value64='34342'/>
<enum name='GL_CURRENT_WEIGHT_ARB' value64='34472'/>
<enum name='GL_CW' value64='2304'/>
<enum name='GL_DECAL' value64='8449'/>
<enum name='GL_DECODE_EXT' value64='35401'/>
<enum name='GL_DECR' value64='7683'/>
<enum name='GL_DECR_WRAP' value64='34056'/>
<enum name='GL_DECR_WRAP_EXT' value64='34056'/>
<enum name='GL_DELETE_STATUS' value64='35712'/>
<enum name='GL_DEPTH' value64='6145'/>
<enum name='GL_DEPTH24_STENCIL8' value64='35056'/>
<enum name='GL_DEPTH24_STENCIL8_EXT' value64='35056'/>
<enum name='GL_DEPTH32F_STENCIL8' value64='36013'/>
<enum name='GL_DEPTH_ATTACHMENT' value64='36096'/>
<enum name='GL_DEPTH_ATTACHMENT_EXT' value64='36096'/>
<enum name='GL_DEPTH_BIAS' value64='3359'/>
<enum name='GL_DEPTH_BITS' value64='3414'/>
<enum name='GL_DEPTH_BOUNDS_EXT' value64='34961'/>
<enum name='GL_DEPTH_BOUNDS_TEST_EXT' value64='34960'/>
<enum name='GL_DEPTH_BUFFER_BIT' value64='256'/>
<enum name='GL_DEPTH_CLAMP' value64='34383'/>
<enum name='GL_DEPTH_CLAMP_NV' value64='34383'/>
<enum name='GL_DEPTH_CLEAR_VALUE' value64='2931'/>
<enum name='GL_DEPTH_COMPONENT' value64='6402'/>
<enum name='GL_DEPTH_COMPONENT16' value64='33189'/>
<enum name='GL_DEPTH_COMPONENT16_ARB' value64='33189'/>
<enum name='GL_DEPTH_COMPONENT24' value64='33190'/>
<enum name='GL_DEPTH_COMPONENT24_ARB' value64='33190'/>
<enum name='GL_DEPTH_COMPONENT32' value64='33191'/>
<enum name='GL_DEPTH_COMPONENT32F' value64='36012'/>
<enum name='GL_DEPTH_COMPONENT32_ARB' value64='33191'/>
<enum name='GL_DEPTH_FUNC' value64='2932'/>
<enum name='GL_DEPTH_RANGE' value64='2928'/>
<enum name='GL_DEPTH_SCALE' value64='3358'/>
<enum name='GL_DEPTH_STENCIL' value64='34041'/>
<enum name='GL_DEPTH_STENCIL_ATTACHMENT' value64='33306'/>
<enum name='GL_DEPTH_STENCIL_EXT' value64='34041'/>
<enum name='GL_DEPTH_TEST' value64='2929'/>
<enum name='GL_DEPTH_TEXTURE_MODE' value64='34891'/>
<enum name='GL_DEPTH_TEXTURE_MODE_ARB' value64='34891'/>
<enum name='GL_DEPTH_WRITEMASK' value64='2930'/>
<enum name='GL_DIFFUSE' value64='4609'/>
<enum name='GL_DITHER' value64='3024'/>
<enum name='GL_DOMAIN' value64='2562'/>
<enum name='GL_DONT_CARE' value64='4352'/>
<enum name='GL_DOT3_RGB' value64='34478'/>
<enum name='GL_DOT3_RGBA' value64='34479'/>
<enum name='GL_DOT3_RGBA_ARB' value64='34479'/>
<enum name='GL_DOT3_RGB_ARB' value64='34478'/>
<enum name='GL_DOUBLE' value64='5130'/>
<enum name='GL_DOUBLEBUFFER' value64='3122'/>
<enum name='GL_DOUBLE_MAT2' value64='36678'/>
<enum name='GL_DOUBLE_MAT2x3' value64='36681'/>
<enum name='GL_DOUBLE_MAT2x4' value64='36682'/>
<enum name='GL_DOUBLE_MAT3' value64='36679'/>
<enum name='GL_DOUBLE_MAT3x2' value64='36683'/>
<enum name='GL_DOUBLE_MAT3x4' value64='36684'/>
<enum name='GL_DOUBLE_MAT4' value64='36680'/>
<enum name='GL_DOUBLE_MAT4x2' value64='36685'/>
<enum name='GL_DOUBLE_MAT4x3' value64='36686'/>
<enum name='GL_DOUBLE_VEC2' value64='36860'/>
<enum name='GL_DOUBLE_VEC3' value64='36861'/>
<enum name='GL_DOUBLE_VEC4' value64='36862'/>
<enum name='GL_DRAW_BUFFER' value64='3073'/>
<enum name='GL_DRAW_BUFFER0' value64='34853'/>
<enum name='GL_DRAW_BUFFER0_ARB' value64='34853'/>
<enum name='GL_DRAW_BUFFER1' value64='34854'/>
<enum name='GL_DRAW_BUFFER10' value64='34863'/>
<enum name='GL_DRAW_BUFFER10_ARB' value64='34863'/>
<enum name='GL_DRAW_BUFFER11' value64='34864'/>
<enum name='GL_DRAW_BUFFER11_ARB' value64='34864'/>
<enum name='GL_DRAW_BUFFER12' value64='34865'/>
<enum name='GL_DRAW_BUFFER12_ARB' value64='34865'/>
<enum name='GL_DRAW_BUFFER13' value64='34866'/>
<enum name='GL_DRAW_BUFFER13_ARB' value64='34866'/>
<enum name='GL_DRAW_BUFFER14' value64='34867'/>
<enum name='GL_DRAW_BUFFER14_ARB' value64='34867'/>
<enum name='GL_DRAW_BUFFER15' value64='34868'/>
<enum name='GL_DRAW_BUFFER15_ARB' value64='34868'/>
<enum name='GL_DRAW_BUFFER1_ARB' value64='34854'/>
<enum name='GL_DRAW_BUFFER2' value64='34855'/>
<enum name='GL_DRAW_BUFFER2_ARB' value64='34855'/>
<enum name='GL_DRAW_BUFFER3' value64='34856'/>
<enum name='GL_DRAW_BUFFER3_ARB' value64='34856'/>
<enum name='GL_DRAW_BUFFER4' value64='34857'/>
<enum name='GL_DRAW_BUFFER4_ARB' value64='34857'/>
<enum name='GL_DRAW_BUFFER5' value64='34858'/>
<enum name='GL_DRAW_BUFFER5_ARB' value64='34858'/>
<enum name='GL_DRAW_BUFFER6' value64='34859'/>
<enum name='GL_DRAW_BUFFER6_ARB' value64='34859'/>
<enum name='GL_DRAW_BUFFER7' value64='34860'/>
<enum name='GL_DRAW_BUFFER7_ARB' value64='34860'/>
<enum name='GL_DRAW_BUFFER8' value64='34861'/>
<enum name='GL_DRAW_BUFFER8_ARB' value64='34861'/>
<enum name='GL_DRAW_BUFFER9' value64='34862'/>
<enum name='GL_DRAW_BUFFER9_ARB' value64='34862'/>
<enum name='GL_DRAW_FRAMEBUFFER' value64='36009'/>
<enum name='GL_DRAW_FRAMEBUFFER_BINDING' value64='36006'/>
<enum name='GL_DRAW_FRAMEBUFFER_BINDING_EXT' value64='36006'/>
<enum name='GL_DRAW_FRAMEBUFFER_EXT' value64='36009'/>
<enum name='GL_DRAW_INDIRECT_BUFFER' value64='36671'/>
<enum name='GL_DRAW_INDIRECT_BUFFER_BINDING' value64='36675'/>
<enum name='GL_DRAW_PIXELS_APPLE' value64='35338'/>
<enum name='GL_DRAW_PIXEL_TOKEN' value64='1797'/>
<enum name='GL_DST_ALPHA' value64='772'/>
<enum name='GL_DST_COLOR' value64='774'/>
<enum name='GL_DYNAMIC_COPY' value64='35050'/>
<enum name='GL_DYNAMIC_COPY_ARB' value64='35050'/>
<enum name='GL_DYNAMIC_DRAW' value64='35048'/>
<enum name='GL_DYNAMIC_DRAW_ARB' value64='35048'/>
<enum name='GL_DYNAMIC_READ' value64='35049'/>
<enum name='GL_DYNAMIC_READ_ARB' value64='35049'/>
<enum name='GL_EDGE_FLAG' value64='2883'/>
<enum name='GL_EDGE_FLAG_ARRAY' value64='32889'/>
<enum name='GL_EDGE_FLAG_ARRAY_BUFFER_BINDING' value64='34971'/>
<enum name='GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB' value64='34971'/>
<enum name='GL_EDGE_FLAG_ARRAY_POINTER' value64='32915'/>
<enum name='GL_EDGE_FLAG_ARRAY_STRIDE' value64='32908'/>
<enum name='GL_ELEMENT_ARRAY_APPLE' value64='35340'/>
<enum name='GL_ELEMENT_ARRAY_BUFFER' value64='34963'/>
<enum name='GL_ELEMENT_ARRAY_BUFFER_ARB' value64='34963'/>
<enum name='GL_ELEMENT_ARRAY_BUFFER_BINDING' value64='34965'/>
<enum name='GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB' value64='34965'/>
<enum name='GL_ELEMENT_ARRAY_POINTER_APPLE' value64='35342'/>
<enum name='GL_ELEMENT_ARRAY_TYPE_APPLE' value64='35341'/>
<enum name='GL_EMISSION' value64='5632'/>
<enum name='GL_ENABLE_BIT' value64='8192'/>
<enum name='GL_EQUAL' value64='514'/>
<enum name='GL_EQUIV' value64='5385'/>
<enum name='GL_EVAL_BIT' value64='65536'/>
<enum name='GL_EXP' value64='2048'/>
<enum name='GL_EXP2' value64='2049'/>
<enum name='GL_EXTENSIONS' value64='7939'/>
<enum name='GL_EXT_abgr' value64='1'/>
<enum name='GL_EXT_bgra' value64='1'/>
<enum name='GL_EXT_bindable_uniform' value64='1'/>
<enum name='GL_EXT_blend_color' value64='1'/>
<enum name='GL_EXT_blend_equation_separate' value64='1'/>
<enum name='GL_EXT_blend_func_separate' value64='1'/>
<enum name='GL_EXT_blend_minmax' value64='1'/>
<enum name='GL_EXT_blend_subtract' value64='1'/>
<enum name='GL_EXT_clip_volume_hint' value64='1'/>
<enum name='GL_EXT_debug_label' value64='1'/>
<enum name='GL_EXT_debug_marker' value64='1'/>
<enum name='GL_EXT_depth_bounds_test' value64='1'/>
<enum name='GL_EXT_draw_buffers2' value64='1'/>
<enum name='GL_EXT_draw_range_elements' value64='1'/>
<enum name='GL_EXT_fog_coord' value64='1'/>
<enum name='GL_EXT_framebuffer_blit' value64='1'/>
<enum name='GL_EXT_framebuffer_multisample' value64='1'/>
<enum name='GL_EXT_framebuffer_multisample_blit_scaled' value64='1'/>
<enum name='GL_EXT_framebuffer_object' value64='1'/>
<enum name='GL_EXT_framebuffer_sRGB' value64='1'/>
<enum name='GL_EXT_geometry_shader4' value64='1'/>
<enum name='GL_EXT_gpu_program_parameters' value64='1'/>
<enum name='GL_EXT_gpu_shader4' value64='1'/>
<enum name='GL_EXT_multi_draw_arrays' value64='1'/>
<enum name='GL_EXT_packed_depth_stencil' value64='1'/>
<enum name='GL_EXT_packed_float' value64='1'/>
<enum name='GL_EXT_provoking_vertex' value64='1'/>
<enum name='GL_EXT_rescale_normal' value64='1'/>
<enum name='GL_EXT_secondary_color' value64='1'/>
<enum name='GL_EXT_separate_specular_color' value64='1'/>
<enum name='GL_EXT_shadow_funcs' value64='1'/>
<enum name='GL_EXT_stencil_two_side' value64='1'/>
<enum name='GL_EXT_stencil_wrap' value64='1'/>
<enum name='GL_EXT_texture_array' value64='1'/>
<enum name='GL_EXT_texture_compression_dxt1' value64='1'/>
<enum name='GL_EXT_texture_compression_s3tc' value64='1'/>
<enum name='GL_EXT_texture_env_add' value64='1'/>
<enum name='GL_EXT_texture_filter_anisotropic' value64='1'/>
<enum name='GL_EXT_texture_integer' value64='1'/>
<enum name='GL_EXT_texture_lod_bias' value64='1'/>
<enum name='GL_EXT_texture_mirror_clamp' value64='1'/>
<enum name='GL_EXT_texture_rectangle' value64='1'/>
<enum name='GL_EXT_texture_sRGB' value64='1'/>
<enum name='GL_EXT_texture_sRGB_decode' value64='1'/>
<enum name='GL_EXT_texture_shared_exponent' value64='1'/>
<enum name='GL_EXT_timer_query' value64='1'/>
<enum name='GL_EXT_transform_feedback' value64='1'/>
<enum name='GL_EXT_vertex_array_bgra' value64='1'/>
<enum name='GL_EYE_LINEAR' value64='9216'/>
<enum name='GL_EYE_PLANE' value64='9474'/>
<enum name='GL_EYE_PLANE_ABSOLUTE_NV' value64='34140'/>
<enum name='GL_EYE_RADIAL_NV' value64='34139'/>
<enum name='GL_FALSE' value64='0'/>
<enum name='GL_FASTEST' value64='4353'/>
<enum name='GL_FEEDBACK' value64='7169'/>
<enum name='GL_FEEDBACK_BUFFER_POINTER' value64='3568'/>
<enum name='GL_FEEDBACK_BUFFER_SIZE' value64='3569'/>
<enum name='GL_FEEDBACK_BUFFER_TYPE' value64='3570'/>
<enum name='GL_FENCE_APPLE' value64='35339'/>
<enum name='GL_FILL' value64='6914'/>
<enum name='GL_FIRST_VERTEX_CONVENTION' value64='36429'/>
<enum name='GL_FIRST_VERTEX_CONVENTION_EXT' value64='36429'/>
<enum name='GL_FIXED' value64='5132'/>
<enum name='GL_FIXED_ONLY' value64='35101'/>
<enum name='GL_FIXED_ONLY_ARB' value64='35101'/>
<enum name='GL_FLAT' value64='7424'/>
<enum name='GL_FLOAT' value64='5126'/>
<enum name='GL_FLOAT_32_UNSIGNED_INT_24_8_REV' value64='36269'/>
<enum name='GL_FLOAT_MAT2' value64='35674'/>
<enum name='GL_FLOAT_MAT2_ARB' value64='35674'/>
<enum name='GL_FLOAT_MAT2x3' value64='35685'/>
<enum name='GL_FLOAT_MAT2x4' value64='35686'/>
<enum name='GL_FLOAT_MAT3' value64='35675'/>
<enum name='GL_FLOAT_MAT3_ARB' value64='35675'/>
<enum name='GL_FLOAT_MAT3x2' value64='35687'/>
<enum name='GL_FLOAT_MAT3x4' value64='35688'/>
<enum name='GL_FLOAT_MAT4' value64='35676'/>
<enum name='GL_FLOAT_MAT4_ARB' value64='35676'/>
<enum name='GL_FLOAT_MAT4x2' value64='35689'/>
<enum name='GL_FLOAT_MAT4x3' value64='35690'/>
<enum name='GL_FLOAT_VEC2' value64='35664'/>
<enum name='GL_FLOAT_VEC2_ARB' value64='35664'/>
<enum name='GL_FLOAT_VEC3' value64='35665'/>
<enum name='GL_FLOAT_VEC3_ARB' value64='35665'/>
<enum name='GL_FLOAT_VEC4' value64='35666'/>
<enum name='GL_FLOAT_VEC4_ARB' value64='35666'/>
<enum name='GL_FOG' value64='2912'/>
<enum name='GL_FOG_BIT' value64='128'/>
<enum name='GL_FOG_COLOR' value64='2918'/>
<enum name='GL_FOG_COORD' value64='33873'/>
<enum name='GL_FOG_COORDINATE' value64='33873'/>
<enum name='GL_FOG_COORDINATE_ARRAY' value64='33879'/>
<enum name='GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING' value64='34973'/>
<enum name='GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB' value64='34973'/>
<enum name='GL_FOG_COORDINATE_ARRAY_EXT' value64='33879'/>
<enum name='GL_FOG_COORDINATE_ARRAY_POINTER' value64='33878'/>
<enum name='GL_FOG_COORDINATE_ARRAY_POINTER_EXT' value64='33878'/>
<enum name='GL_FOG_COORDINATE_ARRAY_STRIDE' value64='33877'/>
<enum name='GL_FOG_COORDINATE_ARRAY_STRIDE_EXT' value64='33877'/>
<enum name='GL_FOG_COORDINATE_ARRAY_TYPE' value64='33876'/>
<enum name='GL_FOG_COORDINATE_ARRAY_TYPE_EXT' value64='33876'/>
<enum name='GL_FOG_COORDINATE_EXT' value64='33873'/>
<enum name='GL_FOG_COORDINATE_SOURCE' value64='33872'/>
<enum name='GL_FOG_COORDINATE_SOURCE_EXT' value64='33872'/>
<enum name='GL_FOG_COORD_ARRAY' value64='33879'/>
<enum name='GL_FOG_COORD_ARRAY_BUFFER_BINDING' value64='34973'/>
<enum name='GL_FOG_COORD_ARRAY_BUFFER_BINDING_ARB' value64='34973'/>
<enum name='GL_FOG_COORD_ARRAY_POINTER' value64='33878'/>
<enum name='GL_FOG_COORD_ARRAY_STRIDE' value64='33877'/>
<enum name='GL_FOG_COORD_ARRAY_TYPE' value64='33876'/>
<enum name='GL_FOG_COORD_SRC' value64='33872'/>
<enum name='GL_FOG_DENSITY' value64='2914'/>
<enum name='GL_FOG_DISTANCE_MODE_NV' value64='34138'/>
<enum name='GL_FOG_END' value64='2916'/>
<enum name='GL_FOG_HINT' value64='3156'/>
<enum name='GL_FOG_INDEX' value64='2913'/>
<enum name='GL_FOG_MODE' value64='2917'/>
<enum name='GL_FOG_START' value64='2915'/>
<enum name='GL_FRACTIONAL_EVEN' value64='36476'/>
<enum name='GL_FRACTIONAL_ODD' value64='36475'/>
<enum name='GL_FRAGMENT_DEPTH' value64='33874'/>
<enum name='GL_FRAGMENT_DEPTH_EXT' value64='33874'/>
<enum name='GL_FRAGMENT_INTERPOLATION_OFFSET_BITS' value64='36445'/>
<enum name='GL_FRAGMENT_PROGRAM_ARB' value64='34820'/>
<enum name='GL_FRAGMENT_SHADER' value64='35632'/>
<enum name='GL_FRAGMENT_SHADER_ARB' value64='35632'/>
<enum name='GL_FRAGMENT_SHADER_BIT' value64='2'/>
<enum name='GL_FRAGMENT_SHADER_DERIVATIVE_HINT' value64='35723'/>
<enum name='GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB' value64='35723'/>
<enum name='GL_FRAMEBUFFER' value64='36160'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE' value64='33301'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE' value64='33300'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING' value64='33296'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE' value64='33297'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE' value64='33302'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE' value64='33299'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_LAYERED' value64='36263'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT' value64='36263'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME' value64='36049'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT' value64='36049'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE' value64='36048'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT' value64='36048'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE' value64='33298'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE' value64='33303'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT' value64='36052'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE' value64='36051'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT' value64='36051'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER' value64='36052'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT' value64='36052'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL' value64='36050'/>
<enum name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT' value64='36050'/>
<enum name='GL_FRAMEBUFFER_BINDING' value64='36006'/>
<enum name='GL_FRAMEBUFFER_BINDING_EXT' value64='36006'/>
<enum name='GL_FRAMEBUFFER_COMPLETE' value64='36053'/>
<enum name='GL_FRAMEBUFFER_COMPLETE_EXT' value64='36053'/>
<enum name='GL_FRAMEBUFFER_DEFAULT' value64='33304'/>
<enum name='GL_FRAMEBUFFER_EXT' value64='36160'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT' value64='36054'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT' value64='36054'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT' value64='36057'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER' value64='36059'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT' value64='36059'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT' value64='36058'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT' value64='36265'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS' value64='36264'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT' value64='36264'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT' value64='36055'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT' value64='36055'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE' value64='36182'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT' value64='36182'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER' value64='36060'/>
<enum name='GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT' value64='36060'/>
<enum name='GL_FRAMEBUFFER_SRGB' value64='36281'/>
<enum name='GL_FRAMEBUFFER_SRGB_CAPABLE_EXT' value64='36282'/>
<enum name='GL_FRAMEBUFFER_SRGB_EXT' value64='36281'/>
<enum name='GL_FRAMEBUFFER_UNDEFINED' value64='33305'/>
<enum name='GL_FRAMEBUFFER_UNSUPPORTED' value64='36061'/>
<enum name='GL_FRAMEBUFFER_UNSUPPORTED_EXT' value64='36061'/>
<enum name='GL_FRONT' value64='1028'/>
<enum name='GL_FRONT_AND_BACK' value64='1032'/>
<enum name='GL_FRONT_FACE' value64='2886'/>
<enum name='GL_FRONT_LEFT' value64='1024'/>
<enum name='GL_FRONT_RIGHT' value64='1025'/>
<enum name='GL_FUNC_ADD' value64='32774'/>
<enum name='GL_FUNC_ADD_EXT' value64='32774'/>
<enum name='GL_FUNC_REVERSE_SUBTRACT' value64='32779'/>
<enum name='GL_FUNC_REVERSE_SUBTRACT_EXT' value64='32779'/>
<enum name='GL_FUNC_SUBTRACT' value64='32778'/>
<enum name='GL_FUNC_SUBTRACT_EXT' value64='32778'/>
<enum name='GL_GENERATE_MIPMAP' value64='33169'/>
<enum name='GL_GENERATE_MIPMAP_HINT' value64='33170'/>
<enum name='GL_GENERATE_MIPMAP_HINT_SGIS' value64='33170'/>
<enum name='GL_GENERATE_MIPMAP_SGIS' value64='33169'/>
<enum name='GL_GEOMETRY_INPUT_TYPE' value64='35095'/>
<enum name='GL_GEOMETRY_INPUT_TYPE_EXT' value64='36315'/>
<enum name='GL_GEOMETRY_OUTPUT_TYPE' value64='35096'/>
<enum name='GL_GEOMETRY_OUTPUT_TYPE_EXT' value64='36316'/>
<enum name='GL_GEOMETRY_SHADER' value64='36313'/>
<enum name='GL_GEOMETRY_SHADER_BIT' value64='4'/>
<enum name='GL_GEOMETRY_SHADER_EXT' value64='36313'/>
<enum name='GL_GEOMETRY_SHADER_INVOCATIONS' value64='34943'/>
<enum name='GL_GEOMETRY_VERTICES_OUT' value64='35094'/>
<enum name='GL_GEOMETRY_VERTICES_OUT_EXT' value64='36314'/>
<enum name='GL_GEQUAL' value64='518'/>
<enum name='GL_GLEXT_VERSION' value64='8'/>
<enum name='GL_GREATER' value64='516'/>
<enum name='GL_GREEN' value64='6404'/>
<enum name='GL_GREEN_BIAS' value64='3353'/>
<enum name='GL_GREEN_BITS' value64='3411'/>
<enum name='GL_GREEN_INTEGER' value64='36245'/>
<enum name='GL_GREEN_INTEGER_EXT' value64='36245'/>
<enum name='GL_GREEN_SCALE' value64='3352'/>
<enum name='GL_HALF_APPLE' value64='5131'/>
<enum name='GL_HALF_FLOAT' value64='5131'/>
<enum name='GL_HALF_FLOAT_ARB' value64='5131'/>
<enum name='GL_HIGH_FLOAT' value64='36338'/>
<enum name='GL_HIGH_INT' value64='36341'/>
<enum name='GL_HINT_BIT' value64='32768'/>
<enum name='GL_HISTOGRAM' value64='32804'/>
<enum name='GL_HISTOGRAM_ALPHA_SIZE' value64='32811'/>
<enum name='GL_HISTOGRAM_BLUE_SIZE' value64='32810'/>
<enum name='GL_HISTOGRAM_FORMAT' value64='32807'/>
<enum name='GL_HISTOGRAM_GREEN_SIZE' value64='32809'/>
<enum name='GL_HISTOGRAM_LUMINANCE_SIZE' value64='32812'/>
<enum name='GL_HISTOGRAM_RED_SIZE' value64='32808'/>
<enum name='GL_HISTOGRAM_SINK' value64='32813'/>
<enum name='GL_HISTOGRAM_WIDTH' value64='32806'/>
<enum name='GL_IBM_rasterpos_clip' value64='1'/>
<enum name='GL_IMPLEMENTATION_COLOR_READ_FORMAT' value64='35739'/>
<enum name='GL_IMPLEMENTATION_COLOR_READ_TYPE' value64='35738'/>
<enum name='GL_INCR' value64='7682'/>
<enum name='GL_INCR_WRAP' value64='34055'/>
<enum name='GL_INCR_WRAP_EXT' value64='34055'/>
<enum name='GL_INDEX_ARRAY' value64='32887'/>
<enum name='GL_INDEX_ARRAY_BUFFER_BINDING' value64='34969'/>
<enum name='GL_INDEX_ARRAY_BUFFER_BINDING_ARB' value64='34969'/>
<enum name='GL_INDEX_ARRAY_POINTER' value64='32913'/>
<enum name='GL_INDEX_ARRAY_STRIDE' value64='32902'/>
<enum name='GL_INDEX_ARRAY_TYPE' value64='32901'/>
<enum name='GL_INDEX_BITS' value64='3409'/>
<enum name='GL_INDEX_CLEAR_VALUE' value64='3104'/>
<enum name='GL_INDEX_LOGIC_OP' value64='3057'/>
<enum name='GL_INDEX_MODE' value64='3120'/>
<enum name='GL_INDEX_OFFSET' value64='3347'/>
<enum name='GL_INDEX_SHIFT' value64='3346'/>
<enum name='GL_INDEX_WRITEMASK' value64='3105'/>
<enum name='GL_INFO_LOG_LENGTH' value64='35716'/>
<enum name='GL_INT' value64='5124'/>
<enum name='GL_INTENSITY' value64='32841'/>
<enum name='GL_INTENSITY12' value64='32844'/>
<enum name='GL_INTENSITY16' value64='32845'/>
<enum name='GL_INTENSITY16F_ARB' value64='34845'/>
<enum name='GL_INTENSITY16I_EXT' value64='36235'/>
<enum name='GL_INTENSITY16UI_EXT' value64='36217'/>
<enum name='GL_INTENSITY32F_ARB' value64='34839'/>
<enum name='GL_INTENSITY32I_EXT' value64='36229'/>
<enum name='GL_INTENSITY32UI_EXT' value64='36211'/>
<enum name='GL_INTENSITY4' value64='32842'/>
<enum name='GL_INTENSITY8' value64='32843'/>
<enum name='GL_INTENSITY8I_EXT' value64='36241'/>
<enum name='GL_INTENSITY8UI_EXT' value64='36223'/>
<enum name='GL_INTENSITY_FLOAT16_APPLE' value64='34845'/>
<enum name='GL_INTENSITY_FLOAT16_ATI' value64='34845'/>
<enum name='GL_INTENSITY_FLOAT32_APPLE' value64='34839'/>
<enum name='GL_INTENSITY_FLOAT32_ATI' value64='34839'/>
<enum name='GL_INTERLEAVED_ATTRIBS' value64='35980'/>
<enum name='GL_INTERLEAVED_ATTRIBS_EXT' value64='35980'/>
<enum name='GL_INTERPOLATE' value64='34165'/>
<enum name='GL_INTERPOLATE_ARB' value64='34165'/>
<enum name='GL_INT_2_10_10_10_REV' value64='36255'/>
<enum name='GL_INT_SAMPLER_1D' value64='36297'/>
<enum name='GL_INT_SAMPLER_1D_ARRAY' value64='36302'/>
<enum name='GL_INT_SAMPLER_1D_ARRAY_EXT' value64='36302'/>
<enum name='GL_INT_SAMPLER_1D_EXT' value64='36297'/>
<enum name='GL_INT_SAMPLER_2D' value64='36298'/>
<enum name='GL_INT_SAMPLER_2D_ARRAY' value64='36303'/>
<enum name='GL_INT_SAMPLER_2D_ARRAY_EXT' value64='36303'/>
<enum name='GL_INT_SAMPLER_2D_EXT' value64='36298'/>
<enum name='GL_INT_SAMPLER_2D_MULTISAMPLE' value64='37129'/>
<enum name='GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY' value64='37132'/>
<enum name='GL_INT_SAMPLER_2D_RECT' value64='36301'/>
<enum name='GL_INT_SAMPLER_2D_RECT_EXT' value64='36301'/>
<enum name='GL_INT_SAMPLER_3D' value64='36299'/>
<enum name='GL_INT_SAMPLER_3D_EXT' value64='36299'/>
<enum name='GL_INT_SAMPLER_BUFFER' value64='36304'/>
<enum name='GL_INT_SAMPLER_BUFFER_EXT' value64='36304'/>
<enum name='GL_INT_SAMPLER_CUBE' value64='36300'/>
<enum name='GL_INT_SAMPLER_CUBE_EXT' value64='36300'/>
<enum name='GL_INT_SAMPLER_CUBE_MAP_ARRAY' value64='36878'/>
<enum name='GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB' value64='36878'/>
<enum name='GL_INT_VEC2' value64='35667'/>
<enum name='GL_INT_VEC2_ARB' value64='35667'/>
<enum name='GL_INT_VEC3' value64='35668'/>
<enum name='GL_INT_VEC3_ARB' value64='35668'/>
<enum name='GL_INT_VEC4' value64='35669'/>
<enum name='GL_INT_VEC4_ARB' value64='35669'/>
<enum name='GL_INVALID_ENUM' value64='1280'/>
<enum name='GL_INVALID_FRAMEBUFFER_OPERATION' value64='1286'/>
<enum name='GL_INVALID_FRAMEBUFFER_OPERATION_EXT' value64='1286'/>
<enum name='GL_INVALID_INDEX' value64='4294967295'/>
<enum name='GL_INVALID_OPERATION' value64='1282'/>
<enum name='GL_INVALID_VALUE' value64='1281'/>
<enum name='GL_INVERT' value64='5386'/>
<enum name='GL_ISOLINES' value64='36474'/>
<enum name='GL_KEEP' value64='7680'/>
<enum name='GL_LAST_VERTEX_CONVENTION' value64='36430'/>
<enum name='GL_LAST_VERTEX_CONVENTION_EXT' value64='36430'/>
<enum name='GL_LAYER_PROVOKING_VERTEX' value64='33374'/>
<enum name='GL_LEFT' value64='1030'/>
<enum name='GL_LEQUAL' value64='515'/>
<enum name='GL_LESS' value64='513'/>
<enum name='GL_LIGHT0' value64='16384'/>
<enum name='GL_LIGHT1' value64='16385'/>
<enum name='GL_LIGHT2' value64='16386'/>
<enum name='GL_LIGHT3' value64='16387'/>
<enum name='GL_LIGHT4' value64='16388'/>
<enum name='GL_LIGHT5' value64='16389'/>
<enum name='GL_LIGHT6' value64='16390'/>
<enum name='GL_LIGHT7' value64='16391'/>
<enum name='GL_LIGHTING' value64='2896'/>
<enum name='GL_LIGHTING_BIT' value64='64'/>
<enum name='GL_LIGHT_MODEL_AMBIENT' value64='2899'/>
<enum name='GL_LIGHT_MODEL_COLOR_CONTROL' value64='33272'/>
<enum name='GL_LIGHT_MODEL_COLOR_CONTROL_EXT' value64='33272'/>
<enum name='GL_LIGHT_MODEL_LOCAL_VIEWER' value64='2897'/>
<enum name='GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE' value64='34224'/>
<enum name='GL_LIGHT_MODEL_TWO_SIDE' value64='2898'/>
<enum name='GL_LINE' value64='6913'/>
<enum name='GL_LINEAR' value64='9729'/>
<enum name='GL_LINEAR_ATTENUATION' value64='4616'/>
<enum name='GL_LINEAR_MIPMAP_LINEAR' value64='9987'/>
<enum name='GL_LINEAR_MIPMAP_NEAREST' value64='9985'/>
<enum name='GL_LINES' value64='1'/>
<enum name='GL_LINES_ADJACENCY' value64='10'/>
<enum name='GL_LINES_ADJACENCY_EXT' value64='10'/>
<enum name='GL_LINE_BIT' value64='4'/>
<enum name='GL_LINE_LOOP' value64='2'/>
<enum name='GL_LINE_RESET_TOKEN' value64='1799'/>
<enum name='GL_LINE_SMOOTH' value64='2848'/>
<enum name='GL_LINE_SMOOTH_HINT' value64='3154'/>
<enum name='GL_LINE_STIPPLE' value64='2852'/>
<enum name='GL_LINE_STIPPLE_PATTERN' value64='2853'/>
<enum name='GL_LINE_STIPPLE_REPEAT' value64='2854'/>
<enum name='GL_LINE_STRIP' value64='3'/>
<enum name='GL_LINE_STRIP_ADJACENCY' value64='11'/>
<enum name='GL_LINE_STRIP_ADJACENCY_EXT' value64='11'/>
<enum name='GL_LINE_TOKEN' value64='1794'/>
<enum name='GL_LINE_WIDTH' value64='2849'/>
<enum name='GL_LINE_WIDTH_GRANULARITY' value64='2851'/>
<enum name='GL_LINE_WIDTH_RANGE' value64='2850'/>
<enum name='GL_LINK_STATUS' value64='35714'/>
<enum name='GL_LIST_BASE' value64='2866'/>
<enum name='GL_LIST_BIT' value64='131072'/>
<enum name='GL_LIST_INDEX' value64='2867'/>
<enum name='GL_LIST_MODE' value64='2864'/>
<enum name='GL_LOAD' value64='257'/>
<enum name='GL_LOGIC_OP' value64='3057'/>
<enum name='GL_LOGIC_OP_MODE' value64='3056'/>
<enum name='GL_LOWER_LEFT' value64='36001'/>
<enum name='GL_LOW_FLOAT' value64='36336'/>
<enum name='GL_LOW_INT' value64='36339'/>
<enum name='GL_LUMINANCE' value64='6409'/>
<enum name='GL_LUMINANCE12' value64='32833'/>
<enum name='GL_LUMINANCE12_ALPHA12' value64='32839'/>
<enum name='GL_LUMINANCE12_ALPHA4' value64='32838'/>
<enum name='GL_LUMINANCE16' value64='32834'/>
<enum name='GL_LUMINANCE16F_ARB' value64='34846'/>
<enum name='GL_LUMINANCE16I_EXT' value64='36236'/>
<enum name='GL_LUMINANCE16UI_EXT' value64='36218'/>
<enum name='GL_LUMINANCE16_ALPHA16' value64='32840'/>
<enum name='GL_LUMINANCE32F_ARB' value64='34840'/>
<enum name='GL_LUMINANCE32I_EXT' value64='36230'/>
<enum name='GL_LUMINANCE32UI_EXT' value64='36212'/>
<enum name='GL_LUMINANCE4' value64='32831'/>
<enum name='GL_LUMINANCE4_ALPHA4' value64='32835'/>
<enum name='GL_LUMINANCE6_ALPHA2' value64='32836'/>
<enum name='GL_LUMINANCE8' value64='32832'/>
<enum name='GL_LUMINANCE8I_EXT' value64='36242'/>
<enum name='GL_LUMINANCE8UI_EXT' value64='36224'/>
<enum name='GL_LUMINANCE8_ALPHA8' value64='32837'/>
<enum name='GL_LUMINANCE_ALPHA' value64='6410'/>
<enum name='GL_LUMINANCE_ALPHA16F_ARB' value64='34847'/>
<enum name='GL_LUMINANCE_ALPHA16I_EXT' value64='36237'/>
<enum name='GL_LUMINANCE_ALPHA16UI_EXT' value64='36219'/>
<enum name='GL_LUMINANCE_ALPHA32F_ARB' value64='34841'/>
<enum name='GL_LUMINANCE_ALPHA32I_EXT' value64='36231'/>
<enum name='GL_LUMINANCE_ALPHA32UI_EXT' value64='36213'/>
<enum name='GL_LUMINANCE_ALPHA8I_EXT' value64='36243'/>
<enum name='GL_LUMINANCE_ALPHA8UI_EXT' value64='36225'/>
<enum name='GL_LUMINANCE_ALPHA_FLOAT16_APPLE' value64='34847'/>
<enum name='GL_LUMINANCE_ALPHA_FLOAT16_ATI' value64='34847'/>
<enum name='GL_LUMINANCE_ALPHA_FLOAT32_APPLE' value64='34841'/>
<enum name='GL_LUMINANCE_ALPHA_FLOAT32_ATI' value64='34841'/>
<enum name='GL_LUMINANCE_ALPHA_INTEGER_EXT' value64='36253'/>
<enum name='GL_LUMINANCE_FLOAT16_APPLE' value64='34846'/>
<enum name='GL_LUMINANCE_FLOAT16_ATI' value64='34846'/>
<enum name='GL_LUMINANCE_FLOAT32_APPLE' value64='34840'/>
<enum name='GL_LUMINANCE_FLOAT32_ATI' value64='34840'/>
<enum name='GL_LUMINANCE_INTEGER_EXT' value64='36252'/>
<enum name='GL_MAJOR_VERSION' value64='33307'/>
<enum name='GL_MAP1_COLOR_4' value64='3472'/>
<enum name='GL_MAP1_GRID_DOMAIN' value64='3536'/>
<enum name='GL_MAP1_GRID_SEGMENTS' value64='3537'/>
<enum name='GL_MAP1_INDEX' value64='3473'/>
<enum name='GL_MAP1_NORMAL' value64='3474'/>
<enum name='GL_MAP1_TEXTURE_COORD_1' value64='3475'/>
<enum name='GL_MAP1_TEXTURE_COORD_2' value64='3476'/>
<enum name='GL_MAP1_TEXTURE_COORD_3' value64='3477'/>
<enum name='GL_MAP1_TEXTURE_COORD_4' value64='3478'/>
<enum name='GL_MAP1_VERTEX_3' value64='3479'/>
<enum name='GL_MAP1_VERTEX_4' value64='3480'/>
<enum name='GL_MAP2_COLOR_4' value64='3504'/>
<enum name='GL_MAP2_GRID_DOMAIN' value64='3538'/>
<enum name='GL_MAP2_GRID_SEGMENTS' value64='3539'/>
<enum name='GL_MAP2_INDEX' value64='3505'/>
<enum name='GL_MAP2_NORMAL' value64='3506'/>
<enum name='GL_MAP2_TEXTURE_COORD_1' value64='3507'/>
<enum name='GL_MAP2_TEXTURE_COORD_2' value64='3508'/>
<enum name='GL_MAP2_TEXTURE_COORD_3' value64='3509'/>
<enum name='GL_MAP2_TEXTURE_COORD_4' value64='3510'/>
<enum name='GL_MAP2_VERTEX_3' value64='3511'/>
<enum name='GL_MAP2_VERTEX_4' value64='3512'/>
<enum name='GL_MAP_COLOR' value64='3344'/>
<enum name='GL_MAP_FLUSH_EXPLICIT_BIT' value64='16'/>
<enum name='GL_MAP_INVALIDATE_BUFFER_BIT' value64='8'/>
<enum name='GL_MAP_INVALIDATE_RANGE_BIT' value64='4'/>
<enum name='GL_MAP_READ_BIT' value64='1'/>
<enum name='GL_MAP_STENCIL' value64='3345'/>
<enum name='GL_MAP_UNSYNCHRONIZED_BIT' value64='32'/>
<enum name='GL_MAP_WRITE_BIT' value64='2'/>
<enum name='GL_MATRIX0_ARB' value64='35008'/>
<enum name='GL_MATRIX10_ARB' value64='35018'/>
<enum name='GL_MATRIX11_ARB' value64='35019'/>
<enum name='GL_MATRIX12_ARB' value64='35020'/>
<enum name='GL_MATRIX13_ARB' value64='35021'/>
<enum name='GL_MATRIX14_ARB' value64='35022'/>
<enum name='GL_MATRIX15_ARB' value64='35023'/>
<enum name='GL_MATRIX16_ARB' value64='35024'/>
<enum name='GL_MATRIX17_ARB' value64='35025'/>
<enum name='GL_MATRIX18_ARB' value64='35026'/>
<enum name='GL_MATRIX19_ARB' value64='35027'/>
<enum name='GL_MATRIX1_ARB' value64='35009'/>
<enum name='GL_MATRIX20_ARB' value64='35028'/>
<enum name='GL_MATRIX21_ARB' value64='35029'/>
<enum name='GL_MATRIX22_ARB' value64='35030'/>
<enum name='GL_MATRIX23_ARB' value64='35031'/>
<enum name='GL_MATRIX24_ARB' value64='35032'/>
<enum name='GL_MATRIX25_ARB' value64='35033'/>
<enum name='GL_MATRIX26_ARB' value64='35034'/>
<enum name='GL_MATRIX27_ARB' value64='35035'/>
<enum name='GL_MATRIX28_ARB' value64='35036'/>
<enum name='GL_MATRIX29_ARB' value64='35037'/>
<enum name='GL_MATRIX2_ARB' value64='35010'/>
<enum name='GL_MATRIX30_ARB' value64='35038'/>
<enum name='GL_MATRIX31_ARB' value64='35039'/>
<enum name='GL_MATRIX3_ARB' value64='35011'/>
<enum name='GL_MATRIX4_ARB' value64='35012'/>
<enum name='GL_MATRIX5_ARB' value64='35013'/>
<enum name='GL_MATRIX6_ARB' value64='35014'/>
<enum name='GL_MATRIX7_ARB' value64='35015'/>
<enum name='GL_MATRIX8_ARB' value64='35016'/>
<enum name='GL_MATRIX9_ARB' value64='35017'/>
<enum name='GL_MATRIX_MODE' value64='2976'/>
<enum name='GL_MAX' value64='32776'/>
<enum name='GL_MAX_3D_TEXTURE_SIZE' value64='32883'/>
<enum name='GL_MAX_ARRAY_TEXTURE_LAYERS' value64='35071'/>
<enum name='GL_MAX_ARRAY_TEXTURE_LAYERS_EXT' value64='35071'/>
<enum name='GL_MAX_ATTRIB_STACK_DEPTH' value64='3381'/>
<enum name='GL_MAX_BINDABLE_UNIFORM_SIZE_EXT' value64='36333'/>
<enum name='GL_MAX_CLIENT_ATTRIB_STACK_DEPTH' value64='3387'/>
<enum name='GL_MAX_CLIP_DISTANCES' value64='3378'/>
<enum name='GL_MAX_CLIP_PLANES' value64='3378'/>
<enum name='GL_MAX_COLOR_ATTACHMENTS' value64='36063'/>
<enum name='GL_MAX_COLOR_ATTACHMENTS_EXT' value64='36063'/>
<enum name='GL_MAX_COLOR_MATRIX_STACK_DEPTH' value64='32947'/>
<enum name='GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI' value64='32947'/>
<enum name='GL_MAX_COLOR_TEXTURE_SAMPLES' value64='37134'/>
<enum name='GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS' value64='35379'/>
<enum name='GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS' value64='35378'/>
<enum name='GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS' value64='36382'/>
<enum name='GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS' value64='36383'/>
<enum name='GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS' value64='35661'/>
<enum name='GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB' value64='35661'/>
<enum name='GL_MAX_COMBINED_UNIFORM_BLOCKS' value64='35374'/>
<enum name='GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS' value64='35377'/>
<enum name='GL_MAX_CONVOLUTION_HEIGHT' value64='32795'/>
<enum name='GL_MAX_CONVOLUTION_WIDTH' value64='32794'/>
<enum name='GL_MAX_CUBE_MAP_TEXTURE_SIZE' value64='34076'/>
<enum name='GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB' value64='34076'/>
<enum name='GL_MAX_DEPTH_TEXTURE_SAMPLES' value64='37135'/>
<enum name='GL_MAX_DRAW_BUFFERS' value64='34852'/>
<enum name='GL_MAX_DRAW_BUFFERS_ARB' value64='34852'/>
<enum name='GL_MAX_DUAL_SOURCE_DRAW_BUFFERS' value64='35068'/>
<enum name='GL_MAX_ELEMENTS_INDICES' value64='33001'/>
<enum name='GL_MAX_ELEMENTS_INDICES_EXT' value64='33001'/>
<enum name='GL_MAX_ELEMENTS_VERTICES' value64='33000'/>
<enum name='GL_MAX_ELEMENTS_VERTICES_EXT' value64='33000'/>
<enum name='GL_MAX_EVAL_ORDER' value64='3376'/>
<enum name='GL_MAX_EXT' value64='32776'/>
<enum name='GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT' value64='36323'/>
<enum name='GL_MAX_FRAGMENT_INPUT_COMPONENTS' value64='37157'/>
<enum name='GL_MAX_FRAGMENT_INTERPOLATION_OFFSET' value64='36444'/>
<enum name='GL_MAX_FRAGMENT_UNIFORM_BLOCKS' value64='35373'/>
<enum name='GL_MAX_FRAGMENT_UNIFORM_COMPONENTS' value64='35657'/>
<enum name='GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB' value64='35657'/>
<enum name='GL_MAX_FRAGMENT_UNIFORM_VECTORS' value64='36349'/>
<enum name='GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT' value64='36324'/>
<enum name='GL_MAX_GEOMETRY_INPUT_COMPONENTS' value64='37155'/>
<enum name='GL_MAX_GEOMETRY_OUTPUT_COMPONENTS' value64='37156'/>
<enum name='GL_MAX_GEOMETRY_OUTPUT_VERTICES' value64='36320'/>
<enum name='GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT' value64='36320'/>
<enum name='GL_MAX_GEOMETRY_SHADER_INVOCATIONS' value64='36442'/>
<enum name='GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS' value64='35881'/>
<enum name='GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT' value64='35881'/>
<enum name='GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS' value64='36321'/>
<enum name='GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT' value64='36321'/>
<enum name='GL_MAX_GEOMETRY_UNIFORM_BLOCKS' value64='35372'/>
<enum name='GL_MAX_GEOMETRY_UNIFORM_COMPONENTS' value64='36319'/>
<enum name='GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT' value64='36319'/>
<enum name='GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT' value64='36317'/>
<enum name='GL_MAX_INTEGER_SAMPLES' value64='37136'/>
<enum name='GL_MAX_LIGHTS' value64='3377'/>
<enum name='GL_MAX_LIST_NESTING' value64='2865'/>
<enum name='GL_MAX_MODELVIEW_STACK_DEPTH' value64='3382'/>
<enum name='GL_MAX_NAME_STACK_DEPTH' value64='3383'/>
<enum name='GL_MAX_PATCH_VERTICES' value64='36477'/>
<enum name='GL_MAX_PIXEL_MAP_TABLE' value64='3380'/>
<enum name='GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB' value64='34993'/>
<enum name='GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB' value64='34827'/>
<enum name='GL_MAX_PROGRAM_ATTRIBS_ARB' value64='34989'/>
<enum name='GL_MAX_PROGRAM_CALL_DEPTH_NV' value64='35061'/>
<enum name='GL_MAX_PROGRAM_ENV_PARAMETERS_ARB' value64='34997'/>
<enum name='GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV' value64='35060'/>
<enum name='GL_MAX_PROGRAM_IF_DEPTH_NV' value64='35062'/>
<enum name='GL_MAX_PROGRAM_INSTRUCTIONS_ARB' value64='34977'/>
<enum name='GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB' value64='34996'/>
<enum name='GL_MAX_PROGRAM_LOOP_COUNT_NV' value64='35064'/>
<enum name='GL_MAX_PROGRAM_LOOP_DEPTH_NV' value64='35063'/>
<enum name='GL_MAX_PROGRAM_MATRICES_ARB' value64='34351'/>
<enum name='GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB' value64='34350'/>
<enum name='GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB' value64='34995'/>
<enum name='GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB' value64='34830'/>
<enum name='GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB' value64='34991'/>
<enum name='GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB' value64='34979'/>
<enum name='GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB' value64='34987'/>
<enum name='GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB' value64='34983'/>
<enum name='GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB' value64='34832'/>
<enum name='GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB' value64='34831'/>
<enum name='GL_MAX_PROGRAM_PARAMETERS_ARB' value64='34985'/>
<enum name='GL_MAX_PROGRAM_TEMPORARIES_ARB' value64='34981'/>
<enum name='GL_MAX_PROGRAM_TEXEL_OFFSET' value64='35077'/>
<enum name='GL_MAX_PROGRAM_TEXEL_OFFSET_EXT' value64='35077'/>
<enum name='GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB' value64='36767'/>
<enum name='GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET' value64='36447'/>
<enum name='GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB' value64='36447'/>
<enum name='GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB' value64='34829'/>
<enum name='GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB' value64='34828'/>
<enum name='GL_MAX_PROJECTION_STACK_DEPTH' value64='3384'/>
<enum name='GL_MAX_RECTANGLE_TEXTURE_SIZE' value64='34040'/>
<enum name='GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB' value64='34040'/>
<enum name='GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT' value64='34040'/>
<enum name='GL_MAX_RENDERBUFFER_SIZE' value64='34024'/>
<enum name='GL_MAX_RENDERBUFFER_SIZE_EXT' value64='34024'/>
<enum name='GL_MAX_SAMPLES' value64='36183'/>
<enum name='GL_MAX_SAMPLES_EXT' value64='36183'/>
<enum name='GL_MAX_SAMPLE_MASK_WORDS' value64='36441'/>
<enum name='GL_MAX_SERVER_WAIT_TIMEOUT' value64='37137'/>
<enum name='GL_MAX_SHININESS_NV' value64='34052'/>
<enum name='GL_MAX_SPOT_EXPONENT_NV' value64='34053'/>
<enum name='GL_MAX_SUBROUTINES' value64='36327'/>
<enum name='GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS' value64='36328'/>
<enum name='GL_MAX_TESS_CONTROL_INPUT_COMPONENTS' value64='34924'/>
<enum name='GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS' value64='36483'/>
<enum name='GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS' value64='36481'/>
<enum name='GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS' value64='36485'/>
<enum name='GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS' value64='36489'/>
<enum name='GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS' value64='36479'/>
<enum name='GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS' value64='34925'/>
<enum name='GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS' value64='36486'/>
<enum name='GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS' value64='36482'/>
<enum name='GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS' value64='36490'/>
<enum name='GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS' value64='36480'/>
<enum name='GL_MAX_TESS_GEN_LEVEL' value64='36478'/>
<enum name='GL_MAX_TESS_PATCH_COMPONENTS' value64='36484'/>
<enum name='GL_MAX_TEXTURE_BUFFER_SIZE' value64='35883'/>
<enum name='GL_MAX_TEXTURE_COORDS' value64='34929'/>
<enum name='GL_MAX_TEXTURE_COORDS_ARB' value64='34929'/>
<enum name='GL_MAX_TEXTURE_IMAGE_UNITS' value64='34930'/>
<enum name='GL_MAX_TEXTURE_IMAGE_UNITS_ARB' value64='34930'/>
<enum name='GL_MAX_TEXTURE_LOD_BIAS' value64='34045'/>
<enum name='GL_MAX_TEXTURE_LOD_BIAS_EXT' value64='34045'/>
<enum name='GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT' value64='34047'/>
<enum name='GL_MAX_TEXTURE_SIZE' value64='3379'/>
<enum name='GL_MAX_TEXTURE_STACK_DEPTH' value64='3385'/>
<enum name='GL_MAX_TEXTURE_UNITS' value64='34018'/>
<enum name='GL_MAX_TEXTURE_UNITS_ARB' value64='34018'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_BUFFERS' value64='36464'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS' value64='35978'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT' value64='35978'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS' value64='35979'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT' value64='35979'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS' value64='35968'/>
<enum name='GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT' value64='35968'/>
<enum name='GL_MAX_UNIFORM_BLOCK_SIZE' value64='35376'/>
<enum name='GL_MAX_UNIFORM_BUFFER_BINDINGS' value64='35375'/>
<enum name='GL_MAX_VARYING_COMPONENTS' value64='35659'/>
<enum name='GL_MAX_VARYING_COMPONENTS_EXT' value64='35659'/>
<enum name='GL_MAX_VARYING_FLOATS' value64='35659'/>
<enum name='GL_MAX_VARYING_FLOATS_ARB' value64='35659'/>
<enum name='GL_MAX_VARYING_VECTORS' value64='36348'/>
<enum name='GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE' value64='34080'/>
<enum name='GL_MAX_VERTEX_ATTRIBS' value64='34921'/>
<enum name='GL_MAX_VERTEX_ATTRIBS_ARB' value64='34921'/>
<enum name='GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT' value64='36322'/>
<enum name='GL_MAX_VERTEX_OUTPUT_COMPONENTS' value64='37154'/>
<enum name='GL_MAX_VERTEX_STREAMS' value64='36465'/>
<enum name='GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS' value64='35660'/>
<enum name='GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB' value64='35660'/>
<enum name='GL_MAX_VERTEX_UNIFORM_BLOCKS' value64='35371'/>
<enum name='GL_MAX_VERTEX_UNIFORM_COMPONENTS' value64='35658'/>
<enum name='GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB' value64='35658'/>
<enum name='GL_MAX_VERTEX_UNIFORM_VECTORS' value64='36347'/>
<enum name='GL_MAX_VERTEX_UNITS_ARB' value64='34468'/>
<enum name='GL_MAX_VERTEX_VARYING_COMPONENTS_EXT' value64='36318'/>
<enum name='GL_MAX_VIEWPORTS' value64='33371'/>
<enum name='GL_MAX_VIEWPORT_DIMS' value64='3386'/>
<enum name='GL_MAX_WEIGHTED_ATI' value64='34686'/>
<enum name='GL_MEDIUM_FLOAT' value64='36337'/>
<enum name='GL_MEDIUM_INT' value64='36340'/>
<enum name='GL_MIN' value64='32775'/>
<enum name='GL_MINMAX' value64='32814'/>
<enum name='GL_MINMAX_FORMAT' value64='32815'/>
<enum name='GL_MINMAX_SINK' value64='32816'/>
<enum name='GL_MINOR_VERSION' value64='33308'/>
<enum name='GL_MIN_EXT' value64='32775'/>
<enum name='GL_MIN_FRAGMENT_INTERPOLATION_OFFSET' value64='36443'/>
<enum name='GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE' value64='35344'/>
<enum name='GL_MIN_PROGRAM_TEXEL_OFFSET' value64='35076'/>
<enum name='GL_MIN_PROGRAM_TEXEL_OFFSET_EXT' value64='35076'/>
<enum name='GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET' value64='36446'/>
<enum name='GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB' value64='36446'/>
<enum name='GL_MIN_SAMPLE_SHADING_VALUE' value64='35895'/>
<enum name='GL_MIN_SAMPLE_SHADING_VALUE_ARB' value64='35895'/>
<enum name='GL_MIN_WEIGHTED_ATI' value64='34685'/>
<enum name='GL_MIRRORED_REPEAT' value64='33648'/>
<enum name='GL_MIRRORED_REPEAT_ARB' value64='33648'/>
<enum name='GL_MIRROR_CLAMP_ATI' value64='34626'/>
<enum name='GL_MIRROR_CLAMP_EXT' value64='34626'/>
<enum name='GL_MIRROR_CLAMP_TO_BORDER_EXT' value64='35090'/>
<enum name='GL_MIRROR_CLAMP_TO_EDGE_ATI' value64='34627'/>
<enum name='GL_MIRROR_CLAMP_TO_EDGE_EXT' value64='34627'/>
<enum name='GL_MODELVIEW' value64='5888'/>
<enum name='GL_MODELVIEW0_ARB' value64='5888'/>
<enum name='GL_MODELVIEW10_ARB' value64='34602'/>
<enum name='GL_MODELVIEW11_ARB' value64='34603'/>
<enum name='GL_MODELVIEW12_ARB' value64='34604'/>
<enum name='GL_MODELVIEW13_ARB' value64='34605'/>
<enum name='GL_MODELVIEW14_ARB' value64='34606'/>
<enum name='GL_MODELVIEW15_ARB' value64='34607'/>
<enum name='GL_MODELVIEW16_ARB' value64='34608'/>
<enum name='GL_MODELVIEW17_ARB' value64='34609'/>
<enum name='GL_MODELVIEW18_ARB' value64='34610'/>
<enum name='GL_MODELVIEW19_ARB' value64='34611'/>
<enum name='GL_MODELVIEW1_ARB' value64='34058'/>
<enum name='GL_MODELVIEW20_ARB' value64='34612'/>
<enum name='GL_MODELVIEW21_ARB' value64='34613'/>
<enum name='GL_MODELVIEW22_ARB' value64='34614'/>
<enum name='GL_MODELVIEW23_ARB' value64='34615'/>
<enum name='GL_MODELVIEW24_ARB' value64='34616'/>
<enum name='GL_MODELVIEW25_ARB' value64='34617'/>
<enum name='GL_MODELVIEW26_ARB' value64='34618'/>
<enum name='GL_MODELVIEW27_ARB' value64='34619'/>
<enum name='GL_MODELVIEW28_ARB' value64='34620'/>
<enum name='GL_MODELVIEW29_ARB' value64='34621'/>
<enum name='GL_MODELVIEW2_ARB' value64='34594'/>
<enum name='GL_MODELVIEW30_ARB' value64='34622'/>
<enum name='GL_MODELVIEW31_ARB' value64='34623'/>
<enum name='GL_MODELVIEW3_ARB' value64='34595'/>
<enum name='GL_MODELVIEW4_ARB' value64='34596'/>
<enum name='GL_MODELVIEW5_ARB' value64='34597'/>
<enum name='GL_MODELVIEW6_ARB' value64='34598'/>
<enum name='GL_MODELVIEW7_ARB' value64='34599'/>
<enum name='GL_MODELVIEW8_ARB' value64='34600'/>
<enum name='GL_MODELVIEW9_ARB' value64='34601'/>
<enum name='GL_MODELVIEW_MATRIX' value64='2982'/>
<enum name='GL_MODELVIEW_STACK_DEPTH' value64='2979'/>
<enum name='GL_MODULATE' value64='8448'/>
<enum name='GL_MODULATE_ADD_ATI' value64='34628'/>
<enum name='GL_MODULATE_SIGNED_ADD_ATI' value64='34629'/>
<enum name='GL_MODULATE_SUBTRACT_ATI' value64='34630'/>
<enum name='GL_MULT' value64='259'/>
<enum name='GL_MULTISAMPLE' value64='32925'/>
<enum name='GL_MULTISAMPLE_ARB' value64='32925'/>
<enum name='GL_MULTISAMPLE_BIT' value64='536870912'/>
<enum name='GL_MULTISAMPLE_BIT_ARB' value64='536870912'/>
<enum name='GL_MULTISAMPLE_FILTER_HINT_NV' value64='34100'/>
<enum name='GL_N3F_V3F' value64='10789'/>
<enum name='GL_NAMED_STRING_LENGTH_ARB' value64='36329'/>
<enum name='GL_NAMED_STRING_TYPE_ARB' value64='36330'/>
<enum name='GL_NAME_STACK_DEPTH' value64='3440'/>
<enum name='GL_NAND' value64='5390'/>
<enum name='GL_NEAREST' value64='9728'/>
<enum name='GL_NEAREST_MIPMAP_LINEAR' value64='9986'/>
<enum name='GL_NEAREST_MIPMAP_NEAREST' value64='9984'/>
<enum name='GL_NEVER' value64='512'/>
<enum name='GL_NICEST' value64='4354'/>
<enum name='GL_NONE' value64='0'/>
<enum name='GL_NOOP' value64='5381'/>
<enum name='GL_NOR' value64='5384'/>
<enum name='GL_NORMALIZE' value64='2977'/>
<enum name='GL_NORMAL_ARRAY' value64='32885'/>
<enum name='GL_NORMAL_ARRAY_BUFFER_BINDING' value64='34967'/>
<enum name='GL_NORMAL_ARRAY_BUFFER_BINDING_ARB' value64='34967'/>
<enum name='GL_NORMAL_ARRAY_POINTER' value64='32911'/>
<enum name='GL_NORMAL_ARRAY_STRIDE' value64='32895'/>
<enum name='GL_NORMAL_ARRAY_TYPE' value64='32894'/>
<enum name='GL_NORMAL_MAP' value64='34065'/>
<enum name='GL_NORMAL_MAP_ARB' value64='34065'/>
<enum name='GL_NORMAL_MAP_NV' value64='34065'/>
<enum name='GL_NOTEQUAL' value64='517'/>
<enum name='GL_NO_ERROR' value64='0'/>
<enum name='GL_NUM_COMPATIBLE_SUBROUTINES' value64='36426'/>
<enum name='GL_NUM_COMPRESSED_TEXTURE_FORMATS' value64='34466'/>
<enum name='GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB' value64='34466'/>
<enum name='GL_NUM_EXTENSIONS' value64='33309'/>
<enum name='GL_NUM_PROGRAM_BINARY_FORMATS' value64='34814'/>
<enum name='GL_NUM_SAMPLE_COUNTS' value64='37760'/>
<enum name='GL_NUM_SHADER_BINARY_FORMATS' value64='36345'/>
<enum name='GL_NV_blend_square' value64='1'/>
<enum name='GL_NV_conditional_render' value64='1'/>
<enum name='GL_NV_depth_clamp' value64='1'/>
<enum name='GL_NV_fog_distance' value64='1'/>
<enum name='GL_NV_fragment_program2' value64='1'/>
<enum name='GL_NV_fragment_program_option' value64='1'/>
<enum name='GL_NV_light_max_exponent' value64='1'/>
<enum name='GL_NV_multisample_filter_hint' value64='1'/>
<enum name='GL_NV_point_sprite' value64='1'/>
<enum name='GL_NV_texgen_reflection' value64='1'/>
<enum name='GL_NV_texture_barrier' value64='1'/>
<enum name='GL_NV_vertex_program2_option' value64='1'/>
<enum name='GL_NV_vertex_program3' value64='1'/>
<enum name='GL_OBJECT_ACTIVE_ATTRIBUTES_ARB' value64='35721'/>
<enum name='GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB' value64='35722'/>
<enum name='GL_OBJECT_ACTIVE_UNIFORMS_ARB' value64='35718'/>
<enum name='GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB' value64='35719'/>
<enum name='GL_OBJECT_ATTACHED_OBJECTS_ARB' value64='35717'/>
<enum name='GL_OBJECT_COMPILE_STATUS_ARB' value64='35713'/>
<enum name='GL_OBJECT_DELETE_STATUS_ARB' value64='35712'/>
<enum name='GL_OBJECT_INFO_LOG_LENGTH_ARB' value64='35716'/>
<enum name='GL_OBJECT_LINEAR' value64='9217'/>
<enum name='GL_OBJECT_LINK_STATUS_ARB' value64='35714'/>
<enum name='GL_OBJECT_PLANE' value64='9473'/>
<enum name='GL_OBJECT_SHADER_SOURCE_LENGTH_ARB' value64='35720'/>
<enum name='GL_OBJECT_SUBTYPE_ARB' value64='35663'/>
<enum name='GL_OBJECT_TYPE' value64='37138'/>
<enum name='GL_OBJECT_TYPE_ARB' value64='35662'/>
<enum name='GL_OBJECT_VALIDATE_STATUS_ARB' value64='35715'/>
<enum name='GL_ONE' value64='1'/>
<enum name='GL_ONE_MINUS_CONSTANT_ALPHA' value64='32772'/>
<enum name='GL_ONE_MINUS_CONSTANT_ALPHA_EXT' value64='32772'/>
<enum name='GL_ONE_MINUS_CONSTANT_COLOR' value64='32770'/>
<enum name='GL_ONE_MINUS_CONSTANT_COLOR_EXT' value64='32770'/>
<enum name='GL_ONE_MINUS_DST_ALPHA' value64='773'/>
<enum name='GL_ONE_MINUS_DST_COLOR' value64='775'/>
<enum name='GL_ONE_MINUS_SRC1_ALPHA' value64='35067'/>
<enum name='GL_ONE_MINUS_SRC1_COLOR' value64='35066'/>
<enum name='GL_ONE_MINUS_SRC_ALPHA' value64='771'/>
<enum name='GL_ONE_MINUS_SRC_COLOR' value64='769'/>
<enum name='GL_OPERAND0_ALPHA' value64='34200'/>
<enum name='GL_OPERAND0_ALPHA_ARB' value64='34200'/>
<enum name='GL_OPERAND0_RGB' value64='34192'/>
<enum name='GL_OPERAND0_RGB_ARB' value64='34192'/>
<enum name='GL_OPERAND1_ALPHA' value64='34201'/>
<enum name='GL_OPERAND1_ALPHA_ARB' value64='34201'/>
<enum name='GL_OPERAND1_RGB' value64='34193'/>
<enum name='GL_OPERAND1_RGB_ARB' value64='34193'/>
<enum name='GL_OPERAND2_ALPHA' value64='34202'/>
<enum name='GL_OPERAND2_ALPHA_ARB' value64='34202'/>
<enum name='GL_OPERAND2_RGB' value64='34194'/>
<enum name='GL_OPERAND2_RGB_ARB' value64='34194'/>
<enum name='GL_OR' value64='5383'/>
<enum name='GL_ORDER' value64='2561'/>
<enum name='GL_OR_INVERTED' value64='5389'/>
<enum name='GL_OR_REVERSE' value64='5387'/>
<enum name='GL_OUT_OF_MEMORY' value64='1285'/>
<enum name='GL_PACK_ALIGNMENT' value64='3333'/>
<enum name='GL_PACK_IMAGE_BYTES_APPLE' value64='35351'/>
<enum name='GL_PACK_IMAGE_HEIGHT' value64='32876'/>
<enum name='GL_PACK_LSB_FIRST' value64='3329'/>
<enum name='GL_PACK_ROW_BYTES_APPLE' value64='35349'/>
<enum name='GL_PACK_ROW_LENGTH' value64='3330'/>
<enum name='GL_PACK_SKIP_IMAGES' value64='32875'/>
<enum name='GL_PACK_SKIP_PIXELS' value64='3332'/>
<enum name='GL_PACK_SKIP_ROWS' value64='3331'/>
<enum name='GL_PACK_SWAP_BYTES' value64='3328'/>
<enum name='GL_PASS_THROUGH_TOKEN' value64='1792'/>
<enum name='GL_PATCHES' value64='14'/>
<enum name='GL_PATCH_DEFAULT_INNER_LEVEL' value64='36467'/>
<enum name='GL_PATCH_DEFAULT_OUTER_LEVEL' value64='36468'/>
<enum name='GL_PATCH_VERTICES' value64='36466'/>
<enum name='GL_PERSPECTIVE_CORRECTION_HINT' value64='3152'/>
<enum name='GL_PIXEL_MAP_A_TO_A' value64='3193'/>
<enum name='GL_PIXEL_MAP_A_TO_A_SIZE' value64='3257'/>
<enum name='GL_PIXEL_MAP_B_TO_B' value64='3192'/>
<enum name='GL_PIXEL_MAP_B_TO_B_SIZE' value64='3256'/>
<enum name='GL_PIXEL_MAP_G_TO_G' value64='3191'/>
<enum name='GL_PIXEL_MAP_G_TO_G_SIZE' value64='3255'/>
<enum name='GL_PIXEL_MAP_I_TO_A' value64='3189'/>
<enum name='GL_PIXEL_MAP_I_TO_A_SIZE' value64='3253'/>
<enum name='GL_PIXEL_MAP_I_TO_B' value64='3188'/>
<enum name='GL_PIXEL_MAP_I_TO_B_SIZE' value64='3252'/>
<enum name='GL_PIXEL_MAP_I_TO_G' value64='3187'/>
<enum name='GL_PIXEL_MAP_I_TO_G_SIZE' value64='3251'/>
<enum name='GL_PIXEL_MAP_I_TO_I' value64='3184'/>
<enum name='GL_PIXEL_MAP_I_TO_I_SIZE' value64='3248'/>
<enum name='GL_PIXEL_MAP_I_TO_R' value64='3186'/>
<enum name='GL_PIXEL_MAP_I_TO_R_SIZE' value64='3250'/>
<enum name='GL_PIXEL_MAP_R_TO_R' value64='3190'/>
<enum name='GL_PIXEL_MAP_R_TO_R_SIZE' value64='3254'/>
<enum name='GL_PIXEL_MAP_S_TO_S' value64='3185'/>
<enum name='GL_PIXEL_MAP_S_TO_S_SIZE' value64='3249'/>
<enum name='GL_PIXEL_MODE_BIT' value64='32'/>
<enum name='GL_PIXEL_PACK_BUFFER' value64='35051'/>
<enum name='GL_PIXEL_PACK_BUFFER_ARB' value64='35051'/>
<enum name='GL_PIXEL_PACK_BUFFER_BINDING' value64='35053'/>
<enum name='GL_PIXEL_PACK_BUFFER_BINDING_ARB' value64='35053'/>
<enum name='GL_PIXEL_UNPACK_BUFFER' value64='35052'/>
<enum name='GL_PIXEL_UNPACK_BUFFER_ARB' value64='35052'/>
<enum name='GL_PIXEL_UNPACK_BUFFER_BINDING' value64='35055'/>
<enum name='GL_PIXEL_UNPACK_BUFFER_BINDING_ARB' value64='35055'/>
<enum name='GL_POINT' value64='6912'/>
<enum name='GL_POINTS' value64='0'/>
<enum name='GL_POINT_BIT' value64='2'/>
<enum name='GL_POINT_DISTANCE_ATTENUATION' value64='33065'/>
<enum name='GL_POINT_DISTANCE_ATTENUATION_ARB' value64='33065'/>
<enum name='GL_POINT_FADE_THRESHOLD_SIZE' value64='33064'/>
<enum name='GL_POINT_FADE_THRESHOLD_SIZE_ARB' value64='33064'/>
<enum name='GL_POINT_SIZE' value64='2833'/>
<enum name='GL_POINT_SIZE_ARRAY_APPLE' value64='35740'/>
<enum name='GL_POINT_SIZE_ARRAY_BUFFER_BINDING_APPLE' value64='35743'/>
<enum name='GL_POINT_SIZE_ARRAY_POINTER_APPLE' value64='35212'/>
<enum name='GL_POINT_SIZE_ARRAY_STRIDE_APPLE' value64='35211'/>
<enum name='GL_POINT_SIZE_ARRAY_TYPE_APPLE' value64='35210'/>
<enum name='GL_POINT_SIZE_GRANULARITY' value64='2835'/>
<enum name='GL_POINT_SIZE_MAX' value64='33063'/>
<enum name='GL_POINT_SIZE_MAX_ARB' value64='33063'/>
<enum name='GL_POINT_SIZE_MIN' value64='33062'/>
<enum name='GL_POINT_SIZE_MIN_ARB' value64='33062'/>
<enum name='GL_POINT_SIZE_RANGE' value64='2834'/>
<enum name='GL_POINT_SMOOTH' value64='2832'/>
<enum name='GL_POINT_SMOOTH_HINT' value64='3153'/>
<enum name='GL_POINT_SPRITE' value64='34913'/>
<enum name='GL_POINT_SPRITE_ARB' value64='34913'/>
<enum name='GL_POINT_SPRITE_COORD_ORIGIN' value64='36000'/>
<enum name='GL_POINT_SPRITE_NV' value64='34913'/>
<enum name='GL_POINT_SPRITE_R_MODE_NV' value64='34915'/>
<enum name='GL_POINT_TOKEN' value64='1793'/>
<enum name='GL_POLYGON' value64='9'/>
<enum name='GL_POLYGON_BIT' value64='8'/>
<enum name='GL_POLYGON_MODE' value64='2880'/>
<enum name='GL_POLYGON_OFFSET_FACTOR' value64='32824'/>
<enum name='GL_POLYGON_OFFSET_FILL' value64='32823'/>
<enum name='GL_POLYGON_OFFSET_LINE' value64='10754'/>
<enum name='GL_POLYGON_OFFSET_POINT' value64='10753'/>
<enum name='GL_POLYGON_OFFSET_UNITS' value64='10752'/>
<enum name='GL_POLYGON_SMOOTH' value64='2881'/>
<enum name='GL_POLYGON_SMOOTH_HINT' value64='3155'/>
<enum name='GL_POLYGON_STIPPLE' value64='2882'/>
<enum name='GL_POLYGON_STIPPLE_BIT' value64='16'/>
<enum name='GL_POLYGON_TOKEN' value64='1795'/>
<enum name='GL_POSITION' value64='4611'/>
<enum name='GL_POST_COLOR_MATRIX_ALPHA_BIAS' value64='32955'/>
<enum name='GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI' value64='32955'/>
<enum name='GL_POST_COLOR_MATRIX_ALPHA_SCALE' value64='32951'/>
<enum name='GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI' value64='32951'/>
<enum name='GL_POST_COLOR_MATRIX_BLUE_BIAS' value64='32954'/>
<enum name='GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI' value64='32954'/>
<enum name='GL_POST_COLOR_MATRIX_BLUE_SCALE' value64='32950'/>
<enum name='GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI' value64='32950'/>
<enum name='GL_POST_COLOR_MATRIX_COLOR_TABLE' value64='32978'/>
<enum name='GL_POST_COLOR_MATRIX_GREEN_BIAS' value64='32953'/>
<enum name='GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI' value64='32953'/>
<enum name='GL_POST_COLOR_MATRIX_GREEN_SCALE' value64='32949'/>
<enum name='GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI' value64='32949'/>
<enum name='GL_POST_COLOR_MATRIX_RED_BIAS' value64='32952'/>
<enum name='GL_POST_COLOR_MATRIX_RED_BIAS_SGI' value64='32952'/>
<enum name='GL_POST_COLOR_MATRIX_RED_SCALE' value64='32948'/>
<enum name='GL_POST_COLOR_MATRIX_RED_SCALE_SGI' value64='32948'/>
<enum name='GL_POST_CONVOLUTION_ALPHA_BIAS' value64='32803'/>
<enum name='GL_POST_CONVOLUTION_ALPHA_SCALE' value64='32799'/>
<enum name='GL_POST_CONVOLUTION_BLUE_BIAS' value64='32802'/>
<enum name='GL_POST_CONVOLUTION_BLUE_SCALE' value64='32798'/>
<enum name='GL_POST_CONVOLUTION_COLOR_TABLE' value64='32977'/>
<enum name='GL_POST_CONVOLUTION_GREEN_BIAS' value64='32801'/>
<enum name='GL_POST_CONVOLUTION_GREEN_SCALE' value64='32797'/>
<enum name='GL_POST_CONVOLUTION_RED_BIAS' value64='32800'/>
<enum name='GL_POST_CONVOLUTION_RED_SCALE' value64='32796'/>
<enum name='GL_PREVIOUS' value64='34168'/>
<enum name='GL_PREVIOUS_ARB' value64='34168'/>
<enum name='GL_PRIMARY_COLOR' value64='34167'/>
<enum name='GL_PRIMARY_COLOR_ARB' value64='34167'/>
<enum name='GL_PRIMITIVES_GENERATED' value64='35975'/>
<enum name='GL_PRIMITIVES_GENERATED_EXT' value64='35975'/>
<enum name='GL_PRIMITIVE_RESTART' value64='36765'/>
<enum name='GL_PRIMITIVE_RESTART_INDEX' value64='36766'/>
<enum name='GL_PROGRAM_ADDRESS_REGISTERS_ARB' value64='34992'/>
<enum name='GL_PROGRAM_ALU_INSTRUCTIONS_ARB' value64='34821'/>
<enum name='GL_PROGRAM_ATTRIBS_ARB' value64='34988'/>
<enum name='GL_PROGRAM_BINARY_FORMATS' value64='34815'/>
<enum name='GL_PROGRAM_BINARY_LENGTH' value64='34625'/>
<enum name='GL_PROGRAM_BINARY_RETRIEVABLE_HINT' value64='33367'/>
<enum name='GL_PROGRAM_BINDING_ARB' value64='34423'/>
<enum name='GL_PROGRAM_ERROR_POSITION_ARB' value64='34379'/>
<enum name='GL_PROGRAM_ERROR_STRING_ARB' value64='34932'/>
<enum name='GL_PROGRAM_FORMAT_ARB' value64='34934'/>
<enum name='GL_PROGRAM_FORMAT_ASCII_ARB' value64='34933'/>
<enum name='GL_PROGRAM_INSTRUCTIONS_ARB' value64='34976'/>
<enum name='GL_PROGRAM_LENGTH_ARB' value64='34343'/>
<enum name='GL_PROGRAM_NAME_ARB' value64='34423'/>
<enum name='GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB' value64='34994'/>
<enum name='GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB' value64='34824'/>
<enum name='GL_PROGRAM_NATIVE_ATTRIBS_ARB' value64='34990'/>
<enum name='GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB' value64='34978'/>
<enum name='GL_PROGRAM_NATIVE_PARAMETERS_ARB' value64='34986'/>
<enum name='GL_PROGRAM_NATIVE_TEMPORARIES_ARB' value64='34982'/>
<enum name='GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB' value64='34826'/>
<enum name='GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB' value64='34825'/>
<enum name='GL_PROGRAM_OBJECT_ARB' value64='35648'/>
<enum name='GL_PROGRAM_OBJECT_EXT' value64='35648'/>
<enum name='GL_PROGRAM_PARAMETERS_ARB' value64='34984'/>
<enum name='GL_PROGRAM_PIPELINE_BINDING' value64='33370'/>
<enum name='GL_PROGRAM_POINT_SIZE' value64='34370'/>
<enum name='GL_PROGRAM_POINT_SIZE_EXT' value64='34370'/>
<enum name='GL_PROGRAM_SEPARABLE' value64='33368'/>
<enum name='GL_PROGRAM_STRING_ARB' value64='34344'/>
<enum name='GL_PROGRAM_TEMPORARIES_ARB' value64='34980'/>
<enum name='GL_PROGRAM_TEX_INDIRECTIONS_ARB' value64='34823'/>
<enum name='GL_PROGRAM_TEX_INSTRUCTIONS_ARB' value64='34822'/>
<enum name='GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB' value64='34998'/>
<enum name='GL_PROJECTION' value64='5889'/>
<enum name='GL_PROJECTION_MATRIX' value64='2983'/>
<enum name='GL_PROJECTION_STACK_DEPTH' value64='2980'/>
<enum name='GL_PROVOKING_VERTEX' value64='36431'/>
<enum name='GL_PROVOKING_VERTEX_EXT' value64='36431'/>
<enum name='GL_PROXY_COLOR_TABLE' value64='32979'/>
<enum name='GL_PROXY_HISTOGRAM' value64='32805'/>
<enum name='GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE' value64='32981'/>
<enum name='GL_PROXY_POST_CONVOLUTION_COLOR_TABLE' value64='32980'/>
<enum name='GL_PROXY_TEXTURE_1D' value64='32867'/>
<enum name='GL_PROXY_TEXTURE_1D_ARRAY' value64='35865'/>
<enum name='GL_PROXY_TEXTURE_1D_ARRAY_EXT' value64='35865'/>
<enum name='GL_PROXY_TEXTURE_2D' value64='32868'/>
<enum name='GL_PROXY_TEXTURE_2D_ARRAY' value64='35867'/>
<enum name='GL_PROXY_TEXTURE_2D_ARRAY_EXT' value64='35867'/>
<enum name='GL_PROXY_TEXTURE_2D_MULTISAMPLE' value64='37121'/>
<enum name='GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY' value64='37123'/>
<enum name='GL_PROXY_TEXTURE_3D' value64='32880'/>
<enum name='GL_PROXY_TEXTURE_CUBE_MAP' value64='34075'/>
<enum name='GL_PROXY_TEXTURE_CUBE_MAP_ARB' value64='34075'/>
<enum name='GL_PROXY_TEXTURE_CUBE_MAP_ARRAY' value64='36875'/>
<enum name='GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB' value64='36875'/>
<enum name='GL_PROXY_TEXTURE_RECTANGLE' value64='34039'/>
<enum name='GL_PROXY_TEXTURE_RECTANGLE_ARB' value64='34039'/>
<enum name='GL_PROXY_TEXTURE_RECTANGLE_EXT' value64='34039'/>
<enum name='GL_PURGEABLE_APPLE' value64='35357'/>
<enum name='GL_Q' value64='8195'/>
<enum name='GL_QUADRATIC_ATTENUATION' value64='4617'/>
<enum name='GL_QUADS' value64='7'/>
<enum name='GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION' value64='36428'/>
<enum name='GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT' value64='36428'/>
<enum name='GL_QUAD_STRIP' value64='8'/>
<enum name='GL_QUERY_BY_REGION_NO_WAIT' value64='36374'/>
<enum name='GL_QUERY_BY_REGION_NO_WAIT_NV' value64='36374'/>
<enum name='GL_QUERY_BY_REGION_WAIT' value64='36373'/>
<enum name='GL_QUERY_BY_REGION_WAIT_NV' value64='36373'/>
<enum name='GL_QUERY_COUNTER_BITS' value64='34916'/>
<enum name='GL_QUERY_COUNTER_BITS_ARB' value64='34916'/>
<enum name='GL_QUERY_NO_WAIT' value64='36372'/>
<enum name='GL_QUERY_NO_WAIT_NV' value64='36372'/>
<enum name='GL_QUERY_OBJECT_EXT' value64='37203'/>
<enum name='GL_QUERY_RESULT' value64='34918'/>
<enum name='GL_QUERY_RESULT_ARB' value64='34918'/>
<enum name='GL_QUERY_RESULT_AVAILABLE' value64='34919'/>
<enum name='GL_QUERY_RESULT_AVAILABLE_ARB' value64='34919'/>
<enum name='GL_QUERY_WAIT' value64='36371'/>
<enum name='GL_QUERY_WAIT_NV' value64='36371'/>
<enum name='GL_R' value64='8194'/>
<enum name='GL_R11F_G11F_B10F' value64='35898'/>
<enum name='GL_R11F_G11F_B10F_EXT' value64='35898'/>
<enum name='GL_R16' value64='33322'/>
<enum name='GL_R16F' value64='33325'/>
<enum name='GL_R16I' value64='33331'/>
<enum name='GL_R16UI' value64='33332'/>
<enum name='GL_R16_SNORM' value64='36760'/>
<enum name='GL_R32F' value64='33326'/>
<enum name='GL_R32I' value64='33333'/>
<enum name='GL_R32UI' value64='33334'/>
<enum name='GL_R3_G3_B2' value64='10768'/>
<enum name='GL_R8' value64='33321'/>
<enum name='GL_R8I' value64='33329'/>
<enum name='GL_R8UI' value64='33330'/>
<enum name='GL_R8_SNORM' value64='36756'/>
<enum name='GL_RASTERIZER_DISCARD' value64='35977'/>
<enum name='GL_RASTERIZER_DISCARD_EXT' value64='35977'/>
<enum name='GL_RASTER_POSITION_UNCLIPPED_IBM' value64='103010'/>
<enum name='GL_READ_BUFFER' value64='3074'/>
<enum name='GL_READ_FRAMEBUFFER' value64='36008'/>
<enum name='GL_READ_FRAMEBUFFER_BINDING' value64='36010'/>
<enum name='GL_READ_FRAMEBUFFER_BINDING_EXT' value64='36010'/>
<enum name='GL_READ_FRAMEBUFFER_EXT' value64='36008'/>
<enum name='GL_READ_ONLY' value64='35000'/>
<enum name='GL_READ_ONLY_ARB' value64='35000'/>
<enum name='GL_READ_WRITE' value64='35002'/>
<enum name='GL_READ_WRITE_ARB' value64='35002'/>
<enum name='GL_RED' value64='6403'/>
<enum name='GL_REDUCE' value64='32790'/>
<enum name='GL_RED_BIAS' value64='3349'/>
<enum name='GL_RED_BITS' value64='3410'/>
<enum name='GL_RED_INTEGER' value64='36244'/>
<enum name='GL_RED_INTEGER_EXT' value64='36244'/>
<enum name='GL_RED_SCALE' value64='3348'/>
<enum name='GL_REFLECTION_MAP' value64='34066'/>
<enum name='GL_REFLECTION_MAP_ARB' value64='34066'/>
<enum name='GL_REFLECTION_MAP_NV' value64='34066'/>
<enum name='GL_RELEASED_APPLE' value64='35353'/>
<enum name='GL_RENDER' value64='7168'/>
<enum name='GL_RENDERBUFFER' value64='36161'/>
<enum name='GL_RENDERBUFFER_ALPHA_SIZE' value64='36179'/>
<enum name='GL_RENDERBUFFER_ALPHA_SIZE_EXT' value64='36179'/>
<enum name='GL_RENDERBUFFER_BINDING' value64='36007'/>
<enum name='GL_RENDERBUFFER_BINDING_EXT' value64='36007'/>
<enum name='GL_RENDERBUFFER_BLUE_SIZE' value64='36178'/>
<enum name='GL_RENDERBUFFER_BLUE_SIZE_EXT' value64='36178'/>
<enum name='GL_RENDERBUFFER_DEPTH_SIZE' value64='36180'/>
<enum name='GL_RENDERBUFFER_DEPTH_SIZE_EXT' value64='36180'/>
<enum name='GL_RENDERBUFFER_EXT' value64='36161'/>
<enum name='GL_RENDERBUFFER_GREEN_SIZE' value64='36177'/>
<enum name='GL_RENDERBUFFER_GREEN_SIZE_EXT' value64='36177'/>
<enum name='GL_RENDERBUFFER_HEIGHT' value64='36163'/>
<enum name='GL_RENDERBUFFER_HEIGHT_EXT' value64='36163'/>
<enum name='GL_RENDERBUFFER_INTERNAL_FORMAT' value64='36164'/>
<enum name='GL_RENDERBUFFER_INTERNAL_FORMAT_EXT' value64='36164'/>
<enum name='GL_RENDERBUFFER_RED_SIZE' value64='36176'/>
<enum name='GL_RENDERBUFFER_RED_SIZE_EXT' value64='36176'/>
<enum name='GL_RENDERBUFFER_SAMPLES' value64='36011'/>
<enum name='GL_RENDERBUFFER_SAMPLES_EXT' value64='36011'/>
<enum name='GL_RENDERBUFFER_STENCIL_SIZE' value64='36181'/>
<enum name='GL_RENDERBUFFER_STENCIL_SIZE_EXT' value64='36181'/>
<enum name='GL_RENDERBUFFER_WIDTH' value64='36162'/>
<enum name='GL_RENDERBUFFER_WIDTH_EXT' value64='36162'/>
<enum name='GL_RENDERER' value64='7937'/>
<enum name='GL_RENDER_MODE' value64='3136'/>
<enum name='GL_REPEAT' value64='10497'/>
<enum name='GL_REPLACE' value64='7681'/>
<enum name='GL_REPLICATE_BORDER' value64='33107'/>
<enum name='GL_RESCALE_NORMAL' value64='32826'/>
<enum name='GL_RESCALE_NORMAL_EXT' value64='32826'/>
<enum name='GL_RETAINED_APPLE' value64='35355'/>
<enum name='GL_RETURN' value64='258'/>
<enum name='GL_RG' value64='33319'/>
<enum name='GL_RG16' value64='33324'/>
<enum name='GL_RG16F' value64='33327'/>
<enum name='GL_RG16I' value64='33337'/>
<enum name='GL_RG16UI' value64='33338'/>
<enum name='GL_RG16_SNORM' value64='36761'/>
<enum name='GL_RG32F' value64='33328'/>
<enum name='GL_RG32I' value64='33339'/>
<enum name='GL_RG32UI' value64='33340'/>
<enum name='GL_RG8' value64='33323'/>
<enum name='GL_RG8I' value64='33335'/>
<enum name='GL_RG8UI' value64='33336'/>
<enum name='GL_RG8_SNORM' value64='36757'/>
<enum name='GL_RGB' value64='6407'/>
<enum name='GL_RGB10' value64='32850'/>
<enum name='GL_RGB10_A2' value64='32857'/>
<enum name='GL_RGB10_A2UI' value64='36975'/>
<enum name='GL_RGB12' value64='32851'/>
<enum name='GL_RGB16' value64='32852'/>
<enum name='GL_RGB16F' value64='34843'/>
<enum name='GL_RGB16F_ARB' value64='34843'/>
<enum name='GL_RGB16I' value64='36233'/>
<enum name='GL_RGB16I_EXT' value64='36233'/>
<enum name='GL_RGB16UI' value64='36215'/>
<enum name='GL_RGB16UI_EXT' value64='36215'/>
<enum name='GL_RGB16_SNORM' value64='36762'/>
<enum name='GL_RGB32F' value64='34837'/>
<enum name='GL_RGB32F_ARB' value64='34837'/>
<enum name='GL_RGB32I' value64='36227'/>
<enum name='GL_RGB32I_EXT' value64='36227'/>
<enum name='GL_RGB32UI' value64='36209'/>
<enum name='GL_RGB32UI_EXT' value64='36209'/>
<enum name='GL_RGB4' value64='32847'/>
<enum name='GL_RGB5' value64='32848'/>
<enum name='GL_RGB565' value64='36194'/>
<enum name='GL_RGB5_A1' value64='32855'/>
<enum name='GL_RGB8' value64='32849'/>
<enum name='GL_RGB8I' value64='36239'/>
<enum name='GL_RGB8I_EXT' value64='36239'/>
<enum name='GL_RGB8UI' value64='36221'/>
<enum name='GL_RGB8UI_EXT' value64='36221'/>
<enum name='GL_RGB8_SNORM' value64='36758'/>
<enum name='GL_RGB9_E5' value64='35901'/>
<enum name='GL_RGB9_E5_EXT' value64='35901'/>
<enum name='GL_RGBA' value64='6408'/>
<enum name='GL_RGBA12' value64='32858'/>
<enum name='GL_RGBA16' value64='32859'/>
<enum name='GL_RGBA16F' value64='34842'/>
<enum name='GL_RGBA16F_ARB' value64='34842'/>
<enum name='GL_RGBA16I' value64='36232'/>
<enum name='GL_RGBA16I_EXT' value64='36232'/>
<enum name='GL_RGBA16UI' value64='36214'/>
<enum name='GL_RGBA16UI_EXT' value64='36214'/>
<enum name='GL_RGBA16_SNORM' value64='36763'/>
<enum name='GL_RGBA2' value64='32853'/>
<enum name='GL_RGBA32F' value64='34836'/>
<enum name='GL_RGBA32F_ARB' value64='34836'/>
<enum name='GL_RGBA32I' value64='36226'/>
<enum name='GL_RGBA32I_EXT' value64='36226'/>
<enum name='GL_RGBA32UI' value64='36208'/>
<enum name='GL_RGBA32UI_EXT' value64='36208'/>
<enum name='GL_RGBA4' value64='32854'/>
<enum name='GL_RGBA8' value64='32856'/>
<enum name='GL_RGBA8I' value64='36238'/>
<enum name='GL_RGBA8I_EXT' value64='36238'/>
<enum name='GL_RGBA8UI' value64='36220'/>
<enum name='GL_RGBA8UI_EXT' value64='36220'/>
<enum name='GL_RGBA8_SNORM' value64='36759'/>
<enum name='GL_RGBA_FLOAT16_APPLE' value64='34842'/>
<enum name='GL_RGBA_FLOAT16_ATI' value64='34842'/>
<enum name='GL_RGBA_FLOAT32_APPLE' value64='34836'/>
<enum name='GL_RGBA_FLOAT32_ATI' value64='34836'/>
<enum name='GL_RGBA_FLOAT_MODE_ARB' value64='34848'/>
<enum name='GL_RGBA_INTEGER' value64='36249'/>
<enum name='GL_RGBA_INTEGER_EXT' value64='36249'/>
<enum name='GL_RGBA_INTEGER_MODE_EXT' value64='36254'/>
<enum name='GL_RGBA_MODE' value64='3121'/>
<enum name='GL_RGBA_SIGNED_COMPONENTS_EXT' value64='35900'/>
<enum name='GL_RGB_422_APPLE' value64='35359'/>
<enum name='GL_RGB_FLOAT16_APPLE' value64='34843'/>
<enum name='GL_RGB_FLOAT16_ATI' value64='34843'/>
<enum name='GL_RGB_FLOAT32_APPLE' value64='34837'/>
<enum name='GL_RGB_FLOAT32_ATI' value64='34837'/>
<enum name='GL_RGB_INTEGER' value64='36248'/>
<enum name='GL_RGB_INTEGER_EXT' value64='36248'/>
<enum name='GL_RGB_SCALE' value64='34163'/>
<enum name='GL_RGB_SCALE_ARB' value64='34163'/>
<enum name='GL_RG_INTEGER' value64='33320'/>
<enum name='GL_RIGHT' value64='1031'/>
<enum name='GL_S' value64='8192'/>
<enum name='GL_SAMPLER' value64='33510'/>
<enum name='GL_SAMPLER_1D' value64='35677'/>
<enum name='GL_SAMPLER_1D_ARB' value64='35677'/>
<enum name='GL_SAMPLER_1D_ARRAY' value64='36288'/>
<enum name='GL_SAMPLER_1D_ARRAY_EXT' value64='36288'/>
<enum name='GL_SAMPLER_1D_ARRAY_SHADOW' value64='36291'/>
<enum name='GL_SAMPLER_1D_ARRAY_SHADOW_EXT' value64='36291'/>
<enum name='GL_SAMPLER_1D_SHADOW' value64='35681'/>
<enum name='GL_SAMPLER_1D_SHADOW_ARB' value64='35681'/>
<enum name='GL_SAMPLER_2D' value64='35678'/>
<enum name='GL_SAMPLER_2D_ARB' value64='35678'/>
<enum name='GL_SAMPLER_2D_ARRAY' value64='36289'/>
<enum name='GL_SAMPLER_2D_ARRAY_EXT' value64='36289'/>
<enum name='GL_SAMPLER_2D_ARRAY_SHADOW' value64='36292'/>
<enum name='GL_SAMPLER_2D_ARRAY_SHADOW_EXT' value64='36292'/>
<enum name='GL_SAMPLER_2D_MULTISAMPLE' value64='37128'/>
<enum name='GL_SAMPLER_2D_MULTISAMPLE_ARRAY' value64='37131'/>
<enum name='GL_SAMPLER_2D_RECT' value64='35683'/>
<enum name='GL_SAMPLER_2D_RECT_ARB' value64='35683'/>
<enum name='GL_SAMPLER_2D_RECT_SHADOW' value64='35684'/>
<enum name='GL_SAMPLER_2D_RECT_SHADOW_ARB' value64='35684'/>
<enum name='GL_SAMPLER_2D_SHADOW' value64='35682'/>
<enum name='GL_SAMPLER_2D_SHADOW_ARB' value64='35682'/>
<enum name='GL_SAMPLER_3D' value64='35679'/>
<enum name='GL_SAMPLER_3D_ARB' value64='35679'/>
<enum name='GL_SAMPLER_BINDING' value64='35097'/>
<enum name='GL_SAMPLER_BUFFER' value64='36290'/>
<enum name='GL_SAMPLER_BUFFER_EXT' value64='36290'/>
<enum name='GL_SAMPLER_CUBE' value64='35680'/>
<enum name='GL_SAMPLER_CUBE_ARB' value64='35680'/>
<enum name='GL_SAMPLER_CUBE_MAP_ARRAY' value64='36876'/>
<enum name='GL_SAMPLER_CUBE_MAP_ARRAY_ARB' value64='36876'/>
<enum name='GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW' value64='36877'/>
<enum name='GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB' value64='36877'/>
<enum name='GL_SAMPLER_CUBE_SHADOW' value64='36293'/>
<enum name='GL_SAMPLER_CUBE_SHADOW_EXT' value64='36293'/>
<enum name='GL_SAMPLES' value64='32937'/>
<enum name='GL_SAMPLES_ARB' value64='32937'/>
<enum name='GL_SAMPLES_PASSED' value64='35092'/>
<enum name='GL_SAMPLES_PASSED_ARB' value64='35092'/>
<enum name='GL_SAMPLE_ALPHA_TO_COVERAGE' value64='32926'/>
<enum name='GL_SAMPLE_ALPHA_TO_COVERAGE_ARB' value64='32926'/>
<enum name='GL_SAMPLE_ALPHA_TO_ONE' value64='32927'/>
<enum name='GL_SAMPLE_ALPHA_TO_ONE_ARB' value64='32927'/>
<enum name='GL_SAMPLE_BUFFERS' value64='32936'/>
<enum name='GL_SAMPLE_BUFFERS_ARB' value64='32936'/>
<enum name='GL_SAMPLE_COVERAGE' value64='32928'/>
<enum name='GL_SAMPLE_COVERAGE_ARB' value64='32928'/>
<enum name='GL_SAMPLE_COVERAGE_INVERT' value64='32939'/>
<enum name='GL_SAMPLE_COVERAGE_INVERT_ARB' value64='32939'/>
<enum name='GL_SAMPLE_COVERAGE_VALUE' value64='32938'/>
<enum name='GL_SAMPLE_COVERAGE_VALUE_ARB' value64='32938'/>
<enum name='GL_SAMPLE_MASK' value64='36433'/>
<enum name='GL_SAMPLE_MASK_VALUE' value64='36434'/>
<enum name='GL_SAMPLE_POSITION' value64='36432'/>
<enum name='GL_SAMPLE_SHADING' value64='35894'/>
<enum name='GL_SAMPLE_SHADING_ARB' value64='35894'/>
<enum name='GL_SCALED_RESOLVE_FASTEST_EXT' value64='37050'/>
<enum name='GL_SCALED_RESOLVE_NICEST_EXT' value64='37051'/>
<enum name='GL_SCISSOR_BIT' value64='524288'/>
<enum name='GL_SCISSOR_BOX' value64='3088'/>
<enum name='GL_SCISSOR_TEST' value64='3089'/>
<enum name='GL_SECONDARY_COLOR_ARRAY' value64='33886'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING' value64='34972'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB' value64='34972'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_EXT' value64='33886'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_POINTER' value64='33885'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_POINTER_EXT' value64='33885'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_SIZE' value64='33882'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_SIZE_EXT' value64='33882'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_STRIDE' value64='33884'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT' value64='33884'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_TYPE' value64='33883'/>
<enum name='GL_SECONDARY_COLOR_ARRAY_TYPE_EXT' value64='33883'/>
<enum name='GL_SELECT' value64='7170'/>
<enum name='GL_SELECTION_BUFFER_POINTER' value64='3571'/>
<enum name='GL_SELECTION_BUFFER_SIZE' value64='3572'/>
<enum name='GL_SEPARABLE_2D' value64='32786'/>
<enum name='GL_SEPARATE_ATTRIBS' value64='35981'/>
<enum name='GL_SEPARATE_ATTRIBS_EXT' value64='35981'/>
<enum name='GL_SEPARATE_SPECULAR_COLOR' value64='33274'/>
<enum name='GL_SEPARATE_SPECULAR_COLOR_EXT' value64='33274'/>
<enum name='GL_SET' value64='5391'/>
<enum name='GL_SGIS_generate_mipmap' value64='1'/>
<enum name='GL_SGIS_texture_edge_clamp' value64='1'/>
<enum name='GL_SGIS_texture_lod' value64='1'/>
<enum name='GL_SGI_color_matrix' value64='1'/>
<enum name='GL_SHADER_BINARY_FORMATS' value64='36344'/>
<enum name='GL_SHADER_COMPILER' value64='36346'/>
<enum name='GL_SHADER_INCLUDE_ARB' value64='36270'/>
<enum name='GL_SHADER_OBJECT_ARB' value64='35656'/>
<enum name='GL_SHADER_OBJECT_EXT' value64='35656'/>
<enum name='GL_SHADER_SOURCE_LENGTH' value64='35720'/>
<enum name='GL_SHADER_TYPE' value64='35663'/>
<enum name='GL_SHADE_MODEL' value64='2900'/>
<enum name='GL_SHADING_LANGUAGE_VERSION' value64='35724'/>
<enum name='GL_SHADING_LANGUAGE_VERSION_ARB' value64='35724'/>
<enum name='GL_SHININESS' value64='5633'/>
<enum name='GL_SHORT' value64='5122'/>
<enum name='GL_SIGNALED' value64='37145'/>
<enum name='GL_SIGNED_NORMALIZED' value64='36764'/>
<enum name='GL_SINGLE_COLOR' value64='33273'/>
<enum name='GL_SINGLE_COLOR_EXT' value64='33273'/>
<enum name='GL_SKIP_DECODE_EXT' value64='35402'/>
<enum name='GL_SLUMINANCE' value64='35910'/>
<enum name='GL_SLUMINANCE8' value64='35911'/>
<enum name='GL_SLUMINANCE8_ALPHA8' value64='35909'/>
<enum name='GL_SLUMINANCE8_ALPHA8_EXT' value64='35909'/>
<enum name='GL_SLUMINANCE8_EXT' value64='35911'/>
<enum name='GL_SLUMINANCE_ALPHA' value64='35908'/>
<enum name='GL_SLUMINANCE_ALPHA_EXT' value64='35908'/>
<enum name='GL_SLUMINANCE_EXT' value64='35910'/>
<enum name='GL_SMOOTH' value64='7425'/>
<enum name='GL_SMOOTH_LINE_WIDTH_GRANULARITY' value64='2851'/>
<enum name='GL_SMOOTH_LINE_WIDTH_RANGE' value64='2850'/>
<enum name='GL_SMOOTH_POINT_SIZE_GRANULARITY' value64='2835'/>
<enum name='GL_SMOOTH_POINT_SIZE_RANGE' value64='2834'/>
<enum name='GL_SOURCE0_ALPHA' value64='34184'/>
<enum name='GL_SOURCE0_ALPHA_ARB' value64='34184'/>
<enum name='GL_SOURCE0_RGB' value64='34176'/>
<enum name='GL_SOURCE0_RGB_ARB' value64='34176'/>
<enum name='GL_SOURCE1_ALPHA' value64='34185'/>
<enum name='GL_SOURCE1_ALPHA_ARB' value64='34185'/>
<enum name='GL_SOURCE1_RGB' value64='34177'/>
<enum name='GL_SOURCE1_RGB_ARB' value64='34177'/>
<enum name='GL_SOURCE2_ALPHA' value64='34186'/>
<enum name='GL_SOURCE2_ALPHA_ARB' value64='34186'/>
<enum name='GL_SOURCE2_RGB' value64='34178'/>
<enum name='GL_SOURCE2_RGB_ARB' value64='34178'/>
<enum name='GL_SPECULAR' value64='4610'/>
<enum name='GL_SPHERE_MAP' value64='9218'/>
<enum name='GL_SPOT_CUTOFF' value64='4614'/>
<enum name='GL_SPOT_DIRECTION' value64='4612'/>
<enum name='GL_SPOT_EXPONENT' value64='4613'/>
<enum name='GL_SRC0_ALPHA' value64='34184'/>
<enum name='GL_SRC0_RGB' value64='34176'/>
<enum name='GL_SRC1_ALPHA' value64='34185'/>
<enum name='GL_SRC1_COLOR' value64='35065'/>
<enum name='GL_SRC1_RGB' value64='34177'/>
<enum name='GL_SRC2_ALPHA' value64='34186'/>
<enum name='GL_SRC2_RGB' value64='34178'/>
<enum name='GL_SRC_ALPHA' value64='770'/>
<enum name='GL_SRC_ALPHA_SATURATE' value64='776'/>
<enum name='GL_SRC_COLOR' value64='768'/>
<enum name='GL_SRGB' value64='35904'/>
<enum name='GL_SRGB8' value64='35905'/>
<enum name='GL_SRGB8_ALPHA8' value64='35907'/>
<enum name='GL_SRGB8_ALPHA8_EXT' value64='35907'/>
<enum name='GL_SRGB8_EXT' value64='35905'/>
<enum name='GL_SRGB_ALPHA' value64='35906'/>
<enum name='GL_SRGB_ALPHA_EXT' value64='35906'/>
<enum name='GL_SRGB_EXT' value64='35904'/>
<enum name='GL_STACK_OVERFLOW' value64='1283'/>
<enum name='GL_STACK_UNDERFLOW' value64='1284'/>
<enum name='GL_STATIC_COPY' value64='35046'/>
<enum name='GL_STATIC_COPY_ARB' value64='35046'/>
<enum name='GL_STATIC_DRAW' value64='35044'/>
<enum name='GL_STATIC_DRAW_ARB' value64='35044'/>
<enum name='GL_STATIC_READ' value64='35045'/>
<enum name='GL_STATIC_READ_ARB' value64='35045'/>
<enum name='GL_STENCIL' value64='6146'/>
<enum name='GL_STENCIL_ATTACHMENT' value64='36128'/>
<enum name='GL_STENCIL_ATTACHMENT_EXT' value64='36128'/>
<enum name='GL_STENCIL_BACK_FAIL' value64='34817'/>
<enum name='GL_STENCIL_BACK_FAIL_ATI' value64='34817'/>
<enum name='GL_STENCIL_BACK_FUNC' value64='34816'/>
<enum name='GL_STENCIL_BACK_FUNC_ATI' value64='34816'/>
<enum name='GL_STENCIL_BACK_PASS_DEPTH_FAIL' value64='34818'/>
<enum name='GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI' value64='34818'/>
<enum name='GL_STENCIL_BACK_PASS_DEPTH_PASS' value64='34819'/>
<enum name='GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI' value64='34819'/>
<enum name='GL_STENCIL_BACK_REF' value64='36003'/>
<enum name='GL_STENCIL_BACK_VALUE_MASK' value64='36004'/>
<enum name='GL_STENCIL_BACK_WRITEMASK' value64='36005'/>
<enum name='GL_STENCIL_BITS' value64='3415'/>
<enum name='GL_STENCIL_BUFFER_BIT' value64='1024'/>
<enum name='GL_STENCIL_CLEAR_VALUE' value64='2961'/>
<enum name='GL_STENCIL_FAIL' value64='2964'/>
<enum name='GL_STENCIL_FUNC' value64='2962'/>
<enum name='GL_STENCIL_INDEX' value64='6401'/>
<enum name='GL_STENCIL_INDEX1' value64='36166'/>
<enum name='GL_STENCIL_INDEX16' value64='36169'/>
<enum name='GL_STENCIL_INDEX16_EXT' value64='36169'/>
<enum name='GL_STENCIL_INDEX1_EXT' value64='36166'/>
<enum name='GL_STENCIL_INDEX4' value64='36167'/>
<enum name='GL_STENCIL_INDEX4_EXT' value64='36167'/>
<enum name='GL_STENCIL_INDEX8' value64='36168'/>
<enum name='GL_STENCIL_INDEX8_EXT' value64='36168'/>
<enum name='GL_STENCIL_PASS_DEPTH_FAIL' value64='2965'/>
<enum name='GL_STENCIL_PASS_DEPTH_PASS' value64='2966'/>
<enum name='GL_STENCIL_REF' value64='2967'/>
<enum name='GL_STENCIL_TEST' value64='2960'/>
<enum name='GL_STENCIL_TEST_TWO_SIDE_EXT' value64='35088'/>
<enum name='GL_STENCIL_VALUE_MASK' value64='2963'/>
<enum name='GL_STENCIL_WRITEMASK' value64='2968'/>
<enum name='GL_STEREO' value64='3123'/>
<enum name='GL_STORAGE_CACHED_APPLE' value64='34238'/>
<enum name='GL_STORAGE_CLIENT_APPLE' value64='34228'/>
<enum name='GL_STORAGE_PRIVATE_APPLE' value64='34237'/>
<enum name='GL_STORAGE_SHARED_APPLE' value64='34239'/>
<enum name='GL_STREAM_COPY' value64='35042'/>
<enum name='GL_STREAM_COPY_ARB' value64='35042'/>
<enum name='GL_STREAM_DRAW' value64='35040'/>
<enum name='GL_STREAM_DRAW_ARB' value64='35040'/>
<enum name='GL_STREAM_READ' value64='35041'/>
<enum name='GL_STREAM_READ_ARB' value64='35041'/>
<enum name='GL_SUBPIXEL_BITS' value64='3408'/>
<enum name='GL_SUBTRACT' value64='34023'/>
<enum name='GL_SUBTRACT_ARB' value64='34023'/>
<enum name='GL_SYNC_CONDITION' value64='37139'/>
<enum name='GL_SYNC_FENCE' value64='37142'/>
<enum name='GL_SYNC_FLAGS' value64='37141'/>
<enum name='GL_SYNC_FLUSH_COMMANDS_BIT' value64='1'/>
<enum name='GL_SYNC_GPU_COMMANDS_COMPLETE' value64='37143'/>
<enum name='GL_SYNC_OBJECT_APPLE' value64='35411'/>
<enum name='GL_SYNC_STATUS' value64='37140'/>
<enum name='GL_T' value64='8193'/>
<enum name='GL_T2F_C3F_V3F' value64='10794'/>
<enum name='GL_T2F_C4F_N3F_V3F' value64='10796'/>
<enum name='GL_T2F_C4UB_V3F' value64='10793'/>
<enum name='GL_T2F_N3F_V3F' value64='10795'/>
<enum name='GL_T2F_V3F' value64='10791'/>
<enum name='GL_T4F_C4F_N3F_V4F' value64='10797'/>
<enum name='GL_T4F_V4F' value64='10792'/>
<enum name='GL_TABLE_TOO_LARGE' value64='32817'/>
<enum name='GL_TESS_CONTROL_OUTPUT_VERTICES' value64='36469'/>
<enum name='GL_TESS_CONTROL_SHADER' value64='36488'/>
<enum name='GL_TESS_CONTROL_SHADER_BIT' value64='8'/>
<enum name='GL_TESS_EVALUATION_SHADER' value64='36487'/>
<enum name='GL_TESS_EVALUATION_SHADER_BIT' value64='16'/>
<enum name='GL_TESS_GEN_MODE' value64='36470'/>
<enum name='GL_TESS_GEN_POINT_MODE' value64='36473'/>
<enum name='GL_TESS_GEN_SPACING' value64='36471'/>
<enum name='GL_TESS_GEN_VERTEX_ORDER' value64='36472'/>
<enum name='GL_TEXTURE' value64='5890'/>
<enum name='GL_TEXTURE0' value64='33984'/>
<enum name='GL_TEXTURE0_ARB' value64='33984'/>
<enum name='GL_TEXTURE1' value64='33985'/>
<enum name='GL_TEXTURE10' value64='33994'/>
<enum name='GL_TEXTURE10_ARB' value64='33994'/>
<enum name='GL_TEXTURE11' value64='33995'/>
<enum name='GL_TEXTURE11_ARB' value64='33995'/>
<enum name='GL_TEXTURE12' value64='33996'/>
<enum name='GL_TEXTURE12_ARB' value64='33996'/>
<enum name='GL_TEXTURE13' value64='33997'/>
<enum name='GL_TEXTURE13_ARB' value64='33997'/>
<enum name='GL_TEXTURE14' value64='33998'/>
<enum name='GL_TEXTURE14_ARB' value64='33998'/>
<enum name='GL_TEXTURE15' value64='33999'/>
<enum name='GL_TEXTURE15_ARB' value64='33999'/>
<enum name='GL_TEXTURE16' value64='34000'/>
<enum name='GL_TEXTURE16_ARB' value64='34000'/>
<enum name='GL_TEXTURE17' value64='34001'/>
<enum name='GL_TEXTURE17_ARB' value64='34001'/>
<enum name='GL_TEXTURE18' value64='34002'/>
<enum name='GL_TEXTURE18_ARB' value64='34002'/>
<enum name='GL_TEXTURE19' value64='34003'/>
<enum name='GL_TEXTURE19_ARB' value64='34003'/>
<enum name='GL_TEXTURE1_ARB' value64='33985'/>
<enum name='GL_TEXTURE2' value64='33986'/>
<enum name='GL_TEXTURE20' value64='34004'/>
<enum name='GL_TEXTURE20_ARB' value64='34004'/>
<enum name='GL_TEXTURE21' value64='34005'/>
<enum name='GL_TEXTURE21_ARB' value64='34005'/>
<enum name='GL_TEXTURE22' value64='34006'/>
<enum name='GL_TEXTURE22_ARB' value64='34006'/>
<enum name='GL_TEXTURE23' value64='34007'/>
<enum name='GL_TEXTURE23_ARB' value64='34007'/>
<enum name='GL_TEXTURE24' value64='34008'/>
<enum name='GL_TEXTURE24_ARB' value64='34008'/>
<enum name='GL_TEXTURE25' value64='34009'/>
<enum name='GL_TEXTURE25_ARB' value64='34009'/>
<enum name='GL_TEXTURE26' value64='34010'/>
<enum name='GL_TEXTURE26_ARB' value64='34010'/>
<enum name='GL_TEXTURE27' value64='34011'/>
<enum name='GL_TEXTURE27_ARB' value64='34011'/>
<enum name='GL_TEXTURE28' value64='34012'/>
<enum name='GL_TEXTURE28_ARB' value64='34012'/>
<enum name='GL_TEXTURE29' value64='34013'/>
<enum name='GL_TEXTURE29_ARB' value64='34013'/>
<enum name='GL_TEXTURE2_ARB' value64='33986'/>
<enum name='GL_TEXTURE3' value64='33987'/>
<enum name='GL_TEXTURE30' value64='34014'/>
<enum name='GL_TEXTURE30_ARB' value64='34014'/>
<enum name='GL_TEXTURE31' value64='34015'/>
<enum name='GL_TEXTURE31_ARB' value64='34015'/>
<enum name='GL_TEXTURE3_ARB' value64='33987'/>
<enum name='GL_TEXTURE4' value64='33988'/>
<enum name='GL_TEXTURE4_ARB' value64='33988'/>
<enum name='GL_TEXTURE5' value64='33989'/>
<enum name='GL_TEXTURE5_ARB' value64='33989'/>
<enum name='GL_TEXTURE6' value64='33990'/>
<enum name='GL_TEXTURE6_ARB' value64='33990'/>
<enum name='GL_TEXTURE7' value64='33991'/>
<enum name='GL_TEXTURE7_ARB' value64='33991'/>
<enum name='GL_TEXTURE8' value64='33992'/>
<enum name='GL_TEXTURE8_ARB' value64='33992'/>
<enum name='GL_TEXTURE9' value64='33993'/>
<enum name='GL_TEXTURE9_ARB' value64='33993'/>
<enum name='GL_TEXTURE_1D' value64='3552'/>
<enum name='GL_TEXTURE_1D_ARRAY' value64='35864'/>
<enum name='GL_TEXTURE_1D_ARRAY_EXT' value64='35864'/>
<enum name='GL_TEXTURE_2D' value64='3553'/>
<enum name='GL_TEXTURE_2D_ARRAY' value64='35866'/>
<enum name='GL_TEXTURE_2D_ARRAY_EXT' value64='35866'/>
<enum name='GL_TEXTURE_2D_MULTISAMPLE' value64='37120'/>
<enum name='GL_TEXTURE_2D_MULTISAMPLE_ARRAY' value64='37122'/>
<enum name='GL_TEXTURE_3D' value64='32879'/>
<enum name='GL_TEXTURE_ALPHA_SIZE' value64='32863'/>
<enum name='GL_TEXTURE_ALPHA_TYPE' value64='35859'/>
<enum name='GL_TEXTURE_ALPHA_TYPE_ARB' value64='35859'/>
<enum name='GL_TEXTURE_BASE_LEVEL' value64='33084'/>
<enum name='GL_TEXTURE_BASE_LEVEL_SGIS' value64='33084'/>
<enum name='GL_TEXTURE_BINDING_1D' value64='32872'/>
<enum name='GL_TEXTURE_BINDING_1D_ARRAY' value64='35868'/>
<enum name='GL_TEXTURE_BINDING_1D_ARRAY_EXT' value64='35868'/>
<enum name='GL_TEXTURE_BINDING_2D' value64='32873'/>
<enum name='GL_TEXTURE_BINDING_2D_ARRAY' value64='35869'/>
<enum name='GL_TEXTURE_BINDING_2D_ARRAY_EXT' value64='35869'/>
<enum name='GL_TEXTURE_BINDING_2D_MULTISAMPLE' value64='37124'/>
<enum name='GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY' value64='37125'/>
<enum name='GL_TEXTURE_BINDING_3D' value64='32874'/>
<enum name='GL_TEXTURE_BINDING_BUFFER' value64='35884'/>
<enum name='GL_TEXTURE_BINDING_CUBE_MAP' value64='34068'/>
<enum name='GL_TEXTURE_BINDING_CUBE_MAP_ARB' value64='34068'/>
<enum name='GL_TEXTURE_BINDING_CUBE_MAP_ARRAY' value64='36874'/>
<enum name='GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB' value64='36874'/>
<enum name='GL_TEXTURE_BINDING_RECTANGLE' value64='34038'/>
<enum name='GL_TEXTURE_BINDING_RECTANGLE_ARB' value64='34038'/>
<enum name='GL_TEXTURE_BINDING_RECTANGLE_EXT' value64='34038'/>
<enum name='GL_TEXTURE_BIT' value64='262144'/>
<enum name='GL_TEXTURE_BLUE_SIZE' value64='32862'/>
<enum name='GL_TEXTURE_BLUE_TYPE' value64='35858'/>
<enum name='GL_TEXTURE_BLUE_TYPE_ARB' value64='35858'/>
<enum name='GL_TEXTURE_BORDER' value64='4101'/>
<enum name='GL_TEXTURE_BORDER_COLOR' value64='4100'/>
<enum name='GL_TEXTURE_BUFFER' value64='35882'/>
<enum name='GL_TEXTURE_BUFFER_DATA_STORE_BINDING' value64='35885'/>
<enum name='GL_TEXTURE_COMPARE_FAIL_VALUE_ARB' value64='32959'/>
<enum name='GL_TEXTURE_COMPARE_FUNC' value64='34893'/>
<enum name='GL_TEXTURE_COMPARE_FUNC_ARB' value64='34893'/>
<enum name='GL_TEXTURE_COMPARE_MODE' value64='34892'/>
<enum name='GL_TEXTURE_COMPARE_MODE_ARB' value64='34892'/>
<enum name='GL_TEXTURE_COMPONENTS' value64='4099'/>
<enum name='GL_TEXTURE_COMPRESSED' value64='34465'/>
<enum name='GL_TEXTURE_COMPRESSED_ARB' value64='34465'/>
<enum name='GL_TEXTURE_COMPRESSED_IMAGE_SIZE' value64='34464'/>
<enum name='GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB' value64='34464'/>
<enum name='GL_TEXTURE_COMPRESSION_HINT' value64='34031'/>
<enum name='GL_TEXTURE_COMPRESSION_HINT_ARB' value64='34031'/>
<enum name='GL_TEXTURE_COORD_ARRAY' value64='32888'/>
<enum name='GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING' value64='34970'/>
<enum name='GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB' value64='34970'/>
<enum name='GL_TEXTURE_COORD_ARRAY_POINTER' value64='32914'/>
<enum name='GL_TEXTURE_COORD_ARRAY_SIZE' value64='32904'/>
<enum name='GL_TEXTURE_COORD_ARRAY_STRIDE' value64='32906'/>
<enum name='GL_TEXTURE_COORD_ARRAY_TYPE' value64='32905'/>
<enum name='GL_TEXTURE_CUBE_MAP' value64='34067'/>
<enum name='GL_TEXTURE_CUBE_MAP_ARB' value64='34067'/>
<enum name='GL_TEXTURE_CUBE_MAP_ARRAY' value64='36873'/>
<enum name='GL_TEXTURE_CUBE_MAP_ARRAY_ARB' value64='36873'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_X' value64='34070'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB' value64='34070'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Y' value64='34072'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB' value64='34072'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Z' value64='34074'/>
<enum name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB' value64='34074'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_X' value64='34069'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB' value64='34069'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_Y' value64='34071'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB' value64='34071'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_Z' value64='34073'/>
<enum name='GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB' value64='34073'/>
<enum name='GL_TEXTURE_CUBE_MAP_SEAMLESS' value64='34895'/>
<enum name='GL_TEXTURE_DEPTH' value64='32881'/>
<enum name='GL_TEXTURE_DEPTH_SIZE' value64='34890'/>
<enum name='GL_TEXTURE_DEPTH_SIZE_ARB' value64='34890'/>
<enum name='GL_TEXTURE_DEPTH_TYPE' value64='35862'/>
<enum name='GL_TEXTURE_DEPTH_TYPE_ARB' value64='35862'/>
<enum name='GL_TEXTURE_ENV' value64='8960'/>
<enum name='GL_TEXTURE_ENV_COLOR' value64='8705'/>
<enum name='GL_TEXTURE_ENV_MODE' value64='8704'/>
<enum name='GL_TEXTURE_FILTER_CONTROL' value64='34048'/>
<enum name='GL_TEXTURE_FILTER_CONTROL_EXT' value64='34048'/>
<enum name='GL_TEXTURE_FIXED_SAMPLE_LOCATIONS' value64='37127'/>
<enum name='GL_TEXTURE_GEN_MODE' value64='9472'/>
<enum name='GL_TEXTURE_GEN_Q' value64='3171'/>
<enum name='GL_TEXTURE_GEN_R' value64='3170'/>
<enum name='GL_TEXTURE_GEN_S' value64='3168'/>
<enum name='GL_TEXTURE_GEN_T' value64='3169'/>
<enum name='GL_TEXTURE_GREEN_SIZE' value64='32861'/>
<enum name='GL_TEXTURE_GREEN_TYPE' value64='35857'/>
<enum name='GL_TEXTURE_GREEN_TYPE_ARB' value64='35857'/>
<enum name='GL_TEXTURE_HEIGHT' value64='4097'/>
<enum name='GL_TEXTURE_IMMUTABLE_FORMAT' value64='37167'/>
<enum name='GL_TEXTURE_INTENSITY_SIZE' value64='32865'/>
<enum name='GL_TEXTURE_INTENSITY_TYPE_ARB' value64='35861'/>
<enum name='GL_TEXTURE_INTERNAL_FORMAT' value64='4099'/>
<enum name='GL_TEXTURE_LOD_BIAS' value64='34049'/>
<enum name='GL_TEXTURE_LOD_BIAS_EXT' value64='34049'/>
<enum name='GL_TEXTURE_LUMINANCE_SIZE' value64='32864'/>
<enum name='GL_TEXTURE_LUMINANCE_TYPE_ARB' value64='35860'/>
<enum name='GL_TEXTURE_MAG_FILTER' value64='10240'/>
<enum name='GL_TEXTURE_MATRIX' value64='2984'/>
<enum name='GL_TEXTURE_MAX_ANISOTROPY_EXT' value64='34046'/>
<enum name='GL_TEXTURE_MAX_LEVEL' value64='33085'/>
<enum name='GL_TEXTURE_MAX_LEVEL_SGIS' value64='33085'/>
<enum name='GL_TEXTURE_MAX_LOD' value64='33083'/>
<enum name='GL_TEXTURE_MAX_LOD_SGIS' value64='33083'/>
<enum name='GL_TEXTURE_MINIMIZE_STORAGE_APPLE' value64='34230'/>
<enum name='GL_TEXTURE_MIN_FILTER' value64='10241'/>
<enum name='GL_TEXTURE_MIN_LOD' value64='33082'/>
<enum name='GL_TEXTURE_MIN_LOD_SGIS' value64='33082'/>
<enum name='GL_TEXTURE_PRIORITY' value64='32870'/>
<enum name='GL_TEXTURE_RANGE_LENGTH_APPLE' value64='34231'/>
<enum name='GL_TEXTURE_RANGE_POINTER_APPLE' value64='34232'/>
<enum name='GL_TEXTURE_RECTANGLE' value64='34037'/>
<enum name='GL_TEXTURE_RECTANGLE_ARB' value64='34037'/>
<enum name='GL_TEXTURE_RECTANGLE_EXT' value64='34037'/>
<enum name='GL_TEXTURE_RED_SIZE' value64='32860'/>
<enum name='GL_TEXTURE_RED_TYPE' value64='35856'/>
<enum name='GL_TEXTURE_RED_TYPE_ARB' value64='35856'/>
<enum name='GL_TEXTURE_RESIDENT' value64='32871'/>
<enum name='GL_TEXTURE_SAMPLES' value64='37126'/>
<enum name='GL_TEXTURE_SHARED_SIZE' value64='35903'/>
<enum name='GL_TEXTURE_SHARED_SIZE_EXT' value64='35903'/>
<enum name='GL_TEXTURE_SRGB_DECODE_EXT' value64='35400'/>
<enum name='GL_TEXTURE_STACK_DEPTH' value64='2981'/>
<enum name='GL_TEXTURE_STENCIL_SIZE' value64='35057'/>
<enum name='GL_TEXTURE_STENCIL_SIZE_EXT' value64='35057'/>
<enum name='GL_TEXTURE_STORAGE_HINT_APPLE' value64='34236'/>
<enum name='GL_TEXTURE_SWIZZLE_A' value64='36421'/>
<enum name='GL_TEXTURE_SWIZZLE_B' value64='36420'/>
<enum name='GL_TEXTURE_SWIZZLE_G' value64='36419'/>
<enum name='GL_TEXTURE_SWIZZLE_R' value64='36418'/>
<enum name='GL_TEXTURE_SWIZZLE_RGBA' value64='36422'/>
<enum name='GL_TEXTURE_WIDTH' value64='4096'/>
<enum name='GL_TEXTURE_WRAP_R' value64='32882'/>
<enum name='GL_TEXTURE_WRAP_S' value64='10242'/>
<enum name='GL_TEXTURE_WRAP_T' value64='10243'/>
<enum name='GL_TIMEOUT_EXPIRED' value64='37147'/>
<enum name='GL_TIMEOUT_IGNORED' value64='18446744073709551615'/>
<enum name='GL_TIMESTAMP' value64='36392'/>
<enum name='GL_TIME_ELAPSED' value64='35007'/>
<enum name='GL_TIME_ELAPSED_EXT' value64='35007'/>
<enum name='GL_TRANSFORM_BIT' value64='4096'/>
<enum name='GL_TRANSFORM_FEEDBACK' value64='36386'/>
<enum name='GL_TRANSFORM_FEEDBACK_BINDING' value64='36389'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER' value64='35982'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE' value64='36388'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_BINDING' value64='35983'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT' value64='35983'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_EXT' value64='35982'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_MODE' value64='35967'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT' value64='35967'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED' value64='36387'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_SIZE' value64='35973'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT' value64='35973'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_START' value64='35972'/>
<enum name='GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT' value64='35972'/>
<enum name='GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN' value64='35976'/>
<enum name='GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT' value64='35976'/>
<enum name='GL_TRANSFORM_FEEDBACK_VARYINGS' value64='35971'/>
<enum name='GL_TRANSFORM_FEEDBACK_VARYINGS_EXT' value64='35971'/>
<enum name='GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH' value64='35958'/>
<enum name='GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT' value64='35958'/>
<enum name='GL_TRANSFORM_HINT_APPLE' value64='34225'/>
<enum name='GL_TRANSPOSE_COLOR_MATRIX' value64='34022'/>
<enum name='GL_TRANSPOSE_COLOR_MATRIX_ARB' value64='34022'/>
<enum name='GL_TRANSPOSE_CURRENT_MATRIX_ARB' value64='34999'/>
<enum name='GL_TRANSPOSE_MODELVIEW_MATRIX' value64='34019'/>
<enum name='GL_TRANSPOSE_MODELVIEW_MATRIX_ARB' value64='34019'/>
<enum name='GL_TRANSPOSE_PROJECTION_MATRIX' value64='34020'/>
<enum name='GL_TRANSPOSE_PROJECTION_MATRIX_ARB' value64='34020'/>
<enum name='GL_TRANSPOSE_TEXTURE_MATRIX' value64='34021'/>
<enum name='GL_TRANSPOSE_TEXTURE_MATRIX_ARB' value64='34021'/>
<enum name='GL_TRIANGLES' value64='4'/>
<enum name='GL_TRIANGLES_ADJACENCY' value64='12'/>
<enum name='GL_TRIANGLES_ADJACENCY_EXT' value64='12'/>
<enum name='GL_TRIANGLE_FAN' value64='6'/>
<enum name='GL_TRIANGLE_STRIP' value64='5'/>
<enum name='GL_TRIANGLE_STRIP_ADJACENCY' value64='13'/>
<enum name='GL_TRIANGLE_STRIP_ADJACENCY_EXT' value64='13'/>
<enum name='GL_TRUE' value64='1'/>
<enum name='GL_UNDEFINED_APPLE' value64='35356'/>
<enum name='GL_UNDEFINED_VERTEX' value64='33376'/>
<enum name='GL_UNIFORM_ARRAY_STRIDE' value64='35388'/>
<enum name='GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS' value64='35394'/>
<enum name='GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES' value64='35395'/>
<enum name='GL_UNIFORM_BLOCK_BINDING' value64='35391'/>
<enum name='GL_UNIFORM_BLOCK_DATA_SIZE' value64='35392'/>
<enum name='GL_UNIFORM_BLOCK_INDEX' value64='35386'/>
<enum name='GL_UNIFORM_BLOCK_NAME_LENGTH' value64='35393'/>
<enum name='GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER' value64='35398'/>
<enum name='GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER' value64='35397'/>
<enum name='GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER' value64='34032'/>
<enum name='GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER' value64='34033'/>
<enum name='GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER' value64='35396'/>
<enum name='GL_UNIFORM_BUFFER' value64='35345'/>
<enum name='GL_UNIFORM_BUFFER_BINDING' value64='35368'/>
<enum name='GL_UNIFORM_BUFFER_BINDING_EXT' value64='36335'/>
<enum name='GL_UNIFORM_BUFFER_EXT' value64='36334'/>
<enum name='GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT' value64='35380'/>
<enum name='GL_UNIFORM_BUFFER_SIZE' value64='35370'/>
<enum name='GL_UNIFORM_BUFFER_START' value64='35369'/>
<enum name='GL_UNIFORM_IS_ROW_MAJOR' value64='35390'/>
<enum name='GL_UNIFORM_MATRIX_STRIDE' value64='35389'/>
<enum name='GL_UNIFORM_NAME_LENGTH' value64='35385'/>
<enum name='GL_UNIFORM_OFFSET' value64='35387'/>
<enum name='GL_UNIFORM_SIZE' value64='35384'/>
<enum name='GL_UNIFORM_TYPE' value64='35383'/>
<enum name='GL_UNPACK_ALIGNMENT' value64='3317'/>
<enum name='GL_UNPACK_CLIENT_STORAGE_APPLE' value64='34226'/>
<enum name='GL_UNPACK_IMAGE_BYTES_APPLE' value64='35352'/>
<enum name='GL_UNPACK_IMAGE_HEIGHT' value64='32878'/>
<enum name='GL_UNPACK_LSB_FIRST' value64='3313'/>
<enum name='GL_UNPACK_ROW_BYTES_APPLE' value64='35350'/>
<enum name='GL_UNPACK_ROW_LENGTH' value64='3314'/>
<enum name='GL_UNPACK_SKIP_IMAGES' value64='32877'/>
<enum name='GL_UNPACK_SKIP_PIXELS' value64='3316'/>
<enum name='GL_UNPACK_SKIP_ROWS' value64='3315'/>
<enum name='GL_UNPACK_SWAP_BYTES' value64='3312'/>
<enum name='GL_UNSIGNALED' value64='37144'/>
<enum name='GL_UNSIGNED_BYTE' value64='5121'/>
<enum name='GL_UNSIGNED_BYTE_2_3_3_REV' value64='33634'/>
<enum name='GL_UNSIGNED_BYTE_3_3_2' value64='32818'/>
<enum name='GL_UNSIGNED_INT' value64='5125'/>
<enum name='GL_UNSIGNED_INT_10F_11F_11F_REV' value64='35899'/>
<enum name='GL_UNSIGNED_INT_10F_11F_11F_REV_EXT' value64='35899'/>
<enum name='GL_UNSIGNED_INT_10_10_10_2' value64='32822'/>
<enum name='GL_UNSIGNED_INT_24_8' value64='34042'/>
<enum name='GL_UNSIGNED_INT_24_8_EXT' value64='34042'/>
<enum name='GL_UNSIGNED_INT_2_10_10_10_REV' value64='33640'/>
<enum name='GL_UNSIGNED_INT_5_9_9_9_REV' value64='35902'/>
<enum name='GL_UNSIGNED_INT_5_9_9_9_REV_EXT' value64='35902'/>
<enum name='GL_UNSIGNED_INT_8_8_8_8' value64='32821'/>
<enum name='GL_UNSIGNED_INT_8_8_8_8_REV' value64='33639'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_1D' value64='36305'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_1D_ARRAY' value64='36310'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT' value64='36310'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_1D_EXT' value64='36305'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D' value64='36306'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D_ARRAY' value64='36311'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT' value64='36311'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D_EXT' value64='36306'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE' value64='37130'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY' value64='37133'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D_RECT' value64='36309'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT' value64='36309'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_3D' value64='36307'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_3D_EXT' value64='36307'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_BUFFER' value64='36312'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT' value64='36312'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_CUBE' value64='36308'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_CUBE_EXT' value64='36308'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY' value64='36879'/>
<enum name='GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB' value64='36879'/>
<enum name='GL_UNSIGNED_INT_VEC2' value64='36294'/>
<enum name='GL_UNSIGNED_INT_VEC2_EXT' value64='36294'/>
<enum name='GL_UNSIGNED_INT_VEC3' value64='36295'/>
<enum name='GL_UNSIGNED_INT_VEC3_EXT' value64='36295'/>
<enum name='GL_UNSIGNED_INT_VEC4' value64='36296'/>
<enum name='GL_UNSIGNED_INT_VEC4_EXT' value64='36296'/>
<enum name='GL_UNSIGNED_NORMALIZED' value64='35863'/>
<enum name='GL_UNSIGNED_NORMALIZED_ARB' value64='35863'/>
<enum name='GL_UNSIGNED_SHORT' value64='5123'/>
<enum name='GL_UNSIGNED_SHORT_1_5_5_5_REV' value64='33638'/>
<enum name='GL_UNSIGNED_SHORT_4_4_4_4' value64='32819'/>
<enum name='GL_UNSIGNED_SHORT_4_4_4_4_REV' value64='33637'/>
<enum name='GL_UNSIGNED_SHORT_5_5_5_1' value64='32820'/>
<enum name='GL_UNSIGNED_SHORT_5_6_5' value64='33635'/>
<enum name='GL_UNSIGNED_SHORT_5_6_5_REV' value64='33636'/>
<enum name='GL_UNSIGNED_SHORT_8_8_APPLE' value64='34234'/>
<enum name='GL_UNSIGNED_SHORT_8_8_REV_APPLE' value64='34235'/>
<enum name='GL_UPPER_LEFT' value64='36002'/>
<enum name='GL_V2F' value64='10784'/>
<enum name='GL_V3F' value64='10785'/>
<enum name='GL_VALIDATE_STATUS' value64='35715'/>
<enum name='GL_VENDOR' value64='7936'/>
<enum name='GL_VERSION' value64='7938'/>
<enum name='GL_VERSION_1_0' value64='1'/>
<enum name='GL_VERSION_1_1' value64='1'/>
<enum name='GL_VERSION_1_2' value64='1'/>
<enum name='GL_VERSION_1_3' value64='1'/>
<enum name='GL_VERSION_1_4' value64='1'/>
<enum name='GL_VERSION_1_5' value64='1'/>
<enum name='GL_VERSION_2_0' value64='1'/>
<enum name='GL_VERSION_2_1' value64='1'/>
<enum name='GL_VERSION_3_0' value64='1'/>
<enum name='GL_VERSION_3_1' value64='1'/>
<enum name='GL_VERSION_3_2' value64='1'/>
<enum name='GL_VERSION_3_3' value64='1'/>
<enum name='GL_VERSION_4_0' value64='1'/>
<enum name='GL_VERSION_4_1' value64='1'/>
<enum name='GL_VERTEX_ARRAY' value64='32884'/>
<enum name='GL_VERTEX_ARRAY_BINDING' value64='34229'/>
<enum name='GL_VERTEX_ARRAY_BINDING_APPLE' value64='34229'/>
<enum name='GL_VERTEX_ARRAY_BUFFER_BINDING' value64='34966'/>
<enum name='GL_VERTEX_ARRAY_BUFFER_BINDING_ARB' value64='34966'/>
<enum name='GL_VERTEX_ARRAY_OBJECT_EXT' value64='37204'/>
<enum name='GL_VERTEX_ARRAY_POINTER' value64='32910'/>
<enum name='GL_VERTEX_ARRAY_RANGE_APPLE' value64='34077'/>
<enum name='GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE' value64='34078'/>
<enum name='GL_VERTEX_ARRAY_RANGE_POINTER_APPLE' value64='34081'/>
<enum name='GL_VERTEX_ARRAY_SIZE' value64='32890'/>
<enum name='GL_VERTEX_ARRAY_STORAGE_HINT_APPLE' value64='34079'/>
<enum name='GL_VERTEX_ARRAY_STRIDE' value64='32892'/>
<enum name='GL_VERTEX_ARRAY_TYPE' value64='32891'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING' value64='34975'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB' value64='34975'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_DIVISOR' value64='35070'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB' value64='35070'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_ENABLED' value64='34338'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB' value64='34338'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_INTEGER' value64='35069'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT' value64='35069'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_NORMALIZED' value64='34922'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB' value64='34922'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_POINTER' value64='34373'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB' value64='34373'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_SIZE' value64='34339'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB' value64='34339'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_STRIDE' value64='34340'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB' value64='34340'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_TYPE' value64='34341'/>
<enum name='GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB' value64='34341'/>
<enum name='GL_VERTEX_ATTRIB_MAP1_APPLE' value64='35328'/>
<enum name='GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE' value64='35331'/>
<enum name='GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE' value64='35333'/>
<enum name='GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE' value64='35332'/>
<enum name='GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE' value64='35330'/>
<enum name='GL_VERTEX_ATTRIB_MAP2_APPLE' value64='35329'/>
<enum name='GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE' value64='35335'/>
<enum name='GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE' value64='35337'/>
<enum name='GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE' value64='35336'/>
<enum name='GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE' value64='35334'/>
<enum name='GL_VERTEX_BLEND_ARB' value64='34471'/>
<enum name='GL_VERTEX_POINT_SIZE_APPLE' value64='35366'/>
<enum name='GL_VERTEX_PROGRAM_ARB' value64='34336'/>
<enum name='GL_VERTEX_PROGRAM_POINT_SIZE' value64='34370'/>
<enum name='GL_VERTEX_PROGRAM_POINT_SIZE_ARB' value64='34370'/>
<enum name='GL_VERTEX_PROGRAM_TWO_SIDE' value64='34371'/>
<enum name='GL_VERTEX_PROGRAM_TWO_SIDE_ARB' value64='34371'/>
<enum name='GL_VERTEX_SHADER' value64='35633'/>
<enum name='GL_VERTEX_SHADER_ARB' value64='35633'/>
<enum name='GL_VERTEX_SHADER_BIT' value64='1'/>
<enum name='GL_VIEWPORT' value64='2978'/>
<enum name='GL_VIEWPORT_BIT' value64='2048'/>
<enum name='GL_VIEWPORT_BOUNDS_RANGE' value64='33373'/>
<enum name='GL_VIEWPORT_INDEX_PROVOKING_VERTEX' value64='33375'/>
<enum name='GL_VIEWPORT_SUBPIXEL_BITS' value64='33372'/>
<enum name='GL_VOLATILE_APPLE' value64='35354'/>
<enum name='GL_WAIT_FAILED' value64='37149'/>
<enum name='GL_WEIGHT_ARRAY_ARB' value64='34477'/>
<enum name='GL_WEIGHT_ARRAY_BUFFER_BINDING' value64='34974'/>
<enum name='GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB' value64='34974'/>
<enum name='GL_WEIGHT_ARRAY_POINTER_ARB' value64='34476'/>
<enum name='GL_WEIGHT_ARRAY_SIZE_ARB' value64='34475'/>
<enum name='GL_WEIGHT_ARRAY_STRIDE_ARB' value64='34474'/>
<enum name='GL_WEIGHT_ARRAY_TYPE_ARB' value64='34473'/>
<enum name='GL_WEIGHT_SUM_UNITY_ARB' value64='34470'/>
<enum name='GL_WRITE_ONLY' value64='35001'/>
<enum name='GL_WRITE_ONLY_ARB' value64='35001'/>
<enum name='GL_XOR' value64='5382'/>
<enum name='GL_YCBCR_422_APPLE' value64='34233'/>
<enum name='GL_ZERO' value64='0'/>
<enum name='GL_ZOOM_X' value64='3350'/>
<enum name='GL_ZOOM_Y' value64='3351'/>
<enum name='kCGL0Bit' value64='1'/>
<enum name='kCGL10Bit' value64='256'/>
<enum name='kCGL128Bit' value64='65536'/>
<enum name='kCGL12Bit' value64='512'/>
<enum name='kCGL16Bit' value64='1024'/>
<enum name='kCGL1Bit' value64='2'/>
<enum name='kCGL24Bit' value64='2048'/>
<enum name='kCGL2Bit' value64='4'/>
<enum name='kCGL32Bit' value64='4096'/>
<enum name='kCGL3Bit' value64='8'/>
<enum name='kCGL48Bit' value64='8192'/>
<enum name='kCGL4Bit' value64='16'/>
<enum name='kCGL5Bit' value64='32'/>
<enum name='kCGL64Bit' value64='16384'/>
<enum name='kCGL6Bit' value64='64'/>
<enum name='kCGL8Bit' value64='128'/>
<enum name='kCGL96Bit' value64='32768'/>
<enum name='kCGLARGB12121212Bit' value64='2097152'/>
<enum name='kCGLARGB1555Bit' value64='1024'/>
<enum name='kCGLARGB16161616Bit' value64='8388608'/>
<enum name='kCGLARGB2101010Bit' value64='262144'/>
<enum name='kCGLARGB4444Bit' value64='128'/>
<enum name='kCGLARGB8888Bit' value64='32768'/>
<enum name='kCGLBadAddress' value64='10014'/>
<enum name='kCGLBadAlloc' value64='10016'/>
<enum name='kCGLBadAttribute' value64='10000'/>
<enum name='kCGLBadCodeModule' value64='10015'/>
<enum name='kCGLBadConnection' value64='10017'/>
<enum name='kCGLBadContext' value64='10004'/>
<enum name='kCGLBadDisplay' value64='10006'/>
<enum name='kCGLBadDrawable' value64='10005'/>
<enum name='kCGLBadEnumeration' value64='10010'/>
<enum name='kCGLBadFullScreen' value64='10012'/>
<enum name='kCGLBadMatch' value64='10009'/>
<enum name='kCGLBadOffScreen' value64='10011'/>
<enum name='kCGLBadPixelFormat' value64='10002'/>
<enum name='kCGLBadProperty' value64='10001'/>
<enum name='kCGLBadRendererInfo' value64='10003'/>
<enum name='kCGLBadState' value64='10007'/>
<enum name='kCGLBadValue' value64='10008'/>
<enum name='kCGLBadWindow' value64='10013'/>
<enum name='kCGLCECrashOnRemovedFunctions' value64='316'/>
<enum name='kCGLCEDisplayListOptimization' value64='307'/>
<enum name='kCGLCEMPEngine' value64='313'/>
<enum name='kCGLCERasterization' value64='221'/>
<enum name='kCGLCEStateValidation' value64='301'/>
<enum name='kCGLCESurfaceBackingSize' value64='305'/>
<enum name='kCGLCESwapLimit' value64='203'/>
<enum name='kCGLCESwapRectangle' value64='201'/>
<enum name='kCGLCPAbortOnGPURestartStatusBlacklisted' value64='318'/>
<enum name='kCGLCPClientStorage' value64='226'/>
<enum name='kCGLCPContextPriorityRequest' value64='608'/>
<enum name='kCGLCPContextPriorityRequestHigh' value64='0'/>
<enum name='kCGLCPContextPriorityRequestLow' value64='2'/>
<enum name='kCGLCPContextPriorityRequestNormal' value64='1'/>
<enum name='kCGLCPCurrentRendererID' value64='309'/>
<enum name='kCGLCPDispatchTableSize' value64='224'/>
<enum name='kCGLCPGPUFragmentProcessing' value64='311'/>
<enum name='kCGLCPGPURestartStatus' value64='317'/>
<enum name='kCGLCPGPURestartStatusBlacklisted' value64='2'/>
<enum name='kCGLCPGPURestartStatusCaused' value64='1'/>
<enum name='kCGLCPGPURestartStatusNone' value64='0'/>
<enum name='kCGLCPGPUVertexProcessing' value64='310'/>
<enum name='kCGLCPHasDrawable' value64='314'/>
<enum name='kCGLCPMPSwapsInFlight' value64='315'/>
<enum name='kCGLCPReclaimResources' value64='308'/>
<enum name='kCGLCPSupportGPURestart' value64='319'/>
<enum name='kCGLCPSupportSeparateAddressSpace' value64='320'/>
<enum name='kCGLCPSurfaceBackingSize' value64='304'/>
<enum name='kCGLCPSurfaceOpacity' value64='236'/>
<enum name='kCGLCPSurfaceOrder' value64='235'/>
<enum name='kCGLCPSurfaceSurfaceVolatile' value64='306'/>
<enum name='kCGLCPSurfaceTexture' value64='228'/>
<enum name='kCGLCPSwapInterval' value64='222'/>
<enum name='kCGLCPSwapRectangle' value64='200'/>
<enum name='kCGLDoubleBufferBit' value64='8'/>
<enum name='kCGLGOClearFormatCache' value64='502'/>
<enum name='kCGLGOFormatCacheSize' value64='501'/>
<enum name='kCGLGOResetLibrary' value64='504'/>
<enum name='kCGLGORetainRenderers' value64='503'/>
<enum name='kCGLGOUseBuildCache' value64='506'/>
<enum name='kCGLGOUseErrorHandler' value64='505'/>
<enum name='kCGLMonoscopicBit' value64='1'/>
<enum name='kCGLMultisampleBit' value64='2'/>
<enum name='kCGLNoError' value64='0'/>
<enum name='kCGLOGLPVersion_3_2_Core' value64='12800'/>
<enum name='kCGLOGLPVersion_GL3_Core' value64='12800'/>
<enum name='kCGLOGLPVersion_GL4_Core' value64='16640'/>
<enum name='kCGLOGLPVersion_Legacy' value64='4096'/>
<enum name='kCGLPFAAccelerated' value64='73'/>
<enum name='kCGLPFAAcceleratedCompute' value64='97'/>
<enum name='kCGLPFAAccumSize' value64='14'/>
<enum name='kCGLPFAAllRenderers' value64='1'/>
<enum name='kCGLPFAAllowOfflineRenderers' value64='96'/>
<enum name='kCGLPFAAlphaSize' value64='11'/>
<enum name='kCGLPFAAuxBuffers' value64='7'/>
<enum name='kCGLPFAAuxDepthStencil' value64='57'/>
<enum name='kCGLPFABackingStore' value64='76'/>
<enum name='kCGLPFABackingVolatile' value64='77'/>
<enum name='kCGLPFAClosestPolicy' value64='74'/>
<enum name='kCGLPFAColorFloat' value64='58'/>
<enum name='kCGLPFAColorSize' value64='8'/>
<enum name='kCGLPFACompliant' value64='83'/>
<enum name='kCGLPFADepthSize' value64='12'/>
<enum name='kCGLPFADisplayMask' value64='84'/>
<enum name='kCGLPFADoubleBuffer' value64='5'/>
<enum name='kCGLPFAFullScreen' value64='54'/>
<enum name='kCGLPFAMPSafe' value64='78'/>
<enum name='kCGLPFAMaximumPolicy' value64='52'/>
<enum name='kCGLPFAMinimumPolicy' value64='51'/>
<enum name='kCGLPFAMultiScreen' value64='81'/>
<enum name='kCGLPFAMultisample' value64='59'/>
<enum name='kCGLPFANoRecovery' value64='72'/>
<enum name='kCGLPFAOffScreen' value64='53'/>
<enum name='kCGLPFAOpenGLProfile' value64='99'/>
<enum name='kCGLPFAPBuffer' value64='90'/>
<enum name='kCGLPFARemotePBuffer' value64='91'/>
<enum name='kCGLPFARendererID' value64='70'/>
<enum name='kCGLPFARobust' value64='75'/>
<enum name='kCGLPFASampleAlpha' value64='61'/>
<enum name='kCGLPFASampleBuffers' value64='55'/>
<enum name='kCGLPFASamples' value64='56'/>
<enum name='kCGLPFASingleRenderer' value64='71'/>
<enum name='kCGLPFAStencilSize' value64='13'/>
<enum name='kCGLPFAStereo' value64='6'/>
<enum name='kCGLPFASupersample' value64='60'/>
<enum name='kCGLPFASupportsAutomaticGraphicsSwitching' value64='101'/>
<enum name='kCGLPFATripleBuffer' value64='3'/>
<enum name='kCGLPFAVirtualScreenCount' value64='128'/>
<enum name='kCGLPFAWindow' value64='80'/>
<enum name='kCGLRGB101010Bit' value64='131072'/>
<enum name='kCGLRGB101010_A8Bit' value64='524288'/>
<enum name='kCGLRGB121212Bit' value64='1048576'/>
<enum name='kCGLRGB161616Bit' value64='4194304'/>
<enum name='kCGLRGB444A8Bit' value64='256'/>
<enum name='kCGLRGB444Bit' value64='64'/>
<enum name='kCGLRGB555A8Bit' value64='2048'/>
<enum name='kCGLRGB555Bit' value64='512'/>
<enum name='kCGLRGB565A8Bit' value64='8192'/>
<enum name='kCGLRGB565Bit' value64='4096'/>
<enum name='kCGLRGB888A8Bit' value64='65536'/>
<enum name='kCGLRGB888Bit' value64='16384'/>
<enum name='kCGLRGBA16161616Bit' value64='8388608'/>
<enum name='kCGLRGBAFloat128Bit' value64='134217728'/>
<enum name='kCGLRGBAFloat256Bit' value64='536870912'/>
<enum name='kCGLRGBAFloat64Bit' value64='33554432'/>
<enum name='kCGLRGBFloat128Bit' value64='67108864'/>
<enum name='kCGLRGBFloat256Bit' value64='268435456'/>
<enum name='kCGLRGBFloat64Bit' value64='16777216'/>
<enum name='kCGLRPAccelerated' value64='73'/>
<enum name='kCGLRPAcceleratedCompute' value64='130'/>
<enum name='kCGLRPAccumModes' value64='104'/>
<enum name='kCGLRPBackingStore' value64='76'/>
<enum name='kCGLRPBufferModes' value64='100'/>
<enum name='kCGLRPColorModes' value64='103'/>
<enum name='kCGLRPCompliant' value64='83'/>
<enum name='kCGLRPDepthModes' value64='105'/>
<enum name='kCGLRPDisplayMask' value64='84'/>
<enum name='kCGLRPFullScreen' value64='54'/>
<enum name='kCGLRPGPUFragProcCapable' value64='123'/>
<enum name='kCGLRPGPUVertProcCapable' value64='122'/>
<enum name='kCGLRPMPSafe' value64='78'/>
<enum name='kCGLRPMajorGLVersion' value64='133'/>
<enum name='kCGLRPMaxAuxBuffers' value64='107'/>
<enum name='kCGLRPMaxSampleBuffers' value64='108'/>
<enum name='kCGLRPMaxSamples' value64='109'/>
<enum name='kCGLRPMultiScreen' value64='81'/>
<enum name='kCGLRPOffScreen' value64='53'/>
<enum name='kCGLRPOnline' value64='129'/>
<enum name='kCGLRPRegistryIDHigh' value64='141'/>
<enum name='kCGLRPRegistryIDLow' value64='140'/>
<enum name='kCGLRPRemovable' value64='142'/>
<enum name='kCGLRPRendererCount' value64='128'/>
<enum name='kCGLRPRendererID' value64='70'/>
<enum name='kCGLRPRobust' value64='75'/>
<enum name='kCGLRPSampleAlpha' value64='111'/>
<enum name='kCGLRPSampleModes' value64='110'/>
<enum name='kCGLRPStencilModes' value64='106'/>
<enum name='kCGLRPTextureMemory' value64='121'/>
<enum name='kCGLRPTextureMemoryMegabytes' value64='132'/>
<enum name='kCGLRPVideoMemory' value64='120'/>
<enum name='kCGLRPVideoMemoryMegabytes' value64='131'/>
<enum name='kCGLRPWindow' value64='80'/>
<enum name='kCGLRendererATIRadeon8500ID' value64='136704'/>
<enum name='kCGLRendererATIRadeon9700ID' value64='137216'/>
<enum name='kCGLRendererATIRadeonID' value64='135680'/>
<enum name='kCGLRendererATIRadeonX1000ID' value64='137472'/>
<enum name='kCGLRendererATIRadeonX2000ID' value64='137728'/>
<enum name='kCGLRendererATIRadeonX3000ID' value64='137984'/>
<enum name='kCGLRendererATIRadeonX4000ID' value64='138240'/>
<enum name='kCGLRendererATIRage128ID' value64='135168'/>
<enum name='kCGLRendererATIRageProID' value64='136192'/>
<enum name='kCGLRendererAppleSWID' value64='132608'/>
<enum name='kCGLRendererGeForce2MXID' value64='139264'/>
<enum name='kCGLRendererGeForce3ID' value64='139776'/>
<enum name='kCGLRendererGeForce8xxxID' value64='140800'/>
<enum name='kCGLRendererGeForceFXID' value64='140288'/>
<enum name='kCGLRendererGeForceID' value64='141056'/>
<enum name='kCGLRendererGenericFloatID' value64='132096'/>
<enum name='kCGLRendererGenericID' value64='131584'/>
<enum name='kCGLRendererIDMatchingMask' value64='16678656'/>
<enum name='kCGLRendererIntel900ID' value64='147456'/>
<enum name='kCGLRendererIntelHD4000ID' value64='148480'/>
<enum name='kCGLRendererIntelHD5000ID' value64='148736'/>
<enum name='kCGLRendererIntelHDID' value64='148224'/>
<enum name='kCGLRendererIntelX3100ID' value64='147968'/>
<enum name='kCGLRendererMesa3DFXID' value64='262144'/>
<enum name='kCGLRendererVTBladeXP2ID' value64='143360'/>
<enum name='kCGLSingleBufferBit' value64='4'/>
<enum name='kCGLStereoscopicBit' value64='2'/>
<enum name='kCGLSupersampleBit' value64='1'/>
<enum name='kCGLTripleBufferBit' value64='16'/>
<function name='CGLChoosePixelFormat'>
<arg const='true' declared_type64='CGLPixelFormatAttribute * _Nonnull' name='attribs' type64='^i'/>
<arg declared_type64='CGLPixelFormatObj _Nullable * _Nonnull' name='pix' type64='^^{_CGLPixelFormatObject}'/>
<arg declared_type64='GLint * _Nonnull' name='npix' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLClearDrawable'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLCopyContext'>
<arg declared_type64='CGLContextObj _Nonnull' name='src' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLContextObj _Nonnull' name='dst' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLbitfield' name='mask' type64='I'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLCreateContext'>
<arg declared_type64='CGLPixelFormatObj _Nonnull' name='pix' type64='^{_CGLPixelFormatObject=}'/>
<arg declared_type64='CGLContextObj _Nullable' name='share' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLContextObj _Nullable * _Nonnull' name='ctx' type64='^^{_CGLContextObject}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLCreatePBuffer'>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalFormat' type64='I'/>
<arg declared_type64='GLint' name='max_level' type64='i'/>
<arg declared_type64='CGLPBufferObj _Nullable * _Nonnull' name='pbuffer' type64='^^{_CGLPBufferObject}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLDescribePBuffer'>
<arg declared_type64='CGLPBufferObj _Nonnull' name='obj' type64='^{_CGLPBufferObject=}'/>
<arg declared_type64='GLsizei * _Nonnull' name='width' type64='^i'/>
<arg declared_type64='GLsizei * _Nonnull' name='height' type64='^i'/>
<arg declared_type64='GLenum * _Nonnull' name='target' type64='^I'/>
<arg declared_type64='GLenum * _Nonnull' name='internalFormat' type64='^I'/>
<arg declared_type64='GLint * _Nonnull' name='mipmap' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLDescribePixelFormat'>
<arg declared_type64='CGLPixelFormatObj _Nonnull' name='pix' type64='^{_CGLPixelFormatObject=}'/>
<arg declared_type64='GLint' name='pix_num' type64='i'/>
<arg declared_type64='CGLPixelFormatAttribute' name='attrib' type64='i'/>
<arg declared_type64='GLint * _Nonnull' name='value' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLDescribeRenderer'>
<arg declared_type64='CGLRendererInfoObj _Nonnull' name='rend' type64='^{_CGLRendererInfoObject=}'/>
<arg declared_type64='GLint' name='rend_num' type64='i'/>
<arg declared_type64='CGLRendererProperty' name='prop' type64='i'/>
<arg declared_type64='GLint * _Nullable' name='value' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLDestroyContext'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLDestroyPBuffer'>
<arg declared_type64='CGLPBufferObj _Nonnull' name='pbuffer' type64='^{_CGLPBufferObject=}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLDestroyPixelFormat'>
<arg declared_type64='CGLPixelFormatObj _Nonnull' name='pix' type64='^{_CGLPixelFormatObject=}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLDestroyRendererInfo'>
<arg declared_type64='CGLRendererInfoObj _Nonnull' name='rend' type64='^{_CGLRendererInfoObject=}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLDisable'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLContextEnable' name='pname' type64='i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLEnable'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLContextEnable' name='pname' type64='i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLErrorString'>
<arg declared_type64='CGLError' name='error' type64='i'/>
<retval const='true' declared_type64='char * _Nonnull' type64='*'/>
</function>
<function name='CGLFlushDrawable'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLGetContextRetainCount'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='CGLGetCurrentContext'>
<retval declared_type64='CGLContextObj _Nullable' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
</function>
<function name='CGLGetDeviceFromGLRenderer'>
<arg declared_type64='GLint' name='rendererID' type64='i'/>
<retval declared_type64='cl_device_id _Nonnull' type64='^{_cl_device_id=}'/>
</function>
<function name='CGLGetGlobalOption'>
<arg declared_type64='CGLGlobalOption' name='pname' type64='i'/>
<arg declared_type64='GLint * _Nonnull' name='params' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLGetOffScreen'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLsizei * _Nonnull' name='width' type64='^i'/>
<arg declared_type64='GLsizei * _Nonnull' name='height' type64='^i'/>
<arg declared_type64='GLint * _Nonnull' name='rowbytes' type64='^i'/>
<arg declared_type64='void * _Nullable * _Nonnull' name='baseaddr' type64='^^v'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLGetOption'>
<arg declared_type64='CGLGlobalOption' name='pname' type64='i'/>
<arg declared_type64='GLint * _Nonnull' name='param' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLGetPBuffer'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLPBufferObj _Nullable * _Nonnull' name='pbuffer' type64='^^{_CGLPBufferObject}'/>
<arg declared_type64='GLenum * _Nonnull' name='face' type64='^I'/>
<arg declared_type64='GLint * _Nonnull' name='level' type64='^i'/>
<arg declared_type64='GLint * _Nonnull' name='screen' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLGetPBufferRetainCount'>
<arg declared_type64='CGLPBufferObj _Nonnull' name='pbuffer' type64='^{_CGLPBufferObject=}'/>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='CGLGetParameter'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLContextParameter' name='pname' type64='i'/>
<arg declared_type64='GLint * _Nonnull' name='params' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLGetPixelFormat'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLPixelFormatObj _Nullable' type64='^{_CGLPixelFormatObject=}'/>
</function>
<function name='CGLGetPixelFormatRetainCount'>
<arg declared_type64='CGLPixelFormatObj _Nonnull' name='pix' type64='^{_CGLPixelFormatObject=}'/>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='CGLGetShareGroup'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLShareGroupObj _Nullable' type64='^{CGLShareGroupRec=}'/>
</function>
<function name='CGLGetVersion'>
<arg declared_type64='GLint * _Nullable' name='majorvers' type64='^i'/>
<arg declared_type64='GLint * _Nullable' name='minorvers' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGLGetVirtualScreen'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLint * _Nonnull' name='screen' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLIsEnabled'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLContextEnable' name='pname' type64='i'/>
<arg declared_type64='GLint * _Nonnull' name='enable' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLLockContext'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLQueryRendererInfo'>
<arg declared_type64='GLuint' name='display_mask' type64='I'/>
<arg declared_type64='CGLRendererInfoObj _Nullable * _Nonnull' name='rend' type64='^^{_CGLRendererInfoObject}'/>
<arg declared_type64='GLint * _Nonnull' name='nrend' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLReleaseContext'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGLReleasePBuffer'>
<arg declared_type64='CGLPBufferObj _Nonnull' name='pbuffer' type64='^{_CGLPBufferObject=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGLReleasePixelFormat'>
<arg declared_type64='CGLPixelFormatObj _Nonnull' name='pix' type64='^{_CGLPixelFormatObject=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='CGLRetainContext'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLContextObj _Nonnull' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
</function>
<function name='CGLRetainPBuffer'>
<arg declared_type64='CGLPBufferObj _Nonnull' name='pbuffer' type64='^{_CGLPBufferObject=}'/>
<retval declared_type64='CGLPBufferObj _Nonnull' type64='^{_CGLPBufferObject=}'/>
</function>
<function name='CGLRetainPixelFormat'>
<arg declared_type64='CGLPixelFormatObj _Nonnull' name='pix' type64='^{_CGLPixelFormatObject=}'/>
<retval declared_type64='CGLPixelFormatObj _Nonnull' type64='^{_CGLPixelFormatObject=}'/>
</function>
<function name='CGLSetCurrentContext'>
<arg declared_type64='CGLContextObj _Nullable' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLSetFullScreen'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLSetFullScreenOnDisplay'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLuint' name='display_mask' type64='I'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLSetGlobalOption'>
<arg declared_type64='CGLGlobalOption' name='pname' type64='i'/>
<arg const='true' declared_type64='GLint * _Nullable' name='params' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLSetOffScreen'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLint' name='rowbytes' type64='i'/>
<arg declared_type64='void * _Nonnull' name='baseaddr' type64='^v'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLSetOption'>
<arg declared_type64='CGLGlobalOption' name='pname' type64='i'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLSetPBuffer'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLPBufferObj _Nonnull' name='pbuffer' type64='^{_CGLPBufferObject=}'/>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='screen' type64='i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLSetParameter'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLContextParameter' name='pname' type64='i'/>
<arg const='true' declared_type64='GLint * _Nonnull' name='params' type64='^i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLSetVirtualScreen'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLint' name='screen' type64='i'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLTexImageIOSurface2D'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internal_format' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='IOSurfaceRef _Nonnull' name='ioSurface' type64='^{__IOSurface=}'/>
<arg declared_type64='GLuint' name='plane' type64='I'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLTexImagePBuffer'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='CGLPBufferObj _Nonnull' name='pbuffer' type64='^{_CGLPBufferObject=}'/>
<arg declared_type64='GLenum' name='source' type64='I'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLUnlockContext'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='CGLUpdateContext'>
<arg declared_type64='CGLContextObj _Nonnull' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='CGLError' type64='i'/>
</function>
<function name='glAccum'>
<arg declared_type64='GLenum' name='op' type64='I'/>
<arg declared_type64='GLfloat' name='value' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glActiveShaderProgram'>
<arg declared_type64='GLuint' name='pipeline' type64='I'/>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glActiveStencilFaceEXT'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glActiveTexture'>
<arg declared_type64='GLenum' name='texture' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glActiveTextureARB'>
<arg declared_type64='GLenum' name='texture' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glAlphaFunc'>
<arg declared_type64='GLenum' name='func' type64='I'/>
<arg declared_type64='GLclampf' name='ref' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glAreTexturesResident'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='textures' type64='^I'/>
<arg declared_type64='GLboolean*' name='residences' type64='*'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glArrayElement'>
<arg declared_type64='GLint' name='i' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glAttachObjectARB'>
<arg declared_type64='GLhandleARB' name='containerObj' type64='^v'/>
<arg declared_type64='GLhandleARB' name='obj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glAttachShader'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBegin'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBeginConditionalRenderNV'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBeginQuery'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBeginQueryARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBeginQueryIndexed'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBeginTransformFeedbackEXT'>
<arg declared_type64='GLenum' name='primitiveMode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindAttribLocation'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindAttribLocationARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLcharARB*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindBuffer'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindBufferARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindBufferBaseEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindBufferOffsetEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<arg declared_type64='GLintptr' name='offset' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindBufferRangeEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<arg declared_type64='GLintptr' name='offset' type64='q'/>
<arg declared_type64='GLsizeiptr' name='size' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindFragDataLocationEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='colorNumber' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindFragDataLocationIndexed'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='colorNumber' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindFramebuffer'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='framebuffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindFramebufferEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='framebuffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindProgramARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindProgramPipeline'>
<arg declared_type64='GLuint' name='pipeline' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindRenderbuffer'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='renderbuffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindRenderbufferEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='renderbuffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindSampler'>
<arg declared_type64='GLuint' name='unit' type64='I'/>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindTexture'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindTransformFeedback'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindVertexArray'>
<arg declared_type64='GLuint' name='array' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBindVertexArrayAPPLE'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBitmap'>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLfloat' name='xorig' type64='f'/>
<arg declared_type64='GLfloat' name='yorig' type64='f'/>
<arg declared_type64='GLfloat' name='xmove' type64='f'/>
<arg declared_type64='GLfloat' name='ymove' type64='f'/>
<arg const='true' declared_type64='GLubyte*' name='bitmap' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendColor'>
<arg declared_type64='GLclampf' name='red' type64='f'/>
<arg declared_type64='GLclampf' name='green' type64='f'/>
<arg declared_type64='GLclampf' name='blue' type64='f'/>
<arg declared_type64='GLclampf' name='alpha' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendColorEXT'>
<arg declared_type64='GLclampf' name='red' type64='f'/>
<arg declared_type64='GLclampf' name='green' type64='f'/>
<arg declared_type64='GLclampf' name='blue' type64='f'/>
<arg declared_type64='GLclampf' name='alpha' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquation'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquationEXT'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquationSeparate'>
<arg declared_type64='GLenum' name='modeRGB' type64='I'/>
<arg declared_type64='GLenum' name='modeAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquationSeparateATI'>
<arg declared_type64='GLenum' name='equationRGB' type64='I'/>
<arg declared_type64='GLenum' name='equationAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquationSeparateEXT'>
<arg declared_type64='GLenum' name='modeRGB' type64='I'/>
<arg declared_type64='GLenum' name='modeAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquationSeparatei'>
<arg declared_type64='GLuint' name='buf' type64='I'/>
<arg declared_type64='GLenum' name='modeRGB' type64='I'/>
<arg declared_type64='GLenum' name='modeAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquationSeparateiARB'>
<arg declared_type64='GLuint' name='buf' type64='I'/>
<arg declared_type64='GLenum' name='modeRGB' type64='I'/>
<arg declared_type64='GLenum' name='modeAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquationi'>
<arg declared_type64='GLuint' name='buf' type64='I'/>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendEquationiARB'>
<arg declared_type64='GLuint' name='buf' type64='I'/>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendFunc'>
<arg declared_type64='GLenum' name='sfactor' type64='I'/>
<arg declared_type64='GLenum' name='dfactor' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendFuncSeparate'>
<arg declared_type64='GLenum' name='srcRGB' type64='I'/>
<arg declared_type64='GLenum' name='dstRGB' type64='I'/>
<arg declared_type64='GLenum' name='srcAlpha' type64='I'/>
<arg declared_type64='GLenum' name='dstAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendFuncSeparateEXT'>
<arg declared_type64='GLenum' name='sfactorRGB' type64='I'/>
<arg declared_type64='GLenum' name='dfactorRGB' type64='I'/>
<arg declared_type64='GLenum' name='sfactorAlpha' type64='I'/>
<arg declared_type64='GLenum' name='dfactorAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendFuncSeparatei'>
<arg declared_type64='GLuint' name='buf' type64='I'/>
<arg declared_type64='GLenum' name='srcRGB' type64='I'/>
<arg declared_type64='GLenum' name='dstRGB' type64='I'/>
<arg declared_type64='GLenum' name='srcAlpha' type64='I'/>
<arg declared_type64='GLenum' name='dstAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendFuncSeparateiARB'>
<arg declared_type64='GLuint' name='buf' type64='I'/>
<arg declared_type64='GLenum' name='srcRGB' type64='I'/>
<arg declared_type64='GLenum' name='dstRGB' type64='I'/>
<arg declared_type64='GLenum' name='srcAlpha' type64='I'/>
<arg declared_type64='GLenum' name='dstAlpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendFunci'>
<arg declared_type64='GLuint' name='buf' type64='I'/>
<arg declared_type64='GLenum' name='src' type64='I'/>
<arg declared_type64='GLenum' name='dst' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlendFunciARB'>
<arg declared_type64='GLuint' name='buf' type64='I'/>
<arg declared_type64='GLenum' name='src' type64='I'/>
<arg declared_type64='GLenum' name='dst' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlitFramebuffer'>
<arg declared_type64='GLint' name='srcX0' type64='i'/>
<arg declared_type64='GLint' name='srcY0' type64='i'/>
<arg declared_type64='GLint' name='srcX1' type64='i'/>
<arg declared_type64='GLint' name='srcY1' type64='i'/>
<arg declared_type64='GLint' name='dstX0' type64='i'/>
<arg declared_type64='GLint' name='dstY0' type64='i'/>
<arg declared_type64='GLint' name='dstX1' type64='i'/>
<arg declared_type64='GLint' name='dstY1' type64='i'/>
<arg declared_type64='GLbitfield' name='mask' type64='I'/>
<arg declared_type64='GLenum' name='filter' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBlitFramebufferEXT'>
<arg declared_type64='GLint' name='srcX0' type64='i'/>
<arg declared_type64='GLint' name='srcY0' type64='i'/>
<arg declared_type64='GLint' name='srcX1' type64='i'/>
<arg declared_type64='GLint' name='srcY1' type64='i'/>
<arg declared_type64='GLint' name='dstX0' type64='i'/>
<arg declared_type64='GLint' name='dstY0' type64='i'/>
<arg declared_type64='GLint' name='dstX1' type64='i'/>
<arg declared_type64='GLint' name='dstY1' type64='i'/>
<arg declared_type64='GLbitfield' name='mask' type64='I'/>
<arg declared_type64='GLenum' name='filter' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBufferData'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizeiptr' name='size' type64='q'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<arg declared_type64='GLenum' name='usage' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBufferDataARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizeiptrARB' name='size' type64='q'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<arg declared_type64='GLenum' name='usage' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBufferParameteriAPPLE'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBufferSubData'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLintptr' name='offset' type64='q'/>
<arg declared_type64='GLsizeiptr' name='size' type64='q'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glBufferSubDataARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLintptrARB' name='offset' type64='q'/>
<arg declared_type64='GLsizeiptrARB' name='size' type64='q'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCallList'>
<arg declared_type64='GLuint' name='list' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCallLists'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='lists' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCheckFramebufferStatus'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='GLenum' type64='I'/>
</function>
<function name='glCheckFramebufferStatusEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='GLenum' type64='I'/>
</function>
<function name='glClampColorARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='clamp' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClear'>
<arg declared_type64='GLbitfield' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClearAccum'>
<arg declared_type64='GLfloat' name='red' type64='f'/>
<arg declared_type64='GLfloat' name='green' type64='f'/>
<arg declared_type64='GLfloat' name='blue' type64='f'/>
<arg declared_type64='GLfloat' name='alpha' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClearColor'>
<arg declared_type64='GLclampf' name='red' type64='f'/>
<arg declared_type64='GLclampf' name='green' type64='f'/>
<arg declared_type64='GLclampf' name='blue' type64='f'/>
<arg declared_type64='GLclampf' name='alpha' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClearColorIiEXT'>
<arg declared_type64='GLint' name='r' type64='i'/>
<arg declared_type64='GLint' name='g' type64='i'/>
<arg declared_type64='GLint' name='b' type64='i'/>
<arg declared_type64='GLint' name='a' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClearColorIuiEXT'>
<arg declared_type64='GLuint' name='r' type64='I'/>
<arg declared_type64='GLuint' name='g' type64='I'/>
<arg declared_type64='GLuint' name='b' type64='I'/>
<arg declared_type64='GLuint' name='a' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClearDepth'>
<arg declared_type64='GLclampd' name='depth' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClearDepthf'>
<arg declared_type64='GLclampf' name='d' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClearIndex'>
<arg declared_type64='GLfloat' name='c' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClearStencil'>
<arg declared_type64='GLint' name='s' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClientActiveTexture'>
<arg declared_type64='GLenum' name='texture' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClientActiveTextureARB'>
<arg declared_type64='GLenum' name='texture' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glClientWaitSync'>
<arg declared_type64='GLsync' name='sync' type64='^{__GLsync=}'/>
<arg declared_type64='GLbitfield' name='flags' type64='I'/>
<arg declared_type64='GLuint64' name='timeout' type64='Q'/>
<retval declared_type64='GLenum' type64='I'/>
</function>
<function name='glClipPlane'>
<arg declared_type64='GLenum' name='plane' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='equation' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3b'>
<arg declared_type64='GLbyte' name='red' type64='c'/>
<arg declared_type64='GLbyte' name='green' type64='c'/>
<arg declared_type64='GLbyte' name='blue' type64='c'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3bv'>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3d'>
<arg declared_type64='GLdouble' name='red' type64='d'/>
<arg declared_type64='GLdouble' name='green' type64='d'/>
<arg declared_type64='GLdouble' name='blue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3f'>
<arg declared_type64='GLfloat' name='red' type64='f'/>
<arg declared_type64='GLfloat' name='green' type64='f'/>
<arg declared_type64='GLfloat' name='blue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3i'>
<arg declared_type64='GLint' name='red' type64='i'/>
<arg declared_type64='GLint' name='green' type64='i'/>
<arg declared_type64='GLint' name='blue' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3s'>
<arg declared_type64='GLshort' name='red' type64='s'/>
<arg declared_type64='GLshort' name='green' type64='s'/>
<arg declared_type64='GLshort' name='blue' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3ub'>
<arg declared_type64='GLubyte' name='red' type64='C'/>
<arg declared_type64='GLubyte' name='green' type64='C'/>
<arg declared_type64='GLubyte' name='blue' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3ubv'>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3ui'>
<arg declared_type64='GLuint' name='red' type64='I'/>
<arg declared_type64='GLuint' name='green' type64='I'/>
<arg declared_type64='GLuint' name='blue' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3uiv'>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3us'>
<arg declared_type64='GLushort' name='red' type64='S'/>
<arg declared_type64='GLushort' name='green' type64='S'/>
<arg declared_type64='GLushort' name='blue' type64='S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor3usv'>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4b'>
<arg declared_type64='GLbyte' name='red' type64='c'/>
<arg declared_type64='GLbyte' name='green' type64='c'/>
<arg declared_type64='GLbyte' name='blue' type64='c'/>
<arg declared_type64='GLbyte' name='alpha' type64='c'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4bv'>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4d'>
<arg declared_type64='GLdouble' name='red' type64='d'/>
<arg declared_type64='GLdouble' name='green' type64='d'/>
<arg declared_type64='GLdouble' name='blue' type64='d'/>
<arg declared_type64='GLdouble' name='alpha' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4f'>
<arg declared_type64='GLfloat' name='red' type64='f'/>
<arg declared_type64='GLfloat' name='green' type64='f'/>
<arg declared_type64='GLfloat' name='blue' type64='f'/>
<arg declared_type64='GLfloat' name='alpha' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4i'>
<arg declared_type64='GLint' name='red' type64='i'/>
<arg declared_type64='GLint' name='green' type64='i'/>
<arg declared_type64='GLint' name='blue' type64='i'/>
<arg declared_type64='GLint' name='alpha' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4s'>
<arg declared_type64='GLshort' name='red' type64='s'/>
<arg declared_type64='GLshort' name='green' type64='s'/>
<arg declared_type64='GLshort' name='blue' type64='s'/>
<arg declared_type64='GLshort' name='alpha' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4ub'>
<arg declared_type64='GLubyte' name='red' type64='C'/>
<arg declared_type64='GLubyte' name='green' type64='C'/>
<arg declared_type64='GLubyte' name='blue' type64='C'/>
<arg declared_type64='GLubyte' name='alpha' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4ubv'>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4ui'>
<arg declared_type64='GLuint' name='red' type64='I'/>
<arg declared_type64='GLuint' name='green' type64='I'/>
<arg declared_type64='GLuint' name='blue' type64='I'/>
<arg declared_type64='GLuint' name='alpha' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4uiv'>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4us'>
<arg declared_type64='GLushort' name='red' type64='S'/>
<arg declared_type64='GLushort' name='green' type64='S'/>
<arg declared_type64='GLushort' name='blue' type64='S'/>
<arg declared_type64='GLushort' name='alpha' type64='S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColor4usv'>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColorMask'>
<arg declared_type64='GLboolean' name='red' type64='C'/>
<arg declared_type64='GLboolean' name='green' type64='C'/>
<arg declared_type64='GLboolean' name='blue' type64='C'/>
<arg declared_type64='GLboolean' name='alpha' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColorMaskIndexedEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLboolean' name='r' type64='C'/>
<arg declared_type64='GLboolean' name='g' type64='C'/>
<arg declared_type64='GLboolean' name='b' type64='C'/>
<arg declared_type64='GLboolean' name='a' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColorMaterial'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColorPointer'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColorSubTable'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='start' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColorTable'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='table' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColorTableParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glColorTableParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompileShader'>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompileShaderARB'>
<arg declared_type64='GLhandleARB' name='shaderObj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompileShaderIncludeARB'>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLchar **' name='path' type64='^*'/>
<arg const='true' declared_type64='GLint*' name='length' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexImage1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexImage1DARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexImage2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexImage2DARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexImage3D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexImage3DARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexSubImage1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexSubImage1DARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexSubImage2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='yoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexSubImage2DARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='yoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexSubImage3D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='yoffset' type64='i'/>
<arg declared_type64='GLint' name='zoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCompressedTexSubImage3DARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='yoffset' type64='i'/>
<arg declared_type64='GLint' name='zoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='imageSize' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glConvolutionFilter1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='image' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glConvolutionFilter2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='image' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glConvolutionParameterf'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='params' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glConvolutionParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glConvolutionParameteri'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='params' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glConvolutionParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyBufferSubData'>
<arg declared_type64='GLenum' name='readTarget' type64='I'/>
<arg declared_type64='GLenum' name='writeTarget' type64='I'/>
<arg declared_type64='GLintptr' name='readOffset' type64='q'/>
<arg declared_type64='GLintptr' name='writeOffset' type64='q'/>
<arg declared_type64='GLsizeiptr' name='size' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyColorSubTable'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='start' type64='i'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyColorTable'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyConvolutionFilter1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyConvolutionFilter2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyPixels'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyTexImage1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyTexImage2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyTexSubImage1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyTexSubImage2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='yoffset' type64='i'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCopyTexSubImage3D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='yoffset' type64='i'/>
<arg declared_type64='GLint' name='zoffset' type64='i'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glCreateProgram'>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='glCreateProgramObjectARB'>
<retval declared_type64='GLhandleARB' type64='^v'/>
</function>
<function name='glCreateShader'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='glCreateShaderObjectARB'>
<arg declared_type64='GLenum' name='shaderType' type64='I'/>
<retval declared_type64='GLhandleARB' type64='^v'/>
</function>
<function name='glCreateShaderProgramv'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLchar **' name='strings' type64='^*'/>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='glCullFace'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteBuffers'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='buffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteBuffersARB'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='buffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteFencesAPPLE'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='fences' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteFramebuffers'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='framebuffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteFramebuffersEXT'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='framebuffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteLists'>
<arg declared_type64='GLuint' name='list' type64='I'/>
<arg declared_type64='GLsizei' name='range' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteNamedStringARB'>
<arg declared_type64='GLint' name='namelen' type64='i'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteObjectARB'>
<arg declared_type64='GLhandleARB' name='obj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteProgram'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteProgramPipelines'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='pipelines' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteProgramsARB'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='programs' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteQueries'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='ids' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteQueriesARB'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='ids' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteRenderbuffers'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='renderbuffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteRenderbuffersEXT'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='renderbuffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteSamplers'>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='samplers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteShader'>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteSync'>
<arg declared_type64='GLsync' name='sync' type64='^{__GLsync=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteTextures'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='textures' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteTransformFeedbacks'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='ids' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteVertexArrays'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='arrays' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDeleteVertexArraysAPPLE'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='ids' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDepthBoundsEXT'>
<arg declared_type64='GLclampd' name='zmin' type64='d'/>
<arg declared_type64='GLclampd' name='zmax' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDepthFunc'>
<arg declared_type64='GLenum' name='func' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDepthMask'>
<arg declared_type64='GLboolean' name='flag' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDepthRange'>
<arg declared_type64='GLclampd' name='zNear' type64='d'/>
<arg declared_type64='GLclampd' name='zFar' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDepthRangeArrayv'>
<arg declared_type64='GLuint' name='first' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLclampd*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDepthRangeIndexed'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLclampd' name='n' type64='d'/>
<arg declared_type64='GLclampd' name='f' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDepthRangef'>
<arg declared_type64='GLclampf' name='n' type64='f'/>
<arg declared_type64='GLclampf' name='f' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDetachObjectARB'>
<arg declared_type64='GLhandleARB' name='containerObj' type64='^v'/>
<arg declared_type64='GLhandleARB' name='attachedObj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDetachShader'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDisable'>
<arg declared_type64='GLenum' name='cap' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDisableClientState'>
<arg declared_type64='GLenum' name='array' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDisableIndexedEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDisableVertexAttribAPPLE'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDisableVertexAttribArray'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDisableVertexAttribArrayARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawArrays'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLint' name='first' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawArraysIndirect'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indirect' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawArraysInstanced'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLint' name='first' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLsizei' name='instancecount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawArraysInstancedARB'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLint' name='first' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawBuffer'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawBuffers'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLenum*' name='bufs' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawBuffersARB'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLenum*' name='bufs' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawElementArrayAPPLE'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLint' name='first' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawElements'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indices' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawElementsBaseVertex'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indices' type64='^v'/>
<arg declared_type64='GLint' name='base_vertex' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawElementsIndirect'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indirect' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawElementsInstanced'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indices' type64='^v'/>
<arg declared_type64='GLsizei' name='instancecount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawElementsInstancedARB'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indices' type64='^v'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawElementsInstancedBaseVertex'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indices' type64='^v'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<arg declared_type64='GLint' name='base_vertex' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawPixels'>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawRangeElementArrayAPPLE'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLuint' name='start' type64='I'/>
<arg declared_type64='GLuint' name='end' type64='I'/>
<arg declared_type64='GLint' name='first' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawRangeElements'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLuint' name='start' type64='I'/>
<arg declared_type64='GLuint' name='end' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indices' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawRangeElementsBaseVertex'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLuint' name='start' type64='I'/>
<arg declared_type64='GLuint' name='end' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indices' type64='^v'/>
<arg declared_type64='GLint' name='base_vertex' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawRangeElementsEXT'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLuint' name='start' type64='I'/>
<arg declared_type64='GLuint' name='end' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='indices' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawTransformFeedback'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glDrawTransformFeedbackStream'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLuint' name='stream' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEdgeFlag'>
<arg declared_type64='GLboolean' name='flag' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEdgeFlagPointer'>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEdgeFlagv'>
<arg const='true' declared_type64='GLboolean*' name='flag' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glElementPointerAPPLE'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEnable'>
<arg declared_type64='GLenum' name='cap' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEnableClientState'>
<arg declared_type64='GLenum' name='array' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEnableIndexedEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEnableVertexAttribAPPLE'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEnableVertexAttribArray'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEnableVertexAttribArrayARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEnd'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEndConditionalRenderNV'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEndList'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEndQuery'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEndQueryARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEndQueryIndexed'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEndTransformFeedbackEXT'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalCoord1d'>
<arg declared_type64='GLdouble' name='u' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalCoord1dv'>
<arg const='true' declared_type64='GLdouble*' name='u' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalCoord1f'>
<arg declared_type64='GLfloat' name='u' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalCoord1fv'>
<arg const='true' declared_type64='GLfloat*' name='u' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalCoord2d'>
<arg declared_type64='GLdouble' name='u' type64='d'/>
<arg declared_type64='GLdouble' name='v' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalCoord2dv'>
<arg const='true' declared_type64='GLdouble*' name='u' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalCoord2f'>
<arg declared_type64='GLfloat' name='u' type64='f'/>
<arg declared_type64='GLfloat' name='v' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalCoord2fv'>
<arg const='true' declared_type64='GLfloat*' name='u' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalMesh1'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLint' name='i1' type64='i'/>
<arg declared_type64='GLint' name='i2' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalMesh2'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLint' name='i1' type64='i'/>
<arg declared_type64='GLint' name='i2' type64='i'/>
<arg declared_type64='GLint' name='j1' type64='i'/>
<arg declared_type64='GLint' name='j2' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalPoint1'>
<arg declared_type64='GLint' name='i' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glEvalPoint2'>
<arg declared_type64='GLint' name='i' type64='i'/>
<arg declared_type64='GLint' name='j' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFeedbackBuffer'>
<arg declared_type64='GLsizei' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLfloat*' name='buffer' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFenceSync'>
<arg declared_type64='GLenum' name='condition' type64='I'/>
<arg declared_type64='GLbitfield' name='flags' type64='I'/>
<retval declared_type64='GLsync' type64='^{__GLsync=}'/>
</function>
<function name='glFinish'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFinishFenceAPPLE'>
<arg declared_type64='GLuint' name='fence' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFinishObjectAPPLE'>
<arg declared_type64='GLenum' name='object' type64='I'/>
<arg declared_type64='GLuint' name='name' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFinishRenderAPPLE'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFlush'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFlushMappedBufferRange'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLintptr' name='offset' type64='q'/>
<arg declared_type64='GLsizeiptr' name='length' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFlushMappedBufferRangeAPPLE'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLintptr' name='offset' type64='q'/>
<arg declared_type64='GLsizeiptr' name='size' type64='q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFlushRenderAPPLE'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFlushVertexArrayRangeAPPLE'>
<arg declared_type64='GLsizei' name='length' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoordPointer'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoordPointerEXT'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoordd'>
<arg declared_type64='GLdouble' name='coord' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoorddEXT'>
<arg declared_type64='GLdouble' name='coord' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoorddv'>
<arg const='true' declared_type64='GLdouble*' name='coord' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoorddvEXT'>
<arg const='true' declared_type64='GLdouble*' name='coord' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoordf'>
<arg declared_type64='GLfloat' name='coord' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoordfEXT'>
<arg declared_type64='GLfloat' name='coord' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoordfv'>
<arg const='true' declared_type64='GLfloat*' name='coord' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogCoordfvEXT'>
<arg const='true' declared_type64='GLfloat*' name='coord' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogf'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogfv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogi'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFogiv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferRenderbuffer'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='renderbuffertarget' type64='I'/>
<arg declared_type64='GLuint' name='renderbuffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferRenderbufferEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='renderbuffertarget' type64='I'/>
<arg declared_type64='GLuint' name='renderbuffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTexture'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTexture1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='textarget' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTexture1DEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='textarget' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTexture2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='textarget' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTexture2DEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='textarget' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTexture3D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='textarget' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='zoffset' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTexture3DEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='textarget' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='zoffset' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTextureEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTextureFaceEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='face' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTextureLayer'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='layer' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFramebufferTextureLayerEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='layer' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFrontFace'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glFrustum'>
<arg declared_type64='GLdouble' name='left' type64='d'/>
<arg declared_type64='GLdouble' name='right' type64='d'/>
<arg declared_type64='GLdouble' name='bottom' type64='d'/>
<arg declared_type64='GLdouble' name='top' type64='d'/>
<arg declared_type64='GLdouble' name='zNear' type64='d'/>
<arg declared_type64='GLdouble' name='zFar' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenBuffers'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='buffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenBuffersARB'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='buffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenFencesAPPLE'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='fences' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenFramebuffers'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='framebuffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenFramebuffersEXT'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='framebuffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenLists'>
<arg declared_type64='GLsizei' name='range' type64='i'/>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='glGenProgramPipelines'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='pipelines' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenProgramsARB'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='programs' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenQueries'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='ids' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenQueriesARB'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='ids' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenRenderbuffers'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='renderbuffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenRenderbuffersEXT'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='renderbuffers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenSamplers'>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLuint*' name='samplers' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenTextures'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='textures' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenTransformFeedbacks'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='ids' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenVertexArrays'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='arrays' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenVertexArraysAPPLE'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg declared_type64='GLuint*' name='ids' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenerateMipmap'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGenerateMipmapEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveAttrib'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLint*' name='size' type64='^i'/>
<arg declared_type64='GLenum*' name='type' type64='^I'/>
<arg declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveAttribARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='maxLength' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLint*' name='size' type64='^i'/>
<arg declared_type64='GLenum*' name='type' type64='^I'/>
<arg declared_type64='GLcharARB*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveSubroutineName'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='bufsize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveSubroutineUniformName'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='bufsize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveSubroutineUniformiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='values' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveUniform'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLint*' name='size' type64='^i'/>
<arg declared_type64='GLenum*' name='type' type64='^I'/>
<arg declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveUniformARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='maxLength' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLint*' name='size' type64='^i'/>
<arg declared_type64='GLenum*' name='type' type64='^I'/>
<arg declared_type64='GLcharARB*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveUniformBlockName'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='uniformBlockIndex' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='uniformBlockName' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveUniformBlockiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='uniformBlockIndex' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveUniformName'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='uniformIndex' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='uniformName' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetActiveUniformsiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLsizei' name='uniformCount' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='uniformIndices' type64='^I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetAttachedObjectsARB'>
<arg declared_type64='GLhandleARB' name='containerObj' type64='^v'/>
<arg declared_type64='GLsizei' name='maxCount' type64='i'/>
<arg declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLhandleARB*' name='obj' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetAttachedShaders'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLsizei' name='maxCount' type64='i'/>
<arg declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLuint*' name='shaders' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetAttribLocation'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glGetAttribLocationARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<arg const='true' declared_type64='GLcharARB*' name='name' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glGetBooleanIndexedvEXT'>
<arg declared_type64='GLenum' name='param' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLboolean*' name='values' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetBooleanv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLboolean*' name='params' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetBufferParameteri64v'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint64*' name='params' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetBufferParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetBufferParameterivARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetBufferPointerv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLvoid**' name='params' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetBufferPointervARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLvoid**' name='params' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetBufferSubData'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLintptr' name='offset' type64='q'/>
<arg declared_type64='GLsizeiptr' name='size' type64='q'/>
<arg declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetBufferSubDataARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLintptrARB' name='offset' type64='q'/>
<arg declared_type64='GLsizeiptrARB' name='size' type64='q'/>
<arg declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetClipPlane'>
<arg declared_type64='GLenum' name='plane' type64='I'/>
<arg declared_type64='GLdouble*' name='equation' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetColorTable'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLvoid*' name='table' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetColorTableParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetColorTableParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetCompressedTexImage'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='lod' type64='i'/>
<arg declared_type64='GLvoid*' name='img' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetCompressedTexImageARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetConvolutionFilter'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLvoid*' name='image' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetConvolutionParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetConvolutionParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetDoublei_v'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble*' name='data' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetDoublev'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetError'>
<retval declared_type64='GLenum' type64='I'/>
</function>
<function name='glGetFloati_v'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat*' name='data' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetFloatv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetFragDataIndex'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glGetFragDataLocationEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glGetFramebufferAttachmentParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetFramebufferAttachmentParameterivEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='attachment' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetHandleARB'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<retval declared_type64='GLhandleARB' type64='^v'/>
</function>
<function name='glGetHistogram'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLboolean' name='reset' type64='C'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLvoid*' name='values' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetHistogramParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetHistogramParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetInfoLogARB'>
<arg declared_type64='GLhandleARB' name='obj' type64='^v'/>
<arg declared_type64='GLsizei' name='maxLength' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLcharARB*' name='infoLog' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetInteger64i_v'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint64*' name='data' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetInteger64v'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint64*' name='params' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetIntegerIndexedvEXT'>
<arg declared_type64='GLenum' name='param' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint*' name='values' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetIntegerv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetInternalformativ'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetLightfv'>
<arg declared_type64='GLenum' name='light' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetLightiv'>
<arg declared_type64='GLenum' name='light' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMapdv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='query' type64='I'/>
<arg declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMapfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='query' type64='I'/>
<arg declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMapiv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='query' type64='I'/>
<arg declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMaterialfv'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMaterialiv'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMinmax'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLboolean' name='reset' type64='C'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLvoid*' name='values' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMinmaxParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMinmaxParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetMultisamplefv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat*' name='val' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetNamedStringARB'>
<arg declared_type64='GLint' name='namelen' type64='i'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLint*' name='stringlen' type64='^i'/>
<arg declared_type64='GLchar*' name='string' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetNamedStringivARB'>
<arg declared_type64='GLint' name='namelen' type64='i'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetObjectLabelEXT'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLuint' name='object' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='label' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetObjectParameterfvARB'>
<arg declared_type64='GLhandleARB' name='obj' type64='^v'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetObjectParameterivAPPLE'>
<arg declared_type64='GLenum' name='objectType' type64='I'/>
<arg declared_type64='GLuint' name='name' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetObjectParameterivARB'>
<arg declared_type64='GLhandleARB' name='obj' type64='^v'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetPixelMapfv'>
<arg declared_type64='GLenum' name='map' type64='I'/>
<arg declared_type64='GLfloat*' name='values' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetPixelMapuiv'>
<arg declared_type64='GLenum' name='map' type64='I'/>
<arg declared_type64='GLuint*' name='values' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetPixelMapusv'>
<arg declared_type64='GLenum' name='map' type64='I'/>
<arg declared_type64='GLushort*' name='values' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetPointerv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLvoid**' name='params' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetPolygonStipple'>
<arg declared_type64='GLubyte*' name='mask' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramBinary'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLenum*' name='binaryFormat' type64='^I'/>
<arg declared_type64='GLvoid*' name='binary' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramEnvParameterdvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramEnvParameterfvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramInfoLog'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='infoLog' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramLocalParameterdvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramLocalParameterfvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramPipelineInfoLog'>
<arg declared_type64='GLuint' name='pipeline' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='infoLog' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramPipelineiv'>
<arg declared_type64='GLuint' name='pipeline' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramStageiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='values' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramStringARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLvoid*' name='string' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetProgramivARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryIndexediv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryObjecti64v'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint64*' name='params' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryObjecti64vEXT'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint64EXT*' name='params' type64='^q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryObjectiv'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryObjectivARB'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryObjectui64v'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint64*' name='params' type64='^Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryObjectui64vEXT'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint64EXT*' name='params' type64='^Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryObjectuiv'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint*' name='params' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryObjectuivARB'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint*' name='params' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryiv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetQueryivARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetRenderbufferParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetRenderbufferParameterivEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetSamplerParameterIiv'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetSamplerParameterIuiv'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint*' name='params' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetSamplerParameterfv'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetSamplerParameteriv'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetSeparableFilter'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLvoid*' name='row' type64='^v'/>
<arg declared_type64='GLvoid*' name='column' type64='^v'/>
<arg declared_type64='GLvoid*' name='span' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetShaderInfoLog'>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='infoLog' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetShaderPrecisionFormat'>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg declared_type64='GLenum' name='precisiontype' type64='I'/>
<arg declared_type64='GLint*' name='range' type64='^i'/>
<arg declared_type64='GLint*' name='precision' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetShaderSource'>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLchar*' name='source' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetShaderSourceARB'>
<arg declared_type64='GLhandleARB' name='obj' type64='^v'/>
<arg declared_type64='GLsizei' name='maxLength' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLcharARB*' name='source' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetShaderiv'>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetString'>
<arg declared_type64='GLenum' name='name' type64='I'/>
<retval const='true' declared_type64='GLubyte*' type64='*'/>
</function>
<function name='glGetSubroutineIndex'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='glGetSubroutineUniformLocation'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glGetSynciv'>
<arg declared_type64='GLsync' name='sync' type64='^{__GLsync=}'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLint*' name='values' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexEnvfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexEnviv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexGendv'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexGenfv'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexGeniv'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexImage'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexLevelParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexLevelParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexParameterIivEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexParameterIuivEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint*' name='params' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexParameterPointervAPPLE'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLvoid**' name='params' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTexParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetTransformFeedbackVaryingEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='bufSize' type64='i'/>
<arg declared_type64='GLsizei*' name='length' type64='^i'/>
<arg declared_type64='GLsizei*' name='size' type64='^i'/>
<arg declared_type64='GLenum*' name='type' type64='^I'/>
<arg declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetUniformBlockIndex'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='uniformBlockName' type64='*'/>
<retval declared_type64='GLuint' type64='I'/>
</function>
<function name='glGetUniformBufferSizeEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glGetUniformIndices'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLsizei' name='uniformCount' type64='i'/>
<arg const='true' declared_type64='GLchar **' name='uniformNames' type64='^*'/>
<arg declared_type64='GLuint*' name='uniformIndices' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetUniformLocation'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glGetUniformLocationARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<arg const='true' declared_type64='GLcharARB*' name='name' type64='*'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glGetUniformOffsetEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<retval declared_type64='GLintptr' type64='q'/>
</function>
<function name='glGetUniformSubroutineuiv'>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint*' name='params' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetUniformdv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetUniformfv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetUniformfvARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetUniformiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetUniformivARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetUniformuivEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint*' name='params' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribIivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribIuivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint*' name='params' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribLdv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribPointerv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLvoid**' name='pointer' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribPointervARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLvoid**' name='pointer' type64='^^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribdv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribdvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribfv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribfvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribiv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glGetVertexAttribivARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glHint'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glHistogram'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLboolean' name='sink' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexMask'>
<arg declared_type64='GLuint' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexPointer'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexd'>
<arg declared_type64='GLdouble' name='c' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexdv'>
<arg const='true' declared_type64='GLdouble*' name='c' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexf'>
<arg declared_type64='GLfloat' name='c' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexfv'>
<arg const='true' declared_type64='GLfloat*' name='c' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexi'>
<arg declared_type64='GLint' name='c' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexiv'>
<arg const='true' declared_type64='GLint*' name='c' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexs'>
<arg declared_type64='GLshort' name='c' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexsv'>
<arg const='true' declared_type64='GLshort*' name='c' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexub'>
<arg declared_type64='GLubyte' name='c' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIndexubv'>
<arg const='true' declared_type64='GLubyte*' name='c' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glInitNames'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glInsertEventMarkerEXT'>
<arg declared_type64='GLsizei' name='length' type64='i'/>
<arg const='true' declared_type64='char*' name='marker' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glInterleavedArrays'>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glIsBuffer'>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsBufferARB'>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsEnabled'>
<arg declared_type64='GLenum' name='cap' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsEnabledIndexedEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsFenceAPPLE'>
<arg declared_type64='GLuint' name='fence' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsFramebuffer'>
<arg declared_type64='GLuint' name='framebuffer' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsFramebufferEXT'>
<arg declared_type64='GLuint' name='framebuffer' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsList'>
<arg declared_type64='GLuint' name='list' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsNamedStringARB'>
<arg declared_type64='GLint' name='namelen' type64='i'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsProgram'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsProgramARB'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsProgramPipeline'>
<arg declared_type64='GLuint' name='pipeline' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsQuery'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsQueryARB'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsRenderbuffer'>
<arg declared_type64='GLuint' name='renderbuffer' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsRenderbufferEXT'>
<arg declared_type64='GLuint' name='renderbuffer' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsSampler'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsShader'>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsSync'>
<arg declared_type64='GLsync' name='sync' type64='^{__GLsync=}'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsTexture'>
<arg declared_type64='GLuint' name='texture' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsTransformFeedback'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsVertexArray'>
<arg declared_type64='GLuint' name='array' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsVertexArrayAPPLE'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glIsVertexAttribEnabledAPPLE'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glLabelObjectEXT'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLuint' name='object' type64='I'/>
<arg declared_type64='GLsizei' name='length' type64='i'/>
<arg const='true' declared_type64='GLchar*' name='label' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLightModelf'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLightModelfv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLightModeli'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLightModeliv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLightf'>
<arg declared_type64='GLenum' name='light' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLightfv'>
<arg declared_type64='GLenum' name='light' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLighti'>
<arg declared_type64='GLenum' name='light' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLightiv'>
<arg declared_type64='GLenum' name='light' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLineStipple'>
<arg declared_type64='GLint' name='factor' type64='i'/>
<arg declared_type64='GLushort' name='pattern' type64='S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLineWidth'>
<arg declared_type64='GLfloat' name='width' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLinkProgram'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLinkProgramARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glListBase'>
<arg declared_type64='GLuint' name='base' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLoadIdentity'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLoadMatrixd'>
<arg const='true' declared_type64='GLdouble*' name='m' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLoadMatrixf'>
<arg const='true' declared_type64='GLfloat*' name='m' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLoadName'>
<arg declared_type64='GLuint' name='name' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLoadTransposeMatrixd'>
<arg const='true' declared_type64='GLdouble*' name='m' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLoadTransposeMatrixdARB'>
<arg const='true' declared_type64='GLdouble*' name='m' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLoadTransposeMatrixf'>
<arg const='true' declared_type64='GLfloat*' name='m' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLoadTransposeMatrixfARB'>
<arg const='true' declared_type64='GLfloat*' name='m' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glLogicOp'>
<arg declared_type64='GLenum' name='opcode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMap1d'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='u1' type64='d'/>
<arg declared_type64='GLdouble' name='u2' type64='d'/>
<arg declared_type64='GLint' name='stride' type64='i'/>
<arg declared_type64='GLint' name='order' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='points' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMap1f'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='u1' type64='f'/>
<arg declared_type64='GLfloat' name='u2' type64='f'/>
<arg declared_type64='GLint' name='stride' type64='i'/>
<arg declared_type64='GLint' name='order' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='points' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMap2d'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='u1' type64='d'/>
<arg declared_type64='GLdouble' name='u2' type64='d'/>
<arg declared_type64='GLint' name='ustride' type64='i'/>
<arg declared_type64='GLint' name='uorder' type64='i'/>
<arg declared_type64='GLdouble' name='v1' type64='d'/>
<arg declared_type64='GLdouble' name='v2' type64='d'/>
<arg declared_type64='GLint' name='vstride' type64='i'/>
<arg declared_type64='GLint' name='vorder' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='points' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMap2f'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='u1' type64='f'/>
<arg declared_type64='GLfloat' name='u2' type64='f'/>
<arg declared_type64='GLint' name='ustride' type64='i'/>
<arg declared_type64='GLint' name='uorder' type64='i'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<arg declared_type64='GLint' name='vstride' type64='i'/>
<arg declared_type64='GLint' name='vorder' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='points' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMapBuffer'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='access' type64='I'/>
<retval declared_type64='GLvoid*' type64='^v'/>
</function>
<function name='glMapBufferARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='access' type64='I'/>
<retval declared_type64='GLvoid*' type64='^v'/>
</function>
<function name='glMapBufferRange'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLintptr' name='offset' type64='q'/>
<arg declared_type64='GLsizeiptr' name='length' type64='q'/>
<arg declared_type64='GLbitfield' name='access' type64='I'/>
<retval declared_type64='GLvoid*' type64='^v'/>
</function>
<function name='glMapGrid1d'>
<arg declared_type64='GLint' name='un' type64='i'/>
<arg declared_type64='GLdouble' name='u1' type64='d'/>
<arg declared_type64='GLdouble' name='u2' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMapGrid1f'>
<arg declared_type64='GLint' name='un' type64='i'/>
<arg declared_type64='GLfloat' name='u1' type64='f'/>
<arg declared_type64='GLfloat' name='u2' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMapGrid2d'>
<arg declared_type64='GLint' name='un' type64='i'/>
<arg declared_type64='GLdouble' name='u1' type64='d'/>
<arg declared_type64='GLdouble' name='u2' type64='d'/>
<arg declared_type64='GLint' name='vn' type64='i'/>
<arg declared_type64='GLdouble' name='v1' type64='d'/>
<arg declared_type64='GLdouble' name='v2' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMapGrid2f'>
<arg declared_type64='GLint' name='un' type64='i'/>
<arg declared_type64='GLfloat' name='u1' type64='f'/>
<arg declared_type64='GLfloat' name='u2' type64='f'/>
<arg declared_type64='GLint' name='vn' type64='i'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMapVertexAttrib1dAPPLE'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='size' type64='I'/>
<arg declared_type64='GLdouble' name='u1' type64='d'/>
<arg declared_type64='GLdouble' name='u2' type64='d'/>
<arg declared_type64='GLint' name='stride' type64='i'/>
<arg declared_type64='GLint' name='order' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='points' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMapVertexAttrib1fAPPLE'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='size' type64='I'/>
<arg declared_type64='GLfloat' name='u1' type64='f'/>
<arg declared_type64='GLfloat' name='u2' type64='f'/>
<arg declared_type64='GLint' name='stride' type64='i'/>
<arg declared_type64='GLint' name='order' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='points' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMapVertexAttrib2dAPPLE'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='size' type64='I'/>
<arg declared_type64='GLdouble' name='u1' type64='d'/>
<arg declared_type64='GLdouble' name='u2' type64='d'/>
<arg declared_type64='GLint' name='ustride' type64='i'/>
<arg declared_type64='GLint' name='uorder' type64='i'/>
<arg declared_type64='GLdouble' name='v1' type64='d'/>
<arg declared_type64='GLdouble' name='v2' type64='d'/>
<arg declared_type64='GLint' name='vstride' type64='i'/>
<arg declared_type64='GLint' name='vorder' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='points' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMapVertexAttrib2fAPPLE'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='size' type64='I'/>
<arg declared_type64='GLfloat' name='u1' type64='f'/>
<arg declared_type64='GLfloat' name='u2' type64='f'/>
<arg declared_type64='GLint' name='ustride' type64='i'/>
<arg declared_type64='GLint' name='uorder' type64='i'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<arg declared_type64='GLint' name='vstride' type64='i'/>
<arg declared_type64='GLint' name='vorder' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='points' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMaterialf'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMaterialfv'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMateriali'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMaterialiv'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMatrixMode'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMinSampleShading'>
<arg declared_type64='GLfloat' name='value' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMinSampleShadingARB'>
<arg declared_type64='GLclampf' name='value' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMinmax'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLboolean' name='sink' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultMatrixd'>
<arg const='true' declared_type64='GLdouble*' name='m' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultMatrixf'>
<arg const='true' declared_type64='GLfloat*' name='m' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultTransposeMatrixd'>
<arg const='true' declared_type64='GLdouble*' name='m' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultTransposeMatrixdARB'>
<arg const='true' declared_type64='GLdouble*' name='m' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultTransposeMatrixf'>
<arg const='true' declared_type64='GLfloat*' name='m' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultTransposeMatrixfARB'>
<arg const='true' declared_type64='GLfloat*' name='m' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiDrawArrays'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg const='true' declared_type64='GLint*' name='first' type64='^i'/>
<arg const='true' declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiDrawArraysEXT'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg const='true' declared_type64='GLint*' name='first' type64='^i'/>
<arg const='true' declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiDrawElementArrayAPPLE'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg const='true' declared_type64='GLint*' name='first' type64='^i'/>
<arg const='true' declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiDrawElements'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg const='true' declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid **' name='indices' type64='^^v'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiDrawElementsBaseVertex'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg const='true' declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid **' name='indices' type64='^^v'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<arg const='true' declared_type64='GLint*' name='base_vertex' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiDrawElementsEXT'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg const='true' declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid **' name='indices' type64='^^v'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiDrawRangeElementArrayAPPLE'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<arg declared_type64='GLuint' name='start' type64='I'/>
<arg declared_type64='GLuint' name='end' type64='I'/>
<arg const='true' declared_type64='GLint*' name='first' type64='^i'/>
<arg const='true' declared_type64='GLsizei*' name='count' type64='^i'/>
<arg declared_type64='GLsizei' name='primcount' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1d'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1dARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1dv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1dvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1f'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1fARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1fv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1fvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1i'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='s' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1iARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='s' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1iv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1ivARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1s'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLshort' name='s' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1sARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLshort' name='s' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1sv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord1svARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2d'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2dARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2dv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2dvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2f'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2fARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2fv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2fvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2i'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2iARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2iv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2ivARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2s'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2sARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2sv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord2svARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3d'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<arg declared_type64='GLdouble' name='r' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3dARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<arg declared_type64='GLdouble' name='r' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3dv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3dvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3f'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<arg declared_type64='GLfloat' name='r' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3fARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<arg declared_type64='GLfloat' name='r' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3fv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3fvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3i'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<arg declared_type64='GLint' name='r' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3iARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<arg declared_type64='GLint' name='r' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3iv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3ivARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3s'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<arg declared_type64='GLshort' name='r' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3sARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<arg declared_type64='GLshort' name='r' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3sv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord3svARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4d'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<arg declared_type64='GLdouble' name='r' type64='d'/>
<arg declared_type64='GLdouble' name='q' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4dARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<arg declared_type64='GLdouble' name='r' type64='d'/>
<arg declared_type64='GLdouble' name='q' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4dv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4dvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4f'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<arg declared_type64='GLfloat' name='r' type64='f'/>
<arg declared_type64='GLfloat' name='q' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4fARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<arg declared_type64='GLfloat' name='r' type64='f'/>
<arg declared_type64='GLfloat' name='q' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4fv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4fvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4i'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<arg declared_type64='GLint' name='r' type64='i'/>
<arg declared_type64='GLint' name='q' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4iARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<arg declared_type64='GLint' name='r' type64='i'/>
<arg declared_type64='GLint' name='q' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4iv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4ivARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4s'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<arg declared_type64='GLshort' name='r' type64='s'/>
<arg declared_type64='GLshort' name='q' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4sARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<arg declared_type64='GLshort' name='r' type64='s'/>
<arg declared_type64='GLshort' name='q' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4sv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glMultiTexCoord4svARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNamedStringARB'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLint' name='namelen' type64='i'/>
<arg const='true' declared_type64='GLchar*' name='name' type64='*'/>
<arg declared_type64='GLint' name='stringlen' type64='i'/>
<arg const='true' declared_type64='GLchar*' name='string' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNewList'>
<arg declared_type64='GLuint' name='list' type64='I'/>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3b'>
<arg declared_type64='GLbyte' name='nx' type64='c'/>
<arg declared_type64='GLbyte' name='ny' type64='c'/>
<arg declared_type64='GLbyte' name='nz' type64='c'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3bv'>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3d'>
<arg declared_type64='GLdouble' name='nx' type64='d'/>
<arg declared_type64='GLdouble' name='ny' type64='d'/>
<arg declared_type64='GLdouble' name='nz' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3f'>
<arg declared_type64='GLfloat' name='nx' type64='f'/>
<arg declared_type64='GLfloat' name='ny' type64='f'/>
<arg declared_type64='GLfloat' name='nz' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3i'>
<arg declared_type64='GLint' name='nx' type64='i'/>
<arg declared_type64='GLint' name='ny' type64='i'/>
<arg declared_type64='GLint' name='nz' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3s'>
<arg declared_type64='GLshort' name='nx' type64='s'/>
<arg declared_type64='GLshort' name='ny' type64='s'/>
<arg declared_type64='GLshort' name='nz' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormal3sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glNormalPointer'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glObjectPurgeableAPPLE'>
<arg declared_type64='GLenum' name='objectType' type64='I'/>
<arg declared_type64='GLuint' name='name' type64='I'/>
<arg declared_type64='GLenum' name='option' type64='I'/>
<retval declared_type64='GLenum' type64='I'/>
</function>
<function name='glObjectUnpurgeableAPPLE'>
<arg declared_type64='GLenum' name='objectType' type64='I'/>
<arg declared_type64='GLuint' name='name' type64='I'/>
<arg declared_type64='GLenum' name='option' type64='I'/>
<retval declared_type64='GLenum' type64='I'/>
</function>
<function name='glOrtho'>
<arg declared_type64='GLdouble' name='left' type64='d'/>
<arg declared_type64='GLdouble' name='right' type64='d'/>
<arg declared_type64='GLdouble' name='bottom' type64='d'/>
<arg declared_type64='GLdouble' name='top' type64='d'/>
<arg declared_type64='GLdouble' name='zNear' type64='d'/>
<arg declared_type64='GLdouble' name='zFar' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPassThrough'>
<arg declared_type64='GLfloat' name='token' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPatchParameterfv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='values' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPatchParameteri'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='value' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPauseTransformFeedback'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPixelMapfv'>
<arg declared_type64='GLenum' name='map' type64='I'/>
<arg declared_type64='GLint' name='mapsize' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='values' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPixelMapuiv'>
<arg declared_type64='GLenum' name='map' type64='I'/>
<arg declared_type64='GLint' name='mapsize' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='values' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPixelMapusv'>
<arg declared_type64='GLenum' name='map' type64='I'/>
<arg declared_type64='GLint' name='mapsize' type64='i'/>
<arg const='true' declared_type64='GLushort*' name='values' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPixelStoref'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPixelStorei'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPixelTransferf'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPixelTransferi'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPixelZoom'>
<arg declared_type64='GLfloat' name='xfactor' type64='f'/>
<arg declared_type64='GLfloat' name='yfactor' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointParameterf'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointParameterfARB'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointParameterfv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointParameterfvARB'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointParameteri'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointParameteriNV'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointParameteriv'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointParameterivNV'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointSize'>
<arg declared_type64='GLfloat' name='size' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPointSizePointerAPPLE'>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPolygonMode'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPolygonOffset'>
<arg declared_type64='GLfloat' name='factor' type64='f'/>
<arg declared_type64='GLfloat' name='units' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPolygonStipple'>
<arg const='true' declared_type64='GLubyte*' name='mask' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPopAttrib'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPopClientAttrib'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPopGroupMarkerEXT'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPopMatrix'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPopName'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPrimitiveRestartIndex'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPrioritizeTextures'>
<arg declared_type64='GLsizei' name='n' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='textures' type64='^I'/>
<arg const='true' declared_type64='GLclampf*' name='priorities' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramBinary'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='binaryFormat' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='binary' type64='^v'/>
<arg declared_type64='GLsizei' name='length' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramEnvParameter4dARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<arg declared_type64='GLdouble' name='w' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramEnvParameter4dvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramEnvParameter4fARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<arg declared_type64='GLfloat' name='w' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramEnvParameter4fvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramEnvParameters4fvEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramLocalParameter4dARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<arg declared_type64='GLdouble' name='w' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramLocalParameter4dvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramLocalParameter4fARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<arg declared_type64='GLfloat' name='w' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramLocalParameter4fvARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramLocalParameters4fvEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramParameteri'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='value' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramParameteriEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='value' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramStringARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='len' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='string' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform1d'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble' name='v0' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform1dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform1f'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform1fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform1i'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform1iv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform1ui'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='v0' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform1uiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform2d'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble' name='v0' type64='d'/>
<arg declared_type64='GLdouble' name='v1' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform2dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform2f'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform2fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform2i'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform2iv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform2ui'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='v0' type64='I'/>
<arg declared_type64='GLuint' name='v1' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform2uiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform3d'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble' name='v0' type64='d'/>
<arg declared_type64='GLdouble' name='v1' type64='d'/>
<arg declared_type64='GLdouble' name='v2' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform3dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform3f'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform3fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform3i'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<arg declared_type64='GLint' name='v2' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform3iv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform3ui'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='v0' type64='I'/>
<arg declared_type64='GLuint' name='v1' type64='I'/>
<arg declared_type64='GLuint' name='v2' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform3uiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform4d'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble' name='v0' type64='d'/>
<arg declared_type64='GLdouble' name='v1' type64='d'/>
<arg declared_type64='GLdouble' name='v2' type64='d'/>
<arg declared_type64='GLdouble' name='v3' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform4dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform4f'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<arg declared_type64='GLfloat' name='v3' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform4fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform4i'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<arg declared_type64='GLint' name='v2' type64='i'/>
<arg declared_type64='GLint' name='v3' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform4iv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform4ui'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='v0' type64='I'/>
<arg declared_type64='GLuint' name='v1' type64='I'/>
<arg declared_type64='GLuint' name='v2' type64='I'/>
<arg declared_type64='GLuint' name='v3' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniform4uiv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix2dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix2fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix2x3dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix2x3fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix2x4dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix2x4fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix3dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix3fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix3x2dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix3x2fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix3x4dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix3x4fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix4dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix4fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix4x2dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix4x2fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix4x3dv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProgramUniformMatrix4x3fv'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProvokingVertex'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glProvokingVertexEXT'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPushAttrib'>
<arg declared_type64='GLbitfield' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPushClientAttrib'>
<arg declared_type64='GLbitfield' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPushGroupMarkerEXT'>
<arg declared_type64='GLsizei' name='length' type64='i'/>
<arg const='true' declared_type64='char*' name='marker' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPushMatrix'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glPushName'>
<arg declared_type64='GLuint' name='name' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glQueryCounter'>
<arg declared_type64='GLuint' name='id' type64='I'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos2d'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos2dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos2f'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos2fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos2i'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos2iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos2s'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos2sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos3d'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos3dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos3f'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos3fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos3i'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLint' name='z' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos3iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos3s'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos3sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos4d'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<arg declared_type64='GLdouble' name='w' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos4dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos4f'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<arg declared_type64='GLfloat' name='w' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos4fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos4i'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLint' name='z' type64='i'/>
<arg declared_type64='GLint' name='w' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos4iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos4s'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<arg declared_type64='GLshort' name='w' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRasterPos4sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glReadBuffer'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glReadPixels'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRectd'>
<arg declared_type64='GLdouble' name='x1' type64='d'/>
<arg declared_type64='GLdouble' name='y1' type64='d'/>
<arg declared_type64='GLdouble' name='x2' type64='d'/>
<arg declared_type64='GLdouble' name='y2' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRectdv'>
<arg const='true' declared_type64='GLdouble*' name='v1' type64='^d'/>
<arg const='true' declared_type64='GLdouble*' name='v2' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRectf'>
<arg declared_type64='GLfloat' name='x1' type64='f'/>
<arg declared_type64='GLfloat' name='y1' type64='f'/>
<arg declared_type64='GLfloat' name='x2' type64='f'/>
<arg declared_type64='GLfloat' name='y2' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRectfv'>
<arg const='true' declared_type64='GLfloat*' name='v1' type64='^f'/>
<arg const='true' declared_type64='GLfloat*' name='v2' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRecti'>
<arg declared_type64='GLint' name='x1' type64='i'/>
<arg declared_type64='GLint' name='y1' type64='i'/>
<arg declared_type64='GLint' name='x2' type64='i'/>
<arg declared_type64='GLint' name='y2' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRectiv'>
<arg const='true' declared_type64='GLint*' name='v1' type64='^i'/>
<arg const='true' declared_type64='GLint*' name='v2' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRects'>
<arg declared_type64='GLshort' name='x1' type64='s'/>
<arg declared_type64='GLshort' name='y1' type64='s'/>
<arg declared_type64='GLshort' name='x2' type64='s'/>
<arg declared_type64='GLshort' name='y2' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRectsv'>
<arg const='true' declared_type64='GLshort*' name='v1' type64='^s'/>
<arg const='true' declared_type64='GLshort*' name='v2' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glReleaseShaderCompiler'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRenderMode'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='glRenderbufferStorage'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRenderbufferStorageEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRenderbufferStorageMultisample'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='samples' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRenderbufferStorageMultisampleEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='samples' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glResetHistogram'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glResetMinmax'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glResumeTransformFeedback'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRotated'>
<arg declared_type64='GLdouble' name='angle' type64='d'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glRotatef'>
<arg declared_type64='GLfloat' name='angle' type64='f'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSampleCoverage'>
<arg declared_type64='GLclampf' name='value' type64='f'/>
<arg declared_type64='GLboolean' name='invert' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSampleCoverageARB'>
<arg declared_type64='GLclampf' name='value' type64='f'/>
<arg declared_type64='GLboolean' name='invert' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSampleMaski'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLbitfield' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSamplerParameterIiv'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='param' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSamplerParameterIuiv'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='param' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSamplerParameterf'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSamplerParameterfv'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='param' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSamplerParameteri'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSamplerParameteriv'>
<arg declared_type64='GLuint' name='sampler' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='param' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glScaled'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glScalef'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glScissor'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glScissorArrayv'>
<arg declared_type64='GLuint' name='first' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glScissorIndexed'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='left' type64='i'/>
<arg declared_type64='GLint' name='bottom' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glScissorIndexedv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3b'>
<arg declared_type64='GLbyte' name='red' type64='c'/>
<arg declared_type64='GLbyte' name='green' type64='c'/>
<arg declared_type64='GLbyte' name='blue' type64='c'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3bEXT'>
<arg declared_type64='GLbyte' name='red' type64='c'/>
<arg declared_type64='GLbyte' name='green' type64='c'/>
<arg declared_type64='GLbyte' name='blue' type64='c'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3bv'>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3bvEXT'>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3d'>
<arg declared_type64='GLdouble' name='red' type64='d'/>
<arg declared_type64='GLdouble' name='green' type64='d'/>
<arg declared_type64='GLdouble' name='blue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3dEXT'>
<arg declared_type64='GLdouble' name='red' type64='d'/>
<arg declared_type64='GLdouble' name='green' type64='d'/>
<arg declared_type64='GLdouble' name='blue' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3dvEXT'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3f'>
<arg declared_type64='GLfloat' name='red' type64='f'/>
<arg declared_type64='GLfloat' name='green' type64='f'/>
<arg declared_type64='GLfloat' name='blue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3fEXT'>
<arg declared_type64='GLfloat' name='red' type64='f'/>
<arg declared_type64='GLfloat' name='green' type64='f'/>
<arg declared_type64='GLfloat' name='blue' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3fvEXT'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3i'>
<arg declared_type64='GLint' name='red' type64='i'/>
<arg declared_type64='GLint' name='green' type64='i'/>
<arg declared_type64='GLint' name='blue' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3iEXT'>
<arg declared_type64='GLint' name='red' type64='i'/>
<arg declared_type64='GLint' name='green' type64='i'/>
<arg declared_type64='GLint' name='blue' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3ivEXT'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3s'>
<arg declared_type64='GLshort' name='red' type64='s'/>
<arg declared_type64='GLshort' name='green' type64='s'/>
<arg declared_type64='GLshort' name='blue' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3sEXT'>
<arg declared_type64='GLshort' name='red' type64='s'/>
<arg declared_type64='GLshort' name='green' type64='s'/>
<arg declared_type64='GLshort' name='blue' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3svEXT'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3ub'>
<arg declared_type64='GLubyte' name='red' type64='C'/>
<arg declared_type64='GLubyte' name='green' type64='C'/>
<arg declared_type64='GLubyte' name='blue' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3ubEXT'>
<arg declared_type64='GLubyte' name='red' type64='C'/>
<arg declared_type64='GLubyte' name='green' type64='C'/>
<arg declared_type64='GLubyte' name='blue' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3ubv'>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3ubvEXT'>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3ui'>
<arg declared_type64='GLuint' name='red' type64='I'/>
<arg declared_type64='GLuint' name='green' type64='I'/>
<arg declared_type64='GLuint' name='blue' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3uiEXT'>
<arg declared_type64='GLuint' name='red' type64='I'/>
<arg declared_type64='GLuint' name='green' type64='I'/>
<arg declared_type64='GLuint' name='blue' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3uiv'>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3uivEXT'>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3us'>
<arg declared_type64='GLushort' name='red' type64='S'/>
<arg declared_type64='GLushort' name='green' type64='S'/>
<arg declared_type64='GLushort' name='blue' type64='S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3usEXT'>
<arg declared_type64='GLushort' name='red' type64='S'/>
<arg declared_type64='GLushort' name='green' type64='S'/>
<arg declared_type64='GLushort' name='blue' type64='S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3usv'>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColor3usvEXT'>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColorPointer'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSecondaryColorPointerEXT'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSelectBuffer'>
<arg declared_type64='GLsizei' name='size' type64='i'/>
<arg declared_type64='GLuint*' name='buffer' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSeparableFilter2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='row' type64='^v'/>
<arg const='true' declared_type64='GLvoid*' name='column' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSetFenceAPPLE'>
<arg declared_type64='GLuint' name='fence' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glShadeModel'>
<arg declared_type64='GLenum' name='mode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glShaderBinary'>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='shaders' type64='^I'/>
<arg declared_type64='GLenum' name='binaryformat' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='binary' type64='^v'/>
<arg declared_type64='GLsizei' name='length' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glShaderSource'>
<arg declared_type64='GLuint' name='shader' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLchar **' name='string' type64='^*'/>
<arg const='true' declared_type64='GLint*' name='length' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glShaderSourceARB'>
<arg declared_type64='GLhandleARB' name='shaderObj' type64='^v'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLcharARB **' name='string' type64='^*'/>
<arg const='true' declared_type64='GLint*' name='length' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glStencilFunc'>
<arg declared_type64='GLenum' name='func' type64='I'/>
<arg declared_type64='GLint' name='ref' type64='i'/>
<arg declared_type64='GLuint' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glStencilFuncSeparate'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='func' type64='I'/>
<arg declared_type64='GLint' name='ref' type64='i'/>
<arg declared_type64='GLuint' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glStencilFuncSeparateATI'>
<arg declared_type64='GLenum' name='frontfunc' type64='I'/>
<arg declared_type64='GLenum' name='backfunc' type64='I'/>
<arg declared_type64='GLint' name='ref' type64='i'/>
<arg declared_type64='GLuint' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glStencilMask'>
<arg declared_type64='GLuint' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glStencilMaskSeparate'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLuint' name='mask' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glStencilOp'>
<arg declared_type64='GLenum' name='fail' type64='I'/>
<arg declared_type64='GLenum' name='zfail' type64='I'/>
<arg declared_type64='GLenum' name='zpass' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glStencilOpSeparate'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='fail' type64='I'/>
<arg declared_type64='GLenum' name='zfail' type64='I'/>
<arg declared_type64='GLenum' name='zpass' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glStencilOpSeparateATI'>
<arg declared_type64='GLenum' name='face' type64='I'/>
<arg declared_type64='GLenum' name='sfail' type64='I'/>
<arg declared_type64='GLenum' name='dpfail' type64='I'/>
<arg declared_type64='GLenum' name='dppass' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glSwapAPPLE'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTestFenceAPPLE'>
<arg declared_type64='GLuint' name='fence' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glTestObjectAPPLE'>
<arg declared_type64='GLenum' name='object' type64='I'/>
<arg declared_type64='GLuint' name='name' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glTexBuffer'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord1d'>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord1dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord1f'>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord1fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord1i'>
<arg declared_type64='GLint' name='s' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord1iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord1s'>
<arg declared_type64='GLshort' name='s' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord1sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord2d'>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord2dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord2f'>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord2fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord2i'>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord2iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord2s'>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord2sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord3d'>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<arg declared_type64='GLdouble' name='r' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord3dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord3f'>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<arg declared_type64='GLfloat' name='r' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord3fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord3i'>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<arg declared_type64='GLint' name='r' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord3iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord3s'>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<arg declared_type64='GLshort' name='r' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord3sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord4d'>
<arg declared_type64='GLdouble' name='s' type64='d'/>
<arg declared_type64='GLdouble' name='t' type64='d'/>
<arg declared_type64='GLdouble' name='r' type64='d'/>
<arg declared_type64='GLdouble' name='q' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord4dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord4f'>
<arg declared_type64='GLfloat' name='s' type64='f'/>
<arg declared_type64='GLfloat' name='t' type64='f'/>
<arg declared_type64='GLfloat' name='r' type64='f'/>
<arg declared_type64='GLfloat' name='q' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord4fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord4i'>
<arg declared_type64='GLint' name='s' type64='i'/>
<arg declared_type64='GLint' name='t' type64='i'/>
<arg declared_type64='GLint' name='r' type64='i'/>
<arg declared_type64='GLint' name='q' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord4iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord4s'>
<arg declared_type64='GLshort' name='s' type64='s'/>
<arg declared_type64='GLshort' name='t' type64='s'/>
<arg declared_type64='GLshort' name='r' type64='s'/>
<arg declared_type64='GLshort' name='q' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoord4sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexCoordPointer'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexEnvf'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexEnvfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexEnvi'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexEnviv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexGend'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLdouble' name='param' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexGendv'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='params' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexGenf'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexGenfv'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexGeni'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexGeniv'>
<arg declared_type64='GLenum' name='coord' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexImage1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='internalformat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexImage2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='internalformat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexImage2DMultisample'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='samples' type64='i'/>
<arg declared_type64='GLint' name='internalformat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLboolean' name='fixedsamplelocations' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexImage3D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='internalformat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLint' name='border' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexImage3DMultisample'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='samples' type64='i'/>
<arg declared_type64='GLint' name='internalformat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLboolean' name='fixedsamplelocations' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexParameterIivEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexParameterIuivEXT'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLuint*' name='params' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexParameterf'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLfloat' name='param' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexParameterfv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='params' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexParameteri'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexParameteriv'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg const='true' declared_type64='GLint*' name='params' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexStorage1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='levels' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexStorage2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='levels' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexStorage3D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='levels' type64='i'/>
<arg declared_type64='GLenum' name='internalformat' type64='I'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexSubImage1D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexSubImage2D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='yoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTexSubImage3D'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='xoffset' type64='i'/>
<arg declared_type64='GLint' name='yoffset' type64='i'/>
<arg declared_type64='GLint' name='zoffset' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='GLvoid*' name='pixels' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTextureBarrierNV'>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTextureRangeAPPLE'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLsizei' name='length' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTransformFeedbackVaryingsEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLchar **' name='varyings' type64='^*'/>
<arg declared_type64='GLenum' name='bufferMode' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTranslated'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glTranslatef'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1d'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1f'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1fARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1fvARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1i'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1iARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1iv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1ivARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1uiEXT'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='v0' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform1uivEXT'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2d'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2f'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2fARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2fvARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2i'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2iARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2iv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2ivARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2uiEXT'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='v0' type64='I'/>
<arg declared_type64='GLuint' name='v1' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform2uivEXT'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3d'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3f'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3fARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3fvARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3i'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<arg declared_type64='GLint' name='v2' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3iARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<arg declared_type64='GLint' name='v2' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3iv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3ivARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3uiEXT'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='v0' type64='I'/>
<arg declared_type64='GLuint' name='v1' type64='I'/>
<arg declared_type64='GLuint' name='v2' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform3uivEXT'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4d'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<arg declared_type64='GLdouble' name='w' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4f'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<arg declared_type64='GLfloat' name='v3' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4fARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLfloat' name='v0' type64='f'/>
<arg declared_type64='GLfloat' name='v1' type64='f'/>
<arg declared_type64='GLfloat' name='v2' type64='f'/>
<arg declared_type64='GLfloat' name='v3' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4fvARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4i'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<arg declared_type64='GLint' name='v2' type64='i'/>
<arg declared_type64='GLint' name='v3' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4iARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLint' name='v0' type64='i'/>
<arg declared_type64='GLint' name='v1' type64='i'/>
<arg declared_type64='GLint' name='v2' type64='i'/>
<arg declared_type64='GLint' name='v3' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4iv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4ivARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLint*' name='value' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4uiEXT'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='v0' type64='I'/>
<arg declared_type64='GLuint' name='v1' type64='I'/>
<arg declared_type64='GLuint' name='v2' type64='I'/>
<arg declared_type64='GLuint' name='v3' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniform4uivEXT'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformBlockBinding'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLuint' name='uniformBlockIndex' type64='I'/>
<arg declared_type64='GLuint' name='uniformBlockBinding' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformBufferEXT'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLuint' name='buffer' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix2dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix2fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix2fvARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix2x3dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix2x3fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix2x4dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix2x4fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix3dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix3fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix3fvARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix3x2dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix3x2fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix3x4dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix3x4fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix4dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix4fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix4fvARB'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix4x2dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix4x2fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix4x3dv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLdouble*' name='value' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformMatrix4x3fv'>
<arg declared_type64='GLint' name='location' type64='i'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg declared_type64='GLboolean' name='transpose' type64='C'/>
<arg const='true' declared_type64='GLfloat*' name='value' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUniformSubroutinesuiv'>
<arg declared_type64='GLenum' name='shadertype' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='indices' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUnmapBuffer'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glUnmapBufferARB'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='glUseProgram'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUseProgramObjectARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glUseProgramStages'>
<arg declared_type64='GLuint' name='pipeline' type64='I'/>
<arg declared_type64='GLbitfield' name='stages' type64='I'/>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glValidateProgram'>
<arg declared_type64='GLuint' name='program' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glValidateProgramARB'>
<arg declared_type64='GLhandleARB' name='programObj' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glValidateProgramPipeline'>
<arg declared_type64='GLuint' name='pipeline' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex2d'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex2dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex2f'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex2fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex2i'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex2iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex2s'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex2sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex3d'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex3dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex3f'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex3fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex3i'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLint' name='z' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex3iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex3s'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex3sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex4d'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<arg declared_type64='GLdouble' name='w' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex4dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex4f'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<arg declared_type64='GLfloat' name='w' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex4fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex4i'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLint' name='z' type64='i'/>
<arg declared_type64='GLint' name='w' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex4iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex4s'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<arg declared_type64='GLshort' name='w' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertex4sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexArrayParameteriAPPLE'>
<arg declared_type64='GLenum' name='pname' type64='I'/>
<arg declared_type64='GLint' name='param' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexArrayRangeAPPLE'>
<arg declared_type64='GLsizei' name='length' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1d'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1dARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1dv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1dvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1f'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1fARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1fv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1fvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1s'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLshort' name='x' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1sARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLshort' name='x' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1sv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib1svARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2d'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2dARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2dv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2dvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2f'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2fARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2fv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2fvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2s'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2sARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2sv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib2svARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3d'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3dARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3dv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3dvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3f'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3fARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3fv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3fvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3s'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3sARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3sv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib3svARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4Nbv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4NbvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4Niv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4NivARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4Nsv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4NsvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4Nub'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLubyte' name='x' type64='C'/>
<arg declared_type64='GLubyte' name='y' type64='C'/>
<arg declared_type64='GLubyte' name='z' type64='C'/>
<arg declared_type64='GLubyte' name='w' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4NubARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLubyte' name='x' type64='C'/>
<arg declared_type64='GLubyte' name='y' type64='C'/>
<arg declared_type64='GLubyte' name='z' type64='C'/>
<arg declared_type64='GLubyte' name='w' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4Nubv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4NubvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4Nuiv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4NuivARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4Nusv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4NusvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4bv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4bvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4d'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<arg declared_type64='GLdouble' name='w' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4dARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<arg declared_type64='GLdouble' name='w' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4dv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4dvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4f'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<arg declared_type64='GLfloat' name='w' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4fARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<arg declared_type64='GLfloat' name='w' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4fv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4fvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4iv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4ivARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4s'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<arg declared_type64='GLshort' name='w' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4sARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<arg declared_type64='GLshort' name='w' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4sv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4svARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4ubv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4ubvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4uiv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4uivARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4usv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttrib4usvARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribDivisor'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='divisor' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribDivisorARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='divisor' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI1iEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI1ivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI1uiEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='x' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI1uivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI2iEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI2ivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI2uiEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='x' type64='I'/>
<arg declared_type64='GLuint' name='y' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI2uivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI3iEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLint' name='z' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI3ivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI3uiEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='x' type64='I'/>
<arg declared_type64='GLuint' name='y' type64='I'/>
<arg declared_type64='GLuint' name='z' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI3uivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI4bvEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLbyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI4iEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLint' name='z' type64='i'/>
<arg declared_type64='GLint' name='w' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI4ivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI4svEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI4ubvEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLubyte*' name='v' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI4uiEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLuint' name='x' type64='I'/>
<arg declared_type64='GLuint' name='y' type64='I'/>
<arg declared_type64='GLuint' name='z' type64='I'/>
<arg declared_type64='GLuint' name='w' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI4uivEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLuint*' name='v' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribI4usvEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLushort*' name='v' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribIPointerEXT'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribL1d'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribL1dv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribL2d'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribL2dv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribL3d'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribL3dv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribL4d'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<arg declared_type64='GLdouble' name='w' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribL4dv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribLPointer'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribP1ui'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg declared_type64='GLuint' name='value' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribP1uiv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribP2ui'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg declared_type64='GLuint' name='value' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribP2uiv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribP3ui'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg declared_type64='GLuint' name='value' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribP3uiv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribP4ui'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg declared_type64='GLuint' name='value' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribP4uiv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg const='true' declared_type64='GLuint*' name='value' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribPointer'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexAttribPointerARB'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLboolean' name='normalized' type64='C'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexBlendARB'>
<arg declared_type64='GLint' name='count' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexPointSizefAPPLE'>
<arg declared_type64='GLfloat' name='size' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glVertexPointer'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glViewport'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glViewportArrayv'>
<arg declared_type64='GLuint' name='first' type64='I'/>
<arg declared_type64='GLsizei' name='count' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glViewportIndexedf'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='w' type64='f'/>
<arg declared_type64='GLfloat' name='h' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glViewportIndexedfv'>
<arg declared_type64='GLuint' name='index' type64='I'/>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWaitSync'>
<arg declared_type64='GLsync' name='sync' type64='^{__GLsync=}'/>
<arg declared_type64='GLbitfield' name='flags' type64='I'/>
<arg declared_type64='GLuint64' name='timeout' type64='Q'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightPointerARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLsizei' name='stride' type64='i'/>
<arg const='true' declared_type64='GLvoid*' name='pointer' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightbvARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg const='true' declared_type64='GLbyte*' name='weights' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightdvARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg const='true' declared_type64='GLdouble*' name='weights' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightfvARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg const='true' declared_type64='GLfloat*' name='weights' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightivARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg const='true' declared_type64='GLint*' name='weights' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightsvARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg const='true' declared_type64='GLshort*' name='weights' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightubvARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg const='true' declared_type64='GLubyte*' name='weights' type64='*'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightuivARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg const='true' declared_type64='GLuint*' name='weights' type64='^I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWeightusvARB'>
<arg declared_type64='GLint' name='size' type64='i'/>
<arg const='true' declared_type64='GLushort*' name='weights' type64='^S'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2d'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2dARB'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2dvARB'>
<arg const='true' declared_type64='GLdouble*' name='p' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2f'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2fARB'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2fvARB'>
<arg const='true' declared_type64='GLfloat*' name='p' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2i'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2iARB'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2ivARB'>
<arg const='true' declared_type64='GLint*' name='p' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2s'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2sARB'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos2svARB'>
<arg const='true' declared_type64='GLshort*' name='p' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3d'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3dARB'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='z' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3dv'>
<arg const='true' declared_type64='GLdouble*' name='v' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3dvARB'>
<arg const='true' declared_type64='GLdouble*' name='p' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3f'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3fARB'>
<arg declared_type64='GLfloat' name='x' type64='f'/>
<arg declared_type64='GLfloat' name='y' type64='f'/>
<arg declared_type64='GLfloat' name='z' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3fv'>
<arg const='true' declared_type64='GLfloat*' name='v' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3fvARB'>
<arg const='true' declared_type64='GLfloat*' name='p' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3i'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLint' name='z' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3iARB'>
<arg declared_type64='GLint' name='x' type64='i'/>
<arg declared_type64='GLint' name='y' type64='i'/>
<arg declared_type64='GLint' name='z' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3iv'>
<arg const='true' declared_type64='GLint*' name='v' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3ivARB'>
<arg const='true' declared_type64='GLint*' name='p' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3s'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3sARB'>
<arg declared_type64='GLshort' name='x' type64='s'/>
<arg declared_type64='GLshort' name='y' type64='s'/>
<arg declared_type64='GLshort' name='z' type64='s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3sv'>
<arg const='true' declared_type64='GLshort*' name='v' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='glWindowPos3svARB'>
<arg const='true' declared_type64='GLshort*' name='p' type64='^s'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluBeginCurve'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluBeginPolygon'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluBeginSurface'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluBeginTrim'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluBuild1DMipmapLevels'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='base' type64='i'/>
<arg declared_type64='GLint' name='max' type64='i'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild1DMipmapLevelsCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='base' type64='i'/>
<arg declared_type64='GLint' name='max' type64='i'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild1DMipmaps'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild1DMipmapsCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild2DMipmapLevels'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='base' type64='i'/>
<arg declared_type64='GLint' name='max' type64='i'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild2DMipmapLevelsCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='base' type64='i'/>
<arg declared_type64='GLint' name='max' type64='i'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild2DMipmaps'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild2DMipmapsCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild3DMipmapLevels'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='base' type64='i'/>
<arg declared_type64='GLint' name='max' type64='i'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild3DMipmapLevelsCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg declared_type64='GLint' name='level' type64='i'/>
<arg declared_type64='GLint' name='base' type64='i'/>
<arg declared_type64='GLint' name='max' type64='i'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild3DMipmaps'>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluBuild3DMipmapsCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLenum' name='target' type64='I'/>
<arg declared_type64='GLint' name='internalFormat' type64='i'/>
<arg declared_type64='GLsizei' name='width' type64='i'/>
<arg declared_type64='GLsizei' name='height' type64='i'/>
<arg declared_type64='GLsizei' name='depth' type64='i'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<arg const='true' declared_type64='void*' name='data' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluCheckExtension'>
<arg const='true' declared_type64='GLubyte*' name='extName' type64='*'/>
<arg const='true' declared_type64='GLubyte*' name='extString' type64='*'/>
<retval declared_type64='GLboolean' type64='C'/>
</function>
<function name='gluCylinder'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLdouble' name='base' type64='d'/>
<arg declared_type64='GLdouble' name='top' type64='d'/>
<arg declared_type64='GLdouble' name='height' type64='d'/>
<arg declared_type64='GLint' name='slices' type64='i'/>
<arg declared_type64='GLint' name='stacks' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluCylinderCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLUquadric*' name='qobj' type64='^{GLUquadric=}'/>
<arg declared_type64='GLdouble' name='baseRadiusd' type64='d'/>
<arg declared_type64='GLdouble' name='topRadiusd' type64='d'/>
<arg declared_type64='GLdouble' name='heightd' type64='d'/>
<arg declared_type64='GLint' name='slices' type64='i'/>
<arg declared_type64='GLint' name='stacks' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluDeleteNurbsRenderer'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluDeleteQuadric'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluDeleteTess'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluDisk'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLdouble' name='inner' type64='d'/>
<arg declared_type64='GLdouble' name='outer' type64='d'/>
<arg declared_type64='GLint' name='slices' type64='i'/>
<arg declared_type64='GLint' name='loops' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluDiskCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLUquadric*' name='qobj' type64='^{GLUquadric=}'/>
<arg declared_type64='GLdouble' name='innerRadiusd' type64='d'/>
<arg declared_type64='GLdouble' name='outerRadiusd' type64='d'/>
<arg declared_type64='GLint' name='slices' type64='i'/>
<arg declared_type64='GLint' name='loops' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluEndCurve'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluEndPolygon'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluEndSurface'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluEndTrim'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluErrorString'>
<arg declared_type64='GLenum' name='error' type64='I'/>
<retval const='true' declared_type64='GLubyte*' type64='*'/>
</function>
<function name='gluGetNurbsProperty'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg declared_type64='GLenum' name='property' type64='I'/>
<arg declared_type64='GLfloat*' name='data' type64='^f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluGetString'>
<arg declared_type64='GLenum' name='name' type64='I'/>
<retval const='true' declared_type64='GLubyte*' type64='*'/>
</function>
<function name='gluGetTessProperty'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<arg declared_type64='GLenum' name='which' type64='I'/>
<arg declared_type64='GLdouble*' name='data' type64='^d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluLoadSamplingMatrices'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg const='true' declared_type64='GLfloat*' name='model' type64='^f'/>
<arg const='true' declared_type64='GLfloat*' name='perspective' type64='^f'/>
<arg const='true' declared_type64='GLint*' name='view' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluLookAt'>
<arg declared_type64='GLdouble' name='eyeX' type64='d'/>
<arg declared_type64='GLdouble' name='eyeY' type64='d'/>
<arg declared_type64='GLdouble' name='eyeZ' type64='d'/>
<arg declared_type64='GLdouble' name='centerX' type64='d'/>
<arg declared_type64='GLdouble' name='centerY' type64='d'/>
<arg declared_type64='GLdouble' name='centerZ' type64='d'/>
<arg declared_type64='GLdouble' name='upX' type64='d'/>
<arg declared_type64='GLdouble' name='upY' type64='d'/>
<arg declared_type64='GLdouble' name='upZ' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluLookAtCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLdouble' name='eyeX' type64='d'/>
<arg declared_type64='GLdouble' name='eyeY' type64='d'/>
<arg declared_type64='GLdouble' name='eyeZ' type64='d'/>
<arg declared_type64='GLdouble' name='centerX' type64='d'/>
<arg declared_type64='GLdouble' name='centerY' type64='d'/>
<arg declared_type64='GLdouble' name='centerZ' type64='d'/>
<arg declared_type64='GLdouble' name='upX' type64='d'/>
<arg declared_type64='GLdouble' name='upY' type64='d'/>
<arg declared_type64='GLdouble' name='upZ' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluNewNurbsRenderer'>
<retval declared_type64='GLUnurbs*' type64='^{GLUnurbs=}'/>
</function>
<function name='gluNewNurbsRendererCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='GLUnurbs*' type64='^{GLUnurbs=}'/>
</function>
<function name='gluNewQuadric'>
<retval declared_type64='GLUquadric*' type64='^{GLUquadric=}'/>
</function>
<function name='gluNewQuadricCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='GLUquadric*' type64='^{GLUquadric=}'/>
</function>
<function name='gluNewTess'>
<retval declared_type64='GLUtesselator*' type64='^{GLUtesselator=}'/>
</function>
<function name='gluNewTessCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<retval declared_type64='GLUtesselator*' type64='^{GLUtesselator=}'/>
</function>
<function name='gluNextContour'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluNurbsCallback'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg declared_type64='GLenum' name='which' type64='I'/>
<arg declared_type64='GLvoid (*)()' function_pointer='true' name='CallBackFunc' type64='^?'>
<retval declared_type64='GLvoid' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluNurbsCallbackData'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg declared_type64='GLvoid*' name='userData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluNurbsCallbackDataEXT'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg declared_type64='GLvoid*' name='userData' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluNurbsCurve'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg declared_type64='GLint' name='knotCount' type64='i'/>
<arg declared_type64='GLfloat*' name='knots' type64='^f'/>
<arg declared_type64='GLint' name='stride' type64='i'/>
<arg declared_type64='GLfloat*' name='control' type64='^f'/>
<arg declared_type64='GLint' name='order' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluNurbsProperty'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg declared_type64='GLenum' name='property' type64='I'/>
<arg declared_type64='GLfloat' name='value' type64='f'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluNurbsSurface'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg declared_type64='GLint' name='sKnotCount' type64='i'/>
<arg declared_type64='GLfloat*' name='sKnots' type64='^f'/>
<arg declared_type64='GLint' name='tKnotCount' type64='i'/>
<arg declared_type64='GLfloat*' name='tKnots' type64='^f'/>
<arg declared_type64='GLint' name='sStride' type64='i'/>
<arg declared_type64='GLint' name='tStride' type64='i'/>
<arg declared_type64='GLfloat*' name='control' type64='^f'/>
<arg declared_type64='GLint' name='sOrder' type64='i'/>
<arg declared_type64='GLint' name='tOrder' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluOrtho2D'>
<arg declared_type64='GLdouble' name='left' type64='d'/>
<arg declared_type64='GLdouble' name='right' type64='d'/>
<arg declared_type64='GLdouble' name='bottom' type64='d'/>
<arg declared_type64='GLdouble' name='top' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluOrtho2DCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLdouble' name='left' type64='d'/>
<arg declared_type64='GLdouble' name='right' type64='d'/>
<arg declared_type64='GLdouble' name='bottom' type64='d'/>
<arg declared_type64='GLdouble' name='top' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluPartialDisk'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLdouble' name='inner' type64='d'/>
<arg declared_type64='GLdouble' name='outer' type64='d'/>
<arg declared_type64='GLint' name='slices' type64='i'/>
<arg declared_type64='GLint' name='loops' type64='i'/>
<arg declared_type64='GLdouble' name='start' type64='d'/>
<arg declared_type64='GLdouble' name='sweep' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluPartialDiskCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLUquadric*' name='qobj' type64='^{GLUquadric=}'/>
<arg declared_type64='GLdouble' name='innerRadiusd' type64='d'/>
<arg declared_type64='GLdouble' name='outerRadiusd' type64='d'/>
<arg declared_type64='GLint' name='slices' type64='i'/>
<arg declared_type64='GLint' name='loops' type64='i'/>
<arg declared_type64='GLdouble' name='startAngled' type64='d'/>
<arg declared_type64='GLdouble' name='sweepAngled' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluPerspective'>
<arg declared_type64='GLdouble' name='fovy' type64='d'/>
<arg declared_type64='GLdouble' name='aspect' type64='d'/>
<arg declared_type64='GLdouble' name='zNear' type64='d'/>
<arg declared_type64='GLdouble' name='zFar' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluPerspectiveCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLdouble' name='fovy' type64='d'/>
<arg declared_type64='GLdouble' name='aspect' type64='d'/>
<arg declared_type64='GLdouble' name='zNear' type64='d'/>
<arg declared_type64='GLdouble' name='zFar' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluPickMatrix'>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='delX' type64='d'/>
<arg declared_type64='GLdouble' name='delY' type64='d'/>
<arg declared_type64='GLint*' name='viewport' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluPickMatrixCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLdouble' name='x' type64='d'/>
<arg declared_type64='GLdouble' name='y' type64='d'/>
<arg declared_type64='GLdouble' name='delX' type64='d'/>
<arg declared_type64='GLdouble' name='delY' type64='d'/>
<arg declared_type64='GLint*' name='viewport' type64='^i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluProject'>
<arg declared_type64='GLdouble' name='objX' type64='d'/>
<arg declared_type64='GLdouble' name='objY' type64='d'/>
<arg declared_type64='GLdouble' name='objZ' type64='d'/>
<arg const='true' declared_type64='GLdouble*' name='model' type64='^d'/>
<arg const='true' declared_type64='GLdouble*' name='proj' type64='^d'/>
<arg const='true' declared_type64='GLint*' name='view' type64='^i'/>
<arg declared_type64='GLdouble*' name='winX' type64='^d'/>
<arg declared_type64='GLdouble*' name='winY' type64='^d'/>
<arg declared_type64='GLdouble*' name='winZ' type64='^d'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluPwlCurve'>
<arg declared_type64='GLUnurbs*' name='nurb' type64='^{GLUnurbs=}'/>
<arg declared_type64='GLint' name='count' type64='i'/>
<arg declared_type64='GLfloat*' name='data' type64='^f'/>
<arg declared_type64='GLint' name='stride' type64='i'/>
<arg declared_type64='GLenum' name='type' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluQuadricCallback'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLenum' name='which' type64='I'/>
<arg declared_type64='GLvoid (*)()' function_pointer='true' name='CallBackFunc' type64='^?'>
<retval declared_type64='GLvoid' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluQuadricDrawStyle'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLenum' name='draw' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluQuadricNormals'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLenum' name='normal' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluQuadricOrientation'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLenum' name='orientation' type64='I'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluQuadricTexture'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLboolean' name='texture' type64='C'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluScaleImage'>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='wIn' type64='i'/>
<arg declared_type64='GLsizei' name='hIn' type64='i'/>
<arg declared_type64='GLenum' name='typeIn' type64='I'/>
<arg const='true' declared_type64='void*' name='dataIn' type64='^v'/>
<arg declared_type64='GLsizei' name='wOut' type64='i'/>
<arg declared_type64='GLsizei' name='hOut' type64='i'/>
<arg declared_type64='GLenum' name='typeOut' type64='I'/>
<arg declared_type64='GLvoid*' name='dataOut' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluScaleImageCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLenum' name='format' type64='I'/>
<arg declared_type64='GLsizei' name='wIn' type64='i'/>
<arg declared_type64='GLsizei' name='hIn' type64='i'/>
<arg declared_type64='GLenum' name='typeIn' type64='I'/>
<arg const='true' declared_type64='void*' name='dataIn' type64='^v'/>
<arg declared_type64='GLsizei' name='wOut' type64='i'/>
<arg declared_type64='GLsizei' name='hOut' type64='i'/>
<arg declared_type64='GLenum' name='typeOut' type64='I'/>
<arg declared_type64='void*' name='dataOut' type64='^v'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluSphere'>
<arg declared_type64='GLUquadric*' name='quad' type64='^{GLUquadric=}'/>
<arg declared_type64='GLdouble' name='radius' type64='d'/>
<arg declared_type64='GLint' name='slices' type64='i'/>
<arg declared_type64='GLint' name='stacks' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluSphereCTX'>
<arg declared_type64='struct _CGLContextObject*' name='ctx' type64='^{_CGLContextObject=^{__GLIContextRec}{__GLIFunctionDispatchRec}^{_CGLPrivateObject}^v}'/>
<arg declared_type64='GLUquadric*' name='qobj' type64='^{GLUquadric=}'/>
<arg declared_type64='GLdouble' name='radiusd' type64='d'/>
<arg declared_type64='GLint' name='slices' type64='i'/>
<arg declared_type64='GLint' name='stacks' type64='i'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluTessBeginContour'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluTessBeginPolygon'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<arg declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluTessCallback'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<arg declared_type64='GLenum' name='which' type64='I'/>
<arg declared_type64='GLvoid (*)()' function_pointer='true' name='CallBackFunc' type64='^?'>
<retval declared_type64='GLvoid' type64='v'/>
</arg>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluTessEndContour'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluTessEndPolygon'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluTessNormal'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<arg declared_type64='GLdouble' name='valueX' type64='d'/>
<arg declared_type64='GLdouble' name='valueY' type64='d'/>
<arg declared_type64='GLdouble' name='valueZ' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluTessProperty'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<arg declared_type64='GLenum' name='which' type64='I'/>
<arg declared_type64='GLdouble' name='data' type64='d'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluTessVertex'>
<arg declared_type64='GLUtesselator*' name='tess' type64='^{GLUtesselator=}'/>
<arg declared_type64='GLdouble*' name='location' type64='^d'/>
<arg declared_type64='GLvoid*' name='data' type64='^v'/>
<retval declared_type64='void' type64='v'/>
</function>
<function name='gluUnProject'>
<arg declared_type64='GLdouble' name='winX' type64='d'/>
<arg declared_type64='GLdouble' name='winY' type64='d'/>
<arg declared_type64='GLdouble' name='winZ' type64='d'/>
<arg const='true' declared_type64='GLdouble*' name='model' type64='^d'/>
<arg const='true' declared_type64='GLdouble*' name='proj' type64='^d'/>
<arg const='true' declared_type64='GLint*' name='view' type64='^i'/>
<arg declared_type64='GLdouble*' name='objX' type64='^d'/>
<arg declared_type64='GLdouble*' name='objY' type64='^d'/>
<arg declared_type64='GLdouble*' name='objZ' type64='^d'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function name='gluUnProject4'>
<arg declared_type64='GLdouble' name='winX' type64='d'/>
<arg declared_type64='GLdouble' name='winY' type64='d'/>
<arg declared_type64='GLdouble' name='winZ' type64='d'/>
<arg declared_type64='GLdouble' name='clipW' type64='d'/>
<arg const='true' declared_type64='GLdouble*' name='model' type64='^d'/>
<arg const='true' declared_type64='GLdouble*' name='proj' type64='^d'/>
<arg const='true' declared_type64='GLint*' name='view' type64='^i'/>
<arg declared_type64='GLdouble' name='nearPlane' type64='d'/>
<arg declared_type64='GLdouble' name='farPlane' type64='d'/>
<arg declared_type64='GLdouble*' name='objX' type64='^d'/>
<arg declared_type64='GLdouble*' name='objY' type64='^d'/>
<arg declared_type64='GLdouble*' name='objZ' type64='^d'/>
<arg declared_type64='GLdouble*' name='objW' type64='^d'/>
<retval declared_type64='GLint' type64='i'/>
</function>
<function_alias name='glActiveTextureARB' original='glActiveTexture'/>
<function_alias name='glBeginConditionalRender' original='glBeginConditionalRenderNV'/>
<function_alias name='glBeginQueryARB' original='glBeginQuery'/>
<function_alias name='glBeginTransformFeedback' original='glBeginTransformFeedbackEXT'/>
<function_alias name='glBindBufferARB' original='glBindBuffer'/>
<function_alias name='glBindBufferBase' original='glBindBufferBaseEXT'/>
<function_alias name='glBindBufferRange' original='glBindBufferRangeEXT'/>
<function_alias name='glBindFragDataLocation' original='glBindFragDataLocationEXT'/>
<function_alias name='glBlendColorEXT' original='glBlendColor'/>
<function_alias name='glBlendEquationEXT' original='glBlendEquation'/>
<function_alias name='glBlendEquationSeparate' original='glBlendEquationSeparateEXT'/>
<function_alias name='glBlendEquationSeparateATI' original='glBlendEquationSeparateEXT'/>
<function_alias name='glBlendFuncSeparateEXT' original='glBlendFuncSeparate'/>
<function_alias name='glBufferDataARB' original='glBufferData'/>
<function_alias name='glBufferSubDataARB' original='glBufferSubData'/>
<function_alias name='glClampColor' original='glClampColorARB'/>
<function_alias name='glClientActiveTextureARB' original='glClientActiveTexture'/>
<function_alias name='glColorMaski' original='glColorMaskIndexedEXT'/>
<function_alias name='glColorSubTableEXT' original='glColorSubTable'/>
<function_alias name='glColorTableEXT' original='glColorTable'/>
<function_alias name='glCompressedTexImage1DARB' original='glCompressedTexImage1D'/>
<function_alias name='glCompressedTexImage2DARB' original='glCompressedTexImage2D'/>
<function_alias name='glCompressedTexImage3DARB' original='glCompressedTexImage3D'/>
<function_alias name='glCompressedTexSubImage1DARB' original='glCompressedTexSubImage1D'/>
<function_alias name='glCompressedTexSubImage2DARB' original='glCompressedTexSubImage2D'/>
<function_alias name='glCompressedTexSubImage3DARB' original='glCompressedTexSubImage3D'/>
<function_alias name='glDeleteBuffersARB' original='glDeleteBuffers'/>
<function_alias name='glDeleteQueriesARB' original='glDeleteQueries'/>
<function_alias name='glDisablei' original='glDisableIndexedEXT'/>
<function_alias name='glDrawRangeElementsEXT' original='glDrawRangeElements'/>
<function_alias name='glEnablei' original='glEnableIndexedEXT'/>
<function_alias name='glEndConditionalRender' original='glEndConditionalRenderNV'/>
<function_alias name='glEndQueryARB' original='glEndQuery'/>
<function_alias name='glEndTransformFeedback' original='glEndTransformFeedbackEXT'/>
<function_alias name='glFogCoordPointerEXT' original='glFogCoordPointer'/>
<function_alias name='glFogCoorddEXT' original='glFogCoordd'/>
<function_alias name='glFogCoorddvEXT' original='glFogCoorddv'/>
<function_alias name='glFogCoordfEXT' original='glFogCoordf'/>
<function_alias name='glFogCoordfvEXT' original='glFogCoordfv'/>
<function_alias name='glGenBuffersARB' original='glGenBuffers'/>
<function_alias name='glGenQueriesARB' original='glGenQueries'/>
<function_alias name='glGetBooleani_v' original='glGetBooleanIndexedvEXT'/>
<function_alias name='glGetBufferParameterivARB' original='glGetBufferParameteriv'/>
<function_alias name='glGetBufferPointervARB' original='glGetBufferPointerv'/>
<function_alias name='glGetBufferSubDataARB' original='glGetBufferSubData'/>
<function_alias name='glGetColorTableEXT' original='glGetColorTable'/>
<function_alias name='glGetColorTableParameterfvEXT' original='glGetColorTableParameterfv'/>
<function_alias name='glGetColorTableParameterivEXT' original='glGetColorTableParameteriv'/>
<function_alias name='glGetCompressedTexImageARB' original='glGetCompressedTexImage'/>
<function_alias name='glGetFragDataLocation' original='glGetFragDataLocationEXT'/>
<function_alias name='glGetIntegeri_v' original='glGetIntegerIndexedvEXT'/>
<function_alias name='glGetQueryObjectivARB' original='glGetQueryObjectiv'/>
<function_alias name='glGetQueryObjectuivARB' original='glGetQueryObjectuiv'/>
<function_alias name='glGetQueryivARB' original='glGetQueryiv'/>
<function_alias name='glGetTexParameterIiv' original='glGetTexParameterIivEXT'/>
<function_alias name='glGetTexParameterIuiv' original='glGetTexParameterIuivEXT'/>
<function_alias name='glGetTransformFeedbackVarying' original='glGetTransformFeedbackVaryingEXT'/>
<function_alias name='glGetUniformuiv' original='glGetUniformuivEXT'/>
<function_alias name='glGetVertexAttribIiv' original='glGetVertexAttribIivEXT'/>
<function_alias name='glGetVertexAttribIuiv' original='glGetVertexAttribIuivEXT'/>
<function_alias name='glIsBufferARB' original='glIsBuffer'/>
<function_alias name='glIsEnabledi' original='glIsEnabledIndexedEXT'/>
<function_alias name='glIsQueryARB' original='glIsQuery'/>
<function_alias name='glLoadTransposeMatrixdARB' original='glLoadTransposeMatrixd'/>
<function_alias name='glLoadTransposeMatrixfARB' original='glLoadTransposeMatrixf'/>
<function_alias name='glMapBufferARB' original='glMapBuffer'/>
<function_alias name='glMultTransposeMatrixdARB' original='glMultTransposeMatrixd'/>
<function_alias name='glMultTransposeMatrixfARB' original='glMultTransposeMatrixf'/>
<function_alias name='glMultiDrawArraysEXT' original='glMultiDrawArrays'/>
<function_alias name='glMultiDrawElementsEXT' original='glMultiDrawElements'/>
<function_alias name='glMultiTexCoord1dARB' original='glMultiTexCoord1d'/>
<function_alias name='glMultiTexCoord1dvARB' original='glMultiTexCoord1dv'/>
<function_alias name='glMultiTexCoord1fARB' original='glMultiTexCoord1f'/>
<function_alias name='glMultiTexCoord1fvARB' original='glMultiTexCoord1fv'/>
<function_alias name='glMultiTexCoord1iARB' original='glMultiTexCoord1i'/>
<function_alias name='glMultiTexCoord1ivARB' original='glMultiTexCoord1iv'/>
<function_alias name='glMultiTexCoord1sARB' original='glMultiTexCoord1s'/>
<function_alias name='glMultiTexCoord1svARB' original='glMultiTexCoord1sv'/>
<function_alias name='glMultiTexCoord2dARB' original='glMultiTexCoord2d'/>
<function_alias name='glMultiTexCoord2dvARB' original='glMultiTexCoord2dv'/>
<function_alias name='glMultiTexCoord2fARB' original='glMultiTexCoord2f'/>
<function_alias name='glMultiTexCoord2fvARB' original='glMultiTexCoord2fv'/>
<function_alias name='glMultiTexCoord2iARB' original='glMultiTexCoord2i'/>
<function_alias name='glMultiTexCoord2ivARB' original='glMultiTexCoord2iv'/>
<function_alias name='glMultiTexCoord2sARB' original='glMultiTexCoord2s'/>
<function_alias name='glMultiTexCoord2svARB' original='glMultiTexCoord2sv'/>
<function_alias name='glMultiTexCoord3dARB' original='glMultiTexCoord3d'/>
<function_alias name='glMultiTexCoord3dvARB' original='glMultiTexCoord3dv'/>
<function_alias name='glMultiTexCoord3fARB' original='glMultiTexCoord3f'/>
<function_alias name='glMultiTexCoord3fvARB' original='glMultiTexCoord3fv'/>
<function_alias name='glMultiTexCoord3iARB' original='glMultiTexCoord3i'/>
<function_alias name='glMultiTexCoord3ivARB' original='glMultiTexCoord3iv'/>
<function_alias name='glMultiTexCoord3sARB' original='glMultiTexCoord3s'/>
<function_alias name='glMultiTexCoord3svARB' original='glMultiTexCoord3sv'/>
<function_alias name='glMultiTexCoord4dARB' original='glMultiTexCoord4d'/>
<function_alias name='glMultiTexCoord4dvARB' original='glMultiTexCoord4dv'/>
<function_alias name='glMultiTexCoord4fARB' original='glMultiTexCoord4f'/>
<function_alias name='glMultiTexCoord4fvARB' original='glMultiTexCoord4fv'/>
<function_alias name='glMultiTexCoord4iARB' original='glMultiTexCoord4i'/>
<function_alias name='glMultiTexCoord4ivARB' original='glMultiTexCoord4iv'/>
<function_alias name='glMultiTexCoord4sARB' original='glMultiTexCoord4s'/>
<function_alias name='glMultiTexCoord4svARB' original='glMultiTexCoord4sv'/>
<function_alias name='glPointParameterfARB' original='glPointParameterf'/>
<function_alias name='glPointParameterfvARB' original='glPointParameterfv'/>
<function_alias name='glProvokingVertexEXT' original='glProvokingVertex'/>
<function_alias name='glSampleCoverageARB' original='glSampleCoverage'/>
<function_alias name='glSecondaryColor3bEXT' original='glSecondaryColor3b'/>
<function_alias name='glSecondaryColor3bvEXT' original='glSecondaryColor3bv'/>
<function_alias name='glSecondaryColor3dEXT' original='glSecondaryColor3d'/>
<function_alias name='glSecondaryColor3dvEXT' original='glSecondaryColor3dv'/>
<function_alias name='glSecondaryColor3fEXT' original='glSecondaryColor3f'/>
<function_alias name='glSecondaryColor3fvEXT' original='glSecondaryColor3fv'/>
<function_alias name='glSecondaryColor3iEXT' original='glSecondaryColor3i'/>
<function_alias name='glSecondaryColor3ivEXT' original='glSecondaryColor3iv'/>
<function_alias name='glSecondaryColor3sEXT' original='glSecondaryColor3s'/>
<function_alias name='glSecondaryColor3svEXT' original='glSecondaryColor3sv'/>
<function_alias name='glSecondaryColor3ubEXT' original='glSecondaryColor3ub'/>
<function_alias name='glSecondaryColor3ubvEXT' original='glSecondaryColor3ubv'/>
<function_alias name='glSecondaryColor3uiEXT' original='glSecondaryColor3ui'/>
<function_alias name='glSecondaryColor3uivEXT' original='glSecondaryColor3uiv'/>
<function_alias name='glSecondaryColor3usEXT' original='glSecondaryColor3us'/>
<function_alias name='glSecondaryColor3usvEXT' original='glSecondaryColor3usv'/>
<function_alias name='glSecondaryColorPointerEXT' original='glSecondaryColorPointer'/>
<function_alias name='glTexParameterIiv' original='glTexParameterIivEXT'/>
<function_alias name='glTexParameterIuiv' original='glTexParameterIuivEXT'/>
<function_alias name='glTransformFeedbackVaryings' original='glTransformFeedbackVaryingsEXT'/>
<function_alias name='glUniform1ui' original='glUniform1uiEXT'/>
<function_alias name='glUniform1uiv' original='glUniform1uivEXT'/>
<function_alias name='glUniform2ui' original='glUniform2uiEXT'/>
<function_alias name='glUniform2uiv' original='glUniform2uivEXT'/>
<function_alias name='glUniform3ui' original='glUniform3uiEXT'/>
<function_alias name='glUniform3uiv' original='glUniform3uivEXT'/>
<function_alias name='glUniform4ui' original='glUniform4uiEXT'/>
<function_alias name='glUniform4uiv' original='glUniform4uivEXT'/>
<function_alias name='glUnmapBufferARB' original='glUnmapBuffer'/>
<function_alias name='glVertexAttribI1i' original='glVertexAttribI1iEXT'/>
<function_alias name='glVertexAttribI1iv' original='glVertexAttribI1ivEXT'/>
<function_alias name='glVertexAttribI1ui' original='glVertexAttribI1uiEXT'/>
<function_alias name='glVertexAttribI1uiv' original='glVertexAttribI1uivEXT'/>
<function_alias name='glVertexAttribI2i' original='glVertexAttribI2iEXT'/>
<function_alias name='glVertexAttribI2iv' original='glVertexAttribI2ivEXT'/>
<function_alias name='glVertexAttribI2ui' original='glVertexAttribI2uiEXT'/>
<function_alias name='glVertexAttribI2uiv' original='glVertexAttribI2uivEXT'/>
<function_alias name='glVertexAttribI3i' original='glVertexAttribI3iEXT'/>
<function_alias name='glVertexAttribI3iv' original='glVertexAttribI3ivEXT'/>
<function_alias name='glVertexAttribI3ui' original='glVertexAttribI3uiEXT'/>
<function_alias name='glVertexAttribI3uiv' original='glVertexAttribI3uivEXT'/>
<function_alias name='glVertexAttribI4bv' original='glVertexAttribI4bvEXT'/>
<function_alias name='glVertexAttribI4i' original='glVertexAttribI4iEXT'/>
<function_alias name='glVertexAttribI4iv' original='glVertexAttribI4ivEXT'/>
<function_alias name='glVertexAttribI4sv' original='glVertexAttribI4svEXT'/>
<function_alias name='glVertexAttribI4ubv' original='glVertexAttribI4ubvEXT'/>
<function_alias name='glVertexAttribI4ui' original='glVertexAttribI4uiEXT'/>
<function_alias name='glVertexAttribI4uiv' original='glVertexAttribI4uivEXT'/>
<function_alias name='glVertexAttribI4usv' original='glVertexAttribI4usvEXT'/>
<function_alias name='glVertexAttribIPointer' original='glVertexAttribIPointerEXT'/>
<function_alias name='glWindowPos2dARB' original='glWindowPos2d'/>
<function_alias name='glWindowPos2dvARB' original='glWindowPos2dv'/>
<function_alias name='glWindowPos2fARB' original='glWindowPos2f'/>
<function_alias name='glWindowPos2fvARB' original='glWindowPos2fv'/>
<function_alias name='glWindowPos2iARB' original='glWindowPos2i'/>
<function_alias name='glWindowPos2ivARB' original='glWindowPos2iv'/>
<function_alias name='glWindowPos2sARB' original='glWindowPos2s'/>
<function_alias name='glWindowPos2svARB' original='glWindowPos2sv'/>
<function_alias name='glWindowPos3dARB' original='glWindowPos3d'/>
<function_alias name='glWindowPos3dvARB' original='glWindowPos3dv'/>
<function_alias name='glWindowPos3fARB' original='glWindowPos3f'/>
<function_alias name='glWindowPos3fvARB' original='glWindowPos3fv'/>
<function_alias name='glWindowPos3iARB' original='glWindowPos3i'/>
<function_alias name='glWindowPos3ivARB' original='glWindowPos3iv'/>
<function_alias name='glWindowPos3sARB' original='glWindowPos3s'/>
<function_alias name='glWindowPos3svARB' original='glWindowPos3sv'/>
</signatures>
