<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='NetFSInterface' type64='{_NetFSInterface=&quot;_interface&quot;^v&quot;_factoryID&quot;^{__CFUUID}&quot;_refCount&quot;I}'>
<field declared_type64='void*' name='_interface' type64='^v'/>
<field declared_type64='CFUUIDRef' name='_factoryID' type64='^{__CFUUID=}'/>
<field declared_type64='UInt32' name='_refCount' type64='I'/>
</struct>
<struct name='NetFSMountInterface_V1' type64='{NetFSMountInterface_V1=&quot;_reserved&quot;^v&quot;QueryInterface&quot;^?&quot;AddRef&quot;^?&quot;Release&quot;^?&quot;CreateSessionRef&quot;^?&quot;GetServerInfo&quot;^?&quot;ParseURL&quot;^?&quot;CreateURL&quot;^?&quot;OpenSession&quot;^?&quot;EnumerateShares&quot;^?&quot;Mount&quot;^?&quot;Cancel&quot;^?&quot;CloseSession&quot;^?&quot;GetMountInfo&quot;^?}'>
<field declared_type64='void*' name='_reserved' type64='^v'/>
<field declared_type64='HRESULT (*)(void *, REFIID, LPVOID *)' function_pointer='true' name='QueryInterface' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='REFIID' type64='{_REFIID=CCCCCCCCCCCCCCCC}'/>
<arg declared_type64='LPVOID*' type64='^^v'/>
<retval declared_type64='HRESULT' type64='i'/>
</field>
<field declared_type64='ULONG (*)(void *)' function_pointer='true' name='AddRef' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='ULONG' type64='I'/>
</field>
<field declared_type64='ULONG (*)(void *)' function_pointer='true' name='Release' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='ULONG' type64='I'/>
</field>
<field declared_type64='netfsError (*)(void **)' function_pointer='true' name='CreateSessionRef' type64='^?'>
<arg declared_type64='void**' type64='^^v'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(CFURLRef, void *, CFDictionaryRef, CFDictionaryRef *)' function_pointer='true' name='GetServerInfo' type64='^?'>
<arg declared_type64='CFURLRef' type64='^{__CFURL=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFDictionaryRef*' type64='^^{__CFDictionary}'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(CFURLRef, CFDictionaryRef *)' function_pointer='true' name='ParseURL' type64='^?'>
<arg declared_type64='CFURLRef' type64='^{__CFURL=}'/>
<arg declared_type64='CFDictionaryRef*' type64='^^{__CFDictionary}'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(CFDictionaryRef, CFURLRef *)' function_pointer='true' name='CreateURL' type64='^?'>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFURLRef*' type64='^^{__CFURL}'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(CFURLRef, void *, CFDictionaryRef, CFDictionaryRef *)' function_pointer='true' name='OpenSession' type64='^?'>
<arg declared_type64='CFURLRef' type64='^{__CFURL=}'/>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFDictionaryRef*' type64='^^{__CFDictionary}'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(void *, CFDictionaryRef, CFDictionaryRef *)' function_pointer='true' name='EnumerateShares' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFDictionaryRef*' type64='^^{__CFDictionary}'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(void *, CFURLRef, CFStringRef, CFDictionaryRef, CFDictionaryRef *)' function_pointer='true' name='Mount' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='CFURLRef' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFDictionaryRef*' type64='^^{__CFDictionary}'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(void *)' function_pointer='true' name='Cancel' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(void *)' function_pointer='true' name='CloseSession' type64='^?'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
<field declared_type64='netfsError (*)(CFStringRef, CFDictionaryRef *)' function_pointer='true' name='GetMountInfo' type64='^?'>
<arg declared_type64='CFStringRef' type64='^{__CFString=}'/>
<arg declared_type64='CFDictionaryRef*' type64='^^{__CFDictionary}'/>
<retval declared_type64='netfsError' type64='i'/>
</field>
</struct>
<string_constant name='kNAUIOptionAllowUI' nsstring='true' value='AllowUI'/>
<string_constant name='kNAUIOptionForceUI' nsstring='true' value='ForceUI'/>
<string_constant name='kNAUIOptionKey' nsstring='true' value='UIOption'/>
<string_constant name='kNAUIOptionNoUI' nsstring='true' value='NoUI'/>
<string_constant name='kNetFSAccessRightsKey' nsstring='true' value='AccessRights'/>
<string_constant name='kNetFSAllowLoopbackKey' nsstring='true' value='AllowLoopback'/>
<string_constant name='kNetFSAllowSubMountsKey' nsstring='true' value='AllowSubMounts'/>
<string_constant name='kNetFSAlreadyMountedKey' nsstring='true' value='AlreadyMounted'/>
<string_constant name='kNetFSAlternatePortKey' nsstring='true' value='AlternatePort'/>
<string_constant name='kNetFSAuthenticationInfoKey' nsstring='true' value='AuthenticationInfo'/>
<string_constant name='kNetFSAuthorityParamsKey' nsstring='true' value='AuthorityParams'/>
<string_constant name='kNetFSChangePasswordKey' nsstring='true' value='ChangePassword'/>
<string_constant name='kNetFSConnectedAsGuestKey' nsstring='true' value='MountedByGuest'/>
<string_constant name='kNetFSConnectedAsUserKey' nsstring='true' value='MountedByUser'/>
<string_constant name='kNetFSConnectedMultiUserKey' nsstring='true' value='ConnectedMultiUser'/>
<string_constant name='kNetFSConnectedWithAuthenticationInfoKey' nsstring='true' value='ConnectedWithAuthenticationInfo'/>
<string_constant name='kNetFSDisplayNameKey' nsstring='true' value='DisplayName'/>
<string_constant name='kNetFSForceNewSessionKey' nsstring='true' value='ForceNewSession'/>
<string_constant name='kNetFSGetAccessRightsKey' nsstring='true' value='GetAccessRights'/>
<string_constant name='kNetFSGuestOnlyKey' nsstring='true' value='GuestOnly'/>
<string_constant name='kNetFSHasPasswordKey' nsstring='true' value='HasPassword'/>
<string_constant name='kNetFSHostKey' nsstring='true' value='Host'/>
<string_constant name='kNetFSIsHiddenKey' nsstring='true' value='IsHidden'/>
<string_constant name='kNetFSMechTypesSupportedKey' nsstring='true' value='MechTypesSupported'/>
<string_constant name='kNetFSMountAtMountDirKey' nsstring='true' value='MountAtMountDir'/>
<string_constant name='kNetFSMountFlagsKey' nsstring='true' value='MountFlags'/>
<string_constant name='kNetFSMountPathKey' nsstring='true' value='MountPath'/>
<string_constant name='kNetFSMountedByGuestKey' nsstring='true' value='MountedByGuest'/>
<string_constant name='kNetFSMountedByKerberosKey' nsstring='true' value='MountedByKerberos'/>
<string_constant name='kNetFSMountedByUserKey' nsstring='true' value='MountedByUser'/>
<string_constant name='kNetFSMountedMultiUserKey' nsstring='true' value='MountedMultiUser'/>
<string_constant name='kNetFSMountedURLKey' nsstring='true' value='MountedURL'/>
<string_constant name='kNetFSMountedWithAuthenticationInfoKey' nsstring='true' value='MountedWithAuthenticationInfo'/>
<string_constant name='kNetFSNoMountAuthenticationKey' nsstring='true' value='NoMountAuthentication'/>
<string_constant name='kNetFSNoUserPreferencesKey' nsstring='true' value='NoUserPreferences'/>
<string_constant name='kNetFSOpenURLMountKey' nsstring='true' value='OpenURLMount'/>
<string_constant name='kNetFSPasswordKey' nsstring='true' value='Password'/>
<string_constant name='kNetFSPathKey' nsstring='true' value='Path'/>
<string_constant name='kNetFSPrinterShareKey' nsstring='true' value='PrinterShare'/>
<string_constant name='kNetFSSchemeKey' nsstring='true' value='Scheme'/>
<string_constant name='kNetFSServerDisplayNameKey' nsstring='true' value='ServerDisplayName'/>
<string_constant name='kNetFSSoftMountKey' nsstring='true' value='SoftMount'/>
<string_constant name='kNetFSSupportsChangePasswordKey' nsstring='true' value='SupportsChangePassword'/>
<string_constant name='kNetFSSupportsGuestKey' nsstring='true' value='SupportsGuest'/>
<string_constant name='kNetFSSupportsKerberosKey' nsstring='true' value='SupportsKerberos'/>
<string_constant name='kNetFSUseAuthenticationInfoKey' nsstring='true' value='UseAuthenticationInfo'/>
<string_constant name='kNetFSUseGuestKey' nsstring='true' value='Guest'/>
<string_constant name='kNetFSUseKerberosKey' nsstring='true' value='Kerberos'/>
<string_constant name='kNetFSUserNameKey' nsstring='true' value='UserName'/>
<enum name='ENETFSACCOUNTRESTRICTED' value64='-5999'/>
<enum name='ENETFSNOAUTHMECHSUPP' value64='-5997'/>
<enum name='ENETFSNOPROTOVERSSUPP' value64='-5996'/>
<enum name='ENETFSNOSHARESAVAIL' value64='-5998'/>
<enum name='ENETFSPWDNEEDSCHANGE' value64='-5045'/>
<enum name='ENETFSPWDPOLICY' value64='-5046'/>
<function name='NetFSCFStringtoCString'>
<arg declared_type64='CFStringRef' type64='^{__CFString=}'/>
<retval declared_type64='char*' type64='*'/>
</function>
<function name='NetFSCopyURLForRemountingVolume'>
<arg declared_type64='CFURLRef' name='localPathURL' type64='^{__CFURL=}'/>
<retval already_retained='true' declared_type64='CFURLRef' type64='^{__CFURL=}'/>
</function>
<function name='NetFSInterface_AddRef'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='ULONG' type64='I'/>
</function>
<function name='NetFSInterface_Release'>
<arg declared_type64='void*' type64='^v'/>
<retval declared_type64='ULONG' type64='I'/>
</function>
<function name='NetFSMountURLAsync'>
<arg declared_type64='CFURLRef' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef' name='mountpath' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef' name='user' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='passwd' type64='^{__CFString=}'/>
<arg declared_type64='CFMutableDictionaryRef' name='open_options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFMutableDictionaryRef' name='mount_options' type64='^{__CFDictionary=}'/>
<arg declared_type64='AsyncRequestID*' name='requestID' type64='^^v'/>
<arg declared_type64='dispatch_queue_t' name='dispatchq' type64='@'/>
<arg declared_type64='NetFSMountURLBlock' function_pointer='true' name='mount_report' type64='@?'>
<arg declared_type64='int' type64='i'/>
<arg declared_type64='AsyncRequestID' type64='^v'/>
<arg declared_type64='CFArrayRef' type64='^{__CFArray=}'/>
<retval declared_type64='void' type64='v'/>
</arg>
<retval declared_type64='int' type64='i'/>
</function>
<function name='NetFSMountURLCancel'>
<arg declared_type64='AsyncRequestID' name='requestID' type64='^v'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='NetFSMountURLProbe'>
<arg declared_type64='CFStringRef' name='hostname' type64='^{__CFString=}'/>
<retval declared_type64='CFStringRef' type64='^{__CFString=}'/>
</function>
<function name='NetFSMountURLSync'>
<arg declared_type64='CFURLRef' name='url' type64='^{__CFURL=}'/>
<arg declared_type64='CFURLRef' name='mountpath' type64='^{__CFURL=}'/>
<arg declared_type64='CFStringRef' name='user' type64='^{__CFString=}'/>
<arg declared_type64='CFStringRef' name='passwd' type64='^{__CFString=}'/>
<arg declared_type64='CFMutableDictionaryRef' name='open_options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFMutableDictionaryRef' name='mount_options' type64='^{__CFDictionary=}'/>
<arg declared_type64='CFArrayRef*' name='mountpoints' type64='^^{__CFArray}'/>
<retval declared_type64='int' type64='i'/>
</function>
<function name='NetFSQueryInterface'>
<arg declared_type64='void*' type64='^v'/>
<arg declared_type64='REFIID' name='iid' type64='{_REFIID=CCCCCCCCCCCCCCCC}'/>
<arg declared_type64='LPVOID*' name='ppv' type64='^^v'/>
<retval declared_type64='HRESULT' type64='i'/>
</function>
<function name='NetFS_CreateInterface'>
<arg declared_type64='CFUUIDRef' name='factoryID' type64='^{__CFUUID=}'/>
<arg declared_type64='void*' name='interfaceFTbl' type64='^v'/>
<retval declared_type64='NetFSInterface*' type64='^{_NetFSInterface=^v^{__CFUUID}I}'/>
</function>
</signatures>
